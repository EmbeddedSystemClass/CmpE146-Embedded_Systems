
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x0002b594 vaddr 0x0002b594 paddr 0x0002b594 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x0001b59c memsz 0x0001b59c flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x0002b59c align 2**16
         filesz 0x00000300 memsz 0x00000900 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         0001b594  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000300  2007c000  0002b59c  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000600  2007c300  0002b89c  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  0002b594  0002b594  0002b594  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   000658b0  00000000  00000000  0002c300  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000ff46  00000000  00000000  00091bb0  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001fa0  00000000  00000000  000a1af6  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00018738  00000000  00000000  000a3a96  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000f37d  00000000  00000000  000bc1ce  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  000cb54b  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  000cb5ca  2**0  CONTENTS, READONLY
 11 .debug_loc    0001b5c1  00000000  00000000  000cb5fb  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000036f0  00000000  00000000  000e6bbc  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00008210  00000000  00000000  000ea2ac  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
0002b594 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
000105d4 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
00010678 l     F .text	00000014 sys_clock_pll0_feed()
0001068c l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00010998 l     F .text	000000e8 nordic_transfer
00010a80 l     F .text	00000020 nordic_readRegister
00010aa0 l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00010e14 l     F .text	00000070 nrf_driver_init
00010f2c l     F .text	00000034 nrf_irq_callback
00010e84 l     F .text	00000050 nrf_driver_app_recv
00010ed4 l     F .text	00000058 nrf_driver_send
00010f60 l     F .text	00000022 nrf_driver_receive
00010f82 l     F .text	00000066 wireless_get_queued_pkt
00010fe8 l     F .text	00000028 nrf_driver_get_timer
2007c31c l     O .bss	00000004 g_ack_queue
2007c320 l     O .bss	00000004 g_nrf_activity_sem
2007c324 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 mesh.c
000110c8 l     F .text	00000026 mesh_incr_soft_timers_for_arr
000110f0 l     F .text	0000004c mesh_update_soft_timers
0001113c l     F .text	0000003c mesh_send_packet
00011178 l     F .text	00000034 mesh_send_retry_packet
000111ac l     F .text	00000024 mesh_find_rte_tbl_entry
000111d0 l     F .text	00000028 mesh_update_rte_scores
000111f8 l     F .text	00000040 mesh_get_pnd_pkt_slot
00011238 l     F .text	00000090 mesh_pending_packets_add
000112c8 l     F .text	00000058 mesh_get_rte_to_modify
00011320 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
0001175a l     F .text	0000001a mesh_send_ack
2007c328 l     O .bss	00000014 g_driver
2007c33c l     O .bss	00000001 g_error_mask
2007c33d l     O .bss	00000001 g_locked
2007c33e l     O .bss	00000090 g_mesh_pnd_pkts
2007c3ce l     O .bss	0000000c g_mesh_stats
2007c3da l     O .bss	00000018 g_our_name
2007c3f2 l     O .bss	00000048 g_our_pnd_pkts
2007c43a l     O .bss	0000000c g_pkt_hist
2007c446 l     O .bss	00000001 g_rpt_node
2007c447 l     O .bss	00000010 g_rte_table
2007c457 l     O .bss	00000001 s_next_packet_id.5115
2007c458 l     O .bss	00000004 s_prev_time_ms.5129
2007c08c l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 ff.c
00011af8 l     F .text	00000038 mem_cpy
00011b30 l     F .text	0000000e mem_set
00011b3e l     F .text	0000001e sum_sfn
00011b5c l     F .text	0000003a get_ldnumber
00011b96 l     F .text	000000c4 get_fileinfo
00011c5a l     F .text	00000046 sync_window.part.1
00011ca0 l     F .text	0000000c sync_window
00011cac l     F .text	00000074 sync_fs
00011d20 l     F .text	00000034 move_window
00011d54 l     F .text	0000004c check_fs
00011da0 l     F .text	0000021c find_volume
00011fbc l     F .text	0000003a validate
00011ff6 l     F .text	0000001a unlock_fs
000120cc l     F .text	00000080 dir_sdi
0001221e l     F .text	000000a0 create_chain
000122be l     F .text	000000ec dir_next
000123ac l     F .text	00000120 dir_find.part.9
000124cc l     F .text	00000270 follow_path
0001273c l     F .text	00000238 dir_register
00012974 l     F .text	0000005a dir_remove
000129d0 l     F .text	000000e8 dir_read.constprop.11
00012ab8 l     F .text	00000058 remove_chain
2007c45c l     O .bss	00000008 FatFs
2007c464 l     O .bss	00000002 Fsid
00024a20 l     O .text	00000080 ExCvt
00024aa0 l     O .text	0000000d LfnOfs
00024aae l     O .text	00000016 cst.6348
00024b08 l     O .text	00000016 vst.6347
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
00024b1e l     O .text	00000100 Tbl
00024c1e l     O .text	000001e0 tbl_lower.5775
00024dfe l     O .text	000001e0 tbl_upper.5776
00000000 l    df *ABS*	00000000 sd.c
00013c5c l     F .text	00000012 sys_get_uptime_ms
00013c70 l     F .text	00000030 ssp1_set_max_clock
00013ca0 l     F .text	00000014 ssp1_exchange_byte
2007c466 l     O .bss	00000001 g_card_type
2007c095 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
0001444c l     F .text	00000020 flash_get_mem_size_bytes()
0001446c l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
000144e0 l     F .text	000000ac ssp1_exchange_data
0001458c l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
000145b4 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
000145f8 l     F .text	00000040 flash_wait_for_ready()
0001484c l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c468 l     O .bss	00000004 g_sector_count
2007c46c l     O .bss	00000001 g_flash_capacity
2007c46e l     O .bss	00000002 g_flash_pagesize
00024fe8 l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c470 l     O .bss	00000080 g_ir_timings
2007c4f0 l     O .bss	00000002 g_signal_count
2007c4f4 l     O .bss	00000004 g_last_decoded_signal
00024ff8 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 c_tlm_stream.c
00014e0c l     F .text	000000d0 tlm_stream_for_each_component_var
00014edc l     F .text	0000001a tlm_stream_file_ptr
00014f78 l     F .text	0000000a tlm_stream_all_args
00000000 l    df *ABS*	00000000 c_tlm_comp.c
00014fb4 l     F .text	0000000e tlm_component_for_each_callback
00014fc2 l     F .text	00000010 tlm_component_find_by_name
2007c4f8 l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_tlm_var.c
00015088 l     F .text	0000001e tlm_variable_check_dup
000150a6 l     F .text	00000014 tlm_component_find_callback
00000000 l    df *ABS*	00000000 c_tlm_binary.c
0001577e l     F .text	00000052 get_tlm_one_comp
000157d0 l     F .text	00000050 cmp_tlm_one_comp
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 scheduler_task.cpp
2007c4fc l     O .bss	00000004 gpTaskList
2007c500 l     O .bss	00000008 gEnumObjects
00000000 l    df *ABS*	00000000 file_logger.c
00015ce0 l     F .text	00000048 logger_get_buffer_ptr
00015d28 l     F .text	000000b4 logger_write_to_file
00015ddc l     F .text	000000d0 logger_task
00015eac l     F .text	00000048 logger_write_log_message
2007c508 l     O .bss	00000002 g_blocked_calls
2007c50a l     O .bss	00000002 g_buffer_watermark
2007c50c l     O .bss	00000004 g_empty_buffer_queue
2007c510 l     O .bss	00000002 g_highest_file_write_time
2007c514 l     O .bss	00000010 g_logger_calls
2007c524 l     O .bss	00000004 g_write_buffer_queue
2007c528 l     O .bss	00000004 gp_file_buffer
2007c096 l     O .data	00000001 g_logger_printf_mask
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
0001621a l     F .text	00000024 for_each_recur_alarm_callback
0001623e l     F .text	0000005a for_each_alarm_callback
2007c52c l     O .bss	00000010 g_list_recur_alarms
2007c53c l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 memory.cpp
2007c540 l     O .bss	00000004 g_sbrk_calls
2007c544 l     O .bss	00000004 g_last_sbrk_ptr
2007c548 l     O .bss	00000004 g_next_heap_ptr
2007c54c l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00016a2a l     F .text	00000056 remap_fatfs_errors
00016a80 l     F .text	0000004c findslot
00016acc l     F .text	00000028 remap_handle
2007c550 l     O .bss	00000004 g_input_dev_fptr
2007c554 l     O .bss	00000004 g_output_dev_fptr
2007c558 l     O .bss	00000001 initialized.8352
2007c55c l     O .bss	00000060 openfiles
2007c5bc l     O .bss	00000004 slot.8318
2007c098 l     O .data	00000004 lastfh.8319
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c5c0 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 eint.c
000178b8 l     F .text	0000002c handle_eint_list
000178e4 l     F .text	00000038 eint3_enable.isra.0
2007c5c4 l     O .bss	00000004 gp_port0_falling_list
2007c5c8 l     O .bss	00000004 gp_port0_rising_list
2007c5cc l     O .bss	00000004 gp_port2_falling_list
2007c5d0 l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 adc.c
000179cc l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c5e8 l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_timers.c
00017ef4 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 can.c
00018028 l     F .text	00000032 CAN_tx_now
0001805c l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 port.c
00018128 l     F .text	00000012 prvTaskExitError
0001813c l     F .text	0000001a prvPortStartFirstTask
000181a0 l       .text	00000000 pxCurrentTCBConst2
00018220 l       .text	00000000 pxCurrentTCBConst
2007c5f0 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c5f8 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000183ea l     F .text	00000066 prvCopyDataToQueue
00018450 l     F .text	0000004a prvNotifyQueueSetContainer
0001849a l     F .text	00000028 prvCopyDataFromQueue
000184c2 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000189a2 l     F .text	0000002e prvResetRunTimeStatsInList
000189d0 l     F .text	00000028 prvIdleTask
000189f8 l     F .text	00000024 prvResetNextTaskUnblockTime
00018a1c l     F .text	0000008c prvAddCurrentTaskToDelayedList
00019184 l     F .text	0000005c prvListTasksWithinSingleList
2007c604 l     O .bss	00000004 pxDelayedTaskList
2007c608 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c60c l     O .bss	000000c8 pxReadyTasksLists
2007c6d4 l     O .bss	00000004 ulTaskSwitchedInTime
2007c6d8 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c6dc l     O .bss	00000004 uxPendedTicks
2007c6e0 l     O .bss	00000004 uxSchedulerSuspended
2007c6e4 l     O .bss	00000004 uxTaskNumber
2007c6e8 l     O .bss	00000004 uxTopReadyPriority
2007c6ec l     O .bss	00000014 xDelayedTaskList1
2007c700 l     O .bss	00000014 xDelayedTaskList2
2007c714 l     O .bss	00000004 xIdleTaskHandle
2007c718 l     O .bss	00000004 xNextTaskUnblockTime
2007c71c l     O .bss	00000004 xNumOfOverflows
2007c720 l     O .bss	00000014 xPendingReadyList
2007c734 l     O .bss	00000004 xSchedulerRunning
2007c738 l     O .bss	00000014 xSuspendedTaskList
2007c74c l     O .bss	00000004 xTickCount
2007c750 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 handlers.cpp
00019450 l     F .text	0000001c stream_tlm(char const*, void*)
00025e92 l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
0001a408 l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)
0001a444 l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
0001a464 l     F .text	00000114 wsTxHandler(str&, CharDev&, void*)
0001a578 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
0001a620 l     F .text	00000084 wsRxHandler(str&, CharDev&, void*)
0001aa50 l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
0001a824 l     F .text	0000022c wsFileTxHandler(str&, CharDev&, void*)
2007c770 l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c774 l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
2007c778 l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 terminal.cpp
0001ae04 l     F .text	00000040 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
0001b550 l     F .text	0000000c hl_print_line()
0001b55c l     F .text	0000002c ssp_set_max_clock
0001b588 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 ADCDriver.cpp
00000000 l    df *ABS*	00000000 PWMDriver.cpp
00000000 l    df *ABS*	00000000 LabGPIOInterrupts.cpp
00000000 l    df *ABS*	00000000 main.cpp
0001c2dc l     F .text	0000001c _GLOBAL__sub_I_rgb_ADC
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0001dd54 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001e57c l     F .text	000001c0 validate_structure
000273b0 l     O .text	00000030 DAYS_IN_MONTH
000273e0 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001fa90 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
00020128 l     F .text	00000042 sulp
000274a8 l     O .text	00000014 fpi.6129
000274bc l     O .text	00000014 fpinan.6165
000274d0 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00020dd8 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c8d4 l     O .bss	0000000b __tzname_dst
2007c8df l     O .bss	0000000b __tzname_std
2007c8ec l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
00027554 l     O .text	00000015 day_name.4714
00027569 l     O .text	00000024 mon_name.4715
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
00021738 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00022488 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0002295a l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2bc l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 gmtime_r.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00027790 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00023b2c l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
000243d6 l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e8 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c8f8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00017b48 g     F .text	0000001c Uart3::Uart3()
0002467c g     F .text	00000012 _malloc_usable_size_r
00019ef4 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
0001ec1c g     F .text	000000b8 __cvt
00016520 g     F .text	0000002e str::beginsWith(char const*) const
00010448 g     F .text	00000054 lpc_sys_setup_system_timer
2007c8a1 g     O .bss	00000001 rgb_PWM
000240a0 g     F .text	000000c6 _scanf_chars
0001c50c g     F .text	00000004 std::type_info::__is_function_p() const
000247a0 g     F .text	0000002c .hidden __aeabi_dcmpun
000177d4 g     F .text	000000d0 rtc_init
000234a2 g     F .text	00000042 __any_on
00022cb0 g     F .text	00000020 _isatty_r
00024764 g     F .text	00000012 .hidden __aeabi_dcmple
00016706 g     F .text	00000006 str::operator int() const
00020010 g     F .text	00000010 strcpy
00021678 g     F .text	0000002c asctime
0001c9e4 g     F .text	00000018 .hidden __ashldi3
00016b2c g     F .text	00000004 _getpid
0001f8f4 g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
00015850 g     F .text	0000001c tlm_binary_compare_one
00015c78 g     F .text	0000001c scheduler_add_task(scheduler_task*)
000246a0 g     F .text	0000007a .hidden __cmpdf2
000168e8 g     F .text	00000004 operator new[](unsigned int)
0001bda8 g     F .text	00000070 PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)
00022cf0 g     F .text	00000024 _lseek_r
00012026 g     F .text	000000a6 get_fat
00017708 g     F .text	0000001c RIT_IRQHandler
000114cc g     F .text	000000f8 mesh_form_pkt
000165b4 g     F .text	00000028 str::eraseFirst(int)
000166fe g     F .text	00000004 str::operator==(char const*) const
00015836 g     F .text	0000001a tlm_binary_get_one
000223f8 g     F .text	0000006a __sflags
000246a0 g     F .text	0000007a .hidden __eqdf2
0001bbec g     F .text	00000002 ADCDriver::ADCDriver()
0001483c g     F .text	00000010 flash_supports_metadata
00025388 g     O .text	00000009 typeinfo name for UartDev
2007c794 g     O .bss	000000fc gpio_intr_instance
000100cc g       .text	00000000 __section_table_start
00022b54 g     F .text	00000024 _gettimeofday_r
000181c4 g     F .text	00000014 vPortExitCritical
00020dd2 g     F .text	00000006 strtok_r
0001cd10 g     F .text	0000005a .hidden __floatdidf
00017c60  w    F .text	00000014 NordicStream::~NordicStream()
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c784  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001fdd0 g     F .text	00000024 _kill_r
0001f8c4 g     F .text	00000030 printf
0001049c g     F .text	0000002c sys_get_uptime_us
0001ff5a g     F .text	00000024 __sseek
0001ddc8 g     F .text	00000060 __sinit
00017b20  w    F .text	00000014 Uart3::~Uart3()
00019104 g     F .text	00000080 vTaskGetInfo
000214b8 g     F .text	000000a4 __swbuf_r
2007c8f0 g     O .bss	00000004 _daylight
000195ec g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c768  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001c404 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00027278 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00019f24 g     F .text	00000144 telemetryHandler(str&, CharDev&, void*)
0002542c  w    O .text	0000001c vtable for Uart3
0001dd9c g     F .text	0000002c __sfmoreglue
0002145c g     F .text	00000048 _vsiscanf_r
000169ac g     F .text	00000004 __malloc_unlock
00016048 g     F .text	00000138 logger_log
00014db6 g     F .text	00000030 I2C_Temp::getCelsius()
0001c894 g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001a5ac g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
00020d60 g     F .text	00000020 _strtod_r
0001d5f4 g     F .text	00000136 .hidden __divsf3
0001400c g     F .text	00000098 sd_read
000253e0  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
000224f2 g     F .text	0000002a __hexdig_fun
00025244  w    O .text	00000020 vtable for scheduler_task
0001738c g     F .text	0000006c UartDev::getChar(char*, unsigned int)
000253fc  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00017f14 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
0001e538 g     F .text	00000034 memmove
00010b2c g     F .text	00000008 nordic_clear_packet_sent_flag
0001fdf8 g     F .text	00000068 snprintf
2007c5ec  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001e3c0 g     F .text	0000001c __locale_ctype_ptr
00018708 g     F .text	00000080 xQueueGenericSendFromISR
00022d14 g     F .text	00000068 _Balloc
0001640c g     F .text	0000004c str::tokenize(char const*, int, ...)
0002b59c g       .ARM.exidx	00000000 __exidx_end
00020d80 g     F .text	00000052 __strtok_r
00017724 g     F .text	00000048 rtc_gettime
0001d72c g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
0001af78 g     F .text	00000070 terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
0001799c g     F .text	00000030 eint3_enable_port0
00010148  w    F .text	00000010 I2C1_IRQHandler
2007c78c g     O .bss	00000008 blue
000254b0  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
00016360 g     F .text	0000000e is_freertos_running
000158ea g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
00024690 g     F .text	0000008a .hidden __gtdf2
0001db00 g     F .text	0000000c __errno
00015c94 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
0002537c g     O .text	0000000c typeinfo for UartDev
000254dc g     O .text	00000020 typeinfo for NordicStream
00010704 g     F .text	000000b4 sys_clock_configure()
0001eafc g     F .text	00000064 _mallinfo_r
00019440 g     F .text	00000010 vRunTimeStatIsrExit
00022cd0 g     F .text	00000004 __localeconv_l
0001b634  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c600 g     O .bss	00000004 pxCurrentTCB
0001a068 g     F .text	00000038 learnIrHandler(str&, CharDev&, void*)
00013cb4 g     F .text	0000002e wait_ready
0001791c g     F .text	00000080 EINT3_IRQHandler
00014bdc g     F .text	00000064 IR_Sensor::decodeIrCode()
00010ae0 g     F .text	00000016 nordic_standby1_to_tx_mode1
000163e8 g     F .text	00000008 str::clear()
00017d44 g     F .text	00000040 Uart0::init(unsigned int, int, int)
000114b0 g     F .text	0000000c mesh_get_node_address
00014c40 g     F .text	00000034 IR_Sensor::init()
00022464 g     F .text	00000024 _fstat_r
00016684 g     F .text	00000040 str::trimStart(char const*)
00011774 g     F .text	0000002c mesh_get_routing_entry
2007c8fc g     O .bss	00000004 errno
00024168 g     F .text	000001ec _scanf_i
0001ff1e g     F .text	00000004 __seofread
0002b59c g       .ARM.exidx	00000000 _etext
00019504 g     F .text	000000e8 taskListHandler(str&, CharDev&, void*)
00010bc4 g     F .text	0000003e nordic_set_intr_signals
0002472c g     F .text	00000010 .hidden __aeabi_cdcmple
2007c5e0  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00010acc g     F .text	00000008 nordic_clear_all_intr_flags
00015cc8 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
00017046 g     F .text	00000018 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
0001d27c g     F .text	00000160 .hidden __aeabi_fadd
000163b8 g     F .text	00000026 str::~str()
0001d278 g     F .text	00000164 .hidden __subsf3
00013c38 g     F .text	00000024 ff_wtoupper
00026cec g     O .text	00000020 vtable for terminalTask
0002550c g     O .text	0000001c vtable for NordicStream
0001677c g     F .text	0000000c str::str(int)
000214a4 g     F .text	00000014 vsscanf
00024050 g     F .text	00000050 _vfiscanf_r
00015c74  w    F .text	00000004 scheduler_task::taskEntry()
0001c090 g     F .text	00000108 vRGB(void*)
0001bd48 g     F .text	00000002 PWMDriver::PWMDriver()
00010950 g     F .text	00000048 lpc_pclk
00010148  w    F .text	00000010 TIMER3_IRQHandler
00017fec g     F .text	00000014 I2C2::I2C2()
00010d3e g     F .text	0000000c nordic_set_rx_pipe0_addr
00017da0 g     F .text	00000024 UART0_IRQHandler
000194b8  w    F .text	0000004c Storage::getSDDrive()
00018264 g     F .text	00000030 xPortStartScheduler
0001e522 g     F .text	00000016 memcpy
00019004 g     F .text	00000020 vTaskPlaceOnEventList
000229a4 g     F .text	00000120 __hexnan
00017de0 g     F .text	000000c0 ssp1_dma_transfer_block
0002471c g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
0001fc0c g     F .text	0000015c setvbuf
0001946c  w    F .text	0000004c Storage::getFlashDrive()
00025448  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
0001dd48 g     F .text	0000000c _cleanup_r
0001c32c g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000235e8 g     F .text	000001e8 _svfprintf_r
0001cca0 g     F .text	00000022 .hidden __floatsidf
00018250  w    F .text	00000014 vPortSetupTimerInterrupt
000254fc g     O .text	0000000f typeinfo name for NordicStream
00010bb8 g     F .text	0000000c nordic_flush_rx_fifo
00024698 g     F .text	00000082 .hidden __ltdf2
0001be7c g     F .text	00000074 PWMDriver::pwmInitSingleEdgeMode(unsigned long)
00018224 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
00014374 g     F .text	00000026 disk_initialize
000114bc g     F .text	00000010 mesh_set_retry_count
0001c338 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001d7b8 g     F .text	00000000 .hidden __aeabi_uldivmod
000171a4  w    F .text	0000010a I2C_Base::i2cStateMachine()
0001f9ac g     F .text	00000010 puts
000272e4 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
0001834e g     F .text	0000001a vPortFree
0001ab70 g     F .text	000000b4 flashProgHandler(str&, CharDev&, void*)
00020f50 g     F .text	0000001a tolower
00024050 g     F .text	00000050 _vfscanf_r
0002341e g     F .text	00000050 __ratio
0001fbdc g     F .text	00000030 iscanf
0001bbf0 g     F .text	00000060 ADCDriver::adcInitBurstMode()
0001358e g     F .text	0000011e f_rename
00014d16 g     F .text	00000004 LED::init()
0001ad5c  w    F .text	0000004c terminalTask::~terminalTask()
000150bc g     F .text	0000007c tlm_variable_register
00013bb4 g     F .text	00000004 ff_del_syncobj
0002554c  w    O .text	00000007 typeinfo name for Uart0
0001e4a4 g     F .text	00000010 malloc
000175c0  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00014c74 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001fd70 g     F .text	00000050 _raise_r
00016ea8 g     F .text	00000010 _fstat
00017ea0 g     F .text	00000030 spi1_lock
0001d3e4 g     F .text	0000001c .hidden __aeabi_i2f
000276c8 g     O .text	000000c8 __mprec_tens
00019c44 g     F .text	000000b8 newFileHandler(str&, CharDev&, void*)
0001bef0 g     F .text	00000010 LabGPIOInterrupts::init()
00019cfc g     F .text	0000013c dcpHandler(str&, CharDev&, void*)
00021440 g     F .text	0000001c vsnprintf
000181e0 g     F .text	00000044 xPortPendSVHandler
0001d190 g     F .text	00000040 .hidden __fixunsdfsi
00018384 g     F .text	00000018 vListInsertEnd
00013e90 g     F .text	0000016c sd_initialize
00010d1c g     F .text	00000016 nordic_set_addr_width
0002384a g     F .text	0000003a __ssrefill_r
00010d4c g     F .text	000000c8 nordic_init
0001fdf4 g     F .text	00000004 _getpid_r
0002b594 g       .text	00000000 __symbol_table_end
0001439a g     F .text	00000010 disk_status
00011010 g     F .text	0000004c wireless_init
000244f4 g     F .text	0000002c strtoul
0001cc80 g     F .text	0000001e .hidden __aeabi_ui2d
00017f80 g     F .text	0000006c I2C2::init(unsigned int)
00022cd4 g     F .text	0000001c _localeconv_r
0001c53c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00022f38 g     F .text	00000012 __i2b
0001c378 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001d7e8 g     F .text	000002dc .hidden __udivmoddi4
00010c68 g     F .text	00000024 nordic_set_channel
0001c9fc g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001fbbc g     F .text	00000020 _sbrk_r
0001171c g     F .text	0000003e mesh_send
000196d4 g     F .text	00000198 logHandler(str&, CharDev&, void*)
00025464  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
00024354 g     F .text	00000024 _read_r
00026cdc g     O .text	0000000f typeinfo name for terminalTask
0001837e g     F .text	00000006 vListInitialiseItem
00015764 g     F .text	0000001a tlm_variable_get_value
0001441a g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
00024750 g     F .text	00000012 .hidden __aeabi_dcmplt
00017c96 g     F .text	00000044 NordicStream::getChar(char*, unsigned int)
0001db0c g     F .text	000000a4 _fclose_r
00018100 g     F .text	00000028 CAN_IRQHandler
0001dd24 g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
00015f48 g     F .text	0000000c logger_get_highest_file_write_time_ms
00010148  w    F .text	00000010 PLL1_IRQHandler
000253b8 g     O .text	00000009 typeinfo name for CharDev
00018294 g     F .text	00000014 rts_not_full_trace_init
00014ca4 g     F .text	00000038 LED_Display::init()
0001ccc4 g     F .text	0000003a .hidden __extendsfdf2
00023884 g     F .text	000002a8 __ssvfscanf_r
0001cfc0 g     F .text	000001d0 .hidden __aeabi_ddiv
00010148  w    F .text	00000010 SSP0_IRQHandler
00010c8c g     F .text	0000002c nordic_set_air_data_rate
0001ca08 g     F .text	00000276 .hidden __adddf3
00019b70 g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
00010148  w    F .text	00000010 CANAct_IRQHandler
000272a0 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
00016180 g     F .text	00000040 logger_log_raw
00011ac0 g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
000232dc g     F .text	000000a4 __b2d
0002b594 g       .text	00000000 __exidx_start
2007c0dc g     O .data	00000001 on_Mode
0001cd6c g     F .text	00000254 .hidden __aeabi_dmul
00010200 g     F .text	0000000c sys_get_boot_type
00016eb8 g     F .text	00000024 _isatty
0001c360 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010d32 g     F .text	0000000c nordic_set_tx_address
000168ec g     F .text	00000004 operator delete(void*)
000273a4 g     O .text	00000004 _global_impure_ptr
0001c550 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
000234e4 g     F .text	0000004c _realloc_r
00020030 g     F .text	0000004e strncasecmp
0001e184 g     F .text	00000048 __libc_init_array
00015b08 g     F .text	00000164 CommandProcessor::handleCommand(str&, CharDev&)
00013d94 g     F .text	0000004c xmit_datablock
000172e8 g     F .text	0000005c UartDev::putChar(char, unsigned int)
00014ff8 g     F .text	0000006c tlm_component_add
00010ba4 g     F .text	00000014 nordic_read_rx_fifo
0001a268 g     F .text	000001a0 i2cIoHandler(str&, CharDev&, void*)
00015f54 g     F .text	0000000c logger_get_num_buffers_watermark
000276a0 g     O .text	00000028 __mprec_bigtens
00022e20 g     F .text	0000007c __s2b
0001bfd0 g     F .text	0000009c LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)
0001dac8 g     F .text	0000000e abort
00016d08 g     F .text	0000014c _open
0001cc80 g     F .text	0000001e .hidden __floatunsidf
00014638 g     F .text	00000098 flash_initialize
00016878 g     F .text	0000006c _sbrk
00017c4c  w    F .text	00000014 NordicStream::~NordicStream()
000231a2 g     F .text	00000034 __mcmp
00018330 g     F .text	0000001e pvPortMalloc
00022b80 g     F .text	00000130 gmtime_r
0002546c  w    O .text	00000007 typeinfo name for Uart2
0001337e g     F .text	000000be f_unlink
00017d30  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
00016b30 g     F .text	00000004 _init
00010500  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00018000 g     F .text	00000028 I2C2_IRQHandler
00018368 g     F .text	00000016 vListInitialise
0001be18 g     F .text	00000048 PWMDriver::setDuty0()
2007c890 g     O .bss	00000008 green
00016b34 g     F .text	00000034 syscalls_init
00017b20  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
00015064 g     F .text	00000024 tlm_component_for_each
00020efc g     F .text	0000002c strtol
00017b88  w    F .text	00000014 Uart2::~Uart2()
0001df38 g     F .text	00000120 _fseeko_r
0001c9d8 g     F .text	0000000a std::terminate()
0001d1d0 g     F .text	0000009e .hidden __aeabi_d2f
00017658 g     F .text	00000078 CharDev::printf(char const*, ...)
0001705e g     F .text	00000018 I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)
00018d14 g     F .text	0000000c xTaskGetTickCount
000185e0 g     F .text	00000104 xQueueGenericSend
0001d278 g     F .text	00000164 .hidden __aeabi_fsub
00016298 g     F .text	000000ac RTC_IRQHandler
00020170 g     F .text	00000bf0 _strtod_l
0002297e g     F .text	00000026 __match
0001aef4 g     F .text	00000084 terminalTask::saveDiskTlm()
2007c900 g       .bss	00000000 _ebss
0001c564 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
0001090a g     F .text	00000006 __set_PSP
0001ae44 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00017608 g     F .text	00000050 CharDev::gets(char*, int, unsigned int)
0001736c g     F .text	00000020 UartDev::flush()
00021440 g     F .text	0000001c vsniprintf
0002721c g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
000210d6 g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
000200cc g     F .text	00000026 strrchr
00022e9c g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00010d08 g     F .text	00000014 nordic_set_payload_for_pipe
000191e0 g     F .text	00000098 uxTaskGetSystemState
000247cc g     F .text	0000004e .hidden __fixdfsi
2007c898 g     O .bss	00000008 red
0001dae0 g     F .text	00000010 calloc
00019328 g     F .text	00000070 xTaskPriorityDisinherit
00019bac g     F .text	0000003c rmHandler(str&, CharDev&, void*)
00017cdc g     F .text	00000040 NordicStream::NordicStream()
000147a4 g     F .text	00000044 flash_write_permanent_id
2007c5d8 g     O .bss	00000004 g_adc_result_queue
0001d410 g     F .text	0000007c .hidden __floatdisf
00025494  w    O .text	0000001c vtable for Uart2
0001b68c g     F .text	00000560 high_level_init()
000174ec g     F .text	00000028 UartDev::UartDev(unsigned int*)
000193b0 g     F .text	00000068 vTaskResetRunTimeStats
00016390 g     F .text	00000028 str::str(char*, int)
0001c50a g     F .text	00000002 std::type_info::~type_info()
000198ec g     F .text	00000100 catHandler(str&, CharDev&, void*)
000107b8 g     F .text	000000a8 sys_get_cpu_clock
00014b76  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
00010220 g     F .text	00000228 low_level_init()
2007c2b4 g     O .data	00000008 _tzname
0001b514  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
0001602c g     F .text	0000001c logger_set_printf
00019024 g     F .text	00000070 xTaskRemoveFromEventList
0001830c g     F .text	00000024 vApplicationMallocFailedHook
2007c2fc g     O .data	00000004 environ
00017d84 g     F .text	0000001c Uart0::Uart0()
00010620 g     F .text	00000058 isr_hard_fault_handler
0001c3da g     F .text	00000004 operator delete(void*, unsigned int)
0001670c g     F .text	00000014 str::operator[](int)
0001ca08 g     F .text	00000276 .hidden __aeabi_dadd
00024698 g     F .text	00000082 .hidden __ledf2
0001daf0 g     F .text	0000000e ctime
2007c788  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
00016ff0 g     F .text	00000028 I2C_Base::readReg(unsigned char, unsigned char)
00015916 g     F .text	0000002a c_list_for_each_elm
0001ffc2 g     F .text	0000001e strcat
00015886 g     F .text	00000038 c_list_insert_elm_end
00023064 g     F .text	0000009c __pow5mult
0001cd00 g     F .text	0000006a .hidden __aeabi_ul2d
00010b08 g     F .text	00000024 nordic_standby1_to_rx
00015168 g     F .text	000001ec tlm_variable_set_value
00010148  w    F .text	00000010 EINT1_IRQHandler
00010518 g     F .text	000000bc TIMER1_IRQHandler
00014d7c g     F .text	00000018 Switches::getSwitchValues()
00027344 g     O .text	00000020 __sf_fake_stderr
00025474  w    O .text	00000020 typeinfo for Uart2
0001fdf8 g     F .text	00000068 sniprintf
00015940 g     F .text	0000007c CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
0001c9c8 g     F .text	00000010 std::get_terminate()
0001681e g     F .text	0000001a str::operator+=(char)
0001b234  w    F .text	00000022 Uart0::getcharIntrDriven(char)
0001654e g     F .text	0000002e str::beginsWithIgnoreCase(char const*) const
00010b40 g     F .text	0000004c nordic_mode1_send_single_packet
00019e38 g     F .text	000000bc storageHandler(str&, CharDev&, void*)
00013d08 g     F .text	0000008c rcvr_datablock
00017bcc g     F .text	00000024 UART2_IRQHandler
00017344  w    F .text	00000014 UartDev::~UartDev()
00015138 g     F .text	00000030 tlm_variable_get_by_comp_and_name
000182a8 g     F .text	00000014 rts_not_full_trace_get
000117a0 g     F .text	0000001c mesh_get_num_routing_entries
00023530 g     F .text	000000b6 __ssputs_r
00011498 g     F .text	00000018 mesh_set_node_address
00019398 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00017d1c  w    F .text	00000014 Uart0::~Uart0()
0001c3a2 g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001c53c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00015c6c  w    F .text	00000004 scheduler_task::init()
000165dc g     F .text	0000001e str::eraseLast(int)
0002478c g     F .text	00000012 .hidden __aeabi_dcmpgt
0001c2f8 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c754  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
00023b58 g     F .text	00000024 __sfputs_r
00014d70 g     F .text	00000006 Light_Sensor::getRawValue()
0001dea0 g     F .text	00000002 __sfp_lock_acquire
0001e4e8 g     F .text	0000001c memchr
0001ed40  w    F .text	00000470 _printf_float
00017ed0 g     F .text	00000024 spi1_unlock
000190ac g     F .text	0000004c xTaskCheckForTimeOut
0001ea64 g     F .text	00000098 _free_r
0001bf88 g     F .text	00000024 LabGPIOInterrupts::setRisingEdge(bool)
000159bc g     F .text	000000a0 CommandProcessor::getRegisteredCommandList(CharDev&)
00024778 g     F .text	00000012 .hidden __aeabi_dcmpge
00017bb0 g     F .text	0000001c Uart2::Uart2()
0001650a g     F .text	00000016 str::firstIndexOf(char const*) const
0001a0a0  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
00010860 g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
000167d8 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
000237d0 g     F .text	0000007a _sungetc_r
0001b674  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00013060 g     F .text	00000024 f_close
00013ffc g     F .text	00000010 sd_status
0001ca04 g     F .text	0000027a .hidden __aeabi_dsub
0001e73c g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
00010b9c g     F .text	00000008 nordic_clear_packet_available_flag
00025544  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
00018d04 g     F .text	00000010 vTaskSuspendAll
00018c4c g     F .text	00000054 eTaskGetState
000200f2 g     F .text	00000036 strstr
2007c5dc  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
000272d4 g     O .text	0000000d typeinfo name for std::type_info
00018d20 g     F .text	0000000c xTaskGetTickCountFromISR
000158be g     F .text	0000002c c_list_get_elm_at
0001cd00 g     F .text	0000006a .hidden __floatundidf
00014830 g     F .text	0000000c flash_get_page_size
0001fa0c g     F .text	00000074 rand
00016c04 g     F .text	00000060 _lseek
0001c3fc g     F .text	00000006 __cxa_pure_virtual
00023100 g     F .text	000000a2 __lshift
0001afe8 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
0001d3e4 g     F .text	0000001c .hidden __floatsisf
000183ca g     F .text	00000020 uxListRemove
0001f8a0 g     F .text	00000024 _open_r
00015880 g     F .text	00000006 c_list_node_count
00014b6a  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
00014a9a g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00012cba g     F .text	00000170 f_read
00017cdc g     F .text	00000040 NordicStream::NordicStream()
0002007e g     F .text	00000024 strncmp
000179f0 g     F .text	00000048 ADC_IRQHandler
0001c464 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000108c0 g     F .text	00000018 uart0_getchar
00016796 g     F .text	00000042 str::printf(char const*, ...)
00016458 g     F .text	00000014 str::compareTo(char const*) const
000199ec g     F .text	00000184 lsHandler(str&, CharDev&, void*)
00022f4a g     F .text	00000118 __multiply
00013258 g     F .text	0000005e f_readdir
00010610 g     F .text	00000010 isr_register
0001a804  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
00019298 g     F .text	00000090 vTaskPriorityInherit
00013ba0 g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
0001d72c g     F .text	0000004c .hidden __aeabi_f2iz
00027410 g     O .text	00000060 __month_lengths
000163b8 g     F .text	00000026 str::~str()
000163de g     F .text	00000006 str::getLen() const
000200a2 g     F .text	0000002a strncpy
2007c8a4 g     O .bss	00000028 __malloc_current_mallinfo
000166c4 g     F .text	0000003a str::trimEnd(char const*)
00023380 g     F .text	0000009e __d2b
0001ff86 g     F .text	0000003c strcasecmp
2007c760  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
00018f4c g     F .text	000000b8 vTaskSwitchContext
0001c50a g     F .text	00000002 std::type_info::~type_info()
00017d84 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
000253c4 g     O .text	0000001c vtable for CharDev
0001c4e0 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001ada8  w    F .text	00000014 terminalTask::~terminalTask()
0001fa80 g     F .text	00000010 realloc
000175c4 g     F .text	00000028 CharDev::put(char const*, unsigned int)
000272f0 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
0001107c g     F .text	0000004c wireless_service
000244d0 g     F .text	00000024 _strtoul_r
000146d0 g     F .text	00000050 flash_read_sectors
00010b8c g     F .text	00000010 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
0001bd4c g     F .text	00000030 PWMDriver::pwmSelectPinCon(unsigned char)
00015f28 g     F .text	00000014 logger_get_logged_call_count
000163e4 g     F .text	00000004 str::getCapacity() const
0001d5f4 g     F .text	00000136 .hidden __aeabi_fdiv
000216f0 g     F .text	00000020 _close_r
2007c5e4  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001cca0 g     F .text	00000022 .hidden __aeabi_i2d
0001986c g     F .text	00000080 cpHandler(str&, CharDev&, void*)
0001161c g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00016edc g     F .text	00000108 I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
000172b0 g     F .text	00000038 I2C_Base::handleInterrupt()
0001e504 g     F .text	0000001e memcmp
2007c76c  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
00016874 g     F .text	00000004 str::operator=(char const*)
0001bd48 g     F .text	00000002 PWMDriver::PWMDriver()
0001e0cc g     F .text	0000009c _fwrite_r
00010148  w    F .text	00000010 USB_IRQHandler
0001d400 g     F .text	0000008c .hidden __floatundisf
0001c404 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001fea8 g     F .text	00000054 sscanf
0002159c g     F .text	000000dc __swsetup_r
0001b028 g     F .text	00000124 terminalTask::getCommand()
2007c5d4 g     O .bss	00000004 g_adc_mutex
000182d4 g     F .text	00000038 vApplicationStackOverflowHook
0001dac4  w    F .text	00000002 .hidden __aeabi_ldiv0
0001cfc0 g     F .text	000001d0 .hidden __divdf3
0001de28 g     F .text	00000078 __sfp
0002346e g     F .text	00000034 __copybits
0001c50c g     F .text	00000004 std::type_info::__is_pointer_p() const
00018d2c g     F .text	0000000c uxTaskGetNumberOfTasks
0001ac24 g     F .text	00000138 getFileHandler(str&, CharDev&, void*)
0001b618  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
0001d3dc g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c09c g     O .data	00000040 g_can_structs
000213e8 g     F .text	00000058 _vsnprintf_r
0001cd6c g     F .text	00000254 .hidden __muldf3
0001fefc g     F .text	00000022 __sread
00015acc g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
00014958 g     F .text	00000052 get_fattime
00016344 g     F .text	0000001c delay_us
00017358  w    F .text	00000014 UartDev::~UartDev()
00010c02 g     F .text	00000038 nordic_set_crc
000277dc g     O .text	00003db8 APP_SYM_TABLE
000108f0 g     F .text	0000001a uart0_puts
00017b88  w    F .text	00000014 Uart2::~Uart2()
2007c8a0 g     O .bss	00000001 rgb_ADC
000176d0 g     F .text	00000020 CharDev::CharDev()
000169a8 g     F .text	00000004 __malloc_lock
00027240 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
0001dcd0 g     F .text	00000054 _fflush_r
0001106c g     F .text	00000010 wireless_get_ack_pkt
000167fa g     F .text	00000024 str::insertAtEnd(char const*)
0001ea48 g     F .text	0000001c _calloc_r
000170e8 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
0001020c g     F .text	00000014 sys_get_boot_time
00027364 g     O .text	00000020 __sf_fake_stdin
000210d4 g     F .text	00000002 __tz_lock
00011ae4 g     F .text	00000014 mesh_get_stats
0001df24 g     F .text	00000010 fopen
000216a4 g     F .text	0000004c asctime_r
0001105c g     F .text	00000010 wireless_get_rx_pkt
0001e1cc g     F .text	00000024 localtime
0001e56c g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
0001c244 g     F .text	00000098 main
00025528  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
0001636e g     F .text	00000022 delay_ms
00016788 g     F .text	0000000e str::reserve(int)
00010abe g     F .text	0000000e nordic_is_tx_fifo_empty
00014d76 g     F .text	00000004 Switches::init()
000149aa g     F .text	000000f0 Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
000168f4 g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00010b34 g     F .text	0000000c nordic_flush_tx_fifo
0001d410 g     F .text	0000007c .hidden __aeabi_l2f
0001f9bc g     F .text	00000050 srand
00015c94 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
000174ec g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001708c g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00012fd6 g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014c8c g     F .text	00000018 LED_Display::setRightDigit(char)
000117bc g     F .text	000002d0 mesh_service
0001839c g     F .text	0000002e vListInsert
0001b1fc  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
0001ff7e g     F .text	00000008 __sclose
000168f0 g     F .text	00000004 operator delete[](void*)
000164fc g     F .text	0000000e str::containsIgnoreCase(char const*) const
0001dbb0 g     F .text	00000010 fclose
2007c75c  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
00020ed8 g     F .text	00000024 _strtol_r
0001d1d0 g     F .text	0000009e .hidden __truncdfsf2
00017a38 g     F .text	00000074 adc0_init
00022ac4 g     F .text	00000080 _findenv_r
000277dc g       .text	00000000 __init_array_end
00018180 g     F .text	00000024 vPortSVCHandler
00021850 g     F .text	00000ba8 _dtoa_r
0001eb60 g     F .text	000000bc _malloc_r
0002155c g     F .text	0000001a __ascii_wctomb
00020f28 g     F .text	00000028 time
000115c4 g     F .text	00000058 mesh_send_formed_pkt
000136ac g     F .text	000004f4 f_mkfs
0001cd10 g     F .text	0000005a .hidden __aeabi_l2d
00014d1c g     F .text	00000050 LED::setAll(unsigned char)
0001657c g     F .text	00000038 str::beginsWithWholeWordIgnoreCase(char const*, char) const
00012b10 g     F .text	0000007c f_mount
00024520 g     F .text	00000072 __submore
0002467a g     F .text	00000002 __env_unlock
00027210 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00014bc0 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001e058 g     F .text	00000038 _fwalk
0001b14c g     F .text	000000b0 terminalTask::run(void*)
00014b22 g     F .text	00000048 Storage::append(char const*, void const*, unsigned int, unsigned int)
000131d2 g     F .text	00000086 f_opendir
00018924 g     F .text	00000068 xQueueReceiveFromISR
0001d400 g     F .text	0000008c .hidden __aeabi_ul2f
0001bf00 g     F .text	00000088 LabGPIOInterrupts::handle_interrupt()
000140a4 g     F .text	000000b4 sd_write
000185ac g     F .text	00000032 xQueueGenericCreate
0002540c  w    O .text	00000020 typeinfo for Uart3
0001d48c g     F .text	00000168 .hidden __mulsf3
00015ef4 g     F .text	00000034 logger_send_flush_request
00010108  w    F .text	00000010 isr_mem_fault
00017018 g     F .text	0000001a I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
000210d8 g     F .text	0000000c _tzset_unlocked
0001fffc g     F .text	00000014 strcmp
0001fea8 g     F .text	00000054 siscanf
0001a0c0 g     F .text	000001a8 healthHandler(str&, CharDev&, void*)
0001ae44 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00015a5c g     F .text	00000070 CommandProcessor::getHelpText(str&, CharDev&)
00010c3a g     F .text	00000018 nordic_power_up
00016b00 g     F .text	0000000c sys_set_inchar_func
0001214c g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
000246a0 g     F .text	0000007a .hidden __nedf2
000253b0 g     O .text	00000008 typeinfo for CharDev
0001ad5c  w    F .text	0000004c terminalTask::~terminalTask()
0001b65c  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001f8c4 g     F .text	00000030 iprintf
00013bde g     F .text	0000001e ff_rel_grant
00017b48 g     F .text	0000001c Uart3::Uart3()
0001c418 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00018e44 g     F .text	000000d8 xTaskResumeAll
00023da8 g     F .text	000002a8 __svfiscanf_r
00013084 g     F .text	0000014e f_lseek
0001fe60 g     F .text	00000048 sprintf
00017344  w    F .text	00000014 UartDev::~UartDev()
00018ca0 g     F .text	00000064 vTaskStartScheduler
0001ecd4 g     F .text	0000006a __exponent
00025404  w    O .text	00000007 typeinfo name for Uart3
00014ba0 g     F .text	00000020 Acceleration_Sensor::init()
0001c3f6 g     F .text	00000006 __cxa_guard_release
000176d0 g     F .text	00000020 CharDev::CharDev()
00021578 g     F .text	00000024 _write_r
00025394 g     O .text	0000001c vtable for UartDev
000173f8 g     F .text	00000034 UartDev::setBaudRate(unsigned int)
0001fbdc g     F .text	00000030 scanf
2007c758  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001d270 g     F .text	0000016c .hidden __aeabi_frsub
00027318 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00016af4 g     F .text	0000000c sys_set_outchar_func
0001492c g     F .text	0000002c flash_chip_erase
0001fd68 g     F .text	00000008 nanf
0001f1b0 g     F .text	000000ee _printf_common
00017aac g     F .text	00000074 adc0_get_reading
2007c0e4 g     O .data	00000004 _impure_ptr
000161de g     F .text	0000003c u0_dbg_printf
0001dbc0 g     F .text	00000110 __sflush_r
0001d48c g     F .text	00000168 .hidden __aeabi_fmul
00025574  w    O .text	0000001c vtable for Uart0
0001df34 g     F .text	00000004 _fseek_r
000277d8 g       .text	00000000 __preinit_array_end
000235e8 g     F .text	000001e8 _svfiprintf_r
0001faa4 g     F .text	00000118 __srefill_r
00013ce4 g     F .text	00000024 power_off
00014de8 g     F .text	00000024 I2C_Temp::getFarenheit()
0001e4c4 g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
00017fec g     F .text	00000014 I2C2::I2C2()
00010910 g     F .text	00000006 __set_MSP
00023294 g     F .text	00000048 __ulp
00015354 g     F .text	00000410 tlm_variable_print_value
0001b258 g     F .text	000002bc terminalTask::taskEntry()
00016390 g     F .text	00000028 str::str(char*, int)
00017b34  w    F .text	00000014 Uart3::~Uart3()
00017b9c  w    F .text	00000014 Uart2::~Uart2()
000190f8 g     F .text	0000000c vTaskMissedYield
00010ad4 g     F .text	0000000c nordic_queue_tx_fifo
0001c198 g     F .text	000000ac vDisplay(void*)
00017c4c  w    F .text	00000014 NordicStream::~NordicStream()
00026cd0 g     O .text	0000000c typeinfo for terminalTask
2007c900 g       .bss	00000000 _pvHeapStart
000108d8 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001ea34 g     F .text	00000014 mallinfo
00017032 g     F .text	00000014 I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)
000161c0 g     F .text	0000001e u0_dbg_put
0001646c g     F .text	00000010 str::compareToIgnoreCase(char const*) const
0001742c g     F .text	000000c0 UartDev::handleInterrupt()
00017076 g     F .text	00000014 I2C_Base::checkDeviceResponse(unsigned char)
000213e8 g     F .text	00000058 _vsniprintf_r
00014f84 g     F .text	0000001c tlm_stream_all
0001898c g     F .text	00000012 uxQueueMessagesWaiting
000187f0 g     F .text	00000134 xQueueGenericReceive
0001d190 g     F .text	00000040 .hidden __aeabi_d2uiz
0001708c g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c8f4 g     O .bss	00000004 _timezone
0001e1f0 g     F .text	000001c8 localtime_r
00013de0 g     F .text	0000008c send_cmd
0001c338 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001bcf0 g     F .text	00000058 ADCDriver::readADCVoltageByChannel(unsigned char)
00017d1c  w    F .text	00000014 Uart0::~Uart0()
00018d38 g     F .text	0000010c xTaskIncrementTick
00023884 g     F .text	000002a8 __ssvfiscanf_r
00010c52 g     F .text	00000016 nordic_power_down
0001776c g     F .text	00000068 rtc_settime
000165fa g     F .text	00000038 str::eraseAfter(int, int)
2007c764  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00012010 g     F .text	00000016 clust2sect
0001c9e4 g     F .text	00000018 .hidden __aeabi_llsl
000104c8 g     F .text	00000038 sys_get_mem_info_str
000254d4  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
0001e3dc g     F .text	00000048 __swhatbuf_r
2007c0e0 g     O .data	00000004 __cxxabiv1::__terminate_handler
00015f3c g     F .text	0000000c logger_get_blocked_call_count
00010916 g     F .text	00000006 __set_BASEPRI
0002473c g     F .text	00000012 .hidden __aeabi_dcmpeq
00017dc4 g     F .text	0000001c ssp1_dma_init
0001e168 g     F .text	0000001c fwrite
00017bb0 g     F .text	0000001c Uart2::Uart2()
0002726c g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00018540 g     F .text	0000006c xQueueGenericReset
00016c64 g     F .text	000000a4 _write
2007c300 g       .data	00000000 _edata
0001c602 g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014cdc g     F .text	0000003a LED_Display::setNumber(char)
00011a8c g     F .text	00000034 mesh_get_pnd_pkt_count
00014ade g     F .text	00000044 Storage::write(char const*, void*, unsigned int, unsigned int)
00014810 g     F .text	00000020 flash_get_page_count
0001c06c g     F .text	00000014 vCall_Back()
00016fe4 g     F .text	0000000c I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
0001bd7c g     F .text	0000002a PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)
00012e2a g     F .text	000001ac f_write
00016702 g     F .text	00000004 str::operator()() const
0001be60 g     F .text	0000001c PWMDriver::setFrequency(unsigned long)
00014d94 g     F .text	00000022 I2C_Temp::init()
00014720 g     F .text	0000004c flash_write_sectors
000210e4 g     F .text	00000304 _tzset_unlocked_r
00018aa8 g     F .text	000001a4 xTaskCreate
0002145c g     F .text	00000048 _vsscanf_r
0001d778 g     F .text	0000003e .hidden __aeabi_f2uiz
000176f0 g     F .text	00000018 CharDev::~CharDev()
0001647c g     F .text	00000080 str::firstIndexOfIgnoreCase(char const*) const
00017c74 g     F .text	00000022 NordicStream::putChar(char, unsigned int)
00017bf0 g     F .text	0000005c NordicStream::flush()
0001ff22 g     F .text	00000038 __swrite
000168e4 g     F .text	00000004 operator new(unsigned int)
00012b8c g     F .text	0000012e f_open
00016632 g     F .text	00000028 str::erase(char const*)
0001c5d8  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000143e2 g     F .text	00000038 disk_write
0001476c g     F .text	00000036 flash_ioctl
00010cdc g     F .text	0000002c nordic_set_auto_transmit_options
0001586c g     F .text	00000014 c_list_create
00023b7c g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00015c70  w    F .text	00000004 scheduler_task::regTlm()
00019be8 g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001e090 g     F .text	0000003c _fwalk_reent
0001c42c g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001d3dc g     F .text	00000024 .hidden __floatunsisf
000231d6 g     F .text	000000be __mdiff
000176f0 g     F .text	00000018 CharDev::~CharDev()
000247cc g     F .text	0000004e .hidden __aeabi_d2iz
0001c9be g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00013bb8 g     F .text	00000026 ff_req_grant
000214a4 g     F .text	00000014 vsiscanf
2007c780  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
0001c080 g     F .text	0000000c c_eint3_handler()
00016b0c g     F .text	00000010 _kill
00016720 g     F .text	0000004c str::reAllocateMem(int)
00010148  w    F .text	00000010 DMA_IRQHandler
0001adbc g     F .text	00000048 terminalTask::regTlm()
00014fd4 g     F .text	00000024 tlm_component_get_by_name
00018f1c g     F .text	00000030 vTaskDelay
0001b21c  w    F .text	00000018 Uart0::putcharIntrDriven(char)
0001dea2 g     F .text	00000002 __sfp_lock_release
0001717c  w    F .text	00000028 I2C_Base::setStop()
00027384 g     O .text	00000020 __sf_fake_stdout
0001bfac g     F .text	00000024 LabGPIOInterrupts::setFallingEdge(bool)
0001fe60 g     F .text	00000048 siprintf
00024378 g     F .text	0000005e __sccl
0001dad6 g     F .text	00000008 atoi
000169b0 g     F .text	0000007a _gettimeofday
00019278 g     F .text	00000020 xTaskGetSchedulerState
0002758d g     O .text	00000101 _ctype_
00016b68 g     F .text	0000009c _read
000277d8 g       .text	00000000 __init_array_start
0001dac4  w    F .text	00000002 .hidden __aeabi_idiv0
00019610 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
000247a0 g     F .text	0000002c .hidden __unorddf2
0001bc50 g     F .text	000000a0 ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)
0002523c  w    O .text	00000008 typeinfo for scheduler_task
00015f60 g     F .text	000000cc logger_init
0001343c g     F .text	00000152 f_mkdir
0001d778 g     F .text	0000003e .hidden __fixunssfsi
00014fa0 g     F .text	00000014 tlm_stream_one_file
000163f0 g     F .text	0000001c str::scanf(char const*, ...)
0001dea4 g     F .text	00000080 _fopen_r
00016b1c g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
00014d6c g     F .text	00000004 Light_Sensor::init()
0001e424 g     F .text	00000080 __smakebuf_r
0001677c g     F .text	0000000c str::str(int)
00020020 g     F .text	00000010 strlen
000143aa g     F .text	00000038 disk_read
0001815c g     F .text	00000024 pxPortInitialiseStack
0001f2a0 g     F .text	00000240 _printf_i
0001e3b8 g     F .text	00000006 __locale_ctype_ptr_l
000272cc g     O .text	00000008 typeinfo for std::type_info
000175ec g     F .text	0000001c CharDev::putline(char const*, unsigned int)
00020f6a g     F .text	0000001a toupper
0002472c g     F .text	00000010 .hidden __aeabi_cdcmpeq
00024690 g     F .text	0000008a .hidden __gedf2
00017b64 g     F .text	00000024 UART3_IRQHandler
0002251c g     F .text	0000043e __gethex
2007c8d0 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001a6a4 g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
00021710 g     F .text	00000028 div
0001ffe0 g     F .text	0000001c strchr
000132b6 g     F .text	000000c8 f_getfree
00019094 g     F .text	00000018 vTaskSetTimeOutState
00013bfc g     F .text	0000003c ff_convert
0001ccc4 g     F .text	0000003a .hidden __aeabi_f2d
00016838 g     F .text	0000003c str::copyFrom(char const*)
000181a4 g     F .text	00000020 vPortEnterCritical
00015820 g     F .text	00000016 tlm_binary_get_size_one
0001665a g     F .text	0000002a str::eraseFirstWords(int, char)
000277dc g       .text	00000000 __symbol_table_start
00013e6c g     F .text	00000024 sd_update_card_status
000147e8 g     F .text	00000028 flash_read_permanent_id
000148d8 g     F .text	00000054 flash_get_page_write_count
2007c8cc g     O .bss	00000004 __malloc_free_list
0001676c  w    F .text	00000010 str::init(int)
2007c77c  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00010af8 g     F .text	00000010 nordic_rx_to_Stanby1
0001899e g     F .text	00000004 uxQueueMessagesWaitingFromISR
00024678 g     F .text	00000002 __env_lock
000178a4 g     F .text	00000014 rtc_get_date_time_str
00014ef8 g     F .text	00000080 tlm_stream_one
0001ca04 g     F .text	0000027a .hidden __subdf3
00023b7c g     F .text	0000022c _vfprintf_r
000277d8 g       .text	00000000 __preinit_array_start
0001bbec g     F .text	00000002 ADCDriver::ADCDriver()
00025229  w    O .text	00000011 typeinfo name for scheduler_task
00022eda g     F .text	0000005e __lo0bits
00023da8 g     F .text	000002a8 __svfscanf_r
00020f84 g     F .text	00000150 __tzcalc_limits
00019418 g     F .text	00000028 vRunTimeStatIsrEntry
00024594 g     F .text	000000e4 _ungetc_r
0001c510 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
0001c3de g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
000186e4 g     F .text	00000024 xQueueCreateMutex
0001d27c g     F .text	00000160 .hidden __addsf3
2007c148 g     O .data	0000016c __global_locale
00010cb8 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
00018788 g     F .text	00000068 xQueueGiveFromISR
00022b78 g     F .text	00000008 __gettzinfo
0001fdc0 g     F .text	00000010 raise
00016e54 g     F .text	00000054 _close
0001e4b4 g     F .text	00000010 free
00025554  w    O .text	00000020 typeinfo for Uart0
0001f4e0  w    F .text	000003c0 _scanf_float
00014158 g     F .text	0000021c sd_ioctl
00022daa g     F .text	00000076 __multadd
0001c34c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00022d7c g     F .text	0000002e _Bfree
000182bc g     F .text	00000014 rts_not_full_trace_reset
00017514 g     F .text	000000ac UartDev::init(unsigned int, unsigned int, int, int)
00022b44 g     F .text	0000000e _getenv_r
0001091c g     F .text	00000034 lpc_pconp
000182d0 g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	81 81 01 00 39 01 01 00 00 00 00 00 e1 81 01 00     ....9...........
   1003c:	59 01 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     Y...............
   1004c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1005c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1006c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1007c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1008c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1009c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100ac:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100bc:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	0002b59c 	.word	0x0002b59c
   100d0:	2007c000 	.word	0x2007c000
   100d4:	00000300 	.word	0x00000300

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	00000600 	.word	0x00000600

000100e0 <isr_hard_fault>:
isr_hard_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 ba98 	b.w	10620 <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 ba94 	b.w	10620 <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f006 f85f 	bl	161c0 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	00024996 	.word	0x00024996

00010108 <isr_mem_fault>:
isr_mem_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f006 f858 	bl	161c0 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	000249a1 	.word	0x000249a1

00010118 <isr_bus_fault>:
isr_bus_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f006 f850 	bl	161c0 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	000249ac 	.word	0x000249ac

00010128 <isr_usage_fault>:
isr_usage_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f006 f848 	bl	161c0 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	000249b7 	.word	0x000249b7

00010138 <isr_debug_mon>:
isr_debug_mon():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f006 f840 	bl	161c0 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	000249c4 	.word	0x000249c4

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f006 f838 	bl	161c0 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	000249d2 	.word	0x000249d2

00010158 <isr_sys_tick>:
isr_sys_tick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f009 f95d 	bl	19418 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f008 f861 	bl	18224 <xPortSysTickHandler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f009 b96b 	b.w	19440 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 fbb8 	bl	1090a <__set_PSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 fbb8 	bl	10910 <__set_MSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f00d ffda 	bl	1e184 <__libc_init_array>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f826 	bl	10220 <low_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f00b fa5a 	bl	1b68c <high_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f00c f834 	bl	1c244 <main>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb3e 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f005 ffeb 	bl	161c0 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	000249e6 	.word	0x000249e6

00010200 <sys_get_boot_type>:
sys_get_boot_type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10200:	4b01      	ldr	r3, [pc, #4]	; (10208 <sys_get_boot_type+0x8>)
   10202:	7818      	ldrb	r0, [r3, #0]
   10204:	4770      	bx	lr
   10206:	bf00      	nop
   10208:	2007c30c 	.word	0x2007c30c

0001020c <sys_get_boot_time>:
sys_get_boot_time():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:127
rtc_t sys_get_boot_time()
{
    return g_rtc_boot_time;
   1020c:	4903      	ldr	r1, [pc, #12]	; (1021c <sys_get_boot_time+0x10>)
   1020e:	680b      	ldr	r3, [r1, #0]
   10210:	6003      	str	r3, [r0, #0]
   10212:	684b      	ldr	r3, [r1, #4]
   10214:	6043      	str	r3, [r0, #4]
   10216:	688b      	ldr	r3, [r1, #8]
   10218:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:128
}
   1021a:	4770      	bx	lr
   1021c:	2007c300 	.word	0x2007c300

00010220 <low_level_init()>:
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   10220:	b530      	push	{r4, r5, lr}
   10222:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10224:	f007 fad6 	bl	177d4 <rtc_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10228:	4668      	mov	r0, sp
   1022a:	f007 fa7b 	bl	17724 <rtc_gettime>
   1022e:	4c77      	ldr	r4, [pc, #476]	; (1040c <low_level_init()+0x1ec>)
   10230:	9b00      	ldr	r3, [sp, #0]
   10232:	6023      	str	r3, [r4, #0]
   10234:	9b01      	ldr	r3, [sp, #4]
   10236:	6063      	str	r3, [r4, #4]
   10238:	9b02      	ldr	r3, [sp, #8]
   1023a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   1023c:	f000 fa62 	bl	10704 <sys_clock_configure()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   10240:	f000 faba 	bl	107b8 <sys_get_cpu_clock>
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10244:	4b72      	ldr	r3, [pc, #456]	; (10410 <low_level_init()+0x1f0>)
   10246:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   1024a:	283c      	cmp	r0, #60	; 0x3c
   1024c:	4b71      	ldr	r3, [pc, #452]	; (10414 <low_level_init()+0x1f4>)
   1024e:	f200 809a 	bhi.w	10386 <low_level_init()+0x166>
   10252:	2829      	cmp	r0, #41	; 0x29
   10254:	f080 80a1 	bcs.w	1039a <low_level_init()+0x17a>
   10258:	2814      	cmp	r0, #20
   1025a:	f200 809b 	bhi.w	10394 <low_level_init()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1025e:	223a      	movs	r2, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   10260:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10262:	2308      	movs	r3, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10264:	2298      	movs	r2, #152	; 0x98
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10266:	496c      	ldr	r1, [pc, #432]	; (10418 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10268:	2000      	movs	r0, #0
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   1026a:	760b      	strb	r3, [r1, #24]
   1026c:	764b      	strb	r3, [r1, #25]
   1026e:	768b      	strb	r3, [r1, #26]
   10270:	f881 3020 	strb.w	r3, [r1, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10274:	4b69      	ldr	r3, [pc, #420]	; (1041c <low_level_init()+0x1fc>)
   10276:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1027a:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1027e:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   10282:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10286:	2290      	movs	r2, #144	; 0x90
   10288:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1028c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   10290:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10294:	2270      	movs	r2, #112	; 0x70
   10296:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1029a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1029e:	2258      	movs	r2, #88	; 0x58
   102a0:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   102a4:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   102a8:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   102ac:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   102b0:	2278      	movs	r2, #120	; 0x78
   102b2:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102b6:	22a0      	movs	r2, #160	; 0xa0
   102b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102bc:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102c0:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102c4:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102c8:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102cc:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102d0:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102d4:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102d8:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102dc:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102e0:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102e4:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102e8:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102ec:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102f0:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102f4:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102f8:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102fc:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   10300:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   10304:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   10308:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   1030c:	68cb      	ldr	r3, [r1, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   1030e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   10312:	041b      	lsls	r3, r3, #16
   10314:	0c1b      	lsrs	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10316:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1031a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1031e:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   10320:	f000 faf9 	bl	10916 <__set_BASEPRI>
__enable_fault_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10324:	b661      	cpsie	f
__enable_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10326:	b662      	cpsie	i
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10328:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1032c:	f000 fa98 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   10330:	483b      	ldr	r0, [pc, #236]	; (10420 <low_level_init()+0x200>)
   10332:	f006 fbdf 	bl	16af4 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10336:	483b      	ldr	r0, [pc, #236]	; (10424 <low_level_init()+0x204>)
   10338:	f006 fbe2 	bl	16b00 <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   1033c:	2300      	movs	r3, #0
   1033e:	4c3a      	ldr	r4, [pc, #232]	; (10428 <low_level_init()+0x208>)
   10340:	4619      	mov	r1, r3
   10342:	6820      	ldr	r0, [r4, #0]
   10344:	2202      	movs	r2, #2
   10346:	6880      	ldr	r0, [r0, #8]
   10348:	f00f fc60 	bl	1fc0c <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1034c:	2300      	movs	r3, #0
   1034e:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10350:	4c30      	ldr	r4, [pc, #192]	; (10414 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10352:	4619      	mov	r1, r3
   10354:	2202      	movs	r2, #2
   10356:	6840      	ldr	r0, [r0, #4]
   10358:	f00f fc58 	bl	1fc0c <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   1035c:	f006 fbea 	bl	16b34 <syscalls_init>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10360:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10364:	4d31      	ldr	r5, [pc, #196]	; (1042c <low_level_init()+0x20c>)
   10366:	f013 0f01 	tst.w	r3, #1
   1036a:	d01f      	beq.n	103ac <low_level_init()+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   1036c:	4830      	ldr	r0, [pc, #192]	; (10430 <low_level_init()+0x210>)
   1036e:	f000 fabf 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   10372:	2301      	movs	r3, #1
   10374:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10376:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1037a:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1037e:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   10382:	b005      	add	sp, #20
   10384:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10386:	2850      	cmp	r0, #80	; 0x50
   10388:	d90a      	bls.n	103a0 <low_level_init()+0x180>
   1038a:	2864      	cmp	r0, #100	; 0x64
   1038c:	d90b      	bls.n	103a6 <low_level_init()+0x186>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1038e:	f245 023a 	movw	r2, #20538	; 0x503a
   10392:	e765      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10394:	f241 023a 	movw	r2, #4154	; 0x103a
   10398:	e762      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   1039a:	f242 023a 	movw	r2, #8250	; 0x203a
   1039e:	e75f      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   103a0:	f243 023a 	movw	r2, #12346	; 0x303a
   103a4:	e75c      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   103a6:	f244 023a 	movw	r2, #16442	; 0x403a
   103aa:	e759      	b.n	10260 <low_level_init()+0x40>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   103ac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b0:	079b      	lsls	r3, r3, #30
   103b2:	d509      	bpl.n	103c8 <low_level_init()+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103b4:	481f      	ldr	r0, [pc, #124]	; (10434 <low_level_init()+0x214>)
   103b6:	f000 fa9b 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103ba:	2302      	movs	r3, #2
   103bc:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103be:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103c2:	f043 0302 	orr.w	r3, r3, #2
   103c6:	e7da      	b.n	1037e <low_level_init()+0x15e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103cc:	f013 0304 	ands.w	r3, r3, #4
   103d0:	d019      	beq.n	10406 <low_level_init()+0x1e6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103d2:	4b19      	ldr	r3, [pc, #100]	; (10438 <low_level_init()+0x218>)
   103d4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103d6:	4b19      	ldr	r3, [pc, #100]	; (1043c <low_level_init()+0x21c>)
   103d8:	429a      	cmp	r2, r3
   103da:	d108      	bne.n	103ee <low_level_init()+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103dc:	2305      	movs	r3, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103de:	4818      	ldr	r0, [pc, #96]	; (10440 <low_level_init()+0x220>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103e0:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103e2:	f000 fa85 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103e6:	2200      	movs	r2, #0
   103e8:	4b13      	ldr	r3, [pc, #76]	; (10438 <low_level_init()+0x218>)
   103ea:	649a      	str	r2, [r3, #72]	; 0x48
   103ec:	e7c9      	b.n	10382 <low_level_init()+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103ee:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f0:	4814      	ldr	r0, [pc, #80]	; (10444 <low_level_init()+0x224>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103f2:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f4:	f000 fa7c 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103fc:	f043 0304 	orr.w	r3, r3, #4
   10400:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   10404:	e7ef      	b.n	103e6 <low_level_init()+0x1c6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   10406:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   10408:	e7bb      	b.n	10382 <low_level_init()+0x162>
   1040a:	bf00      	nop
   1040c:	2007c300 	.word	0x2007c300
   10410:	000f4240 	.word	0x000f4240
   10414:	400fc000 	.word	0x400fc000
   10418:	e000ed00 	.word	0xe000ed00
   1041c:	e000e100 	.word	0xe000e100
   10420:	000108d9 	.word	0x000108d9
   10424:	000108c1 	.word	0x000108c1
   10428:	2007c0e4 	.word	0x2007c0e4
   1042c:	2007c30c 	.word	0x2007c30c
   10430:	0002481c 	.word	0x0002481c
   10434:	0002485f 	.word	0x0002485f
   10438:	40024000 	.word	0x40024000
   1043c:	deadbeef 	.word	0xdeadbeef
   10440:	00024839 	.word	0x00024839
   10444:	00024856 	.word	0x00024856

00010448 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10448:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   1044a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   1044c:	4b0f      	ldr	r3, [pc, #60]	; (1048c <lpc_sys_setup_system_timer+0x44>)
   1044e:	4c10      	ldr	r4, [pc, #64]	; (10490 <lpc_sys_setup_system_timer+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10450:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   10452:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10454:	f007 fd5e 	bl	17f14 <lpc_timer_enable>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   10458:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1045c:	6823      	ldr	r3, [r4, #0]
   1045e:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10460:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10464:	61da      	str	r2, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   10466:	2200      	movs	r2, #0
   10468:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   1046a:	4a0a      	ldr	r2, [pc, #40]	; (10494 <lpc_sys_setup_system_timer+0x4c>)
   1046c:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   1046e:	f240 2209 	movw	r2, #521	; 0x209
   10472:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   10474:	695a      	ldr	r2, [r3, #20]
   10476:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1047a:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   1047c:	2218      	movs	r2, #24
   1047e:	4b06      	ldr	r3, [pc, #24]	; (10498 <lpc_sys_setup_system_timer+0x50>)
   10480:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10484:	2204      	movs	r2, #4
   10486:	601a      	str	r2, [r3, #0]
   10488:	bd10      	pop	{r4, pc}
   1048a:	bf00      	nop
   1048c:	40008000 	.word	0x40008000
   10490:	2007c318 	.word	0x2007c318
   10494:	0016e360 	.word	0x0016e360
   10498:	e000e100 	.word	0xe000e100

0001049c <sys_get_uptime_us>:
sys_get_uptime_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   1049c:	4b08      	ldr	r3, [pc, #32]	; (104c0 <sys_get_uptime_us+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1049e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a0:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a2:	4c08      	ldr	r4, [pc, #32]	; (104c4 <sys_get_uptime_us+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a4:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a6:	8821      	ldrh	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   104a8:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104aa:	b289      	uxth	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   104ac:	4282      	cmp	r2, r0
   104ae:	d8f9      	bhi.n	104a4 <sys_get_uptime_us+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   104b0:	460b      	mov	r3, r1
   104b2:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   104b4:	ea42 0200 	orr.w	r2, r2, r0
   104b8:	4610      	mov	r0, r2
   104ba:	4619      	mov	r1, r3
   104bc:	bd10      	pop	{r4, pc}
   104be:	bf00      	nop
   104c0:	2007c318 	.word	0x2007c318
   104c4:	2007c314 	.word	0x2007c314

000104c8 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   104c8:	b510      	push	{r4, lr}
   104ca:	4604      	mov	r4, r0
   104cc:	b08e      	sub	sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   104ce:	a806      	add	r0, sp, #24
   104d0:	f006 fa10 	bl	168f4 <sys_get_mem_info>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   104d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   104d6:	9a06      	ldr	r2, [sp, #24]
   104d8:	9305      	str	r3, [sp, #20]
   104da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   104dc:	4907      	ldr	r1, [pc, #28]	; (104fc <sys_get_mem_info_str+0x34>)
   104de:	9304      	str	r3, [sp, #16]
   104e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   104e2:	4620      	mov	r0, r4
   104e4:	9303      	str	r3, [sp, #12]
   104e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104e8:	9302      	str	r3, [sp, #8]
   104ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
   104ec:	9301      	str	r3, [sp, #4]
   104ee:	9b08      	ldr	r3, [sp, #32]
   104f0:	9300      	str	r3, [sp, #0]
   104f2:	9b07      	ldr	r3, [sp, #28]
   104f4:	f00f fcb4 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   104f8:	b00e      	add	sp, #56	; 0x38
   104fa:	bd10      	pop	{r4, pc}
   104fc:	0002489a 	.word	0x0002489a

00010500 <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   10500:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   10502:	4c04      	ldr	r4, [pc, #16]	; (10514 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   10504:	6823      	ldr	r3, [r4, #0]
   10506:	b91b      	cbnz	r3, 10510 <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   10508:	2001      	movs	r0, #1
   1050a:	f006 f9eb 	bl	168e4 <operator new(unsigned int)>
   1050e:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   10510:	6820      	ldr	r0, [r4, #0]
   10512:	bd10      	pop	{r4, pc}
   10514:	2007c310 	.word	0x2007c310

00010518 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10518:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   1051a:	4c2b      	ldr	r4, [pc, #172]	; (105c8 <TIMER1_IRQHandler+0xb0>)
   1051c:	6823      	ldr	r3, [r4, #0]
   1051e:	4625      	mov	r5, r4
   10520:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   10522:	f012 0f10 	tst.w	r2, #16
   10526:	d00e      	beq.n	10546 <TIMER1_IRQHandler+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10528:	2210      	movs	r2, #16
   1052a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   1052c:	f7ff ffe8 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
   10530:	6823      	ldr	r3, [r4, #0]
   10532:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10534:	f004 fb44 	bl	14bc0 <IR_Sensor::storeIrCode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10538:	6822      	ldr	r2, [r4, #0]
   1053a:	6893      	ldr	r3, [r2, #8]
   1053c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   10540:	3310      	adds	r3, #16
   10542:	6213      	str	r3, [r2, #32]
   10544:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   10546:	0754      	lsls	r4, r2, #29
   10548:	d507      	bpl.n	1055a <TIMER1_IRQHandler+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   1054a:	2204      	movs	r2, #4
   1054c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   1054e:	f7ff ffd7 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   10552:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   10556:	f004 bb41 	b.w	14bdc <IR_Sensor::decodeIrCode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   1055a:	07d0      	lsls	r0, r2, #31
   1055c:	d507      	bpl.n	1056e <TIMER1_IRQHandler+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   1055e:	2201      	movs	r2, #1
   10560:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   10562:	4a1a      	ldr	r2, [pc, #104]	; (105cc <TIMER1_IRQHandler+0xb4>)
   10564:	8813      	ldrh	r3, [r2, #0]
   10566:	3301      	adds	r3, #1
   10568:	b29b      	uxth	r3, r3
   1056a:	8013      	strh	r3, [r2, #0]
   1056c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   1056e:	0791      	lsls	r1, r2, #30
   10570:	d515      	bpl.n	1059e <TIMER1_IRQHandler+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   10572:	2202      	movs	r2, #2
   10574:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   10576:	f008 fe7f 	bl	19278 <xTaskGetSchedulerState>
   1057a:	2802      	cmp	r0, #2
   1057c:	d009      	beq.n	10592 <TIMER1_IRQHandler+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   1057e:	f000 fd7d 	bl	1107c <wireless_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10582:	682a      	ldr	r2, [r5, #0]
   10584:	6893      	ldr	r3, [r2, #8]
   10586:	69d1      	ldr	r1, [r2, #28]
   10588:	440b      	add	r3, r1
   1058a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1058e:	61d3      	str	r3, [r2, #28]
   10590:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   10592:	682a      	ldr	r2, [r5, #0]
   10594:	6953      	ldr	r3, [r2, #20]
   10596:	f023 0308 	bic.w	r3, r3, #8
   1059a:	6153      	str	r3, [r2, #20]
   1059c:	e7f1      	b.n	10582 <TIMER1_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1059e:	0712      	lsls	r2, r2, #28
   105a0:	d50e      	bpl.n	105c0 <TIMER1_IRQHandler+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   105a2:	2208      	movs	r2, #8
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   105a4:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   105a6:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   105a8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   105ac:	7211      	strb	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   105ae:	2155      	movs	r1, #85	; 0x55
   105b0:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   105b2:	689a      	ldr	r2, [r3, #8]
   105b4:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   105b8:	f502 7258 	add.w	r2, r2, #864	; 0x360
   105bc:	625a      	str	r2, [r3, #36]	; 0x24
   105be:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   105c0:	4803      	ldr	r0, [pc, #12]	; (105d0 <TIMER1_IRQHandler+0xb8>)
   105c2:	f00f f9f3 	bl	1f9ac <puts>
   105c6:	e7fe      	b.n	105c6 <TIMER1_IRQHandler+0xae>
   105c8:	2007c318 	.word	0x2007c318
   105cc:	2007c314 	.word	0x2007c314
   105d0:	00024879 	.word	0x00024879

000105d4 <isr_forwarder_routine>:
isr_forwarder_routine():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   105d4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   105d6:	f008 ff1f 	bl	19418 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105da:	4b09      	ldr	r3, [pc, #36]	; (10600 <isr_forwarder_routine+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105dc:	4a09      	ldr	r2, [pc, #36]	; (10604 <isr_forwarder_routine+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105de:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e0:	4b09      	ldr	r3, [pc, #36]	; (10608 <isr_forwarder_routine+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105e2:	3910      	subs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e4:	b2c9      	uxtb	r1, r1
   105e6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105ea:	4293      	cmp	r3, r2
   105ec:	d103      	bne.n	105f6 <isr_forwarder_routine+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   105ee:	4807      	ldr	r0, [pc, #28]	; (1060c <isr_forwarder_routine+0x38>)
   105f0:	f005 fdf5 	bl	161de <u0_dbg_printf>
   105f4:	e7fe      	b.n	105f4 <isr_forwarder_routine+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   105f6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   105f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   105fc:	f008 bf20 	b.w	19440 <vRunTimeStatIsrExit>
   10600:	e000ed04 	.word	0xe000ed04
   10604:	00010149 	.word	0x00010149
   10608:	2007c000 	.word	0x2007c000
   1060c:	0002495f 	.word	0x0002495f

00010610 <isr_register>:
isr_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:338
    if (num >= 0) {
   10610:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:339
        g_isr_array[num] = isr_func_ptr;
   10612:	bfa4      	itt	ge
   10614:	4b01      	ldrge	r3, [pc, #4]	; (1061c <isr_register+0xc>)
   10616:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
   1061a:	4770      	bx	lr
   1061c:	2007c000 	.word	0x2007c000

00010620 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10620:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   10622:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10624:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10626:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10628:	4a11      	ldr	r2, [pc, #68]	; (10670 <isr_hard_fault_handler+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   1062a:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   1062c:	6883      	ldr	r3, [r0, #8]
   1062e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   10630:	68c3      	ldr	r3, [r0, #12]
   10632:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10634:	6903      	ldr	r3, [r0, #16]
   10636:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10638:	6943      	ldr	r3, [r0, #20]
   1063a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   1063c:	6983      	ldr	r3, [r0, #24]
   1063e:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   10640:	69c3      	ldr	r3, [r0, #28]
   10642:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10644:	4b0b      	ldr	r3, [pc, #44]	; (10674 <isr_hard_fault_handler+0x54>)
   10646:	649a      	str	r2, [r3, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10648:	9a06      	ldr	r2, [sp, #24]
   1064a:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   1064c:	9a05      	ldr	r2, [sp, #20]
   1064e:	3a01      	subs	r2, #1
   10650:	651a      	str	r2, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   10652:	9a07      	ldr	r2, [sp, #28]
   10654:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10656:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1065a:	22aa      	movs	r2, #170	; 0xaa
   1065c:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1065e:	2200      	movs	r2, #0
   10660:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   10662:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10664:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10666:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10668:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   1066a:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   1066c:	b008      	add	sp, #32
   1066e:	4770      	bx	lr
   10670:	deadbeef 	.word	0xdeadbeef
   10674:	40024000 	.word	0x40024000

00010678 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   10678:	22aa      	movs	r2, #170	; 0xaa
   1067a:	4b03      	ldr	r3, [pc, #12]	; (10688 <sys_clock_pll0_feed()+0x10>)
   1067c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   10680:	2255      	movs	r2, #85	; 0x55
   10682:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10686:	4770      	bx	lr
   10688:	400fc000 	.word	0x400fc000

0001068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   1068c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   10690:	2400      	movs	r4, #0
   10692:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10694:	6014      	str	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10696:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10698:	f240 14ff 	movw	r4, #511	; 0x1ff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   1069c:	f8df a060 	ldr.w	sl, [pc, #96]	; 10700 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   106a0:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106a4:	2600      	movs	r6, #0
   106a6:	fb04 5b05 	mla	fp, r4, r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   106aa:	f106 0c01 	add.w	ip, r6, #1
   106ae:	fbbb f8fc 	udiv	r8, fp, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106b2:	4f12      	ldr	r7, [pc, #72]	; (106fc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   106b4:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   106b8:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   106bc:	42bd      	cmp	r5, r7
   106be:	d91a      	bls.n	106f6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   106c0:	4666      	mov	r6, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   106c2:	2e20      	cmp	r6, #32
   106c4:	d1f1      	bne.n	106aa <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106c6:	3c01      	subs	r4, #1
   106c8:	2c05      	cmp	r4, #5
   106ca:	d1e9      	bne.n	106a0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   106cc:	2000      	movs	r0, #0
   106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   106d2:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   106d6:	464d      	mov	r5, r9
   106d8:	d0f2      	beq.n	106c0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   106da:	f105 0901 	add.w	r9, r5, #1
   106de:	fbb8 fef9 	udiv	lr, r8, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   106e2:	45d6      	cmp	lr, sl
   106e4:	d8f5      	bhi.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106e6:	4586      	cmp	lr, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   106e8:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   106ea:	6016      	str	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   106ec:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106ee:	d1f0      	bne.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   106f0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   106f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106f6:	2503      	movs	r5, #3
   106f8:	e7ef      	b.n	106da <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   106fa:	bf00      	nop
   106fc:	00043238 	.word	0x00043238
   10700:	000186a0 	.word	0x000186a0

00010704 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   10704:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   10706:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10708:	492a      	ldr	r1, [pc, #168]	; (107b4 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   1070a:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1070c:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   10710:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10712:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   10716:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   1071a:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   1071c:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1071e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   10722:	f7ff ffa9 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   10726:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   1072a:	f023 0301 	bic.w	r3, r3, #1
   1072e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   10732:	f7ff ffa1 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   10736:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   1073a:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   1073e:	f7ff ff9b 	bl	10678 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10742:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   10744:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10748:	aa02      	add	r2, sp, #8
   1074a:	a901      	add	r1, sp, #4
   1074c:	f64b 3080 	movw	r0, #48000	; 0xbb80
   10750:	f7ff ff9c 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   10754:	b930      	cbnz	r0, 10764 <sys_clock_configure()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   10756:	462b      	mov	r3, r5
   10758:	aa02      	add	r2, sp, #8
   1075a:	a901      	add	r1, sp, #4
   1075c:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   10760:	f7ff ff94 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   10764:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10766:	4913      	ldr	r1, [pc, #76]	; (107b4 <sys_clock_configure()+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   10768:	f363 040f 	bfi	r4, r3, #0, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   1076c:	9b02      	ldr	r3, [sp, #8]
   1076e:	f363 4417 	bfi	r4, r3, #16, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10772:	2300      	movs	r3, #0
   10774:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   10778:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   1077c:	f7ff ff7c 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   10780:	2301      	movs	r3, #1
   10782:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10786:	f7ff ff77 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   1078a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1078e:	015b      	lsls	r3, r3, #5
   10790:	d5fb      	bpl.n	1078a <sys_clock_configure()+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   10792:	9b03      	ldr	r3, [sp, #12]
   10794:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10798:	2303      	movs	r3, #3
   1079a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1079e:	f7ff ff6b 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   107a2:	4a04      	ldr	r2, [pc, #16]	; (107b4 <sys_clock_configure()+0xb0>)
   107a4:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   107a8:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   107ac:	d0fa      	beq.n	107a4 <sys_clock_configure()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   107ae:	b005      	add	sp, #20
   107b0:	bd30      	pop	{r4, r5, pc}
   107b2:	bf00      	nop
   107b4:	400fc000 	.word	0x400fc000

000107b8 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107b8:	4b24      	ldr	r3, [pc, #144]	; (1084c <sys_get_cpu_clock+0x94>)
   107ba:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   107be:	f3c2 6201 	ubfx	r2, r2, #24, #2
   107c2:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107c4:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   107c8:	f002 0203 	and.w	r2, r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107cc:	d12d      	bne.n	1082a <sys_get_cpu_clock+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107ce:	2a01      	cmp	r2, #1
   107d0:	d016      	beq.n	10800 <sys_get_cpu_clock+0x48>
   107d2:	2a02      	cmp	r2, #2
   107d4:	d01e      	beq.n	10814 <sys_get_cpu_clock+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107d6:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107da:	481d      	ldr	r0, [pc, #116]	; (10850 <sys_get_cpu_clock+0x98>)
   107dc:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107e0:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107e4:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107e8:	fb01 0000 	mla	r0, r1, r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107ec:	f3c2 4207 	ubfx	r2, r2, #16, #8
   107f0:	3201      	adds	r2, #1
   107f2:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107f6:	b2db      	uxtb	r3, r3
   107f8:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   107fa:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   107fe:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10800:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10804:	4813      	ldr	r0, [pc, #76]	; (10854 <sys_get_cpu_clock+0x9c>)
   10806:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1080a:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1080e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   10812:	e7e9      	b.n	107e8 <sys_get_cpu_clock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10814:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10818:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1081c:	f3c0 000e 	ubfx	r0, r0, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10820:	3001      	adds	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10822:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10826:	0400      	lsls	r0, r0, #16
   10828:	e7e0      	b.n	107ec <sys_get_cpu_clock+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1082a:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1082e:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10830:	b2c0      	uxtb	r0, r0
   10832:	f100 0301 	add.w	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10836:	d003      	beq.n	10840 <sys_get_cpu_clock+0x88>
   10838:	2a02      	cmp	r2, #2
   1083a:	d003      	beq.n	10844 <sys_get_cpu_clock+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1083c:	4806      	ldr	r0, [pc, #24]	; (10858 <sys_get_cpu_clock+0xa0>)
   1083e:	e7dc      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10840:	4806      	ldr	r0, [pc, #24]	; (1085c <sys_get_cpu_clock+0xa4>)
   10842:	e7da      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10844:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10848:	e7d7      	b.n	107fa <sys_get_cpu_clock+0x42>
   1084a:	bf00      	nop
   1084c:	400fc000 	.word	0x400fc000
   10850:	007a1200 	.word	0x007a1200
   10854:	016e3600 	.word	0x016e3600
   10858:	003d0900 	.word	0x003d0900
   1085c:	00b71b00 	.word	0x00b71b00

00010860 <uart0_init>:
uart0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   10860:	b510      	push	{r4, lr}
   10862:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10864:	f7ff ffa8 	bl	107b8 <sys_get_cpu_clock>
   10868:	0124      	lsls	r4, r4, #4
   1086a:	fbb0 f0f4 	udiv	r0, r0, r4
   1086e:	f00c fa07 	bl	1cc80 <__aeabi_ui2d>
   10872:	2200      	movs	r2, #0
   10874:	4b10      	ldr	r3, [pc, #64]	; (108b8 <uart0_init+0x58>)
   10876:	f00c f8c7 	bl	1ca08 <__adddf3>
   1087a:	f00c fc89 	bl	1d190 <__aeabi_d2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   1087e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10880:	b284      	uxth	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   10882:	2003      	movs	r0, #3
   10884:	f000 f84a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10888:	2101      	movs	r1, #1
   1088a:	2003      	movs	r0, #3
   1088c:	f000 f860 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   10890:	4b0a      	ldr	r3, [pc, #40]	; (108bc <uart0_init+0x5c>)
   10892:	681a      	ldr	r2, [r3, #0]
   10894:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10898:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   1089a:	681a      	ldr	r2, [r3, #0]
   1089c:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   108a0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   108a2:	2280      	movs	r2, #128	; 0x80
   108a4:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   108a8:	731a      	strb	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   108aa:	0a22      	lsrs	r2, r4, #8
   108ac:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108ae:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   108b0:	b2e4      	uxtb	r4, r4
   108b2:	701c      	strb	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108b4:	731a      	strb	r2, [r3, #12]
   108b6:	bd10      	pop	{r4, pc}
   108b8:	3fe00000 	.word	0x3fe00000
   108bc:	4002c000 	.word	0x4002c000

000108c0 <uart0_getchar>:
uart0_getchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   108c0:	4a03      	ldr	r2, [pc, #12]	; (108d0 <uart0_getchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   108c2:	6813      	ldr	r3, [r2, #0]
   108c4:	07db      	lsls	r3, r3, #31
   108c6:	d5fc      	bpl.n	108c2 <uart0_getchar+0x2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   108c8:	4b02      	ldr	r3, [pc, #8]	; (108d4 <uart0_getchar+0x14>)
   108ca:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   108cc:	4770      	bx	lr
   108ce:	bf00      	nop
   108d0:	4000c014 	.word	0x4000c014
   108d4:	4000c000 	.word	0x4000c000

000108d8 <uart0_putchar>:
uart0_putchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   108d8:	4b03      	ldr	r3, [pc, #12]	; (108e8 <uart0_putchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   108da:	4a04      	ldr	r2, [pc, #16]	; (108ec <uart0_putchar+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   108dc:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   108de:	6813      	ldr	r3, [r2, #0]
   108e0:	065b      	lsls	r3, r3, #25
   108e2:	d5fc      	bpl.n	108de <uart0_putchar+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   108e4:	2001      	movs	r0, #1
   108e6:	4770      	bx	lr
   108e8:	4000c000 	.word	0x4000c000
   108ec:	4000c014 	.word	0x4000c014

000108f0 <uart0_puts>:
uart0_puts():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   108f0:	b508      	push	{r3, lr}
   108f2:	1e41      	subs	r1, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   108f4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   108f8:	b920      	cbnz	r0, 10904 <uart0_puts+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   108fa:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   108fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   10900:	f7ff bfea 	b.w	108d8 <uart0_putchar>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   10904:	f7ff ffe8 	bl	108d8 <uart0_putchar>
   10908:	e7f4      	b.n	108f4 <uart0_puts+0x4>

0001090a <__set_PSP>:
__set_PSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   1090a:	f380 8809 	msr	PSP, r0
   1090e:	4770      	bx	lr

00010910 <__set_MSP>:
__set_MSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   10910:	f380 8808 	msr	MSP, r0
   10914:	4770      	bx	lr

00010916 <__set_BASEPRI>:
__set_BASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   10916:	f380 8811 	msr	BASEPRI, r0
   1091a:	4770      	bx	lr

0001091c <lpc_pconp>:
lpc_pconp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   1091c:	b538      	push	{r3, r4, r5, lr}
   1091e:	460d      	mov	r5, r1
   10920:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   10922:	f007 fc3f 	bl	181a4 <vPortEnterCritical>
   10926:	4a09      	ldr	r2, [pc, #36]	; (1094c <lpc_pconp+0x30>)
   10928:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   1092a:	b14d      	cbz	r5, 10940 <lpc_pconp+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   1092c:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   10930:	40a3      	lsls	r3, r4
   10932:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10934:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10938:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   1093c:	f007 bc42 	b.w	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10940:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10944:	40a3      	lsls	r3, r4
   10946:	ea21 0303 	bic.w	r3, r1, r3
   1094a:	e7f3      	b.n	10934 <lpc_pconp+0x18>
   1094c:	400fc000 	.word	0x400fc000

00010950 <lpc_pclk>:
lpc_pclk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   10950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10954:	ea4f 0840 	mov.w	r8, r0, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10958:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   1095a:	f007 fc23 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1095e:	4642      	mov	r2, r8
   10960:	2003      	movs	r0, #3
   10962:	2100      	movs	r1, #0
   10964:	f00c f83e 	bl	1c9e4 <__aeabi_llsl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10968:	4f0a      	ldr	r7, [pc, #40]	; (10994 <lpc_pclk+0x44>)
   1096a:	4642      	mov	r2, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1096c:	e9d7 4500 	ldrd	r4, r5, [r7]
   10970:	ea24 0400 	bic.w	r4, r4, r0
   10974:	ea25 0501 	bic.w	r5, r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10978:	f006 0003 	and.w	r0, r6, #3
   1097c:	2100      	movs	r1, #0
   1097e:	f00c f831 	bl	1c9e4 <__aeabi_llsl>
   10982:	4320      	orrs	r0, r4
   10984:	4329      	orrs	r1, r5
   10986:	e9c7 0100 	strd	r0, r1, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   1098a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   1098e:	f007 bc19 	b.w	181c4 <vPortExitCritical>
   10992:	bf00      	nop
   10994:	400fc1a8 	.word	0x400fc1a8

00010998 <nordic_transfer>:
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   10998:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   1099a:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1099e:	4c36      	ldr	r4, [pc, #216]	; (10a78 <nordic_transfer+0xe0>)
   109a0:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   109a2:	4c36      	ldr	r4, [pc, #216]	; (10a7c <nordic_transfer+0xe4>)
   109a4:	60a0      	str	r0, [r4, #8]
   109a6:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109a8:	68c4      	ldr	r4, [r0, #12]
   109aa:	06e4      	lsls	r4, r4, #27
   109ac:	d4fc      	bmi.n	109a8 <nordic_transfer+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ae:	6880      	ldr	r0, [r0, #8]
   109b0:	b2c0      	uxtb	r0, r0
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   109b2:	b963      	cbnz	r3, 109ce <nordic_transfer+0x36>
   109b4:	460b      	mov	r3, r1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   109b6:	4c31      	ldr	r4, [pc, #196]	; (10a7c <nordic_transfer+0xe4>)
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   109b8:	1a5d      	subs	r5, r3, r1
   109ba:	4295      	cmp	r5, r2
   109bc:	da09      	bge.n	109d2 <nordic_transfer+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   109be:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   109c2:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109c4:	68e5      	ldr	r5, [r4, #12]
   109c6:	06ed      	lsls	r5, r5, #27
   109c8:	d4fc      	bmi.n	109c4 <nordic_transfer+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ca:	68a5      	ldr	r5, [r4, #8]
   109cc:	e7f4      	b.n	109b8 <nordic_transfer+0x20>
   109ce:	4b2b      	ldr	r3, [pc, #172]	; (10a7c <nordic_transfer+0xe4>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   109d0:	b922      	cbnz	r2, 109dc <nordic_transfer+0x44>
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   109d2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   109d6:	4b28      	ldr	r3, [pc, #160]	; (10a78 <nordic_transfer+0xe0>)
   109d8:	619a      	str	r2, [r3, #24]
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   109da:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   109dc:	2a07      	cmp	r2, #7
   109de:	780c      	ldrb	r4, [r1, #0]
   109e0:	dd29      	ble.n	10a36 <nordic_transfer+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e2:	609c      	str	r4, [r3, #8]
   109e4:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   109e6:	3a08      	subs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e8:	609c      	str	r4, [r3, #8]
   109ea:	788c      	ldrb	r4, [r1, #2]
   109ec:	609c      	str	r4, [r3, #8]
   109ee:	78cc      	ldrb	r4, [r1, #3]
   109f0:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109f2:	790c      	ldrb	r4, [r1, #4]
   109f4:	609c      	str	r4, [r3, #8]
   109f6:	794c      	ldrb	r4, [r1, #5]
   109f8:	609c      	str	r4, [r3, #8]
   109fa:	798c      	ldrb	r4, [r1, #6]
   109fc:	609c      	str	r4, [r3, #8]
   109fe:	79cd      	ldrb	r5, [r1, #7]
   10a00:	f101 0408 	add.w	r4, r1, #8
   10a04:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   10a06:	699d      	ldr	r5, [r3, #24]
   10a08:	076d      	lsls	r5, r5, #29
   10a0a:	d5fc      	bpl.n	10a06 <nordic_transfer+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a0c:	689d      	ldr	r5, [r3, #8]
   10a0e:	700d      	strb	r5, [r1, #0]
   10a10:	689d      	ldr	r5, [r3, #8]
   10a12:	704d      	strb	r5, [r1, #1]
   10a14:	689d      	ldr	r5, [r3, #8]
   10a16:	708d      	strb	r5, [r1, #2]
   10a18:	689d      	ldr	r5, [r3, #8]
   10a1a:	70cd      	strb	r5, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   10a1c:	68dd      	ldr	r5, [r3, #12]
   10a1e:	06ed      	lsls	r5, r5, #27
   10a20:	d4fc      	bmi.n	10a1c <nordic_transfer+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a22:	689d      	ldr	r5, [r3, #8]
   10a24:	710d      	strb	r5, [r1, #4]
   10a26:	689d      	ldr	r5, [r3, #8]
   10a28:	714d      	strb	r5, [r1, #5]
   10a2a:	689d      	ldr	r5, [r3, #8]
   10a2c:	718d      	strb	r5, [r1, #6]
   10a2e:	689d      	ldr	r5, [r3, #8]
   10a30:	71cd      	strb	r5, [r1, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a32:	4621      	mov	r1, r4
   10a34:	e7cc      	b.n	109d0 <nordic_transfer+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   10a36:	2a03      	cmp	r2, #3
   10a38:	dd14      	ble.n	10a64 <nordic_transfer+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a3a:	609c      	str	r4, [r3, #8]
   10a3c:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   10a3e:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a40:	609c      	str	r4, [r3, #8]
   10a42:	788c      	ldrb	r4, [r1, #2]
   10a44:	609c      	str	r4, [r3, #8]
   10a46:	78cd      	ldrb	r5, [r1, #3]
   10a48:	1d0c      	adds	r4, r1, #4
   10a4a:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   10a4c:	68dd      	ldr	r5, [r3, #12]
   10a4e:	06ed      	lsls	r5, r5, #27
   10a50:	d4fc      	bmi.n	10a4c <nordic_transfer+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a52:	689d      	ldr	r5, [r3, #8]
   10a54:	700d      	strb	r5, [r1, #0]
   10a56:	689d      	ldr	r5, [r3, #8]
   10a58:	704d      	strb	r5, [r1, #1]
   10a5a:	689d      	ldr	r5, [r3, #8]
   10a5c:	708d      	strb	r5, [r1, #2]
   10a5e:	689d      	ldr	r5, [r3, #8]
   10a60:	70cd      	strb	r5, [r1, #3]
   10a62:	e7e6      	b.n	10a32 <nordic_transfer+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   10a64:	1c4d      	adds	r5, r1, #1
   10a66:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   10a68:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   10a6a:	68dc      	ldr	r4, [r3, #12]
   10a6c:	06e4      	lsls	r4, r4, #27
   10a6e:	d4fc      	bmi.n	10a6a <nordic_transfer+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   10a70:	689c      	ldr	r4, [r3, #8]
   10a72:	700c      	strb	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   10a74:	4629      	mov	r1, r5
   10a76:	e7ab      	b.n	109d0 <nordic_transfer+0x38>
   10a78:	2009c000 	.word	0x2009c000
   10a7c:	40088000 	.word	0x40088000

00010a80 <nordic_readRegister>:
nordic_readRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   10a80:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   10a82:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   10a84:	a902      	add	r1, sp, #8
   10a86:	f801 3d01 	strb.w	r3, [r1, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   10a8a:	2301      	movs	r3, #1
   10a8c:	f000 001f 	and.w	r0, r0, #31
   10a90:	461a      	mov	r2, r3
   10a92:	f7ff ff81 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   10a96:	f89d 0007 	ldrb.w	r0, [sp, #7]
   10a9a:	b003      	add	sp, #12
   10a9c:	f85d fb04 	ldr.w	pc, [sp], #4

00010aa0 <nordic_writeRegister>:
nordic_writeRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   10aa0:	b513      	push	{r0, r1, r4, lr}
   10aa2:	ac02      	add	r4, sp, #8
   10aa4:	f804 1d01 	strb.w	r1, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   10aa8:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   10aac:	2300      	movs	r3, #0
   10aae:	2201      	movs	r2, #1
   10ab0:	4621      	mov	r1, r4
   10ab2:	f040 0020 	orr.w	r0, r0, #32
   10ab6:	f7ff ff6f 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   10aba:	b002      	add	sp, #8
   10abc:	bd10      	pop	{r4, pc}

00010abe <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   10abe:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   10ac0:	2017      	movs	r0, #23
   10ac2:	f7ff ffdd 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   10ac6:	f3c0 1000 	ubfx	r0, r0, #4, #1
   10aca:	bd08      	pop	{r3, pc}

00010acc <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   10acc:	2170      	movs	r1, #112	; 0x70
   10ace:	2007      	movs	r0, #7
   10ad0:	f7ff bfe6 	b.w	10aa0 <nordic_writeRegister>

00010ad4 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   10ad4:	460a      	mov	r2, r1
   10ad6:	2300      	movs	r3, #0
   10ad8:	4601      	mov	r1, r0
   10ada:	20a0      	movs	r0, #160	; 0xa0
   10adc:	f7ff bf5c 	b.w	10998 <nordic_transfer>

00010ae0 <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   10ae0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10ae2:	2000      	movs	r0, #0
   10ae4:	f7ff ffcc 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   10ae8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10aec:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   10af0:	2000      	movs	r0, #0
   10af2:	f7ff bfd5 	b.w	10aa0 <nordic_writeRegister>
   10af6:	Address 0x0000000000010af6 is out of bounds.


00010af8 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10af8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10afc:	4b01      	ldr	r3, [pc, #4]	; (10b04 <nordic_rx_to_Stanby1+0xc>)
   10afe:	61da      	str	r2, [r3, #28]
   10b00:	4770      	bx	lr
   10b02:	bf00      	nop
   10b04:	2009c020 	.word	0x2009c020

00010b08 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   10b08:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   10b0a:	2000      	movs	r0, #0
   10b0c:	f7ff ffb8 	bl	10a80 <nordic_readRegister>
   10b10:	f040 0101 	orr.w	r1, r0, #1
   10b14:	b2c9      	uxtb	r1, r1
   10b16:	2000      	movs	r0, #0
   10b18:	f7ff ffc2 	bl	10aa0 <nordic_writeRegister>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   10b1c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b20:	4b01      	ldr	r3, [pc, #4]	; (10b28 <nordic_standby1_to_rx+0x20>)
   10b22:	619a      	str	r2, [r3, #24]
   10b24:	bd08      	pop	{r3, pc}
   10b26:	bf00      	nop
   10b28:	2009c020 	.word	0x2009c020

00010b2c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   10b2c:	2120      	movs	r1, #32
   10b2e:	2007      	movs	r0, #7
   10b30:	f7ff bfb6 	b.w	10aa0 <nordic_writeRegister>

00010b34 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   10b34:	2300      	movs	r3, #0
   10b36:	20e1      	movs	r0, #225	; 0xe1
   10b38:	461a      	mov	r2, r3
   10b3a:	4619      	mov	r1, r3
   10b3c:	f7ff bf2c 	b.w	10998 <nordic_transfer>

00010b40 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   10b40:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10b42:	4604      	mov	r4, r0
   10b44:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   10b46:	f7ff fff5 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   10b4a:	4620      	mov	r0, r4
   10b4c:	4629      	mov	r1, r5
   10b4e:	f7ff ffc1 	bl	10ad4 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   10b52:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b56:	4c0c      	ldr	r4, [pc, #48]	; (10b88 <nordic_mode1_send_single_packet+0x48>)
   10b58:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   10b5a:	2200      	movs	r2, #0
   10b5c:	f8ad 2006 	strh.w	r2, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b60:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10b64:	3301      	adds	r3, #1
   10b66:	b29b      	uxth	r3, r3
   10b68:	f8ad 3006 	strh.w	r3, [sp, #6]
   10b6c:	b933      	cbnz	r3, 10b7c <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10b6e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10b72:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   10b74:	f7ff ffde 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   10b78:	b003      	add	sp, #12
   10b7a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b7c:	f7ff ff9f 	bl	10abe <nordic_is_tx_fifo_empty>
   10b80:	2800      	cmp	r0, #0
   10b82:	d0ed      	beq.n	10b60 <nordic_mode1_send_single_packet+0x20>
   10b84:	e7f3      	b.n	10b6e <nordic_mode1_send_single_packet+0x2e>
   10b86:	bf00      	nop
   10b88:	2009c020 	.word	0x2009c020

00010b8c <nordic_is_packet_available>:
nordic_is_packet_available():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   10b8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   10b8e:	2017      	movs	r0, #23
   10b90:	f7ff ff76 	bl	10a80 <nordic_readRegister>
   10b94:	43c0      	mvns	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   10b96:	f000 0001 	and.w	r0, r0, #1
   10b9a:	bd08      	pop	{r3, pc}

00010b9c <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   10b9c:	2140      	movs	r1, #64	; 0x40
   10b9e:	2007      	movs	r0, #7
   10ba0:	f7ff bf7e 	b.w	10aa0 <nordic_writeRegister>

00010ba4 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   10ba4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   10ba6:	460a      	mov	r2, r1
   10ba8:	2301      	movs	r3, #1
   10baa:	4601      	mov	r1, r0
   10bac:	2061      	movs	r0, #97	; 0x61
   10bae:	f7ff fef3 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   10bb2:	f3c0 0042 	ubfx	r0, r0, #1, #3
   10bb6:	bd08      	pop	{r3, pc}

00010bb8 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   10bb8:	2300      	movs	r3, #0
   10bba:	20e2      	movs	r0, #226	; 0xe2
   10bbc:	461a      	mov	r2, r3
   10bbe:	4619      	mov	r1, r3
   10bc0:	f7ff beea 	b.w	10998 <nordic_transfer>

00010bc4 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   10bc4:	b570      	push	{r4, r5, r6, lr}
   10bc6:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bc8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   10bca:	460d      	mov	r5, r1
   10bcc:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bce:	f7ff ff57 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bd2:	b166      	cbz	r6, 10bee <nordic_set_intr_signals+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   10bd4:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bd8:	b16d      	cbz	r5, 10bf6 <nordic_set_intr_signals+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   10bda:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bde:	b16c      	cbz	r4, 10bfc <nordic_set_intr_signals+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   10be0:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   10be4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   10be6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   10bea:	f7ff bf59 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bee:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   10bf2:	b2c0      	uxtb	r0, r0
   10bf4:	e7f0      	b.n	10bd8 <nordic_set_intr_signals+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bf6:	f040 0120 	orr.w	r1, r0, #32
   10bfa:	e7f0      	b.n	10bde <nordic_set_intr_signals+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bfc:	f041 0110 	orr.w	r1, r1, #16
   10c00:	e7f0      	b.n	10be4 <nordic_set_intr_signals+0x20>

00010c02 <nordic_set_crc>:
nordic_set_crc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   10c02:	b510      	push	{r4, lr}
   10c04:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   10c06:	2000      	movs	r0, #0
   10c08:	f7ff ff3a 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   10c0c:	b934      	cbnz	r4, 10c1c <nordic_set_crc+0x1a>
   10c0e:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   10c12:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   10c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   10c18:	f7ff bf42 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   10c1c:	2c01      	cmp	r4, #1
   10c1e:	d104      	bne.n	10c2a <nordic_set_crc+0x28>
   10c20:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   10c24:	f041 0108 	orr.w	r1, r1, #8
   10c28:	e7f3      	b.n	10c12 <nordic_set_crc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c2a:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   10c2c:	bf14      	ite	ne
   10c2e:	f040 0108 	orrne.w	r1, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c32:	f040 010c 	orreq.w	r1, r0, #12
   10c36:	b2c9      	uxtb	r1, r1
   10c38:	e7eb      	b.n	10c12 <nordic_set_crc+0x10>

00010c3a <nordic_power_up>:
nordic_power_up():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   10c3a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c3c:	2000      	movs	r0, #0
   10c3e:	f7ff ff1f 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   10c42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c46:	f040 0102 	orr.w	r1, r0, #2
   10c4a:	b2c9      	uxtb	r1, r1
   10c4c:	2000      	movs	r0, #0
   10c4e:	f7ff bf27 	b.w	10aa0 <nordic_writeRegister>

00010c52 <nordic_power_down>:
nordic_power_down():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   10c52:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c54:	2000      	movs	r0, #0
   10c56:	f7ff ff13 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   10c5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c5e:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   10c62:	2000      	movs	r0, #0
   10c64:	f7ff bf1c 	b.w	10aa0 <nordic_writeRegister>

00010c68 <nordic_set_channel>:
nordic_set_channel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c68:	f640 13dd 	movw	r3, #2525	; 0x9dd
   10c6c:	4298      	cmp	r0, r3
   10c6e:	d80b      	bhi.n	10c88 <nordic_set_channel+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   10c70:	f640 1362 	movw	r3, #2402	; 0x962
   10c74:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   10c78:	bf38      	it	cc
   10c7a:	4618      	movcc	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   10c7c:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   10c80:	b2c9      	uxtb	r1, r1
   10c82:	2005      	movs	r0, #5
   10c84:	f7ff bf0c 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c88:	4618      	mov	r0, r3
   10c8a:	e7f7      	b.n	10c7c <nordic_set_channel+0x14>

00010c8c <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   10c8c:	b510      	push	{r4, lr}
   10c8e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   10c90:	2006      	movs	r0, #6
   10c92:	f7ff fef5 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   10c96:	2cfa      	cmp	r4, #250	; 0xfa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   10c98:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   10c9c:	d106      	bne.n	10cac <nordic_set_air_data_rate+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   10c9e:	f041 0120 	orr.w	r1, r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   10ca2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   10ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   10ca8:	f7ff befa 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   10cac:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   10cb0:	bf08      	it	eq
   10cb2:	f041 0108 	orreq.w	r1, r1, #8
   10cb6:	e7f4      	b.n	10ca2 <nordic_set_air_data_rate+0x16>

00010cb8 <nordic_set_power_level>:
nordic_set_power_level():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   10cb8:	b510      	push	{r4, lr}
   10cba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cbc:	2006      	movs	r0, #6
   10cbe:	f7ff fedf 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10cc2:	2c03      	cmp	r4, #3
   10cc4:	bf28      	it	cs
   10cc6:	2403      	movcs	r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cc8:	f020 0106 	bic.w	r1, r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10ccc:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   10cd0:	b2c9      	uxtb	r1, r1
   10cd2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   10cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   10cd8:	f7ff bee2 	b.w	10aa0 <nordic_writeRegister>

00010cdc <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   10cdc:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   10ce0:	bf28      	it	cs
   10ce2:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   10ce6:	28fa      	cmp	r0, #250	; 0xfa
   10ce8:	bf38      	it	cc
   10cea:	20fa      	movcc	r0, #250	; 0xfa
   10cec:	23fa      	movs	r3, #250	; 0xfa
   10cee:	fbb0 f3f3 	udiv	r3, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   10cf2:	290f      	cmp	r1, #15
   10cf4:	bf28      	it	cs
   10cf6:	210f      	movcs	r1, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   10cf8:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   10cfa:	b2db      	uxtb	r3, r3
   10cfc:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   10d00:	b2c9      	uxtb	r1, r1
   10d02:	2004      	movs	r0, #4
   10d04:	f7ff becc 	b.w	10aa0 <nordic_writeRegister>

00010d08 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   10d08:	3011      	adds	r0, #17
   10d0a:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   10d0c:	2816      	cmp	r0, #22
   10d0e:	d804      	bhi.n	10d1a <nordic_set_payload_for_pipe+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   10d10:	2920      	cmp	r1, #32
   10d12:	bf28      	it	cs
   10d14:	2120      	movcs	r1, #32
   10d16:	f7ff bec3 	b.w	10aa0 <nordic_writeRegister>
   10d1a:	4770      	bx	lr

00010d1c <nordic_set_addr_width>:
nordic_set_addr_width():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   10d1c:	2803      	cmp	r0, #3
   10d1e:	d006      	beq.n	10d2e <nordic_set_addr_width+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   10d20:	2804      	cmp	r0, #4
   10d22:	bf14      	ite	ne
   10d24:	2103      	movne	r1, #3
   10d26:	2102      	moveq	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   10d28:	2003      	movs	r0, #3
   10d2a:	f7ff beb9 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   10d2e:	2101      	movs	r1, #1
   10d30:	e7fa      	b.n	10d28 <nordic_set_addr_width+0xc>

00010d32 <nordic_set_tx_address>:
nordic_set_tx_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   10d32:	460a      	mov	r2, r1
   10d34:	2300      	movs	r3, #0
   10d36:	4601      	mov	r1, r0
   10d38:	2030      	movs	r0, #48	; 0x30
   10d3a:	f7ff be2d 	b.w	10998 <nordic_transfer>

00010d3e <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   10d3e:	460a      	mov	r2, r1
   10d40:	2300      	movs	r3, #0
   10d42:	4601      	mov	r1, r0
   10d44:	202a      	movs	r0, #42	; 0x2a
   10d46:	f7ff be27 	b.w	10998 <nordic_transfer>
   10d4a:	Address 0x0000000000010d4a is out of bounds.


00010d4c <nordic_init>:
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   10d4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10d4e:	4604      	mov	r4, r0
   10d50:	460e      	mov	r6, r1
   10d52:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   10d54:	f7ff ff30 	bl	10bb8 <nordic_flush_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   10d58:	f7ff feec 	bl	10b34 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   10d5c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10d60:	4b2a      	ldr	r3, [pc, #168]	; (10e0c <nordic_init+0xc0>)
   10d62:	61da      	str	r2, [r3, #28]
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   10d64:	f7ff ff75 	bl	10c52 <nordic_power_down>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   10d68:	2200      	movs	r2, #0
   10d6a:	2001      	movs	r0, #1
   10d6c:	4611      	mov	r1, r2
   10d6e:	f7ff ff29 	bl	10bc4 <nordic_set_intr_signals>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   10d72:	f7ff feab 	bl	10acc <nordic_clear_all_intr_flags>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   10d76:	2002      	movs	r0, #2
   10d78:	f7ff ff43 	bl	10c02 <nordic_set_crc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   10d7c:	4630      	mov	r0, r6
   10d7e:	f7ff ff73 	bl	10c68 <nordic_set_channel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   10d82:	4628      	mov	r0, r5
   10d84:	f7ff ff82 	bl	10c8c <nordic_set_air_data_rate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   10d88:	2003      	movs	r0, #3
   10d8a:	f7ff ff95 	bl	10cb8 <nordic_set_power_level>
nordic_enable_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   10d8e:	2103      	movs	r1, #3
   10d90:	2002      	movs	r0, #2
   10d92:	f7ff fe85 	bl	10aa0 <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   10d96:	2100      	movs	r1, #0
   10d98:	2001      	movs	r0, #1
   10d9a:	f7ff fe81 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   10d9e:	2103      	movs	r1, #3
   10da0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   10da4:	f7ff ff9a 	bl	10cdc <nordic_set_auto_transmit_options>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   10da8:	4621      	mov	r1, r4
   10daa:	2000      	movs	r0, #0
   10dac:	f7ff ffac 	bl	10d08 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   10db0:	2100      	movs	r1, #0
   10db2:	2012      	movs	r0, #18
   10db4:	f7ff fe74 	bl	10aa0 <nordic_writeRegister>
   10db8:	2100      	movs	r1, #0
   10dba:	2013      	movs	r0, #19
   10dbc:	f7ff fe70 	bl	10aa0 <nordic_writeRegister>
   10dc0:	2100      	movs	r1, #0
   10dc2:	2014      	movs	r0, #20
   10dc4:	f7ff fe6c 	bl	10aa0 <nordic_writeRegister>
   10dc8:	2100      	movs	r1, #0
   10dca:	2015      	movs	r0, #21
   10dcc:	f7ff fe68 	bl	10aa0 <nordic_writeRegister>
   10dd0:	2100      	movs	r1, #0
   10dd2:	2016      	movs	r0, #22
   10dd4:	f7ff fe64 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10dd8:	4b0d      	ldr	r3, [pc, #52]	; (10e10 <nordic_init+0xc4>)
   10dda:	6818      	ldr	r0, [r3, #0]
   10ddc:	791b      	ldrb	r3, [r3, #4]
   10dde:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de0:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10de2:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de6:	f7ff ff99 	bl	10d1c <nordic_set_addr_width>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   10dea:	4668      	mov	r0, sp
   10dec:	2105      	movs	r1, #5
   10dee:	f7ff ffa0 	bl	10d32 <nordic_set_tx_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   10df2:	2105      	movs	r1, #5
   10df4:	4668      	mov	r0, sp
   10df6:	f7ff ffa2 	bl	10d3e <nordic_set_rx_pipe0_addr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   10dfa:	f7ff ff1e 	bl	10c3a <nordic_power_up>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   10dfe:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10e02:	f005 fa9f 	bl	16344 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   10e06:	b002      	add	sp, #8
   10e08:	bd70      	pop	{r4, r5, r6, pc}
   10e0a:	bf00      	nop
   10e0c:	2009c020 	.word	0x2009c020
   10e10:	00024a0f 	.word	0x00024a0f

00010e14 <nrf_driver_init>:
nrf_driver_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   10e14:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   10e16:	4e17      	ldr	r6, [pc, #92]	; (10e74 <nrf_driver_init+0x60>)
   10e18:	6832      	ldr	r2, [r6, #0]
   10e1a:	b922      	cbnz	r2, 10e26 <nrf_driver_init+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   10e1c:	2120      	movs	r1, #32
   10e1e:	2003      	movs	r0, #3
   10e20:	f007 fbc4 	bl	185ac <xQueueGenericCreate>
   10e24:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   10e26:	4d14      	ldr	r5, [pc, #80]	; (10e78 <nrf_driver_init+0x64>)
   10e28:	682a      	ldr	r2, [r5, #0]
   10e2a:	b922      	cbnz	r2, 10e36 <nrf_driver_init+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   10e2c:	2120      	movs	r1, #32
   10e2e:	2001      	movs	r0, #1
   10e30:	f007 fbbc 	bl	185ac <xQueueGenericCreate>
   10e34:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   10e36:	4c11      	ldr	r4, [pc, #68]	; (10e7c <nrf_driver_init+0x68>)
   10e38:	6821      	ldr	r1, [r4, #0]
   10e3a:	b921      	cbnz	r1, 10e46 <nrf_driver_init+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   10e3c:	2203      	movs	r2, #3
   10e3e:	2001      	movs	r0, #1
   10e40:	f007 fbb4 	bl	185ac <xQueueGenericCreate>
   10e44:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   10e46:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   10e4a:	f640 11c3 	movw	r1, #2499	; 0x9c3
   10e4e:	2020      	movs	r0, #32
   10e50:	f7ff ff7c 	bl	10d4c <nordic_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   10e54:	f7ff fe58 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   10e58:	2016      	movs	r0, #22
   10e5a:	4a09      	ldr	r2, [pc, #36]	; (10e80 <nrf_driver_init+0x6c>)
   10e5c:	2101      	movs	r1, #1
   10e5e:	f006 fd9d 	bl	1799c <eint3_enable_port0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   10e62:	6830      	ldr	r0, [r6, #0]
   10e64:	b128      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   10e66:	6828      	ldr	r0, [r5, #0]
   10e68:	b118      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   10e6a:	6820      	ldr	r0, [r4, #0]
   10e6c:	3000      	adds	r0, #0
   10e6e:	bf18      	it	ne
   10e70:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   10e72:	bd70      	pop	{r4, r5, r6, pc}
   10e74:	2007c324 	.word	0x2007c324
   10e78:	2007c31c 	.word	0x2007c31c
   10e7c:	2007c320 	.word	0x2007c320
   10e80:	00010f2d 	.word	0x00010f2d

00010e84 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e84:	7903      	ldrb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e86:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e88:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10e8c:	2bc0      	cmp	r3, #192	; 0xc0
   10e8e:	bf0c      	ite	eq
   10e90:	4b0e      	ldreq	r3, [pc, #56]	; (10ecc <nrf_driver_app_recv+0x48>)
   10e92:	4b0f      	ldrne	r3, [pc, #60]	; (10ed0 <nrf_driver_app_recv+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   10e94:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e96:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e98:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e9a:	b088      	sub	sp, #32
   10e9c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e9e:	461a      	mov	r2, r3
   10ea0:	4628      	mov	r0, r5
   10ea2:	f007 fb9d 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   10ea6:	4604      	mov	r4, r0
   10ea8:	b960      	cbnz	r0, 10ec4 <nrf_driver_app_recv+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   10eaa:	4603      	mov	r3, r0
   10eac:	4602      	mov	r2, r0
   10eae:	4669      	mov	r1, sp
   10eb0:	4628      	mov	r0, r5
   10eb2:	f007 fc9d 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   10eb6:	4623      	mov	r3, r4
   10eb8:	4622      	mov	r2, r4
   10eba:	4631      	mov	r1, r6
   10ebc:	4628      	mov	r0, r5
   10ebe:	f007 fb8f 	bl	185e0 <xQueueGenericSend>
   10ec2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   10ec4:	4620      	mov	r0, r4
   10ec6:	b008      	add	sp, #32
   10ec8:	bd70      	pop	{r4, r5, r6, pc}
   10eca:	bf00      	nop
   10ecc:	2007c31c 	.word	0x2007c31c
   10ed0:	2007c324 	.word	0x2007c324

00010ed4 <nrf_driver_send>:
nrf_driver_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   10ed4:	b538      	push	{r3, r4, r5, lr}
   10ed6:	4604      	mov	r4, r0
   10ed8:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   10eda:	f000 fae9 	bl	114b0 <mesh_get_node_address>
   10ede:	7823      	ldrb	r3, [r4, #0]
   10ee0:	4283      	cmp	r3, r0
   10ee2:	d00a      	beq.n	10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   10ee4:	78e3      	ldrb	r3, [r4, #3]
   10ee6:	b943      	cbnz	r3, 10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   10ee8:	f00e fd90 	bl	1fa0c <rand>
   10eec:	23bd      	movs	r3, #189	; 0xbd
   10eee:	f000 0003 	and.w	r0, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   10ef2:	fb00 3003 	mla	r0, r0, r3, r3
   10ef6:	f005 fa25 	bl	16344 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   10efa:	f7ff fdfd 	bl	10af8 <nordic_rx_to_Stanby1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   10efe:	f7ff fdef 	bl	10ae0 <nordic_standby1_to_tx_mode1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   10f02:	b2a9      	uxth	r1, r5
   10f04:	4620      	mov	r0, r4
   10f06:	f7ff fe1b 	bl	10b40 <nordic_mode1_send_single_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   10f0a:	f7ff fe0f 	bl	10b2c <nordic_clear_packet_sent_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   10f0e:	f7ff fdfb 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f12:	f008 f9b1 	bl	19278 <xTaskGetSchedulerState>
   10f16:	2802      	cmp	r0, #2
   10f18:	d104      	bne.n	10f24 <nrf_driver_send+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   10f1a:	4b03      	ldr	r3, [pc, #12]	; (10f28 <nrf_driver_send+0x54>)
   10f1c:	2100      	movs	r1, #0
   10f1e:	6818      	ldr	r0, [r3, #0]
   10f20:	f007 fc32 	bl	18788 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   10f24:	2001      	movs	r0, #1
   10f26:	bd38      	pop	{r3, r4, r5, pc}
   10f28:	2007c320 	.word	0x2007c320

00010f2c <nrf_irq_callback>:
nrf_irq_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f2c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   10f2e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f30:	a902      	add	r1, sp, #8
   10f32:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   10f36:	4b08      	ldr	r3, [pc, #32]	; (10f58 <nrf_irq_callback+0x2c>)
   10f38:	6818      	ldr	r0, [r3, #0]
   10f3a:	f007 fc25 	bl	18788 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   10f3e:	9b01      	ldr	r3, [sp, #4]
   10f40:	b13b      	cbz	r3, 10f52 <nrf_irq_callback+0x26>
   10f42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10f46:	4b05      	ldr	r3, [pc, #20]	; (10f5c <nrf_irq_callback+0x30>)
   10f48:	601a      	str	r2, [r3, #0]
   10f4a:	f3bf 8f4f 	dsb	sy
   10f4e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   10f52:	b003      	add	sp, #12
   10f54:	f85d fb04 	ldr.w	pc, [sp], #4
   10f58:	2007c320 	.word	0x2007c320
   10f5c:	e000ed04 	.word	0xe000ed04

00010f60 <nrf_driver_receive>:
nrf_driver_receive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   10f60:	b538      	push	{r3, r4, r5, lr}
   10f62:	4604      	mov	r4, r0
   10f64:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   10f66:	f7ff fe11 	bl	10b8c <nordic_is_packet_available>
   10f6a:	b148      	cbz	r0, 10f80 <nrf_driver_receive+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   10f6c:	b2a9      	uxth	r1, r5
   10f6e:	4620      	mov	r0, r4
   10f70:	f7ff fe18 	bl	10ba4 <nordic_read_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f74:	f7ff fe0a 	bl	10b8c <nordic_is_packet_available>
   10f78:	b908      	cbnz	r0, 10f7e <nrf_driver_receive+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   10f7a:	f7ff fe0f 	bl	10b9c <nordic_clear_packet_available_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f7e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   10f80:	bd38      	pop	{r3, r4, r5, pc}

00010f82 <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:52
{
   10f82:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   10f86:	4605      	mov	r5, r0
   10f88:	460e      	mov	r6, r1
   10f8a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:55
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f8c:	f008 f974 	bl	19278 <xTaskGetSchedulerState>
   10f90:	2802      	cmp	r0, #2
   10f92:	d109      	bne.n	10fa8 <wireless_get_queued_pkt+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:56
        ok = xQueueReceive(qhandle, pkt, OS_MS(timeout_ms));
   10f94:	4622      	mov	r2, r4
   10f96:	2300      	movs	r3, #0
   10f98:	4631      	mov	r1, r6
   10f9a:	4628      	mov	r0, r5
   10f9c:	f007 fc28 	bl	187f0 <xQueueGenericReceive>
   10fa0:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:68
}
   10fa2:	4620      	mov	r0, r4
   10fa4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   10fa8:	f7ff fa78 	bl	1049c <sys_get_uptime_us>
   10fac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fb0:	2300      	movs	r3, #0
   10fb2:	f00c fc01 	bl	1d7b8 <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:59
        uint64_t timeout_of_char = sys_get_uptime_ms() + timeout_ms;
   10fb6:	eb10 0804 	adds.w	r8, r0, r4
   10fba:	f141 0900 	adc.w	r9, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:60
        while (! (ok = xQueueReceive(qhandle, pkt, 0))) {
   10fbe:	2300      	movs	r3, #0
   10fc0:	4631      	mov	r1, r6
   10fc2:	461a      	mov	r2, r3
   10fc4:	4628      	mov	r0, r5
   10fc6:	f007 fc13 	bl	187f0 <xQueueGenericReceive>
   10fca:	b2c4      	uxtb	r4, r0
   10fcc:	2c00      	cmp	r4, #0
   10fce:	d1e8      	bne.n	10fa2 <wireless_get_queued_pkt+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10fd0:	f7ff fa64 	bl	1049c <sys_get_uptime_us>
   10fd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fd8:	2300      	movs	r3, #0
   10fda:	f00c fbed 	bl	1d7b8 <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:61
            if (sys_get_uptime_ms() > timeout_of_char) {
   10fde:	4589      	cmp	r9, r1
   10fe0:	bf08      	it	eq
   10fe2:	4580      	cmpeq	r8, r0
   10fe4:	d2eb      	bcs.n	10fbe <wireless_get_queued_pkt+0x3c>
   10fe6:	e7dc      	b.n	10fa2 <wireless_get_queued_pkt+0x20>

00010fe8 <nrf_driver_get_timer>:
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fe8:	2904      	cmp	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   10fea:	b538      	push	{r3, r4, r5, lr}
   10fec:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fee:	d10d      	bne.n	1100c <nrf_driver_get_timer+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   10ff0:	1c04      	adds	r4, r0, #0
   10ff2:	bf18      	it	ne
   10ff4:	2401      	movne	r4, #1
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
   10ff6:	f7ff fa51 	bl	1049c <sys_get_uptime_us>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   10ffa:	b12c      	cbz	r4, 11008 <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10ffc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11000:	2300      	movs	r3, #0
   11002:	f00c fbd9 	bl	1d7b8 <__aeabi_uldivmod>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   11006:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   11008:	4620      	mov	r0, r4
   1100a:	bd38      	pop	{r3, r4, r5, pc}
   1100c:	2400      	movs	r4, #0
   1100e:	e7f2      	b.n	10ff6 <nrf_driver_get_timer+0xe>

00011010 <wireless_init>:
wireless_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11010:	b500      	push	{lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11012:	4b0c      	ldr	r3, [pc, #48]	; (11044 <wireless_init+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11014:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11016:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   11018:	4b0b      	ldr	r3, [pc, #44]	; (11048 <wireless_init+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   1101a:	4a0c      	ldr	r2, [pc, #48]	; (1104c <wireless_init+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   1101c:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   1101e:	4b0c      	ldr	r3, [pc, #48]	; (11050 <wireless_init+0x40>)
   11020:	930a      	str	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   11022:	ab0c      	add	r3, sp, #48	; 0x30
   11024:	f843 2d10 	str.w	r2, [r3, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   11028:	2200      	movs	r2, #0
   1102a:	9204      	str	r2, [sp, #16]
   1102c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1102e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   11032:	4b08      	ldr	r3, [pc, #32]	; (11054 <wireless_init+0x44>)
   11034:	4a08      	ldr	r2, [pc, #32]	; (11058 <wireless_init+0x48>)
   11036:	2101      	movs	r1, #1
   11038:	206a      	movs	r0, #106	; 0x6a
   1103a:	f000 faef 	bl	1161c <mesh_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   1103e:	b00d      	add	sp, #52	; 0x34
   11040:	f85d fb04 	ldr.w	pc, [sp], #4
   11044:	00010e15 	.word	0x00010e15
   11048:	00010f61 	.word	0x00010f61
   1104c:	00010fe9 	.word	0x00010fe9
   11050:	00010ed5 	.word	0x00010ed5
   11054:	00010e85 	.word	0x00010e85
   11058:	00024a14 	.word	0x00024a14

0001105c <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:93
    return wireless_get_queued_pkt(g_rx_queue, pkt, timeout_ms);
   1105c:	4b02      	ldr	r3, [pc, #8]	; (11068 <wireless_get_rx_pkt+0xc>)
   1105e:	460a      	mov	r2, r1
   11060:	4601      	mov	r1, r0
   11062:	6818      	ldr	r0, [r3, #0]
   11064:	f7ff bf8d 	b.w	10f82 <wireless_get_queued_pkt>
   11068:	2007c324 	.word	0x2007c324

0001106c <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:98
    return wireless_get_queued_pkt(g_ack_queue, pkt, timeout_ms);
   1106c:	4b02      	ldr	r3, [pc, #8]	; (11078 <wireless_get_ack_pkt+0xc>)
   1106e:	460a      	mov	r2, r1
   11070:	4601      	mov	r1, r0
   11072:	6818      	ldr	r0, [r3, #0]
   11074:	f7ff bf85 	b.w	10f82 <wireless_get_queued_pkt>
   11078:	2007c31c 	.word	0x2007c31c

0001107c <wireless_service>:
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   1107c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1107e:	f008 f8fb 	bl	19278 <xTaskGetSchedulerState>
   11082:	4b0f      	ldr	r3, [pc, #60]	; (110c0 <wireless_service+0x44>)
   11084:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   11086:	695b      	ldr	r3, [r3, #20]
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   11088:	d112      	bne.n	110b0 <wireless_service+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   1108a:	025a      	lsls	r2, r3, #9
   1108c:	d50c      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   1108e:	f000 fcfd 	bl	11a8c <mesh_get_pnd_pkt_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11092:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   11094:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11096:	480b      	ldr	r0, [pc, #44]	; (110c4 <wireless_service+0x48>)
   11098:	bf14      	ite	ne
   1109a:	2201      	movne	r2, #1
   1109c:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   110a0:	4619      	mov	r1, r3
   110a2:	6800      	ldr	r0, [r0, #0]
   110a4:	f007 fba4 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   110ac:	f000 bb86 	b.w	117bc <mesh_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   110b0:	025b      	lsls	r3, r3, #9
   110b2:	d5f9      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   110b4:	f000 fcea 	bl	11a8c <mesh_get_pnd_pkt_count>
   110b8:	2800      	cmp	r0, #0
   110ba:	d1f5      	bne.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110bc:	bd08      	pop	{r3, pc}
   110be:	bf00      	nop
   110c0:	2009c000 	.word	0x2009c000
   110c4:	2007c320 	.word	0x2007c320

000110c8 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   110c8:	2324      	movs	r3, #36	; 0x24
   110ca:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110cc:	f64f 74ff 	movw	r4, #65535	; 0xffff
   110d0:	fb03 0101 	mla	r1, r3, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   110d4:	4288      	cmp	r0, r1
   110d6:	d100      	bne.n	110da <mesh_incr_soft_timers_for_arr+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   110d8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   110da:	7843      	ldrb	r3, [r0, #1]
   110dc:	b12b      	cbz	r3, 110ea <mesh_incr_soft_timers_for_arr+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   110de:	8c03      	ldrh	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   110e0:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110e2:	42a3      	cmp	r3, r4
   110e4:	bf28      	it	cs
   110e6:	4623      	movcs	r3, r4
   110e8:	8403      	strh	r3, [r0, #32]
   110ea:	3024      	adds	r0, #36	; 0x24
   110ec:	e7f2      	b.n	110d4 <mesh_incr_soft_timers_for_arr+0xc>
   110ee:	Address 0x00000000000110ee is out of bounds.


000110f0 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   110f0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   110f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   110f4:	a802      	add	r0, sp, #8
   110f6:	f840 3d04 	str.w	r3, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   110fa:	4b0c      	ldr	r3, [pc, #48]	; (1112c <mesh_update_soft_timers+0x3c>)
   110fc:	2104      	movs	r1, #4
   110fe:	685b      	ldr	r3, [r3, #4]
   11100:	4798      	blx	r3
   11102:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   11104:	4b0a      	ldr	r3, [pc, #40]	; (11130 <mesh_update_soft_timers+0x40>)
   11106:	9a01      	ldr	r2, [sp, #4]
   11108:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   1110a:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   1110c:	1b14      	subs	r4, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   1110e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11110:	4808      	ldr	r0, [pc, #32]	; (11134 <mesh_update_soft_timers+0x44>)
   11112:	4622      	mov	r2, r4
   11114:	f7ff ffd8 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   11118:	4622      	mov	r2, r4
   1111a:	2102      	movs	r1, #2
   1111c:	4806      	ldr	r0, [pc, #24]	; (11138 <mesh_update_soft_timers+0x48>)
   1111e:	f7ff ffd3 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   11122:	1c28      	adds	r0, r5, #0
   11124:	bf18      	it	ne
   11126:	2001      	movne	r0, #1
   11128:	b003      	add	sp, #12
   1112a:	bd30      	pop	{r4, r5, pc}
   1112c:	2007c328 	.word	0x2007c328
   11130:	2007c458 	.word	0x2007c458
   11134:	2007c33e 	.word	0x2007c33e
   11138:	2007c3f2 	.word	0x2007c3f2

0001113c <mesh_send_packet>:
mesh_send_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   1113c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   1113e:	4b0b      	ldr	r3, [pc, #44]	; (1116c <mesh_send_packet+0x30>)
   11140:	7819      	ldrb	r1, [r3, #0]
   11142:	7803      	ldrb	r3, [r0, #0]
   11144:	428b      	cmp	r3, r1
   11146:	4b0a      	ldr	r3, [pc, #40]	; (11170 <mesh_send_packet+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11148:	bf0b      	itete	eq
   1114a:	881a      	ldrheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   1114c:	889a      	ldrhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   1114e:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   11150:	3201      	addne	r2, #1
   11152:	bf14      	ite	ne
   11154:	809a      	strhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11156:	801a      	strheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   11158:	4b06      	ldr	r3, [pc, #24]	; (11174 <mesh_send_packet+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   1115a:	7081      	strb	r1, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   1115c:	68db      	ldr	r3, [r3, #12]
   1115e:	2120      	movs	r1, #32
   11160:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   11162:	3000      	adds	r0, #0
   11164:	bf18      	it	ne
   11166:	2001      	movne	r0, #1
   11168:	bd08      	pop	{r3, pc}
   1116a:	bf00      	nop
   1116c:	2007c08c 	.word	0x2007c08c
   11170:	2007c3ce 	.word	0x2007c3ce
   11174:	2007c328 	.word	0x2007c328

00011178 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   11178:	4b0a      	ldr	r3, [pc, #40]	; (111a4 <mesh_send_retry_packet+0x2c>)
   1117a:	7802      	ldrb	r2, [r0, #0]
   1117c:	781b      	ldrb	r3, [r3, #0]
   1117e:	429a      	cmp	r2, r3
   11180:	4b09      	ldr	r3, [pc, #36]	; (111a8 <mesh_send_retry_packet+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11182:	bf0b      	itete	eq
   11184:	88da      	ldrheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   11186:	891a      	ldrhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11188:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   1118a:	3201      	addne	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   1118c:	bf0c      	ite	eq
   1118e:	80da      	strheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   11190:	811a      	strhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   11192:	7903      	ldrb	r3, [r0, #4]
   11194:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   11198:	3207      	adds	r2, #7
   1119a:	f362 03c5 	bfi	r3, r2, #3, #3
   1119e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   111a0:	f7ff bfcc 	b.w	1113c <mesh_send_packet>
   111a4:	2007c08c 	.word	0x2007c08c
   111a8:	2007c3ce 	.word	0x2007c3ce

000111ac <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   111ac:	2200      	movs	r2, #0
   111ae:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   111b0:	4b06      	ldr	r3, [pc, #24]	; (111cc <mesh_find_rte_tbl_entry+0x20>)
   111b2:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   111b6:	0091      	lsls	r1, r2, #2
   111b8:	4284      	cmp	r4, r0
   111ba:	d101      	bne.n	111c0 <mesh_find_rte_tbl_entry+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   111bc:	1858      	adds	r0, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   111be:	bd10      	pop	{r4, pc}
   111c0:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   111c2:	2a04      	cmp	r2, #4
   111c4:	d1f5      	bne.n	111b2 <mesh_find_rte_tbl_entry+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   111c6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   111c8:	bd10      	pop	{r4, pc}
   111ca:	bf00      	nop
   111cc:	2007c447 	.word	0x2007c447

000111d0 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   111d0:	b170      	cbz	r0, 111f0 <mesh_update_rte_scores+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   111d2:	78c3      	ldrb	r3, [r0, #3]
   111d4:	3301      	adds	r3, #1
   111d6:	b2db      	uxtb	r3, r3
   111d8:	2bff      	cmp	r3, #255	; 0xff
   111da:	70c3      	strb	r3, [r0, #3]
   111dc:	d108      	bne.n	111f0 <mesh_update_rte_scores+0x20>
   111de:	2300      	movs	r3, #0
   111e0:	4804      	ldr	r0, [pc, #16]	; (111f4 <mesh_update_rte_scores+0x24>)
   111e2:	18c1      	adds	r1, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   111e4:	78ca      	ldrb	r2, [r1, #3]
   111e6:	3304      	adds	r3, #4
   111e8:	0852      	lsrs	r2, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ea:	2b10      	cmp	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   111ec:	70ca      	strb	r2, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ee:	d1f8      	bne.n	111e2 <mesh_update_rte_scores+0x12>
   111f0:	4770      	bx	lr
   111f2:	bf00      	nop
   111f4:	2007c447 	.word	0x2007c447

000111f8 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   111f8:	2224      	movs	r2, #36	; 0x24
   111fa:	4603      	mov	r3, r0
   111fc:	fb02 0101 	mla	r1, r2, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   11200:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   11202:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   11204:	4291      	cmp	r1, r2
   11206:	d10f      	bne.n	11228 <mesh_get_pnd_pkt_slot+0x30>
   11208:	4604      	mov	r4, r0
   1120a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   1120c:	429a      	cmp	r2, r3
   1120e:	d011      	beq.n	11234 <mesh_get_pnd_pkt_slot+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   11210:	7919      	ldrb	r1, [r3, #4]
   11212:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   11216:	8c19      	ldrh	r1, [r3, #32]
   11218:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   1121c:	42a9      	cmp	r1, r5
   1121e:	bf84      	itt	hi
   11220:	461c      	movhi	r4, r3
   11222:	460d      	movhi	r5, r1
   11224:	3324      	adds	r3, #36	; 0x24
   11226:	e7f1      	b.n	1120c <mesh_get_pnd_pkt_slot+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   11228:	4614      	mov	r4, r2
   1122a:	3224      	adds	r2, #36	; 0x24
   1122c:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11230:	2d00      	cmp	r5, #0
   11232:	d1e7      	bne.n	11204 <mesh_get_pnd_pkt_slot+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   11234:	4620      	mov	r0, r4
   11236:	bd30      	pop	{r4, r5, pc}

00011238 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   11238:	b538      	push	{r3, r4, r5, lr}
   1123a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   1123c:	00c9      	lsls	r1, r1, #3
   1123e:	f101 0508 	add.w	r5, r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   11242:	f7ff ff55 	bl	110f0 <mesh_update_soft_timers>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   11246:	4b1c      	ldr	r3, [pc, #112]	; (112b8 <mesh_pending_packets_add+0x80>)
   11248:	7822      	ldrb	r2, [r4, #0]
   1124a:	781b      	ldrb	r3, [r3, #0]
   1124c:	429a      	cmp	r2, r3
   1124e:	d124      	bne.n	1129a <mesh_pending_packets_add+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   11250:	2102      	movs	r1, #2
   11252:	481a      	ldr	r0, [pc, #104]	; (112bc <mesh_pending_packets_add+0x84>)
   11254:	f7ff ffd0 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   11258:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   1125a:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   1125c:	f880 3020 	strb.w	r3, [r0, #32]
   11260:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   11264:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   11266:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   1126a:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   1126e:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   11272:	f3c5 2506 	ubfx	r5, r5, #8, #7
   11276:	430d      	orrs	r5, r1
   11278:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   1127c:	f104 0120 	add.w	r1, r4, #32
   11280:	f853 4b04 	ldr.w	r4, [r3], #4
   11284:	428b      	cmp	r3, r1
   11286:	f842 4b04 	str.w	r4, [r2], #4
   1128a:	d1f9      	bne.n	11280 <mesh_pending_packets_add+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   1128c:	4a0c      	ldr	r2, [pc, #48]	; (112c0 <mesh_pending_packets_add+0x88>)
   1128e:	7903      	ldrb	r3, [r0, #4]
   11290:	7812      	ldrb	r2, [r2, #0]
   11292:	f362 03c5 	bfi	r3, r2, #3, #3
   11296:	7103      	strb	r3, [r0, #4]
   11298:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1129a:	2104      	movs	r1, #4
   1129c:	4809      	ldr	r0, [pc, #36]	; (112c4 <mesh_pending_packets_add+0x8c>)
   1129e:	f7ff ffab 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   112a2:	78e3      	ldrb	r3, [r4, #3]
   112a4:	2b00      	cmp	r3, #0
   112a6:	d1d7      	bne.n	11258 <mesh_pending_packets_add+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112a8:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   112ac:	2504      	movs	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   112b2:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   112b6:	e7cf      	b.n	11258 <mesh_pending_packets_add+0x20>
   112b8:	2007c08c 	.word	0x2007c08c
   112bc:	2007c3f2 	.word	0x2007c3f2
   112c0:	2007c094 	.word	0x2007c094
   112c4:	2007c33e 	.word	0x2007c33e

000112c8 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   112c8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   112ca:	f7ff ff6f 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   112ce:	4603      	mov	r3, r0
   112d0:	b9d8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   112d2:	f7ff ff6b 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   112d6:	4603      	mov	r3, r0
   112d8:	b9b8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   112da:	4a0d      	ldr	r2, [pc, #52]	; (11310 <mesh_get_rte_to_modify+0x48>)
   112dc:	78d3      	ldrb	r3, [r2, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112de:	79d1      	ldrb	r1, [r2, #7]
   112e0:	7ad0      	ldrb	r0, [r2, #11]
   112e2:	428b      	cmp	r3, r1
   112e4:	bf96      	itet	ls
   112e6:	4619      	movls	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112e8:	1d13      	addhi	r3, r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   112ea:	4613      	movls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112ec:	4281      	cmp	r1, r0
   112ee:	bf94      	ite	ls
   112f0:	4608      	movls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f2:	4b08      	ldrhi	r3, [pc, #32]	; (11314 <mesh_get_rte_to_modify+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112f4:	7bd1      	ldrb	r1, [r2, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f6:	4a08      	ldr	r2, [pc, #32]	; (11318 <mesh_get_rte_to_modify+0x50>)
   112f8:	4281      	cmp	r1, r0
   112fa:	bf38      	it	cc
   112fc:	4613      	movcc	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   112fe:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11300:	4906      	ldr	r1, [pc, #24]	; (1131c <mesh_get_rte_to_modify+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   11302:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11304:	7aca      	ldrb	r2, [r1, #11]
   11306:	3201      	adds	r2, #1
   11308:	72ca      	strb	r2, [r1, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   1130a:	4618      	mov	r0, r3
   1130c:	bd08      	pop	{r3, pc}
   1130e:	bf00      	nop
   11310:	2007c447 	.word	0x2007c447
   11314:	2007c44f 	.word	0x2007c44f
   11318:	2007c453 	.word	0x2007c453
   1131c:	2007c3ce 	.word	0x2007c3ce

00011320 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11324:	f04f 0824 	mov.w	r8, #36	; 0x24
   11328:	4605      	mov	r5, r0
   1132a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   1132c:	2700      	movs	r7, #0
   1132e:	fb08 1802 	mla	r8, r8, r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11332:	f8df 915c 	ldr.w	r9, [pc, #348]	; 11490 <mesh_handle_pnd_pkts_for_arr+0x170>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   11336:	f8df a15c 	ldr.w	sl, [pc, #348]	; 11494 <mesh_handle_pnd_pkts_for_arr+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   1133a:	45a0      	cmp	r8, r4
   1133c:	d101      	bne.n	11342 <mesh_handle_pnd_pkts_for_arr+0x22>
   1133e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   11342:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   11346:	2b00      	cmp	r3, #0
   11348:	da29      	bge.n	1139e <mesh_handle_pnd_pkts_for_arr+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   1134a:	b1cd      	cbz	r5, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   1134c:	782b      	ldrb	r3, [r5, #0]
   1134e:	7862      	ldrb	r2, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   11350:	4293      	cmp	r3, r2
   11352:	d109      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   11354:	7868      	ldrb	r0, [r5, #1]
   11356:	7821      	ldrb	r1, [r4, #0]
   11358:	4288      	cmp	r0, r1
   1135a:	d105      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   1135c:	2224      	movs	r2, #36	; 0x24
   1135e:	2100      	movs	r1, #0
   11360:	4620      	mov	r0, r4
   11362:	f00d f903 	bl	1e56c <memset>
   11366:	e069      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   11368:	78e9      	ldrb	r1, [r5, #3]
   1136a:	b149      	cbz	r1, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1136c:	7869      	ldrb	r1, [r5, #1]
   1136e:	4291      	cmp	r1, r2
   11370:	d106      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11372:	7822      	ldrb	r2, [r4, #0]
   11374:	429a      	cmp	r2, r3
   11376:	d103      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11378:	79aa      	ldrb	r2, [r5, #6]
   1137a:	79a3      	ldrb	r3, [r4, #6]
   1137c:	429a      	cmp	r2, r3
   1137e:	d0ed      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   11380:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   11384:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   11388:	8c21      	ldrh	r1, [r4, #32]
   1138a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   1138e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   11392:	4299      	cmp	r1, r3
   11394:	db52      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   11396:	4620      	mov	r0, r4
   11398:	f7ff fed0 	bl	1113c <mesh_send_packet>
   1139c:	e7de      	b.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   1139e:	7863      	ldrb	r3, [r4, #1]
   113a0:	2b00      	cmp	r3, #0
   113a2:	d04b      	beq.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   113a4:	2d00      	cmp	r5, #0
   113a6:	d032      	beq.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113a8:	792a      	ldrb	r2, [r5, #4]
   113aa:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   113ae:	2ac0      	cmp	r2, #192	; 0xc0
   113b0:	d12b      	bne.n	1140a <mesh_handle_pnd_pkts_for_arr+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113b2:	7822      	ldrb	r2, [r4, #0]
   113b4:	7869      	ldrb	r1, [r5, #1]
   113b6:	428a      	cmp	r2, r1
   113b8:	d102      	bne.n	113c0 <mesh_handle_pnd_pkts_for_arr+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   113ba:	7828      	ldrb	r0, [r5, #0]
   113bc:	4298      	cmp	r0, r3
   113be:	d0cd      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113c0:	78e6      	ldrb	r6, [r4, #3]
   113c2:	78a8      	ldrb	r0, [r5, #2]
   113c4:	4286      	cmp	r6, r0
   113c6:	d108      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113c8:	4299      	cmp	r1, r3
   113ca:	d106      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113cc:	7829      	ldrb	r1, [r5, #0]
   113ce:	428a      	cmp	r2, r1
   113d0:	d103      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113d2:	79a1      	ldrb	r1, [r4, #6]
   113d4:	79aa      	ldrb	r2, [r5, #6]
   113d6:	4291      	cmp	r1, r2
   113d8:	d0c0      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   113da:	78a9      	ldrb	r1, [r5, #2]
   113dc:	78e2      	ldrb	r2, [r4, #3]
   113de:	4291      	cmp	r1, r2
   113e0:	d115      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113e2:	786a      	ldrb	r2, [r5, #1]
   113e4:	429a      	cmp	r2, r3
   113e6:	d112      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113e8:	7821      	ldrb	r1, [r4, #0]
   113ea:	782a      	ldrb	r2, [r5, #0]
   113ec:	4291      	cmp	r1, r2
   113ee:	d10e      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113f0:	79a1      	ldrb	r1, [r4, #6]
   113f2:	79aa      	ldrb	r2, [r5, #6]
   113f4:	4291      	cmp	r1, r2
   113f6:	d10a      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113f8:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   113fa:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113fe:	f367 03c5 	bfi	r3, r7, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   11402:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11406:	7123      	strb	r3, [r4, #4]
   11408:	e018      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   1140a:	2a00      	cmp	r2, #0
   1140c:	d1e5      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   1140e:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   11412:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   11416:	8c20      	ldrh	r0, [r4, #32]
   11418:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1141c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   11420:	4290      	cmp	r0, r2
   11422:	db0b      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11424:	7922      	ldrb	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11426:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1142a:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   1142e:	b2ce      	uxtb	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11430:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11434:	b126      	cbz	r6, 11440 <mesh_handle_pnd_pkts_for_arr+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   11436:	4620      	mov	r0, r4
   11438:	f7ff fe9e 	bl	11178 <mesh_send_retry_packet>
   1143c:	3424      	adds	r4, #36	; 0x24
   1143e:	e77c      	b.n	1133a <mesh_handle_pnd_pkts_for_arr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   11440:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   11444:	2ac0      	cmp	r2, #192	; 0xc0
   11446:	d020      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   11448:	7820      	ldrb	r0, [r4, #0]
   1144a:	f899 2000 	ldrb.w	r2, [r9]
   1144e:	4290      	cmp	r0, r2
   11450:	d11b      	bne.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11452:	78e2      	ldrb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11454:	4293      	cmp	r3, r2
   11456:	d018      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11458:	b1ba      	cbz	r2, 1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   1145a:	2203      	movs	r2, #3
   1145c:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   1145e:	70e1      	strb	r1, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   11460:	f362 1307 	bfi	r3, r2, #4, #4
   11464:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   11466:	4620      	mov	r0, r4
   11468:	f7ff fe86 	bl	11178 <mesh_send_retry_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   1146c:	7923      	ldrb	r3, [r4, #4]
   1146e:	f89a 2000 	ldrb.w	r2, [sl]
   11472:	f362 03c5 	bfi	r3, r2, #3, #3
   11476:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   11478:	7860      	ldrb	r0, [r4, #1]
   1147a:	f7ff fe97 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   1147e:	b100      	cbz	r0, 11482 <mesh_handle_pnd_pkts_for_arr+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   11480:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   11482:	2e00      	cmp	r6, #0
   11484:	f47f af6a 	bne.w	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
   11488:	e7d8      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   1148a:	2601      	movs	r6, #1
   1148c:	e7f4      	b.n	11478 <mesh_handle_pnd_pkts_for_arr+0x158>
   1148e:	bf00      	nop
   11490:	2007c08c 	.word	0x2007c08c
   11494:	2007c094 	.word	0x2007c094

00011498 <mesh_set_node_address>:
mesh_set_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   11498:	1e43      	subs	r3, r0, #1
   1149a:	b2db      	uxtb	r3, r3
   1149c:	2bfd      	cmp	r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   1149e:	bf9d      	ittte	ls
   114a0:	4b02      	ldrls	r3, [pc, #8]	; (114ac <mesh_set_node_address+0x14>)
   114a2:	7018      	strbls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   114a4:	2001      	movls	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   114a6:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   114a8:	4770      	bx	lr
   114aa:	bf00      	nop
   114ac:	2007c08c 	.word	0x2007c08c

000114b0 <mesh_get_node_address>:
mesh_get_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   114b0:	4b01      	ldr	r3, [pc, #4]	; (114b8 <mesh_get_node_address+0x8>)
   114b2:	7818      	ldrb	r0, [r3, #0]
   114b4:	4770      	bx	lr
   114b6:	bf00      	nop
   114b8:	2007c08c 	.word	0x2007c08c

000114bc <mesh_set_retry_count>:
mesh_set_retry_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:812

void mesh_set_retry_count(const uint8_t count)
{
    if (count <= MESH_RETRY_COUNT_MAX) {
   114bc:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:813
        g_retry_count = count;
   114be:	bf9c      	itt	ls
   114c0:	4b01      	ldrls	r3, [pc, #4]	; (114c8 <mesh_set_retry_count+0xc>)
   114c2:	7018      	strbls	r0, [r3, #0]
   114c4:	4770      	bx	lr
   114c6:	bf00      	nop
   114c8:	2007c094 	.word	0x2007c094

000114cc <mesh_form_pkt>:
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   114cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   114d0:	4604      	mov	r4, r0
   114d2:	4691      	mov	r9, r2
   114d4:	461e      	mov	r6, r3
   114d6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   114da:	460f      	mov	r7, r1
   114dc:	2900      	cmp	r1, #0
   114de:	d065      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   114e0:	4b34      	ldr	r3, [pc, #208]	; (115b4 <mesh_form_pkt+0xe8>)
   114e2:	f893 8000 	ldrb.w	r8, [r3]
   114e6:	4541      	cmp	r1, r8
   114e8:	d060      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   114ea:	2e0f      	cmp	r6, #15
   114ec:	d85e      	bhi.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   114ee:	2800      	cmp	r0, #0
   114f0:	d05e      	beq.n	115b0 <mesh_form_pkt+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   114f2:	2220      	movs	r2, #32
   114f4:	2100      	movs	r1, #0
   114f6:	f00d f839 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   114fa:	2fff      	cmp	r7, #255	; 0xff
   114fc:	bf08      	it	eq
   114fe:	f04f 0900 	moveq.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   11502:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11504:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   11506:	7067      	strb	r7, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11508:	f369 1387 	bfi	r3, r9, #6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   1150c:	f362 0302 	bfi	r3, r2, #0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11510:	4a29      	ldr	r2, [pc, #164]	; (115b8 <mesh_form_pkt+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   11512:	f884 8000 	strb.w	r8, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11516:	7812      	ldrb	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   11518:	f884 8002 	strb.w	r8, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1151c:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11520:	4a26      	ldr	r2, [pc, #152]	; (115bc <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11522:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11524:	7813      	ldrb	r3, [r2, #0]
   11526:	3301      	adds	r3, #1
   11528:	b2db      	uxtb	r3, r3
   1152a:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   1152c:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   1152e:	ab0b      	add	r3, sp, #44	; 0x2c
   11530:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   11532:	b9c5      	cbnz	r5, 11566 <mesh_form_pkt+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   11534:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   11536:	2301      	movs	r3, #1
   11538:	f8df 8084 	ldr.w	r8, [pc, #132]	; 115c0 <mesh_form_pkt+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   1153c:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   1153e:	f888 3000 	strb.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   11542:	f7ff fe33 	bl	111ac <mesh_find_rte_tbl_entry>
   11546:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   11548:	f7ff fe42 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   1154c:	2300      	movs	r3, #0
   1154e:	f888 3000 	strb.w	r3, [r8]
   11552:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   11554:	bb1f      	cbnz	r7, 1159e <mesh_form_pkt+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   11556:	f366 1307 	bfi	r3, r6, #4, #4
   1155a:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   1155c:	70e7      	strb	r7, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   1155e:	4628      	mov	r0, r5
   11560:	b003      	add	sp, #12
   11562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   11566:	f104 0908 	add.w	r9, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   1156c:	79e0      	ldrb	r0, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156e:	4613      	mov	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11570:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   11572:	f853 1b08 	ldr.w	r1, [r3], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   11576:	eb00 0802 	add.w	r8, r0, r2
   1157a:	fa5f f888 	uxtb.w	r8, r8
   1157e:	3d01      	subs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11580:	f1b8 0f18 	cmp.w	r8, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11584:	9301      	str	r3, [sp, #4]
   11586:	b2ed      	uxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11588:	d807      	bhi.n	1159a <mesh_form_pkt+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   1158a:	4448      	add	r0, r9
   1158c:	f00c ffc9 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   11590:	f884 8007 	strb.w	r8, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   11594:	2d00      	cmp	r5, #0
   11596:	d1e8      	bne.n	1156a <mesh_form_pkt+0x9e>
   11598:	e7cc      	b.n	11534 <mesh_form_pkt+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   1159a:	2500      	movs	r5, #0
   1159c:	e7cb      	b.n	11536 <mesh_form_pkt+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   1159e:	78ba      	ldrb	r2, [r7, #2]
   115a0:	f362 1307 	bfi	r3, r2, #4, #4
   115a4:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   115a6:	787b      	ldrb	r3, [r7, #1]
   115a8:	70e3      	strb	r3, [r4, #3]
   115aa:	e7d8      	b.n	1155e <mesh_form_pkt+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   115ac:	2500      	movs	r5, #0
   115ae:	e7d6      	b.n	1155e <mesh_form_pkt+0x92>
   115b0:	4605      	mov	r5, r0
   115b2:	e7d4      	b.n	1155e <mesh_form_pkt+0x92>
   115b4:	2007c08c 	.word	0x2007c08c
   115b8:	2007c094 	.word	0x2007c094
   115bc:	2007c457 	.word	0x2007c457
   115c0:	2007c33d 	.word	0x2007c33d

000115c4 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   115c4:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   115c6:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115c8:	4e13      	ldr	r6, [pc, #76]	; (11618 <mesh_send_formed_pkt+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ca:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115cc:	7032      	strb	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ce:	b920      	cbnz	r0, 115da <mesh_send_formed_pkt+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   115d0:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   115d2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   115d4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   115d6:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   115d8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115da:	f7ff fdaf 	bl	1113c <mesh_send_packet>
   115de:	4605      	mov	r5, r0
   115e0:	2800      	cmp	r0, #0
   115e2:	d0f5      	beq.n	115d0 <mesh_send_formed_pkt+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   115e4:	7923      	ldrb	r3, [r4, #4]
   115e6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   115ea:	2b40      	cmp	r3, #64	; 0x40
   115ec:	d010      	beq.n	11610 <mesh_send_formed_pkt+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   115ee:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   115f2:	424a      	negs	r2, r1
   115f4:	414a      	adcs	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115f6:	2bc0      	cmp	r3, #192	; 0xc0
   115f8:	d10b      	bne.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   115fa:	78e3      	ldrb	r3, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   115fc:	b14b      	cbz	r3, 11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115fe:	7861      	ldrb	r1, [r4, #1]
   11600:	4299      	cmp	r1, r3
   11602:	d006      	beq.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   11604:	7961      	ldrb	r1, [r4, #5]
   11606:	4620      	mov	r0, r4
   11608:	0909      	lsrs	r1, r1, #4
   1160a:	f7ff fe15 	bl	11238 <mesh_pending_packets_add>
   1160e:	e7e0      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11610:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   11612:	2a00      	cmp	r2, #0
   11614:	d1f6      	bne.n	11604 <mesh_send_formed_pkt+0x40>
   11616:	e7dc      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11618:	2007c33d 	.word	0x2007c33d

0001161c <mesh_init>:
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1161c:	b082      	sub	sp, #8
   1161e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11622:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11624:	1e42      	subs	r2, r0, #1
   11626:	b2d2      	uxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11628:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1162a:	2afd      	cmp	r2, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1162c:	4605      	mov	r5, r0
   1162e:	460e      	mov	r6, r1
   11630:	9315      	str	r3, [sp, #84]	; 0x54
   11632:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11636:	d905      	bls.n	11644 <mesh_init+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   11638:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   1163a:	b00d      	add	sp, #52	; 0x34
   1163c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11640:	b002      	add	sp, #8
   11642:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   11644:	2b00      	cmp	r3, #0
   11646:	d0f7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   11648:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   1164a:	2f00      	cmp	r7, #0
   1164c:	d0f4      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   1164e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   11650:	2b00      	cmp	r3, #0
   11652:	d0f1      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   11654:	9b18      	ldr	r3, [sp, #96]	; 0x60
   11656:	2b00      	cmp	r3, #0
   11658:	d0ee      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   1165a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1165c:	2b00      	cmp	r3, #0
   1165e:	d0eb      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11660:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   11662:	2248      	movs	r2, #72	; 0x48
   11664:	2100      	movs	r1, #0
   11666:	4823      	ldr	r0, [pc, #140]	; (116f4 <mesh_init+0xd8>)
   11668:	f00c ff80 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   1166c:	2290      	movs	r2, #144	; 0x90
   1166e:	2100      	movs	r1, #0
   11670:	4821      	ldr	r0, [pc, #132]	; (116f8 <mesh_init+0xdc>)
   11672:	f00c ff7b 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   11676:	2210      	movs	r2, #16
   11678:	2100      	movs	r1, #0
   1167a:	4820      	ldr	r0, [pc, #128]	; (116fc <mesh_init+0xe0>)
   1167c:	f00c ff76 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11680:	4b1f      	ldr	r3, [pc, #124]	; (11700 <mesh_init+0xe4>)
   11682:	601c      	str	r4, [r3, #0]
   11684:	605c      	str	r4, [r3, #4]
   11686:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   11688:	4b1e      	ldr	r3, [pc, #120]	; (11704 <mesh_init+0xe8>)
   1168a:	601c      	str	r4, [r3, #0]
   1168c:	605c      	str	r4, [r3, #4]
   1168e:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   11690:	4b1d      	ldr	r3, [pc, #116]	; (11708 <mesh_init+0xec>)
   11692:	701d      	strb	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11694:	4b1d      	ldr	r3, [pc, #116]	; (1170c <mesh_init+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   11696:	4d1e      	ldr	r5, [pc, #120]	; (11710 <mesh_init+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11698:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   1169a:	ae15      	add	r6, sp, #84	; 0x54
   1169c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   1169e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   116a0:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116a2:	2218      	movs	r2, #24
   116a4:	4621      	mov	r1, r4
   116a6:	481b      	ldr	r0, [pc, #108]	; (11714 <mesh_init+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   116a8:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116aa:	f00c ff5f 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   116ae:	4649      	mov	r1, r9
   116b0:	2217      	movs	r2, #23
   116b2:	4818      	ldr	r0, [pc, #96]	; (11714 <mesh_init+0xf8>)
   116b4:	f00e fcf5 	bl	200a2 <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   116b8:	4621      	mov	r1, r4
   116ba:	4620      	mov	r0, r4
   116bc:	47b8      	blx	r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   116be:	2800      	cmp	r0, #0
   116c0:	d0ba      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   116c2:	f1b8 0f00 	cmp.w	r8, #0
   116c6:	d102      	bne.n	116ce <mesh_init+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   116c8:	f7ff fd12 	bl	110f0 <mesh_update_soft_timers>
   116cc:	e7b5      	b.n	1163a <mesh_init+0x1e>
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   116ce:	2306      	movs	r3, #6
   116d0:	9302      	str	r3, [sp, #8]
   116d2:	4b11      	ldr	r3, [pc, #68]	; (11718 <mesh_init+0xfc>)
   116d4:	4622      	mov	r2, r4
   116d6:	9301      	str	r3, [sp, #4]
   116d8:	2301      	movs	r3, #1
   116da:	21ff      	movs	r1, #255	; 0xff
   116dc:	9300      	str	r3, [sp, #0]
   116de:	a804      	add	r0, sp, #16
   116e0:	f7ff fef4 	bl	114cc <mesh_form_pkt>
   116e4:	2800      	cmp	r0, #0
   116e6:	d0a7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   116e8:	a804      	add	r0, sp, #16
   116ea:	f7ff ff6b 	bl	115c4 <mesh_send_formed_pkt>
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   116ee:	2800      	cmp	r0, #0
   116f0:	d0a2      	beq.n	11638 <mesh_init+0x1c>
   116f2:	e7e9      	b.n	116c8 <mesh_init+0xac>
   116f4:	2007c3f2 	.word	0x2007c3f2
   116f8:	2007c33e 	.word	0x2007c33e
   116fc:	2007c447 	.word	0x2007c447
   11700:	2007c43a 	.word	0x2007c43a
   11704:	2007c3ce 	.word	0x2007c3ce
   11708:	2007c08c 	.word	0x2007c08c
   1170c:	2007c446 	.word	0x2007c446
   11710:	2007c328 	.word	0x2007c328
   11714:	2007c3da 	.word	0x2007c3da
   11718:	00024a19 	.word	0x00024a19

0001171c <mesh_send>:
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   1171c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1171e:	2b18      	cmp	r3, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11720:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   11722:	d807      	bhi.n	11734 <mesh_send+0x18>
   11724:	1c1d      	adds	r5, r3, #0
   11726:	fab2 f482 	clz	r4, r2
   1172a:	bf18      	it	ne
   1172c:	2501      	movne	r5, #1
   1172e:	0964      	lsrs	r4, r4, #5
   11730:	42ac      	cmp	r4, r5
   11732:	d101      	bne.n	11738 <mesh_send+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   11734:	2000      	movs	r0, #0
   11736:	e00e      	b.n	11756 <mesh_send+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11738:	9302      	str	r3, [sp, #8]
   1173a:	9201      	str	r2, [sp, #4]
   1173c:	9500      	str	r5, [sp, #0]
   1173e:	460a      	mov	r2, r1
   11740:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   11744:	4601      	mov	r1, r0
   11746:	a804      	add	r0, sp, #16
   11748:	f7ff fec0 	bl	114cc <mesh_form_pkt>
   1174c:	2800      	cmp	r0, #0
   1174e:	d0f1      	beq.n	11734 <mesh_send+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11750:	a804      	add	r0, sp, #16
   11752:	f7ff ff37 	bl	115c4 <mesh_send_formed_pkt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   11756:	b00d      	add	sp, #52	; 0x34
   11758:	bd30      	pop	{r4, r5, pc}

0001175a <mesh_send_ack>:
mesh_send_ack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   1175a:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   1175c:	7953      	ldrb	r3, [r2, #5]
   1175e:	7814      	ldrb	r4, [r2, #0]
   11760:	091b      	lsrs	r3, r3, #4
   11762:	9300      	str	r3, [sp, #0]
   11764:	4602      	mov	r2, r0
   11766:	460b      	mov	r3, r1
   11768:	4620      	mov	r0, r4
   1176a:	2103      	movs	r1, #3
   1176c:	f7ff ffd6 	bl	1171c <mesh_send>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   11770:	b002      	add	sp, #8
   11772:	bd10      	pop	{r4, pc}

00011774 <mesh_get_routing_entry>:
mesh_get_routing_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081

const mesh_rte_table_t* mesh_get_routing_entry(const uint8_t route_num)
{
   11774:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1083
    mesh_rte_table_t *entry = NULL;
    uint8_t idx = 0, found_entries = 0;
   11776:	4619      	mov	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081
{
   11778:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1087

    // Routing table may have blank entries which do not account for route_num
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   1177a:	4a08      	ldr	r2, [pc, #32]	; (1179c <mesh_get_routing_entry+0x28>)
   1177c:	f812 5023 	ldrb.w	r5, [r2, r3, lsl #2]
   11780:	009c      	lsls	r4, r3, #2
   11782:	b12d      	cbz	r5, 11790 <mesh_get_routing_entry+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1088
            if (route_num == found_entries) {
   11784:	4288      	cmp	r0, r1
   11786:	d101      	bne.n	1178c <mesh_get_routing_entry+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1089
                entry = &g_rte_table[idx];
   11788:	1910      	adds	r0, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1090
                break;
   1178a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1092
            }
            ++found_entries;
   1178c:	3101      	adds	r1, #1
   1178e:	b2c9      	uxtb	r1, r1
   11790:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1086 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   11792:	2b04      	cmp	r3, #4
   11794:	d1f2      	bne.n	1177c <mesh_get_routing_entry+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1082
    mesh_rte_table_t *entry = NULL;
   11796:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1097
        }
    }

    return entry;
}
   11798:	bd30      	pop	{r4, r5, pc}
   1179a:	bf00      	nop
   1179c:	2007c447 	.word	0x2007c447

000117a0 <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

uint8_t mesh_get_num_routing_entries(void)
{
   117a0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   117a2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   117a4:	4a04      	ldr	r2, [pc, #16]	; (117b8 <mesh_get_num_routing_entries+0x18>)
   117a6:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   117aa:	b109      	cbz	r1, 117b0 <mesh_get_num_routing_entries+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   117ac:	3001      	adds	r0, #1
   117ae:	b2c0      	uxtb	r0, r0
   117b0:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   117b2:	2b04      	cmp	r3, #4
   117b4:	d1f7      	bne.n	117a6 <mesh_get_num_routing_entries+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   117b6:	4770      	bx	lr
   117b8:	2007c447 	.word	0x2007c447

000117bc <mesh_service>:
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   117bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   117c0:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   117c2:	2220      	movs	r2, #32
   117c4:	2100      	movs	r1, #0
   117c6:	4668      	mov	r0, sp
   117c8:	f00c fed0 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   117cc:	4ba3      	ldr	r3, [pc, #652]	; (11a5c <mesh_service+0x2a0>)
   117ce:	781b      	ldrb	r3, [r3, #0]
   117d0:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   117d4:	bb2b      	cbnz	r3, 11822 <mesh_service+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   117d6:	4fa2      	ldr	r7, [pc, #648]	; (11a60 <mesh_service+0x2a4>)
   117d8:	2120      	movs	r1, #32
   117da:	693b      	ldr	r3, [r7, #16]
   117dc:	4668      	mov	r0, sp
   117de:	4798      	blx	r3
   117e0:	b908      	cbnz	r0, 117e6 <mesh_service+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   117e2:	2400      	movs	r4, #0
   117e4:	e011      	b.n	1180a <mesh_service+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   117e6:	4d9f      	ldr	r5, [pc, #636]	; (11a64 <mesh_service+0x2a8>)
   117e8:	886b      	ldrh	r3, [r5, #2]
   117ea:	3301      	adds	r3, #1
   117ec:	806b      	strh	r3, [r5, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117ee:	f7ff ffd7 	bl	117a0 <mesh_get_num_routing_entries>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f2:	f89d 2004 	ldrb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117f6:	72a8      	strb	r0, [r5, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f8:	f002 0307 	and.w	r3, r2, #7
   117fc:	2b03      	cmp	r3, #3
   117fe:	d013      	beq.n	11828 <mesh_service+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   11800:	4a99      	ldr	r2, [pc, #612]	; (11a68 <mesh_service+0x2ac>)
   11802:	7813      	ldrb	r3, [r2, #0]
   11804:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11808:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   1180a:	f7ff fc71 	bl	110f0 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1180e:	2204      	movs	r2, #4
   11810:	4996      	ldr	r1, [pc, #600]	; (11a6c <mesh_service+0x2b0>)
   11812:	4620      	mov	r0, r4
   11814:	f7ff fd84 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   11818:	2202      	movs	r2, #2
   1181a:	4995      	ldr	r1, [pc, #596]	; (11a70 <mesh_service+0x2b4>)
   1181c:	4620      	mov	r0, r4
   1181e:	f7ff fd7f 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   11822:	b008      	add	sp, #32
   11824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   11828:	4b92      	ldr	r3, [pc, #584]	; (11a74 <mesh_service+0x2b8>)
   1182a:	f89d e002 	ldrb.w	lr, [sp, #2]
   1182e:	781e      	ldrb	r6, [r3, #0]
   11830:	45b6      	cmp	lr, r6
   11832:	d104      	bne.n	1183e <mesh_service+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11834:	4a8c      	ldr	r2, [pc, #560]	; (11a68 <mesh_service+0x2ac>)
   11836:	7813      	ldrb	r3, [r2, #0]
   11838:	f043 0302 	orr.w	r3, r3, #2
   1183c:	e7e4      	b.n	11808 <mesh_service+0x4c>
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1183e:	4d8e      	ldr	r5, [pc, #568]	; (11a78 <mesh_service+0x2bc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11840:	4621      	mov	r1, r4
   11842:	46a8      	mov	r8, r5
   11844:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   11848:	f89d 0000 	ldrb.w	r0, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   1184c:	f89d c006 	ldrb.w	ip, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11850:	fa5f f982 	uxtb.w	r9, r2
   11854:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   11858:	f813 a005 	ldrb.w	sl, [r3, r5]
   1185c:	4582      	cmp	sl, r0
   1185e:	d123      	bne.n	118a8 <mesh_service+0xec>
   11860:	442b      	add	r3, r5
   11862:	f893 a001 	ldrb.w	sl, [r3, #1]
   11866:	45e2      	cmp	sl, ip
   11868:	d11e      	bne.n	118a8 <mesh_service+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186a:	789d      	ldrb	r5, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   1186c:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186e:	ebb5 0509 	subs.w	r5, r5, r9
   11872:	bf18      	it	ne
   11874:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   11876:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   1187a:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1187e:	f7ff fd23 	bl	112c8 <mesh_get_rte_to_modify>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   11882:	f89d 2002 	ldrb.w	r2, [sp, #2]
   11886:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   11888:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   1188a:	2200      	movs	r2, #0
   1188c:	7082      	strb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   1188e:	f7ff fc9f 	bl	111d0 <mesh_update_rte_scores>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   11892:	f1b9 0f00 	cmp.w	r9, #0
   11896:	d001      	beq.n	1189c <mesh_service+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   11898:	2d00      	cmp	r5, #0
   1189a:	d0a2      	beq.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   1189c:	f89d 3000 	ldrb.w	r3, [sp]
   118a0:	42b3      	cmp	r3, r6
   118a2:	d133      	bne.n	1190c <mesh_service+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   118a4:	466c      	mov	r4, sp
   118a6:	e7b0      	b.n	1180a <mesh_service+0x4e>
   118a8:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   118aa:	2904      	cmp	r1, #4
   118ac:	d1d2      	bne.n	11854 <mesh_service+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ae:	4973      	ldr	r1, [pc, #460]	; (11a7c <mesh_service+0x2c0>)
   118b0:	680b      	ldr	r3, [r1, #0]
   118b2:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b4:	4a72      	ldr	r2, [pc, #456]	; (11a80 <mesh_service+0x2c4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118b6:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b8:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ba:	f883 c001 	strb.w	ip, [r3, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118be:	d106      	bne.n	118ce <mesh_service+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   118c0:	f8c1 8000 	str.w	r8, [r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118c4:	4586      	cmp	lr, r0
   118c6:	d105      	bne.n	118d4 <mesh_service+0x118>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   118c8:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   118ca:	46a9      	mov	r9, r5
   118cc:	e7d5      	b.n	1187a <mesh_service+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   118ce:	3303      	adds	r3, #3
   118d0:	600b      	str	r3, [r1, #0]
   118d2:	e7f7      	b.n	118c4 <mesh_service+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118d4:	4286      	cmp	r6, r0
   118d6:	d0f7      	beq.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   118d8:	f7ff fcf6 	bl	112c8 <mesh_get_rte_to_modify>
   118dc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   118de:	f7ff fc77 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   118e2:	782b      	ldrb	r3, [r5, #0]
   118e4:	b133      	cbz	r3, 118f4 <mesh_service+0x138>
   118e6:	f89d 3005 	ldrb.w	r3, [sp, #5]
   118ea:	78aa      	ldrb	r2, [r5, #2]
   118ec:	f003 030f 	and.w	r3, r3, #15
   118f0:	4293      	cmp	r3, r2
   118f2:	dce9      	bgt.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   118f4:	f89d 3000 	ldrb.w	r3, [sp]
   118f8:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   118fa:	f89d 3002 	ldrb.w	r3, [sp, #2]
   118fe:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   11900:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11904:	f3c3 0303 	ubfx	r3, r3, #0, #4
   11908:	70ab      	strb	r3, [r5, #2]
   1190a:	e7dd      	b.n	118c8 <mesh_service+0x10c>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   1190c:	f89d 8001 	ldrb.w	r8, [sp, #1]
   11910:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   11914:	d11b      	bne.n	1194e <mesh_service+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   11916:	683b      	ldr	r3, [r7, #0]
   11918:	2120      	movs	r1, #32
   1191a:	4668      	mov	r0, sp
   1191c:	4798      	blx	r3
   1191e:	b920      	cbnz	r0, 1192a <mesh_service+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   11920:	4a51      	ldr	r2, [pc, #324]	; (11a68 <mesh_service+0x2ac>)
   11922:	7813      	ldrb	r3, [r2, #0]
   11924:	f043 0304 	orr.w	r3, r3, #4
   11928:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   1192a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1192e:	f003 020f 	and.w	r2, r3, #15
   11932:	1c51      	adds	r1, r2, #1
   11934:	f361 0303 	bfi	r3, r1, #0, #4
   11938:	f88d 3005 	strb.w	r3, [sp, #5]
   1193c:	f3c3 1303 	ubfx	r3, r3, #4, #4
   11940:	429a      	cmp	r2, r3
   11942:	f6bf af4e 	bge.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   11946:	4668      	mov	r0, sp
   11948:	f7ff fbf8 	bl	1113c <mesh_send_packet>
   1194c:	e749      	b.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1194e:	4546      	cmp	r6, r8
   11950:	d12e      	bne.n	119b0 <mesh_service+0x1f4>
mesh_handle_our_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   11952:	f1b9 0f00 	cmp.w	r9, #0
   11956:	d10c      	bne.n	11972 <mesh_service+0x1b6>
   11958:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1195c:	b14b      	cbz	r3, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1195e:	683b      	ldr	r3, [r7, #0]
   11960:	2120      	movs	r1, #32
   11962:	4668      	mov	r0, sp
   11964:	4798      	blx	r3
   11966:	b920      	cbnz	r0, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   11968:	4a3f      	ldr	r2, [pc, #252]	; (11a68 <mesh_service+0x2ac>)
   1196a:	7813      	ldrb	r3, [r2, #0]
   1196c:	f043 0304 	orr.w	r3, r3, #4
   11970:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   11972:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11976:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1197a:	2b40      	cmp	r3, #64	; 0x40
   1197c:	d112      	bne.n	119a4 <mesh_service+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1197e:	f89d 3007 	ldrb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11982:	466a      	mov	r2, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   11984:	b923      	cbnz	r3, 11990 <mesh_service+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11986:	2118      	movs	r1, #24
   11988:	483e      	ldr	r0, [pc, #248]	; (11a84 <mesh_service+0x2c8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1198a:	f7ff fee6 	bl	1175a <mesh_send_ack>
   1198e:	e789      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   11990:	210c      	movs	r1, #12
   11992:	4834      	ldr	r0, [pc, #208]	; (11a64 <mesh_service+0x2a8>)
   11994:	f7ff fee1 	bl	1175a <mesh_send_ack>
   11998:	2800      	cmp	r0, #0
   1199a:	d183      	bne.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1199c:	2100      	movs	r1, #0
   1199e:	466a      	mov	r2, sp
   119a0:	4608      	mov	r0, r1
   119a2:	e7f2      	b.n	1198a <mesh_service+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   119a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
   119a8:	2b00      	cmp	r3, #0
   119aa:	f47f af7b 	bne.w	118a4 <mesh_service+0xe8>
   119ae:	e7f5      	b.n	1199c <mesh_service+0x1e0>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   119b0:	4b35      	ldr	r3, [pc, #212]	; (11a88 <mesh_service+0x2cc>)
   119b2:	781f      	ldrb	r7, [r3, #0]
   119b4:	2f00      	cmp	r7, #0
   119b6:	f43f af14 	beq.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   119ba:	f89d 5005 	ldrb.w	r5, [sp, #5]
   119be:	f005 090f 	and.w	r9, r5, #15
   119c2:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   119c6:	45d1      	cmp	r9, sl
   119c8:	f6bf af0b 	bge.w	117e2 <mesh_service+0x26>
mesh_handle_mesh_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   119cc:	4640      	mov	r0, r8
   119ce:	f7ff fbed 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119d2:	f89d 3003 	ldrb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119d6:	f109 0901 	add.w	r9, r9, #1
   119da:	f369 0503 	bfi	r5, r9, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119de:	429e      	cmp	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119e0:	f88d 5005 	strb.w	r5, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119e4:	d124      	bne.n	11a30 <mesh_service+0x274>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   119e6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   119ea:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   119ee:	2b40      	cmp	r3, #64	; 0x40
   119f0:	d003      	beq.n	119fa <mesh_service+0x23e>
   119f2:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   119f6:	4257      	negs	r7, r2
   119f8:	4157      	adcs	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fa:	b350      	cbz	r0, 11a52 <mesh_service+0x296>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   119fc:	2bc0      	cmp	r3, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fe:	7844      	ldrb	r4, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a00:	d120      	bne.n	11a44 <mesh_service+0x288>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   11a02:	45a0      	cmp	r8, r4
   11a04:	d012      	beq.n	11a2c <mesh_service+0x270>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a06:	3400      	adds	r4, #0
   11a08:	bf18      	it	ne
   11a0a:	2401      	movne	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a0c:	433c      	orrs	r4, r7
   11a0e:	f004 0401 	and.w	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   11a12:	b1d0      	cbz	r0, 11a4a <mesh_service+0x28e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   11a14:	7843      	ldrb	r3, [r0, #1]
   11a16:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   11a1a:	7885      	ldrb	r5, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   11a1c:	4668      	mov	r0, sp
   11a1e:	f7ff fb8d 	bl	1113c <mesh_send_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   11a22:	2c00      	cmp	r4, #0
   11a24:	f43f af3e 	beq.w	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a28:	4629      	mov	r1, r5
   11a2a:	e007      	b.n	11a3c <mesh_service+0x280>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a2c:	2400      	movs	r4, #0
   11a2e:	e7ed      	b.n	11a0c <mesh_service+0x250>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   11a30:	2b00      	cmp	r3, #0
   11a32:	f47f af37 	bne.w	118a4 <mesh_service+0xe8>
   11a36:	2800      	cmp	r0, #0
   11a38:	d1ec      	bne.n	11a14 <mesh_service+0x258>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   11a3a:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a3c:	4668      	mov	r0, sp
   11a3e:	f7ff fbfb 	bl	11238 <mesh_pending_packets_add>
   11a42:	e72f      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a44:	463c      	mov	r4, r7
   11a46:	e7e5      	b.n	11a14 <mesh_service+0x258>
   11a48:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   11a4a:	2500      	movs	r5, #0
   11a4c:	f88d 5003 	strb.w	r5, [sp, #3]
   11a50:	e7e4      	b.n	11a1c <mesh_service+0x260>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a52:	2bc0      	cmp	r3, #192	; 0xc0
   11a54:	d1f8      	bne.n	11a48 <mesh_service+0x28c>
   11a56:	4604      	mov	r4, r0
   11a58:	e7d8      	b.n	11a0c <mesh_service+0x250>
   11a5a:	bf00      	nop
   11a5c:	2007c33d 	.word	0x2007c33d
   11a60:	2007c328 	.word	0x2007c328
   11a64:	2007c3ce 	.word	0x2007c3ce
   11a68:	2007c33c 	.word	0x2007c33c
   11a6c:	2007c33e 	.word	0x2007c33e
   11a70:	2007c3f2 	.word	0x2007c3f2
   11a74:	2007c08c 	.word	0x2007c08c
   11a78:	2007c43a 	.word	0x2007c43a
   11a7c:	2007c090 	.word	0x2007c090
   11a80:	2007c443 	.word	0x2007c443
   11a84:	2007c3da 	.word	0x2007c3da
   11a88:	2007c446 	.word	0x2007c446

00011a8c <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   11a8c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   11a8e:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   11a90:	4a09      	ldr	r2, [pc, #36]	; (11ab8 <mesh_get_pnd_pkt_count+0x2c>)
   11a92:	18d1      	adds	r1, r2, r3
   11a94:	7849      	ldrb	r1, [r1, #1]
   11a96:	b109      	cbz	r1, 11a9c <mesh_get_pnd_pkt_count+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   11a98:	3001      	adds	r0, #1
   11a9a:	b2c0      	uxtb	r0, r0
   11a9c:	3324      	adds	r3, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   11a9e:	2b90      	cmp	r3, #144	; 0x90
   11aa0:	d1f7      	bne.n	11a92 <mesh_get_pnd_pkt_count+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aa2:	4b06      	ldr	r3, [pc, #24]	; (11abc <mesh_get_pnd_pkt_count+0x30>)
   11aa4:	785a      	ldrb	r2, [r3, #1]
   11aa6:	b10a      	cbz	r2, 11aac <mesh_get_pnd_pkt_count+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11aa8:	3001      	adds	r0, #1
   11aaa:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aac:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   11ab0:	b10b      	cbz	r3, 11ab6 <mesh_get_pnd_pkt_count+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11ab2:	3001      	adds	r0, #1
   11ab4:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   11ab6:	4770      	bx	lr
   11ab8:	2007c33e 	.word	0x2007c33e
   11abc:	2007c3f2 	.word	0x2007c3f2

00011ac0 <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1153
                           (MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
    return timeout;
}

uint32_t mesh_get_max_timeout_before_packet_fails(uint8_t node_addr)
{
   11ac0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1154
    mesh_rte_table_t *e =  mesh_find_rte_tbl_entry(node_addr);
   11ac2:	f7ff fb73 	bl	111ac <mesh_find_rte_tbl_entry>
   11ac6:	4b06      	ldr	r3, [pc, #24]	; (11ae0 <mesh_get_max_timeout_before_packet_fails+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155
    uint32_t timeout = e ? (1 + e->num_hops) * g_retry_count * MESH_ACK_TIMEOUT_MS :
   11ac8:	b128      	cbz	r0, 11ad6 <mesh_get_max_timeout_before_packet_fails+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155 (discriminator 1)
   11aca:	7882      	ldrb	r2, [r0, #2]
   11acc:	7818      	ldrb	r0, [r3, #0]
   11ace:	fb02 0000 	mla	r0, r2, r0, r0
   11ad2:	00c0      	lsls	r0, r0, #3
   11ad4:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1156 (discriminator 2)
                           (g_retry_count * MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
   11ad6:	2018      	movs	r0, #24
   11ad8:	781b      	ldrb	r3, [r3, #0]
   11ada:	4358      	muls	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1158 (discriminator 2)
    return timeout;
}
   11adc:	bd08      	pop	{r3, pc}
   11ade:	bf00      	nop
   11ae0:	2007c094 	.word	0x2007c094

00011ae4 <mesh_get_stats>:
mesh_get_stats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1163

#if MESH_USE_STATISTICS
mesh_stats_t mesh_get_stats(void)
{
    return g_mesh_stats;
   11ae4:	4903      	ldr	r1, [pc, #12]	; (11af4 <mesh_get_stats+0x10>)
   11ae6:	680b      	ldr	r3, [r1, #0]
   11ae8:	6003      	str	r3, [r0, #0]
   11aea:	684b      	ldr	r3, [r1, #4]
   11aec:	6043      	str	r3, [r0, #4]
   11aee:	688b      	ldr	r3, [r1, #8]
   11af0:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1164
}
   11af2:	4770      	bx	lr
   11af4:	2007c3ce 	.word	0x2007c3ce

00011af8 <mem_cpy>:
mem_cpy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   11af8:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   11afa:	4604      	mov	r4, r0
   11afc:	1f0d      	subs	r5, r1, #4
   11afe:	1b13      	subs	r3, r2, r4
   11b00:	4403      	add	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   11b02:	2b03      	cmp	r3, #3
   11b04:	d80a      	bhi.n	11b1c <mem_cpy+0x24>
   11b06:	f022 0303 	bic.w	r3, r2, #3
   11b0a:	4419      	add	r1, r3
   11b0c:	f002 0203 	and.w	r2, r2, #3
   11b10:	3b01      	subs	r3, #1
   11b12:	4418      	add	r0, r3
   11b14:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   11b16:	4291      	cmp	r1, r2
   11b18:	d105      	bne.n	11b26 <mem_cpy+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   11b1a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   11b1c:	f855 3f04 	ldr.w	r3, [r5, #4]!
   11b20:	f844 3b04 	str.w	r3, [r4], #4
   11b24:	e7eb      	b.n	11afe <mem_cpy+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   11b26:	f811 3b01 	ldrb.w	r3, [r1], #1
   11b2a:	f800 3f01 	strb.w	r3, [r0, #1]!
   11b2e:	e7f2      	b.n	11b16 <mem_cpy+0x1e>

00011b30 <mem_set>:
mem_set():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   11b30:	4402      	add	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   11b32:	4290      	cmp	r0, r2
   11b34:	d100      	bne.n	11b38 <mem_set+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   11b36:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   11b38:	f800 1b01 	strb.w	r1, [r0], #1
   11b3c:	e7f9      	b.n	11b32 <mem_set+0x2>

00011b3e <sum_sfn>:
sum_sfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   11b3e:	4602      	mov	r2, r0
   11b40:	f100 010b 	add.w	r1, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   11b44:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   11b46:	01c3      	lsls	r3, r0, #7
   11b48:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   11b4c:	f812 0b01 	ldrb.w	r0, [r2], #1
   11b50:	4403      	add	r3, r0
   11b52:	428a      	cmp	r2, r1
   11b54:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   11b58:	d1f5      	bne.n	11b46 <sum_sfn+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   11b5a:	4770      	bx	lr

00011b5c <get_ldnumber>:
get_ldnumber():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   11b5c:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   11b5e:	b510      	push	{r4, lr}
   11b60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   11b62:	b153      	cbz	r3, 11b7a <get_ldnumber+0x1e>
   11b64:	4619      	mov	r1, r3
   11b66:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   11b68:	f811 0b01 	ldrb.w	r0, [r1], #1
   11b6c:	281f      	cmp	r0, #31
   11b6e:	d910      	bls.n	11b92 <get_ldnumber+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   11b70:	283a      	cmp	r0, #58	; 0x3a
   11b72:	d1f8      	bne.n	11b66 <get_ldnumber+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   11b74:	1c59      	adds	r1, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   11b76:	428a      	cmp	r2, r1
   11b78:	d002      	beq.n	11b80 <get_ldnumber+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   11b7a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   11b7e:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b80:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   11b82:	3b30      	subs	r3, #48	; 0x30
   11b84:	b2d9      	uxtb	r1, r3
   11b86:	2901      	cmp	r1, #1
   11b88:	d8f7      	bhi.n	11b7a <get_ldnumber+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11b8a:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b8c:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11b8e:	6022      	str	r2, [r4, #0]
   11b90:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2122
		vol = 0;		/* Drive 0 */
   11b92:	2000      	movs	r0, #0
   11b94:	bd10      	pop	{r4, pc}

00011b96 <get_fileinfo>:
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11b96:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11b98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1744
	p = fno->fname;
   11b9c:	f101 0209 	add.w	r2, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11ba0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11ba2:	b363      	cbz	r3, 11bfe <get_fileinfo+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1748
		i = 0;
   11ba4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11ba6:	272e      	movs	r7, #46	; 0x2e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1746
		BYTE *dir = dp->dir;
   11ba8:	6941      	ldr	r1, [r0, #20]
   11baa:	1e4e      	subs	r6, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1750
			c = (TCHAR)dir[i++];
   11bac:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   11bb0:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1751
			if (c == ' ') continue;			/* Skip padding spaces */
   11bb2:	2b20      	cmp	r3, #32
   11bb4:	d019      	beq.n	11bea <get_fileinfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11bb6:	2b05      	cmp	r3, #5
   11bb8:	d048      	beq.n	11c4c <get_fileinfo+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11bba:	2c09      	cmp	r4, #9
   11bbc:	d101      	bne.n	11bc2 <get_fileinfo+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753 (discriminator 1)
   11bbe:	7017      	strb	r7, [r2, #0]
   11bc0:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755
			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
   11bc2:	f1a3 0e41 	sub.w	lr, r3, #65	; 0x41
   11bc6:	f1be 0f19 	cmp.w	lr, #25
   11bca:	d80c      	bhi.n	11be6 <get_fileinfo+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755 (discriminator 1)
   11bcc:	2c08      	cmp	r4, #8
   11bce:	bf8c      	ite	hi
   11bd0:	f04f 0c10 	movhi.w	ip, #16
   11bd4:	f04f 0c08 	movls.w	ip, #8
   11bd8:	f891 e00c 	ldrb.w	lr, [r1, #12]
   11bdc:	ea1c 0f0e 	tst.w	ip, lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1756 (discriminator 1)
				c += 0x20;			/* To lower */
   11be0:	bf1c      	itt	ne
   11be2:	3320      	addne	r3, #32
   11be4:	b2db      	uxtbne	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1764
			*p++ = c;
   11be6:	7013      	strb	r3, [r2, #0]
   11be8:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1749
		while (i < 11) {		/* Copy name body and extension */
   11bea:	2c0b      	cmp	r4, #11
   11bec:	d1de      	bne.n	11bac <get_fileinfo+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1766
		fno->fattrib = dir[DIR_Attr];				/* Attribute */
   11bee:	7acb      	ldrb	r3, [r1, #11]
   11bf0:	722b      	strb	r3, [r5, #8]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
#define	ST_WORD(ptr,val)	*(WORD*)(BYTE*)(ptr)=(WORD)(val)
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11bf2:	69cb      	ldr	r3, [r1, #28]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1767
		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
   11bf4:	602b      	str	r3, [r5, #0]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11bf6:	8b0b      	ldrh	r3, [r1, #24]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1768
		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
   11bf8:	80ab      	strh	r3, [r5, #4]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11bfa:	8acb      	ldrh	r3, [r1, #22]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1769
		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
   11bfc:	80eb      	strh	r3, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1771
	*p = 0;		/* Terminate SFN string by a \0 */
   11bfe:	2400      	movs	r4, #0
   11c00:	7014      	strb	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1774
	if (fno->lfname) {
   11c02:	69ae      	ldr	r6, [r5, #24]
   11c04:	b33e      	cbz	r6, 11c56 <get_fileinfo+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c06:	6903      	ldr	r3, [r0, #16]
   11c08:	b923      	cbnz	r3, 11c14 <get_fileinfo+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1777
		i = 0; p = fno->lfname;
   11c0a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1791
		p[i] = 0;	/* Terminate LFN string by a \0 */
   11c0c:	2300      	movs	r3, #0
   11c0e:	5533      	strb	r3, [r6, r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1794
}
   11c10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 1)
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c14:	69eb      	ldr	r3, [r5, #28]
   11c16:	2b00      	cmp	r3, #0
   11c18:	d0f7      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 2)
   11c1a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   11c1e:	8c02      	ldrh	r2, [r0, #32]
   11c20:	429a      	cmp	r2, r3
   11c22:	d0f2      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1779
			lfn = dp->lfn;
   11c24:	f8d0 801c 	ldr.w	r8, [r0, #28]
   11c28:	1e77      	subs	r7, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1780
			while ((w = *lfn++) != 0) {		/* Get an LFN character */
   11c2a:	f838 0014 	ldrh.w	r0, [r8, r4, lsl #1]
   11c2e:	2800      	cmp	r0, #0
   11c30:	d0ec      	beq.n	11c0c <get_fileinfo+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1782
				w = ff_convert(w, 0);		/* Unicode -> OEM */
   11c32:	2100      	movs	r1, #0
   11c34:	f001 ffe2 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1783
				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
   11c38:	2800      	cmp	r0, #0
   11c3a:	d0e6      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1787
				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
   11c3c:	69eb      	ldr	r3, [r5, #28]
   11c3e:	3b01      	subs	r3, #1
   11c40:	429c      	cmp	r4, r3
   11c42:	d2e2      	bcs.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1788
				p[i++] = (TCHAR)w;
   11c44:	3401      	adds	r4, #1
   11c46:	f807 0f01 	strb.w	r0, [r7, #1]!
   11c4a:	e7ee      	b.n	11c2a <get_fileinfo+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c4c:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11c4e:	f04f 03e5 	mov.w	r3, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c52:	d1c8      	bne.n	11be6 <get_fileinfo+0x50>
   11c54:	e7b3      	b.n	11bbe <get_fileinfo+0x28>
   11c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00011c5a <sync_window.part.1>:
sync_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   11c5c:	6b05      	ldr	r5, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c5e:	f100 0734 	add.w	r7, r0, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c62:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c64:	2301      	movs	r3, #1
   11c66:	462a      	mov	r2, r5
   11c68:	4639      	mov	r1, r7
   11c6a:	7840      	ldrb	r0, [r0, #1]
   11c6c:	f002 fbb9 	bl	143e2 <disk_write>
   11c70:	b9a0      	cbnz	r0, 11c9c <sync_window.part.1+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c72:	6a63      	ldr	r3, [r4, #36]	; 0x24
   11c74:	69e2      	ldr	r2, [r4, #28]
   11c76:	1aeb      	subs	r3, r5, r3
   11c78:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   11c7a:	7120      	strb	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c7c:	d301      	bcc.n	11c82 <sync_window.part.1+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   11c7e:	2000      	movs	r0, #0
   11c80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c82:	78e6      	ldrb	r6, [r4, #3]
   11c84:	2e01      	cmp	r6, #1
   11c86:	d9fa      	bls.n	11c7e <sync_window.part.1+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c88:	69e3      	ldr	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c8a:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c8c:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c8e:	462a      	mov	r2, r5
   11c90:	2301      	movs	r3, #1
   11c92:	7860      	ldrb	r0, [r4, #1]
   11c94:	f002 fba5 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c98:	3e01      	subs	r6, #1
   11c9a:	e7f3      	b.n	11c84 <sync_window.part.1+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   11c9c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11c9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ca0 <sync_window>:
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   11ca0:	7903      	ldrb	r3, [r0, #4]
   11ca2:	b10b      	cbz	r3, 11ca8 <sync_window+0x8>
   11ca4:	f7ff bfd9 	b.w	11c5a <sync_window.part.1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ca8:	4618      	mov	r0, r3
   11caa:	4770      	bx	lr

00011cac <sync_fs>:
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   11cac:	b570      	push	{r4, r5, r6, lr}
   11cae:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   11cb0:	f7ff fff6 	bl	11ca0 <sync_window>
   11cb4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   11cb6:	bb80      	cbnz	r0, 11d1a <sync_fs+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   11cb8:	7823      	ldrb	r3, [r4, #0]
   11cba:	2b03      	cmp	r3, #3
   11cbc:	d125      	bne.n	11d0a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   11cbe:	7963      	ldrb	r3, [r4, #5]
   11cc0:	2b01      	cmp	r3, #1
   11cc2:	d122      	bne.n	11d0a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   11cc4:	f104 0634 	add.w	r6, r4, #52	; 0x34
   11cc8:	4601      	mov	r1, r0
   11cca:	f44f 7200 	mov.w	r2, #512	; 0x200
   11cce:	4630      	mov	r0, r6
   11cd0:	f7ff ff2e 	bl	11b30 <mem_set>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11cd4:	f64a 2255 	movw	r2, #43605	; 0xaa55
   11cd8:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11cdc:	4a0f      	ldr	r2, [pc, #60]	; (11d1c <sync_fs+0x70>)
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11cde:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11ce0:	6362      	str	r2, [r4, #52]	; 0x34
   11ce2:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   11ce6:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   11cea:	3220      	adds	r2, #32
   11cec:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   11cf0:	6962      	ldr	r2, [r4, #20]
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   11cf2:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11cf4:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   11cf8:	6922      	ldr	r2, [r4, #16]
   11cfa:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   11cfe:	6a22      	ldr	r2, [r4, #32]
   11d00:	3201      	adds	r2, #1
   11d02:	6322      	str	r2, [r4, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11d04:	f002 fb6d 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   11d08:	7165      	strb	r5, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   11d0a:	2200      	movs	r2, #0
   11d0c:	7860      	ldrb	r0, [r4, #1]
   11d0e:	4611      	mov	r1, r2
   11d10:	f002 fb83 	bl	1441a <disk_ioctl>
   11d14:	3000      	adds	r0, #0
   11d16:	bf18      	it	ne
   11d18:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   11d1a:	bd70      	pop	{r4, r5, r6, pc}
   11d1c:	41615252 	.word	0x41615252

00011d20 <move_window>:
move_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d20:	6b03      	ldr	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d22:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d24:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d26:	4605      	mov	r5, r0
   11d28:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d2a:	d011      	beq.n	11d50 <move_window+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   11d2c:	f7ff ffb8 	bl	11ca0 <sync_window>
   11d30:	4604      	mov	r4, r0
   11d32:	b110      	cbz	r0, 11d3a <move_window+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   11d34:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   11d36:	4620      	mov	r0, r4
   11d38:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   11d3a:	2301      	movs	r3, #1
   11d3c:	4632      	mov	r2, r6
   11d3e:	f105 0134 	add.w	r1, r5, #52	; 0x34
   11d42:	7868      	ldrb	r0, [r5, #1]
   11d44:	f002 fb31 	bl	143aa <disk_read>
   11d48:	2800      	cmp	r0, #0
   11d4a:	d1f3      	bne.n	11d34 <move_window+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   11d4c:	632e      	str	r6, [r5, #48]	; 0x30
   11d4e:	e7f2      	b.n	11d36 <move_window+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   11d50:	2400      	movs	r4, #0
   11d52:	e7f0      	b.n	11d36 <move_window+0x16>

00011d54 <check_fs>:
check_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d54:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d56:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d58:	7103      	strb	r3, [r0, #4]
   11d5a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11d5e:	6303      	str	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   11d62:	f7ff ffdd 	bl	11d20 <move_window>
   11d66:	b9a0      	cbnz	r0, 11d92 <check_fs+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   11d68:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11d6c:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   11d70:	429a      	cmp	r2, r3
   11d72:	d110      	bne.n	11d96 <check_fs+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   11d74:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   11d78:	4a08      	ldr	r2, [pc, #32]	; (11d9c <check_fs+0x48>)
   11d7a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   11d7e:	4293      	cmp	r3, r2
   11d80:	d00a      	beq.n	11d98 <check_fs+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   11d82:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   11d86:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   11d8a:	1a80      	subs	r0, r0, r2
   11d8c:	bf18      	it	ne
   11d8e:	2001      	movne	r0, #1
   11d90:	bd10      	pop	{r4, pc}
   11d92:	2003      	movs	r0, #3
   11d94:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   11d96:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   11d98:	bd10      	pop	{r4, pc}
   11d9a:	bf00      	nop
   11d9c:	00544146 	.word	0x00544146

00011da0 <find_volume>:
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   11da0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11da2:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   11da4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11da6:	b085      	sub	sp, #20
   11da8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11daa:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11dac:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11dae:	f7ff fed5 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11db2:	1e06      	subs	r6, r0, #0
   11db4:	f2c0 80f1 	blt.w	11f9a <find_volume+0x1fa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   11db8:	4b7d      	ldr	r3, [pc, #500]	; (11fb0 <find_volume+0x210>)
   11dba:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11dbe:	2c00      	cmp	r4, #0
   11dc0:	f000 80ed 	beq.w	11f9e <find_volume+0x1fe>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11dc4:	68e0      	ldr	r0, [r4, #12]
   11dc6:	f001 fef7 	bl	13bb8 <ff_req_grant>
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   11dca:	2800      	cmp	r0, #0
   11dcc:	f000 80e9 	beq.w	11fa2 <find_volume+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   11dd0:	603c      	str	r4, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   11dd2:	7823      	ldrb	r3, [r4, #0]
   11dd4:	b16b      	cbz	r3, 11df2 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   11dd6:	7860      	ldrb	r0, [r4, #1]
   11dd8:	f002 fadf 	bl	1439a <disk_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   11ddc:	07c1      	lsls	r1, r0, #31
   11dde:	d408      	bmi.n	11df2 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   11de0:	2d00      	cmp	r5, #0
   11de2:	f000 80b7 	beq.w	11f54 <find_volume+0x1b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   11de6:	f010 0004 	ands.w	r0, r0, #4
   11dea:	d000      	beq.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   11dec:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   11dee:	b005      	add	sp, #20
   11df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11df2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11df4:	b2f0      	uxtb	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11df6:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11df8:	7060      	strb	r0, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   11dfa:	f002 fabb 	bl	14374 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   11dfe:	07c2      	lsls	r2, r0, #31
   11e00:	f100 80d1 	bmi.w	11fa6 <find_volume+0x206>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   11e04:	b10d      	cbz	r5, 11e0a <find_volume+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   11e06:	0743      	lsls	r3, r0, #29
   11e08:	d4f0      	bmi.n	11dec <find_volume+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   11e0a:	2100      	movs	r1, #0
   11e0c:	4620      	mov	r0, r4
   11e0e:	f7ff ffa1 	bl	11d54 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   11e12:	2801      	cmp	r0, #1
   11e14:	f040 80ac 	bne.w	11f70 <find_volume+0x1d0>
   11e18:	4621      	mov	r1, r4
   11e1a:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   11e1c:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   11e20:	b10b      	cbz	r3, 11e26 <find_volume+0x86>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e22:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   11e26:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   11e2a:	3201      	adds	r2, #1
   11e2c:	2a04      	cmp	r2, #4
   11e2e:	f101 0110 	add.w	r1, r1, #16
   11e32:	d1f3      	bne.n	11e1c <find_volume+0x7c>
   11e34:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   11e36:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11e3a:	2d00      	cmp	r5, #0
   11e3c:	f000 808c 	beq.w	11f58 <find_volume+0x1b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   11e40:	4629      	mov	r1, r5
   11e42:	4620      	mov	r0, r4
   11e44:	f7ff ff86 	bl	11d54 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11e48:	2800      	cmp	r0, #0
   11e4a:	f040 8086 	bne.w	11f5a <find_volume+0x1ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   11e4e:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   11e52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   11e56:	f040 8089 	bne.w	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   11e5a:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   11e5e:	b901      	cbnz	r1, 11e62 <find_volume+0xc2>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   11e60:	6da1      	ldr	r1, [r4, #88]	; 0x58
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e62:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   11e66:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e68:	1e53      	subs	r3, r2, #1
   11e6a:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e6c:	70e2      	strb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e6e:	d87d      	bhi.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   11e70:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
   11e74:	70a6      	strb	r6, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   11e76:	2e00      	cmp	r6, #0
   11e78:	d078      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   11e7a:	1e73      	subs	r3, r6, #1
   11e7c:	4233      	tst	r3, r6
   11e7e:	d175      	bne.n	11f6c <find_volume+0x1cc>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e80:	f8b4 e045 	ldrh.w	lr, [r4, #69]	; 0x45
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e84:	f01e 0f0f 	tst.w	lr, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   11e88:	f8a4 e008 	strh.w	lr, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e8c:	d16e      	bne.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   11e8e:	f8b4 3047 	ldrh.w	r3, [r4, #71]	; 0x47
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   11e92:	b903      	cbnz	r3, 11e96 <find_volume+0xf6>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e94:	6d63      	ldr	r3, [r4, #84]	; 0x54
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e96:	f8b4 7042 	ldrh.w	r7, [r4, #66]	; 0x42
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   11e9a:	2f00      	cmp	r7, #0
   11e9c:	d066      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   11e9e:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   11ea0:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   11ea4:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   11ea6:	4283      	cmp	r3, r0
   11ea8:	d360      	bcc.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   11eaa:	1a1b      	subs	r3, r3, r0
   11eac:	fbb3 f3f6 	udiv	r3, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   11eb0:	2b00      	cmp	r3, #0
   11eb2:	d05b      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   11eb4:	f640 76f5 	movw	r6, #4085	; 0xff5
   11eb8:	42b3      	cmp	r3, r6
   11eba:	d95b      	bls.n	11f74 <find_volume+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   11ebc:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   11ec0:	42b3      	cmp	r3, r6
   11ec2:	bf94      	ite	ls
   11ec4:	2602      	movls	r6, #2
   11ec6:	2603      	movhi	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ec8:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11eca:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ecc:	4428      	add	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ece:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ed0:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   11ed2:	6225      	str	r5, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11ed4:	6267      	str	r7, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ed6:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ed8:	d14e      	bne.n	11f78 <find_volume+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   11eda:	f1be 0f00 	cmp.w	lr, #0
   11ede:	d145      	bne.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11ee0:	6e22      	ldr	r2, [r4, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   11ee2:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11ee4:	62a2      	str	r2, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   11ee6:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   11eea:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   11eee:	d33d      	bcc.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   11ef0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11ef4:	6163      	str	r3, [r4, #20]
   11ef6:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11ef8:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11efa:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11efc:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11efe:	d122      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   11f00:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   11f04:	2b01      	cmp	r3, #1
   11f06:	d11e      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   11f08:	1c69      	adds	r1, r5, #1
   11f0a:	4620      	mov	r0, r4
   11f0c:	f7ff ff08 	bl	11d20 <move_window>
   11f10:	b9c8      	cbnz	r0, 11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f12:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11f16:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   11f1a:	7160      	strb	r0, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f1c:	429a      	cmp	r2, r3
   11f1e:	d112      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   11f20:	6b62      	ldr	r2, [r4, #52]	; 0x34
   11f22:	4b24      	ldr	r3, [pc, #144]	; (11fb4 <find_volume+0x214>)
   11f24:	429a      	cmp	r2, r3
   11f26:	d10e      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   11f28:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   11f2c:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   11f30:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   11f34:	3320      	adds	r3, #32
   11f36:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   11f38:	bf01      	itttt	eq
   11f3a:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   11f3e:	6163      	streq	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   11f40:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   11f44:	6123      	streq	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f46:	4a1c      	ldr	r2, [pc, #112]	; (11fb8 <find_volume+0x218>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   11f48:	7026      	strb	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f4a:	8813      	ldrh	r3, [r2, #0]
   11f4c:	3301      	adds	r3, #1
   11f4e:	b29b      	uxth	r3, r3
   11f50:	8013      	strh	r3, [r2, #0]
   11f52:	80e3      	strh	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   11f54:	2000      	movs	r0, #0
   11f56:	e74a      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11f58:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11f5a:	3601      	adds	r6, #1
   11f5c:	2e04      	cmp	r6, #4
   11f5e:	f47f af6a 	bne.w	11e36 <find_volume+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11f62:	2803      	cmp	r0, #3
   11f64:	d021      	beq.n	11faa <find_volume+0x20a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   11f66:	2800      	cmp	r0, #0
   11f68:	f43f af71 	beq.w	11e4e <find_volume+0xae>
   11f6c:	200d      	movs	r0, #13
   11f6e:	e73e      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   11f70:	2500      	movs	r5, #0
   11f72:	e7f6      	b.n	11f62 <find_volume+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   11f74:	2601      	movs	r6, #1
   11f76:	e7a7      	b.n	11ec8 <find_volume+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   11f78:	f1be 0f00 	cmp.w	lr, #0
   11f7c:	d0f6      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f7e:	2e02      	cmp	r6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f80:	4417      	add	r7, r2
   11f82:	ea4f 0243 	mov.w	r2, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f86:	bf1c      	itt	ne
   11f88:	18d2      	addne	r2, r2, r3
   11f8a:	f003 0301 	andne.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f8e:	62a7      	str	r7, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f90:	bf0c      	ite	eq
   11f92:	4613      	moveq	r3, r2
   11f94:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   11f98:	e7a5      	b.n	11ee6 <find_volume+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11f9a:	200b      	movs	r0, #11
   11f9c:	e727      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11f9e:	200c      	movs	r0, #12
   11fa0:	e725      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   11fa2:	200f      	movs	r0, #15
   11fa4:	e723      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   11fa6:	2003      	movs	r0, #3
   11fa8:	e721      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11faa:	2001      	movs	r0, #1
   11fac:	e71f      	b.n	11dee <find_volume+0x4e>
   11fae:	bf00      	nop
   11fb0:	2007c45c 	.word	0x2007c45c
   11fb4:	41615252 	.word	0x41615252
   11fb8:	2007c464 	.word	0x2007c464

00011fbc <validate>:
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   11fbc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   11fbe:	4604      	mov	r4, r0
   11fc0:	b1a8      	cbz	r0, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   11fc2:	6803      	ldr	r3, [r0, #0]
   11fc4:	b19b      	cbz	r3, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   11fc6:	781a      	ldrb	r2, [r3, #0]
   11fc8:	b18a      	cbz	r2, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   11fca:	88d9      	ldrh	r1, [r3, #6]
   11fcc:	8882      	ldrh	r2, [r0, #4]
   11fce:	4291      	cmp	r1, r2
   11fd0:	d10d      	bne.n	11fee <validate+0x32>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11fd2:	68d8      	ldr	r0, [r3, #12]
   11fd4:	f001 fdf0 	bl	13bb8 <ff_req_grant>
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   11fd8:	b158      	cbz	r0, 11ff2 <validate+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   11fda:	6823      	ldr	r3, [r4, #0]
   11fdc:	7858      	ldrb	r0, [r3, #1]
   11fde:	f002 f9dc 	bl	1439a <disk_status>
   11fe2:	f010 0f01 	tst.w	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   11fe6:	bf14      	ite	ne
   11fe8:	2003      	movne	r0, #3
   11fea:	2000      	moveq	r0, #0
   11fec:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   11fee:	2009      	movs	r0, #9
   11ff0:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   11ff2:	200f      	movs	r0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   11ff4:	bd10      	pop	{r4, pc}

00011ff6 <unlock_fs>:
unlock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   11ff6:	b150      	cbz	r0, 1200e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   11ff8:	290f      	cmp	r1, #15
   11ffa:	d805      	bhi.n	12008 <unlock_fs+0x12>
   11ffc:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   12000:	fa23 f101 	lsr.w	r1, r3, r1
   12004:	07cb      	lsls	r3, r1, #31
   12006:	d402      	bmi.n	1200e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   12008:	68c0      	ldr	r0, [r0, #12]
   1200a:	f001 bde8 	b.w	13bde <ff_rel_grant>
   1200e:	4770      	bx	lr

00012010 <clust2sect>:
clust2sect():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12010:	6983      	ldr	r3, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   12012:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12014:	3b02      	subs	r3, #2
   12016:	4299      	cmp	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   12018:	bf3d      	ittte	cc
   1201a:	7883      	ldrbcc	r3, [r0, #2]
   1201c:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   1201e:	fb01 0003 	mlacc	r0, r1, r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12022:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   12024:	4770      	bx	lr

00012026 <get_fat>:
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   12026:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   12028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1202a:	4607      	mov	r7, r0
   1202c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   1202e:	d94b      	bls.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   12030:	6983      	ldr	r3, [r0, #24]
   12032:	4299      	cmp	r1, r3
   12034:	d248      	bcs.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   12036:	7803      	ldrb	r3, [r0, #0]
   12038:	2b02      	cmp	r3, #2
   1203a:	d029      	beq.n	12090 <get_fat+0x6a>
   1203c:	2b03      	cmp	r3, #3
   1203e:	d034      	beq.n	120aa <get_fat+0x84>
   12040:	2b01      	cmp	r3, #1
   12042:	d141      	bne.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   12044:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12048:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1204a:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   1204e:	f7ff fe67 	bl	11d20 <move_window>
   12052:	b110      	cbz	r0, 1205a <get_fat+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   12054:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1205a:	6a79      	ldr	r1, [r7, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   1205c:	f3c6 0308 	ubfx	r3, r6, #0, #9
   12060:	3601      	adds	r6, #1
   12062:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12064:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   12068:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   1206a:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1206e:	f7ff fe57 	bl	11d20 <move_window>
   12072:	2800      	cmp	r0, #0
   12074:	d1ee      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   12076:	f3c6 0608 	ubfx	r6, r6, #0, #9
   1207a:	443e      	add	r6, r7
   1207c:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   12080:	07e3      	lsls	r3, r4, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   12082:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   12086:	bf4c      	ite	mi
   12088:	0900      	lsrmi	r0, r0, #4
   1208a:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   1208e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   12090:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12092:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   12096:	f7ff fe43 	bl	11d20 <move_window>
   1209a:	2800      	cmp	r0, #0
   1209c:	d1da      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   1209e:	0066      	lsls	r6, r4, #1
   120a0:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   120a4:	443e      	add	r6, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   120a6:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   120a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   120aa:	6a41      	ldr	r1, [r0, #36]	; 0x24
   120ac:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   120b0:	f7ff fe36 	bl	11d20 <move_window>
   120b4:	2800      	cmp	r0, #0
   120b6:	d1cd      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   120b8:	00a4      	lsls	r4, r4, #2
   120ba:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   120be:	443c      	add	r4, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   120c0:	6b60      	ldr	r0, [r4, #52]	; 0x34
   120c2:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   120c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   120c8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   120ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000120cc <dir_sdi>:
dir_sdi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120cc:	b570      	push	{r4, r5, r6, lr}
   120ce:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   120d0:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120d2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120d4:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   120d6:	80e1      	strh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120d8:	d101      	bne.n	120de <dir_sdi+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   120da:	2002      	movs	r0, #2
   120dc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120de:	6803      	ldr	r3, [r0, #0]
   120e0:	6999      	ldr	r1, [r3, #24]
   120e2:	428a      	cmp	r2, r1
   120e4:	d2f9      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   120e6:	b9ba      	cbnz	r2, 12118 <dir_sdi+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   120e8:	7819      	ldrb	r1, [r3, #0]
   120ea:	2903      	cmp	r1, #3
   120ec:	d101      	bne.n	120f2 <dir_sdi+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   120ee:	6a99      	ldr	r1, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   120f0:	b999      	cbnz	r1, 1211a <dir_sdi+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   120f2:	8919      	ldrh	r1, [r3, #8]
   120f4:	428d      	cmp	r5, r1
   120f6:	d2f0      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   120f8:	6a98      	ldr	r0, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   120fa:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   120fc:	2800      	cmp	r0, #0
   120fe:	d0ec      	beq.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12100:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   12102:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12106:	3334      	adds	r3, #52	; 0x34
   12108:	f005 050f 	and.w	r5, r5, #15
   1210c:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   12110:	6120      	str	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12112:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   12114:	2000      	movs	r0, #0
   12116:	bd70      	pop	{r4, r5, r6, pc}
   12118:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   1211a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   1211c:	789e      	ldrb	r6, [r3, #2]
   1211e:	0136      	lsls	r6, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12120:	42b5      	cmp	r5, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   12122:	4611      	mov	r1, r2
   12124:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12126:	d202      	bcs.n	1212e <dir_sdi+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   12128:	f7ff ff72 	bl	12010 <clust2sect>
   1212c:	e7e5      	b.n	120fa <dir_sdi+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1212e:	f7ff ff7a 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12132:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   12134:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12136:	d007      	beq.n	12148 <dir_sdi+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   12138:	2801      	cmp	r0, #1
   1213a:	d9ce      	bls.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   1213c:	6823      	ldr	r3, [r4, #0]
   1213e:	699b      	ldr	r3, [r3, #24]
   12140:	4298      	cmp	r0, r3
   12142:	d2ca      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   12144:	1bad      	subs	r5, r5, r6
   12146:	e7eb      	b.n	12120 <dir_sdi+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12148:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   1214a:	bd70      	pop	{r4, r5, r6, pc}

0001214c <put_fat>:
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1214c:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   1214e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12150:	4605      	mov	r5, r0
   12152:	460c      	mov	r4, r1
   12154:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12156:	d960      	bls.n	1221a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   12158:	6983      	ldr	r3, [r0, #24]
   1215a:	4299      	cmp	r1, r3
   1215c:	d25d      	bcs.n	1221a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   1215e:	7803      	ldrb	r3, [r0, #0]
   12160:	2b02      	cmp	r3, #2
   12162:	d03a      	beq.n	121da <put_fat+0x8e>
   12164:	2b03      	cmp	r3, #3
   12166:	d045      	beq.n	121f4 <put_fat+0xa8>
   12168:	2b01      	cmp	r3, #1
   1216a:	d154      	bne.n	12216 <put_fat+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   1216c:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   12170:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12172:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   12176:	f7ff fdd3 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   1217a:	bb18      	cbnz	r0, 121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   1217c:	f3c7 0308 	ubfx	r3, r7, #0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   12180:	f014 0401 	ands.w	r4, r4, #1
   12184:	442b      	add	r3, r5
   12186:	bf17      	itett	ne
   12188:	f893 2034 	ldrbne.w	r2, [r3, #52]	; 0x34
   1218c:	b2f2      	uxtbeq	r2, r6
   1218e:	f002 010f 	andne.w	r1, r2, #15
   12192:	0132      	lslne	r2, r6, #4
   12194:	bf1c      	itt	ne
   12196:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   1219a:	430a      	orrne	r2, r1
   1219c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121a0:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121a2:	6a69      	ldr	r1, [r5, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   121a4:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121a6:	712b      	strb	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121a8:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   121ac:	4628      	mov	r0, r5
   121ae:	f7ff fdb7 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   121b2:	b938      	cbnz	r0, 121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   121b4:	f3c7 0708 	ubfx	r7, r7, #0, #9
   121b8:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121ba:	b134      	cbz	r4, 121ca <put_fat+0x7e>
   121bc:	f3c6 1607 	ubfx	r6, r6, #4, #8
   121c0:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   121c4:	2301      	movs	r3, #1
   121c6:	712b      	strb	r3, [r5, #4]
   121c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121ca:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   121ce:	f3c6 2603 	ubfx	r6, r6, #8, #4
   121d2:	f023 030f 	bic.w	r3, r3, #15
   121d6:	431e      	orrs	r6, r3
   121d8:	e7f2      	b.n	121c0 <put_fat+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   121da:	6a41      	ldr	r1, [r0, #36]	; 0x24
   121dc:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   121e0:	f7ff fd9e 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   121e4:	2800      	cmp	r0, #0
   121e6:	d1ed      	bne.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   121e8:	0064      	lsls	r4, r4, #1
   121ea:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   121ee:	442c      	add	r4, r5
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   121f0:	86a6      	strh	r6, [r4, #52]	; 0x34
   121f2:	e7e7      	b.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   121f4:	6a41      	ldr	r1, [r0, #36]	; 0x24
   121f6:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   121fa:	f7ff fd91 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   121fe:	2800      	cmp	r0, #0
   12200:	d1e0      	bne.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   12202:	00a4      	lsls	r4, r4, #2
   12204:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12208:	3434      	adds	r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   1220a:	592b      	ldr	r3, [r5, r4]
   1220c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   12210:	431e      	orrs	r6, r3
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12212:	512e      	str	r6, [r5, r4]
   12214:	e7d6      	b.n	121c4 <put_fat+0x78>
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   12216:	2002      	movs	r0, #2
   12218:	e7d4      	b.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   1221a:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   1221c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001221e <create_chain>:
create_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   1221e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12220:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   12222:	460f      	mov	r7, r1
   12224:	b971      	cbnz	r1, 12244 <create_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   12226:	6906      	ldr	r6, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12228:	b1e6      	cbz	r6, 12264 <create_chain+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   1222a:	6983      	ldr	r3, [r0, #24]
   1222c:	429e      	cmp	r6, r3
   1222e:	bf28      	it	cs
   12230:	2601      	movcs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   12232:	4634      	mov	r4, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12234:	69ab      	ldr	r3, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   12236:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12238:	429c      	cmp	r4, r3
   1223a:	d316      	bcc.n	1226a <create_chain+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   1223c:	2e01      	cmp	r6, #1
   1223e:	d813      	bhi.n	12268 <create_chain+0x4a>
   12240:	2400      	movs	r4, #0
   12242:	e008      	b.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12244:	f7ff feef 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12248:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   1224a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   1224c:	d935      	bls.n	122ba <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   1224e:	3001      	adds	r0, #1
   12250:	d103      	bne.n	1225a <create_chain+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12252:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   12256:	4620      	mov	r0, r4
   12258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   1225a:	69ab      	ldr	r3, [r5, #24]
   1225c:	429c      	cmp	r4, r3
   1225e:	d3fa      	bcc.n	12256 <create_chain+0x38>
   12260:	463e      	mov	r6, r7
   12262:	e7e6      	b.n	12232 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12264:	2601      	movs	r6, #1
   12266:	e7e4      	b.n	12232 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12268:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   1226a:	4621      	mov	r1, r4
   1226c:	4628      	mov	r0, r5
   1226e:	f7ff feda 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   12272:	b130      	cbz	r0, 12282 <create_chain+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   12274:	1c41      	adds	r1, r0, #1
   12276:	d0ec      	beq.n	12252 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   12278:	2801      	cmp	r0, #1
   1227a:	d01e      	beq.n	122ba <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   1227c:	42b4      	cmp	r4, r6
   1227e:	d1d9      	bne.n	12234 <create_chain+0x16>
   12280:	e7de      	b.n	12240 <create_chain+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   12282:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   12286:	4621      	mov	r1, r4
   12288:	4628      	mov	r0, r5
   1228a:	f7ff ff5f 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   1228e:	b990      	cbnz	r0, 122b6 <create_chain+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   12290:	b957      	cbnz	r7, 122a8 <create_chain+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   12292:	696b      	ldr	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   12294:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   12296:	1c5a      	adds	r2, r3, #1
   12298:	d0dd      	beq.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   1229a:	3b01      	subs	r3, #1
   1229c:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   1229e:	796b      	ldrb	r3, [r5, #5]
   122a0:	f043 0301 	orr.w	r3, r3, #1
   122a4:	716b      	strb	r3, [r5, #5]
   122a6:	e7d6      	b.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   122a8:	4622      	mov	r2, r4
   122aa:	4639      	mov	r1, r7
   122ac:	4628      	mov	r0, r5
   122ae:	f7ff ff4d 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   122b2:	2800      	cmp	r0, #0
   122b4:	d0ed      	beq.n	12292 <create_chain+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   122b6:	2801      	cmp	r0, #1
   122b8:	d0cb      	beq.n	12252 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   122ba:	2401      	movs	r4, #1
   122bc:	e7cb      	b.n	12256 <create_chain+0x38>

000122be <dir_next>:
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122be:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122c2:	88c6      	ldrh	r6, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122c4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122c6:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122c8:	b2b3      	uxth	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122ca:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122cc:	b913      	cbnz	r3, 122d4 <dir_next+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   122ce:	2004      	movs	r0, #4
   122d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122d4:	6903      	ldr	r3, [r0, #16]
   122d6:	2b00      	cmp	r3, #0
   122d8:	d0f9      	beq.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   122da:	f016 080f 	ands.w	r8, r6, #15
   122de:	d107      	bne.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122e0:	68c1      	ldr	r1, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   122e2:	3301      	adds	r3, #1
   122e4:	6103      	str	r3, [r0, #16]
   122e6:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122e8:	b959      	cbnz	r1, 12302 <dir_next+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   122ea:	8903      	ldrh	r3, [r0, #8]
   122ec:	429e      	cmp	r6, r3
   122ee:	d2ee      	bcs.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   122f0:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   122f2:	80e6      	strh	r6, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   122f4:	3334      	adds	r3, #52	; 0x34
   122f6:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   122fa:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   122fc:	2000      	movs	r0, #0
   122fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   12302:	7887      	ldrb	r7, [r0, #2]
   12304:	3f01      	subs	r7, #1
   12306:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   1230a:	d1f1      	bne.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1230c:	f7ff fe8b 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12310:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   12312:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12314:	d802      	bhi.n	1231c <dir_next+0x5e>
   12316:	2002      	movs	r0, #2
   12318:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   1231c:	1c42      	adds	r2, r0, #1
   1231e:	d102      	bne.n	12326 <dir_next+0x68>
   12320:	2001      	movs	r0, #1
   12322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   12326:	6820      	ldr	r0, [r4, #0]
   12328:	6983      	ldr	r3, [r0, #24]
   1232a:	429d      	cmp	r5, r3
   1232c:	d327      	bcc.n	1237e <dir_next+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   1232e:	f1b9 0f00 	cmp.w	r9, #0
   12332:	d0cc      	beq.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   12334:	68e1      	ldr	r1, [r4, #12]
   12336:	f7ff ff72 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   1233a:	4605      	mov	r5, r0
   1233c:	2800      	cmp	r0, #0
   1233e:	d031      	beq.n	123a4 <dir_next+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   12340:	2801      	cmp	r0, #1
   12342:	d0e8      	beq.n	12316 <dir_next+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12344:	1c43      	adds	r3, r0, #1
   12346:	d0eb      	beq.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   12348:	6820      	ldr	r0, [r4, #0]
   1234a:	f7ff fca9 	bl	11ca0 <sync_window>
   1234e:	4601      	mov	r1, r0
   12350:	2800      	cmp	r0, #0
   12352:	d1e5      	bne.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   12354:	6820      	ldr	r0, [r4, #0]
   12356:	f44f 7200 	mov.w	r2, #512	; 0x200
   1235a:	3034      	adds	r0, #52	; 0x34
   1235c:	f7ff fbe8 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   12360:	6822      	ldr	r2, [r4, #0]
   12362:	4629      	mov	r1, r5
   12364:	4610      	mov	r0, r2
   12366:	f7ff fe53 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1236a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1236e:	6310      	str	r0, [r2, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   12370:	6820      	ldr	r0, [r4, #0]
   12372:	7883      	ldrb	r3, [r0, #2]
   12374:	429f      	cmp	r7, r3
   12376:	d309      	bcc.n	1238c <dir_next+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   12378:	6b03      	ldr	r3, [r0, #48]	; 0x30
   1237a:	1bdf      	subs	r7, r3, r7
   1237c:	6307      	str	r7, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   1237e:	60e5      	str	r5, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   12380:	4629      	mov	r1, r5
   12382:	6820      	ldr	r0, [r4, #0]
   12384:	f7ff fe44 	bl	12010 <clust2sect>
   12388:	6120      	str	r0, [r4, #16]
   1238a:	e7b1      	b.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1238c:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   12390:	f7ff fc63 	bl	11c5a <sync_window.part.1>
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   12394:	2800      	cmp	r0, #0
   12396:	d1c3      	bne.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   12398:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   1239a:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   1239c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   1239e:	3301      	adds	r3, #1
   123a0:	6313      	str	r3, [r2, #48]	; 0x30
   123a2:	e7e5      	b.n	12370 <dir_next+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   123a4:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   123a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   123aa:	Address 0x00000000000123aa is out of bounds.


000123ac <dir_find.part.9>:
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123b0:	f04f 08ff 	mov.w	r8, #255	; 0xff
   123b4:	f64f 77ff 	movw	r7, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123b8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123ba:	4644      	mov	r4, r8
   123bc:	8407      	strh	r7, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   123be:	6931      	ldr	r1, [r6, #16]
   123c0:	6830      	ldr	r0, [r6, #0]
   123c2:	f7ff fcad 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   123c6:	4682      	mov	sl, r0
   123c8:	2800      	cmp	r0, #0
   123ca:	d15e      	bne.n	1248a <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   123cc:	6975      	ldr	r5, [r6, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   123ce:	782b      	ldrb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   123d0:	2b00      	cmp	r3, #0
   123d2:	d076      	beq.n	124c2 <dir_find.part.9+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123d4:	2be5      	cmp	r3, #229	; 0xe5
   123d6:	d006      	beq.n	123e6 <dir_find.part.9+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   123d8:	7ae9      	ldrb	r1, [r5, #11]
   123da:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123de:	0709      	lsls	r1, r1, #28
   123e0:	d503      	bpl.n	123ea <dir_find.part.9+0x3e>
   123e2:	2a0f      	cmp	r2, #15
   123e4:	d003      	beq.n	123ee <dir_find.part.9+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123e6:	8437      	strh	r7, [r6, #32]
   123e8:	e047      	b.n	1247a <dir_find.part.9+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   123ea:	2a0f      	cmp	r2, #15
   123ec:	d154      	bne.n	12498 <dir_find.part.9+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   123ee:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   123f2:	f1bb 0f00 	cmp.w	fp, #0
   123f6:	d041      	beq.n	1247c <dir_find.part.9+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   123f8:	0658      	lsls	r0, r3, #25
   123fa:	d53c      	bpl.n	12476 <dir_find.part.9+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   123fc:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12400:	88f3      	ldrh	r3, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   12402:	f895 800d 	ldrb.w	r8, [r5, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12406:	8433      	strh	r3, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12408:	7b6b      	ldrb	r3, [r5, #13]
   1240a:	4543      	cmp	r3, r8
   1240c:	d135      	bne.n	1247a <dir_find.part.9+0xce>
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1240e:	f895 a000 	ldrb.w	sl, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12412:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12414:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   12418:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   1241c:	f04f 0a0d 	mov.w	sl, #13
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12420:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12424:	fb0a fa03 	mul.w	sl, sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   12428:	4b27      	ldr	r3, [pc, #156]	; (124c8 <dir_find.part.9+0x11c>)
   1242a:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   1242e:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   12430:	b378      	cbz	r0, 12492 <dir_find.part.9+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   12432:	4610      	mov	r0, r2
   12434:	f001 fc00 	bl	13c38 <ff_wtoupper>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   12438:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1243c:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   1243e:	d81c      	bhi.n	1247a <dir_find.part.9+0xce>
   12440:	f10a 0201 	add.w	r2, sl, #1
   12444:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   12448:	9200      	str	r2, [sp, #0]
   1244a:	f001 fbf5 	bl	13c38 <ff_wtoupper>
   1244e:	9901      	ldr	r1, [sp, #4]
   12450:	4281      	cmp	r1, r0
   12452:	d112      	bne.n	1247a <dir_find.part.9+0xce>
   12454:	9a00      	ldr	r2, [sp, #0]
   12456:	4692      	mov	sl, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   12458:	f109 0901 	add.w	r9, r9, #1
   1245c:	f1b9 0f0d 	cmp.w	r9, #13
   12460:	d1e2      	bne.n	12428 <dir_find.part.9+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   12462:	782b      	ldrb	r3, [r5, #0]
   12464:	0659      	lsls	r1, r3, #25
   12466:	d503      	bpl.n	12470 <dir_find.part.9+0xc4>
   12468:	b110      	cbz	r0, 12470 <dir_find.part.9+0xc4>
   1246a:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   1246e:	b923      	cbnz	r3, 1247a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12470:	3c01      	subs	r4, #1
   12472:	b2e4      	uxtb	r4, r4
   12474:	e002      	b.n	1247c <dir_find.part.9+0xd0>
   12476:	42a3      	cmp	r3, r4
   12478:	d0c6      	beq.n	12408 <dir_find.part.9+0x5c>
   1247a:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   1247c:	2100      	movs	r1, #0
   1247e:	4630      	mov	r0, r6
   12480:	f7ff ff1d 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   12484:	4682      	mov	sl, r0
   12486:	2800      	cmp	r0, #0
   12488:	d099      	beq.n	123be <dir_find.part.9+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   1248a:	4650      	mov	r0, sl
   1248c:	b003      	add	sp, #12
   1248e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   12492:	42ba      	cmp	r2, r7
   12494:	d0e0      	beq.n	12458 <dir_find.part.9+0xac>
   12496:	e7f0      	b.n	1247a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   12498:	b924      	cbnz	r4, 124a4 <dir_find.part.9+0xf8>
   1249a:	4628      	mov	r0, r5
   1249c:	f7ff fb4f 	bl	11b3e <sum_sfn>
   124a0:	4540      	cmp	r0, r8
   124a2:	d0f2      	beq.n	1248a <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   124a4:	69b3      	ldr	r3, [r6, #24]
   124a6:	7ada      	ldrb	r2, [r3, #11]
   124a8:	07d2      	lsls	r2, r2, #31
   124aa:	d49c      	bmi.n	123e6 <dir_find.part.9+0x3a>
   124ac:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   124b0:	4298      	cmp	r0, r3
   124b2:	d0ea      	beq.n	1248a <dir_find.part.9+0xde>
   124b4:	f815 1b01 	ldrb.w	r1, [r5], #1
   124b8:	f813 2b01 	ldrb.w	r2, [r3], #1
   124bc:	4291      	cmp	r1, r2
   124be:	d0f7      	beq.n	124b0 <dir_find.part.9+0x104>
   124c0:	e791      	b.n	123e6 <dir_find.part.9+0x3a>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   124c2:	f04f 0a04 	mov.w	sl, #4
   124c6:	e7e0      	b.n	1248a <dir_find.part.9+0xde>
   124c8:	00024aa0 	.word	0x00024aa0

000124cc <follow_path>:
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d0:	780b      	ldrb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124d2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d4:	2b2f      	cmp	r3, #47	; 0x2f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124d6:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d8:	d001      	beq.n	124de <follow_path+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031 (discriminator 1)
   124da:	2b5c      	cmp	r3, #92	; 0x5c
   124dc:	d101      	bne.n	124e2 <follow_path+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2032
		path++;
   124de:	f108 0801 	add.w	r8, r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2033
	dp->sclust = 0;							/* Always start from the root directory */
   124e2:	2400      	movs	r4, #0
   124e4:	60bc      	str	r4, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   124e6:	f898 3000 	ldrb.w	r3, [r8]
   124ea:	2b1f      	cmp	r3, #31
   124ec:	f200 8090 	bhi.w	12610 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   124f0:	4621      	mov	r1, r4
   124f2:	4638      	mov	r0, r7
   124f4:	f7ff fdea 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   124f8:	617c      	str	r4, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   124fa:	b003      	add	sp, #12
   124fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   12500:	f825 0f02 	strh.w	r0, [r5, #2]!
   12504:	4646      	mov	r6, r8
   12506:	e093      	b.n	12630 <follow_path+0x164>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   12508:	2820      	cmp	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1250a:	44a0      	add	r8, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1250c:	bf34      	ite	cc
   1250e:	2404      	movcc	r4, #4
   12510:	2400      	movcs	r4, #0
   12512:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   12516:	2e00      	cmp	r6, #0
   12518:	f000 80a9 	beq.w	1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   1251c:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   12520:	2920      	cmp	r1, #32
   12522:	d002      	beq.n	1252a <follow_path+0x5e>
   12524:	292e      	cmp	r1, #46	; 0x2e
   12526:	f040 80a6 	bne.w	12676 <follow_path+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   1252a:	3e01      	subs	r6, #1
   1252c:	e7f3      	b.n	12516 <follow_path+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1252e:	3101      	adds	r1, #1
   12530:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   12534:	2a20      	cmp	r2, #32
   12536:	d0fa      	beq.n	1252e <follow_path+0x62>
   12538:	2a2e      	cmp	r2, #46	; 0x2e
   1253a:	d0f8      	beq.n	1252e <follow_path+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   1253c:	b109      	cbz	r1, 12542 <follow_path+0x76>
   1253e:	f044 0403 	orr.w	r4, r4, #3
   12542:	464a      	mov	r2, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   12544:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   12548:	282e      	cmp	r0, #46	; 0x2e
   1254a:	d001      	beq.n	12550 <follow_path+0x84>
   1254c:	3e01      	subs	r6, #1
   1254e:	d1f9      	bne.n	12544 <follow_path+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12550:	f04f 0a00 	mov.w	sl, #0
   12554:	f04f 0908 	mov.w	r9, #8
   12558:	4655      	mov	r5, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   1255a:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   1255e:	1c4a      	adds	r2, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   12560:	2800      	cmp	r0, #0
   12562:	f000 809f 	beq.w	126a4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   12566:	2820      	cmp	r0, #32
   12568:	d004      	beq.n	12574 <follow_path+0xa8>
   1256a:	282e      	cmp	r0, #46	; 0x2e
   1256c:	d106      	bne.n	1257c <follow_path+0xb0>
   1256e:	42b2      	cmp	r2, r6
   12570:	f000 808d 	beq.w	1268e <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   12574:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12578:	4611      	mov	r1, r2
   1257a:	e7ee      	b.n	1255a <follow_path+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1257c:	45ca      	cmp	sl, r9
   1257e:	f080 8089 	bcs.w	12694 <follow_path+0x1c8>
   12582:	42b2      	cmp	r2, r6
   12584:	d111      	bne.n	125aa <follow_path+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12586:	f1b9 0f0b 	cmp.w	r9, #11
   1258a:	d106      	bne.n	1259a <follow_path+0xce>
   1258c:	e086      	b.n	1269c <follow_path+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   1258e:	42b2      	cmp	r2, r6
   12590:	d003      	beq.n	1259a <follow_path+0xce>
   12592:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   12596:	f200 8085 	bhi.w	126a4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   1259a:	00ad      	lsls	r5, r5, #2
   1259c:	b2ed      	uxtb	r5, r5
   1259e:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   125a0:	f04f 090b 	mov.w	r9, #11
   125a4:	f04f 0a08 	mov.w	sl, #8
   125a8:	e7e6      	b.n	12578 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   125aa:	287f      	cmp	r0, #127	; 0x7f
   125ac:	d90d      	bls.n	125ca <follow_path+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   125ae:	2100      	movs	r1, #0
   125b0:	9201      	str	r2, [sp, #4]
   125b2:	f001 fb23 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   125b6:	9a01      	ldr	r2, [sp, #4]
   125b8:	b118      	cbz	r0, 125c2 <follow_path+0xf6>
   125ba:	4b5d      	ldr	r3, [pc, #372]	; (12730 <follow_path+0x264>)
   125bc:	4418      	add	r0, r3
   125be:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   125c2:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   125c4:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   125c8:	b138      	cbz	r0, 125da <follow_path+0x10e>
   125ca:	4b5a      	ldr	r3, [pc, #360]	; (12734 <follow_path+0x268>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   125cc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   125d0:	2900      	cmp	r1, #0
   125d2:	f000 809f 	beq.w	12714 <follow_path+0x248>
   125d6:	4281      	cmp	r1, r0
   125d8:	d1f8      	bne.n	125cc <follow_path+0x100>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   125da:	205f      	movs	r0, #95	; 0x5f
   125dc:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   125e0:	69b9      	ldr	r1, [r7, #24]
   125e2:	f801 000a 	strb.w	r0, [r1, sl]
   125e6:	f10a 0a01 	add.w	sl, sl, #1
   125ea:	e7c5      	b.n	12578 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   125ec:	f045 0502 	orr.w	r5, r5, #2
   125f0:	e7f6      	b.n	125e0 <follow_path+0x114>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   125f2:	075a      	lsls	r2, r3, #29
   125f4:	d481      	bmi.n	124fa <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   125f6:	697a      	ldr	r2, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   125f8:	7ad3      	ldrb	r3, [r2, #11]
   125fa:	06db      	lsls	r3, r3, #27
   125fc:	d539      	bpl.n	12672 <follow_path+0x1a6>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   125fe:	6839      	ldr	r1, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12600:	8b53      	ldrh	r3, [r2, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12602:	7809      	ldrb	r1, [r1, #0]
   12604:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12606:	bf04      	itt	eq
   12608:	8a92      	ldrheq	r2, [r2, #20]
   1260a:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   1260e:	60bb      	str	r3, [r7, #8]
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   12610:	f898 3000 	ldrb.w	r3, [r8]
   12614:	4644      	mov	r4, r8
   12616:	2b2f      	cmp	r3, #47	; 0x2f
   12618:	f108 0801 	add.w	r8, r8, #1
   1261c:	d0f8      	beq.n	12610 <follow_path+0x144>
   1261e:	2b5c      	cmp	r3, #92	; 0x5c
   12620:	d0f6      	beq.n	12610 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   12622:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   12624:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   12628:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   1262c:	f1ab 0502 	sub.w	r5, fp, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   12630:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   12634:	f106 0801 	add.w	r8, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   12638:	281f      	cmp	r0, #31
   1263a:	f67f af65 	bls.w	12508 <follow_path+0x3c>
   1263e:	282f      	cmp	r0, #47	; 0x2f
   12640:	f43f af62 	beq.w	12508 <follow_path+0x3c>
   12644:	285c      	cmp	r0, #92	; 0x5c
   12646:	f43f af5f 	beq.w	12508 <follow_path+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   1264a:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   1264e:	d00e      	beq.n	1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   12650:	2101      	movs	r1, #1
   12652:	f001 fad3 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   12656:	b150      	cbz	r0, 1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   12658:	287f      	cmp	r0, #127	; 0x7f
   1265a:	f63f af51 	bhi.w	12500 <follow_path+0x34>
   1265e:	4936      	ldr	r1, [pc, #216]	; (12738 <follow_path+0x26c>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   12660:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   12664:	2a00      	cmp	r2, #0
   12666:	f43f af4b 	beq.w	12500 <follow_path+0x34>
   1266a:	4282      	cmp	r2, r0
   1266c:	d1f8      	bne.n	12660 <follow_path+0x194>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1266e:	2006      	movs	r0, #6
   12670:	e743      	b.n	124fa <follow_path+0x2e>
   12672:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   12674:	e741      	b.n	124fa <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12676:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12678:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1267a:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   1267e:	220b      	movs	r2, #11
   12680:	69b8      	ldr	r0, [r7, #24]
   12682:	f7ff fa55 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12686:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1268a:	4629      	mov	r1, r5
   1268c:	e750      	b.n	12530 <follow_path+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1268e:	45ca      	cmp	sl, r9
   12690:	f4ff af79 	bcc.w	12586 <follow_path+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12694:	f1b9 0f0b 	cmp.w	r9, #11
   12698:	f47f af79 	bne.w	1258e <follow_path+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   1269c:	f04f 090b 	mov.w	r9, #11
   126a0:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   126a4:	69bb      	ldr	r3, [r7, #24]
   126a6:	781a      	ldrb	r2, [r3, #0]
   126a8:	2ae5      	cmp	r2, #229	; 0xe5
   126aa:	bf04      	itt	eq
   126ac:	2205      	moveq	r2, #5
   126ae:	701a      	strbeq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   126b0:	f1b9 0f08 	cmp.w	r9, #8
   126b4:	bf04      	itt	eq
   126b6:	00ad      	lsleq	r5, r5, #2
   126b8:	b2ed      	uxtbeq	r5, r5
   126ba:	f005 030c 	and.w	r3, r5, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   126be:	2b0c      	cmp	r3, #12
   126c0:	d003      	beq.n	126ca <follow_path+0x1fe>
   126c2:	f005 0203 	and.w	r2, r5, #3
   126c6:	2a03      	cmp	r2, #3
   126c8:	d101      	bne.n	126ce <follow_path+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   126ca:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   126ce:	07a1      	lsls	r1, r4, #30
   126d0:	d409      	bmi.n	126e6 <follow_path+0x21a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   126d2:	f005 0503 	and.w	r5, r5, #3
   126d6:	2d01      	cmp	r5, #1
   126d8:	bf08      	it	eq
   126da:	f044 0410 	orreq.w	r4, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   126de:	2b04      	cmp	r3, #4
   126e0:	bf08      	it	eq
   126e2:	f044 0408 	orreq.w	r4, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   126e6:	69bb      	ldr	r3, [r7, #24]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   126e8:	2100      	movs	r1, #0
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   126ea:	72dc      	strb	r4, [r3, #11]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   126ec:	4638      	mov	r0, r7
   126ee:	f7ff fced 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   126f2:	b910      	cbnz	r0, 126fa <follow_path+0x22e>
   126f4:	4638      	mov	r0, r7
   126f6:	f7ff fe59 	bl	123ac <dir_find.part.9>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   126fa:	69bb      	ldr	r3, [r7, #24]
   126fc:	7adb      	ldrb	r3, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   126fe:	2800      	cmp	r0, #0
   12700:	f43f af77 	beq.w	125f2 <follow_path+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   12704:	2804      	cmp	r0, #4
   12706:	f47f aef8 	bne.w	124fa <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1270a:	f013 0f04 	tst.w	r3, #4
   1270e:	bf08      	it	eq
   12710:	2005      	moveq	r0, #5
   12712:	e6f2      	b.n	124fa <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   12714:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   12718:	2919      	cmp	r1, #25
   1271a:	f67f af67 	bls.w	125ec <follow_path+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   1271e:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   12722:	2919      	cmp	r1, #25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   12724:	bf9e      	ittt	ls
   12726:	3820      	subls	r0, #32
   12728:	f045 0501 	orrls.w	r5, r5, #1
   1272c:	b280      	uxthls	r0, r0
   1272e:	e757      	b.n	125e0 <follow_path+0x114>
   12730:	00024a20 	.word	0x00024a20
   12734:	00024b00 	.word	0x00024b00
   12738:	00024af7 	.word	0x00024af7

0001273c <dir_register>:
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1273c:	220c      	movs	r2, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   1273e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12742:	6986      	ldr	r6, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12744:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12746:	69c7      	ldr	r7, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12748:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1274a:	4631      	mov	r1, r6
   1274c:	eb0d 0002 	add.w	r0, sp, r2
   12750:	f7ff f9d2 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   12754:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12758:	07db      	lsls	r3, r3, #31
   1275a:	d579      	bpl.n	12850 <dir_register+0x114>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1275c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   1275e:	f04f 0901 	mov.w	r9, #1
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12762:	f8df 8208 	ldr.w	r8, [pc, #520]	; 1296c <dir_register+0x230>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   12766:	72f3      	strb	r3, [r6, #11]
   12768:	61e3      	str	r3, [r4, #28]
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   1276a:	220b      	movs	r2, #11
   1276c:	a903      	add	r1, sp, #12
   1276e:	4630      	mov	r0, r6
   12770:	f7ff f9c2 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   12774:	f1b9 0f05 	cmp.w	r9, #5
   12778:	d84f      	bhi.n	1281a <dir_register+0xde>
   1277a:	464b      	mov	r3, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1277c:	2207      	movs	r2, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   1277e:	f003 000f 	and.w	r0, r3, #15
   12782:	f100 0130 	add.w	r1, r0, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   12786:	2939      	cmp	r1, #57	; 0x39
   12788:	bf88      	it	hi
   1278a:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   1278e:	3a01      	subs	r2, #1
   12790:	a801      	add	r0, sp, #4
   12792:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12794:	091b      	lsrs	r3, r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   12796:	7041      	strb	r1, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12798:	d1f1      	bne.n	1277e <dir_register+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   1279a:	207e      	movs	r0, #126	; 0x7e
   1279c:	a906      	add	r1, sp, #24
   1279e:	4411      	add	r1, r2
   127a0:	f801 0c14 	strb.w	r0, [r1, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   127a4:	429a      	cmp	r2, r3
   127a6:	d03d      	beq.n	12824 <dir_register+0xe8>
   127a8:	5cf1      	ldrb	r1, [r6, r3]
   127aa:	2920      	cmp	r1, #32
   127ac:	d138      	bne.n	12820 <dir_register+0xe4>
   127ae:	4433      	add	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   127b0:	2a07      	cmp	r2, #7
   127b2:	bf8f      	iteee	hi
   127b4:	2120      	movhi	r1, #32
   127b6:	a906      	addls	r1, sp, #24
   127b8:	1889      	addls	r1, r1, r2
   127ba:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   127be:	bf98      	it	ls
   127c0:	3201      	addls	r2, #1
   127c2:	f803 1b01 	strb.w	r1, [r3], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   127c6:	1b99      	subs	r1, r3, r6
   127c8:	2907      	cmp	r1, #7
   127ca:	d9f1      	bls.n	127b0 <dir_register+0x74>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   127cc:	2100      	movs	r1, #0
   127ce:	4620      	mov	r0, r4
   127d0:	f7ff fc7c 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   127d4:	4605      	mov	r5, r0
   127d6:	bba8      	cbnz	r0, 12844 <dir_register+0x108>
   127d8:	4620      	mov	r0, r4
   127da:	f7ff fde7 	bl	123ac <dir_find.part.9>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   127de:	4605      	mov	r5, r0
   127e0:	bb80      	cbnz	r0, 12844 <dir_register+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   127e2:	f109 0901 	add.w	r9, r9, #1
   127e6:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   127ea:	d1be      	bne.n	1276a <dir_register+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   127ec:	2507      	movs	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   127ee:	4628      	mov	r0, r5
   127f0:	b007      	add	sp, #28
   127f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   127f6:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   127f8:	f002 0501 	and.w	r5, r2, #1
   127fc:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12800:	03dd      	lsls	r5, r3, #15
   12802:	bf48      	it	mi
   12804:	ea83 0308 	eormi.w	r3, r3, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   12808:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   1280a:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   1280e:	d1f3      	bne.n	127f8 <dir_register+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12810:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   12814:	2a00      	cmp	r2, #0
   12816:	d1ee      	bne.n	127f6 <dir_register+0xba>
   12818:	e7b0      	b.n	1277c <dir_register+0x40>
   1281a:	1eb8      	subs	r0, r7, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   1281c:	464b      	mov	r3, r9
   1281e:	e7f7      	b.n	12810 <dir_register+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   12820:	3301      	adds	r3, #1
   12822:	e7bf      	b.n	127a4 <dir_register+0x68>
   12824:	4613      	mov	r3, r2
   12826:	e7c2      	b.n	127ae <dir_register+0x72>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   12828:	3601      	adds	r6, #1
   1282a:	e016      	b.n	1285a <dir_register+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   1282c:	2601      	movs	r6, #1
   1282e:	e01c      	b.n	1286a <dir_register+0x12e>
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   12830:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   12832:	2101      	movs	r1, #1
   12834:	4620      	mov	r0, r4
   12836:	f7ff fd42 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   1283a:	4605      	mov	r5, r0
   1283c:	b1e8      	cbz	r0, 1287a <dir_register+0x13e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   1283e:	2d04      	cmp	r5, #4
   12840:	d0d4      	beq.n	127ec <dir_register+0xb0>
   12842:	e7d4      	b.n	127ee <dir_register+0xb2>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   12844:	2d04      	cmp	r5, #4
   12846:	d1d2      	bne.n	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   12848:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1284c:	72f3      	strb	r3, [r6, #11]
   1284e:	61e7      	str	r7, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   12850:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12854:	079b      	lsls	r3, r3, #30
   12856:	d5e9      	bpl.n	1282c <dir_register+0xf0>
   12858:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   1285a:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   1285e:	2b00      	cmp	r3, #0
   12860:	d1e2      	bne.n	12828 <dir_register+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   12862:	230d      	movs	r3, #13
   12864:	3619      	adds	r6, #25
   12866:	fbb6 f6f3 	udiv	r6, r6, r3
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   1286a:	2100      	movs	r1, #0
   1286c:	4620      	mov	r0, r4
   1286e:	f7ff fc2d 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   12872:	4605      	mov	r5, r0
   12874:	2800      	cmp	r0, #0
   12876:	d1e2      	bne.n	1283e <dir_register+0x102>
   12878:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   1287a:	6921      	ldr	r1, [r4, #16]
   1287c:	6820      	ldr	r0, [r4, #0]
   1287e:	f7ff fa4f 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   12882:	4605      	mov	r5, r0
   12884:	2800      	cmp	r0, #0
   12886:	d1da      	bne.n	1283e <dir_register+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   12888:	6963      	ldr	r3, [r4, #20]
   1288a:	781b      	ldrb	r3, [r3, #0]
   1288c:	2be5      	cmp	r3, #229	; 0xe5
   1288e:	d001      	beq.n	12894 <dir_register+0x158>
   12890:	2b00      	cmp	r3, #0
   12892:	d1cd      	bne.n	12830 <dir_register+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   12894:	3701      	adds	r7, #1
   12896:	42be      	cmp	r6, r7
   12898:	d1cb      	bne.n	12832 <dir_register+0xf6>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   1289a:	3e01      	subs	r6, #1
   1289c:	d049      	beq.n	12932 <dir_register+0x1f6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   1289e:	88e1      	ldrh	r1, [r4, #6]
   128a0:	4620      	mov	r0, r4
   128a2:	1b89      	subs	r1, r1, r6
   128a4:	f7ff fc12 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   128a8:	4605      	mov	r5, r0
   128aa:	2800      	cmp	r0, #0
   128ac:	d19f      	bne.n	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   128ae:	69a0      	ldr	r0, [r4, #24]
   128b0:	f7ff f945 	bl	11b3e <sum_sfn>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128b4:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   128b8:	4607      	mov	r7, r0
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   128ba:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 12970 <dir_register+0x234>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   128be:	6921      	ldr	r1, [r4, #16]
   128c0:	6820      	ldr	r0, [r4, #0]
   128c2:	f7ff fa2d 	bl	11d20 <move_window>
   128c6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   128c8:	2800      	cmp	r0, #0
   128ca:	d190      	bne.n	127ee <dir_register+0xb2>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   128cc:	220f      	movs	r2, #15
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   128ce:	6963      	ldr	r3, [r4, #20]
   128d0:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   128d4:	72da      	strb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   128d6:	220d      	movs	r2, #13
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   128d8:	b2f1      	uxtb	r1, r6
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   128da:	1e4d      	subs	r5, r1, #1
   128dc:	436a      	muls	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   128de:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   128e0:	735f      	strb	r7, [r3, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   128e2:	7318      	strb	r0, [r3, #12]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   128e4:	8358      	strh	r0, [r3, #26]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128e6:	4548      	cmp	r0, r9
   128e8:	bf18      	it	ne
   128ea:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   128ee:	f815 c008 	ldrb.w	ip, [r5, r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   128f2:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128f6:	bf18      	it	ne
   128f8:	3201      	addne	r2, #1
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   128fa:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   128fe:	2800      	cmp	r0, #0
   12900:	bf08      	it	eq
   12902:	4648      	moveq	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12904:	2d0d      	cmp	r5, #13
   12906:	d1ee      	bne.n	128e6 <dir_register+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   12908:	4548      	cmp	r0, r9
   1290a:	d002      	beq.n	12912 <dir_register+0x1d6>
   1290c:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   12910:	b90a      	cbnz	r2, 12916 <dir_register+0x1da>
   12912:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   12916:	2201      	movs	r2, #1
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   12918:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1291a:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   1291c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1291e:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   12920:	4620      	mov	r0, r4
   12922:	f7ff fccc 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   12926:	4605      	mov	r5, r0
   12928:	2800      	cmp	r0, #0
   1292a:	f47f af60 	bne.w	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   1292e:	3e01      	subs	r6, #1
   12930:	d1c5      	bne.n	128be <dir_register+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   12932:	6921      	ldr	r1, [r4, #16]
   12934:	6820      	ldr	r0, [r4, #0]
   12936:	f7ff f9f3 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   1293a:	4605      	mov	r5, r0
   1293c:	2800      	cmp	r0, #0
   1293e:	f47f af56 	bne.w	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   12942:	2220      	movs	r2, #32
   12944:	4629      	mov	r1, r5
   12946:	6960      	ldr	r0, [r4, #20]
   12948:	f7ff f8f2 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   1294c:	220b      	movs	r2, #11
   1294e:	69a1      	ldr	r1, [r4, #24]
   12950:	6960      	ldr	r0, [r4, #20]
   12952:	f7ff f8d1 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   12956:	69a3      	ldr	r3, [r4, #24]
   12958:	6962      	ldr	r2, [r4, #20]
   1295a:	7adb      	ldrb	r3, [r3, #11]
   1295c:	f003 0318 	and.w	r3, r3, #24
   12960:	7313      	strb	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   12962:	2201      	movs	r2, #1
   12964:	6823      	ldr	r3, [r4, #0]
   12966:	711a      	strb	r2, [r3, #4]
   12968:	e741      	b.n	127ee <dir_register+0xb2>
   1296a:	bf00      	nop
   1296c:	00011021 	.word	0x00011021
   12970:	00024aa0 	.word	0x00024aa0

00012974 <dir_remove>:
dir_remove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12974:	f64f 73ff 	movw	r3, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   12978:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   1297a:	8c01      	ldrh	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1696
	i = dp->index;	/* SFN index */
   1297c:	88c5      	ldrh	r5, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   1297e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12980:	4299      	cmp	r1, r3
   12982:	bf08      	it	eq
   12984:	4629      	moveq	r1, r5
   12986:	f7ff fba1 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1698
	if (res == FR_OK) {
   1298a:	4603      	mov	r3, r0
   1298c:	b9e8      	cbnz	r0, 129ca <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   1298e:	26e5      	movs	r6, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1700
			res = move_window(dp->fs, dp->sect);
   12990:	6921      	ldr	r1, [r4, #16]
   12992:	6820      	ldr	r0, [r4, #0]
   12994:	f7ff f9c4 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1701
			if (res != FR_OK) break;
   12998:	4603      	mov	r3, r0
   1299a:	b998      	cbnz	r0, 129c4 <dir_remove+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1702
			mem_set(dp->dir, 0, SZ_DIR);	/* Clear and mark the entry "deleted" */
   1299c:	4601      	mov	r1, r0
   1299e:	2220      	movs	r2, #32
   129a0:	6960      	ldr	r0, [r4, #20]
   129a2:	f7ff f8c5 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   129a6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   129a8:	6962      	ldr	r2, [r4, #20]
   129aa:	7016      	strb	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   129ac:	6822      	ldr	r2, [r4, #0]
   129ae:	7111      	strb	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1705
			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
   129b0:	88e2      	ldrh	r2, [r4, #6]
   129b2:	4295      	cmp	r5, r2
   129b4:	d909      	bls.n	129ca <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1706
			res = dir_next(dp, 0);		/* Next entry */
   129b6:	4619      	mov	r1, r3
   129b8:	4620      	mov	r0, r4
   129ba:	f7ff fc80 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1707
		} while (res == FR_OK);
   129be:	4603      	mov	r3, r0
   129c0:	2800      	cmp	r0, #0
   129c2:	d0e5      	beq.n	12990 <dir_remove+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1708
		if (res == FR_NO_FILE) res = FR_INT_ERR;
   129c4:	2b04      	cmp	r3, #4
   129c6:	bf08      	it	eq
   129c8:	2302      	moveq	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1724
}
   129ca:	4618      	mov	r0, r3
   129cc:	bd70      	pop	{r4, r5, r6, pc}
   129ce:	Address 0x00000000000129ce is out of bounds.


000129d0 <dir_read.constprop.11>:
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   129d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129d4:	27ff      	movs	r7, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   129d6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129d8:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1562
	res = FR_NO_FILE;
   129da:	2604      	movs	r6, #4
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   129dc:	f64f 79ff 	movw	r9, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   129e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 12ab4 <dir_read.constprop.11+0xe4>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1563
	while (dp->sect) {
   129e4:	6929      	ldr	r1, [r5, #16]
   129e6:	b911      	cbnz	r1, 129ee <dir_read.constprop.11+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   129e8:	2e00      	cmp	r6, #0
   129ea:	d058      	beq.n	12a9e <dir_read.constprop.11+0xce>
   129ec:	e04c      	b.n	12a88 <dir_read.constprop.11+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1564
		res = move_window(dp->fs, dp->sect);
   129ee:	6828      	ldr	r0, [r5, #0]
   129f0:	f7ff f996 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1565
		if (res != FR_OK) break;
   129f4:	4606      	mov	r6, r0
   129f6:	2800      	cmp	r0, #0
   129f8:	d146      	bne.n	12a88 <dir_read.constprop.11+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1566
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   129fa:	6968      	ldr	r0, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1567
		c = dir[DIR_Name];
   129fc:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   129fe:	2b00      	cmp	r3, #0
   12a00:	d055      	beq.n	12aae <dir_read.constprop.11+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a02:	2be5      	cmp	r3, #229	; 0xe5
   12a04:	d038      	beq.n	12a78 <dir_read.constprop.11+0xa8>
   12a06:	2b2e      	cmp	r3, #46	; 0x2e
   12a08:	d036      	beq.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1569
		a = dir[DIR_Attr] & AM_MASK;
   12a0a:	7ac2      	ldrb	r2, [r0, #11]
   12a0c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a10:	2a08      	cmp	r2, #8
   12a12:	d031      	beq.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1574
			if (a == AM_LFN) {			/* An LFN entry is found */
   12a14:	2a0f      	cmp	r2, #15
   12a16:	d13d      	bne.n	12a94 <dir_read.constprop.11+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1575
				if (c & LLE) {			/* Is it start of LFN sequence? */
   12a18:	0659      	lsls	r1, r3, #25
   12a1a:	d52b      	bpl.n	12a74 <dir_read.constprop.11+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1577
					c &= ~LLE; ord = c;
   12a1c:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a20:	88eb      	ldrh	r3, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1576
					sum = dir[LDIR_Chksum];
   12a22:	7b47      	ldrb	r7, [r0, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a24:	842b      	strh	r3, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a26:	7b43      	ldrb	r3, [r0, #13]
   12a28:	42bb      	cmp	r3, r7
   12a2a:	d125      	bne.n	12a78 <dir_read.constprop.11+0xa8>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a2c:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   12a2e:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a32:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12a36:	1e5a      	subs	r2, r3, #1
   12a38:	230d      	movs	r3, #13
   12a3a:	4353      	muls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   12a3c:	2200      	movs	r2, #0
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a3e:	69ee      	ldr	r6, [r5, #28]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   12a40:	f812 1008 	ldrb.w	r1, [r2, r8]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   12a44:	5a41      	ldrh	r1, [r0, r1]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1354
		if (wc) {	/* Last character has not been processed */
   12a46:	f1be 0f00 	cmp.w	lr, #0
   12a4a:	d020      	beq.n	12a8e <dir_read.constprop.11+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1355
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
   12a4c:	2b7f      	cmp	r3, #127	; 0x7f
   12a4e:	d813      	bhi.n	12a78 <dir_read.constprop.11+0xa8>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   12a50:	468e      	mov	lr, r1
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1356
			lfnbuf[i++] = wc = uc;			/* Store it */
   12a52:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
   12a56:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1360
	} while (++s < 13);						/* Read all character in the entry */
   12a58:	3201      	adds	r2, #1
   12a5a:	2a0d      	cmp	r2, #13
   12a5c:	d1f0      	bne.n	12a40 <dir_read.constprop.11+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1362
	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
   12a5e:	7802      	ldrb	r2, [r0, #0]
   12a60:	0652      	lsls	r2, r2, #25
   12a62:	d504      	bpl.n	12a6e <dir_read.constprop.11+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1363
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
   12a64:	2b7f      	cmp	r3, #127	; 0x7f
   12a66:	d807      	bhi.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1364
		lfnbuf[i] = 0;
   12a68:	2200      	movs	r2, #0
   12a6a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a6e:	3c01      	subs	r4, #1
   12a70:	b2e4      	uxtb	r4, r4
   12a72:	e002      	b.n	12a7a <dir_read.constprop.11+0xaa>
   12a74:	42a3      	cmp	r3, r4
   12a76:	d0d6      	beq.n	12a26 <dir_read.constprop.11+0x56>
   12a78:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1592
		res = dir_next(dp, 0);				/* Next entry */
   12a7a:	2100      	movs	r1, #0
   12a7c:	4628      	mov	r0, r5
   12a7e:	f7ff fc1e 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1593
		if (res != FR_OK) break;
   12a82:	4606      	mov	r6, r0
   12a84:	2800      	cmp	r0, #0
   12a86:	d0ad      	beq.n	129e4 <dir_read.constprop.11+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   12a88:	2300      	movs	r3, #0
   12a8a:	612b      	str	r3, [r5, #16]
   12a8c:	e008      	b.n	12aa0 <dir_read.constprop.11+0xd0>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   12a8e:	4549      	cmp	r1, r9
   12a90:	d0e2      	beq.n	12a58 <dir_read.constprop.11+0x88>
   12a92:	e7f1      	b.n	12a78 <dir_read.constprop.11+0xa8>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1583
				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
   12a94:	b93c      	cbnz	r4, 12aa6 <dir_read.constprop.11+0xd6>
   12a96:	f7ff f852 	bl	11b3e <sum_sfn>
   12a9a:	42b8      	cmp	r0, r7
   12a9c:	d103      	bne.n	12aa6 <dir_read.constprop.11+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12a9e:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1599
}
   12aa0:	4630      	mov	r0, r6
   12aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1584
					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
   12aa6:	f64f 73ff 	movw	r3, #65535	; 0xffff
   12aaa:	842b      	strh	r3, [r5, #32]
   12aac:	e7f8      	b.n	12aa0 <dir_read.constprop.11+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12aae:	2604      	movs	r6, #4
   12ab0:	e7ea      	b.n	12a88 <dir_read.constprop.11+0xb8>
   12ab2:	bf00      	nop
   12ab4:	00024aa0 	.word	0x00024aa0

00012ab8 <remove_chain>:
remove_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ab8:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12aba:	b570      	push	{r4, r5, r6, lr}
   12abc:	4604      	mov	r4, r0
   12abe:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ac0:	d801      	bhi.n	12ac6 <remove_chain+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12ac2:	2002      	movs	r0, #2
   12ac4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ac6:	6983      	ldr	r3, [r0, #24]
   12ac8:	4299      	cmp	r1, r3
   12aca:	d2fa      	bcs.n	12ac2 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   12acc:	69a3      	ldr	r3, [r4, #24]
   12ace:	429d      	cmp	r5, r3
   12ad0:	d205      	bcs.n	12ade <remove_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   12ad2:	4629      	mov	r1, r5
   12ad4:	4620      	mov	r0, r4
   12ad6:	f7ff faa6 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   12ada:	4606      	mov	r6, r0
   12adc:	b908      	cbnz	r0, 12ae2 <remove_chain+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12ade:	2000      	movs	r0, #0
   12ae0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   12ae2:	2801      	cmp	r0, #1
   12ae4:	d0ed      	beq.n	12ac2 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12ae6:	1c41      	adds	r1, r0, #1
   12ae8:	d010      	beq.n	12b0c <remove_chain+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   12aea:	2200      	movs	r2, #0
   12aec:	4629      	mov	r1, r5
   12aee:	4620      	mov	r0, r4
   12af0:	f7ff fb2c 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   12af4:	b958      	cbnz	r0, 12b0e <remove_chain+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   12af6:	6963      	ldr	r3, [r4, #20]
   12af8:	1c5a      	adds	r2, r3, #1
   12afa:	d005      	beq.n	12b08 <remove_chain+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   12afc:	3301      	adds	r3, #1
   12afe:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   12b00:	7963      	ldrb	r3, [r4, #5]
   12b02:	f043 0301 	orr.w	r3, r3, #1
   12b06:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12b08:	4635      	mov	r5, r6
   12b0a:	e7df      	b.n	12acc <remove_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12b0c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   12b0e:	bd70      	pop	{r4, r5, r6, pc}

00012b10 <f_mount>:
f_mount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   12b10:	b5f0      	push	{r4, r5, r6, r7, lr}
   12b12:	b085      	sub	sp, #20
   12b14:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   12b16:	a804      	add	r0, sp, #16
   12b18:	f840 1d04 	str.w	r1, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   12b1c:	9100      	str	r1, [sp, #0]
   12b1e:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   12b20:	f7ff f81c 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12b24:	1e05      	subs	r5, r0, #0
   12b26:	db2a      	blt.n	12b7e <f_mount+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   12b28:	4f17      	ldr	r7, [pc, #92]	; (12b88 <f_mount+0x78>)
   12b2a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   12b2e:	b14c      	cbz	r4, 12b44 <f_mount+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   12b30:	68e0      	ldr	r0, [r4, #12]
   12b32:	f001 f83f 	bl	13bb4 <ff_del_syncobj>
   12b36:	b918      	cbnz	r0, 12b40 <f_mount+0x30>
   12b38:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   12b3a:	4620      	mov	r0, r4
   12b3c:	b005      	add	sp, #20
   12b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   12b40:	2300      	movs	r3, #0
   12b42:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   12b44:	9901      	ldr	r1, [sp, #4]
   12b46:	b989      	cbnz	r1, 12b6c <f_mount+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   12b48:	9c01      	ldr	r4, [sp, #4]
   12b4a:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12b4e:	2c00      	cmp	r4, #0
   12b50:	d0f3      	beq.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   12b52:	2e01      	cmp	r6, #1
   12b54:	d115      	bne.n	12b82 <f_mount+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   12b56:	4669      	mov	r1, sp
   12b58:	2200      	movs	r2, #0
   12b5a:	a801      	add	r0, sp, #4
   12b5c:	f7ff f920 	bl	11da0 <find_volume>
   12b60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   12b62:	4601      	mov	r1, r0
   12b64:	9801      	ldr	r0, [sp, #4]
   12b66:	f7ff fa46 	bl	11ff6 <unlock_fs>
   12b6a:	e7e6      	b.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12b6c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12b6e:	b2e8      	uxtb	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12b70:	f801 3b0c 	strb.w	r3, [r1], #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12b74:	f001 f814 	bl	13ba0 <ff_cre_syncobj>
   12b78:	2800      	cmp	r0, #0
   12b7a:	d0dd      	beq.n	12b38 <f_mount+0x28>
   12b7c:	e7e4      	b.n	12b48 <f_mount+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12b7e:	240b      	movs	r4, #11
   12b80:	e7db      	b.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12b82:	2400      	movs	r4, #0
   12b84:	e7d9      	b.n	12b3a <f_mount+0x2a>
   12b86:	bf00      	nop
   12b88:	2007c45c 	.word	0x2007c45c

00012b8c <f_open>:
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   12b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12b90:	b0d1      	sub	sp, #324	; 0x144
   12b92:	9101      	str	r1, [sp, #4]
   12b94:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   12b96:	4606      	mov	r6, r0
   12b98:	2800      	cmp	r0, #0
   12b9a:	f000 808c 	beq.w	12cb6 <f_open+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12b9e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12ba0:	f002 021e 	and.w	r2, r2, #30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12ba4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12ba6:	a901      	add	r1, sp, #4
   12ba8:	a806      	add	r0, sp, #24
   12baa:	f7ff f8f9 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   12bae:	4605      	mov	r5, r0
   12bb0:	2800      	cmp	r0, #0
   12bb2:	d174      	bne.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bb4:	ab03      	add	r3, sp, #12
   12bb6:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bb8:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bba:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bbc:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bbe:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bc0:	f7ff fc84 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   12bc4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   12bc6:	b910      	cbnz	r0, 12bce <f_open+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   12bc8:	2c00      	cmp	r4, #0
   12bca:	bf08      	it	eq
   12bcc:	2006      	moveq	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12bce:	f018 0f1c 	tst.w	r8, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   12bd2:	f008 071f 	and.w	r7, r8, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12bd6:	d03d      	beq.n	12c54 <f_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   12bd8:	b398      	cbz	r0, 12c42 <f_open+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   12bda:	2804      	cmp	r0, #4
   12bdc:	d102      	bne.n	12be4 <f_open+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   12bde:	a806      	add	r0, sp, #24
   12be0:	f7ff fdac 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   12be4:	f047 0708 	orr.w	r7, r7, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12be8:	bb48      	cbnz	r0, 12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   12bea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12bec:	0738      	lsls	r0, r7, #28
   12bee:	d53b      	bpl.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   12bf0:	f001 feb2 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12bf4:	2300      	movs	r3, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12bf6:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   12bfa:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12bfc:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12bfe:	61e3      	str	r3, [r4, #28]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c00:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12c02:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c06:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c08:	bf08      	it	eq
   12c0a:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12c0c:	8363      	strh	r3, [r4, #26]
   12c0e:	82a3      	strh	r3, [r4, #20]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   12c10:	f04f 0301 	mov.w	r3, #1
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c14:	bf08      	it	eq
   12c16:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   12c1a:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   12c1c:	f1b8 0f00 	cmp.w	r8, #0
   12c20:	d022      	beq.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   12c22:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   12c24:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   12c28:	f7ff ff46 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   12c2c:	b938      	cbnz	r0, 12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   12c2e:	9806      	ldr	r0, [sp, #24]
   12c30:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   12c34:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   12c36:	4649      	mov	r1, r9
   12c38:	f7ff f872 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   12c3c:	b1a0      	cbz	r0, 12c68 <f_open+0xdc>
   12c3e:	4605      	mov	r5, r0
   12c40:	e02d      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   12c42:	7ae3      	ldrb	r3, [r4, #11]
   12c44:	f013 0f11 	tst.w	r3, #17
   12c48:	d133      	bne.n	12cb2 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   12c4a:	f018 0f04 	tst.w	r8, #4
   12c4e:	d0cd      	beq.n	12bec <f_open+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   12c50:	2508      	movs	r5, #8
   12c52:	e024      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   12c54:	2800      	cmp	r0, #0
   12c56:	d1f2      	bne.n	12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   12c58:	7ae3      	ldrb	r3, [r4, #11]
   12c5a:	06d9      	lsls	r1, r3, #27
   12c5c:	d427      	bmi.n	12cae <f_open+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   12c5e:	f018 0f02 	tst.w	r8, #2
   12c62:	d001      	beq.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   12c64:	07da      	lsls	r2, r3, #31
   12c66:	d424      	bmi.n	12cb2 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   12c68:	073b      	lsls	r3, r7, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c6a:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   12c6c:	bf48      	it	mi
   12c6e:	f047 0720 	orrmi.w	r7, r7, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   12c74:	71b7      	strb	r7, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c76:	61f2      	str	r2, [r6, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12c78:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   12c7a:	6234      	str	r4, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12c7c:	71f2      	strb	r2, [r6, #7]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c7e:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12c80:	8b62      	ldrh	r2, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c82:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c84:	bf04      	itt	eq
   12c86:	8aa1      	ldrheq	r1, [r4, #20]
   12c88:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   12c8c:	6132      	str	r2, [r6, #16]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   12c8e:	69e2      	ldr	r2, [r4, #28]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   12c90:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   12c92:	60f2      	str	r2, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12c94:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12c96:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12c98:	60b2      	str	r2, [r6, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   12c9a:	61b2      	str	r2, [r6, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12c9c:	80b3      	strh	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   12c9e:	4629      	mov	r1, r5
   12ca0:	9806      	ldr	r0, [sp, #24]
   12ca2:	f7ff f9a8 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   12ca6:	4628      	mov	r0, r5
   12ca8:	b051      	add	sp, #324	; 0x144
   12caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   12cae:	2504      	movs	r5, #4
   12cb0:	e7f5      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   12cb2:	2507      	movs	r5, #7
   12cb4:	e7f3      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   12cb6:	2509      	movs	r5, #9
   12cb8:	e7f5      	b.n	12ca6 <f_open+0x11a>

00012cba <f_read>:
f_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   12cba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cbe:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   12cc0:	2300      	movs	r3, #0
   12cc2:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   12cc6:	4604      	mov	r4, r0
   12cc8:	4689      	mov	r9, r1
   12cca:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   12ccc:	f7ff f976 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12cd0:	4605      	mov	r5, r0
   12cd2:	b110      	cbz	r0, 12cda <f_read+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   12cd4:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   12cd6:	6820      	ldr	r0, [r4, #0]
   12cd8:	e04a      	b.n	12d70 <f_read+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   12cda:	79e1      	ldrb	r1, [r4, #7]
   12cdc:	b139      	cbz	r1, 12cee <f_read+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12cde:	6820      	ldr	r0, [r4, #0]
   12ce0:	f7ff f989 	bl	11ff6 <unlock_fs>
   12ce4:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   12ce6:	4628      	mov	r0, r5
   12ce8:	b003      	add	sp, #12
   12cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   12cee:	79a3      	ldrb	r3, [r4, #6]
   12cf0:	07d8      	lsls	r0, r3, #31
   12cf2:	d405      	bmi.n	12d00 <f_read+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   12cf4:	2107      	movs	r1, #7
   12cf6:	6820      	ldr	r0, [r4, #0]
   12cf8:	f7ff f97d 	bl	11ff6 <unlock_fs>
   12cfc:	2507      	movs	r5, #7
   12cfe:	e7f2      	b.n	12ce6 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   12d00:	68e3      	ldr	r3, [r4, #12]
   12d02:	68a7      	ldr	r7, [r4, #8]
   12d04:	1bdf      	subs	r7, r3, r7
   12d06:	42b7      	cmp	r7, r6
   12d08:	bf28      	it	cs
   12d0a:	4637      	movcs	r7, r6
   12d0c:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12d10:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   12d12:	b90f      	cbnz	r7, 12d18 <f_read+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12d14:	4639      	mov	r1, r7
   12d16:	e7de      	b.n	12cd6 <f_read+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   12d18:	68a2      	ldr	r2, [r4, #8]
   12d1a:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12d1e:	2b00      	cmp	r3, #0
   12d20:	d174      	bne.n	12e0c <f_read+0x152>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12d22:	6820      	ldr	r0, [r4, #0]
   12d24:	7883      	ldrb	r3, [r0, #2]
   12d26:	3b01      	subs	r3, #1
   12d28:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   12d2c:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12d30:	d111      	bne.n	12d56 <f_read+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   12d32:	b92a      	cbnz	r2, 12d40 <f_read+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   12d34:	6920      	ldr	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   12d36:	2801      	cmp	r0, #1
   12d38:	d808      	bhi.n	12d4c <f_read+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   12d3a:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12d3c:	71e5      	strb	r5, [r4, #7]
   12d3e:	e7c9      	b.n	12cd4 <f_read+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   12d40:	6961      	ldr	r1, [r4, #20]
   12d42:	9301      	str	r3, [sp, #4]
   12d44:	f7ff f96f 	bl	12026 <get_fat>
   12d48:	9b01      	ldr	r3, [sp, #4]
   12d4a:	e7f4      	b.n	12d36 <f_read+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12d4c:	1c41      	adds	r1, r0, #1
   12d4e:	d101      	bne.n	12d54 <f_read+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12d50:	2501      	movs	r5, #1
   12d52:	e7f3      	b.n	12d3c <f_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   12d54:	6160      	str	r0, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12d56:	f8d4 a000 	ldr.w	sl, [r4]
   12d5a:	6961      	ldr	r1, [r4, #20]
   12d5c:	4650      	mov	r0, sl
   12d5e:	9301      	str	r3, [sp, #4]
   12d60:	f7ff f956 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12d64:	9b01      	ldr	r3, [sp, #4]
   12d66:	b930      	cbnz	r0, 12d76 <f_read+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   12d68:	2502      	movs	r5, #2
   12d6a:	4650      	mov	r0, sl
   12d6c:	4629      	mov	r1, r5
   12d6e:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12d70:	f7ff f941 	bl	11ff6 <unlock_fs>
   12d74:	e7b7      	b.n	12ce6 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12d76:	0a7e      	lsrs	r6, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   12d78:	eb00 0803 	add.w	r8, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12d7c:	d029      	beq.n	12dd2 <f_read+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12d7e:	f89a 2002 	ldrb.w	r2, [sl, #2]
   12d82:	1999      	adds	r1, r3, r6
   12d84:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   12d86:	bf88      	it	hi
   12d88:	1ad6      	subhi	r6, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   12d8a:	b2f3      	uxtb	r3, r6
   12d8c:	4642      	mov	r2, r8
   12d8e:	4649      	mov	r1, r9
   12d90:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12d94:	f001 fb09 	bl	143aa <disk_read>
   12d98:	2800      	cmp	r0, #0
   12d9a:	d1d9      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   12d9c:	79a3      	ldrb	r3, [r4, #6]
   12d9e:	065a      	lsls	r2, r3, #25
   12da0:	d50b      	bpl.n	12dba <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   12da2:	69a0      	ldr	r0, [r4, #24]
   12da4:	eba0 0008 	sub.w	r0, r0, r8
   12da8:	4286      	cmp	r6, r0
   12daa:	d906      	bls.n	12dba <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   12dac:	f44f 7200 	mov.w	r2, #512	; 0x200
   12db0:	9900      	ldr	r1, [sp, #0]
   12db2:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   12db6:	f7fe fe9f 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   12dba:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   12dbc:	68a3      	ldr	r3, [r4, #8]
   12dbe:	44b1      	add	r9, r6
   12dc0:	4433      	add	r3, r6
   12dc2:	60a3      	str	r3, [r4, #8]
   12dc4:	f8db 3000 	ldr.w	r3, [fp]
   12dc8:	1bbf      	subs	r7, r7, r6
   12dca:	4433      	add	r3, r6
   12dcc:	f8cb 3000 	str.w	r3, [fp]
   12dd0:	e79f      	b.n	12d12 <f_read+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   12dd2:	69a2      	ldr	r2, [r4, #24]
   12dd4:	4590      	cmp	r8, r2
   12dd6:	d017      	beq.n	12e08 <f_read+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   12dd8:	79a3      	ldrb	r3, [r4, #6]
   12dda:	065b      	lsls	r3, r3, #25
   12ddc:	d50b      	bpl.n	12df6 <f_read+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12dde:	2301      	movs	r3, #1
   12de0:	9900      	ldr	r1, [sp, #0]
   12de2:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12de6:	f001 fafc 	bl	143e2 <disk_write>
   12dea:	2800      	cmp	r0, #0
   12dec:	d1b0      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   12dee:	79a3      	ldrb	r3, [r4, #6]
   12df0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12df4:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   12df6:	6820      	ldr	r0, [r4, #0]
   12df8:	2301      	movs	r3, #1
   12dfa:	4642      	mov	r2, r8
   12dfc:	9900      	ldr	r1, [sp, #0]
   12dfe:	7840      	ldrb	r0, [r0, #1]
   12e00:	f001 fad3 	bl	143aa <disk_read>
   12e04:	2800      	cmp	r0, #0
   12e06:	d1a3      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   12e08:	f8c4 8018 	str.w	r8, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e0c:	68a1      	ldr	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12e0e:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e10:	f3c1 0108 	ubfx	r1, r1, #0, #9
   12e14:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   12e18:	42be      	cmp	r6, r7
   12e1a:	bf28      	it	cs
   12e1c:	463e      	movcs	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12e1e:	3124      	adds	r1, #36	; 0x24
   12e20:	4632      	mov	r2, r6
   12e22:	4421      	add	r1, r4
   12e24:	f7fe fe68 	bl	11af8 <mem_cpy>
   12e28:	e7c8      	b.n	12dbc <f_read+0x102>

00012e2a <f_write>:
f_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   12e2a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e2e:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   12e30:	2300      	movs	r3, #0
   12e32:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   12e36:	4604      	mov	r4, r0
   12e38:	4689      	mov	r9, r1
   12e3a:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   12e3c:	f7ff f8be 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12e40:	4605      	mov	r5, r0
   12e42:	b110      	cbz	r0, 12e4a <f_write+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   12e44:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   12e46:	6820      	ldr	r0, [r4, #0]
   12e48:	e068      	b.n	12f1c <f_write+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   12e4a:	79e1      	ldrb	r1, [r4, #7]
   12e4c:	b139      	cbz	r1, 12e5e <f_write+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12e4e:	6820      	ldr	r0, [r4, #0]
   12e50:	f7ff f8d1 	bl	11ff6 <unlock_fs>
   12e54:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   12e56:	4628      	mov	r0, r5
   12e58:	b003      	add	sp, #12
   12e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   12e5e:	79a3      	ldrb	r3, [r4, #6]
   12e60:	0799      	lsls	r1, r3, #30
   12e62:	d405      	bmi.n	12e70 <f_write+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   12e64:	2107      	movs	r1, #7
   12e66:	6820      	ldr	r0, [r4, #0]
   12e68:	f7ff f8c5 	bl	11ff6 <unlock_fs>
   12e6c:	2507      	movs	r5, #7
   12e6e:	e7f2      	b.n	12e56 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   12e70:	68a3      	ldr	r3, [r4, #8]
   12e72:	eb13 0f08 	cmn.w	r3, r8
   12e76:	d205      	bcs.n	12e84 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12e78:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12e7c:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   12e7e:	f1b8 0f00 	cmp.w	r8, #0
   12e82:	d10a      	bne.n	12e9a <f_write+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12e84:	68a3      	ldr	r3, [r4, #8]
   12e86:	68e2      	ldr	r2, [r4, #12]
   12e88:	4293      	cmp	r3, r2
   12e8a:	f200 80a2 	bhi.w	12fd2 <f_write+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12e8e:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12e90:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12e92:	f043 0320 	orr.w	r3, r3, #32
   12e96:	71a3      	strb	r3, [r4, #6]
   12e98:	e7d5      	b.n	12e46 <f_write+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   12e9a:	68a2      	ldr	r2, [r4, #8]
   12e9c:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12ea0:	2b00      	cmp	r3, #0
   12ea2:	f040 8083 	bne.w	12fac <f_write+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12ea6:	6820      	ldr	r0, [r4, #0]
   12ea8:	7883      	ldrb	r3, [r0, #2]
   12eaa:	3b01      	subs	r3, #1
   12eac:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   12eb0:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12eb4:	9300      	str	r3, [sp, #0]
   12eb6:	d116      	bne.n	12ee6 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   12eb8:	b95a      	cbnz	r2, 12ed2 <f_write+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   12eba:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   12ebc:	b921      	cbnz	r1, 12ec8 <f_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12ebe:	f7ff f9ae 	bl	1221e <create_chain>
   12ec2:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   12ec4:	2800      	cmp	r0, #0
   12ec6:	d0dd      	beq.n	12e84 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12ec8:	2901      	cmp	r1, #1
   12eca:	d104      	bne.n	12ed6 <f_write+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   12ecc:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12ece:	71e5      	strb	r5, [r4, #7]
   12ed0:	e7b8      	b.n	12e44 <f_write+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12ed2:	6961      	ldr	r1, [r4, #20]
   12ed4:	e7f3      	b.n	12ebe <f_write+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12ed6:	1c4a      	adds	r2, r1, #1
   12ed8:	d101      	bne.n	12ede <f_write+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12eda:	2501      	movs	r5, #1
   12edc:	e7f7      	b.n	12ece <f_write+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12ede:	6923      	ldr	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   12ee0:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12ee2:	b903      	cbnz	r3, 12ee6 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   12ee4:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   12ee6:	79a3      	ldrb	r3, [r4, #6]
   12ee8:	065b      	lsls	r3, r3, #25
   12eea:	d50c      	bpl.n	12f06 <f_write+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12eec:	6820      	ldr	r0, [r4, #0]
   12eee:	2301      	movs	r3, #1
   12ef0:	69a2      	ldr	r2, [r4, #24]
   12ef2:	9901      	ldr	r1, [sp, #4]
   12ef4:	7840      	ldrb	r0, [r0, #1]
   12ef6:	f001 fa74 	bl	143e2 <disk_write>
   12efa:	2800      	cmp	r0, #0
   12efc:	d1ed      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   12efe:	79a3      	ldrb	r3, [r4, #6]
   12f00:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12f04:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12f06:	f8d4 a000 	ldr.w	sl, [r4]
   12f0a:	6961      	ldr	r1, [r4, #20]
   12f0c:	4650      	mov	r0, sl
   12f0e:	f7ff f87f 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12f12:	b930      	cbnz	r0, 12f22 <f_write+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   12f14:	2502      	movs	r5, #2
   12f16:	4650      	mov	r0, sl
   12f18:	4629      	mov	r1, r5
   12f1a:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12f1c:	f7ff f86b 	bl	11ff6 <unlock_fs>
   12f20:	e799      	b.n	12e56 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12f22:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12f24:	ea5f 2658 	movs.w	r6, r8, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12f28:	eb00 0703 	add.w	r7, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12f2c:	d02d      	beq.n	12f8a <f_write+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12f2e:	9a00      	ldr	r2, [sp, #0]
   12f30:	f89a 3002 	ldrb.w	r3, [sl, #2]
   12f34:	4432      	add	r2, r6
   12f36:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12f38:	bf88      	it	hi
   12f3a:	9a00      	ldrhi	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12f3c:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12f3e:	bf88      	it	hi
   12f40:	1a9e      	subhi	r6, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12f42:	b2f3      	uxtb	r3, r6
   12f44:	463a      	mov	r2, r7
   12f46:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12f4a:	f001 fa4a 	bl	143e2 <disk_write>
   12f4e:	2800      	cmp	r0, #0
   12f50:	d1c3      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   12f52:	69a1      	ldr	r1, [r4, #24]
   12f54:	1bc9      	subs	r1, r1, r7
   12f56:	428e      	cmp	r6, r1
   12f58:	d90a      	bls.n	12f70 <f_write+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   12f5a:	f44f 7200 	mov.w	r2, #512	; 0x200
   12f5e:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   12f62:	9801      	ldr	r0, [sp, #4]
   12f64:	f7fe fdc8 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   12f68:	79a3      	ldrb	r3, [r4, #6]
   12f6a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12f6e:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   12f70:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   12f72:	68a3      	ldr	r3, [r4, #8]
   12f74:	44b1      	add	r9, r6
   12f76:	4433      	add	r3, r6
   12f78:	60a3      	str	r3, [r4, #8]
   12f7a:	f8db 3000 	ldr.w	r3, [fp]
   12f7e:	eba8 0806 	sub.w	r8, r8, r6
   12f82:	4433      	add	r3, r6
   12f84:	f8cb 3000 	str.w	r3, [fp]
   12f88:	e779      	b.n	12e7e <f_write+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   12f8a:	69a3      	ldr	r3, [r4, #24]
   12f8c:	429f      	cmp	r7, r3
   12f8e:	d00c      	beq.n	12faa <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   12f90:	68a2      	ldr	r2, [r4, #8]
   12f92:	68e3      	ldr	r3, [r4, #12]
   12f94:	429a      	cmp	r2, r3
   12f96:	d208      	bcs.n	12faa <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12f98:	2301      	movs	r3, #1
   12f9a:	463a      	mov	r2, r7
   12f9c:	9901      	ldr	r1, [sp, #4]
   12f9e:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12fa2:	f001 fa02 	bl	143aa <disk_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   12fa6:	2800      	cmp	r0, #0
   12fa8:	d197      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   12faa:	61a7      	str	r7, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12fac:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12fae:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12fb0:	f3c0 0008 	ubfx	r0, r0, #0, #9
   12fb4:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   12fb8:	4546      	cmp	r6, r8
   12fba:	bf28      	it	cs
   12fbc:	4646      	movcs	r6, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12fbe:	3024      	adds	r0, #36	; 0x24
   12fc0:	4632      	mov	r2, r6
   12fc2:	4420      	add	r0, r4
   12fc4:	f7fe fd98 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   12fc8:	79a3      	ldrb	r3, [r4, #6]
   12fca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12fce:	71a3      	strb	r3, [r4, #6]
   12fd0:	e7cf      	b.n	12f72 <f_write+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12fd2:	60e3      	str	r3, [r4, #12]
   12fd4:	e75b      	b.n	12e8e <f_write+0x64>

00012fd6 <f_sync>:
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   12fd6:	b570      	push	{r4, r5, r6, lr}
   12fd8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   12fda:	f7fe ffef 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   12fde:	4605      	mov	r5, r0
   12fe0:	2800      	cmp	r0, #0
   12fe2:	d138      	bne.n	13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   12fe4:	79a3      	ldrb	r3, [r4, #6]
   12fe6:	069a      	lsls	r2, r3, #26
   12fe8:	d535      	bpl.n	13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   12fea:	065b      	lsls	r3, r3, #25
   12fec:	d513      	bpl.n	13016 <f_sync+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12fee:	6820      	ldr	r0, [r4, #0]
   12ff0:	2301      	movs	r3, #1
   12ff2:	69a2      	ldr	r2, [r4, #24]
   12ff4:	f104 0124 	add.w	r1, r4, #36	; 0x24
   12ff8:	7840      	ldrb	r0, [r0, #1]
   12ffa:	f001 f9f2 	bl	143e2 <disk_write>
   12ffe:	b130      	cbz	r0, 1300e <f_sync+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   13000:	2101      	movs	r1, #1
   13002:	6820      	ldr	r0, [r4, #0]
   13004:	f7fe fff7 	bl	11ff6 <unlock_fs>
   13008:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   1300a:	4628      	mov	r0, r5
   1300c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   1300e:	79a3      	ldrb	r3, [r4, #6]
   13010:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13014:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   13016:	69e1      	ldr	r1, [r4, #28]
   13018:	6820      	ldr	r0, [r4, #0]
   1301a:	f7fe fe81 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   1301e:	4605      	mov	r5, r0
   13020:	b9c8      	cbnz	r0, 13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   13022:	6a26      	ldr	r6, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   13024:	7af3      	ldrb	r3, [r6, #11]
   13026:	f043 0320 	orr.w	r3, r3, #32
   1302a:	72f3      	strb	r3, [r6, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   1302c:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1302e:	61f3      	str	r3, [r6, #28]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   13030:	6923      	ldr	r3, [r4, #16]
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   13032:	8373      	strh	r3, [r6, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13034:	0c1b      	lsrs	r3, r3, #16
   13036:	82b3      	strh	r3, [r6, #20]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   13038:	f001 fc8e 	bl	14958 <get_fattime>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1303c:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1303e:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   13042:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   13044:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   13046:	f023 0320 	bic.w	r3, r3, #32
   1304a:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   1304c:	2301      	movs	r3, #1
   1304e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   13050:	f7fe fe2c 	bl	11cac <sync_fs>
   13054:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   13056:	4629      	mov	r1, r5
   13058:	6820      	ldr	r0, [r4, #0]
   1305a:	f7fe ffcc 	bl	11ff6 <unlock_fs>
   1305e:	e7d4      	b.n	1300a <f_sync+0x34>

00013060 <f_close>:
f_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   13060:	b538      	push	{r3, r4, r5, lr}
   13062:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   13064:	f7ff ffb7 	bl	12fd6 <f_sync>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   13068:	4604      	mov	r4, r0
   1306a:	b948      	cbnz	r0, 13080 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   1306c:	4628      	mov	r0, r5
   1306e:	f7fe ffa5 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   13072:	4604      	mov	r4, r0
   13074:	b920      	cbnz	r0, 13080 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   13076:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   13078:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   1307a:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   1307c:	f7fe ffbb 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   13080:	4620      	mov	r0, r4
   13082:	bd38      	pop	{r3, r4, r5, pc}

00013084 <f_lseek>:
f_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   13084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13086:	4604      	mov	r4, r0
   13088:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   1308a:	f7fe ff97 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   1308e:	4605      	mov	r5, r0
   13090:	b110      	cbz	r0, 13098 <f_lseek+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   13092:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   13094:	6820      	ldr	r0, [r4, #0]
   13096:	e06a      	b.n	1316e <f_lseek+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   13098:	79e1      	ldrb	r1, [r4, #7]
   1309a:	b129      	cbz	r1, 130a8 <f_lseek+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   1309c:	6820      	ldr	r0, [r4, #0]
   1309e:	f7fe ffaa 	bl	11ff6 <unlock_fs>
   130a2:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   130a4:	4628      	mov	r0, r5
   130a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   130a8:	68e3      	ldr	r3, [r4, #12]
   130aa:	42b3      	cmp	r3, r6
   130ac:	d204      	bcs.n	130b8 <f_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   130ae:	79a2      	ldrb	r2, [r4, #6]
   130b0:	f012 0f02 	tst.w	r2, #2
   130b4:	bf08      	it	eq
   130b6:	461e      	moveq	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130b8:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   130ba:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130bc:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   130be:	2e00      	cmp	r6, #0
   130c0:	d130      	bne.n	13124 <f_lseek+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   130c2:	68a3      	ldr	r3, [r4, #8]
   130c4:	68e2      	ldr	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   130c6:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   130c8:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   130ca:	bf81      	itttt	hi
   130cc:	60e3      	strhi	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   130ce:	79a3      	ldrbhi	r3, [r4, #6]
   130d0:	f043 0320 	orrhi.w	r3, r3, #32
   130d4:	71a3      	strbhi	r3, [r4, #6]
   130d6:	e7dd      	b.n	13094 <f_lseek+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130d8:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   130da:	68a3      	ldr	r3, [r4, #8]
   130dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
   130e0:	2b00      	cmp	r3, #0
   130e2:	d0ee      	beq.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   130e4:	69a2      	ldr	r2, [r4, #24]
   130e6:	4296      	cmp	r6, r2
   130e8:	d0eb      	beq.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   130ea:	79a3      	ldrb	r3, [r4, #6]
   130ec:	f104 0724 	add.w	r7, r4, #36	; 0x24
   130f0:	f013 0f40 	tst.w	r3, #64	; 0x40
   130f4:	d00b      	beq.n	1310e <f_lseek+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   130f6:	6820      	ldr	r0, [r4, #0]
   130f8:	2301      	movs	r3, #1
   130fa:	4639      	mov	r1, r7
   130fc:	7840      	ldrb	r0, [r0, #1]
   130fe:	f001 f970 	bl	143e2 <disk_write>
   13102:	2800      	cmp	r0, #0
   13104:	d142      	bne.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   13106:	79a3      	ldrb	r3, [r4, #6]
   13108:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   1310c:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   1310e:	6820      	ldr	r0, [r4, #0]
   13110:	2301      	movs	r3, #1
   13112:	4632      	mov	r2, r6
   13114:	4639      	mov	r1, r7
   13116:	7840      	ldrb	r0, [r0, #1]
   13118:	f001 f947 	bl	143aa <disk_read>
   1311c:	2800      	cmp	r0, #0
   1311e:	d135      	bne.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   13120:	61a6      	str	r6, [r4, #24]
   13122:	e7ce      	b.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   13124:	6820      	ldr	r0, [r4, #0]
   13126:	7887      	ldrb	r7, [r0, #2]
   13128:	027f      	lsls	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   1312a:	b31b      	cbz	r3, 13174 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   1312c:	3b01      	subs	r3, #1
   1312e:	1e72      	subs	r2, r6, #1
   13130:	fbb2 f2f7 	udiv	r2, r2, r7
   13134:	fbb3 f1f7 	udiv	r1, r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   13138:	428a      	cmp	r2, r1
   1313a:	d31b      	bcc.n	13174 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   1313c:	427a      	negs	r2, r7
   1313e:	4013      	ands	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   13140:	6961      	ldr	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   13142:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   13144:	1af6      	subs	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   13146:	2900      	cmp	r1, #0
   13148:	d0c6      	beq.n	130d8 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   1314a:	42be      	cmp	r6, r7
   1314c:	d823      	bhi.n	13196 <f_lseek+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   1314e:	68a3      	ldr	r3, [r4, #8]
   13150:	4433      	add	r3, r6
   13152:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   13154:	f3c6 0308 	ubfx	r3, r6, #0, #9
   13158:	2b00      	cmp	r3, #0
   1315a:	d0bd      	beq.n	130d8 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   1315c:	6822      	ldr	r2, [r4, #0]
   1315e:	4610      	mov	r0, r2
   13160:	f7fe ff56 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   13164:	bb90      	cbnz	r0, 131cc <f_lseek+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   13166:	2502      	movs	r5, #2
   13168:	4610      	mov	r0, r2
   1316a:	4629      	mov	r1, r5
   1316c:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   1316e:	f7fe ff42 	bl	11ff6 <unlock_fs>
   13172:	e797      	b.n	130a4 <f_lseek+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   13174:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   13176:	b961      	cbnz	r1, 13192 <f_lseek+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   13178:	f7ff f851 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   1317c:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   1317e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   13180:	d102      	bne.n	13188 <f_lseek+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   13182:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   13184:	71e5      	strb	r5, [r4, #7]
   13186:	e784      	b.n	13092 <f_lseek+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   13188:	3001      	adds	r0, #1
   1318a:	d101      	bne.n	13190 <f_lseek+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   1318c:	2501      	movs	r5, #1
   1318e:	e7f9      	b.n	13184 <f_lseek+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   13190:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   13192:	6161      	str	r1, [r4, #20]
   13194:	e7d7      	b.n	13146 <f_lseek+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   13196:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   13198:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1319a:	079a      	lsls	r2, r3, #30
   1319c:	d505      	bpl.n	131aa <f_lseek+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   1319e:	f7ff f83e 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   131a2:	4601      	mov	r1, r0
   131a4:	b920      	cbnz	r0, 131b0 <f_lseek+0x12c>
   131a6:	463e      	mov	r6, r7
   131a8:	e7d1      	b.n	1314e <f_lseek+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   131aa:	f7fe ff3c 	bl	12026 <get_fat>
   131ae:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   131b0:	1c4b      	adds	r3, r1, #1
   131b2:	d0eb      	beq.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   131b4:	2901      	cmp	r1, #1
   131b6:	d9e4      	bls.n	13182 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   131b8:	6823      	ldr	r3, [r4, #0]
   131ba:	699b      	ldr	r3, [r3, #24]
   131bc:	4299      	cmp	r1, r3
   131be:	d2e0      	bcs.n	13182 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   131c0:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   131c2:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   131c4:	443b      	add	r3, r7
   131c6:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   131c8:	1bf6      	subs	r6, r6, r7
   131ca:	e7be      	b.n	1314a <f_lseek+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   131cc:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   131d0:	e783      	b.n	130da <f_lseek+0x56>

000131d2 <f_opendir>:
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3156

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
   131d2:	b530      	push	{r4, r5, lr}
   131d4:	b0c9      	sub	sp, #292	; 0x124
   131d6:	9101      	str	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	FRESULT res;
	FATFS* fs;
	DEF_NAMEBUF;


	if (!dp) return FR_INVALID_OBJECT;
   131d8:	4605      	mov	r5, r0
   131da:	2800      	cmp	r0, #0
   131dc:	d037      	beq.n	1324e <f_opendir+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3165

	/* Get logical drive number */
	res = find_volume(&fs, &path, 0);
   131de:	2200      	movs	r2, #0
   131e0:	a901      	add	r1, sp, #4
   131e2:	a803      	add	r0, sp, #12
   131e4:	f7fe fddc 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3166
	if (res == FR_OK) {
   131e8:	4604      	mov	r4, r0
   131ea:	b988      	cbnz	r0, 13210 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   131ec:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		INIT_BUF(*dp);
		res = follow_path(dp, path);			/* Follow the path to the directory */
   131ee:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   131f0:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3168
		INIT_BUF(*dp);
   131f2:	ab04      	add	r3, sp, #16
   131f4:	61ab      	str	r3, [r5, #24]
   131f6:	ab07      	add	r3, sp, #28
   131f8:	61eb      	str	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		res = follow_path(dp, path);			/* Follow the path to the directory */
   131fa:	4628      	mov	r0, r5
   131fc:	f7ff f966 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3171
		FREE_BUF();
		if (res == FR_OK) {						/* Follow completed */
   13200:	4604      	mov	r4, r0
   13202:	bb30      	cbnz	r0, 13252 <f_opendir+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3172
			if (dp->dir) {						/* It is not the origin directory itself */
   13204:	696b      	ldr	r3, [r5, #20]
   13206:	b17b      	cbz	r3, 13228 <f_opendir+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3173
				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
   13208:	7ada      	ldrb	r2, [r3, #11]
   1320a:	06d2      	lsls	r2, r2, #27
   1320c:	d403      	bmi.n	13216 <f_opendir+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3176
					dp->sclust = ld_clust(fs, dp->dir);
				else							/* The object is a file */
					res = FR_NO_PATH;
   1320e:	2405      	movs	r4, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196 (discriminator 1)
#endif
			}
		}
		if (res == FR_NO_FILE) res = FR_NO_PATH;
	}
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   13210:	2300      	movs	r3, #0
   13212:	602b      	str	r3, [r5, #0]
   13214:	e014      	b.n	13240 <f_opendir+0x6e>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13216:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13218:	8b5a      	ldrh	r2, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1321a:	7809      	ldrb	r1, [r1, #0]
   1321c:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1321e:	bf04      	itt	eq
   13220:	8a9b      	ldrheq	r3, [r3, #20]
   13222:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3174
					dp->sclust = ld_clust(fs, dp->dir);
   13226:	60aa      	str	r2, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   13228:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1322a:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   1322c:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1322e:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   13230:	80ab      	strh	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   13232:	f7fe ff4b 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   13236:	2804      	cmp	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   13238:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   1323a:	d0e8      	beq.n	1320e <f_opendir+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   1323c:	2c00      	cmp	r4, #0
   1323e:	d1e7      	bne.n	13210 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3198

	LEAVE_FF(fs, res);
   13240:	4621      	mov	r1, r4
   13242:	9803      	ldr	r0, [sp, #12]
   13244:	f7fe fed7 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3199
}
   13248:	4620      	mov	r0, r4
   1324a:	b049      	add	sp, #292	; 0x124
   1324c:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	if (!dp) return FR_INVALID_OBJECT;
   1324e:	2409      	movs	r4, #9
   13250:	e7fa      	b.n	13248 <f_opendir+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   13252:	2804      	cmp	r0, #4
   13254:	d0db      	beq.n	1320e <f_opendir+0x3c>
   13256:	e7db      	b.n	13210 <f_opendir+0x3e>

00013258 <f_readdir>:
f_readdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3244

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
   13258:	b570      	push	{r4, r5, r6, lr}
   1325a:	b0c4      	sub	sp, #272	; 0x110
   1325c:	4604      	mov	r4, r0
   1325e:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3249
	FRESULT res;
	DEF_NAMEBUF;


	res = validate(dp);						/* Check validity of the object */
   13260:	f7fe feac 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3250
	if (res == FR_OK) {
   13264:	4605      	mov	r5, r0
   13266:	b9e0      	cbnz	r0, 132a2 <f_readdir+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3251
		if (!fno) {
   13268:	b92e      	cbnz	r6, 13276 <f_readdir+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3252
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
   1326a:	4601      	mov	r1, r0
   1326c:	4620      	mov	r0, r4
   1326e:	f7fe ff2d 	bl	120cc <dir_sdi>
   13272:	4605      	mov	r5, r0
   13274:	e015      	b.n	132a2 <f_readdir+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3254
		} else {
			INIT_BUF(*dp);
   13276:	ab03      	add	r3, sp, #12
   13278:	f8c4 d018 	str.w	sp, [r4, #24]
   1327c:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3255
			res = dir_read(dp, 0);			/* Read an item */
   1327e:	4620      	mov	r0, r4
   13280:	f7ff fba6 	bl	129d0 <dir_read.constprop.11>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3256
			if (res == FR_NO_FILE) {		/* Reached end of directory */
   13284:	2804      	cmp	r0, #4
   13286:	d113      	bne.n	132b0 <f_readdir+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3257
				dp->sect = 0;
   13288:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3261
				res = FR_OK;
			}
			if (res == FR_OK) {				/* A valid entry is found */
				get_fileinfo(dp, fno);		/* Get the object information */
   1328a:	4631      	mov	r1, r6
   1328c:	4620      	mov	r0, r4
   1328e:	f7fe fc82 	bl	11b96 <get_fileinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3262
				res = dir_next(dp, 0);		/* Increment index for next */
   13292:	2100      	movs	r1, #0
   13294:	4620      	mov	r0, r4
   13296:	f7ff f812 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3263
				if (res == FR_NO_FILE) {
   1329a:	2804      	cmp	r0, #4
   1329c:	d1e9      	bne.n	13272 <f_readdir+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3264
					dp->sect = 0;
   1329e:	2300      	movs	r3, #0
   132a0:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3272
			}
			FREE_BUF();
		}
	}

	LEAVE_FF(dp->fs, res);
   132a2:	6820      	ldr	r0, [r4, #0]
   132a4:	4629      	mov	r1, r5
   132a6:	f7fe fea6 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3273
}
   132aa:	4628      	mov	r0, r5
   132ac:	b044      	add	sp, #272	; 0x110
   132ae:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3260
			if (res == FR_OK) {				/* A valid entry is found */
   132b0:	2800      	cmp	r0, #0
   132b2:	d1de      	bne.n	13272 <f_readdir+0x1a>
   132b4:	e7e9      	b.n	1328a <f_readdir+0x32>

000132b6 <f_getfree>:
f_getfree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   132b6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   132ba:	4614      	mov	r4, r2
   132bc:	ab02      	add	r3, sp, #8
   132be:	f843 0d04 	str.w	r0, [r3, #-4]!
   132c2:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   132c4:	4620      	mov	r0, r4
   132c6:	2200      	movs	r2, #0
   132c8:	4619      	mov	r1, r3
   132ca:	f7fe fd69 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   132ce:	6824      	ldr	r4, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   132d0:	4605      	mov	r5, r0
   132d2:	b930      	cbnz	r0, 132e2 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   132d4:	69a7      	ldr	r7, [r4, #24]
   132d6:	6963      	ldr	r3, [r4, #20]
   132d8:	1eba      	subs	r2, r7, #2
   132da:	4293      	cmp	r3, r2
   132dc:	d809      	bhi.n	132f2 <f_getfree+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   132de:	f8c8 3000 	str.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   132e2:	4620      	mov	r0, r4
   132e4:	4629      	mov	r1, r5
   132e6:	f7fe fe86 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   132ea:	4628      	mov	r0, r5
   132ec:	b002      	add	sp, #8
   132ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   132f2:	f894 9000 	ldrb.w	r9, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   132f6:	f1b9 0f01 	cmp.w	r9, #1
   132fa:	d117      	bne.n	1332c <f_getfree+0x76>
   132fc:	2702      	movs	r7, #2
   132fe:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   13300:	4639      	mov	r1, r7
   13302:	4620      	mov	r0, r4
   13304:	f7fe fe8f 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   13308:	1c43      	adds	r3, r0, #1
   1330a:	d032      	beq.n	13372 <f_getfree+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   1330c:	2801      	cmp	r0, #1
   1330e:	d032      	beq.n	13376 <f_getfree+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   13310:	b900      	cbnz	r0, 13314 <f_getfree+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   13312:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   13314:	69a3      	ldr	r3, [r4, #24]
   13316:	3701      	adds	r7, #1
   13318:	429f      	cmp	r7, r3
   1331a:	d3f1      	bcc.n	13300 <f_getfree+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   1331c:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   1331e:	6166      	str	r6, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   13320:	f043 0301 	orr.w	r3, r3, #1
   13324:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   13326:	f8c8 6000 	str.w	r6, [r8]
   1332a:	e7da      	b.n	132e2 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   1332c:	4603      	mov	r3, r0
   1332e:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   13330:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   13332:	6a61      	ldr	r1, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   13334:	b952      	cbnz	r2, 1334c <f_getfree+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   13336:	4620      	mov	r0, r4
   13338:	f101 0a01 	add.w	sl, r1, #1
   1333c:	f7fe fcf0 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   13340:	b9d8      	cbnz	r0, 1337a <f_getfree+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   13342:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   13344:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   13348:	f104 0334 	add.w	r3, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   1334c:	f1b9 0f02 	cmp.w	r9, #2
   13350:	d107      	bne.n	13362 <f_getfree+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   13352:	8818      	ldrh	r0, [r3, #0]
   13354:	b900      	cbnz	r0, 13358 <f_getfree+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   13356:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   13358:	3302      	adds	r3, #2
   1335a:	3a02      	subs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   1335c:	3f01      	subs	r7, #1
   1335e:	d1e9      	bne.n	13334 <f_getfree+0x7e>
   13360:	e7dc      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13362:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   13364:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13366:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   1336a:	bf08      	it	eq
   1336c:	3601      	addeq	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   1336e:	3304      	adds	r3, #4
   13370:	e7f4      	b.n	1335c <f_getfree+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   13372:	2501      	movs	r5, #1
   13374:	e7d2      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   13376:	2502      	movs	r5, #2
   13378:	e7d0      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   1337a:	4605      	mov	r5, r0
   1337c:	e7ce      	b.n	1331c <f_getfree+0x66>

0001337e <f_unlink>:
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3443
/*-----------------------------------------------------------------------*/

FRESULT f_unlink (
	const TCHAR* path		/* Pointer to the file or directory path */
)
{
   1337e:	b530      	push	{r4, r5, lr}
   13380:	b0d9      	sub	sp, #356	; 0x164
   13382:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3452
	DWORD dclst;
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13384:	2201      	movs	r2, #1
   13386:	a901      	add	r1, sp, #4
   13388:	a805      	add	r0, sp, #20
   1338a:	f7fe fd09 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3453
	if (res == FR_OK) {
   1338e:	4604      	mov	r4, r0
   13390:	2800      	cmp	r0, #0
   13392:	d131      	bne.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   13394:	ab02      	add	r3, sp, #8
   13396:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   13398:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1339a:	ab17      	add	r3, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   1339c:	a805      	add	r0, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1339e:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   133a0:	f7ff f894 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3461
		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
#endif
		if (res == FR_OK) {					/* The object is accessible */
   133a4:	4604      	mov	r4, r0
   133a6:	bb38      	cbnz	r0, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3462
			dir = dj.dir;
   133a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3463
			if (!dir) {
   133aa:	b363      	cbz	r3, 13406 <f_unlink+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3466
				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
			} else {
				if (dir[DIR_Attr] & AM_RDO)
   133ac:	7ada      	ldrb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3467
					res = FR_DENIED;		/* Cannot remove R/O object */
   133ae:	f012 0f01 	tst.w	r2, #1
   133b2:	bf18      	it	ne
   133b4:	2407      	movne	r4, #7
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   133b6:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   133b8:	8b5d      	ldrh	r5, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   133ba:	7812      	ldrb	r2, [r2, #0]
   133bc:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   133be:	bf04      	itt	eq
   133c0:	8a9a      	ldrheq	r2, [r3, #20]
   133c2:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470
			}
			dclst = ld_clust(dj.fs, dir);
			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
   133c6:	b9bc      	cbnz	r4, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470 (discriminator 1)
   133c8:	7adb      	ldrb	r3, [r3, #11]
   133ca:	06db      	lsls	r3, r3, #27
   133cc:	d529      	bpl.n	13422 <f_unlink+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3471
				if (dclst < 2) {
   133ce:	2d01      	cmp	r5, #1
   133d0:	d923      	bls.n	1341a <f_unlink+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3474
					res = FR_INT_ERR;
				} else {
					mem_cpy(&sdj, &dj, sizeof (DIR));	/* Check if the sub-directory is empty or not */
   133d2:	2224      	movs	r2, #36	; 0x24
   133d4:	a905      	add	r1, sp, #20
   133d6:	a80e      	add	r0, sp, #56	; 0x38
   133d8:	f7fe fb8e 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					sdj.sclust = dclst;
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   133dc:	2102      	movs	r1, #2
   133de:	a80e      	add	r0, sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3475
					sdj.sclust = dclst;
   133e0:	9510      	str	r5, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   133e2:	f7fe fe73 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3477
					if (res == FR_OK) {
   133e6:	4604      	mov	r4, r0
   133e8:	b930      	cbnz	r0, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3478
						res = dir_read(&sdj, 0);	/* Read an item */
   133ea:	a80e      	add	r0, sp, #56	; 0x38
   133ec:	f7ff faf0 	bl	129d0 <dir_read.constprop.11>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3479
						if (res == FR_OK		/* Not empty directory */
   133f0:	4604      	mov	r4, r0
   133f2:	b1a0      	cbz	r0, 1341e <f_unlink+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3484
#if _FS_RPATH
						|| dclst == dj.fs->cdir	/* Current directory */
#endif
						) res = FR_DENIED;
						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
   133f4:	2804      	cmp	r0, #4
   133f6:	d014      	beq.n	13422 <f_unlink+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3500
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   133f8:	9805      	ldr	r0, [sp, #20]
   133fa:	4621      	mov	r1, r4
   133fc:	f7fe fdfb 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3501
}
   13400:	4620      	mov	r0, r4
   13402:	b059      	add	sp, #356	; 0x164
   13404:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3464
				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
   13406:	2406      	movs	r4, #6
   13408:	e7d5      	b.n	133b6 <f_unlink+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3492
						res = remove_chain(dj.fs, dclst);
   1340a:	4629      	mov	r1, r5
   1340c:	9805      	ldr	r0, [sp, #20]
   1340e:	f7ff fb53 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   13412:	4604      	mov	r4, r0
   13414:	2800      	cmp	r0, #0
   13416:	d1ef      	bne.n	133f8 <f_unlink+0x7a>
   13418:	e00b      	b.n	13432 <f_unlink+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3472
					res = FR_INT_ERR;
   1341a:	2402      	movs	r4, #2
   1341c:	e7ec      	b.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3483
						) res = FR_DENIED;
   1341e:	2407      	movs	r4, #7
   13420:	e7ea      	b.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3489
				res = dir_remove(&dj);		/* Remove the directory entry */
   13422:	a805      	add	r0, sp, #20
   13424:	f7ff faa6 	bl	12974 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3490
				if (res == FR_OK) {
   13428:	4604      	mov	r4, r0
   1342a:	2800      	cmp	r0, #0
   1342c:	d1e4      	bne.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3491
					if (dclst)				/* Remove the cluster chain if exist */
   1342e:	2d00      	cmp	r5, #0
   13430:	d1eb      	bne.n	1340a <f_unlink+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   13432:	9805      	ldr	r0, [sp, #20]
   13434:	f7fe fc3a 	bl	11cac <sync_fs>
   13438:	4604      	mov	r4, r0
   1343a:	e7dd      	b.n	133f8 <f_unlink+0x7a>

0001343c <f_mkdir>:
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3513
/*-----------------------------------------------------------------------*/

FRESULT f_mkdir (
	const TCHAR* path		/* Pointer to the directory path */
)
{
   1343c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13440:	b0d1      	sub	sp, #324	; 0x144
   13442:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	FRESULT res;
	DIR dj;
	BYTE *dir, n;
	DWORD dsc, dcl, pcl, tm = get_fattime();
   13444:	f001 fa88 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13448:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	DWORD dsc, dcl, pcl, tm = get_fattime();
   1344a:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	res = find_volume(&dj.fs, &path, 1);
   1344c:	a901      	add	r1, sp, #4
   1344e:	a806      	add	r0, sp, #24
   13450:	f7fe fca6 	bl	11da0 <find_volume>
   13454:	4604      	mov	r4, r0
   13456:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3523
	if (res == FR_OK) {
   13458:	2800      	cmp	r0, #0
   1345a:	f040 808a 	bne.w	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   1345e:	ab03      	add	r3, sp, #12
   13460:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13462:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   13464:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13466:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   13468:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   1346a:	f7ff f82f 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   1346e:	4604      	mov	r4, r0
   13470:	2800      	cmp	r0, #0
   13472:	f000 808a 	beq.w	1358a <f_mkdir+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3529
		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;
		if (res == FR_NO_FILE) {				/* Can create a new directory */
   13476:	2804      	cmp	r0, #4
   13478:	d17b      	bne.n	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3530
			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
   1347a:	4629      	mov	r1, r5
   1347c:	9806      	ldr	r0, [sp, #24]
   1347e:	f7fe fece 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			res = FR_OK;
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13482:	4605      	mov	r5, r0
   13484:	2800      	cmp	r0, #0
   13486:	d06f      	beq.n	13568 <f_mkdir+0x12c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   13488:	2801      	cmp	r0, #1
   1348a:	d07a      	beq.n	13582 <f_mkdir+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   1348c:	1c43      	adds	r3, r0, #1
   1348e:	d07a      	beq.n	13586 <f_mkdir+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3536
			if (res == FR_OK)					/* Flush FAT */
				res = sync_window(dj.fs);
   13490:	9806      	ldr	r0, [sp, #24]
   13492:	f7fe fc05 	bl	11ca0 <sync_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3537
			if (res == FR_OK) {					/* Initialize the new directory table */
   13496:	4604      	mov	r4, r0
   13498:	2800      	cmp	r0, #0
   1349a:	d166      	bne.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   1349c:	9e06      	ldr	r6, [sp, #24]
   1349e:	4629      	mov	r1, r5
   134a0:	4630      	mov	r0, r6
   134a2:	f7fe fdb5 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3539
				dir = dj.fs->win;
   134a6:	f106 0734 	add.w	r7, r6, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   134aa:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   134ac:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   134ae:	f44f 7200 	mov.w	r2, #512	; 0x200
   134b2:	4638      	mov	r0, r7
   134b4:	f7fe fb3c 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3541
				mem_set(dir+DIR_Name, ' ', 11);	/* Create "." entry */
   134b8:	220b      	movs	r2, #11
   134ba:	2120      	movs	r1, #32
   134bc:	4638      	mov	r0, r7
   134be:	f7fe fb37 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Name] = '.';
				dir[DIR_Attr] = AM_DIR;
   134c2:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   134c4:	242e      	movs	r4, #46	; 0x2e
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   134c6:	fa25 fa02 	lsr.w	sl, r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   134ca:	fa1f f985 	uxth.w	r9, r5
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Attr] = AM_DIR;
   134ce:	f886 203f 	strb.w	r2, [r6, #63]	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				ST_DWORD(dir+DIR_WrtTime, tm);
				st_clust(dir, dcl);
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   134d2:	4639      	mov	r1, r7
   134d4:	2220      	movs	r2, #32
   134d6:	f106 0054 	add.w	r0, r6, #84	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   134da:	f886 4034 	strb.w	r4, [r6, #52]	; 0x34
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   134de:	f8c6 804a 	str.w	r8, [r6, #74]	; 0x4a
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   134e2:	f8a6 904e 	strh.w	r9, [r6, #78]	; 0x4e
   134e6:	f8a6 a048 	strh.w	sl, [r6, #72]	; 0x48
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   134ea:	f7fe fb05 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134ee:	9906      	ldr	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   134f0:	f886 4055 	strb.w	r4, [r6, #85]	; 0x55
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134f4:	7808      	ldrb	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   134f6:	9a08      	ldr	r2, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134f8:	2803      	cmp	r0, #3
   134fa:	9b00      	ldr	r3, [sp, #0]
   134fc:	d103      	bne.n	13506 <f_mkdir+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548 (discriminator 1)
   134fe:	6a88      	ldr	r0, [r1, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3549 (discriminator 1)
					pcl = 0;
   13500:	4282      	cmp	r2, r0
   13502:	bf08      	it	eq
   13504:	2200      	moveq	r2, #0
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   13506:	f8a6 206e 	strh.w	r2, [r6, #110]	; 0x6e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   1350a:	0c12      	lsrs	r2, r2, #16
   1350c:	f8a6 2068 	strh.w	r2, [r6, #104]	; 0x68
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551
				st_clust(dir+SZ_DIR, pcl);
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   13510:	788e      	ldrb	r6, [r1, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 1)
   13512:	b9a6      	cbnz	r6, 1353e <f_mkdir+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3559
					res = sync_window(dj.fs);
					if (res != FR_OK) break;
					mem_set(dir, 0, SS(dj.fs));
				}
			}
			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
   13514:	a806      	add	r0, sp, #24
   13516:	f7ff f911 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3560
			if (res != FR_OK) {
   1351a:	4604      	mov	r4, r0
   1351c:	bb28      	cbnz	r0, 1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
			} else {
				dir = dj.dir;
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   1351e:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3563
				dir = dj.dir;
   13520:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				ST_DWORD(dir+DIR_WrtTime, tm);		/* Created time */
				st_clust(dir, dcl);					/* Table start cluster */
				dj.fs->wflag = 1;
   13522:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   13524:	72da      	strb	r2, [r3, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13526:	f8c3 8016 	str.w	r8, [r3, #22]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1352a:	f8a3 901a 	strh.w	r9, [r3, #26]
   1352e:	f8a3 a014 	strh.w	sl, [r3, #20]
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				dj.fs->wflag = 1;
   13532:	2301      	movs	r3, #1
   13534:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3568
				res = sync_fs(dj.fs);
   13536:	f7fe fbb9 	bl	11cac <sync_fs>
   1353a:	4604      	mov	r4, r0
   1353c:	e019      	b.n	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552
					dj.fs->winsect = dsc++;
   1353e:	9806      	ldr	r0, [sp, #24]
   13540:	f103 0b01 	add.w	fp, r3, #1
   13544:	6303      	str	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3553
					dj.fs->wflag = 1;
   13546:	f04f 0301 	mov.w	r3, #1
   1354a:	7103      	strb	r3, [r0, #4]
sync_window():
   1354c:	f7fe fb85 	bl	11c5a <sync_window.part.1>
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3555
					if (res != FR_OK) break;
   13550:	4604      	mov	r4, r0
   13552:	b950      	cbnz	r0, 1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   13554:	4601      	mov	r1, r0
   13556:	f44f 7200 	mov.w	r2, #512	; 0x200
   1355a:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   1355c:	3e01      	subs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   1355e:	f7fe fae7 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   13562:	b2f6      	uxtb	r6, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552 (discriminator 2)
					dj.fs->winsect = dsc++;
   13564:	465b      	mov	r3, fp
   13566:	e7d4      	b.n	13512 <f_mkdir+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13568:	2407      	movs	r4, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3561
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
   1356a:	4629      	mov	r1, r5
   1356c:	9806      	ldr	r0, [sp, #24]
   1356e:	f7ff faa3 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3574
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   13572:	9806      	ldr	r0, [sp, #24]
   13574:	4621      	mov	r1, r4
   13576:	f7fe fd3e 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3575
}
   1357a:	4620      	mov	r0, r4
   1357c:	b051      	add	sp, #324	; 0x144
   1357e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   13582:	2402      	movs	r4, #2
   13584:	e7f1      	b.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   13586:	2401      	movs	r4, #1
   13588:	e7ef      	b.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   1358a:	2408      	movs	r4, #8
   1358c:	e7f1      	b.n	13572 <f_mkdir+0x136>

0001358e <f_rename>:
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3673

FRESULT f_rename (
	const TCHAR* path_old,	/* Pointer to the object to be renamed */
	const TCHAR* path_new	/* Pointer to the new name */
)
{
   1358e:	b510      	push	{r4, lr}
   13590:	b0de      	sub	sp, #376	; 0x178
   13592:	9001      	str	r0, [sp, #4]
   13594:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3682
	DWORD dw;
	DEF_NAMEBUF;


	/* Get logical drive number of the source object */
	res = find_volume(&djo.fs, &path_old, 1);
   13596:	2201      	movs	r2, #1
   13598:	a901      	add	r1, sp, #4
   1359a:	a80b      	add	r0, sp, #44	; 0x2c
   1359c:	f7fe fc00 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3683
	if (res == FR_OK) {
   135a0:	4604      	mov	r4, r0
   135a2:	2800      	cmp	r0, #0
   135a4:	d173      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   135a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		INIT_BUF(djo);
		res = follow_path(&djo, path_old);		/* Check old object */
   135a8:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   135aa:	9314      	str	r3, [sp, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   135ac:	ab02      	add	r3, sp, #8
   135ae:	9311      	str	r3, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   135b0:	a80b      	add	r0, sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   135b2:	ab1d      	add	r3, sp, #116	; 0x74
   135b4:	9312      	str	r3, [sp, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   135b6:	f7fe ff89 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3692
		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&djo, 2);
#endif
		if (res == FR_OK) {						/* Old object is found */
   135ba:	4604      	mov	r4, r0
   135bc:	2800      	cmp	r0, #0
   135be:	d166      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3693
			if (!djo.dir) {						/* Is root dir? */
   135c0:	9910      	ldr	r1, [sp, #64]	; 0x40
   135c2:	2900      	cmp	r1, #0
   135c4:	d06a      	beq.n	1369c <f_rename+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3696
				res = FR_NO_FILE;
			} else {
				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except name */
   135c6:	2215      	movs	r2, #21
   135c8:	310b      	adds	r1, #11
   135ca:	a805      	add	r0, sp, #20
   135cc:	f7fe fa94 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3697
				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
   135d0:	2224      	movs	r2, #36	; 0x24
   135d2:	a90b      	add	r1, sp, #44	; 0x2c
   135d4:	a814      	add	r0, sp, #80	; 0x50
   135d6:	f7fe fa8f 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3698
				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
   135da:	4668      	mov	r0, sp
   135dc:	f7fe fabe 	bl	11b5c <get_ldnumber>
   135e0:	2800      	cmp	r0, #0
   135e2:	db5d      	blt.n	136a0 <f_rename+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3699
					res = follow_path(&djn, path_new);	/* and check if new object is exist */
   135e4:	9900      	ldr	r1, [sp, #0]
   135e6:	a814      	add	r0, sp, #80	; 0x50
   135e8:	f7fe ff70 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				else
					res = FR_INVALID_DRIVE;
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   135ec:	4604      	mov	r4, r0
   135ee:	2800      	cmp	r0, #0
   135f0:	d058      	beq.n	136a4 <f_rename+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3703
				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
   135f2:	2804      	cmp	r0, #4
   135f4:	d14b      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3705
/* Start critical section that any interruption can cause a cross-link */
					res = dir_register(&djn);			/* Register the new entry */
   135f6:	a814      	add	r0, sp, #80	; 0x50
   135f8:	f7ff f8a0 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3706
					if (res == FR_OK) {
   135fc:	4604      	mov	r4, r0
   135fe:	2800      	cmp	r0, #0
   13600:	d145      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3707
						dir = djn.dir;					/* Copy object information except name */
   13602:	9c19      	ldr	r4, [sp, #100]	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3708
						mem_cpy(dir+13, buf+2, 19);
   13604:	2213      	movs	r2, #19
   13606:	f10d 0116 	add.w	r1, sp, #22
   1360a:	f104 000d 	add.w	r0, r4, #13
   1360e:	f7fe fa73 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   13612:	f89d 3014 	ldrb.w	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   13616:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   13618:	f043 0320 	orr.w	r3, r3, #32
   1361c:	72e3      	strb	r3, [r4, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   1361e:	2301      	movs	r3, #1
   13620:	7113      	strb	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711
						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the directory if needed */
   13622:	990d      	ldr	r1, [sp, #52]	; 0x34
   13624:	9b16      	ldr	r3, [sp, #88]	; 0x58
   13626:	4299      	cmp	r1, r3
   13628:	d028      	beq.n	1367c <f_rename+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711 (discriminator 1)
   1362a:	7ae3      	ldrb	r3, [r4, #11]
   1362c:	06db      	lsls	r3, r3, #27
   1362e:	d525      	bpl.n	1367c <f_rename+0xee>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13630:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13632:	8b61      	ldrh	r1, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13634:	2b03      	cmp	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   13636:	bf08      	it	eq
   13638:	8aa3      	ldrheq	r3, [r4, #20]
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   1363a:	4610      	mov	r0, r2
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1363c:	bf08      	it	eq
   1363e:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   13642:	f7fe fce5 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3713
							if (!dw) {
   13646:	4601      	mov	r1, r0
   13648:	b370      	cbz	r0, 136a8 <f_rename+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3716
								res = FR_INT_ERR;
							} else {
								res = move_window(djo.fs, dw);
   1364a:	4610      	mov	r0, r2
   1364c:	f7fe fb68 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
								if (res == FR_OK && dir[1] == '.') {
   13650:	4604      	mov	r4, r0
   13652:	b9e0      	cbnz	r0, 1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3717 (discriminator 1)
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
   13654:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718 (discriminator 1)
								if (res == FR_OK && dir[1] == '.') {
   13656:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
   1365a:	2a2e      	cmp	r2, #46	; 0x2e
   1365c:	d10e      	bne.n	1367c <f_rename+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719
									dw = (djo.fs->fs_type == FS_FAT32 && djn.sclust == djo.fs->dirbase) ? 0 : djn.sclust;
   1365e:	781a      	ldrb	r2, [r3, #0]
   13660:	2a03      	cmp	r2, #3
   13662:	d103      	bne.n	1366c <f_rename+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 2)
   13664:	9916      	ldr	r1, [sp, #88]	; 0x58
   13666:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   13668:	4291      	cmp	r1, r2
   1366a:	d000      	beq.n	1366e <f_rename+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 3)
   1366c:	9c16      	ldr	r4, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									st_clust(dir, dw);
									djo.fs->wflag = 1;
   1366e:	2201      	movs	r2, #1
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292 (discriminator 6)
	ST_WORD(dir+DIR_FstClusLO, cl);
   13670:	f8a3 406e 	strh.w	r4, [r3, #110]	; 0x6e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293 (discriminator 6)
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13674:	0c24      	lsrs	r4, r4, #16
   13676:	f8a3 4068 	strh.w	r4, [r3, #104]	; 0x68
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									djo.fs->wflag = 1;
   1367a:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3726
								}
							}
						}
						if (res == FR_OK) {
							res = dir_remove(&djo);		/* Remove old entry */
   1367c:	a80b      	add	r0, sp, #44	; 0x2c
   1367e:	f7ff f979 	bl	12974 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3727
							if (res == FR_OK)
   13682:	4604      	mov	r4, r0
   13684:	b918      	cbnz	r0, 1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3728
								res = sync_fs(djo.fs);
   13686:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13688:	f7fe fb10 	bl	11cac <sync_fs>
   1368c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3738
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(djo.fs, res);
   1368e:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13690:	4621      	mov	r1, r4
   13692:	f7fe fcb0 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3739
}
   13696:	4620      	mov	r0, r4
   13698:	b05e      	add	sp, #376	; 0x178
   1369a:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3694
				res = FR_NO_FILE;
   1369c:	2404      	movs	r4, #4
   1369e:	e7f6      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3701
					res = FR_INVALID_DRIVE;
   136a0:	240b      	movs	r4, #11
   136a2:	e7f4      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   136a4:	2408      	movs	r4, #8
   136a6:	e7f2      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3714
								res = FR_INT_ERR;
   136a8:	2402      	movs	r4, #2
   136aa:	e7f0      	b.n	1368e <f_rename+0x100>

000136ac <f_mkfs>:
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   136ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136b0:	b089      	sub	sp, #36	; 0x24
   136b2:	ab08      	add	r3, sp, #32
   136b4:	f843 0d0c 	str.w	r0, [r3, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   136b8:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   136ba:	460e      	mov	r6, r1
   136bc:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   136be:	f7fe fa4d 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   136c2:	2800      	cmp	r0, #0
   136c4:	f2c0 81f7 	blt.w	13ab6 <f_mkfs+0x40a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   136c8:	2e01      	cmp	r6, #1
   136ca:	f200 81f6 	bhi.w	13aba <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   136ce:	1e6b      	subs	r3, r5, #1
   136d0:	402b      	ands	r3, r5
   136d2:	9302      	str	r3, [sp, #8]
   136d4:	f040 81f1 	bne.w	13aba <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   136d8:	4b50      	ldr	r3, [pc, #320]	; (1381c <f_mkfs+0x170>)
   136da:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   136de:	2c00      	cmp	r4, #0
   136e0:	f000 81ed 	beq.w	13abe <f_mkfs+0x412>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   136e4:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   136e8:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   136ea:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   136ec:	4638      	mov	r0, r7
   136ee:	f000 fe41 	bl	14374 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   136f2:	07c2      	lsls	r2, r0, #31
   136f4:	f100 81e5 	bmi.w	13ac2 <f_mkfs+0x416>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   136f8:	0743      	lsls	r3, r0, #29
   136fa:	f100 81e4 	bmi.w	13ac6 <f_mkfs+0x41a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   136fe:	aa07      	add	r2, sp, #28
   13700:	2101      	movs	r1, #1
   13702:	4638      	mov	r0, r7
   13704:	f000 fe89 	bl	1441a <disk_ioctl>
   13708:	b118      	cbz	r0, 13712 <f_mkfs+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   1370a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   1370c:	b009      	add	sp, #36	; 0x24
   1370e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   13712:	9907      	ldr	r1, [sp, #28]
   13714:	297f      	cmp	r1, #127	; 0x7f
   13716:	d9f8      	bls.n	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   13718:	2e00      	cmp	r6, #0
   1371a:	bf14      	ite	ne
   1371c:	f04f 0a00 	movne.w	sl, #0
   13720:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   13724:	eba1 010a 	sub.w	r1, r1, sl
   13728:	9107      	str	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   1372a:	b95d      	cbnz	r5, 13744 <f_mkfs+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   1372c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   13730:	fbb1 f3f3 	udiv	r3, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   13734:	483a      	ldr	r0, [pc, #232]	; (13820 <f_mkfs+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   13736:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   1373a:	4293      	cmp	r3, r2
   1373c:	d318      	bcc.n	13770 <f_mkfs+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1373e:	4b39      	ldr	r3, [pc, #228]	; (13824 <f_mkfs+0x178>)
   13740:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13744:	0a6d      	lsrs	r5, r5, #9
   13746:	d015      	beq.n	13774 <f_mkfs+0xc8>
   13748:	2d80      	cmp	r5, #128	; 0x80
   1374a:	bf28      	it	cs
   1374c:	2580      	movcs	r5, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   1374e:	fbb1 f3f5 	udiv	r3, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   13752:	f640 72f5 	movw	r2, #4085	; 0xff5
   13756:	4293      	cmp	r3, r2
   13758:	f240 81f8 	bls.w	13b4c <f_mkfs+0x4a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   1375c:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   13760:	4293      	cmp	r3, r2
   13762:	f200 81b2 	bhi.w	13aca <f_mkfs+0x41e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13766:	3302      	adds	r3, #2
   13768:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1376a:	f04f 0802 	mov.w	r8, #2
   1376e:	e1f4      	b.n	13b5a <f_mkfs+0x4ae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   13770:	3501      	adds	r5, #1
   13772:	e7e0      	b.n	13736 <f_mkfs+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13774:	2501      	movs	r5, #1
   13776:	e7ea      	b.n	1374e <f_mkfs+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   13778:	aa06      	add	r2, sp, #24
   1377a:	2103      	movs	r1, #3
   1377c:	4638      	mov	r0, r7
   1377e:	f000 fe4c 	bl	1441a <disk_ioctl>
   13782:	b920      	cbnz	r0, 1378e <f_mkfs+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   13784:	9b06      	ldr	r3, [sp, #24]
   13786:	3b01      	subs	r3, #1
   13788:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   1378c:	d301      	bcc.n	13792 <f_mkfs+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   1378e:	2301      	movs	r3, #1
   13790:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   13792:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   13794:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   13798:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1379c:	444b      	add	r3, r9
   1379e:	f1c2 0200 	rsb	r2, r2, #0
   137a2:	ea03 0302 	and.w	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   137a6:	eba3 0309 	sub.w	r3, r3, r9
   137aa:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   137ac:	d122      	bne.n	137f4 <f_mkfs+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   137ae:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   137b0:	449b      	add	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   137b2:	441a      	add	r2, r3
   137b4:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   137b6:	9a07      	ldr	r2, [sp, #28]
   137b8:	9900      	ldr	r1, [sp, #0]
   137ba:	eba2 030b 	sub.w	r3, r2, fp
   137be:	1a5b      	subs	r3, r3, r1
   137c0:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   137c2:	f1b8 0f02 	cmp.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   137c6:	eba3 0301 	sub.w	r3, r3, r1
   137ca:	fbb3 f3f5 	udiv	r3, r3, r5
   137ce:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   137d0:	d114      	bne.n	137fc <f_mkfs+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   137d2:	f640 73f5 	movw	r3, #4085	; 0xff5
   137d6:	9904      	ldr	r1, [sp, #16]
   137d8:	4299      	cmp	r1, r3
   137da:	f240 81d5 	bls.w	13b88 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   137de:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   137e2:	bf34      	ite	cc
   137e4:	f04f 0904 	movcc.w	r9, #4
   137e8:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   137ec:	b34e      	cbz	r6, 13842 <f_mkfs+0x196>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   137ee:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   137f2:	e05d      	b.n	138b0 <f_mkfs+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   137f4:	9a00      	ldr	r2, [sp, #0]
   137f6:	441a      	add	r2, r3
   137f8:	9200      	str	r2, [sp, #0]
   137fa:	e7dc      	b.n	137b6 <f_mkfs+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   137fc:	f1b8 0f03 	cmp.w	r8, #3
   13800:	d112      	bne.n	13828 <f_mkfs+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   13802:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   13806:	9a04      	ldr	r2, [sp, #16]
   13808:	429a      	cmp	r2, r3
   1380a:	f240 81bd 	bls.w	13b88 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1380e:	2e00      	cmp	r6, #0
   13810:	f040 8167 	bne.w	13ae2 <f_mkfs+0x436>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   13814:	f04f 090c 	mov.w	r9, #12
   13818:	e013      	b.n	13842 <f_mkfs+0x196>
   1381a:	bf00      	nop
   1381c:	2007c45c 	.word	0x2007c45c
   13820:	00024b08 	.word	0x00024b08
   13824:	00024aae 	.word	0x00024aae
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   13828:	f1b8 0f01 	cmp.w	r8, #1
   1382c:	d1d7      	bne.n	137de <f_mkfs+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1382e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   13832:	bf34      	ite	cc
   13834:	f04f 0901 	movcc.w	r9, #1
   13838:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   1383c:	2e00      	cmp	r6, #0
   1383e:	f040 816b 	bne.w	13b18 <f_mkfs+0x46c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   13842:	f104 0634 	add.w	r6, r4, #52	; 0x34
   13846:	f44f 7200 	mov.w	r2, #512	; 0x200
   1384a:	2100      	movs	r1, #0
   1384c:	4630      	mov	r0, r6
   1384e:	f7fe f96f 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   13852:	21fe      	movs	r1, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13854:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   13858:	f8dd e01c 	ldr.w	lr, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   1385c:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13860:	eb0a 010e 	add.w	r1, sl, lr
   13864:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   13868:	0888      	lsrs	r0, r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1386a:	9106      	str	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   1386c:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13870:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   13872:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   13874:	2200      	movs	r2, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13876:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1387a:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   1387e:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   13882:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13886:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   1388a:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   1388e:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   13892:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   13896:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1389a:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   1389e:	4631      	mov	r1, r6
   138a0:	4638      	mov	r0, r7
   138a2:	f000 fd9e 	bl	143e2 <disk_write>
   138a6:	2800      	cmp	r0, #0
   138a8:	f47f af2f 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   138ac:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   138b0:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   138b4:	f44f 7200 	mov.w	r2, #512	; 0x200
   138b8:	2100      	movs	r1, #0
   138ba:	4630      	mov	r0, r6
   138bc:	f7fe f938 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   138c0:	220b      	movs	r2, #11
   138c2:	49b2      	ldr	r1, [pc, #712]	; (13b8c <f_mkfs+0x4e0>)
   138c4:	4630      	mov	r0, r6
   138c6:	f7fe f917 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   138ca:	f44f 7300 	mov.w	r3, #512	; 0x200
   138ce:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   138d2:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138d4:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   138d8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138dc:	9b02      	ldr	r3, [sp, #8]
   138de:	bf18      	it	ne
   138e0:	f44f 7300 	movne.w	r3, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   138e4:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   138e8:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138ec:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   138ee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   138f2:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   138f6:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   138fa:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   138fc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   13900:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   13904:	bf34      	ite	cc
   13906:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   1390a:	6563      	strcs	r3, [r4, #84]	; 0x54
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1390c:	233f      	movs	r3, #63	; 0x3f
   1390e:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   13912:	23ff      	movs	r3, #255	; 0xff
   13914:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13918:	f001 f81e 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   1391c:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13920:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   13922:	f040 809c 	bne.w	13a5e <f_mkfs+0x3b2>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13926:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13928:	2213      	movs	r2, #19
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1392a:	65a3      	str	r3, [r4, #88]	; 0x58
   1392c:	2302      	movs	r3, #2
   1392e:	6623      	str	r3, [r4, #96]	; 0x60
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13930:	2301      	movs	r3, #1
   13932:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   13936:	2306      	movs	r3, #6
   13938:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   1393c:	2380      	movs	r3, #128	; 0x80
   1393e:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13942:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13944:	4992      	ldr	r1, [pc, #584]	; (13b90 <f_mkfs+0x4e4>)
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13946:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1394a:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   1394e:	f104 007b 	add.w	r0, r4, #123	; 0x7b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13952:	f7fe f8d1 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13956:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   1395a:	4652      	mov	r2, sl
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1395c:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   13960:	4631      	mov	r1, r6
   13962:	2301      	movs	r3, #1
   13964:	4638      	mov	r0, r7
   13966:	f000 fd3c 	bl	143e2 <disk_write>
   1396a:	2800      	cmp	r0, #0
   1396c:	f47f aecd 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   13970:	f1b8 0f03 	cmp.w	r8, #3
   13974:	d106      	bne.n	13984 <f_mkfs+0x2d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   13976:	2301      	movs	r3, #1
   13978:	f10a 0206 	add.w	r2, sl, #6
   1397c:	4631      	mov	r1, r6
   1397e:	4638      	mov	r0, r7
   13980:	f000 fd2f 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   13984:	f44f 7200 	mov.w	r2, #512	; 0x200
   13988:	2100      	movs	r1, #0
   1398a:	4630      	mov	r0, r6
   1398c:	f7fe f8d0 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   13990:	f1b8 0f03 	cmp.w	r8, #3
   13994:	d074      	beq.n	13a80 <f_mkfs+0x3d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   13996:	f1b8 0f01 	cmp.w	r8, #1
   1399a:	4b7e      	ldr	r3, [pc, #504]	; (13b94 <f_mkfs+0x4e8>)
   1399c:	bf18      	it	ne
   1399e:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   139a2:	ea43 0309 	orr.w	r3, r3, r9
   139a6:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   139a8:	6363      	str	r3, [r4, #52]	; 0x34
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   139aa:	9b01      	ldr	r3, [sp, #4]
   139ac:	4631      	mov	r1, r6
   139ae:	f103 0901 	add.w	r9, r3, #1
   139b2:	9a01      	ldr	r2, [sp, #4]
   139b4:	2301      	movs	r3, #1
   139b6:	4638      	mov	r0, r7
   139b8:	f000 fd13 	bl	143e2 <disk_write>
   139bc:	4601      	mov	r1, r0
   139be:	2800      	cmp	r0, #0
   139c0:	f47f aea3 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   139c4:	f44f 7200 	mov.w	r2, #512	; 0x200
   139c8:	4630      	mov	r0, r6
   139ca:	f7fe f8b1 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   139ce:	2301      	movs	r3, #1
   139d0:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   139d2:	9b06      	ldr	r3, [sp, #24]
   139d4:	9a00      	ldr	r2, [sp, #0]
   139d6:	429a      	cmp	r2, r3
   139d8:	d85d      	bhi.n	13a96 <f_mkfs+0x3ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   139da:	9b03      	ldr	r3, [sp, #12]
   139dc:	464a      	mov	r2, r9
   139de:	f1b8 0f03 	cmp.w	r8, #3
   139e2:	bf18      	it	ne
   139e4:	461d      	movne	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   139e6:	444d      	add	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   139e8:	2301      	movs	r3, #1
   139ea:	4631      	mov	r1, r6
   139ec:	4638      	mov	r0, r7
   139ee:	f102 0b01 	add.w	fp, r2, #1
   139f2:	f000 fcf6 	bl	143e2 <disk_write>
   139f6:	2800      	cmp	r0, #0
   139f8:	f47f ae87 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   139fc:	45ab      	cmp	fp, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   139fe:	465a      	mov	r2, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   13a00:	d1f2      	bne.n	139e8 <f_mkfs+0x33c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   13a02:	f1b8 0f03 	cmp.w	r8, #3
   13a06:	d121      	bne.n	13a4c <f_mkfs+0x3a0>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a08:	4b63      	ldr	r3, [pc, #396]	; (13b98 <f_mkfs+0x4ec>)
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a0a:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a0c:	6363      	str	r3, [r4, #52]	; 0x34
   13a0e:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   13a12:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   13a16:	3320      	adds	r3, #32
   13a18:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13a1c:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a1e:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13a20:	3b01      	subs	r3, #1
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a22:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   13a26:	2302      	movs	r3, #2
   13a28:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13a2c:	f64a 2355 	movw	r3, #43605	; 0xaa55
   13a30:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a34:	2301      	movs	r3, #1
   13a36:	eb0a 0203 	add.w	r2, sl, r3
   13a3a:	f000 fcd2 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   13a3e:	2301      	movs	r3, #1
   13a40:	f10a 0207 	add.w	r2, sl, #7
   13a44:	4631      	mov	r1, r6
   13a46:	4638      	mov	r0, r7
   13a48:	f000 fccb 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   13a4c:	2200      	movs	r2, #0
   13a4e:	4638      	mov	r0, r7
   13a50:	4611      	mov	r1, r2
   13a52:	f000 fce2 	bl	1441a <disk_ioctl>
   13a56:	3000      	adds	r0, #0
   13a58:	bf18      	it	ne
   13a5a:	2001      	movne	r0, #1
   13a5c:	e656      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   13a5e:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13a62:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   13a66:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   13a6a:	2380      	movs	r3, #128	; 0x80
   13a6c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13a70:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13a72:	2213      	movs	r2, #19
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13a74:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13a78:	4948      	ldr	r1, [pc, #288]	; (13b9c <f_mkfs+0x4f0>)
   13a7a:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   13a7e:	e768      	b.n	13952 <f_mkfs+0x2a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   13a80:	f069 03ff 	orn	r3, r9, #255	; 0xff
   13a84:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a86:	6363      	str	r3, [r4, #52]	; 0x34
   13a88:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13a8c:	63a3      	str	r3, [r4, #56]	; 0x38
   13a8e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   13a92:	63e3      	str	r3, [r4, #60]	; 0x3c
   13a94:	e789      	b.n	139aa <f_mkfs+0x2fe>
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   13a96:	2301      	movs	r3, #1
   13a98:	464a      	mov	r2, r9
   13a9a:	4631      	mov	r1, r6
   13a9c:	4638      	mov	r0, r7
   13a9e:	f109 0b01 	add.w	fp, r9, #1
   13aa2:	f000 fc9e 	bl	143e2 <disk_write>
   13aa6:	2800      	cmp	r0, #0
   13aa8:	f47f ae2f 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13aac:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   13aae:	46d9      	mov	r9, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13ab0:	3301      	adds	r3, #1
   13ab2:	9306      	str	r3, [sp, #24]
   13ab4:	e78d      	b.n	139d2 <f_mkfs+0x326>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   13ab6:	200b      	movs	r0, #11
   13ab8:	e628      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13aba:	2013      	movs	r0, #19
   13abc:	e626      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   13abe:	200c      	movs	r0, #12
   13ac0:	e624      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   13ac2:	2003      	movs	r0, #3
   13ac4:	e622      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13ac6:	200a      	movs	r0, #10
   13ac8:	e620      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   13aca:	009b      	lsls	r3, r3, #2
   13acc:	f203 2307 	addw	r3, r3, #519	; 0x207
   13ad0:	0a5b      	lsrs	r3, r3, #9
   13ad2:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13ad4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13ad6:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13ada:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   13adc:	f04f 0b20 	mov.w	fp, #32
   13ae0:	e043      	b.n	13b6a <f_mkfs+0x4be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13ae2:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13ae6:	f44f 7200 	mov.w	r2, #512	; 0x200
   13aea:	2100      	movs	r1, #0
   13aec:	4630      	mov	r0, r6
   13aee:	f7fe f81f 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13af2:	220b      	movs	r2, #11
   13af4:	4925      	ldr	r1, [pc, #148]	; (13b8c <f_mkfs+0x4e0>)
   13af6:	4630      	mov	r0, r6
   13af8:	f7fd fffe 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13afc:	f44f 7300 	mov.w	r3, #512	; 0x200
   13b00:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b04:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13b06:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13b0a:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b0e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13b12:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13b16:	e6ea      	b.n	138ee <f_mkfs+0x242>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13b18:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13b1c:	f44f 7200 	mov.w	r2, #512	; 0x200
   13b20:	2100      	movs	r1, #0
   13b22:	4630      	mov	r0, r6
   13b24:	f7fe f804 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13b28:	220b      	movs	r2, #11
   13b2a:	4918      	ldr	r1, [pc, #96]	; (13b8c <f_mkfs+0x4e0>)
   13b2c:	4630      	mov	r0, r6
   13b2e:	f7fd ffe3 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13b32:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13b36:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13b3a:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13b3e:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b42:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13b46:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13b4a:	e6cf      	b.n	138ec <f_mkfs+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   13b4c:	f04f 0801 	mov.w	r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13b50:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   13b54:	3301      	adds	r3, #1
   13b56:	085b      	lsrs	r3, r3, #1
   13b58:	3303      	adds	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   13b5a:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   13b5e:	0a5b      	lsrs	r3, r3, #9
   13b60:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13b62:	2320      	movs	r3, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   13b64:	f04f 0b01 	mov.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13b68:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   13b6a:	eb0b 030a 	add.w	r3, fp, sl
   13b6e:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   13b70:	9a03      	ldr	r2, [sp, #12]
   13b72:	9b00      	ldr	r3, [sp, #0]
   13b74:	eb03 0902 	add.w	r9, r3, r2
   13b78:	9b01      	ldr	r3, [sp, #4]
   13b7a:	4499      	add	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   13b7c:	eba5 030a 	sub.w	r3, r5, sl
   13b80:	444b      	add	r3, r9
   13b82:	4299      	cmp	r1, r3
   13b84:	f4bf adf8 	bcs.w	13778 <f_mkfs+0xcc>
   13b88:	200e      	movs	r0, #14
   13b8a:	e5bf      	b.n	1370c <f_mkfs+0x60>
   13b8c:	00024ac4 	.word	0x00024ac4
   13b90:	00024ad0 	.word	0x00024ad0
   13b94:	00ffff00 	.word	0x00ffff00
   13b98:	41615252 	.word	0x41615252
   13b9c:	00024ae4 	.word	0x00024ae4

00013ba0 <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   13ba0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13ba2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   13ba4:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13ba6:	f004 fd9d 	bl	186e4 <xQueueCreateMutex>
   13baa:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   13bac:	3000      	adds	r0, #0
   13bae:	bf18      	it	ne
   13bb0:	2001      	movne	r0, #1
   13bb2:	bd10      	pop	{r4, pc}

00013bb4 <ff_del_syncobj>:
ff_del_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   13bb4:	2001      	movs	r0, #1
   13bb6:	4770      	bx	lr

00013bb8 <ff_req_grant>:
ff_req_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   13bb8:	b510      	push	{r4, lr}
   13bba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13bbc:	f005 fb5c 	bl	19278 <xTaskGetSchedulerState>
   13bc0:	2802      	cmp	r0, #2
   13bc2:	d10a      	bne.n	13bda <ff_req_grant+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   13bc4:	2300      	movs	r3, #0
   13bc6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13bca:	4619      	mov	r1, r3
   13bcc:	4620      	mov	r0, r4
   13bce:	f004 fe0f 	bl	187f0 <xQueueGenericReceive>
   13bd2:	1e43      	subs	r3, r0, #1
   13bd4:	4258      	negs	r0, r3
   13bd6:	4158      	adcs	r0, r3
   13bd8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   13bda:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   13bdc:	bd10      	pop	{r4, pc}

00013bde <ff_rel_grant>:
ff_rel_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   13bde:	b510      	push	{r4, lr}
   13be0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13be2:	f005 fb49 	bl	19278 <xTaskGetSchedulerState>
   13be6:	2802      	cmp	r0, #2
   13be8:	d107      	bne.n	13bfa <ff_rel_grant+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13bea:	2300      	movs	r3, #0
   13bec:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   13bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13bf2:	461a      	mov	r2, r3
   13bf4:	4619      	mov	r1, r3
   13bf6:	f004 bcf3 	b.w	185e0 <xQueueGenericSend>
   13bfa:	bd10      	pop	{r4, pc}

00013bfc <ff_convert>:
ff_convert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   13bfc:	287f      	cmp	r0, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   13bfe:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   13c00:	d916      	bls.n	13c30 <ff_convert+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   13c02:	b131      	cbz	r1, 13c12 <ff_convert+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13c04:	28ff      	cmp	r0, #255	; 0xff
   13c06:	d812      	bhi.n	13c2e <ff_convert+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   13c08:	4b0a      	ldr	r3, [pc, #40]	; (13c34 <ff_convert+0x38>)
   13c0a:	3880      	subs	r0, #128	; 0x80
   13c0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   13c10:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   13c12:	4a08      	ldr	r2, [pc, #32]	; (13c34 <ff_convert+0x38>)
   13c14:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   13c18:	b28b      	uxth	r3, r1
   13c1a:	4284      	cmp	r4, r0
   13c1c:	d003      	beq.n	13c26 <ff_convert+0x2a>
   13c1e:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   13c20:	2980      	cmp	r1, #128	; 0x80
   13c22:	d1f7      	bne.n	13c14 <ff_convert+0x18>
   13c24:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   13c26:	f103 0080 	add.w	r0, r3, #128	; 0x80
   13c2a:	b2c0      	uxtb	r0, r0
   13c2c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13c2e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   13c30:	bd10      	pop	{r4, pc}
   13c32:	bf00      	nop
   13c34:	00024b1e 	.word	0x00024b1e

00013c38 <ff_wtoupper>:
ff_wtoupper():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13c38:	2300      	movs	r3, #0
   13c3a:	4906      	ldr	r1, [pc, #24]	; (13c54 <ff_wtoupper+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   13c3c:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   13c40:	b122      	cbz	r2, 13c4c <ff_wtoupper+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   13c42:	4282      	cmp	r2, r0
   13c44:	d103      	bne.n	13c4e <ff_wtoupper+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   13c46:	4a04      	ldr	r2, [pc, #16]	; (13c58 <ff_wtoupper+0x20>)
   13c48:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   13c4c:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13c4e:	3301      	adds	r3, #1
   13c50:	e7f4      	b.n	13c3c <ff_wtoupper+0x4>
   13c52:	bf00      	nop
   13c54:	00024c1e 	.word	0x00024c1e
   13c58:	00024dfe 	.word	0x00024dfe

00013c5c <sys_get_uptime_ms>:
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   13c5c:	b508      	push	{r3, lr}
   13c5e:	f7fc fc1d 	bl	1049c <sys_get_uptime_us>
   13c62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13c66:	2300      	movs	r3, #0
   13c68:	f009 fda6 	bl	1d7b8 <__aeabi_uldivmod>
   13c6c:	bd08      	pop	{r3, pc}
   13c6e:	Address 0x0000000000013c6e is out of bounds.


00013c70 <ssp1_set_max_clock>:
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   13c70:	b510      	push	{r4, lr}
   13c72:	4604      	mov	r4, r0
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   13c74:	f7fc fda0 	bl	107b8 <sys_get_cpu_clock>
   13c78:	4b07      	ldr	r3, [pc, #28]	; (13c98 <ssp1_set_max_clock+0x28>)
   13c7a:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   13c7e:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13c80:	fbb0 f2f3 	udiv	r2, r0, r3
   13c84:	4294      	cmp	r4, r2
   13c86:	d302      	bcc.n	13c8e <ssp1_set_max_clock+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   13c88:	4a04      	ldr	r2, [pc, #16]	; (13c9c <ssp1_set_max_clock+0x2c>)
   13c8a:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   13c8c:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13c8e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   13c92:	d0f9      	beq.n	13c88 <ssp1_set_max_clock+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   13c94:	3302      	adds	r3, #2
   13c96:	e7f3      	b.n	13c80 <ssp1_set_max_clock+0x10>
   13c98:	000f4240 	.word	0x000f4240
   13c9c:	40030000 	.word	0x40030000

00013ca0 <ssp1_exchange_byte>:
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13ca0:	4b03      	ldr	r3, [pc, #12]	; (13cb0 <ssp1_exchange_byte+0x10>)
   13ca2:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13ca4:	68da      	ldr	r2, [r3, #12]
   13ca6:	06d2      	lsls	r2, r2, #27
   13ca8:	d4fc      	bmi.n	13ca4 <ssp1_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13caa:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   13cac:	b2c0      	uxtb	r0, r0
   13cae:	4770      	bx	lr
   13cb0:	40030000 	.word	0x40030000

00013cb4 <wait_ready>:
wait_ready():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   13cb4:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   13cb6:	f7ff ffd1 	bl	13c5c <sys_get_uptime_ms>
   13cba:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   13cbe:	20ff      	movs	r0, #255	; 0xff
   13cc0:	f7ff ffee 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13cc4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13cc6:	20ff      	movs	r0, #255	; 0xff
   13cc8:	f7ff ffea 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13ccc:	28ff      	cmp	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13cce:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13cd0:	d005      	beq.n	13cde <wait_ready+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   13cd2:	f7ff ffc3 	bl	13c5c <sys_get_uptime_ms>
   13cd6:	42a9      	cmp	r1, r5
   13cd8:	bf08      	it	eq
   13cda:	42a0      	cmpeq	r0, r4
   13cdc:	d3f3      	bcc.n	13cc6 <wait_ready+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   13cde:	4630      	mov	r0, r6
   13ce0:	bd70      	pop	{r4, r5, r6, pc}
   13ce2:	Address 0x0000000000013ce2 is out of bounds.


00013ce4 <power_off>:
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   13ce4:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13ce6:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   13cea:	4c05      	ldr	r4, [pc, #20]	; (13d00 <power_off+0x1c>)
   13cec:	61e5      	str	r5, [r4, #28]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   13cee:	f7ff ffe1 	bl	13cb4 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   13cf2:	4a04      	ldr	r2, [pc, #16]	; (13d04 <power_off+0x20>)
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13cf4:	61a5      	str	r5, [r4, #24]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   13cf6:	7813      	ldrb	r3, [r2, #0]
   13cf8:	f043 0301 	orr.w	r3, r3, #1
   13cfc:	7013      	strb	r3, [r2, #0]
   13cfe:	bd38      	pop	{r3, r4, r5, pc}
   13d00:	2009c020 	.word	0x2009c020
   13d04:	2007c095 	.word	0x2007c095

00013d08 <rcvr_datablock>:
rcvr_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   13d08:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   13d0c:	4606      	mov	r6, r0
   13d0e:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   13d10:	f7ff ffa4 	bl	13c5c <sys_get_uptime_ms>
   13d14:	3064      	adds	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13d16:	4680      	mov	r8, r0
   13d18:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   13d1c:	20ff      	movs	r0, #255	; 0xff
   13d1e:	f7ff ffbf 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13d22:	28ff      	cmp	r0, #255	; 0xff
   13d24:	d108      	bne.n	13d38 <rcvr_datablock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   13d26:	f7ff ff99 	bl	13c5c <sys_get_uptime_ms>
   13d2a:	4549      	cmp	r1, r9
   13d2c:	bf08      	it	eq
   13d2e:	4540      	cmpeq	r0, r8
   13d30:	d3f4      	bcc.n	13d1c <rcvr_datablock+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   13d32:	2000      	movs	r0, #0
   13d34:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   13d38:	28fe      	cmp	r0, #254	; 0xfe
   13d3a:	d1fa      	bne.n	13d32 <rcvr_datablock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13d3c:	2d10      	cmp	r5, #16
   13d3e:	d90e      	bls.n	13d5e <rcvr_datablock+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   13d40:	2200      	movs	r2, #0
   13d42:	f44f 7100 	mov.w	r1, #512	; 0x200
   13d46:	4630      	mov	r0, r6
   13d48:	f004 f84a 	bl	17de0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   13d4c:	20ff      	movs	r0, #255	; 0xff
   13d4e:	f7ff ffa7 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   13d52:	20ff      	movs	r0, #255	; 0xff
   13d54:	f7ff ffa4 	bl	13ca0 <ssp1_exchange_byte>
   13d58:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   13d5a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   13d5e:	1d34      	adds	r4, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13d60:	3504      	adds	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   13d62:	20ff      	movs	r0, #255	; 0xff
   13d64:	f7ff ff9c 	bl	13ca0 <ssp1_exchange_byte>
   13d68:	f804 0c04 	strb.w	r0, [r4, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   13d6c:	20ff      	movs	r0, #255	; 0xff
   13d6e:	f7ff ff97 	bl	13ca0 <ssp1_exchange_byte>
   13d72:	f804 0c03 	strb.w	r0, [r4, #-3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   13d76:	20ff      	movs	r0, #255	; 0xff
   13d78:	f7ff ff92 	bl	13ca0 <ssp1_exchange_byte>
   13d7c:	f804 0c02 	strb.w	r0, [r4, #-2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   13d80:	20ff      	movs	r0, #255	; 0xff
   13d82:	f7ff ff8d 	bl	13ca0 <ssp1_exchange_byte>
   13d86:	3404      	adds	r4, #4
   13d88:	f804 0c05 	strb.w	r0, [r4, #-5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13d8c:	1b2b      	subs	r3, r5, r4
   13d8e:	42de      	cmn	r6, r3
   13d90:	d1e7      	bne.n	13d62 <rcvr_datablock+0x5a>
   13d92:	e7db      	b.n	13d4c <rcvr_datablock+0x44>

00013d94 <xmit_datablock>:
xmit_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   13d94:	b570      	push	{r4, r5, r6, lr}
   13d96:	4606      	mov	r6, r0
   13d98:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   13d9a:	f7ff ff8b 	bl	13cb4 <wait_ready>
   13d9e:	28ff      	cmp	r0, #255	; 0xff
   13da0:	4604      	mov	r4, r0
   13da2:	d119      	bne.n	13dd8 <xmit_datablock+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   13da4:	4628      	mov	r0, r5
   13da6:	f7ff ff7b 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   13daa:	2dfd      	cmp	r5, #253	; 0xfd
   13dac:	d016      	beq.n	13ddc <xmit_datablock+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   13dae:	4622      	mov	r2, r4
   13db0:	f44f 7100 	mov.w	r1, #512	; 0x200
   13db4:	4630      	mov	r0, r6
   13db6:	f004 f813 	bl	17de0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   13dba:	4620      	mov	r0, r4
   13dbc:	f7ff ff70 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   13dc0:	4620      	mov	r0, r4
   13dc2:	f7ff ff6d 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   13dc6:	4620      	mov	r0, r4
   13dc8:	f7ff ff6a 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13dcc:	f000 001f 	and.w	r0, r0, #31
   13dd0:	1f43      	subs	r3, r0, #5
   13dd2:	4258      	negs	r0, r3
   13dd4:	4158      	adcs	r0, r3
   13dd6:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   13dd8:	2000      	movs	r0, #0
   13dda:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   13ddc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   13dde:	bd70      	pop	{r4, r5, r6, pc}

00013de0 <send_cmd>:
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   13de0:	0602      	lsls	r2, r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   13de2:	b538      	push	{r3, r4, r5, lr}
   13de4:	4604      	mov	r4, r0
   13de6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   13de8:	d507      	bpl.n	13dfa <send_cmd+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   13dea:	2100      	movs	r1, #0
   13dec:	2077      	movs	r0, #119	; 0x77
   13dee:	f7ff fff7 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   13df2:	2801      	cmp	r0, #1
   13df4:	d836      	bhi.n	13e64 <send_cmd+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   13df6:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13dfa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13dfe:	4b1a      	ldr	r3, [pc, #104]	; (13e68 <send_cmd+0x88>)
   13e00:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13e02:	61da      	str	r2, [r3, #28]
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   13e04:	f7ff ff56 	bl	13cb4 <wait_ready>
   13e08:	28ff      	cmp	r0, #255	; 0xff
   13e0a:	d12a      	bne.n	13e62 <send_cmd+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   13e0c:	4620      	mov	r0, r4
   13e0e:	f7ff ff47 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   13e12:	0e28      	lsrs	r0, r5, #24
   13e14:	f7ff ff44 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   13e18:	f3c5 4007 	ubfx	r0, r5, #16, #8
   13e1c:	f7ff ff40 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   13e20:	f3c5 2007 	ubfx	r0, r5, #8, #8
   13e24:	f7ff ff3c 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   13e28:	b2e8      	uxtb	r0, r5
   13e2a:	f7ff ff39 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   13e2e:	2c40      	cmp	r4, #64	; 0x40
   13e30:	d015      	beq.n	13e5e <send_cmd+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   13e32:	2c48      	cmp	r4, #72	; 0x48
   13e34:	bf14      	ite	ne
   13e36:	2001      	movne	r0, #1
   13e38:	2087      	moveq	r0, #135	; 0x87
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   13e3a:	f7ff ff31 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   13e3e:	2c4c      	cmp	r4, #76	; 0x4c
   13e40:	d102      	bne.n	13e48 <send_cmd+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   13e42:	20ff      	movs	r0, #255	; 0xff
   13e44:	f7ff ff2c 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   13e48:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   13e4a:	20ff      	movs	r0, #255	; 0xff
   13e4c:	f7ff ff28 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   13e50:	0603      	lsls	r3, r0, #24
   13e52:	d507      	bpl.n	13e64 <send_cmd+0x84>
   13e54:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   13e56:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   13e5a:	d1f6      	bne.n	13e4a <send_cmd+0x6a>
   13e5c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   13e5e:	2095      	movs	r0, #149	; 0x95
   13e60:	e7eb      	b.n	13e3a <send_cmd+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   13e62:	20ff      	movs	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   13e64:	bd38      	pop	{r3, r4, r5, pc}
   13e66:	bf00      	nop
   13e68:	2009c020 	.word	0x2009c020

00013e6c <sd_update_card_status>:
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   13e6c:	4a06      	ldr	r2, [pc, #24]	; (13e88 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13e6e:	4907      	ldr	r1, [pc, #28]	; (13e8c <sd_update_card_status+0x20>)
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13e70:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13e72:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13e74:	b2db      	uxtb	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   13e76:	0149      	lsls	r1, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   13e78:	bf54      	ite	pl
   13e7a:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   13e7e:	f043 0303 	orrmi.w	r3, r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   13e82:	7013      	strb	r3, [r2, #0]
   13e84:	4770      	bx	lr
   13e86:	bf00      	nop
   13e88:	2007c095 	.word	0x2007c095
   13e8c:	2009c020 	.word	0x2009c020

00013e90 <sd_initialize>:
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   13e90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   13e94:	f7ff ffea 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   13e98:	4b55      	ldr	r3, [pc, #340]	; (13ff0 <sd_initialize+0x160>)
   13e9a:	781a      	ldrb	r2, [r3, #0]
   13e9c:	461e      	mov	r6, r3
   13e9e:	f012 0f02 	tst.w	r2, #2
   13ea2:	d004      	beq.n	13eae <sd_initialize+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   13ea4:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13ea6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   13ea8:	b003      	add	sp, #12
   13eaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   13eae:	2001      	movs	r0, #1
   13eb0:	f7ff fede 	bl	13c70 <ssp1_set_max_clock>
   13eb4:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   13eb6:	20ff      	movs	r0, #255	; 0xff
   13eb8:	3c01      	subs	r4, #1
   13eba:	f7ff fef1 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   13ebe:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   13ec2:	d1f8      	bne.n	13eb6 <sd_initialize+0x26>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13ec4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13ec8:	4f4a      	ldr	r7, [pc, #296]	; (13ff4 <sd_initialize+0x164>)
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   13eca:	4621      	mov	r1, r4
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   13ecc:	61fb      	str	r3, [r7, #28]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   13ece:	2040      	movs	r0, #64	; 0x40
   13ed0:	f7ff ff86 	bl	13de0 <send_cmd>
   13ed4:	2801      	cmp	r0, #1
   13ed6:	4680      	mov	r8, r0
   13ed8:	d013      	beq.n	13f02 <sd_initialize+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   13eda:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   13ede:	4b46      	ldr	r3, [pc, #280]	; (13ff8 <sd_initialize+0x168>)
   13ee0:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13ee4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13ee8:	61bb      	str	r3, [r7, #24]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   13eea:	f1b8 0f00 	cmp.w	r8, #0
   13eee:	d07b      	beq.n	13fe8 <sd_initialize+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13ef0:	7833      	ldrb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13ef2:	2018      	movs	r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13ef4:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   13ef8:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13efa:	f7ff feb9 	bl	13c70 <ssp1_set_max_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13efe:	7830      	ldrb	r0, [r6, #0]
   13f00:	e7d1      	b.n	13ea6 <sd_initialize+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13f02:	f7ff feab 	bl	13c5c <sys_get_uptime_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13f06:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13f0a:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13f0e:	2048      	movs	r0, #72	; 0x48
   13f10:	f7ff ff66 	bl	13de0 <send_cmd>
   13f14:	2801      	cmp	r0, #1
   13f16:	d140      	bne.n	13f9a <sd_initialize+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   13f18:	f10d 0804 	add.w	r8, sp, #4
   13f1c:	20ff      	movs	r0, #255	; 0xff
   13f1e:	f7ff febf 	bl	13ca0 <ssp1_exchange_byte>
   13f22:	f808 0004 	strb.w	r0, [r8, r4]
   13f26:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   13f28:	2c04      	cmp	r4, #4
   13f2a:	d1f7      	bne.n	13f1c <sd_initialize+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   13f2c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   13f30:	2b01      	cmp	r3, #1
   13f32:	d1d2      	bne.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   13f34:	f89d 3007 	ldrb.w	r3, [sp, #7]
   13f38:	2baa      	cmp	r3, #170	; 0xaa
   13f3a:	d1ce      	bne.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   13f3c:	462c      	mov	r4, r5
   13f3e:	2500      	movs	r5, #0
   13f40:	f7ff fe8c 	bl	13c5c <sys_get_uptime_ms>
   13f44:	42a9      	cmp	r1, r5
   13f46:	bf08      	it	eq
   13f48:	42a0      	cmpeq	r0, r4
   13f4a:	d31e      	bcc.n	13f8a <sd_initialize+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   13f4c:	f7ff fe86 	bl	13c5c <sys_get_uptime_ms>
   13f50:	42a9      	cmp	r1, r5
   13f52:	bf08      	it	eq
   13f54:	42a0      	cmpeq	r0, r4
   13f56:	d2c0      	bcs.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   13f58:	2100      	movs	r1, #0
   13f5a:	207a      	movs	r0, #122	; 0x7a
   13f5c:	f7ff ff40 	bl	13de0 <send_cmd>
   13f60:	2800      	cmp	r0, #0
   13f62:	d1ba      	bne.n	13eda <sd_initialize+0x4a>
   13f64:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   13f66:	20ff      	movs	r0, #255	; 0xff
   13f68:	f7ff fe9a 	bl	13ca0 <ssp1_exchange_byte>
   13f6c:	f808 0001 	strb.w	r0, [r8, r1]
   13f70:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   13f72:	2904      	cmp	r1, #4
   13f74:	d1f7      	bne.n	13f66 <sd_initialize+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   13f76:	f89d 3004 	ldrb.w	r3, [sp, #4]
   13f7a:	f013 0f40 	tst.w	r3, #64	; 0x40
   13f7e:	bf14      	ite	ne
   13f80:	f04f 080c 	movne.w	r8, #12
   13f84:	f04f 0804 	moveq.w	r8, #4
   13f88:	e7a9      	b.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   13f8a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   13f8e:	20e9      	movs	r0, #233	; 0xe9
   13f90:	f7ff ff26 	bl	13de0 <send_cmd>
   13f94:	2800      	cmp	r0, #0
   13f96:	d1d3      	bne.n	13f40 <sd_initialize+0xb0>
   13f98:	e7d8      	b.n	13f4c <sd_initialize+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   13f9a:	4621      	mov	r1, r4
   13f9c:	20e9      	movs	r0, #233	; 0xe9
   13f9e:	f7ff ff1f 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   13fa2:	2802      	cmp	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fa4:	462c      	mov	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   13fa6:	bf36      	itet	cc
   13fa8:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   13fac:	f04f 0941 	movcs.w	r9, #65	; 0x41
   13fb0:	f04f 0802 	movcc.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fb4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   13fb6:	f7ff fe51 	bl	13c5c <sys_get_uptime_ms>
   13fba:	42a9      	cmp	r1, r5
   13fbc:	bf08      	it	eq
   13fbe:	42a0      	cmpeq	r0, r4
   13fc0:	d30b      	bcc.n	13fda <sd_initialize+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   13fc2:	f7ff fe4b 	bl	13c5c <sys_get_uptime_ms>
   13fc6:	42a9      	cmp	r1, r5
   13fc8:	bf08      	it	eq
   13fca:	42a0      	cmpeq	r0, r4
   13fcc:	d387      	bcc.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   13fce:	f44f 7100 	mov.w	r1, #512	; 0x200
   13fd2:	2050      	movs	r0, #80	; 0x50
   13fd4:	f7ff ff04 	bl	13de0 <send_cmd>
   13fd8:	e781      	b.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fda:	2100      	movs	r1, #0
   13fdc:	4648      	mov	r0, r9
   13fde:	f7ff feff 	bl	13de0 <send_cmd>
   13fe2:	2800      	cmp	r0, #0
   13fe4:	d1e7      	bne.n	13fb6 <sd_initialize+0x126>
   13fe6:	e7ec      	b.n	13fc2 <sd_initialize+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   13fe8:	f7ff fe7c 	bl	13ce4 <power_off>
   13fec:	e787      	b.n	13efe <sd_initialize+0x6e>
   13fee:	bf00      	nop
   13ff0:	2007c095 	.word	0x2007c095
   13ff4:	2009c020 	.word	0x2009c020
   13ff8:	2007c466 	.word	0x2007c466

00013ffc <sd_status>:
sd_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   13ffc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   13ffe:	f7ff ff35 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   14002:	4b01      	ldr	r3, [pc, #4]	; (14008 <sd_status+0xc>)
   14004:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   14006:	bd08      	pop	{r3, pc}
   14008:	2007c095 	.word	0x2007c095

0001400c <sd_read>:
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   1400c:	b570      	push	{r4, r5, r6, lr}
   1400e:	4614      	mov	r4, r2
   14010:	4606      	mov	r6, r0
   14012:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   14014:	f7ff ff2a 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   14018:	2c00      	cmp	r4, #0
   1401a:	d038      	beq.n	1408e <sd_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   1401c:	4b1e      	ldr	r3, [pc, #120]	; (14098 <sd_read+0x8c>)
   1401e:	781b      	ldrb	r3, [r3, #0]
   14020:	07da      	lsls	r2, r3, #31
   14022:	d436      	bmi.n	14092 <sd_read+0x86>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   14024:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   14028:	4d1c      	ldr	r5, [pc, #112]	; (1409c <sd_read+0x90>)
   1402a:	61ea      	str	r2, [r5, #28]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   1402c:	4a1c      	ldr	r2, [pc, #112]	; (140a0 <sd_read+0x94>)
   1402e:	7812      	ldrb	r2, [r2, #0]
   14030:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   14032:	bf58      	it	pl
   14034:	0240      	lslpl	r0, r0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   14036:	2c01      	cmp	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   14038:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   1403a:	d112      	bne.n	14062 <sd_read+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   1403c:	2051      	movs	r0, #81	; 0x51
   1403e:	f7ff fecf 	bl	13de0 <send_cmd>
   14042:	b938      	cbnz	r0, 14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   14044:	f44f 7100 	mov.w	r1, #512	; 0x200
   14048:	4630      	mov	r0, r6
   1404a:	f7ff fe5d 	bl	13d08 <rcvr_datablock>
   1404e:	fab0 f480 	clz	r4, r0
   14052:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   14054:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   14058:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   1405a:	61ab      	str	r3, [r5, #24]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   1405c:	bf18      	it	ne
   1405e:	2001      	movne	r0, #1
   14060:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   14062:	2052      	movs	r0, #82	; 0x52
   14064:	f7ff febc 	bl	13de0 <send_cmd>
   14068:	2800      	cmp	r0, #0
   1406a:	d1f3      	bne.n	14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   1406c:	f44f 7100 	mov.w	r1, #512	; 0x200
   14070:	4630      	mov	r0, r6
   14072:	f7ff fe49 	bl	13d08 <rcvr_datablock>
   14076:	b128      	cbz	r0, 14084 <sd_read+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   14078:	3c01      	subs	r4, #1
   1407a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   1407e:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   14082:	d1f3      	bne.n	1406c <sd_read+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   14084:	2100      	movs	r1, #0
   14086:	204c      	movs	r0, #76	; 0x4c
   14088:	f7ff feaa 	bl	13de0 <send_cmd>
   1408c:	e7e2      	b.n	14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   1408e:	2004      	movs	r0, #4
   14090:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   14092:	2003      	movs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   14094:	bd70      	pop	{r4, r5, r6, pc}
   14096:	bf00      	nop
   14098:	2007c095 	.word	0x2007c095
   1409c:	2009c020 	.word	0x2009c020
   140a0:	2007c466 	.word	0x2007c466

000140a4 <sd_write>:
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   140a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   140a6:	4614      	mov	r4, r2
   140a8:	4606      	mov	r6, r0
   140aa:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   140ac:	f7ff fede 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   140b0:	2c00      	cmp	r4, #0
   140b2:	d044      	beq.n	1413e <sd_write+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   140b4:	4b25      	ldr	r3, [pc, #148]	; (1414c <sd_write+0xa8>)
   140b6:	781a      	ldrb	r2, [r3, #0]
   140b8:	07d1      	lsls	r1, r2, #31
   140ba:	d442      	bmi.n	14142 <sd_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   140bc:	781b      	ldrb	r3, [r3, #0]
   140be:	075a      	lsls	r2, r3, #29
   140c0:	d441      	bmi.n	14146 <sd_write+0xa2>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   140c2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   140c6:	4d22      	ldr	r5, [pc, #136]	; (14150 <sd_write+0xac>)
   140c8:	61ea      	str	r2, [r5, #28]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   140ca:	4a22      	ldr	r2, [pc, #136]	; (14154 <sd_write+0xb0>)
   140cc:	7812      	ldrb	r2, [r2, #0]
   140ce:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   140d0:	bf58      	it	pl
   140d2:	027f      	lslpl	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   140d4:	2c01      	cmp	r4, #1
   140d6:	d112      	bne.n	140fe <sd_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   140d8:	4639      	mov	r1, r7
   140da:	2058      	movs	r0, #88	; 0x58
   140dc:	f7ff fe80 	bl	13de0 <send_cmd>
   140e0:	bb58      	cbnz	r0, 1413a <sd_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   140e2:	21fe      	movs	r1, #254	; 0xfe
   140e4:	4630      	mov	r0, r6
   140e6:	f7ff fe55 	bl	13d94 <xmit_datablock>
   140ea:	fab0 f480 	clz	r4, r0
   140ee:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   140f0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   140f4:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   140f6:	61ab      	str	r3, [r5, #24]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   140f8:	bf18      	it	ne
   140fa:	2001      	movne	r0, #1
   140fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   140fe:	f012 0f06 	tst.w	r2, #6
   14102:	d003      	beq.n	1410c <sd_write+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   14104:	4621      	mov	r1, r4
   14106:	20d7      	movs	r0, #215	; 0xd7
   14108:	f7ff fe6a 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   1410c:	4639      	mov	r1, r7
   1410e:	2059      	movs	r0, #89	; 0x59
   14110:	f7ff fe66 	bl	13de0 <send_cmd>
   14114:	2800      	cmp	r0, #0
   14116:	d1eb      	bne.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   14118:	21fc      	movs	r1, #252	; 0xfc
   1411a:	4630      	mov	r0, r6
   1411c:	f7ff fe3a 	bl	13d94 <xmit_datablock>
   14120:	b128      	cbz	r0, 1412e <sd_write+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   14122:	3c01      	subs	r4, #1
   14124:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   14128:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   1412c:	d1f4      	bne.n	14118 <sd_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   1412e:	21fd      	movs	r1, #253	; 0xfd
   14130:	2000      	movs	r0, #0
   14132:	f7ff fe2f 	bl	13d94 <xmit_datablock>
   14136:	2800      	cmp	r0, #0
   14138:	d1da      	bne.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   1413a:	2401      	movs	r4, #1
   1413c:	e7d8      	b.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   1413e:	2004      	movs	r0, #4
   14140:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   14142:	2003      	movs	r0, #3
   14144:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   14146:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   14148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1414a:	bf00      	nop
   1414c:	2007c095 	.word	0x2007c095
   14150:	2009c020 	.word	0x2009c020
   14154:	2007c466 	.word	0x2007c466

00014158 <sd_ioctl>:
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   14158:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1415a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   1415c:	f7ff fe86 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   14160:	2805      	cmp	r0, #5
   14162:	d11a      	bne.n	1419a <sd_ioctl+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   14164:	782b      	ldrb	r3, [r5, #0]
   14166:	2b01      	cmp	r3, #1
   14168:	d015      	beq.n	14196 <sd_ioctl+0x3e>
   1416a:	d305      	bcc.n	14178 <sd_ioctl+0x20>
   1416c:	2b02      	cmp	r3, #2
   1416e:	d00b      	beq.n	14188 <sd_ioctl+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   14170:	2404      	movs	r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   14172:	4620      	mov	r0, r4
   14174:	b004      	add	sp, #16
   14176:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   14178:	4b7b      	ldr	r3, [pc, #492]	; (14368 <sd_ioctl+0x210>)
   1417a:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   1417c:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   14180:	d109      	bne.n	14196 <sd_ioctl+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   14182:	f7ff fdaf 	bl	13ce4 <power_off>
   14186:	e7f4      	b.n	14172 <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   14188:	4b77      	ldr	r3, [pc, #476]	; (14368 <sd_ioctl+0x210>)
   1418a:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   1418c:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   14190:	f3c3 6380 	ubfx	r3, r3, #26, #1
   14194:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   14196:	2400      	movs	r4, #0
   14198:	e7eb      	b.n	14172 <sd_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   1419a:	4b74      	ldr	r3, [pc, #464]	; (1436c <sd_ioctl+0x214>)
   1419c:	781b      	ldrb	r3, [r3, #0]
   1419e:	07db      	lsls	r3, r3, #31
   141a0:	f100 80e0 	bmi.w	14364 <sd_ioctl+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   141a4:	280e      	cmp	r0, #14
   141a6:	f200 80db 	bhi.w	14360 <sd_ioctl+0x208>
   141aa:	e8df f000 	tbb	[pc, r0]
   141ae:	1708      	.short	0x1708
   141b0:	d9d95a55 	.word	0xd9d95a55
   141b4:	d9d9d9d9 	.word	0xd9d9d9d9
   141b8:	bdbaaba7 	.word	0xbdbaaba7
   141bc:	cd          	.byte	0xcd
   141bd:	00          	.byte	0x00
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   141be:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   141c2:	4b69      	ldr	r3, [pc, #420]	; (14368 <sd_ioctl+0x210>)
   141c4:	61da      	str	r2, [r3, #28]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   141c6:	f7ff fd75 	bl	13cb4 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   141ca:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   141ce:	bf18      	it	ne
   141d0:	2401      	movne	r4, #1
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   141d2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   141d6:	4b64      	ldr	r3, [pc, #400]	; (14368 <sd_ioctl+0x210>)
   141d8:	619a      	str	r2, [r3, #24]
   141da:	e7ca      	b.n	14172 <sd_ioctl+0x1a>
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   141dc:	2100      	movs	r1, #0
   141de:	2049      	movs	r0, #73	; 0x49
   141e0:	f7ff fdfe 	bl	13de0 <send_cmd>
   141e4:	4604      	mov	r4, r0
   141e6:	b108      	cbz	r0, 141ec <sd_ioctl+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   141e8:	2401      	movs	r4, #1
   141ea:	e7f2      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   141ec:	2110      	movs	r1, #16
   141ee:	4668      	mov	r0, sp
   141f0:	f7ff fd8a 	bl	13d08 <rcvr_datablock>
   141f4:	2800      	cmp	r0, #0
   141f6:	d0f7      	beq.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   141f8:	f89d 3000 	ldrb.w	r3, [sp]
   141fc:	f89d 1008 	ldrb.w	r1, [sp, #8]
   14200:	099b      	lsrs	r3, r3, #6
   14202:	2b01      	cmp	r3, #1
   14204:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14208:	d106      	bne.n	14218 <sd_ioctl+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   1420a:	1c5a      	adds	r2, r3, #1
   1420c:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   14210:	b292      	uxth	r2, r2
   14212:	0292      	lsls	r2, r2, #10
   14214:	602a      	str	r2, [r5, #0]
   14216:	e7dc      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14218:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1421c:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14220:	0092      	lsls	r2, r2, #2
   14222:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   14226:	f89d 1006 	ldrb.w	r1, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1422a:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   1422c:	0289      	lsls	r1, r1, #10
   1422e:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14232:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14234:	f89d 1005 	ldrb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   14238:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1423a:	f001 010f 	and.w	r1, r1, #15
   1423e:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   14242:	3102      	adds	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   14244:	f003 0306 	and.w	r3, r3, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14248:	440b      	add	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   1424a:	b2db      	uxtb	r3, r3
   1424c:	b292      	uxth	r2, r2
   1424e:	3b09      	subs	r3, #9
   14250:	fa02 f303 	lsl.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   14254:	602b      	str	r3, [r5, #0]
   14256:	e7bc      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   14258:	f44f 7300 	mov.w	r3, #512	; 0x200
   1425c:	802b      	strh	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   1425e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   14260:	e7b7      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   14262:	4e43      	ldr	r6, [pc, #268]	; (14370 <sd_ioctl+0x218>)
   14264:	7831      	ldrb	r1, [r6, #0]
   14266:	f011 0104 	ands.w	r1, r1, #4
   1426a:	d01c      	beq.n	142a6 <sd_ioctl+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   1426c:	2100      	movs	r1, #0
   1426e:	20cd      	movs	r0, #205	; 0xcd
   14270:	f7ff fdb6 	bl	13de0 <send_cmd>
   14274:	2800      	cmp	r0, #0
   14276:	d1b7      	bne.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   14278:	20ff      	movs	r0, #255	; 0xff
   1427a:	f7ff fd11 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   1427e:	2110      	movs	r1, #16
   14280:	4668      	mov	r0, sp
   14282:	f7ff fd41 	bl	13d08 <rcvr_datablock>
   14286:	2800      	cmp	r0, #0
   14288:	d0ae      	beq.n	141e8 <sd_ioctl+0x90>
   1428a:	2430      	movs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   1428c:	20ff      	movs	r0, #255	; 0xff
   1428e:	f7ff fd07 	bl	13ca0 <ssp1_exchange_byte>
   14292:	1e60      	subs	r0, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   14294:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   14298:	d1f8      	bne.n	1428c <sd_ioctl+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   1429a:	f89d 300a 	ldrb.w	r3, [sp, #10]
   1429e:	091a      	lsrs	r2, r3, #4
   142a0:	2310      	movs	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142a2:	4093      	lsls	r3, r2
   142a4:	e7d6      	b.n	14254 <sd_ioctl+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   142a6:	2049      	movs	r0, #73	; 0x49
   142a8:	f7ff fd9a 	bl	13de0 <send_cmd>
   142ac:	4604      	mov	r4, r0
   142ae:	2800      	cmp	r0, #0
   142b0:	d19a      	bne.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   142b2:	2110      	movs	r1, #16
   142b4:	4668      	mov	r0, sp
   142b6:	f7ff fd27 	bl	13d08 <rcvr_datablock>
   142ba:	2800      	cmp	r0, #0
   142bc:	d094      	beq.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   142be:	7830      	ldrb	r0, [r6, #0]
   142c0:	f89d 300a 	ldrb.w	r3, [sp, #10]
   142c4:	f010 0002 	ands.w	r0, r0, #2
   142c8:	f89d 100b 	ldrb.w	r1, [sp, #11]
   142cc:	d00a      	beq.n	142e4 <sd_ioctl+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   142ce:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142d0:	f89d 200d 	ldrb.w	r2, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   142d4:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   142d8:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142dc:	0992      	lsrs	r2, r2, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   142de:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142e0:	3a01      	subs	r2, #1
   142e2:	e7de      	b.n	142a2 <sd_ioctl+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   142e4:	00ca      	lsls	r2, r1, #3
   142e6:	f002 0218 	and.w	r2, r2, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142ea:	f3c3 0384 	ubfx	r3, r3, #2, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   142ee:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142f2:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   142f4:	fb02 3303 	mla	r3, r2, r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142f8:	602b      	str	r3, [r5, #0]
   142fa:	e7b0      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   142fc:	4b1c      	ldr	r3, [pc, #112]	; (14370 <sd_ioctl+0x218>)
   142fe:	781b      	ldrb	r3, [r3, #0]
   14300:	702b      	strb	r3, [r5, #0]
   14302:	e7ac      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   14304:	2100      	movs	r1, #0
   14306:	2049      	movs	r0, #73	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   14308:	f7ff fd6a 	bl	13de0 <send_cmd>
   1430c:	2800      	cmp	r0, #0
   1430e:	f47f af6b 	bne.w	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   14312:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   14314:	4628      	mov	r0, r5
   14316:	f7ff fcf7 	bl	13d08 <rcvr_datablock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   1431a:	fab0 f480 	clz	r4, r0
   1431e:	0964      	lsrs	r4, r4, #5
   14320:	e757      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   14322:	2100      	movs	r1, #0
   14324:	204a      	movs	r0, #74	; 0x4a
   14326:	e7ef      	b.n	14308 <sd_ioctl+0x1b0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   14328:	2100      	movs	r1, #0
   1432a:	207a      	movs	r0, #122	; 0x7a
   1432c:	f7ff fd58 	bl	13de0 <send_cmd>
   14330:	2800      	cmp	r0, #0
   14332:	f47f af59 	bne.w	141e8 <sd_ioctl+0x90>
   14336:	1d29      	adds	r1, r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   14338:	20ff      	movs	r0, #255	; 0xff
   1433a:	f7ff fcb1 	bl	13ca0 <ssp1_exchange_byte>
   1433e:	f805 0b01 	strb.w	r0, [r5], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   14342:	428d      	cmp	r5, r1
   14344:	d1f8      	bne.n	14338 <sd_ioctl+0x1e0>
   14346:	e78a      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   14348:	2100      	movs	r1, #0
   1434a:	20cd      	movs	r0, #205	; 0xcd
   1434c:	f7ff fd48 	bl	13de0 <send_cmd>
   14350:	2800      	cmp	r0, #0
   14352:	f47f af49 	bne.w	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   14356:	20ff      	movs	r0, #255	; 0xff
   14358:	f7ff fca2 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   1435c:	2140      	movs	r1, #64	; 0x40
   1435e:	e7d9      	b.n	14314 <sd_ioctl+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   14360:	2404      	movs	r4, #4
   14362:	e736      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   14364:	2403      	movs	r4, #3
   14366:	e704      	b.n	14172 <sd_ioctl+0x1a>
   14368:	2009c020 	.word	0x2009c020
   1436c:	2007c095 	.word	0x2007c095
   14370:	2007c466 	.word	0x2007c466

00014374 <disk_initialize>:
disk_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   14374:	b510      	push	{r4, lr}
   14376:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14378:	f003 fd92 	bl	17ea0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   1437c:	b11c      	cbz	r4, 14386 <disk_initialize+0x12>
   1437e:	2c01      	cmp	r4, #1
   14380:	d008      	beq.n	14394 <disk_initialize+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   14382:	2404      	movs	r4, #4
   14384:	e002      	b.n	1438c <disk_initialize+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   14386:	f000 f957 	bl	14638 <flash_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   1438a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   1438c:	f003 fda0 	bl	17ed0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   14390:	4620      	mov	r0, r4
   14392:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   14394:	f7ff fd7c 	bl	13e90 <sd_initialize>
   14398:	e7f7      	b.n	1438a <disk_initialize+0x16>

0001439a <disk_status>:
disk_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   1439a:	b128      	cbz	r0, 143a8 <disk_status+0xe>
   1439c:	2801      	cmp	r0, #1
   1439e:	d001      	beq.n	143a4 <disk_status+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   143a0:	2004      	movs	r0, #4
   143a2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   143a4:	f7ff be2a 	b.w	13ffc <sd_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   143a8:	4770      	bx	lr

000143aa <disk_read>:
disk_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   143aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   143ac:	4607      	mov	r7, r0
   143ae:	460c      	mov	r4, r1
   143b0:	4615      	mov	r5, r2
   143b2:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   143b4:	f003 fd74 	bl	17ea0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   143b8:	b11f      	cbz	r7, 143c2 <disk_read+0x18>
   143ba:	2f01      	cmp	r7, #1
   143bc:	d00b      	beq.n	143d6 <disk_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   143be:	2404      	movs	r4, #4
   143c0:	e005      	b.n	143ce <disk_read+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   143c2:	4632      	mov	r2, r6
   143c4:	4629      	mov	r1, r5
   143c6:	4620      	mov	r0, r4
   143c8:	f000 f982 	bl	146d0 <flash_read_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   143cc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   143ce:	f003 fd7f 	bl	17ed0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   143d2:	4620      	mov	r0, r4
   143d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   143d6:	4632      	mov	r2, r6
   143d8:	4629      	mov	r1, r5
   143da:	4620      	mov	r0, r4
   143dc:	f7ff fe16 	bl	1400c <sd_read>
   143e0:	e7f4      	b.n	143cc <disk_read+0x22>

000143e2 <disk_write>:
disk_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   143e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   143e4:	4607      	mov	r7, r0
   143e6:	460c      	mov	r4, r1
   143e8:	4615      	mov	r5, r2
   143ea:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   143ec:	f003 fd58 	bl	17ea0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   143f0:	b11f      	cbz	r7, 143fa <disk_write+0x18>
   143f2:	2f01      	cmp	r7, #1
   143f4:	d00b      	beq.n	1440e <disk_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   143f6:	2404      	movs	r4, #4
   143f8:	e005      	b.n	14406 <disk_write+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   143fa:	4632      	mov	r2, r6
   143fc:	4629      	mov	r1, r5
   143fe:	4620      	mov	r0, r4
   14400:	f000 f98e 	bl	14720 <flash_write_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   14404:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   14406:	f003 fd63 	bl	17ed0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   1440a:	4620      	mov	r0, r4
   1440c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   1440e:	4632      	mov	r2, r6
   14410:	4629      	mov	r1, r5
   14412:	4620      	mov	r0, r4
   14414:	f7ff fe46 	bl	140a4 <sd_write>
   14418:	e7f4      	b.n	14404 <disk_write+0x22>

0001441a <disk_ioctl>:
disk_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   1441a:	b570      	push	{r4, r5, r6, lr}
   1441c:	4606      	mov	r6, r0
   1441e:	460c      	mov	r4, r1
   14420:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14422:	f003 fd3d 	bl	17ea0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   14426:	b11e      	cbz	r6, 14430 <disk_ioctl+0x16>
   14428:	2e01      	cmp	r6, #1
   1442a:	d00a      	beq.n	14442 <disk_ioctl+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   1442c:	2404      	movs	r4, #4
   1442e:	e004      	b.n	1443a <disk_ioctl+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   14430:	4629      	mov	r1, r5
   14432:	4620      	mov	r0, r4
   14434:	f000 f99a 	bl	1476c <flash_ioctl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   14438:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   1443a:	f003 fd49 	bl	17ed0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   1443e:	4620      	mov	r0, r4
   14440:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   14442:	4629      	mov	r1, r5
   14444:	4620      	mov	r0, r4
   14446:	f7ff fe87 	bl	14158 <sd_ioctl>
   1444a:	e7f5      	b.n	14438 <disk_ioctl+0x1e>

0001444c <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   1444c:	4b05      	ldr	r3, [pc, #20]	; (14464 <flash_get_mem_size_bytes()+0x18>)
   1444e:	781b      	ldrb	r3, [r3, #0]
   14450:	3b25      	subs	r3, #37	; 0x25
   14452:	b2db      	uxtb	r3, r3
   14454:	2b03      	cmp	r3, #3
   14456:	bf9a      	itte	ls
   14458:	4a03      	ldrls	r2, [pc, #12]	; (14468 <flash_get_mem_size_bytes()+0x1c>)
   1445a:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   1445e:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   14460:	4770      	bx	lr
   14462:	bf00      	nop
   14464:	2007c46c 	.word	0x2007c46c
   14468:	00024fe8 	.word	0x00024fe8

0001446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   1446c:	4b1b      	ldr	r3, [pc, #108]	; (144dc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   1446e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   14472:	881d      	ldrh	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   14474:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   14476:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   1447a:	460f      	mov	r7, r1
   1447c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   1447e:	d103      	bne.n	14488 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   14480:	462a      	mov	r2, r5
   14482:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   14484:	4638      	mov	r0, r7
   14486:	e00b      	b.n	144a0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   14488:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   1448c:	d10c      	bne.n	144a8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   1448e:	462a      	mov	r2, r5
   14490:	4621      	mov	r1, r4
   14492:	4638      	mov	r0, r7
   14494:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   14496:	462a      	mov	r2, r5
   14498:	f504 7180 	add.w	r1, r4, #256	; 0x100
   1449c:	f507 7080 	add.w	r0, r7, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   144a0:	4633      	mov	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   144a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144a6:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   144a8:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   144ac:	d104      	bne.n	144b8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   144ae:	0a51      	lsrs	r1, r2, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   144b0:	0289      	lsls	r1, r1, #10
   144b2:	f44f 7200 	mov.w	r2, #512	; 0x200
   144b6:	e7e5      	b.n	14484 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   144b8:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   144bc:	d10b      	bne.n	144d6 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   144be:	0a14      	lsrs	r4, r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   144c0:	0261      	lsls	r1, r4, #9
   144c2:	f44f 7280 	mov.w	r2, #256	; 0x100
   144c6:	4638      	mov	r0, r7
   144c8:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144ca:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   144ce:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144d0:	0261      	lsls	r1, r4, #9
   144d2:	18b8      	adds	r0, r7, r2
   144d4:	e7e4      	b.n	144a0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   144d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   144da:	bf00      	nop
   144dc:	2007c46e 	.word	0x2007c46e

000144e0 <ssp1_exchange_data>:
ssp1_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   144e0:	b510      	push	{r4, lr}
   144e2:	4b29      	ldr	r3, [pc, #164]	; (14588 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   144e4:	2900      	cmp	r1, #0
   144e6:	dd4d      	ble.n	14584 <ssp1_exchange_data+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   144e8:	2907      	cmp	r1, #7
   144ea:	7802      	ldrb	r2, [r0, #0]
   144ec:	dd29      	ble.n	14542 <ssp1_exchange_data+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144ee:	609a      	str	r2, [r3, #8]
   144f0:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   144f2:	3908      	subs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144f4:	609a      	str	r2, [r3, #8]
   144f6:	7882      	ldrb	r2, [r0, #2]
   144f8:	609a      	str	r2, [r3, #8]
   144fa:	78c2      	ldrb	r2, [r0, #3]
   144fc:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144fe:	7902      	ldrb	r2, [r0, #4]
   14500:	609a      	str	r2, [r3, #8]
   14502:	7942      	ldrb	r2, [r0, #5]
   14504:	609a      	str	r2, [r3, #8]
   14506:	7982      	ldrb	r2, [r0, #6]
   14508:	609a      	str	r2, [r3, #8]
   1450a:	79c4      	ldrb	r4, [r0, #7]
   1450c:	f100 0208 	add.w	r2, r0, #8
   14510:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   14512:	699c      	ldr	r4, [r3, #24]
   14514:	0764      	lsls	r4, r4, #29
   14516:	d5fc      	bpl.n	14512 <ssp1_exchange_data+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   14518:	689c      	ldr	r4, [r3, #8]
   1451a:	7004      	strb	r4, [r0, #0]
   1451c:	689c      	ldr	r4, [r3, #8]
   1451e:	7044      	strb	r4, [r0, #1]
   14520:	689c      	ldr	r4, [r3, #8]
   14522:	7084      	strb	r4, [r0, #2]
   14524:	689c      	ldr	r4, [r3, #8]
   14526:	70c4      	strb	r4, [r0, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   14528:	68dc      	ldr	r4, [r3, #12]
   1452a:	06e4      	lsls	r4, r4, #27
   1452c:	d4fc      	bmi.n	14528 <ssp1_exchange_data+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1452e:	689c      	ldr	r4, [r3, #8]
   14530:	7104      	strb	r4, [r0, #4]
   14532:	689c      	ldr	r4, [r3, #8]
   14534:	7144      	strb	r4, [r0, #5]
   14536:	689c      	ldr	r4, [r3, #8]
   14538:	7184      	strb	r4, [r0, #6]
   1453a:	689c      	ldr	r4, [r3, #8]
   1453c:	71c4      	strb	r4, [r0, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1453e:	4610      	mov	r0, r2
   14540:	e7d0      	b.n	144e4 <ssp1_exchange_data+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   14542:	2903      	cmp	r1, #3
   14544:	dd14      	ble.n	14570 <ssp1_exchange_data+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   14546:	609a      	str	r2, [r3, #8]
   14548:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   1454a:	3904      	subs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1454c:	609a      	str	r2, [r3, #8]
   1454e:	7882      	ldrb	r2, [r0, #2]
   14550:	609a      	str	r2, [r3, #8]
   14552:	78c4      	ldrb	r4, [r0, #3]
   14554:	1d02      	adds	r2, r0, #4
   14556:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   14558:	68dc      	ldr	r4, [r3, #12]
   1455a:	06e4      	lsls	r4, r4, #27
   1455c:	d4fc      	bmi.n	14558 <ssp1_exchange_data+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1455e:	689c      	ldr	r4, [r3, #8]
   14560:	7004      	strb	r4, [r0, #0]
   14562:	689c      	ldr	r4, [r3, #8]
   14564:	7044      	strb	r4, [r0, #1]
   14566:	689c      	ldr	r4, [r3, #8]
   14568:	7084      	strb	r4, [r0, #2]
   1456a:	689c      	ldr	r4, [r3, #8]
   1456c:	70c4      	strb	r4, [r0, #3]
   1456e:	e7e6      	b.n	1453e <ssp1_exchange_data+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   14570:	1c44      	adds	r4, r0, #1
   14572:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   14574:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   14576:	68da      	ldr	r2, [r3, #12]
   14578:	06d2      	lsls	r2, r2, #27
   1457a:	d4fc      	bmi.n	14576 <ssp1_exchange_data+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   1457c:	689a      	ldr	r2, [r3, #8]
   1457e:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   14580:	4620      	mov	r0, r4
   14582:	e7af      	b.n	144e4 <ssp1_exchange_data+0x4>
   14584:	bd10      	pop	{r4, pc}
   14586:	bf00      	nop
   14588:	40030000 	.word	0x40030000

0001458c <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   1458c:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   1458e:	0c0b      	lsrs	r3, r1, #16
   14590:	f88d 3005 	strb.w	r3, [sp, #5]
   14594:	f88d 1007 	strb.w	r1, [sp, #7]
   14598:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1459a:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   1459c:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145a0:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   145a4:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145a8:	f7ff ff9a 	bl	144e0 <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   145ac:	b003      	add	sp, #12
   145ae:	f85d fb04 	ldr.w	pc, [sp], #4
   145b2:	Address 0x00000000000145b2 is out of bounds.


000145b4 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145b6:	2303      	movs	r3, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   145b8:	2540      	movs	r5, #64	; 0x40
   145ba:	4c0e      	ldr	r4, [pc, #56]	; (145f4 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145bc:	4617      	mov	r7, r2
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   145be:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145c0:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   145c4:	0c0b      	lsrs	r3, r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145c6:	f88d 3005 	strb.w	r3, [sp, #5]
   145ca:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   145ce:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145d0:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145d2:	4606      	mov	r6, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145d4:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145d8:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145dc:	f7ff ff80 	bl	144e0 <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   145e0:	2200      	movs	r2, #0
   145e2:	4639      	mov	r1, r7
   145e4:	4630      	mov	r0, r6
   145e6:	f003 fbfb 	bl	17de0 <ssp1_dma_transfer_block>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   145ea:	61a5      	str	r5, [r4, #24]
   145ec:	61a5      	str	r5, [r4, #24]
   145ee:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   145f0:	b003      	add	sp, #12
   145f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   145f4:	2009c000 	.word	0x2009c000

000145f8 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   145f8:	2240      	movs	r2, #64	; 0x40
   145fa:	4b0d      	ldr	r3, [pc, #52]	; (14630 <flash_wait_for_ready()+0x38>)
   145fc:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   145fe:	22d7      	movs	r2, #215	; 0xd7
   14600:	4b0c      	ldr	r3, [pc, #48]	; (14634 <flash_wait_for_ready()+0x3c>)
   14602:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14604:	68da      	ldr	r2, [r3, #12]
   14606:	06d2      	lsls	r2, r2, #27
   14608:	d4fc      	bmi.n	14604 <flash_wait_for_ready()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1460a:	4a0a      	ldr	r2, [pc, #40]	; (14634 <flash_wait_for_ready()+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1460c:	689b      	ldr	r3, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1460e:	21ff      	movs	r1, #255	; 0xff
   14610:	4613      	mov	r3, r2
   14612:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14614:	68d8      	ldr	r0, [r3, #12]
   14616:	06c0      	lsls	r0, r0, #27
   14618:	d4fc      	bmi.n	14614 <flash_wait_for_ready()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1461a:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   1461c:	f010 0f80 	tst.w	r0, #128	; 0x80
   14620:	d0f7      	beq.n	14612 <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14622:	2240      	movs	r2, #64	; 0x40
   14624:	4b02      	ldr	r3, [pc, #8]	; (14630 <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   14626:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   14628:	619a      	str	r2, [r3, #24]
   1462a:	619a      	str	r2, [r3, #24]
   1462c:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   1462e:	4770      	bx	lr
   14630:	2009c000 	.word	0x2009c000
   14634:	40030000 	.word	0x40030000

00014638 <flash_initialize>:
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   14638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   1463a:	f7ff ffdd 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   1463e:	2300      	movs	r3, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14640:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   14642:	4c1e      	ldr	r4, [pc, #120]	; (146bc <flash_initialize+0x84>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14644:	4e1e      	ldr	r6, [pc, #120]	; (146c0 <flash_initialize+0x88>)
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   14646:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   14648:	4b1e      	ldr	r3, [pc, #120]	; (146c4 <flash_initialize+0x8c>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1464a:	61f7      	str	r7, [r6, #28]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   1464c:	881a      	ldrh	r2, [r3, #0]
   1464e:	789b      	ldrb	r3, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   14650:	4605      	mov	r5, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14652:	2103      	movs	r1, #3
   14654:	a801      	add	r0, sp, #4
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   14656:	f8ad 2004 	strh.w	r2, [sp, #4]
   1465a:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1465e:	f7ff ff3f 	bl	144e0 <ssp1_exchange_data>
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   14662:	f89d 2005 	ldrb.w	r2, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   14666:	f89d 3006 	ldrb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   1466a:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1466c:	61b7      	str	r7, [r6, #24]
   1466e:	61b7      	str	r7, [r6, #24]
   14670:	61b7      	str	r7, [r6, #24]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   14672:	d115      	bne.n	146a0 <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   14674:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   14678:	2a03      	cmp	r2, #3
   1467a:	d811      	bhi.n	146a0 <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   1467c:	4a12      	ldr	r2, [pc, #72]	; (146c8 <flash_initialize+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   1467e:	2b25      	cmp	r3, #37	; 0x25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   14680:	7013      	strb	r3, [r2, #0]
   14682:	f005 0001 	and.w	r0, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   14686:	d111      	bne.n	146ac <flash_initialize+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   14688:	2800      	cmp	r0, #0
   1468a:	bf14      	ite	ne
   1468c:	f44f 7380 	movne.w	r3, #256	; 0x100
   14690:	f44f 7384 	moveq.w	r3, #264	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   14694:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   14696:	f7ff fed9 	bl	1444c <flash_get_mem_size_bytes()>
   1469a:	4b0c      	ldr	r3, [pc, #48]	; (146cc <flash_initialize+0x94>)
   1469c:	0a40      	lsrs	r0, r0, #9
   1469e:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   146a0:	8820      	ldrh	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   146a2:	fab0 f080 	clz	r0, r0
   146a6:	0940      	lsrs	r0, r0, #5
   146a8:	b003      	add	sp, #12
   146aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   146ac:	2800      	cmp	r0, #0
   146ae:	bf14      	ite	ne
   146b0:	f44f 7300 	movne.w	r3, #512	; 0x200
   146b4:	f44f 7304 	moveq.w	r3, #528	; 0x210
   146b8:	e7ec      	b.n	14694 <flash_initialize+0x5c>
   146ba:	bf00      	nop
   146bc:	2007c46e 	.word	0x2007c46e
   146c0:	2009c000 	.word	0x2009c000
   146c4:	00024fde 	.word	0x00024fde
   146c8:	2007c46c 	.word	0x2007c46c
   146cc:	2007c468 	.word	0x2007c468

000146d0 <flash_read_sectors>:
flash_read_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   146d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146d4:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   146d6:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146d8:	4a0f      	ldr	r2, [pc, #60]	; (14718 <flash_read_sectors+0x48>)
   146da:	3b01      	subs	r3, #1
   146dc:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   146de:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146e0:	4293      	cmp	r3, r2
   146e2:	d812      	bhi.n	1470a <flash_read_sectors+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   146e4:	024d      	lsls	r5, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   146e6:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   146e8:	f7ff ff86 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   146ec:	f8df 802c 	ldr.w	r8, [pc, #44]	; 1471c <flash_read_sectors+0x4c>
   146f0:	1b2d      	subs	r5, r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   146f2:	42be      	cmp	r6, r7
   146f4:	eb04 0205 	add.w	r2, r4, r5
   146f8:	da0a      	bge.n	14710 <flash_read_sectors+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   146fa:	4621      	mov	r1, r4
   146fc:	4640      	mov	r0, r8
   146fe:	f7ff feb5 	bl	1446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   14702:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14706:	3601      	adds	r6, #1
   14708:	e7f3      	b.n	146f2 <flash_read_sectors+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   1470a:	2001      	movs	r0, #1
   1470c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   14710:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   14712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14716:	bf00      	nop
   14718:	2007c468 	.word	0x2007c468
   1471c:	000145b5 	.word	0x000145b5

00014720 <flash_write_sectors>:
flash_write_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14720:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   14722:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14726:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14728:	4a0e      	ldr	r2, [pc, #56]	; (14764 <flash_write_sectors+0x44>)
   1472a:	3b01      	subs	r3, #1
   1472c:	6812      	ldr	r2, [r2, #0]
   1472e:	4293      	cmp	r3, r2
   14730:	d811      	bhi.n	14756 <flash_write_sectors+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   14732:	4604      	mov	r4, r0
   14734:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14736:	f8df 8030 	ldr.w	r8, [pc, #48]	; 14768 <flash_write_sectors+0x48>
   1473a:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1473e:	42be      	cmp	r6, r7
   14740:	eb04 0205 	add.w	r2, r4, r5
   14744:	da0a      	bge.n	1475c <flash_write_sectors+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14746:	4621      	mov	r1, r4
   14748:	4640      	mov	r0, r8
   1474a:	f7ff fe8f 	bl	1446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1474e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14752:	3601      	adds	r6, #1
   14754:	e7f3      	b.n	1473e <flash_write_sectors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   14756:	2001      	movs	r0, #1
   14758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   1475c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   1475e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14762:	bf00      	nop
   14764:	2007c468 	.word	0x2007c468
   14768:	0001484d 	.word	0x0001484d

0001476c <flash_ioctl>:
flash_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   1476c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   1476e:	2807      	cmp	r0, #7
   14770:	d805      	bhi.n	1477e <flash_ioctl+0x12>
   14772:	e8df f000 	tbb	[pc, r0]
   14776:	0a06      	.short	0x0a06
   14778:	0808130f 	.word	0x0808130f
   1477c:	0808      	.short	0x0808
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   1477e:	2004      	movs	r0, #4
   14780:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   14782:	f7ff ff39 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   14786:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   14788:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   1478a:	f7ff fe5f 	bl	1444c <flash_get_mem_size_bytes()>
   1478e:	0a40      	lsrs	r0, r0, #9
   14790:	6008      	str	r0, [r1, #0]
   14792:	e7f8      	b.n	14786 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   14794:	f44f 7300 	mov.w	r3, #512	; 0x200
   14798:	800b      	strh	r3, [r1, #0]
   1479a:	e7f4      	b.n	14786 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   1479c:	2301      	movs	r3, #1
   1479e:	600b      	str	r3, [r1, #0]
   147a0:	e7f1      	b.n	14786 <flash_ioctl+0x1a>
   147a2:	Address 0x00000000000147a2 is out of bounds.


000147a4 <flash_write_permanent_id>:
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   147a4:	b570      	push	{r4, r5, r6, lr}
   147a6:	b090      	sub	sp, #64	; 0x40
   147a8:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   147aa:	466a      	mov	r2, sp
   147ac:	466e      	mov	r6, sp
   147ae:	f100 0540 	add.w	r5, r0, #64	; 0x40
   147b2:	4614      	mov	r4, r2
   147b4:	6818      	ldr	r0, [r3, #0]
   147b6:	6859      	ldr	r1, [r3, #4]
   147b8:	3308      	adds	r3, #8
   147ba:	c403      	stmia	r4!, {r0, r1}
   147bc:	42ab      	cmp	r3, r5
   147be:	4622      	mov	r2, r4
   147c0:	d1f7      	bne.n	147b2 <flash_write_permanent_id+0xe>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   147c2:	2440      	movs	r4, #64	; 0x40
   147c4:	4d07      	ldr	r5, [pc, #28]	; (147e4 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   147c6:	2100      	movs	r1, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147c8:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   147ca:	209b      	movs	r0, #155	; 0x9b
   147cc:	f7ff fede 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147d0:	4621      	mov	r1, r4
   147d2:	4630      	mov	r0, r6
   147d4:	f7ff fe84 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   147d8:	61ac      	str	r4, [r5, #24]
   147da:	61ac      	str	r4, [r5, #24]
   147dc:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   147de:	b010      	add	sp, #64	; 0x40
   147e0:	bd70      	pop	{r4, r5, r6, pc}
   147e2:	bf00      	nop
   147e4:	2009c000 	.word	0x2009c000

000147e8 <flash_read_permanent_id>:
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   147e8:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   147ea:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   147ec:	4606      	mov	r6, r0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147ee:	4d07      	ldr	r5, [pc, #28]	; (1480c <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   147f0:	2100      	movs	r1, #0
   147f2:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147f4:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   147f6:	f7ff fec9 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147fa:	4621      	mov	r1, r4
   147fc:	4630      	mov	r0, r6
   147fe:	f7ff fe6f 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14802:	61ac      	str	r4, [r5, #24]
   14804:	61ac      	str	r4, [r5, #24]
   14806:	61ac      	str	r4, [r5, #24]
   14808:	bd70      	pop	{r4, r5, r6, pc}
   1480a:	bf00      	nop
   1480c:	2009c000 	.word	0x2009c000

00014810 <flash_get_page_count>:
flash_get_page_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   14810:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   14812:	4b06      	ldr	r3, [pc, #24]	; (1482c <flash_get_page_count+0x1c>)
   14814:	8819      	ldrh	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   14816:	f031 011f 	bics.w	r1, r1, #31
   1481a:	d004      	beq.n	14826 <flash_get_page_count+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   1481c:	f7ff fe16 	bl	1444c <flash_get_mem_size_bytes()>
   14820:	fbb0 f0f1 	udiv	r0, r0, r1
   14824:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   14826:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   14828:	bd08      	pop	{r3, pc}
   1482a:	bf00      	nop
   1482c:	2007c46e 	.word	0x2007c46e

00014830 <flash_get_page_size>:
flash_get_page_size():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   14830:	4b01      	ldr	r3, [pc, #4]	; (14838 <flash_get_page_size+0x8>)
   14832:	8818      	ldrh	r0, [r3, #0]
   14834:	4770      	bx	lr
   14836:	bf00      	nop
   14838:	2007c46e 	.word	0x2007c46e

0001483c <flash_supports_metadata>:
flash_supports_metadata():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   1483c:	4b02      	ldr	r3, [pc, #8]	; (14848 <flash_supports_metadata+0xc>)
   1483e:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   14840:	3000      	adds	r0, #0
   14842:	bf18      	it	ne
   14844:	2001      	movne	r0, #1
   14846:	4770      	bx	lr
   14848:	2007c46e 	.word	0x2007c46e

0001484c <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   1484c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   14850:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14854:	460f      	mov	r7, r1
   14856:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14858:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   1485a:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   1485c:	f7ff fecc 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   14860:	f7ff ffec 	bl	1483c <flash_supports_metadata>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   14864:	4606      	mov	r6, r0
   14866:	b1b8      	cbz	r0, 14898 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14868:	2540      	movs	r5, #64	; 0x40
   1486a:	4c19      	ldr	r4, [pc, #100]	; (148d0 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   1486c:	4b19      	ldr	r3, [pc, #100]	; (148d4 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1486e:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   14870:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   14872:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14874:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14878:	bf0c      	ite	eq
   1487a:	f44f 7180 	moveq.w	r1, #256	; 0x100
   1487e:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   14882:	4339      	orrs	r1, r7
   14884:	f7ff fe82 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14888:	2104      	movs	r1, #4
   1488a:	eb0d 0001 	add.w	r0, sp, r1
   1488e:	f7ff fe27 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14892:	61a5      	str	r5, [r4, #24]
   14894:	61a5      	str	r5, [r4, #24]
   14896:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14898:	2340      	movs	r3, #64	; 0x40
   1489a:	4c0d      	ldr	r4, [pc, #52]	; (148d0 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   1489c:	4639      	mov	r1, r7
   1489e:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   148a0:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   148a2:	f7ff fe73 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   148a6:	2201      	movs	r2, #1
   148a8:	4649      	mov	r1, r9
   148aa:	4640      	mov	r0, r8
   148ac:	f003 fa98 	bl	17de0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   148b0:	b13e      	cbz	r6, 148c2 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   148b2:	9b01      	ldr	r3, [sp, #4]
   148b4:	a802      	add	r0, sp, #8
   148b6:	3301      	adds	r3, #1
   148b8:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   148bc:	2104      	movs	r1, #4
   148be:	f7ff fe0f 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   148c2:	2340      	movs	r3, #64	; 0x40
   148c4:	61a3      	str	r3, [r4, #24]
   148c6:	61a3      	str	r3, [r4, #24]
   148c8:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   148ca:	b003      	add	sp, #12
   148cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   148d0:	2009c000 	.word	0x2009c000
   148d4:	2007c46e 	.word	0x2007c46e

000148d8 <flash_get_page_write_count>:
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   148d8:	4b12      	ldr	r3, [pc, #72]	; (14924 <flash_get_page_write_count+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:410

uint32_t flash_get_page_write_count(uint32_t page_number)
{
   148da:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   148dc:	881b      	ldrh	r3, [r3, #0]
   148de:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   148e2:	bf0c      	ite	eq
   148e4:	f44f 7180 	moveq.w	r1, #256	; 0x100
   148e8:	f44f 7100 	movne.w	r1, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    /* Metadata is at the end of the page */
    const uint32_t page_addr = (page_number << FLASH_PAGENUM_BIT_OFFSET);
    const uint32_t meta_data_addr = flash_get_metadata_addr_from_pageaddr(page_addr);
    uint32_t write_counter = UINT32_MAX;
   148ec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:136
    return (addr | byte_offset);
   148f0:	ea41 2140 	orr.w	r1, r1, r0, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    uint32_t write_counter = UINT32_MAX;
   148f4:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:416

    if (flash_supports_metadata())
   148f6:	f7ff ffa1 	bl	1483c <flash_supports_metadata>
   148fa:	b168      	cbz	r0, 14918 <flash_get_page_write_count+0x40>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   148fc:	2540      	movs	r5, #64	; 0x40
   148fe:	4c0a      	ldr	r4, [pc, #40]	; (14928 <flash_get_page_write_count+0x50>)
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
    {
        CHIP_SELECT_OP()
        {
            flash_send_op_addr(opcode_read_cont_lowfreq, meta_data_addr);
   14900:	2003      	movs	r0, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14902:	61e5      	str	r5, [r4, #28]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
   14904:	f7ff fe42 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14908:	2104      	movs	r1, #4
   1490a:	eb0d 0001 	add.w	r0, sp, r1
   1490e:	f7ff fde7 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14912:	61a5      	str	r5, [r4, #24]
   14914:	61a5      	str	r5, [r4, #24]
   14916:	61a5      	str	r5, [r4, #24]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:425
            flash_spi_multi_io(&write_counter, sizeof(write_counter));
        }
    }

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
   14918:	9801      	ldr	r0, [sp, #4]
   1491a:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:426
}
   1491c:	bf08      	it	eq
   1491e:	2000      	moveq	r0, #0
   14920:	b003      	add	sp, #12
   14922:	bd30      	pop	{r4, r5, pc}
   14924:	2007c46e 	.word	0x2007c46e
   14928:	2009c000 	.word	0x2009c000

0001492c <flash_chip_erase>:
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

void flash_chip_erase(void)
{
   1492c:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   1492e:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14930:	2104      	movs	r1, #4
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   14932:	4b07      	ldr	r3, [pc, #28]	; (14950 <flash_chip_erase+0x24>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14934:	4c07      	ldr	r4, [pc, #28]	; (14954 <flash_chip_erase+0x28>)
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   14936:	6818      	ldr	r0, [r3, #0]
   14938:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1493a:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1493c:	eb0d 0001 	add.w	r0, sp, r1
   14940:	f7ff fdce 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14944:	61a5      	str	r5, [r4, #24]
   14946:	61a5      	str	r5, [r4, #24]
   14948:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   1494a:	b003      	add	sp, #12
   1494c:	bd30      	pop	{r4, r5, pc}
   1494e:	bf00      	nop
   14950:	00024fe1 	.word	0x00024fe1
   14954:	2009c000 	.word	0x2009c000

00014958 <get_fattime>:
get_fattime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   14958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   1495a:	a801      	add	r0, sp, #4
   1495c:	f002 fee2 	bl	17724 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   14960:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14964:	f003 000f 	and.w	r0, r3, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   14968:	f89d 3008 	ldrb.w	r3, [sp, #8]
   1496c:	f003 031f 	and.w	r3, r3, #31
   14970:	041b      	lsls	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   14972:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   14976:	f89d 0006 	ldrb.w	r0, [sp, #6]
   1497a:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   1497e:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   14982:	f89d 0005 	ldrb.w	r0, [sp, #5]
   14986:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   1498a:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   1498e:	f89d 0004 	ldrb.w	r0, [sp, #4]
   14992:	f3c0 0044 	ubfx	r0, r0, #1, #5
   14996:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   14998:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   1499c:	0640      	lsls	r0, r0, #25
   1499e:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   149a2:	4318      	orrs	r0, r3
   149a4:	b005      	add	sp, #20
   149a6:	f85d fb04 	ldr.w	pc, [sp], #4

000149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29

FRESULT Storage::copy(const char* pExistingFile, const char* pNewFile,
                        unsigned int* pReadTime,
                        unsigned int* pWriteTime,
                        unsigned int* pBytesTransferred)
{
   149aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149ae:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   149b2:	460c      	mov	r4, r1
   149b4:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    FIL dstFile;
    unsigned int readTimeMs = 0;
    unsigned int writeTimeMs = 0;

    // Open Existing file
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   149b6:	4601      	mov	r1, r0
   149b8:	2201      	movs	r2, #1
   149ba:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29
{
   149bc:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   149be:	f7fe f8e5 	bl	12b8c <f_open>
   149c2:	4682      	mov	sl, r0
   149c4:	b950      	cbnz	r0, 149dc <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:42
        return status;
    }

    // Open new file - overwrite if one exists
    if (FR_OK != (status = f_open(&dstFile, pNewFile, FA_CREATE_ALWAYS | FA_WRITE))) {
   149c6:	220a      	movs	r2, #10
   149c8:	4621      	mov	r1, r4
   149ca:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   149ce:	f7fe f8dd 	bl	12b8c <f_open>
   149d2:	4682      	mov	sl, r0
   149d4:	b138      	cbz	r0, 149e6 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:43
        f_close(&srcFile);
   149d6:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    if(0 != pBytesTransferred) {
        *pBytesTransferred = totalBytesTransferred;
    }

    f_close(&srcFile);
    f_close(&dstFile);
   149d8:	f7fe fb42 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:86

    return status;
}
   149dc:	4650      	mov	r0, sl
   149de:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   149e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   149e6:	466c      	mov	r4, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:51
    unsigned int totalBytesTransferred = 0;
   149e8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:34
    unsigned int writeTimeMs = 0;
   149ea:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:33
    unsigned int readTimeMs = 0;
   149ec:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   149ee:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:50
    unsigned int bytesWritten = 0;
   149f0:	9001      	str	r0, [sp, #4]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   149f2:	f7fb fd53 	bl	1049c <sys_get_uptime_us>
   149f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   149fa:	2300      	movs	r3, #0
   149fc:	f008 fedc 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
        if(FR_OK != (status = f_read(&srcFile, buffer, sizeof(buffer), &bytesRead)) ||
   14a00:	4623      	mov	r3, r4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a02:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
   14a04:	f44f 7200 	mov.w	r2, #512	; 0x200
   14a08:	a902      	add	r1, sp, #8
   14a0a:	a882      	add	r0, sp, #520	; 0x208
   14a0c:	f7fe f955 	bl	12cba <f_read>
   14a10:	4682      	mov	sl, r0
   14a12:	b908      	cbnz	r0, 14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56 (discriminator 2)
   14a14:	6822      	ldr	r2, [r4, #0]
   14a16:	b99a      	cbnz	r2, 14a40 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:72
    if(0 != pReadTime) {
   14a18:	f1b8 0f00 	cmp.w	r8, #0
   14a1c:	d001      	beq.n	14a22 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:73
        *pReadTime = readTimeMs;
   14a1e:	f8c8 7000 	str.w	r7, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:75
    if(0 != pWriteTime) {
   14a22:	f1b9 0f00 	cmp.w	r9, #0
   14a26:	d001      	beq.n	14a2c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:76
        *pWriteTime = writeTimeMs;
   14a28:	f8c9 6000 	str.w	r6, [r9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:78
    if(0 != pBytesTransferred) {
   14a2c:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   14a30:	b103      	cbz	r3, 14a34 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:79
        *pBytesTransferred = totalBytesTransferred;
   14a32:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:82
    f_close(&srcFile);
   14a34:	a882      	add	r0, sp, #520	; 0x208
   14a36:	f7fe fb13 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    f_close(&dstFile);
   14a3a:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14a3e:	e7cb      	b.n	149d8 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x2e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a40:	f7fb fd2c 	bl	1049c <sys_get_uptime_us>
   14a44:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a48:	2300      	movs	r3, #0
   14a4a:	f008 feb5 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:60
        readTimeMs += sys_get_uptime_ms() - startTime;
   14a4e:	ebb0 000b 	subs.w	r0, r0, fp
   14a52:	4407      	add	r7, r0
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a54:	f7fb fd22 	bl	1049c <sys_get_uptime_us>
   14a58:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a5c:	2300      	movs	r3, #0
   14a5e:	f008 feab 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
        if(FR_OK != (status = f_write(&dstFile, buffer, bytesRead, &bytesWritten)) ||
   14a62:	ab01      	add	r3, sp, #4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a64:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
   14a66:	6822      	ldr	r2, [r4, #0]
   14a68:	a902      	add	r1, sp, #8
   14a6a:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14a6e:	f7fe f9dc 	bl	12e2a <f_write>
   14a72:	4682      	mov	sl, r0
   14a74:	2800      	cmp	r0, #0
   14a76:	d1cf      	bne.n	14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63 (discriminator 2)
   14a78:	9901      	ldr	r1, [sp, #4]
   14a7a:	6822      	ldr	r2, [r4, #0]
   14a7c:	4291      	cmp	r1, r2
   14a7e:	d1cb      	bne.n	14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a80:	f7fb fd0c 	bl	1049c <sys_get_uptime_us>
   14a84:	2300      	movs	r3, #0
   14a86:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a8a:	f008 fe95 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14a8e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:67
        writeTimeMs += sys_get_uptime_ms() - startTime;
   14a90:	ebb0 000b 	subs.w	r0, r0, fp
   14a94:	4406      	add	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14a96:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:70
    }
   14a98:	e7ab      	b.n	149f2 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x48>

00014a9a <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   14a9a:	b5f0      	push	{r4, r5, r6, r7, lr}
   14a9c:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   14a9e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   14aa0:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14aa4:	460e      	mov	r6, r1
   14aa6:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14aa8:	4601      	mov	r1, r0
   14aaa:	2201      	movs	r2, #1
   14aac:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   14aae:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14ab0:	f7fe f86c 	bl	12b8c <f_open>
   14ab4:	4604      	mov	r4, r0
   14ab6:	b970      	cbnz	r0, 14ad6 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   14ab8:	b11d      	cbz	r5, 14ac2 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   14aba:	4629      	mov	r1, r5
   14abc:	a801      	add	r0, sp, #4
   14abe:	f7fe fae1 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   14ac2:	466b      	mov	r3, sp
   14ac4:	463a      	mov	r2, r7
   14ac6:	4631      	mov	r1, r6
   14ac8:	a801      	add	r0, sp, #4
   14aca:	f7fe f8f6 	bl	12cba <f_read>
   14ace:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   14ad0:	a801      	add	r0, sp, #4
   14ad2:	f7fe fac5 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   14ad6:	4620      	mov	r0, r4
   14ad8:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14adc:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014ade <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108

FRESULT Storage::write(const char* pFilename, void* pData, unsigned int bytesToWrite, unsigned int offset)
{
   14ade:	b5f0      	push	{r4, r5, r6, r7, lr}
   14ae0:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14ae2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108
{
   14ae4:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14ae8:	460e      	mov	r6, r1
   14aea:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113

    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14aec:	4601      	mov	r1, r0
   14aee:	220a      	movs	r2, #10
   14af0:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    unsigned int bytesWritten = 0;
   14af2:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113
    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14af4:	f7fe f84a 	bl	12b8c <f_open>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:114
    if(FR_OK == status)
   14af8:	4604      	mov	r4, r0
   14afa:	b970      	cbnz	r0, 14b1a <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:116
    {
        if(offset) {
   14afc:	b11d      	cbz	r5, 14b06 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:117
            f_lseek(&file, offset);
   14afe:	4629      	mov	r1, r5
   14b00:	a801      	add	r0, sp, #4
   14b02:	f7fe fabf 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:119
        }
        status = f_write(&file, pData, bytesToWrite, &bytesWritten);
   14b06:	466b      	mov	r3, sp
   14b08:	463a      	mov	r2, r7
   14b0a:	4631      	mov	r1, r6
   14b0c:	a801      	add	r0, sp, #4
   14b0e:	f7fe f98c 	bl	12e2a <f_write>
   14b12:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:120
        f_close(&file);
   14b14:	a801      	add	r0, sp, #4
   14b16:	f7fe faa3 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:124
    }

    return status;
}
   14b1a:	4620      	mov	r0, r4
   14b1c:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14b20:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014b22 <Storage::append(char const*, void const*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPKvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127

FRESULT Storage::append(const char* pFilename, const void* pData, unsigned int bytesToAppend, unsigned int offset)
{
   14b22:	b5f0      	push	{r4, r5, r6, r7, lr}
   14b24:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14b26:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127
{
   14b28:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14b2c:	460e      	mov	r6, r1
   14b2e:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14b30:	4601      	mov	r1, r0
   14b32:	2212      	movs	r2, #18
   14b34:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    unsigned int bytesWritten = 0;
   14b36:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14b38:	f7fe f828 	bl	12b8c <f_open>
   14b3c:	4604      	mov	r4, r0
   14b3e:	b970      	cbnz	r0, 14b5e <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:135
    {
        if(offset > 0) {
   14b40:	b18d      	cbz	r5, 14b66 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:136
            f_lseek(&file, offset);
   14b42:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
        }
        else {
            f_lseek(&file, f_size(&file));
   14b44:	a801      	add	r0, sp, #4
   14b46:	f7fe fa9d 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:142
        }

        status = f_write(&file, pData, bytesToAppend, &bytesWritten);
   14b4a:	466b      	mov	r3, sp
   14b4c:	463a      	mov	r2, r7
   14b4e:	4631      	mov	r1, r6
   14b50:	a801      	add	r0, sp, #4
   14b52:	f7fe f96a 	bl	12e2a <f_write>
   14b56:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:144

        f_close(&file);
   14b58:	a801      	add	r0, sp, #4
   14b5a:	f7fe fa81 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:148
    }

    return status;
}
   14b5e:	4620      	mov	r0, r4
   14b60:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
            f_lseek(&file, f_size(&file));
   14b66:	9904      	ldr	r1, [sp, #16]
   14b68:	e7ec      	b.n	14b44 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x22>

00014b6a <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   14b6a:	4613      	mov	r3, r2
   14b6c:	460a      	mov	r2, r1
   14b6e:	7901      	ldrb	r1, [r0, #4]
   14b70:	6800      	ldr	r0, [r0, #0]
   14b72:	f002 ba68 	b.w	17046 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

00014b76 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   14b76:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   14b78:	2200      	movs	r2, #0
   14b7a:	ab04      	add	r3, sp, #16
   14b7c:	f823 2d04 	strh.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   14b80:	2202      	movs	r2, #2
   14b82:	7904      	ldrb	r4, [r0, #4]
   14b84:	9200      	str	r2, [sp, #0]
   14b86:	6800      	ldr	r0, [r0, #0]
   14b88:	460a      	mov	r2, r1
   14b8a:	4621      	mov	r1, r4
   14b8c:	f002 fa44 	bl	17018 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   14b90:	f89d 000c 	ldrb.w	r0, [sp, #12]
   14b94:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   14b98:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14b9c:	b004      	add	sp, #16
   14b9e:	bd10      	pop	{r4, pc}

00014ba0 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   14ba0:	b510      	push	{r4, lr}
   14ba2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   14ba4:	2219      	movs	r2, #25
   14ba6:	212a      	movs	r1, #42	; 0x2a
   14ba8:	f7ff ffdf 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14bac:	220d      	movs	r2, #13
   14bae:	7921      	ldrb	r1, [r4, #4]
   14bb0:	6820      	ldr	r0, [r4, #0]
   14bb2:	f002 fa1d 	bl	16ff0 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   14bb6:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   14bba:	4258      	negs	r0, r3
   14bbc:	4158      	adcs	r0, r3
   14bbe:	bd10      	pop	{r4, pc}

00014bc0 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   14bc0:	4a04      	ldr	r2, [pc, #16]	; (14bd4 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   14bc2:	8813      	ldrh	r3, [r2, #0]
   14bc4:	2b1f      	cmp	r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   14bc6:	bfdf      	itttt	le
   14bc8:	1c58      	addle	r0, r3, #1
   14bca:	8010      	strhle	r0, [r2, #0]
   14bcc:	4a02      	ldrle	r2, [pc, #8]	; (14bd8 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   14bce:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   14bd2:	4770      	bx	lr
   14bd4:	2007c4f0 	.word	0x2007c4f0
   14bd8:	2007c470 	.word	0x2007c470

00014bdc <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   14bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   14bde:	4e15      	ldr	r6, [pc, #84]	; (14c34 <IR_Sensor::decodeIrCode()+0x58>)
   14be0:	8833      	ldrh	r3, [r6, #0]
   14be2:	2b01      	cmp	r3, #1
   14be4:	dd23      	ble.n	14c2e <IR_Sensor::decodeIrCode()+0x52>
   14be6:	4a14      	ldr	r2, [pc, #80]	; (14c38 <IR_Sensor::decodeIrCode()+0x5c>)
   14be8:	2000      	movs	r0, #0
   14bea:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   14bec:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   14bee:	4298      	cmp	r0, r3
   14bf0:	da08      	bge.n	14c04 <IR_Sensor::decodeIrCode()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   14bf2:	f852 1f04 	ldr.w	r1, [r2, #4]!
   14bf6:	3001      	adds	r0, #1
   14bf8:	f852 4c04 	ldr.w	r4, [r2, #-4]
   14bfc:	1b09      	subs	r1, r1, r4
   14bfe:	f842 1c04 	str.w	r1, [r2, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   14c02:	e7f4      	b.n	14bee <IR_Sensor::decodeIrCode()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14c04:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   14c06:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   14c0a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14c0c:	6868      	ldr	r0, [r5, #4]
   14c0e:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14c12:	b28a      	uxth	r2, r1
   14c14:	4293      	cmp	r3, r2
   14c16:	dd08      	ble.n	14c2a <IR_Sensor::decodeIrCode()+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   14c18:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   14c1c:	3101      	adds	r1, #1
   14c1e:	42b8      	cmp	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   14c20:	bf3c      	itt	cc
   14c22:	fa0e f202 	lslcc.w	r2, lr, r2
   14c26:	4314      	orrcc	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14c28:	e7f3      	b.n	14c12 <IR_Sensor::decodeIrCode()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   14c2a:	4b04      	ldr	r3, [pc, #16]	; (14c3c <IR_Sensor::decodeIrCode()+0x60>)
   14c2c:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   14c2e:	2300      	movs	r3, #0
   14c30:	8033      	strh	r3, [r6, #0]
   14c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14c34:	2007c4f0 	.word	0x2007c4f0
   14c38:	2007c470 	.word	0x2007c470
   14c3c:	2007c4f4 	.word	0x2007c4f4

00014c40 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   14c40:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   14c42:	2101      	movs	r1, #1
   14c44:	2002      	movs	r0, #2
   14c46:	f7fb fe69 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14c4a:	4b08      	ldr	r3, [pc, #32]	; (14c6c <IR_Sensor::init()+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   14c4c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14c4e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14c50:	f022 0207 	bic.w	r2, r2, #7
   14c54:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   14c56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14c58:	f042 0206 	orr.w	r2, r2, #6
   14c5c:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   14c5e:	4a04      	ldr	r2, [pc, #16]	; (14c70 <IR_Sensor::init()+0x30>)
   14c60:	68d3      	ldr	r3, [r2, #12]
   14c62:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   14c66:	60d3      	str	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   14c68:	bd08      	pop	{r3, pc}
   14c6a:	bf00      	nop
   14c6c:	40008000 	.word	0x40008000
   14c70:	4002c000 	.word	0x4002c000

00014c74 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   14c74:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c76:	4b04      	ldr	r3, [pc, #16]	; (14c88 <LED_Display::setLeftDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   14c78:	7141      	strb	r1, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c7a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14c7e:	5c5a      	ldrb	r2, [r3, r1]
   14c80:	2103      	movs	r1, #3
   14c82:	f7ff ff72 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
   14c86:	bd08      	pop	{r3, pc}
   14c88:	00024ff8 	.word	0x00024ff8

00014c8c <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14c8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c8e:	4b04      	ldr	r3, [pc, #16]	; (14ca0 <LED_Display::setRightDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   14c90:	7181      	strb	r1, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c92:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14c96:	5c5a      	ldrb	r2, [r3, r1]
   14c98:	2102      	movs	r1, #2
   14c9a:	f7ff ff66 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
   14c9e:	bd08      	pop	{r3, pc}
   14ca0:	00024ff8 	.word	0x00024ff8

00014ca4 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   14ca4:	b538      	push	{r3, r4, r5, lr}
   14ca6:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   14ca8:	7901      	ldrb	r1, [r0, #4]
   14caa:	6800      	ldr	r0, [r0, #0]
   14cac:	f002 f9e3 	bl	17076 <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   14cb0:	4605      	mov	r5, r0
   14cb2:	b188      	cbz	r0, 14cd8 <LED_Display::init()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   14cb4:	2200      	movs	r2, #0
   14cb6:	2106      	movs	r1, #6
   14cb8:	4620      	mov	r0, r4
   14cba:	f7ff ff56 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   14cbe:	2200      	movs	r2, #0
   14cc0:	2107      	movs	r1, #7
   14cc2:	4620      	mov	r0, r4
   14cc4:	f7ff ff51 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   14cc8:	212e      	movs	r1, #46	; 0x2e
   14cca:	4620      	mov	r0, r4
   14ccc:	f7ff ffd2 	bl	14c74 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   14cd0:	212e      	movs	r1, #46	; 0x2e
   14cd2:	4620      	mov	r0, r4
   14cd4:	f7ff ffda 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   14cd8:	4628      	mov	r0, r5
   14cda:	bd38      	pop	{r3, r4, r5, pc}

00014cdc <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14cdc:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14cde:	2464      	movs	r4, #100	; 0x64
   14ce0:	fbb1 f3f4 	udiv	r3, r1, r4
   14ce4:	fb03 1414 	mls	r4, r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14ce8:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14cea:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14cec:	fbb4 f5f1 	udiv	r5, r4, r1
   14cf0:	fb01 4115 	mls	r1, r1, r5, r4
   14cf4:	3130      	adds	r1, #48	; 0x30
   14cf6:	b2c9      	uxtb	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14cf8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14cfa:	f7ff ffc7 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   14cfe:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14d00:	bf88      	it	hi
   14d02:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   14d06:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   14d08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   14d0c:	bf94      	ite	ls
   14d0e:	2120      	movls	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14d10:	b2c9      	uxtbhi	r1, r1
   14d12:	f7ff bfaf 	b.w	14c74 <LED_Display::setLeftDigit(char)>

00014d16 <LED::init()>:
_ZN3LED4initEv():
   14d16:	2001      	movs	r0, #1
   14d18:	4770      	bx	lr
   14d1a:	Address 0x0000000000014d1a is out of bounds.


00014d1c <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   14d1c:	b538      	push	{r3, r4, r5, lr}
   14d1e:	460c      	mov	r4, r1
   14d20:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   14d22:	f003 fa3f 	bl	181a4 <vPortEnterCritical>
   14d26:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   14d28:	f004 030f 	and.w	r3, r4, #15
   14d2c:	702b      	strb	r3, [r5, #0]
   14d2e:	4b0e      	ldr	r3, [pc, #56]	; (14d68 <LED::setAll(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   14d30:	f014 0f01 	tst.w	r4, #1
   14d34:	bf14      	ite	ne
   14d36:	61da      	strne	r2, [r3, #28]
   14d38:	619a      	streq	r2, [r3, #24]
   14d3a:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   14d3c:	f014 0f02 	tst.w	r4, #2
   14d40:	bf14      	ite	ne
   14d42:	61da      	strne	r2, [r3, #28]
   14d44:	619a      	streq	r2, [r3, #24]
   14d46:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   14d48:	f014 0f04 	tst.w	r4, #4
   14d4c:	bf14      	ite	ne
   14d4e:	61da      	strne	r2, [r3, #28]
   14d50:	619a      	streq	r2, [r3, #24]
   14d52:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   14d56:	f014 0f08 	tst.w	r4, #8
   14d5a:	bf14      	ite	ne
   14d5c:	61da      	strne	r2, [r3, #28]
   14d5e:	619a      	streq	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   14d60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   14d64:	f003 ba2e 	b.w	181c4 <vPortExitCritical>
   14d68:	2009c020 	.word	0x2009c020

00014d6c <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   14d6c:	2001      	movs	r0, #1
   14d6e:	4770      	bx	lr

00014d70 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   14d70:	2002      	movs	r0, #2
   14d72:	f002 be9b 	b.w	17aac <adc0_get_reading>

00014d76 <Switches::init()>:
_ZN8Switches4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   14d76:	2001      	movs	r0, #1
   14d78:	4770      	bx	lr
   14d7a:	Address 0x0000000000014d7a is out of bounds.


00014d7c <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   14d7c:	4b04      	ldr	r3, [pc, #16]	; (14d90 <Switches::getSwitchValues()+0x14>)
   14d7e:	695b      	ldr	r3, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   14d80:	0b18      	lsrs	r0, r3, #12
   14d82:	f000 000c 	and.w	r0, r0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   14d86:	f3c3 2341 	ubfx	r3, r3, #9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   14d8a:	4318      	orrs	r0, r3
   14d8c:	4770      	bx	lr
   14d8e:	bf00      	nop
   14d90:	2009c020 	.word	0x2009c020

00014d94 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   14d94:	b510      	push	{r4, lr}
   14d96:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14d98:	2281      	movs	r2, #129	; 0x81
   14d9a:	2101      	movs	r1, #1
   14d9c:	f7ff fee5 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14da0:	2201      	movs	r2, #1
   14da2:	7921      	ldrb	r1, [r4, #4]
   14da4:	6820      	ldr	r0, [r4, #0]
   14da6:	f002 f923 	bl	16ff0 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   14daa:	f010 0f60 	tst.w	r0, #96	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   14dae:	bf14      	ite	ne
   14db0:	2001      	movne	r0, #1
   14db2:	2000      	moveq	r0, #0
   14db4:	bd10      	pop	{r4, pc}

00014db6 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   14db6:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14db8:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   14dba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14dbc:	f7ff fedb 	bl	14b76 <i2c2_device::get16BitRegister(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14dc0:	2281      	movs	r2, #129	; 0x81
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14dc2:	b205      	sxth	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14dc4:	2101      	movs	r1, #1
   14dc6:	4620      	mov	r0, r4
   14dc8:	f7ff fecf 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   14dcc:	2010      	movs	r0, #16
   14dce:	fb95 f0f0 	sdiv	r0, r5, r0
   14dd2:	f008 fb07 	bl	1d3e4 <__aeabi_i2f>
   14dd6:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   14dda:	f008 fb57 	bl	1d48c <__aeabi_fmul>
   14dde:	68a1      	ldr	r1, [r4, #8]
   14de0:	f008 fa4c 	bl	1d27c <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   14de4:	bd38      	pop	{r3, r4, r5, pc}
   14de6:	Address 0x0000000000014de6 is out of bounds.


00014de8 <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   14de8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   14dea:	f7ff ffe4 	bl	14db6 <I2C_Temp::getCelsius()>
   14dee:	4905      	ldr	r1, [pc, #20]	; (14e04 <I2C_Temp::getFarenheit()+0x1c>)
   14df0:	f008 fb4c 	bl	1d48c <__aeabi_fmul>
   14df4:	4904      	ldr	r1, [pc, #16]	; (14e08 <I2C_Temp::getFarenheit()+0x20>)
   14df6:	f008 fbfd 	bl	1d5f4 <__aeabi_fdiv>
   14dfa:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   14dfe:	f008 fa3d 	bl	1d27c <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   14e02:	bd08      	pop	{r3, pc}
   14e04:	41100000 	.word	0x41100000
   14e08:	40a00000 	.word	0x40a00000

00014e0c <tlm_stream_for_each_component_var>:
tlm_stream_for_each_component_var():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:56

/**
 * Callback function for each component's variables
 */
static bool tlm_stream_for_each_component_var(void *elm_ptr, void *arg1, void *arg2, void *print_ascii)
{
   14e0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14e10:	4606      	mov	r6, r0
   14e12:	b0c1      	sub	sp, #260	; 0x104
   14e14:	4615      	mov	r5, r2
   14e16:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:64
    stream_callback_type stream = arg1;
    void *stream_arg = arg2;
    char *p = (char*)(var->data_ptr);
    uint32_t i = 0;

    if (NULL == stream || NULL == var) {
   14e18:	460c      	mov	r4, r1
   14e1a:	2900      	cmp	r1, #0
   14e1c:	d050      	beq.n	14ec0 <tlm_stream_for_each_component_var+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
        return false;
    }

    stream((var->name), stream_arg);
   14e1e:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:61
    char *p = (char*)(var->data_ptr);
   14e20:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
    stream((var->name), stream_arg);
   14e22:	6800      	ldr	r0, [r0, #0]
   14e24:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:69
    stream(":", stream_arg);
   14e26:	4629      	mov	r1, r5
   14e28:	4826      	ldr	r0, [pc, #152]	; (14ec4 <tlm_stream_for_each_component_var+0xb8>)
   14e2a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:70
    sprintf(buff, "%" PRIi32 ":", var->elm_size_bytes);
   14e2c:	68b2      	ldr	r2, [r6, #8]
   14e2e:	4926      	ldr	r1, [pc, #152]	; (14ec8 <tlm_stream_for_each_component_var+0xbc>)
   14e30:	4668      	mov	r0, sp
   14e32:	f00b f815 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:71
    stream(buff, stream_arg);
   14e36:	4629      	mov	r1, r5
   14e38:	4668      	mov	r0, sp
   14e3a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:72
    sprintf(buff, "%" PRIi32 ":", var->elm_arr_size);
   14e3c:	68f2      	ldr	r2, [r6, #12]
   14e3e:	4922      	ldr	r1, [pc, #136]	; (14ec8 <tlm_stream_for_each_component_var+0xbc>)
   14e40:	4668      	mov	r0, sp
   14e42:	f00b f80d 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:73
    stream(buff, stream_arg);
   14e46:	4629      	mov	r1, r5
   14e48:	4668      	mov	r0, sp
   14e4a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:74
    sprintf(buff, "%i:", var->elm_type);
   14e4c:	491f      	ldr	r1, [pc, #124]	; (14ecc <tlm_stream_for_each_component_var+0xc0>)
   14e4e:	7c32      	ldrb	r2, [r6, #16]
   14e50:	4668      	mov	r0, sp
   14e52:	f00b f805 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:75
    stream(buff, stream_arg);
   14e56:	4629      	mov	r1, r5
   14e58:	4668      	mov	r0, sp
   14e5a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:77

    if (print_ascii)
   14e5c:	f1b8 0f00 	cmp.w	r8, #0
   14e60:	d00f      	beq.n	14e82 <tlm_stream_for_each_component_var+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:79
    {
        tlm_variable_print_value(var, buff, sizeof(buff));
   14e62:	4669      	mov	r1, sp
   14e64:	f44f 7280 	mov.w	r2, #256	; 0x100
   14e68:	4630      	mov	r0, r6
   14e6a:	f000 fa73 	bl	15354 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:80
        stream(buff, stream_arg);
   14e6e:	4629      	mov	r1, r5
   14e70:	4668      	mov	r0, sp
   14e72:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:96
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
            stream(buff, stream_arg);
        }
    }

    stream("\n", stream_arg);
   14e74:	4816      	ldr	r0, [pc, #88]	; (14ed0 <tlm_stream_for_each_component_var+0xc4>)
   14e76:	4629      	mov	r1, r5
   14e78:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:98

    return true;
   14e7a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:99
}
   14e7c:	b041      	add	sp, #260	; 0x104
   14e7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   14e82:	783a      	ldrb	r2, [r7, #0]
   14e84:	4913      	ldr	r1, [pc, #76]	; (14ed4 <tlm_stream_for_each_component_var+0xc8>)
   14e86:	4668      	mov	r0, sp
   14e88:	f00a ffea 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:86
        stream(buff, stream_arg);
   14e8c:	4629      	mov	r1, r5
   14e8e:	4668      	mov	r0, sp
   14e90:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14e92:	68b3      	ldr	r3, [r6, #8]
   14e94:	68f6      	ldr	r6, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   14e96:	f8df 9040 	ldr.w	r9, [pc, #64]	; 14ed8 <tlm_stream_for_each_component_var+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14e9a:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   14e9c:	f107 0801 	add.w	r8, r7, #1
   14ea0:	3601      	adds	r6, #1
   14ea2:	eba6 0308 	sub.w	r3, r6, r8
   14ea6:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89 (discriminator 1)
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14ea8:	2b01      	cmp	r3, #1
   14eaa:	d9e3      	bls.n	14e74 <tlm_stream_for_each_component_var+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   14eac:	4649      	mov	r1, r9
   14eae:	f818 2b01 	ldrb.w	r2, [r8], #1
   14eb2:	4668      	mov	r0, sp
   14eb4:	f00a ffd4 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:92
            stream(buff, stream_arg);
   14eb8:	4629      	mov	r1, r5
   14eba:	4668      	mov	r0, sp
   14ebc:	47a0      	blx	r4
   14ebe:	e7f0      	b.n	14ea2 <tlm_stream_for_each_component_var+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:65
        return false;
   14ec0:	4608      	mov	r0, r1
   14ec2:	e7db      	b.n	14e7c <tlm_stream_for_each_component_var+0x70>
   14ec4:	00025db8 	.word	0x00025db8
   14ec8:	00025078 	.word	0x00025078
   14ecc:	0002507d 	.word	0x0002507d
   14ed0:	00026517 	.word	0x00026517
   14ed4:	00025082 	.word	0x00025082
   14ed8:	00025081 	.word	0x00025081

00014edc <tlm_stream_file_ptr>:
tlm_stream_file_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:48
{
   14edc:	b570      	push	{r4, r5, r6, lr}
   14ede:	460d      	mov	r5, r1
   14ee0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   14ee2:	f00b f89d 	bl	20020 <strlen>
   14ee6:	462b      	mov	r3, r5
   14ee8:	4602      	mov	r2, r0
   14eea:	2101      	movs	r1, #1
   14eec:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:50
}
   14eee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   14ef2:	f009 b939 	b.w	1e168 <fwrite>
   14ef6:	Address 0x0000000000014ef6 is out of bounds.


00014ef8 <tlm_stream_one>:
tlm_stream_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:176
/**
 * Callback function for each component
 * @param sca  Stream callback argument
 */
void tlm_stream_one(tlm_component *comp, stream_callback_type stream, void *print_ascii, void *sca)
{
   14ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
   14efa:	460c      	mov	r4, r1
   14efc:	b087      	sub	sp, #28
   14efe:	4617      	mov	r7, r2
   14f00:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177
    if (NULL == comp || NULL == stream) {
   14f02:	4606      	mov	r6, r0
   14f04:	b348      	cbz	r0, 14f5a <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177 (discriminator 1)
   14f06:	b341      	cbz	r1, 14f5a <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:182
        return;
    }

    /* sca : stream callback argument */
    char buff[16] = { 0 };
   14f08:	2210      	movs	r2, #16
   14f0a:	2100      	movs	r1, #0
   14f0c:	a802      	add	r0, sp, #8
   14f0e:	f009 fb2d 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:183
    sprintf(buff, "%u\n", (unsigned int)c_list_node_count((comp->var_list)));
   14f12:	6870      	ldr	r0, [r6, #4]
   14f14:	f000 fcb4 	bl	15880 <c_list_node_count>
   14f18:	4911      	ldr	r1, [pc, #68]	; (14f60 <tlm_stream_one+0x68>)
   14f1a:	4602      	mov	r2, r0
   14f1c:	a802      	add	r0, sp, #8
   14f1e:	f00a ff9f 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:186

    /* Send: "START:<name>:<#>\n" */
    stream("START:", sca);
   14f22:	4629      	mov	r1, r5
   14f24:	480f      	ldr	r0, [pc, #60]	; (14f64 <tlm_stream_one+0x6c>)
   14f26:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:187
    stream(comp->name, sca);
   14f28:	4629      	mov	r1, r5
   14f2a:	6830      	ldr	r0, [r6, #0]
   14f2c:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:188
    stream(":", sca);
   14f2e:	4629      	mov	r1, r5
   14f30:	480d      	ldr	r0, [pc, #52]	; (14f68 <tlm_stream_one+0x70>)
   14f32:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:189
    stream(buff, sca);
   14f34:	4629      	mov	r1, r5
   14f36:	a802      	add	r0, sp, #8
   14f38:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:194

    /* Now for each variable list of this component, make a call-back to our
     * component for each function that will stream data of each variable
     */
    c_list_for_each_elm((comp->var_list), tlm_stream_for_each_component_var,
   14f3a:	9700      	str	r7, [sp, #0]
   14f3c:	462b      	mov	r3, r5
   14f3e:	4622      	mov	r2, r4
   14f40:	490a      	ldr	r1, [pc, #40]	; (14f6c <tlm_stream_one+0x74>)
   14f42:	6870      	ldr	r0, [r6, #4]
   14f44:	f000 fce7 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:201
                        sca,        /* arg2 */
                        print_ascii /* arg3 */
                        );

    /* Send: "END:<name>\n" */
    stream("END:", sca);
   14f48:	4629      	mov	r1, r5
   14f4a:	4809      	ldr	r0, [pc, #36]	; (14f70 <tlm_stream_one+0x78>)
   14f4c:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:202
    stream((comp->name), sca);
   14f4e:	4629      	mov	r1, r5
   14f50:	6830      	ldr	r0, [r6, #0]
   14f52:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:203
    stream("\n", sca);
   14f54:	4629      	mov	r1, r5
   14f56:	4807      	ldr	r0, [pc, #28]	; (14f74 <tlm_stream_one+0x7c>)
   14f58:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:204
}
   14f5a:	b007      	add	sp, #28
   14f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14f5e:	bf00      	nop
   14f60:	00025773 	.word	0x00025773
   14f64:	00025087 	.word	0x00025087
   14f68:	00025db8 	.word	0x00025db8
   14f6c:	00014e0d 	.word	0x00014e0d
   14f70:	0002508e 	.word	0x0002508e
   14f74:	00026517 	.word	0x00026517

00014f78 <tlm_stream_all_args>:
tlm_stream_all_args():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:215
    stream_callback_type stream_func = args[0];
    void *user_arg = args[1];
    void *print_ascii_arg = args[2];

    /* Now pass the arguments to tlm_stream_one() */
    tlm_stream_one(comp_ptr, stream_func, print_ascii_arg, user_arg);
   14f78:	684b      	ldr	r3, [r1, #4]
   14f7a:	688a      	ldr	r2, [r1, #8]
   14f7c:	6809      	ldr	r1, [r1, #0]
   14f7e:	f7ff bfbb 	b.w	14ef8 <tlm_stream_one>
   14f82:	Address 0x0000000000014f82 is out of bounds.


00014f84 <tlm_stream_all>:
tlm_stream_all():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:219
}

void tlm_stream_all(stream_callback_type stream_func, void *arg, bool ascii)
{
   14f84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:224
    /* We need to pass 3 args, but only have 2 possible arguments that we can pass to
     * tlm_component_for_each() API, so use a double pointer here.
     */
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
    void *args[] = { (void*) stream_func, arg, print_ascii_arg };
   14f86:	9001      	str	r0, [sp, #4]
   14f88:	9102      	str	r1, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:223
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
   14f8a:	9203      	str	r2, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:232
     * Simply tell the telemetry component to call our call-back with our
     * stream function as the argument.  We will get the callback function
     * called with pointer to each telemetry component, along with our
     * argument which is the stream function itself
     */
    tlm_component_for_each((tlm_comp_callback)tlm_stream_all_args, args, NULL);
   14f8c:	a901      	add	r1, sp, #4
   14f8e:	2200      	movs	r2, #0
   14f90:	4802      	ldr	r0, [pc, #8]	; (14f9c <tlm_stream_all+0x18>)
   14f92:	f000 f867 	bl	15064 <tlm_component_for_each>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:233
}
   14f96:	b005      	add	sp, #20
   14f98:	f85d fb04 	ldr.w	pc, [sp], #4
   14f9c:	00014f79 	.word	0x00014f79

00014fa0 <tlm_stream_one_file>:
tlm_stream_one_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:238

void tlm_stream_one_file(tlm_component *comp_ptr, FILE *file)
{
    void * print_ascii = NULL; /* Do not print ASCII (print hex instead) */
    if(file) {
   14fa0:	460b      	mov	r3, r1
   14fa2:	b119      	cbz	r1, 14fac <tlm_stream_one_file+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:239
        tlm_stream_one(comp_ptr, tlm_stream_file_ptr, print_ascii, file);
   14fa4:	2200      	movs	r2, #0
   14fa6:	4902      	ldr	r1, [pc, #8]	; (14fb0 <tlm_stream_one_file+0x10>)
   14fa8:	f7ff bfa6 	b.w	14ef8 <tlm_stream_one>
   14fac:	4770      	bx	lr
   14fae:	bf00      	nop
   14fb0:	00014edd 	.word	0x00014edd

00014fb4 <tlm_component_for_each_callback>:
tlm_component_for_each_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:36
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
}

static bool tlm_component_for_each_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   14fb4:	b510      	push	{r4, lr}
   14fb6:	460c      	mov	r4, r1
   14fb8:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:38
    tlm_comp_callback callback = arg1;
    callback(elm_ptr, arg2, arg3);
   14fba:	461a      	mov	r2, r3
   14fbc:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:40
    return true;
}
   14fbe:	2001      	movs	r0, #1
   14fc0:	bd10      	pop	{r4, pc}

00014fc2 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29
{
   14fc2:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    return (0 != strcmp(comp->name, new_comp_name));
   14fc4:	6800      	ldr	r0, [r0, #0]
   14fc6:	f00b f819 	bl	1fffc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   14fca:	3000      	adds	r0, #0
   14fcc:	bf18      	it	ne
   14fce:	2001      	movne	r0, #1
   14fd0:	bd08      	pop	{r3, pc}
   14fd2:	Address 0x0000000000014fd2 is out of bounds.


00014fd4 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   14fd4:	b507      	push	{r0, r1, r2, lr}
   14fd6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   14fd8:	b130      	cbz	r0, 14fe8 <tlm_component_get_by_name+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   14fda:	4602      	mov	r2, r0
   14fdc:	4804      	ldr	r0, [pc, #16]	; (14ff0 <tlm_component_get_by_name+0x1c>)
   14fde:	9300      	str	r3, [sp, #0]
   14fe0:	4904      	ldr	r1, [pc, #16]	; (14ff4 <tlm_component_get_by_name+0x20>)
   14fe2:	6800      	ldr	r0, [r0, #0]
   14fe4:	f000 fc81 	bl	158ea <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   14fe8:	b003      	add	sp, #12
   14fea:	f85d fb04 	ldr.w	pc, [sp], #4
   14fee:	bf00      	nop
   14ff0:	2007c4f8 	.word	0x2007c4f8
   14ff4:	00014fc3 	.word	0x00014fc3

00014ff8 <tlm_component_add>:
tlm_component_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   14ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   14ffa:	4606      	mov	r6, r0
   14ffc:	b910      	cbnz	r0, 15004 <tlm_component_add+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   14ffe:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   15000:	4620      	mov	r0, r4
   15002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   15004:	7803      	ldrb	r3, [r0, #0]
   15006:	2b00      	cmp	r3, #0
   15008:	d0f9      	beq.n	14ffe <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   1500a:	4d15      	ldr	r5, [pc, #84]	; (15060 <tlm_component_add+0x68>)
   1500c:	682b      	ldr	r3, [r5, #0]
   1500e:	b913      	cbnz	r3, 15016 <tlm_component_add+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   15010:	f000 fc2c 	bl	1586c <c_list_create>
   15014:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   15016:	4630      	mov	r0, r6
   15018:	f7ff ffdc 	bl	14fd4 <tlm_component_get_by_name>
   1501c:	4607      	mov	r7, r0
   1501e:	2800      	cmp	r0, #0
   15020:	d1ed      	bne.n	14ffe <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   15022:	2008      	movs	r0, #8
   15024:	f009 fa3e 	bl	1e4a4 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   15028:	4604      	mov	r4, r0
   1502a:	2800      	cmp	r0, #0
   1502c:	d0e7      	beq.n	14ffe <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   1502e:	e880 00c0 	stmia.w	r0, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   15032:	f000 fc1b 	bl	1586c <c_list_create>
   15036:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   15038:	b918      	cbnz	r0, 15042 <tlm_component_add+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   1503a:	4620      	mov	r0, r4
   1503c:	f009 fa3a 	bl	1e4b4 <free>
   15040:	e7dd      	b.n	14ffe <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   15042:	6828      	ldr	r0, [r5, #0]
   15044:	4621      	mov	r1, r4
   15046:	f000 fc1e 	bl	15886 <c_list_insert_elm_end>
   1504a:	4605      	mov	r5, r0
   1504c:	2800      	cmp	r0, #0
   1504e:	d1d7      	bne.n	15000 <tlm_component_add+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   15050:	6860      	ldr	r0, [r4, #4]
   15052:	f009 fa2f 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   15056:	4620      	mov	r0, r4
   15058:	f009 fa2c 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   1505c:	462c      	mov	r4, r5
   1505e:	e7cf      	b.n	15000 <tlm_component_add+0x8>
   15060:	2007c4f8 	.word	0x2007c4f8

00015064 <tlm_component_for_each>:
tlm_component_for_each():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:97

void tlm_component_for_each(tlm_comp_callback callback, void *arg1, void *arg2)
{
   15064:	b507      	push	{r0, r1, r2, lr}
   15066:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:103
    /*
     * c_list_for_each_elm() callback only has room for 3 arguments:
     * We only take 2 customer arguments because one of the argument is
     * our own callback
     */
    if (NULL != callback) {
   15068:	b130      	cbz	r0, 15078 <tlm_component_for_each+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:104
        c_list_for_each_elm(mp_tlm_component_list, tlm_component_for_each_callback,
   1506a:	9200      	str	r2, [sp, #0]
   1506c:	4602      	mov	r2, r0
   1506e:	4804      	ldr	r0, [pc, #16]	; (15080 <tlm_component_for_each+0x1c>)
   15070:	4904      	ldr	r1, [pc, #16]	; (15084 <tlm_component_for_each+0x20>)
   15072:	6800      	ldr	r0, [r0, #0]
   15074:	f000 fc4f 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:107
                            callback, arg1, arg2);
    }
}
   15078:	b003      	add	sp, #12
   1507a:	f85d fb04 	ldr.w	pc, [sp], #4
   1507e:	bf00      	nop
   15080:	2007c4f8 	.word	0x2007c4f8
   15084:	00014fb5 	.word	0x00014fb5

00015088 <tlm_variable_check_dup>:
tlm_variable_check_dup():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:32


/** Private function of this file */
static bool tlm_variable_check_dup(void *elm_ptr, void *arg1,
                                     void *arg2, void *arg3)
{
   15088:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36
    tlm_reg_var_type *reg_var = elm_ptr;
    tlm_reg_var_type *new_var = arg1;

    return (reg_var->data_ptr != new_var->data_ptr &&
   1508a:	6842      	ldr	r2, [r0, #4]
   1508c:	684b      	ldr	r3, [r1, #4]
   1508e:	429a      	cmp	r2, r3
   15090:	d007      	beq.n	150a2 <tlm_variable_check_dup+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:37 (discriminator 1)
            0 != strcmp(reg_var->name, new_var->name)
   15092:	6809      	ldr	r1, [r1, #0]
   15094:	6800      	ldr	r0, [r0, #0]
   15096:	f00a ffb1 	bl	1fffc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36 (discriminator 1)
    return (reg_var->data_ptr != new_var->data_ptr &&
   1509a:	3000      	adds	r0, #0
   1509c:	bf18      	it	ne
   1509e:	2001      	movne	r0, #1
   150a0:	bd08      	pop	{r3, pc}
   150a2:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:39
            );
}
   150a4:	bd08      	pop	{r3, pc}

000150a6 <tlm_component_find_callback>:
tlm_component_find_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:43

/** Private function of this file */
static bool tlm_component_find_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   150a6:	b508      	push	{r3, lr}
   150a8:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:50
    const char *name = arg1;

    /* If we locate the name, make copy of the pointer, and return false
     * to stop iterating further through the list
     */
    return (0 != strcmp(name, reg_var->name));
   150aa:	6801      	ldr	r1, [r0, #0]
   150ac:	4618      	mov	r0, r3
   150ae:	f00a ffa5 	bl	1fffc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:51
}
   150b2:	3000      	adds	r0, #0
   150b4:	bf18      	it	ne
   150b6:	2001      	movne	r0, #1
   150b8:	bd08      	pop	{r3, pc}
   150ba:	Address 0x00000000000150ba is out of bounds.


000150bc <tlm_variable_register>:
tlm_variable_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:61
                             const char *name,
                             const void *data_ptr,
                             const uint16_t data_size,
                             const uint16_t arr_size,
                             tlm_type type)
{
   150bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   150c0:	4689      	mov	r9, r1
   150c2:	4690      	mov	r8, r2
   150c4:	461f      	mov	r7, r3
   150c6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   150ca:	4606      	mov	r6, r0
   150cc:	b920      	cbnz	r0, 150d8 <tlm_variable_register+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:63
        return false;
   150ce:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:92
        free(new_var);
        return false;
    }

    return true;
}
   150d0:	4628      	mov	r0, r5
   150d2:	b003      	add	sp, #12
   150d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 1)
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   150d8:	2900      	cmp	r1, #0
   150da:	d0f8      	beq.n	150ce <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 2)
   150dc:	2a00      	cmp	r2, #0
   150de:	d0f6      	beq.n	150ce <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 3)
   150e0:	2b00      	cmp	r3, #0
   150e2:	d0f4      	beq.n	150ce <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:66
    tlm_reg_var_type *new_var = malloc(sizeof(tlm_reg_var_type));
   150e4:	2014      	movs	r0, #20
   150e6:	f009 f9dd 	bl	1e4a4 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:67
    if(NULL == new_var) {
   150ea:	4604      	mov	r4, r0
   150ec:	2800      	cmp	r0, #0
   150ee:	d0ee      	beq.n	150ce <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   150f0:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   150f4:	2d00      	cmp	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   150f6:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   150f8:	bf08      	it	eq
   150fa:	2501      	moveq	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   150fc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   150fe:	60c5      	str	r5, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:74
    new_var->name = name;
   15100:	f8c0 9000 	str.w	r9, [r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:75
    new_var->data_ptr = data_ptr;
   15104:	f8c0 8004 	str.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:76
    new_var->elm_size_bytes = data_size;
   15108:	6087      	str	r7, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   1510a:	9300      	str	r3, [sp, #0]
   1510c:	4602      	mov	r2, r0
   1510e:	4909      	ldr	r1, [pc, #36]	; (15134 <tlm_variable_register+0x78>)
   15110:	6870      	ldr	r0, [r6, #4]
   15112:	f000 fc00 	bl	15916 <c_list_for_each_elm>
   15116:	4605      	mov	r5, r0
   15118:	b918      	cbnz	r0, 15122 <tlm_variable_register+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:87
        free(new_var);
   1511a:	4620      	mov	r0, r4
   1511c:	f009 f9ca 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:88
        return false;
   15120:	e7d6      	b.n	150d0 <tlm_variable_register+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:86
    if (!c_list_insert_elm_end(comp_ptr->var_list, new_var)) {
   15122:	4621      	mov	r1, r4
   15124:	6870      	ldr	r0, [r6, #4]
   15126:	f000 fbae 	bl	15886 <c_list_insert_elm_end>
   1512a:	4605      	mov	r5, r0
   1512c:	2800      	cmp	r0, #0
   1512e:	d1cf      	bne.n	150d0 <tlm_variable_register+0x14>
   15130:	e7f3      	b.n	1511a <tlm_variable_register+0x5e>
   15132:	bf00      	nop
   15134:	00015089 	.word	0x00015089

00015138 <tlm_variable_get_by_comp_and_name>:
tlm_variable_get_by_comp_and_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:105
    }
    return reg_var;
}

const tlm_reg_var_type* tlm_variable_get_by_comp_and_name(const char *comp_name, const char *name)
{
   15138:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1513a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:107
    tlm_reg_var_type *reg_var = NULL;
    tlm_component *comp_ptr = tlm_component_get_by_name(comp_name);
   1513c:	f7ff ff4a 	bl	14fd4 <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109

    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   15140:	b148      	cbz	r0, 15156 <tlm_variable_get_by_comp_and_name+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 1)
   15142:	b155      	cbz	r5, 1515a <tlm_variable_get_by_comp_and_name+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 2)
   15144:	782c      	ldrb	r4, [r5, #0]
   15146:	2300      	movs	r3, #0
   15148:	b14c      	cbz	r4, 1515e <tlm_variable_get_by_comp_and_name+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:110
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   1514a:	9300      	str	r3, [sp, #0]
   1514c:	462a      	mov	r2, r5
   1514e:	4905      	ldr	r1, [pc, #20]	; (15164 <tlm_variable_get_by_comp_and_name+0x2c>)
   15150:	6840      	ldr	r0, [r0, #4]
   15152:	f000 fbca 	bl	158ea <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:115
                                  (void*)name, NULL, NULL);
    }

    return reg_var;
}
   15156:	b003      	add	sp, #12
   15158:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:106
    tlm_reg_var_type *reg_var = NULL;
   1515a:	4628      	mov	r0, r5
   1515c:	e7fb      	b.n	15156 <tlm_variable_get_by_comp_and_name+0x1e>
   1515e:	4620      	mov	r0, r4
   15160:	e7f9      	b.n	15156 <tlm_variable_get_by_comp_and_name+0x1e>
   15162:	bf00      	nop
   15164:	000150a7 	.word	0x000150a7

00015168 <tlm_variable_set_value>:
tlm_variable_set_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:118

bool tlm_variable_set_value(const char *comp_name, const char *name, const char *value)
{
   15168:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1516c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:119
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   1516e:	f7ff ffe3 	bl	15138 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:120
    if (NULL == reg_var) {
   15172:	4680      	mov	r8, r0
   15174:	2800      	cmp	r0, #0
   15176:	f000 80df 	beq.w	15338 <tlm_variable_set_value+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
            } else {                \
                ++value;            \
        }   }

    bool success = false;
    switch(reg_var->elm_type) {
   1517a:	f898 3010 	ldrb.w	r3, [r8, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   1517e:	3004      	adds	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   15180:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   15182:	c885      	ldmia	r0, {r0, r2, r7}
   15184:	fb07 0702 	mla	r7, r7, r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   15188:	2b07      	cmp	r3, #7
   1518a:	f200 80d5 	bhi.w	15338 <tlm_variable_set_value+0x1d0>
   1518e:	e8df f003 	tbb	[pc, r3]
   15192:	4b22      	.short	0x4b22
   15194:	95d3ab70 	.word	0x95d3ab70
   15198:	04d3      	.short	0x04d3
   1519a:	4605      	mov	r5, r0
   1519c:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186

        case tlm_bit_or_bool:
            dst = (void*)reg_var->data_ptr;
            while (dst < end) {
                success = true;
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   151a0:	4e67      	ldr	r6, [pc, #412]	; (15340 <tlm_variable_set_value+0x1d8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:184
            while (dst < end) {
   151a2:	42bd      	cmp	r5, r7
   151a4:	d228      	bcs.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   151a6:	4621      	mov	r1, r4
   151a8:	4630      	mov	r0, r6
   151aa:	f00a ffa2 	bl	200f2 <strstr>
   151ae:	1a22      	subs	r2, r4, r0
   151b0:	f8d8 3004 	ldr.w	r3, [r8, #4]
   151b4:	4250      	negs	r0, r2
   151b6:	4150      	adcs	r0, r2
   151b8:	7018      	strb	r0, [r3, #0]
   151ba:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   151bc:	781a      	ldrb	r2, [r3, #0]
   151be:	461c      	mov	r4, r3
   151c0:	3301      	adds	r3, #1
   151c2:	b112      	cbz	r2, 151ca <tlm_variable_set_value+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 4)
   151c4:	2a2c      	cmp	r2, #44	; 0x2c
   151c6:	d1f9      	bne.n	151bc <tlm_variable_set_value+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 1)
   151c8:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   151ca:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:185
                success = true;
   151ce:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   151d2:	441d      	add	r5, r3
   151d4:	e7e5      	b.n	151a2 <tlm_variable_set_value+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   151d6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:141
            dst = (void*)reg_var->data_ptr;
   151d8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   151da:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   151dc:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   151de:	f8df a164 	ldr.w	sl, [pc, #356]	; 15344 <tlm_variable_set_value+0x1dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   151e2:	f845 3d04 	str.w	r3, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   151e6:	42be      	cmp	r6, r7
   151e8:	d206      	bcs.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142 (discriminator 1)
   151ea:	462a      	mov	r2, r5
   151ec:	4651      	mov	r1, sl
   151ee:	4620      	mov	r0, r4
   151f0:	f00a fe5a 	bl	1fea8 <siscanf>
   151f4:	2801      	cmp	r0, #1
   151f6:	d003      	beq.n	15200 <tlm_variable_set_value+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:216
            success = false;
            break;
    }

    return success;
}
   151f8:	4648      	mov	r0, r9
   151fa:	b002      	add	sp, #8
   151fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:143
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   15200:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15204:	4629      	mov	r1, r5
   15206:	4630      	mov	r0, r6
   15208:	f009 f98b 	bl	1e522 <memcpy>
   1520c:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   1520e:	781a      	ldrb	r2, [r3, #0]
   15210:	461c      	mov	r4, r3
   15212:	3301      	adds	r3, #1
   15214:	b112      	cbz	r2, 1521c <tlm_variable_set_value+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 4)
   15216:	2a2c      	cmp	r2, #44	; 0x2c
   15218:	d1f9      	bne.n	1520e <tlm_variable_set_value+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 1)
   1521a:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   1521c:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:144
                success = true;
   15220:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   15224:	441e      	add	r6, r3
   15226:	e7de      	b.n	151e6 <tlm_variable_set_value+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15228:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:153
            dst = (void*)reg_var->data_ptr;
   1522a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   1522c:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   1522e:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   15230:	f8df a114 	ldr.w	sl, [pc, #276]	; 15348 <tlm_variable_set_value+0x1e0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15234:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   15238:	42bd      	cmp	r5, r7
   1523a:	d2dd      	bcs.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154 (discriminator 1)
   1523c:	4632      	mov	r2, r6
   1523e:	4651      	mov	r1, sl
   15240:	4620      	mov	r0, r4
   15242:	f00a fe31 	bl	1fea8 <siscanf>
   15246:	2801      	cmp	r0, #1
   15248:	d1d6      	bne.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:155
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   1524a:	f8d8 2008 	ldr.w	r2, [r8, #8]
   1524e:	4631      	mov	r1, r6
   15250:	4628      	mov	r0, r5
   15252:	f009 f966 	bl	1e522 <memcpy>
   15256:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   15258:	781a      	ldrb	r2, [r3, #0]
   1525a:	461c      	mov	r4, r3
   1525c:	3301      	adds	r3, #1
   1525e:	b112      	cbz	r2, 15266 <tlm_variable_set_value+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 4)
   15260:	2a2c      	cmp	r2, #44	; 0x2c
   15262:	d1f9      	bne.n	15258 <tlm_variable_set_value+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 1)
   15264:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   15266:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:156
                success = true;
   1526a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   1526e:	441d      	add	r5, r3
   15270:	e7e2      	b.n	15238 <tlm_variable_set_value+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   15272:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:165
            dst = (void*)reg_var->data_ptr;
   15276:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   15278:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   1527a:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 1534c <tlm_variable_set_value+0x1e4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   1527e:	f806 9d04 	strb.w	r9, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   15282:	42bd      	cmp	r5, r7
   15284:	d2b8      	bcs.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166 (discriminator 1)
   15286:	4632      	mov	r2, r6
   15288:	4651      	mov	r1, sl
   1528a:	4620      	mov	r0, r4
   1528c:	f00a fe0c 	bl	1fea8 <siscanf>
   15290:	2801      	cmp	r0, #1
   15292:	d1b1      	bne.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:167
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   15294:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15298:	4631      	mov	r1, r6
   1529a:	4628      	mov	r0, r5
   1529c:	f009 f941 	bl	1e522 <memcpy>
   152a0:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   152a2:	781a      	ldrb	r2, [r3, #0]
   152a4:	461c      	mov	r4, r3
   152a6:	3301      	adds	r3, #1
   152a8:	b112      	cbz	r2, 152b0 <tlm_variable_set_value+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 4)
   152aa:	2a2c      	cmp	r2, #44	; 0x2c
   152ac:	d1f9      	bne.n	152a2 <tlm_variable_set_value+0x13a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 1)
   152ae:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   152b0:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:168
                success = true;
   152b4:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   152b8:	441d      	add	r5, r3
   152ba:	e7e2      	b.n	15282 <tlm_variable_set_value+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:176
            memset((void*)reg_var->data_ptr, 0, reg_var->elm_size_bytes);
   152bc:	2100      	movs	r1, #0
   152be:	f009 f955 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   152c2:	4620      	mov	r0, r4
   152c4:	f00a feac 	bl	20020 <strlen>
   152c8:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   152cc:	f8d8 5004 	ldr.w	r5, [r8, #4]
   152d0:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   152d2:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   152d4:	4621      	mov	r1, r4
   152d6:	bf28      	it	cs
   152d8:	f103 32ff 	addcs.w	r2, r3, #4294967295	; 0xffffffff
   152dc:	4628      	mov	r0, r5
   152de:	f009 f920 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:179
            success = true;
   152e2:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:180
            break;
   152e6:	e787      	b.n	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   152e8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:199
            dst = (void*)reg_var->data_ptr;
   152ea:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   152ec:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   152f0:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   152f2:	f8df a05c 	ldr.w	sl, [pc, #92]	; 15350 <tlm_variable_set_value+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   152f6:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   152fa:	42bd      	cmp	r5, r7
   152fc:	f4bf af7c 	bcs.w	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200 (discriminator 1)
   15300:	4632      	mov	r2, r6
   15302:	4651      	mov	r1, sl
   15304:	4620      	mov	r0, r4
   15306:	f00a fdcf 	bl	1fea8 <siscanf>
   1530a:	2801      	cmp	r0, #1
   1530c:	f47f af74 	bne.w	151f8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:201
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   15310:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15314:	4631      	mov	r1, r6
   15316:	4628      	mov	r0, r5
   15318:	f009 f903 	bl	1e522 <memcpy>
   1531c:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   1531e:	781a      	ldrb	r2, [r3, #0]
   15320:	461c      	mov	r4, r3
   15322:	3301      	adds	r3, #1
   15324:	b112      	cbz	r2, 1532c <tlm_variable_set_value+0x1c4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 4)
   15326:	2a2c      	cmp	r2, #44	; 0x2c
   15328:	d1f9      	bne.n	1531e <tlm_variable_set_value+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 1)
   1532a:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   1532c:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:202
                success = true;
   15330:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   15334:	441d      	add	r5, r3
   15336:	e7e0      	b.n	152fa <tlm_variable_set_value+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:193
            success = false;
   15338:	f04f 0900 	mov.w	r9, #0
   1533c:	e75c      	b.n	151f8 <tlm_variable_set_value+0x90>
   1533e:	bf00      	nop
   15340:	0002514a 	.word	0x0002514a
   15344:	000250b9 	.word	0x000250b9
   15348:	000250f1 	.word	0x000250f1
   1534c:	00025110 	.word	0x00025110
   15350:	0002513d 	.word	0x0002513d

00015354 <tlm_variable_print_value>:
tlm_variable_print_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
            size_t curr_len = strlen(buffer);                       \
            snprintf(buffer+curr_len, len-curr_len, format, *data); \
        } do{ } while(0)

    bool success = false;
    switch(reg_var->elm_type) {
   15354:	7c03      	ldrb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   15356:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   1535a:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   1535c:	4605      	mov	r5, r0
   1535e:	460c      	mov	r4, r1
   15360:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   15362:	2b07      	cmp	r3, #7
   15364:	f200 81f7 	bhi.w	15756 <tlm_variable_print_value+0x402>
   15368:	e8df f013 	tbh	[pc, r3, lsl #1]
   1536c:	008b0008 	.word	0x008b0008
   15370:	0178010d 	.word	0x0178010d
   15374:	014701d4 	.word	0x014701d4
   15378:	014e012a 	.word	0x014e012a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:246
        case tlm_int:
        {
            success = true;
            if (1 == reg_var->elm_size_bytes) {
   1537c:	6883      	ldr	r3, [r0, #8]
   1537e:	2b01      	cmp	r3, #1
   15380:	d120      	bne.n	153c4 <tlm_variable_print_value+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:247
                int8_t *data = (int8_t*)(reg_var->data_ptr);
   15382:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:248
                snprintf(buffer, len, "int8:%i", *data);
   15384:	4aca      	ldr	r2, [pc, #808]	; (156b0 <tlm_variable_print_value+0x35c>)
   15386:	f997 3000 	ldrsb.w	r3, [r7]
   1538a:	4631      	mov	r1, r6
   1538c:	4620      	mov	r0, r4
   1538e:	f00a fd33 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249
                tlm_variable_print_array(",%i", data, buffer);
   15392:	f8df 9354 	ldr.w	r9, [pc, #852]	; 156e8 <tlm_variable_print_value+0x394>
   15396:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 1)
   1539a:	eb07 0308 	add.w	r3, r7, r8
   1539e:	68ea      	ldr	r2, [r5, #12]
   153a0:	b29b      	uxth	r3, r3
   153a2:	4293      	cmp	r3, r2
   153a4:	d303      	bcc.n	153ae <tlm_variable_print_value+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:322
        }

        case tlm_string:
        {
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
            success = true;
   153a6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:363
            success = false;
            break;
    }

    return success;
}
   153a8:	b003      	add	sp, #12
   153aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 3)
                tlm_variable_print_array(",%i", data, buffer);
   153ae:	4620      	mov	r0, r4
   153b0:	f00a fe36 	bl	20020 <strlen>
   153b4:	f917 3f01 	ldrsb.w	r3, [r7, #1]!
   153b8:	1a31      	subs	r1, r6, r0
   153ba:	464a      	mov	r2, r9
   153bc:	4420      	add	r0, r4
   153be:	f00a fd1b 	bl	1fdf8 <sniprintf>
   153c2:	e7ea      	b.n	1539a <tlm_variable_print_value+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:251
            else if (2 == reg_var->elm_size_bytes) {
   153c4:	2b02      	cmp	r3, #2
   153c6:	d11b      	bne.n	15400 <tlm_variable_print_value+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:252
                int16_t *data = (int16_t*)(reg_var->data_ptr);
   153c8:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:253
                snprintf(buffer, len, "int16:%i", *data);
   153cc:	4ab9      	ldr	r2, [pc, #740]	; (156b4 <tlm_variable_print_value+0x360>)
   153ce:	f9b8 3000 	ldrsh.w	r3, [r8]
   153d2:	4631      	mov	r1, r6
   153d4:	4620      	mov	r0, r4
   153d6:	f00a fd0f 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254
                tlm_variable_print_array(",%i", data, buffer);
   153da:	2701      	movs	r7, #1
   153dc:	f8df 9308 	ldr.w	r9, [pc, #776]	; 156e8 <tlm_variable_print_value+0x394>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 1)
   153e0:	68eb      	ldr	r3, [r5, #12]
   153e2:	429f      	cmp	r7, r3
   153e4:	d2df      	bcs.n	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 3)
   153e6:	4620      	mov	r0, r4
   153e8:	f00a fe1a 	bl	20020 <strlen>
   153ec:	3701      	adds	r7, #1
   153ee:	1a31      	subs	r1, r6, r0
   153f0:	f938 3f02 	ldrsh.w	r3, [r8, #2]!
   153f4:	464a      	mov	r2, r9
   153f6:	4420      	add	r0, r4
   153f8:	f00a fcfe 	bl	1fdf8 <sniprintf>
   153fc:	b2bf      	uxth	r7, r7
   153fe:	e7ef      	b.n	153e0 <tlm_variable_print_value+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:256
            else if (4 == reg_var->elm_size_bytes) {
   15400:	2b04      	cmp	r3, #4
   15402:	d11b      	bne.n	1543c <tlm_variable_print_value+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:257
                int32_t *data = (int32_t*)(reg_var->data_ptr);
   15404:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:258
                snprintf(buffer, len, "int32:%" PRIi32, *data);
   15408:	4aab      	ldr	r2, [pc, #684]	; (156b8 <tlm_variable_print_value+0x364>)
   1540a:	f8d8 3000 	ldr.w	r3, [r8]
   1540e:	4631      	mov	r1, r6
   15410:	4620      	mov	r0, r4
   15412:	f00a fcf1 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259
                tlm_variable_print_array(",%"PRIi32, data, buffer);
   15416:	2701      	movs	r7, #1
   15418:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 156ec <tlm_variable_print_value+0x398>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 1)
   1541c:	68eb      	ldr	r3, [r5, #12]
   1541e:	429f      	cmp	r7, r3
   15420:	d2c1      	bcs.n	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 3)
   15422:	4620      	mov	r0, r4
   15424:	f00a fdfc 	bl	20020 <strlen>
   15428:	3701      	adds	r7, #1
   1542a:	1a31      	subs	r1, r6, r0
   1542c:	f858 3f04 	ldr.w	r3, [r8, #4]!
   15430:	464a      	mov	r2, r9
   15432:	4420      	add	r0, r4
   15434:	f00a fce0 	bl	1fdf8 <sniprintf>
   15438:	b2bf      	uxth	r7, r7
   1543a:	e7ef      	b.n	1541c <tlm_variable_print_value+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:261
            else if (8 == reg_var->elm_size_bytes) {
   1543c:	2b08      	cmp	r3, #8
   1543e:	f040 818a 	bne.w	15756 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:262
                int64_t *data = (int64_t*)(reg_var->data_ptr);
   15442:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:263
                snprintf(buffer, len, "int64:%"PRIi64, *data);
   15446:	4631      	mov	r1, r6
   15448:	e9d8 2300 	ldrd	r2, r3, [r8]
   1544c:	4620      	mov	r0, r4
   1544e:	e9cd 2300 	strd	r2, r3, [sp]
   15452:	4a9a      	ldr	r2, [pc, #616]	; (156bc <tlm_variable_print_value+0x368>)
   15454:	f00a fcd0 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264
                tlm_variable_print_array(",%"PRIi64, data, buffer);
   15458:	2701      	movs	r7, #1
   1545a:	f8df 9294 	ldr.w	r9, [pc, #660]	; 156f0 <tlm_variable_print_value+0x39c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 1)
   1545e:	68eb      	ldr	r3, [r5, #12]
   15460:	429f      	cmp	r7, r3
   15462:	d2a0      	bcs.n	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 3)
   15464:	4620      	mov	r0, r4
   15466:	f00a fddb 	bl	20020 <strlen>
   1546a:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   1546e:	1a31      	subs	r1, r6, r0
   15470:	e9cd 2300 	strd	r2, r3, [sp]
   15474:	4420      	add	r0, r4
   15476:	464a      	mov	r2, r9
   15478:	3701      	adds	r7, #1
   1547a:	f00a fcbd 	bl	1fdf8 <sniprintf>
   1547e:	b2bf      	uxth	r7, r7
   15480:	e7ed      	b.n	1545e <tlm_variable_print_value+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:275
            if (1 == reg_var->elm_size_bytes) {
   15482:	6883      	ldr	r3, [r0, #8]
   15484:	2b01      	cmp	r3, #1
   15486:	d11c      	bne.n	154c2 <tlm_variable_print_value+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:276
                uint8_t *data = (uint8_t*)(reg_var->data_ptr);
   15488:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:277
                snprintf(buffer, len, "uint8:%u", *data);
   1548a:	4a8d      	ldr	r2, [pc, #564]	; (156c0 <tlm_variable_print_value+0x36c>)
   1548c:	783b      	ldrb	r3, [r7, #0]
   1548e:	4631      	mov	r1, r6
   15490:	4620      	mov	r0, r4
   15492:	f00a fcb1 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278
                tlm_variable_print_array(",%u", data, buffer);
   15496:	f8df 925c 	ldr.w	r9, [pc, #604]	; 156f4 <tlm_variable_print_value+0x3a0>
   1549a:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 1)
   1549e:	eb07 0308 	add.w	r3, r7, r8
   154a2:	68ea      	ldr	r2, [r5, #12]
   154a4:	b29b      	uxth	r3, r3
   154a6:	4293      	cmp	r3, r2
   154a8:	f4bf af7d 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 3)
   154ac:	4620      	mov	r0, r4
   154ae:	f00a fdb7 	bl	20020 <strlen>
   154b2:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   154b6:	1a31      	subs	r1, r6, r0
   154b8:	464a      	mov	r2, r9
   154ba:	4420      	add	r0, r4
   154bc:	f00a fc9c 	bl	1fdf8 <sniprintf>
   154c0:	e7ed      	b.n	1549e <tlm_variable_print_value+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:280
            else if (2 == reg_var->elm_size_bytes) {
   154c2:	2b02      	cmp	r3, #2
   154c4:	d11c      	bne.n	15500 <tlm_variable_print_value+0x1ac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:281
                uint16_t *data = (uint16_t*)(reg_var->data_ptr);
   154c6:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:282
                snprintf(buffer, len, "uint16:%u", *data);
   154ca:	4a7e      	ldr	r2, [pc, #504]	; (156c4 <tlm_variable_print_value+0x370>)
   154cc:	f8b8 3000 	ldrh.w	r3, [r8]
   154d0:	4631      	mov	r1, r6
   154d2:	4620      	mov	r0, r4
   154d4:	f00a fc90 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283
                tlm_variable_print_array(",%u", data, buffer);
   154d8:	2701      	movs	r7, #1
   154da:	f8df 9218 	ldr.w	r9, [pc, #536]	; 156f4 <tlm_variable_print_value+0x3a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 1)
   154de:	68eb      	ldr	r3, [r5, #12]
   154e0:	429f      	cmp	r7, r3
   154e2:	f4bf af60 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 3)
   154e6:	4620      	mov	r0, r4
   154e8:	f00a fd9a 	bl	20020 <strlen>
   154ec:	3701      	adds	r7, #1
   154ee:	1a31      	subs	r1, r6, r0
   154f0:	f838 3f02 	ldrh.w	r3, [r8, #2]!
   154f4:	464a      	mov	r2, r9
   154f6:	4420      	add	r0, r4
   154f8:	f00a fc7e 	bl	1fdf8 <sniprintf>
   154fc:	b2bf      	uxth	r7, r7
   154fe:	e7ee      	b.n	154de <tlm_variable_print_value+0x18a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:285
            else if (4 == reg_var->elm_size_bytes) {
   15500:	2b04      	cmp	r3, #4
   15502:	d11c      	bne.n	1553e <tlm_variable_print_value+0x1ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:286
                uint32_t *data = (uint32_t*)(reg_var->data_ptr);
   15504:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:287
                snprintf(buffer, len, "uint32:%"PRIu32, *data);
   15508:	4a6f      	ldr	r2, [pc, #444]	; (156c8 <tlm_variable_print_value+0x374>)
   1550a:	f8d8 3000 	ldr.w	r3, [r8]
   1550e:	4631      	mov	r1, r6
   15510:	4620      	mov	r0, r4
   15512:	f00a fc71 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288
                tlm_variable_print_array(",%"PRIu32, data, buffer);
   15516:	2701      	movs	r7, #1
   15518:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 156f8 <tlm_variable_print_value+0x3a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 1)
   1551c:	68eb      	ldr	r3, [r5, #12]
   1551e:	429f      	cmp	r7, r3
   15520:	f4bf af41 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 3)
   15524:	4620      	mov	r0, r4
   15526:	f00a fd7b 	bl	20020 <strlen>
   1552a:	3701      	adds	r7, #1
   1552c:	1a31      	subs	r1, r6, r0
   1552e:	f858 3f04 	ldr.w	r3, [r8, #4]!
   15532:	464a      	mov	r2, r9
   15534:	4420      	add	r0, r4
   15536:	f00a fc5f 	bl	1fdf8 <sniprintf>
   1553a:	b2bf      	uxth	r7, r7
   1553c:	e7ee      	b.n	1551c <tlm_variable_print_value+0x1c8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:290
            else if (8 == reg_var->elm_size_bytes) {
   1553e:	2b08      	cmp	r3, #8
   15540:	f040 8109 	bne.w	15756 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:291
                uint64_t *data = (uint64_t*)(reg_var->data_ptr);
   15544:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:292
                snprintf(buffer, len, "uint64:%"PRIu64, *data);
   15548:	4631      	mov	r1, r6
   1554a:	e9d8 2300 	ldrd	r2, r3, [r8]
   1554e:	4620      	mov	r0, r4
   15550:	e9cd 2300 	strd	r2, r3, [sp]
   15554:	4a5d      	ldr	r2, [pc, #372]	; (156cc <tlm_variable_print_value+0x378>)
   15556:	f00a fc4f 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293
                tlm_variable_print_array(",%"PRIu64, data, buffer);
   1555a:	2701      	movs	r7, #1
   1555c:	f8df 919c 	ldr.w	r9, [pc, #412]	; 156fc <tlm_variable_print_value+0x3a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 1)
   15560:	68eb      	ldr	r3, [r5, #12]
   15562:	429f      	cmp	r7, r3
   15564:	f4bf af1f 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 3)
   15568:	4620      	mov	r0, r4
   1556a:	f00a fd59 	bl	20020 <strlen>
   1556e:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   15572:	1a31      	subs	r1, r6, r0
   15574:	e9cd 2300 	strd	r2, r3, [sp]
   15578:	4420      	add	r0, r4
   1557a:	464a      	mov	r2, r9
   1557c:	3701      	adds	r7, #1
   1557e:	f00a fc3b 	bl	1fdf8 <sniprintf>
   15582:	b2bf      	uxth	r7, r7
   15584:	e7ec      	b.n	15560 <tlm_variable_print_value+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:303
            char *data = (char*) (reg_var->data_ptr);
   15586:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:304
            snprintf(buffer, len, "char:%c", *data);
   15588:	4a51      	ldr	r2, [pc, #324]	; (156d0 <tlm_variable_print_value+0x37c>)
   1558a:	783b      	ldrb	r3, [r7, #0]
   1558c:	4631      	mov	r1, r6
   1558e:	4620      	mov	r0, r4
   15590:	f00a fc32 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305
            tlm_variable_print_array(",%c", data, buffer);
   15594:	f8df 9168 	ldr.w	r9, [pc, #360]	; 15700 <tlm_variable_print_value+0x3ac>
   15598:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 1)
   1559c:	eb07 0308 	add.w	r3, r7, r8
   155a0:	68ea      	ldr	r2, [r5, #12]
   155a2:	b29b      	uxth	r3, r3
   155a4:	4293      	cmp	r3, r2
   155a6:	f4bf aefe 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 3)
   155aa:	4620      	mov	r0, r4
   155ac:	f00a fd38 	bl	20020 <strlen>
   155b0:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   155b4:	1a31      	subs	r1, r6, r0
   155b6:	464a      	mov	r2, r9
   155b8:	4420      	add	r0, r4
   155ba:	f00a fc1d 	bl	1fdf8 <sniprintf>
   155be:	e7ed      	b.n	1559c <tlm_variable_print_value+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:312
            char *data = (char*) (reg_var->data_ptr);
   155c0:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:313
            snprintf(buffer, len, "binary:%c", *data);
   155c2:	4a44      	ldr	r2, [pc, #272]	; (156d4 <tlm_variable_print_value+0x380>)
   155c4:	783b      	ldrb	r3, [r7, #0]
   155c6:	4631      	mov	r1, r6
   155c8:	4620      	mov	r0, r4
   155ca:	f00a fc15 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314
            tlm_variable_print_array("%c", data, buffer);
   155ce:	f8df 9134 	ldr.w	r9, [pc, #308]	; 15704 <tlm_variable_print_value+0x3b0>
   155d2:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 1)
   155d6:	eb07 0308 	add.w	r3, r7, r8
   155da:	68ea      	ldr	r2, [r5, #12]
   155dc:	b29b      	uxth	r3, r3
   155de:	4293      	cmp	r3, r2
   155e0:	f4bf aee1 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 3)
   155e4:	4620      	mov	r0, r4
   155e6:	f00a fd1b 	bl	20020 <strlen>
   155ea:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   155ee:	1a31      	subs	r1, r6, r0
   155f0:	464a      	mov	r2, r9
   155f2:	4420      	add	r0, r4
   155f4:	f00a fc00 	bl	1fdf8 <sniprintf>
   155f8:	e7ed      	b.n	155d6 <tlm_variable_print_value+0x282>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:321
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
   155fa:	6843      	ldr	r3, [r0, #4]
   155fc:	4a36      	ldr	r2, [pc, #216]	; (156d8 <tlm_variable_print_value+0x384>)
   155fe:	4631      	mov	r1, r6
   15600:	4620      	mov	r0, r4
   15602:	f00a fbf9 	bl	1fdf8 <sniprintf>
   15606:	e6ce      	b.n	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:328
            char *data = (char*) (reg_var->data_ptr);
   15608:	f8d0 a004 	ldr.w	sl, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:329
            snprintf(buffer, len, "bool:%s", *data ? "true" : "false");
   1560c:	4f33      	ldr	r7, [pc, #204]	; (156dc <tlm_variable_print_value+0x388>)
   1560e:	f89a 3000 	ldrb.w	r3, [sl]
   15612:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 15708 <tlm_variable_print_value+0x3b4>
   15616:	4a32      	ldr	r2, [pc, #200]	; (156e0 <tlm_variable_print_value+0x38c>)
   15618:	2b00      	cmp	r3, #0
   1561a:	bf14      	ite	ne
   1561c:	463b      	movne	r3, r7
   1561e:	4643      	moveq	r3, r8
   15620:	4631      	mov	r1, r6
   15622:	4620      	mov	r0, r4
   15624:	f00a fbe8 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330
            for (i=1; i < reg_var->elm_arr_size; i++) {
   15628:	46d1      	mov	r9, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   1562a:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 1570c <tlm_variable_print_value+0x3b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330 (discriminator 2)
            for (i=1; i < reg_var->elm_arr_size; i++) {
   1562e:	f1ca 0301 	rsb	r3, sl, #1
   15632:	444b      	add	r3, r9
   15634:	68ea      	ldr	r2, [r5, #12]
   15636:	b29b      	uxth	r3, r3
   15638:	4293      	cmp	r3, r2
   1563a:	f4bf aeb4 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:332
                size_t curr_len = strlen(buffer);
   1563e:	4620      	mov	r0, r4
   15640:	f00a fcee 	bl	20020 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   15644:	f819 3f01 	ldrb.w	r3, [r9, #1]!
   15648:	1a31      	subs	r1, r6, r0
   1564a:	2b00      	cmp	r3, #0
   1564c:	bf14      	ite	ne
   1564e:	463b      	movne	r3, r7
   15650:	4643      	moveq	r3, r8
   15652:	465a      	mov	r2, fp
   15654:	4420      	add	r0, r4
   15656:	f00a fbcf 	bl	1fdf8 <sniprintf>
   1565a:	e7e8      	b.n	1562e <tlm_variable_print_value+0x2da>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:341
            float *data = (float*) (reg_var->data_ptr);
   1565c:	f8d0 9004 	ldr.w	r9, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15660:	2701      	movs	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:342
            snprintf(buffer, len, "float:%f", *data);
   15662:	f8d9 0000 	ldr.w	r0, [r9]
   15666:	f007 fb2d 	bl	1ccc4 <__aeabi_f2d>
   1566a:	4a1e      	ldr	r2, [pc, #120]	; (156e4 <tlm_variable_print_value+0x390>)
   1566c:	e9cd 0100 	strd	r0, r1, [sp]
   15670:	4631      	mov	r1, r6
   15672:	4620      	mov	r0, r4
   15674:	f00a fbc0 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15678:	f8df a094 	ldr.w	sl, [pc, #148]	; 15710 <tlm_variable_print_value+0x3bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 1)
   1567c:	68eb      	ldr	r3, [r5, #12]
   1567e:	429f      	cmp	r7, r3
   15680:	f4bf ae91 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 3)
   15684:	4620      	mov	r0, r4
   15686:	f00a fccb 	bl	20020 <strlen>
   1568a:	eba6 0b00 	sub.w	fp, r6, r0
   1568e:	eb04 0800 	add.w	r8, r4, r0
   15692:	f859 0f04 	ldr.w	r0, [r9, #4]!
   15696:	f007 fb15 	bl	1ccc4 <__aeabi_f2d>
   1569a:	3701      	adds	r7, #1
   1569c:	e9cd 0100 	strd	r0, r1, [sp]
   156a0:	4652      	mov	r2, sl
   156a2:	4659      	mov	r1, fp
   156a4:	4640      	mov	r0, r8
   156a6:	f00a fba7 	bl	1fdf8 <sniprintf>
   156aa:	b2bf      	uxth	r7, r7
   156ac:	e7e6      	b.n	1567c <tlm_variable_print_value+0x328>
   156ae:	bf00      	nop
   156b0:	00025099 	.word	0x00025099
   156b4:	000250a5 	.word	0x000250a5
   156b8:	000250ae 	.word	0x000250ae
   156bc:	000250bd 	.word	0x000250bd
   156c0:	000250ce 	.word	0x000250ce
   156c4:	000250db 	.word	0x000250db
   156c8:	000250e5 	.word	0x000250e5
   156cc:	000250f5 	.word	0x000250f5
   156d0:	00025107 	.word	0x00025107
   156d4:	00025113 	.word	0x00025113
   156d8:	0002511d 	.word	0x0002511d
   156dc:	0002514a 	.word	0x0002514a
   156e0:	00025127 	.word	0x00025127
   156e4:	00025133 	.word	0x00025133
   156e8:	000250a1 	.word	0x000250a1
   156ec:	000250b8 	.word	0x000250b8
   156f0:	000250c8 	.word	0x000250c8
   156f4:	000250d7 	.word	0x000250d7
   156f8:	000250f0 	.word	0x000250f0
   156fc:	00025101 	.word	0x00025101
   15700:	0002510f 	.word	0x0002510f
   15704:	00025110 	.word	0x00025110
   15708:	00025093 	.word	0x00025093
   1570c:	0002512f 	.word	0x0002512f
   15710:	0002513c 	.word	0x0002513c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:350
            double *data = (double*) (reg_var->data_ptr);
   15714:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:351
            snprintf(buffer, len, "double:%f", *data);
   15718:	4631      	mov	r1, r6
   1571a:	e9d8 2300 	ldrd	r2, r3, [r8]
   1571e:	4620      	mov	r0, r4
   15720:	e9cd 2300 	strd	r2, r3, [sp]
   15724:	4a0d      	ldr	r2, [pc, #52]	; (1575c <tlm_variable_print_value+0x408>)
   15726:	f00a fb67 	bl	1fdf8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352
            tlm_variable_print_array(",%f", data, buffer);
   1572a:	2701      	movs	r7, #1
   1572c:	f8df 9030 	ldr.w	r9, [pc, #48]	; 15760 <tlm_variable_print_value+0x40c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 1)
   15730:	68eb      	ldr	r3, [r5, #12]
   15732:	429f      	cmp	r7, r3
   15734:	f4bf ae37 	bcs.w	153a6 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 3)
   15738:	4620      	mov	r0, r4
   1573a:	f00a fc71 	bl	20020 <strlen>
   1573e:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   15742:	1a31      	subs	r1, r6, r0
   15744:	e9cd 2300 	strd	r2, r3, [sp]
   15748:	4420      	add	r0, r4
   1574a:	464a      	mov	r2, r9
   1574c:	3701      	adds	r7, #1
   1574e:	f00a fb53 	bl	1fdf8 <sniprintf>
   15752:	b2bf      	uxth	r7, r7
   15754:	e7ec      	b.n	15730 <tlm_variable_print_value+0x3dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:267
                success = false;
   15756:	2000      	movs	r0, #0
   15758:	e626      	b.n	153a8 <tlm_variable_print_value+0x54>
   1575a:	bf00      	nop
   1575c:	00025140 	.word	0x00025140
   15760:	0002513c 	.word	0x0002513c

00015764 <tlm_variable_get_value>:
tlm_variable_get_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:219
{
   15764:	b538      	push	{r3, r4, r5, lr}
   15766:	4614      	mov	r4, r2
   15768:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:220
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   1576a:	f7ff fce5 	bl	15138 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:223
    if (NULL != reg_var) {
   1576e:	b128      	cbz	r0, 1577c <tlm_variable_get_value+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15770:	462a      	mov	r2, r5
   15772:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   15774:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15778:	f7ff bdec 	b.w	15354 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   1577c:	bd38      	pop	{r3, r4, r5, pc}

0001577e <get_tlm_one_comp>:
get_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
 *                  the size of the telemetry in raw bytes
 * @param binary    If null, only the size of telemetry will be obtained.
 *                  If non-null, the telemetry will be saved into this data pointer.
 */
static void get_tlm_one_comp(tlm_component *comp_ptr, void *arg_size, void *binary)
{
   1577e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15782:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
{
   15784:	4607      	mov	r7, r0
   15786:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15788:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39
    tlm_reg_var_type *var = NULL;
    uint32_t *size = arg_size;
    uint32_t i = 0, sizeOfVar = 0;

    if (NULL != size && NULL != comp_ptr) {
   1578a:	460d      	mov	r5, r1
   1578c:	b129      	cbz	r1, 1579a <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39 (discriminator 1)
   1578e:	b120      	cbz	r0, 1579a <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15790:	6878      	ldr	r0, [r7, #4]
   15792:	f000 f875 	bl	15880 <c_list_node_count>
   15796:	4284      	cmp	r4, r0
   15798:	d302      	bcc.n	157a0 <get_tlm_one_comp+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:51
                }
                (*size) += sizeOfVar;
            }
        }
    }
}
   1579a:	b002      	add	sp, #8
   1579c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:41
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   157a0:	aa01      	add	r2, sp, #4
   157a2:	4621      	mov	r1, r4
   157a4:	6878      	ldr	r0, [r7, #4]
   157a6:	f000 f88a 	bl	158be <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:42
            if (NULL != var) {
   157aa:	b178      	cbz	r0, 157cc <get_tlm_one_comp+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:43
                sizeOfVar = (var->elm_arr_size) * (var->elm_size_bytes);
   157ac:	68c3      	ldr	r3, [r0, #12]
   157ae:	6886      	ldr	r6, [r0, #8]
   157b0:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:44
                if (binary) {
   157b2:	f1b8 0f00 	cmp.w	r8, #0
   157b6:	d006      	beq.n	157c6 <get_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:45
                    memcpy(((char*)binary + (*size)), var->data_ptr, sizeOfVar);
   157b8:	682b      	ldr	r3, [r5, #0]
   157ba:	6841      	ldr	r1, [r0, #4]
   157bc:	4632      	mov	r2, r6
   157be:	eb08 0003 	add.w	r0, r8, r3
   157c2:	f008 feae 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:47
                (*size) += sizeOfVar;
   157c6:	682b      	ldr	r3, [r5, #0]
   157c8:	441e      	add	r6, r3
   157ca:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   157cc:	3401      	adds	r4, #1
   157ce:	e7df      	b.n	15790 <get_tlm_one_comp+0x12>

000157d0 <cmp_tlm_one_comp>:
cmp_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
 * Compare telemetry
 * @param binary      The binary telemetry to compare
 * @param offset_arg  When non-zero, then telemetry is the same as binary
 */
static void cmp_tlm_one_comp(tlm_component *comp_ptr, void *binary, void *offset_arg)
{
   157d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   157d4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
{
   157d6:	4688      	mov	r8, r1
   157d8:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   157da:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:91
    tlm_reg_var_type *var = NULL;
    uint32_t size = 0, i = 0;
    uint32_t *offset = offset_arg;

    if (NULL != comp_ptr) {
   157dc:	4606      	mov	r6, r0
   157de:	b1c0      	cbz	r0, 15812 <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   157e0:	6870      	ldr	r0, [r6, #4]
   157e2:	f000 f84d 	bl	15880 <c_list_node_count>
   157e6:	4284      	cmp	r4, r0
   157e8:	d213      	bcs.n	15812 <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:93
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   157ea:	aa01      	add	r2, sp, #4
   157ec:	4621      	mov	r1, r4
   157ee:	6870      	ldr	r0, [r6, #4]
   157f0:	f000 f865 	bl	158be <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:94
            if (NULL != var) {
   157f4:	b190      	cbz	r0, 1581c <cmp_tlm_one_comp+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   157f6:	68c3      	ldr	r3, [r0, #12]
   157f8:	6885      	ldr	r5, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   157fa:	f8d7 9000 	ldr.w	r9, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   157fe:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   15800:	6841      	ldr	r1, [r0, #4]
   15802:	462a      	mov	r2, r5
   15804:	eb08 0009 	add.w	r0, r8, r9
   15808:	f008 fe7c 	bl	1e504 <memcmp>
   1580c:	b120      	cbz	r0, 15818 <cmp_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:97
                    *offset = 0;
   1580e:	2300      	movs	r3, #0
   15810:	603b      	str	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:106
                    *offset += size;
                }
            }
        }
    }
}
   15812:	b003      	add	sp, #12
   15814:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:101
                    *offset += size;
   15818:	444d      	add	r5, r9
   1581a:	603d      	str	r5, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   1581c:	3401      	adds	r4, #1
   1581e:	e7df      	b.n	157e0 <cmp_tlm_one_comp+0x10>

00015820 <tlm_binary_get_size_one>:
tlm_binary_get_size_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:54
{
   15820:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:55
    uint32_t size = 0;
   15822:	2200      	movs	r2, #0
   15824:	a902      	add	r1, sp, #8
   15826:	f841 2d04 	str.w	r2, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:56
    get_tlm_one_comp(comp_ptr, &size, NULL);
   1582a:	f7ff ffa8 	bl	1577e <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:58
}
   1582e:	9801      	ldr	r0, [sp, #4]
   15830:	b003      	add	sp, #12
   15832:	f85d fb04 	ldr.w	pc, [sp], #4

00015836 <tlm_binary_get_one>:
tlm_binary_get_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:67
{
   15836:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:68
    uint32_t offset = 0;
   15838:	2200      	movs	r2, #0
   1583a:	ab02      	add	r3, sp, #8
   1583c:	f843 2d04 	str.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:69
    get_tlm_one_comp(comp_ptr, &offset, binary);
   15840:	460a      	mov	r2, r1
   15842:	4619      	mov	r1, r3
   15844:	f7ff ff9b 	bl	1577e <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:71
}
   15848:	9801      	ldr	r0, [sp, #4]
   1584a:	b003      	add	sp, #12
   1584c:	f85d fb04 	ldr.w	pc, [sp], #4

00015850 <tlm_binary_compare_one>:
tlm_binary_compare_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110

bool tlm_binary_compare_one(tlm_component *comp_ptr, char *binary)
{
    uint32_t offset = 0;
   15850:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:109
{
   15852:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110
    uint32_t offset = 0;
   15854:	aa02      	add	r2, sp, #8
   15856:	f842 3d04 	str.w	r3, [r2, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:111
    cmp_tlm_one_comp(comp_ptr, binary, &offset);
   1585a:	f7ff ffb9 	bl	157d0 <cmp_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:113
    return (0 != offset);
}
   1585e:	9801      	ldr	r0, [sp, #4]
   15860:	3000      	adds	r0, #0
   15862:	bf18      	it	ne
   15864:	2001      	movne	r0, #1
   15866:	b003      	add	sp, #12
   15868:	f85d fb04 	ldr.w	pc, [sp], #4

0001586c <c_list_create>:
c_list_create():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   1586c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   1586e:	200c      	movs	r0, #12
   15870:	f008 fe18 	bl	1e4a4 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   15874:	b118      	cbz	r0, 1587e <c_list_create+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   15876:	2300      	movs	r3, #0
   15878:	6003      	str	r3, [r0, #0]
   1587a:	6043      	str	r3, [r0, #4]
   1587c:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   1587e:	bd08      	pop	{r3, pc}

00015880 <c_list_node_count>:
c_list_node_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83
}

uint32_t c_list_node_count(const c_list_ptr p)
{
    const c_list_type *list = p;
    return list ? list->node_count : 0;
   15880:	b100      	cbz	r0, 15884 <c_list_node_count+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83 (discriminator 1)
   15882:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:84
}
   15884:	4770      	bx	lr

00015886 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   15886:	b538      	push	{r3, r4, r5, lr}
   15888:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   1588a:	4604      	mov	r4, r0
   1588c:	b908      	cbnz	r0, 15892 <c_list_insert_elm_end+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   1588e:	2000      	movs	r0, #0
   15890:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   15892:	2008      	movs	r0, #8
   15894:	f008 fe06 	bl	1e4a4 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   15898:	2800      	cmp	r0, #0
   1589a:	d0f8      	beq.n	1588e <c_list_insert_elm_end+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   1589c:	2300      	movs	r3, #0
   1589e:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   158a0:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   158a2:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   158a4:	b933      	cbnz	r3, 158b4 <c_list_insert_elm_end+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   158a6:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   158a8:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   158aa:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   158ac:	3301      	adds	r3, #1
   158ae:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   158b0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   158b2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   158b4:	6863      	ldr	r3, [r4, #4]
   158b6:	2b00      	cmp	r3, #0
   158b8:	d0f6      	beq.n	158a8 <c_list_insert_elm_end+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   158ba:	6058      	str	r0, [r3, #4]
   158bc:	e7f4      	b.n	158a8 <c_list_insert_elm_end+0x22>

000158be <c_list_get_elm_at>:
c_list_get_elm_at():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:144
}

void* c_list_get_elm_at(c_list_ptr p, uint32_t index, void **hint)
{
    c_list_type *list = p;
    if(!list) {
   158be:	b198      	cbz	r0, 158e8 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149
        return false;
    }

    c_data_node_type **hint_node = (c_data_node_type**)hint;
    if (hint_node && 0 != index) {
   158c0:	b12a      	cbz	r2, 158ce <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149 (discriminator 1)
   158c2:	b121      	cbz	r1, 158ce <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:150
        c_data_node_type *node = *hint_node;
   158c4:	6810      	ldr	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:151
        if (NULL != node) {
   158c6:	b178      	cbz	r0, 158e8 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:169
        if (!iterator || 0 != index) {
            return NULL;
        }
        else {
            if (hint_node) {
                *hint_node = iterator->next;
   158c8:	6843      	ldr	r3, [r0, #4]
   158ca:	6013      	str	r3, [r2, #0]
   158cc:	e008      	b.n	158e0 <c_list_get_elm_at+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:157
        c_data_node_type *iterator = list->head;
   158ce:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158
        while (index != 0 && NULL != iterator)
   158d0:	b141      	cbz	r1, 158e4 <c_list_get_elm_at+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158 (discriminator 1)
   158d2:	b900      	cbnz	r0, 158d6 <c_list_get_elm_at+0x18>
   158d4:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:160
            iterator = iterator->next;
   158d6:	6840      	ldr	r0, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:161
            --index;
   158d8:	3901      	subs	r1, #1
   158da:	e7f9      	b.n	158d0 <c_list_get_elm_at+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:168
            if (hint_node) {
   158dc:	2a00      	cmp	r2, #0
   158de:	d1f3      	bne.n	158c8 <c_list_get_elm_at+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:171
            }
            return iterator->data_ptr;
   158e0:	6800      	ldr	r0, [r0, #0]
   158e2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:164
        if (!iterator || 0 != index) {
   158e4:	2800      	cmp	r0, #0
   158e6:	d1f9      	bne.n	158dc <c_list_get_elm_at+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:174
        }
    }
}
   158e8:	4770      	bx	lr

000158ea <c_list_find_elm>:
c_list_find_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   158ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   158ec:	460d      	mov	r5, r1
   158ee:	4616      	mov	r6, r2
   158f0:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   158f2:	b908      	cbnz	r0, 158f8 <c_list_find_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   158f4:	2000      	movs	r0, #0
   158f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   158f8:	2900      	cmp	r1, #0
   158fa:	d0fb      	beq.n	158f4 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   158fc:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   158fe:	2c00      	cmp	r4, #0
   15900:	d0f8      	beq.n	158f4 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   15902:	9b06      	ldr	r3, [sp, #24]
   15904:	463a      	mov	r2, r7
   15906:	4631      	mov	r1, r6
   15908:	6820      	ldr	r0, [r4, #0]
   1590a:	47a8      	blx	r5
   1590c:	b908      	cbnz	r0, 15912 <c_list_find_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   1590e:	6820      	ldr	r0, [r4, #0]
   15910:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   15912:	6864      	ldr	r4, [r4, #4]
   15914:	e7f3      	b.n	158fe <c_list_find_elm+0x14>

00015916 <c_list_for_each_elm>:
c_list_for_each_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   15916:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15918:	460d      	mov	r5, r1
   1591a:	4616      	mov	r6, r2
   1591c:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   1591e:	b908      	cbnz	r0, 15924 <c_list_for_each_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   15920:	2001      	movs	r0, #1
   15922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   15924:	2900      	cmp	r1, #0
   15926:	d0fb      	beq.n	15920 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   15928:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   1592a:	2c00      	cmp	r4, #0
   1592c:	d0f8      	beq.n	15920 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   1592e:	9b06      	ldr	r3, [sp, #24]
   15930:	463a      	mov	r2, r7
   15932:	4631      	mov	r1, r6
   15934:	6820      	ldr	r0, [r4, #0]
   15936:	47a8      	blx	r5
   15938:	b108      	cbz	r0, 1593e <c_list_for_each_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   1593a:	6864      	ldr	r4, [r4, #4]
   1593c:	e7f5      	b.n	1592a <c_list_for_each_elm+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   1593e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
static const char* const NO_HELP_STR_PTR        = "";


void CommandProcessor::addHandler(CmdHandlerFuncPtr pFunc, const char* pPersistantCmdStr,
                                  const char* pPersistentCmdHelpStr,  void* pDataParam)
{
   15940:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
    handler.pCmdHelpText = pPersistentCmdHelpStr;
    handler.pFunc = pFunc;
    handler.pDataParam = pDataParam;

    if (0 == handler.pCmdHelpText) {
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   15944:	4f1c      	ldr	r7, [pc, #112]	; (159b8 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
{
   15946:	4604      	mov	r4, r0
   15948:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   1594a:	2b00      	cmp	r3, #0
   1594c:	bf18      	it	ne
   1594e:	461f      	movne	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46
    }
    if (0 != handler.pCommandStr && 0 != handler.pFunc) {
   15950:	4691      	mov	r9, r2
   15952:	b372      	cbz	r2, 159b2 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46 (discriminator 1)
   15954:	b369      	cbz	r1, 159b2 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
}

template <typename TYPE>
void VECTOR<TYPE>::push_back(const TYPE& element)
{
    if(mVectorSize >= mVectorCapacity)
   15956:	6843      	ldr	r3, [r0, #4]
   15958:	6882      	ldr	r2, [r0, #8]
   1595a:	429a      	cmp	r2, r3
   1595c:	d31c      	bcc.n	15998 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
    {
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   1595e:	6805      	ldr	r5, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418

// ******* PRIVATE FUNCTIONS:
template <typename TYPE>
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
{
    if(newSize < mVectorCapacity)
   15960:	195d      	adds	r5, r3, r5
   15962:	d219      	bcs.n	15998 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443

    // Point data to new memory
    mpObjPtrs = newData;
#else
    // Allocate pointers of the datatype
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   15964:	00a9      	lsls	r1, r5, #2
   15966:	68c0      	ldr	r0, [r0, #12]
   15968:	f00a f88a 	bl	1fa80 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446

    // Allocate new objects ONLY at each of the new pointers
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1596c:	68a6      	ldr	r6, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1596e:	60e0      	str	r0, [r4, #12]
   15970:	ea4f 0a86 	mov.w	sl, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15974:	42b5      	cmp	r5, r6
   15976:	d90e      	bls.n	15996 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   15978:	2010      	movs	r0, #16
   1597a:	f000 ffb3 	bl	168e4 <operator new(unsigned int)>
   1597e:	4683      	mov	fp, r0
   15980:	2210      	movs	r2, #16
   15982:	2100      	movs	r1, #0
   15984:	f008 fdf2 	bl	1e56c <memset>
   15988:	68e3      	ldr	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1598a:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1598c:	f843 b00a 	str.w	fp, [r3, sl]
   15990:	f10a 0a04 	add.w	sl, sl, #4
   15994:	e7ee      	b.n	15974 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    }
#endif

    mVectorCapacity = newSize;
   15996:	6065      	str	r5, [r4, #4]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   15998:	68a3      	ldr	r3, [r4, #8]
   1599a:	68e2      	ldr	r2, [r4, #12]
   1599c:	1c59      	adds	r1, r3, #1
   1599e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   159a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   159a4:	60a1      	str	r1, [r4, #8]
   159a6:	f8c3 9000 	str.w	r9, [r3]
   159aa:	605f      	str	r7, [r3, #4]
   159ac:	f8c3 8008 	str.w	r8, [r3, #8]
   159b0:	60da      	str	r2, [r3, #12]
   159b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159b6:	bf00      	nop
   159b8:	00026518 	.word	0x00026518

000159bc <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:126
    }
    return found;
}

void CommandProcessor::getRegisteredCommandList(CharDev& output)
{
   159bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159c0:	460c      	mov	r4, r1
   159c2:	b093      	sub	sp, #76	; 0x4c
   159c4:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:128
    char buffer[64];
    output.put(SUPPORTED_COMMANDS_STR);
   159c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   159ca:	491f      	ldr	r1, [pc, #124]	; (15a48 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   159cc:	4620      	mov	r0, r4
   159ce:	f001 fdf9 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131
    char *ptr = NULL;

    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   159d2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
                strcpy(ptr, "...");
            }
            output.printf(buffer);
        } else {
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   159d4:	f8df 9078 	ldr.w	r9, [pc, #120]	; 15a50 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   159d8:	f8df a078 	ldr.w	sl, [pc, #120]	; 15a54 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   159dc:	f8df b078 	ldr.w	fp, [pc, #120]	; 15a58 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 1)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   159e0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   159e4:	429d      	cmp	r5, r3
   159e6:	d226      	bcs.n	15a36 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x7a>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   159e8:	f8d8 300c 	ldr.w	r3, [r8, #12]
   159ec:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:134
        if (strlen(c.pCmdHelpText) > 32) {
   159f0:	687b      	ldr	r3, [r7, #4]
   159f2:	4618      	mov	r0, r3
   159f4:	9301      	str	r3, [sp, #4]
   159f6:	f00a fb13 	bl	20020 <strlen>
   159fa:	2820      	cmp	r0, #32
   159fc:	9b01      	ldr	r3, [sp, #4]
   159fe:	d914      	bls.n	15a2a <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   15a00:	ae02      	add	r6, sp, #8
   15a02:	683a      	ldr	r2, [r7, #0]
   15a04:	4651      	mov	r1, sl
   15a06:	4630      	mov	r0, r6
   15a08:	f00a fa2a 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:138
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
   15a0c:	210a      	movs	r1, #10
   15a0e:	4630      	mov	r0, r6
   15a10:	f00a fb5c 	bl	200cc <strrchr>
   15a14:	4286      	cmp	r6, r0
   15a16:	d202      	bcs.n	15a1e <CommandProcessor::getRegisteredCommandList(CharDev&)+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   15a18:	4659      	mov	r1, fp
   15a1a:	f00a faf9 	bl	20010 <strcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:141
            output.printf(buffer);
   15a1e:	4631      	mov	r1, r6
   15a20:	4620      	mov	r0, r4
   15a22:	f001 fe19 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 2)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15a26:	3501      	adds	r5, #1
   15a28:	e7da      	b.n	159e0 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   15a2a:	683a      	ldr	r2, [r7, #0]
   15a2c:	4649      	mov	r1, r9
   15a2e:	4620      	mov	r0, r4
   15a30:	f001 fe12 	bl	17658 <CharDev::printf(char const*, ...)>
   15a34:	e7f7      	b.n	15a26 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:147
        }
    }

    output.putline("\n 'help <command>' to get help of a command");
   15a36:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15a3a:	4904      	ldr	r1, [pc, #16]	; (15a4c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   15a3c:	4620      	mov	r0, r4
   15a3e:	f001 fdd5 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:148
}
   15a42:	b013      	add	sp, #76	; 0x4c
   15a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a48:	000251ca 	.word	0x000251ca
   15a4c:	000251fd 	.word	0x000251fd
   15a50:	000251f1 	.word	0x000251f1
   15a54:	000251de 	.word	0x000251de
   15a58:	00024835 	.word	0x00024835

00015a5c <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151

void CommandProcessor::getHelpText(str& helpForCmd, CharDev& output)
{
   15a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15a60:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    // If there is a parameter, get help for this specific command
    // where this parameter itself is a command name
    if(helpForCmd.getLen() > 0)
   15a62:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151
{
   15a64:	460f      	mov	r7, r1
   15a66:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    if(helpForCmd.getLen() > 0)
   15a68:	f000 fcb9 	bl	163de <str::getLen() const>
   15a6c:	2800      	cmp	r0, #0
   15a6e:	dd23      	ble.n	15ab8 <CommandProcessor::getHelpText(str&, CharDev&)+0x5c>
   15a70:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 1)
    {
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15a72:	68ab      	ldr	r3, [r5, #8]
   15a74:	429c      	cmp	r4, r3
   15a76:	d21b      	bcs.n	15ab0 <CommandProcessor::getHelpText(str&, CharDev&)+0x54>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15a78:	68eb      	ldr	r3, [r5, #12]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
        {
            CmdProcessorType &cp = mCmdHandlerVector[i];
            if(helpForCmd.compareToIgnoreCase(cp.pCommandStr))
   15a7a:	4638      	mov	r0, r7
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15a7c:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
   15a80:	f8d8 1000 	ldr.w	r1, [r8]
   15a84:	f000 fcf2 	bl	1646c <str::compareToIgnoreCase(char const*) const>
   15a88:	b180      	cbz	r0, 15aac <CommandProcessor::getHelpText(str&, CharDev&)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
            {
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15a8a:	f8d8 3004 	ldr.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15a8e:	b15b      	cbz	r3, 15aa8 <CommandProcessor::getHelpText(str&, CharDev&)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15a90:	781a      	ldrb	r2, [r3, #0]
   15a92:	490c      	ldr	r1, [pc, #48]	; (15ac4 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15a94:	2a00      	cmp	r2, #0
   15a96:	bf18      	it	ne
   15a98:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:163 (discriminator 3)
                output.putline(out);
   15a9a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
                return;
            }
        }
        output.putline(CMD_INVALID_STR);
   15a9e:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
    }
    else {
        getRegisteredCommandList(output);
    }
}
   15aa0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15aa4:	f001 bda2 	b.w	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15aa8:	4906      	ldr	r1, [pc, #24]	; (15ac4 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15aaa:	e7f6      	b.n	15a9a <CommandProcessor::getHelpText(str&, CharDev&)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 2)
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15aac:	3401      	adds	r4, #1
   15aae:	e7e0      	b.n	15a72 <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15ab0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15ab4:	4904      	ldr	r1, [pc, #16]	; (15ac8 <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   15ab6:	e7f2      	b.n	15a9e <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15ab8:	4631      	mov	r1, r6
   15aba:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
}
   15abc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15ac0:	f7ff bf7c 	b.w	159bc <CommandProcessor::getRegisteredCommandList(CharDev&)>
   15ac4:	0002514f 	.word	0x0002514f
   15ac8:	00025173 	.word	0x00025173

00015acc <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:175

void CommandProcessor::prepareCmdParam(str& input, const char* pCmdToRemove)
{
   15acc:	b538      	push	{r3, r4, r5, lr}
   15ace:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177
    int i = 0;
    for (i=0; i<input.getLen(); i++) {
   15ad0:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 1)
   15ad2:	4628      	mov	r0, r5
   15ad4:	f000 fc83 	bl	163de <str::getLen() const>
   15ad8:	4284      	cmp	r4, r0
   15ada:	da08      	bge.n	15aee <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:178
        if (input[i] == ' ') {
   15adc:	4621      	mov	r1, r4
   15ade:	4628      	mov	r0, r5
   15ae0:	f000 fe14 	bl	1670c <str::operator[](int)>
   15ae4:	7803      	ldrb	r3, [r0, #0]
   15ae6:	2b20      	cmp	r3, #32
   15ae8:	d001      	beq.n	15aee <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 2)
    for (i=0; i<input.getLen(); i++) {
   15aea:	3401      	adds	r4, #1
   15aec:	e7f1      	b.n	15ad2 <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:182
            break;
        }
    }
    input.eraseFirst(i);
   15aee:	4621      	mov	r1, r4
   15af0:	4628      	mov	r0, r5
   15af2:	f000 fd5f 	bl	165b4 <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15af6:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:184
}
   15af8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15afc:	4901      	ldr	r1, [pc, #4]	; (15b04 <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   15afe:	f000 bdc1 	b.w	16684 <str::trimStart(char const*)>
   15b02:	bf00      	nop
   15b04:	0002657f 	.word	0x0002657f

00015b08 <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b0c:	460c      	mov	r4, r1
   15b0e:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15b10:	4951      	ldr	r1, [pc, #324]	; (15c58 <CommandProcessor::handleCommand(str&, CharDev&)+0x150>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15b12:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15b14:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15b16:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15b18:	f000 fdd4 	bl	166c4 <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:58
    if(cmd.beginsWithWholeWordIgnoreCase(HELP_STR))
   15b1c:	2220      	movs	r2, #32
   15b1e:	494f      	ldr	r1, [pc, #316]	; (15c5c <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   15b20:	4620      	mov	r0, r4
   15b22:	f000 fd2b 	bl	1657c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   15b26:	4607      	mov	r7, r0
   15b28:	2800      	cmp	r0, #0
   15b2a:	d14c      	bne.n	15bc6 <CommandProcessor::handleCommand(str&, CharDev&)+0xbe>
   15b2c:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 1)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   15b2e:	68b3      	ldr	r3, [r6, #8]
   15b30:	4599      	cmp	r9, r3
   15b32:	d356      	bcc.n	15be2 <CommandProcessor::handleCommand(str&, CharDev&)+0xda>
   15b34:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102 (discriminator 1)
                cmd.scanf("%7s ", shortCmd);
   15b38:	f8df b12c 	ldr.w	fp, [pc, #300]	; 15c68 <CommandProcessor::handleCommand(str&, CharDev&)+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90 (discriminator 1)
            for(i=0; i < mCmdHandlerVector.size(); i++)
   15b3c:	68b3      	ldr	r3, [r6, #8]
   15b3e:	4599      	cmp	r9, r3
   15b40:	f080 8082 	bcs.w	15c48 <CommandProcessor::handleCommand(str&, CharDev&)+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   15b44:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15b46:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15b48:	eb0d 0102 	add.w	r1, sp, r2
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15b4c:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15b50:	a803      	add	r0, sp, #12
   15b52:	f000 fc1d 	bl	16390 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:94
                regCmd = cp.pCommandStr;  /* Set to the command text */
   15b56:	f8d8 1000 	ldr.w	r1, [r8]
   15b5a:	a803      	add	r0, sp, #12
   15b5c:	f000 fe8a 	bl	16874 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15b60:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15b62:	aa01      	add	r2, sp, #4
   15b64:	4659      	mov	r1, fp
   15b66:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15b68:	9301      	str	r3, [sp, #4]
   15b6a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15b6c:	f000 fc40 	bl	163f0 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103
                if(strlen(shortCmd) >= 2 && regCmd.beginsWithIgnoreCase(shortCmd))
   15b70:	a801      	add	r0, sp, #4
   15b72:	f00a fa55 	bl	20020 <strlen>
   15b76:	2801      	cmp	r0, #1
   15b78:	d960      	bls.n	15c3c <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103 (discriminator 1)
   15b7a:	a901      	add	r1, sp, #4
   15b7c:	a803      	add	r0, sp, #12
   15b7e:	f000 fce6 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   15b82:	4682      	mov	sl, r0
   15b84:	2800      	cmp	r0, #0
   15b86:	d059      	beq.n	15c3c <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:105
                    prepareCmdParam(cmd, cp.pCommandStr);
   15b88:	f8d8 2000 	ldr.w	r2, [r8]
   15b8c:	4621      	mov	r1, r4
   15b8e:	4630      	mov	r0, r6
   15b90:	f7ff ff9c 	bl	15acc <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:106
                    if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   15b94:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15b98:	f8d8 200c 	ldr.w	r2, [r8, #12]
   15b9c:	4629      	mov	r1, r5
   15b9e:	4620      	mov	r0, r4
   15ba0:	4798      	blx	r3
   15ba2:	b960      	cbnz	r0, 15bbe <CommandProcessor::handleCommand(str&, CharDev&)+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:107
                        output.putline(COMMAND_FAILURE_HELP);
   15ba4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15ba8:	492d      	ldr	r1, [pc, #180]	; (15c60 <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   15baa:	4628      	mov	r0, r5
   15bac:	f001 fd1e 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:108
                        output.putline(cp.pCmdHelpText);
   15bb0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15bb4:	f8d8 1004 	ldr.w	r1, [r8, #4]
   15bb8:	4628      	mov	r0, r5
   15bba:	f001 fd17 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:112
                    break;
   15bbe:	a803      	add	r0, sp, #12
   15bc0:	f000 fbfa 	bl	163b8 <str::~str()>
   15bc4:	e035      	b.n	15c32 <CommandProcessor::handleCommand(str&, CharDev&)+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:60
        prepareCmdParam(cmd, HELP_STR);
   15bc6:	4a25      	ldr	r2, [pc, #148]	; (15c5c <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   15bc8:	4621      	mov	r1, r4
   15bca:	4630      	mov	r0, r6
   15bcc:	f7ff ff7e 	bl	15acc <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:61
        getHelpText(cmd, output);
   15bd0:	462a      	mov	r2, r5
   15bd2:	4621      	mov	r1, r4
   15bd4:	4630      	mov	r0, r6
   15bd6:	f7ff ff41 	bl	15a5c <CommandProcessor::getHelpText(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:123
}
   15bda:	4638      	mov	r0, r7
   15bdc:	b011      	add	sp, #68	; 0x44
   15bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15be2:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
            if(cmd.beginsWithWholeWordIgnoreCase(cp.pCommandStr))
   15be4:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15be6:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
   15bea:	4620      	mov	r0, r4
   15bec:	f8d8 1000 	ldr.w	r1, [r8]
   15bf0:	f000 fcc4 	bl	1657c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   15bf4:	4682      	mov	sl, r0
   15bf6:	b1f0      	cbz	r0, 15c36 <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:74
                prepareCmdParam(cmd, cp.pCommandStr);
   15bf8:	f8d8 2000 	ldr.w	r2, [r8]
   15bfc:	4621      	mov	r1, r4
   15bfe:	4630      	mov	r0, r6
   15c00:	f7ff ff64 	bl	15acc <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:75
                if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   15c04:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15c08:	f8d8 200c 	ldr.w	r2, [r8, #12]
   15c0c:	4629      	mov	r1, r5
   15c0e:	4620      	mov	r0, r4
   15c10:	4798      	blx	r3
   15c12:	4607      	mov	r7, r0
   15c14:	2800      	cmp	r0, #0
   15c16:	d1e0      	bne.n	15bda <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:76
                    output.putline(COMMAND_FAILURE_HELP);
   15c18:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15c1c:	4910      	ldr	r1, [pc, #64]	; (15c60 <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   15c1e:	4628      	mov	r0, r5
   15c20:	f001 fce4 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:77
                    output.putline(cp.pCmdHelpText);
   15c24:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15c28:	f8d8 1004 	ldr.w	r1, [r8, #4]
   15c2c:	4628      	mov	r0, r5
   15c2e:	f001 fcdd 	bl	175ec <CharDev::putline(char const*, unsigned int)>
   15c32:	4657      	mov	r7, sl
   15c34:	e7d1      	b.n	15bda <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 2)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   15c36:	f109 0901 	add.w	r9, r9, #1
   15c3a:	e778      	b.n	15b2e <CommandProcessor::handleCommand(str&, CharDev&)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   15c3c:	a803      	add	r0, sp, #12
   15c3e:	f000 fbbb 	bl	163b8 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90
            for(i=0; i < mCmdHandlerVector.size(); i++)
   15c42:	f109 0901 	add.w	r9, r9, #1
   15c46:	e779      	b.n	15b3c <CommandProcessor::handleCommand(str&, CharDev&)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:119
            output.putline(CMD_INVALID_STR);
   15c48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15c4c:	4905      	ldr	r1, [pc, #20]	; (15c64 <CommandProcessor::handleCommand(str&, CharDev&)+0x15c>)
   15c4e:	4628      	mov	r0, r5
   15c50:	f001 fccc 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:122
    return found;
   15c54:	e7c1      	b.n	15bda <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
   15c56:	bf00      	nop
   15c58:	00025198 	.word	0x00025198
   15c5c:	0002519b 	.word	0x0002519b
   15c60:	000251a0 	.word	0x000251a0
   15c64:	00025173 	.word	0x00025173
   15c68:	000251c5 	.word	0x000251c5

00015c6c <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:249
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         * @note You should use init() instead of the constructor to initialize and allocate memory
         *       because the status of init() is checked and reported, but a failure at constructor
         *       will not be easily caught (or reported).
         */
        virtual bool init(void)   { return true; }
   15c6c:	2001      	movs	r0, #1
   15c6e:	4770      	bx	lr

00015c70 <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:256
        /**
         * Optional: Override this function to register your telemetry before FreeRTOS starts.
         * @return   true upon success.
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         */
        virtual bool regTlm(void) { return true; }
   15c70:	2001      	movs	r0, #1
   15c72:	4770      	bx	lr

00015c74 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:268
         * taskEntry() to take place before the run() method is called.
         *
         * @warning  Do not suspend your task otherwise all tasks will get suspended.
         * @return   true upon success.
         */
        virtual bool taskEntry(void) { return true; }
   15c74:	2001      	movs	r0, #1
   15c76:	4770      	bx	lr

00015c78 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:317

    return failure;
}

void scheduler_add_task(scheduler_task* task)
{
   15c78:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:318
    if (NULL != task)
   15c7a:	4604      	mov	r4, r0
   15c7c:	b138      	cbz	r0, 15c8e <scheduler_add_task(scheduler_task*)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:321
    {
        /* Insert new task at the beginning */
        task_list_t *newEntry = new task_list_t;
   15c7e:	2008      	movs	r0, #8
   15c80:	f000 fe30 	bl	168e4 <operator new(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
        if (NULL != newEntry) {
            newEntry->next = gpTaskList;
   15c84:	4b02      	ldr	r3, [pc, #8]	; (15c90 <scheduler_add_task(scheduler_task*)+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:324
            newEntry->task = task;
   15c86:	6004      	str	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   15c88:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:325
            gpTaskList = newEntry;
   15c8a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   15c8c:	6042      	str	r2, [r0, #4]
   15c8e:	bd10      	pop	{r4, pc}
   15c90:	2007c4fc 	.word	0x2007c4fc

00015c94 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:350
    }
}



scheduler_task::scheduler_task(const char *name, uint32_t stack, uint8_t priority, void *param) :
   15c94:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:364
   mTaskDelayMs(0),
   mStatUpdateRateMs(60 * 1000),
   mName(name),
   mParam(param),
   mStackSize(stack),
   mPriority(priority)
   15c96:	4d0b      	ldr	r5, [pc, #44]	; (15cc4 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   15c98:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   15c9c:	6005      	str	r5, [r0, #0]
   15c9e:	2500      	movs	r5, #0
   15ca0:	6045      	str	r5, [r0, #4]
   15ca2:	6085      	str	r5, [r0, #8]
   15ca4:	6105      	str	r5, [r0, #16]
   15ca6:	6145      	str	r5, [r0, #20]
   15ca8:	6185      	str	r5, [r0, #24]
   15caa:	61c5      	str	r5, [r0, #28]
   15cac:	f64e 2560 	movw	r5, #60000	; 0xea60
   15cb0:	6241      	str	r1, [r0, #36]	; 0x24
   15cb2:	9904      	ldr	r1, [sp, #16]
   15cb4:	60c6      	str	r6, [r0, #12]
   15cb6:	6205      	str	r5, [r0, #32]
   15cb8:	6281      	str	r1, [r0, #40]	; 0x28
   15cba:	62c2      	str	r2, [r0, #44]	; 0x2c
   15cbc:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:367
{

}
   15cc0:	bd70      	pop	{r4, r5, r6, pc}
   15cc2:	bf00      	nop
   15cc4:	0002524c 	.word	0x0002524c

00015cc8 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:498
    return true;
}

void* scheduler_task::getSharedObject(uint8_t index)
{
    return (index < gEnumObjects.count) ? gEnumObjects.pointers[index] : NULL;
   15cc8:	4b04      	ldr	r3, [pc, #16]	; (15cdc <scheduler_task::getSharedObject(unsigned char)+0x14>)
   15cca:	681a      	ldr	r2, [r3, #0]
   15ccc:	4290      	cmp	r0, r2
   15cce:	bf3a      	itte	cc
   15cd0:	685b      	ldrcc	r3, [r3, #4]
   15cd2:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   15cd6:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:499
}
   15cd8:	4770      	bx	lr
   15cda:	bf00      	nop
   15cdc:	2007c500 	.word	0x2007c500

00015ce0 <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
 *             otherwise it will return a buffer pointer without blocking since buffer will always be
 *             available if OS is not running since no multi-threaded operation is going on.
 */
static char * logger_get_buffer_ptr(const bool os_running)
{
    char * buffer = NULL;
   15ce0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:125
{
   15ce2:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
    char * buffer = NULL;
   15ce4:	ac02      	add	r4, sp, #8
   15ce6:	f844 3d04 	str.w	r3, [r4, #-4]!
   15cea:	4d0d      	ldr	r5, [pc, #52]	; (15d20 <logger_get_buffer_ptr+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:129

    /* Get an available buffer to write the data to, and if OS is not running, we will always get a buffer */
    if (!os_running) {
   15cec:	b940      	cbnz	r0, 15d00 <logger_get_buffer_ptr+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:130
        xQueueReceive(g_empty_buffer_queue, &buffer, 0);
   15cee:	4603      	mov	r3, r0
   15cf0:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
    }
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
        ++g_blocked_calls;

        /* This time, just block forever until we get a buffer */
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   15cf2:	4621      	mov	r1, r4
   15cf4:	6828      	ldr	r0, [r5, #0]
   15cf6:	f002 fd7b 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:140
    }

    return buffer;
}
   15cfa:	9801      	ldr	r0, [sp, #4]
   15cfc:	b003      	add	sp, #12
   15cfe:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:132
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
   15d00:	220a      	movs	r2, #10
   15d02:	4621      	mov	r1, r4
   15d04:	6828      	ldr	r0, [r5, #0]
   15d06:	f002 fd73 	bl	187f0 <xQueueGenericReceive>
   15d0a:	4603      	mov	r3, r0
   15d0c:	2800      	cmp	r0, #0
   15d0e:	d1f4      	bne.n	15cfa <logger_get_buffer_ptr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:133
        ++g_blocked_calls;
   15d10:	4904      	ldr	r1, [pc, #16]	; (15d24 <logger_get_buffer_ptr+0x44>)
   15d12:	880a      	ldrh	r2, [r1, #0]
   15d14:	3201      	adds	r2, #1
   15d16:	800a      	strh	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   15d18:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15d1c:	e7e9      	b.n	15cf2 <logger_get_buffer_ptr+0x12>
   15d1e:	bf00      	nop
   15d20:	2007c50c 	.word	0x2007c50c
   15d24:	2007c508 	.word	0x2007c508

00015d28 <logger_write_to_file>:
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   15d28:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   15d2a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   15d2c:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   15d30:	460d      	mov	r5, r1
   15d32:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   15d34:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15d36:	f7fa fbb1 	bl	1049c <sys_get_uptime_us>
   15d3a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15d3e:	2300      	movs	r3, #0
   15d40:	f007 fd3a 	bl	1d7b8 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    FIL fatfs_file = { 0 };
   15d44:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15d48:	4606      	mov	r6, r0
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   15d4a:	4621      	mov	r1, r4
   15d4c:	a803      	add	r0, sp, #12
   15d4e:	f008 fc0d 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    if (0 == bytes_to_write_uint) {
   15d52:	2d00      	cmp	r5, #0
   15d54:	d038      	beq.n	15dc8 <logger_write_to_file+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   15d56:	2212      	movs	r2, #18
   15d58:	491c      	ldr	r1, [pc, #112]	; (15dcc <logger_write_to_file+0xa4>)
   15d5a:	a803      	add	r0, sp, #12
   15d5c:	f7fc ff16 	bl	12b8c <f_open>
   15d60:	4604      	mov	r4, r0
   15d62:	bb68      	cbnz	r0, 15dc0 <logger_write_to_file+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   15d64:	9906      	ldr	r1, [sp, #24]
   15d66:	a803      	add	r0, sp, #12
   15d68:	f7fd f98c 	bl	13084 <f_lseek>
   15d6c:	4604      	mov	r4, r0
   15d6e:	b930      	cbnz	r0, 15d7e <logger_write_to_file+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   15d70:	ab02      	add	r3, sp, #8
   15d72:	462a      	mov	r2, r5
   15d74:	4639      	mov	r1, r7
   15d76:	a803      	add	r0, sp, #12
   15d78:	f7fd f857 	bl	12e2a <f_write>
   15d7c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        f_close(&fatfs_file);
   15d7e:	a803      	add	r0, sp, #12
   15d80:	f7fd f96e 	bl	13060 <f_close>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15d84:	f7fa fb8a 	bl	1049c <sys_get_uptime_us>
   15d88:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15d8c:	2300      	movs	r3, #0
   15d8e:	f007 fd13 	bl	1d7b8 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   15d92:	4b0f      	ldr	r3, [pc, #60]	; (15dd0 <logger_write_to_file+0xa8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   15d94:	1b80      	subs	r0, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   15d96:	881a      	ldrh	r2, [r3, #0]
   15d98:	4290      	cmp	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   15d9a:	9a02      	ldr	r2, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   15d9c:	bf88      	it	hi
   15d9e:	8018      	strhhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   15da0:	4295      	cmp	r5, r2
   15da2:	bf0c      	ite	eq
   15da4:	2601      	moveq	r6, #1
   15da6:	2600      	movne	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106
    if (!success) {
   15da8:	d006      	beq.n	15db8 <logger_write_to_file+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   15daa:	9b05      	ldr	r3, [sp, #20]
   15dac:	4621      	mov	r1, r4
   15dae:	9300      	str	r3, [sp, #0]
   15db0:	4808      	ldr	r0, [pc, #32]	; (15dd4 <logger_write_to_file+0xac>)
   15db2:	462b      	mov	r3, r5
   15db4:	f009 fd86 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
}
   15db8:	4630      	mov	r0, r6
   15dba:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   15dbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   15dc0:	4805      	ldr	r0, [pc, #20]	; (15dd8 <logger_write_to_file+0xb0>)
   15dc2:	f009 fd7f 	bl	1f8c4 <iprintf>
   15dc6:	e7dd      	b.n	15d84 <logger_write_to_file+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   15dc8:	462c      	mov	r4, r5
   15dca:	e7db      	b.n	15d84 <logger_write_to_file+0x5c>
   15dcc:	000252c7 	.word	0x000252c7
   15dd0:	2007c510 	.word	0x2007c510
   15dd4:	000252e5 	.word	0x000252e5
   15dd8:	000252d1 	.word	0x000252d1

00015ddc <logger_task>:
logger_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   15ddc:	4b2f      	ldr	r3, [pc, #188]	; (15e9c <logger_task+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   15dde:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15de2:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   15de4:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 15ea4 <logger_task+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15de8:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15dea:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 15ea8 <logger_task+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   15dee:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   15df2:	2300      	movs	r3, #0
   15df4:	af02      	add	r7, sp, #8
   15df6:	f847 3d04 	str.w	r3, [r7, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   15dfa:	f64e 2260 	movw	r2, #60000	; 0xea60
   15dfe:	4639      	mov	r1, r7
   15e00:	f8d9 0000 	ldr.w	r0, [r9]
   15e04:	f002 fcf4 	bl	187f0 <xQueueGenericReceive>
   15e08:	b108      	cbz	r0, 15e0e <logger_task+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   15e0a:	9b01      	ldr	r3, [sp, #4]
   15e0c:	b92b      	cbnz	r3, 15e1a <logger_task+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   15e0e:	1b71      	subs	r1, r6, r5
   15e10:	4628      	mov	r0, r5
   15e12:	f7ff ff89 	bl	15d28 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   15e16:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   15e18:	e7eb      	b.n	15df2 <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15e1a:	f8d9 0000 	ldr.w	r0, [r9]
   15e1e:	f002 fdb5 	bl	1898c <uxQueueMessagesWaiting>
   15e22:	f8ba 3000 	ldrh.w	r3, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   15e26:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   15e28:	3001      	adds	r0, #1
   15e2a:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   15e2c:	bf88      	it	hi
   15e2e:	f8aa 0000 	strhhi.w	r0, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   15e32:	4620      	mov	r0, r4
   15e34:	f00a f8f4 	bl	20020 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   15e38:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e3a:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   15e3c:	5423      	strb	r3, [r4, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e3e:	f100 0b01 	add.w	fp, r0, #1
   15e42:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   15e44:	eb06 040b 	add.w	r4, r6, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   15e48:	f802 100b 	strb.w	r1, [r2, fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   15e4c:	45a0      	cmp	r8, r4
   15e4e:	9901      	ldr	r1, [sp, #4]
   15e50:	d81f      	bhi.n	15e92 <logger_task+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   15e52:	eba8 0206 	sub.w	r2, r8, r6
   15e56:	4630      	mov	r0, r6
   15e58:	f008 fb63 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   15e5c:	eba4 0408 	sub.w	r4, r4, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   15e60:	f44f 6180 	mov.w	r1, #1024	; 0x400
   15e64:	4628      	mov	r0, r5
   15e66:	f7ff ff5f 	bl	15d28 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   15e6a:	b13c      	cbz	r4, 15e7c <logger_task+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   15e6c:	9901      	ldr	r1, [sp, #4]
   15e6e:	ebab 0b04 	sub.w	fp, fp, r4
   15e72:	4622      	mov	r2, r4
   15e74:	4459      	add	r1, fp
   15e76:	4628      	mov	r0, r5
   15e78:	f008 fb53 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   15e7c:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   15e7e:	4808      	ldr	r0, [pc, #32]	; (15ea0 <logger_task+0xc4>)
   15e80:	2300      	movs	r3, #0
   15e82:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15e86:	4639      	mov	r1, r7
   15e88:	6800      	ldr	r0, [r0, #0]
   15e8a:	f002 fba9 	bl	185e0 <xQueueGenericSend>
   15e8e:	4626      	mov	r6, r4
   15e90:	e7af      	b.n	15df2 <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   15e92:	465a      	mov	r2, fp
   15e94:	4630      	mov	r0, r6
   15e96:	f008 fb44 	bl	1e522 <memcpy>
   15e9a:	e7f0      	b.n	15e7e <logger_task+0xa2>
   15e9c:	2007c528 	.word	0x2007c528
   15ea0:	2007c50c 	.word	0x2007c50c
   15ea4:	2007c524 	.word	0x2007c524
   15ea8:	2007c50a 	.word	0x2007c50a

00015eac <logger_write_log_message>:
logger_write_log_message():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:148
{
   15eac:	b573      	push	{r0, r1, r4, r5, r6, lr}
   15eae:	ac02      	add	r4, sp, #8
   15eb0:	f844 0d04 	str.w	r0, [r4, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:150
    if (os_running) {
   15eb4:	460d      	mov	r5, r1
   15eb6:	b149      	cbz	r1, 15ecc <logger_write_log_message+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:151
        xQueueSend(g_write_buffer_queue, &buffer, portMAX_DELAY);
   15eb8:	2300      	movs	r3, #0
   15eba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15ebe:	4621      	mov	r1, r4
   15ec0:	480a      	ldr	r0, [pc, #40]	; (15eec <logger_write_log_message+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   15ec2:	6800      	ldr	r0, [r0, #0]
   15ec4:	f002 fb8c 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:163
}
   15ec8:	b002      	add	sp, #8
   15eca:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:155
        size_t len = strlen(buffer);
   15ecc:	4606      	mov	r6, r0
   15ece:	f00a f8a7 	bl	20020 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:156
        buffer[len] = '\n';
   15ed2:	230a      	movs	r3, #10
   15ed4:	5433      	strb	r3, [r6, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:157
        buffer[++len] = '\0';
   15ed6:	9b01      	ldr	r3, [sp, #4]
   15ed8:	1c41      	adds	r1, r0, #1
   15eda:	545d      	strb	r5, [r3, r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:158
        logger_write_to_file(buffer, len);
   15edc:	9801      	ldr	r0, [sp, #4]
   15ede:	f7ff ff23 	bl	15d28 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   15ee2:	462b      	mov	r3, r5
   15ee4:	462a      	mov	r2, r5
   15ee6:	4621      	mov	r1, r4
   15ee8:	4801      	ldr	r0, [pc, #4]	; (15ef0 <logger_write_log_message+0x44>)
   15eea:	e7ea      	b.n	15ec2 <logger_write_log_message+0x16>
   15eec:	2007c524 	.word	0x2007c524
   15ef0:	2007c50c 	.word	0x2007c50c

00015ef4 <logger_send_flush_request>:
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:347

        return (!success);
}

void logger_send_flush_request(void)
{
   15ef4:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   15ef6:	f003 f9bf 	bl	19278 <xTaskGetSchedulerState>
   15efa:	2802      	cmp	r0, #2
   15efc:	d10c      	bne.n	15f18 <logger_send_flush_request+0x24>
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   15efe:	4b08      	ldr	r3, [pc, #32]	; (15f20 <logger_send_flush_request+0x2c>)
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   15f00:	681b      	ldr	r3, [r3, #0]
   15f02:	b14b      	cbz	r3, 15f18 <logger_send_flush_request+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
    {
        char * null_ptr_to_flush = NULL;
   15f04:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   15f06:	4807      	ldr	r0, [pc, #28]	; (15f24 <logger_send_flush_request+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
        char * null_ptr_to_flush = NULL;
   15f08:	a902      	add	r1, sp, #8
   15f0a:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   15f0e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15f12:	6800      	ldr	r0, [r0, #0]
   15f14:	f002 fb64 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:353
    }
}
   15f18:	b003      	add	sp, #12
   15f1a:	f85d fb04 	ldr.w	pc, [sp], #4
   15f1e:	bf00      	nop
   15f20:	2007c528 	.word	0x2007c528
   15f24:	2007c524 	.word	0x2007c524

00015f28 <logger_get_logged_call_count>:
logger_get_logged_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:357

uint32_t logger_get_logged_call_count(logger_msg_t severity)
{
    return (severity < log_last) ? g_logger_calls[severity] : 0;
   15f28:	2803      	cmp	r0, #3
   15f2a:	bf9a      	itte	ls
   15f2c:	4b02      	ldrls	r3, [pc, #8]	; (15f38 <logger_get_logged_call_count+0x10>)
   15f2e:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
   15f32:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:358
}
   15f34:	4770      	bx	lr
   15f36:	bf00      	nop
   15f38:	2007c514 	.word	0x2007c514

00015f3c <logger_get_blocked_call_count>:
logger_get_blocked_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:363

uint16_t logger_get_blocked_call_count(void)
{
    return g_blocked_calls;
}
   15f3c:	4b01      	ldr	r3, [pc, #4]	; (15f44 <logger_get_blocked_call_count+0x8>)
   15f3e:	8818      	ldrh	r0, [r3, #0]
   15f40:	4770      	bx	lr
   15f42:	bf00      	nop
   15f44:	2007c508 	.word	0x2007c508

00015f48 <logger_get_highest_file_write_time_ms>:
logger_get_highest_file_write_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:368

uint16_t logger_get_highest_file_write_time_ms(void)
{
    return g_highest_file_write_time;
}
   15f48:	4b01      	ldr	r3, [pc, #4]	; (15f50 <logger_get_highest_file_write_time_ms+0x8>)
   15f4a:	8818      	ldrh	r0, [r3, #0]
   15f4c:	4770      	bx	lr
   15f4e:	bf00      	nop
   15f50:	2007c510 	.word	0x2007c510

00015f54 <logger_get_num_buffers_watermark>:
logger_get_num_buffers_watermark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:373

uint16_t logger_get_num_buffers_watermark(void)
{
    return g_buffer_watermark;
}
   15f54:	4b01      	ldr	r3, [pc, #4]	; (15f5c <logger_get_num_buffers_watermark+0x8>)
   15f56:	8818      	ldrh	r0, [r3, #0]
   15f58:	4770      	bx	lr
   15f5a:	bf00      	nop
   15f5c:	2007c50a 	.word	0x2007c50a

00015f60 <logger_init>:
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376

void logger_init(uint8_t logger_priority)
{
   15f60:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   15f64:	4c2b      	ldr	r4, [pc, #172]	; (16014 <logger_init+0xb4>)
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   15f66:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   15f68:	6825      	ldr	r5, [r4, #0]
   15f6a:	2d00      	cmp	r5, #0
   15f6c:	d14a      	bne.n	16004 <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   15f6e:	f44f 6080 	mov.w	r0, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   15f72:	9503      	str	r5, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   15f74:	f008 fa96 	bl	1e4a4 <malloc>
   15f78:	4e27      	ldr	r6, [pc, #156]	; (16018 <logger_init+0xb8>)
   15f7a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   15f7c:	b9a8      	cbnz	r0, 15faa <logger_init+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   15f7e:	6820      	ldr	r0, [r4, #0]
   15f80:	2800      	cmp	r0, #0
   15f82:	d142      	bne.n	1600a <logger_init+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   15f84:	6833      	ldr	r3, [r6, #0]
   15f86:	b163      	cbz	r3, 15fa2 <logger_init+0x42>
   15f88:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   15f8a:	2300      	movs	r3, #0
   15f8c:	a903      	add	r1, sp, #12
   15f8e:	461a      	mov	r2, r3
   15f90:	6830      	ldr	r0, [r6, #0]
   15f92:	f002 fc2d 	bl	187f0 <xQueueGenericReceive>
   15f96:	b110      	cbz	r0, 15f9e <logger_init+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   15f98:	9803      	ldr	r0, [sp, #12]
   15f9a:	f008 fa8b 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   15f9e:	3c01      	subs	r4, #1
   15fa0:	d1f3      	bne.n	15f8a <logger_init+0x2a>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   15fa2:	481e      	ldr	r0, [pc, #120]	; (1601c <logger_init+0xbc>)
   15fa4:	f009 fd02 	bl	1f9ac <puts>
   15fa8:	e02c      	b.n	16004 <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15faa:	462a      	mov	r2, r5
   15fac:	2104      	movs	r1, #4
   15fae:	200a      	movs	r0, #10
   15fb0:	f002 fafc 	bl	185ac <xQueueGenericCreate>
   15fb4:	4f1a      	ldr	r7, [pc, #104]	; (16020 <logger_init+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15fb6:	462a      	mov	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15fb8:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15fba:	2104      	movs	r1, #4
   15fbc:	200a      	movs	r0, #10
   15fbe:	f002 faf5 	bl	185ac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   15fc2:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   15fc4:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   15fc6:	2b00      	cmp	r3, #0
   15fc8:	d0d9      	beq.n	15f7e <logger_init+0x1e>
   15fca:	2800      	cmp	r0, #0
   15fcc:	d0d7      	beq.n	15f7e <logger_init+0x1e>
   15fce:	250a      	movs	r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   15fd0:	2096      	movs	r0, #150	; 0x96
   15fd2:	f008 fa67 	bl	1e4a4 <malloc>
   15fd6:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   15fd8:	2800      	cmp	r0, #0
   15fda:	d0d0      	beq.n	15f7e <logger_init+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   15fdc:	2300      	movs	r3, #0
   15fde:	a903      	add	r1, sp, #12
   15fe0:	461a      	mov	r2, r3
   15fe2:	6830      	ldr	r0, [r6, #0]
   15fe4:	f002 fafc 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   15fe8:	3d01      	subs	r5, #1
   15fea:	d1f1      	bne.n	15fd0 <logger_init+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   15fec:	9501      	str	r5, [sp, #4]
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   15fee:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   15ff2:	462b      	mov	r3, r5
   15ff4:	f44f 72c0 	mov.w	r2, #384	; 0x180
   15ff8:	490a      	ldr	r1, [pc, #40]	; (16024 <logger_init+0xc4>)
   15ffa:	480b      	ldr	r0, [pc, #44]	; (16028 <logger_init+0xc8>)
   15ffc:	f002 fd54 	bl	18aa8 <xTaskCreate>
   16000:	2800      	cmp	r0, #0
   16002:	d0bc      	beq.n	15f7e <logger_init+0x1e>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   16004:	b004      	add	sp, #16
   16006:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   1600a:	f008 fa53 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   1600e:	2300      	movs	r3, #0
   16010:	6023      	str	r3, [r4, #0]
   16012:	e7b7      	b.n	15f84 <logger_init+0x24>
   16014:	2007c528 	.word	0x2007c528
   16018:	2007c50c 	.word	0x2007c50c
   1601c:	0002527b 	.word	0x0002527b
   16020:	2007c524 	.word	0x2007c524
   16024:	00025274 	.word	0x00025274
   16028:	00015ddd 	.word	0x00015ddd

0001602c <logger_set_printf>:
logger_set_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:388

void logger_set_printf(logger_msg_t type, bool enable)
{
    const uint8_t mask = (1 << type);
   1602c:	2301      	movs	r3, #1
   1602e:	fa03 f000 	lsl.w	r0, r3, r0
   16032:	4b04      	ldr	r3, [pc, #16]	; (16044 <logger_set_printf+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
    if (enable) {
        g_logger_printf_mask |= mask;
   16034:	781a      	ldrb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:389
    if (enable) {
   16036:	b111      	cbz	r1, 1603e <logger_set_printf+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
        g_logger_printf_mask |= mask;
   16038:	4310      	orrs	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:393
    }
    else {
        g_logger_printf_mask &= ~mask;
   1603a:	7018      	strb	r0, [r3, #0]
   1603c:	4770      	bx	lr
   1603e:	ea22 0000 	bic.w	r0, r2, r0
   16042:	e7fa      	b.n	1603a <logger_set_printf+0xe>
   16044:	2007c096 	.word	0x2007c096

00016048 <logger_log>:
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
    }
}

void logger_log(logger_msg_t type, const char * filename, const char * func_name, unsigned line_num,
                const char * msg, ...)
{
   16048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1604c:	469a      	mov	sl, r3
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1604e:	4b45      	ldr	r3, [pc, #276]	; (16164 <logger_log+0x11c>)
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   16050:	b097      	sub	sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   16052:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   16054:	4606      	mov	r6, r0
   16056:	460c      	mov	r4, r1
   16058:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   1605a:	2b00      	cmp	r3, #0
   1605c:	d07c      	beq.n	16158 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:407
    }

    uint32_t len = 0;
    char * buffer = NULL;
    char * temp_ptr = NULL;
    const rtc_t time = rtc_gettime();
   1605e:	a80f      	add	r0, sp, #60	; 0x3c
   16060:	f001 fb60 	bl	17724 <rtc_gettime>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   16064:	f7fa fa1a 	bl	1049c <sys_get_uptime_us>
   16068:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1606c:	2300      	movs	r3, #0
   1606e:	f007 fba3 	bl	1d7b8 <__aeabi_uldivmod>
   16072:	4681      	mov	r9, r0
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const unsigned int uptime = sys_get_uptime_ms();
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16074:	f003 f900 	bl	19278 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412

    /* This must match up with the logger_msg_t enumeration */
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16078:	4b3b      	ldr	r3, [pc, #236]	; (16168 <logger_log+0x120>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   1607a:	1e82      	subs	r2, r0, #2
   1607c:	f1d2 0800 	rsbs	r8, r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16080:	af16      	add	r7, sp, #88	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16082:	eb48 0802 	adc.w	r8, r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16086:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   16088:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:415

    // Find the back-slash or forward-slash to get filename only, not absolute or relative path
    if(0 != filename) {
   1608c:	2c00      	cmp	r4, #0
   1608e:	d066      	beq.n	1615e <logger_log+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:416
        temp_ptr = strrchr(filename, '/');
   16090:	212f      	movs	r1, #47	; 0x2f
   16092:	4620      	mov	r0, r4
   16094:	f00a f81a 	bl	200cc <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418
        // If forward-slash not found, find back-slash
        if(0 == temp_ptr) temp_ptr = strrchr(filename, '\\');
   16098:	b920      	cbnz	r0, 160a4 <logger_log+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418 (discriminator 1)
   1609a:	215c      	movs	r1, #92	; 0x5c
   1609c:	4620      	mov	r0, r4
   1609e:	f00a f815 	bl	200cc <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:419 (discriminator 1)
        if(0 != temp_ptr) filename = temp_ptr+1;
   160a2:	b100      	cbz	r0, 160a6 <logger_log+0x5e>
   160a4:	1c44      	adds	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
    else {
        filename = "";
    }

    if (0 == func_name) {
        func_name = "";
   160a6:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 1617c <logger_log+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    }

    /* Get an available buffer */
    buffer = logger_get_buffer_ptr(os_running);
   160aa:	4640      	mov	r0, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
        func_name = "";
   160ac:	2d00      	cmp	r5, #0
   160ae:	bf08      	it	eq
   160b0:	465d      	moveq	r5, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   160b2:	f7ff fe15 	bl	15ce0 <logger_get_buffer_ptr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435

    do {
        int mon = time.month;
        int day = time.day;
        int hr = time.hour;
   160b6:	f89d 103e 	ldrb.w	r1, [sp, #62]	; 0x3e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        int min = time.min;
        int sec = time.sec;
        unsigned int up = uptime;
        const char *log_type_str = type_str[type];
        const char *func_parens  = func_name[0] ? "()" : "";
   160ba:	f895 c000 	ldrb.w	ip, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435
        int hr = time.hour;
   160be:	f001 0e1f 	and.w	lr, r1, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   160c2:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:433
        int mon = time.month;
   160c6:	f89d 2041 	ldrb.w	r2, [sp, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   160ca:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   160ce:	910b      	str	r1, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   160d0:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:434
        int day = time.day;
   160d4:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   160d8:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   160dc:	910c      	str	r1, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   160de:	a916      	add	r1, sp, #88	; 0x58
   160e0:	eb01 0186 	add.w	r1, r1, r6, lsl #2
   160e4:	f851 1c10 	ldr.w	r1, [r1, #-16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443

        /* Write the header including time, filename, function name etc */
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   160e8:	f003 031f 	and.w	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   160ec:	910d      	str	r1, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   160ee:	491f      	ldr	r1, [pc, #124]	; (1616c <logger_log+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   160f0:	f8cd e000 	str.w	lr, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   160f4:	f1bc 0f00 	cmp.w	ip, #0
   160f8:	bf08      	it	eq
   160fa:	4659      	moveq	r1, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   160fc:	9107      	str	r1, [sp, #28]
   160fe:	990d      	ldr	r1, [sp, #52]	; 0x34
   16100:	f002 020f 	and.w	r2, r2, #15
   16104:	9104      	str	r1, [sp, #16]
   16106:	990c      	ldr	r1, [sp, #48]	; 0x30
   16108:	f8cd a020 	str.w	sl, [sp, #32]
   1610c:	9102      	str	r1, [sp, #8]
   1610e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   16110:	9506      	str	r5, [sp, #24]
   16112:	9101      	str	r1, [sp, #4]
   16114:	9405      	str	r4, [sp, #20]
   16116:	4916      	ldr	r1, [pc, #88]	; (16170 <logger_log+0x128>)
   16118:	f8cd 900c 	str.w	r9, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   1611c:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   1611e:	f009 fe9f 	bl	1fe60 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
     *
     * Note: "size" of snprintf() includes the NULL character
     */
    do {
        va_list args;
        va_start(args, msg);
   16122:	ab21      	add	r3, sp, #132	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   16124:	f1c0 0195 	rsb	r1, r0, #149	; 0x95
   16128:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1612a:	4438      	add	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
        va_start(args, msg);
   1612c:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   1612e:	f00b f987 	bl	21440 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
        va_end(args);
    } while (0);

    ++g_logger_calls[type];
   16132:	4a10      	ldr	r2, [pc, #64]	; (16174 <logger_log+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   16134:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   16136:	f852 3026 	ldr.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   1613a:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   1613c:	3301      	adds	r3, #1
   1613e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   16142:	f7ff feb3 	bl	15eac <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:471

    /* Print the message out if the printf mask was set */
    if (g_logger_printf_mask & (1 << type)) {
   16146:	4b0c      	ldr	r3, [pc, #48]	; (16178 <logger_log+0x130>)
   16148:	781b      	ldrb	r3, [r3, #0]
   1614a:	fa43 f606 	asr.w	r6, r3, r6
   1614e:	07f3      	lsls	r3, r6, #31
   16150:	d502      	bpl.n	16158 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:472
        puts(buffer);
   16152:	4638      	mov	r0, r7
   16154:	f009 fc2a 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:474
    }
}
   16158:	b017      	add	sp, #92	; 0x5c
   1615a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:422
        filename = "";
   1615e:	4c07      	ldr	r4, [pc, #28]	; (1617c <logger_log+0x134>)
   16160:	e7a1      	b.n	160a6 <logger_log+0x5e>
   16162:	bf00      	nop
   16164:	2007c528 	.word	0x2007c528
   16168:	00025264 	.word	0x00025264
   1616c:	0002535a 	.word	0x0002535a
   16170:	000252a0 	.word	0x000252a0
   16174:	2007c514 	.word	0x2007c514
   16178:	2007c096 	.word	0x2007c096
   1617c:	00026518 	.word	0x00026518

00016180 <logger_log_raw>:
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477

void logger_log_raw(const char * msg, ...)
{
   16180:	b40f      	push	{r0, r1, r2, r3}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   16182:	4b0e      	ldr	r3, [pc, #56]	; (161bc <logger_log_raw+0x3c>)
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477
{
   16184:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:478
    if (!logger_initialized()) {
   16186:	681b      	ldr	r3, [r3, #0]
   16188:	b193      	cbz	r3, 161b0 <logger_log_raw+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:482
        return;
    }

    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   1618a:	f003 f875 	bl	19278 <xTaskGetSchedulerState>
   1618e:	1e83      	subs	r3, r0, #2
   16190:	425c      	negs	r4, r3
   16192:	415c      	adcs	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:483
    char * buffer = logger_get_buffer_ptr(os_running);
   16194:	4620      	mov	r0, r4
   16196:	f7ff fda3 	bl	15ce0 <logger_get_buffer_ptr>
   1619a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488

    /* Print the actual user message to the buffer */
    do {
        va_list args;
        va_start(args, msg);
   1619c:	ab07      	add	r3, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   1619e:	2195      	movs	r1, #149	; 0x95
   161a0:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488
        va_start(args, msg);
   161a2:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   161a4:	f00b f94c 	bl	21440 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:493
        va_end(args);
    } while (0);

    logger_write_log_message(buffer, os_running);
   161a8:	4621      	mov	r1, r4
   161aa:	4628      	mov	r0, r5
   161ac:	f7ff fe7e 	bl	15eac <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:494
}
   161b0:	b003      	add	sp, #12
   161b2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   161b6:	b004      	add	sp, #16
   161b8:	4770      	bx	lr
   161ba:	bf00      	nop
   161bc:	2007c528 	.word	0x2007c528

000161c0 <u0_dbg_put>:
u0_dbg_put():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   161c0:	b510      	push	{r4, lr}
   161c2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   161c4:	f001 ffee 	bl	181a4 <vPortEnterCritical>
   161c8:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   161ca:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   161ce:	b918      	cbnz	r0, 161d8 <u0_dbg_put+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   161d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   161d4:	f001 bff6 	b.w	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   161d8:	f7fa fb7e 	bl	108d8 <uart0_putchar>
   161dc:	e7f5      	b.n	161ca <u0_dbg_put+0xa>

000161de <u0_dbg_printf>:
u0_dbg_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   161de:	b40f      	push	{r0, r1, r2, r3}
   161e0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   161e2:	f44f 7580 	mov.w	r5, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   161e6:	b0c2      	sub	sp, #264	; 0x108
   161e8:	ac46      	add	r4, sp, #280	; 0x118
   161ea:	f854 6b04 	ldr.w	r6, [r4], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   161ee:	462a      	mov	r2, r5
   161f0:	2100      	movs	r1, #0
   161f2:	a802      	add	r0, sp, #8
   161f4:	f008 f9ba 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   161f8:	4623      	mov	r3, r4
   161fa:	4632      	mov	r2, r6
   161fc:	4629      	mov	r1, r5
   161fe:	a802      	add	r0, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   16200:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   16202:	f00b f91d 	bl	21440 <vsniprintf>
   16206:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   16208:	a802      	add	r0, sp, #8
   1620a:	f7ff ffd9 	bl	161c0 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   1620e:	4620      	mov	r0, r4
   16210:	b042      	add	sp, #264	; 0x108
   16212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   16216:	b004      	add	sp, #16
   16218:	4770      	bx	lr

0001621a <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   1621a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   1621c:	b513      	push	{r0, r1, r4, lr}
   1621e:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   16220:	a902      	add	r1, sp, #8
   16222:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   16226:	6800      	ldr	r0, [r0, #0]
   16228:	f002 faae 	bl	18788 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   1622c:	9b01      	ldr	r3, [sp, #4]
   1622e:	b11b      	cbz	r3, 16238 <for_each_recur_alarm_callback+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   16230:	6823      	ldr	r3, [r4, #0]
   16232:	f043 0301 	orr.w	r3, r3, #1
   16236:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   16238:	2001      	movs	r0, #1
   1623a:	b002      	add	sp, #8
   1623c:	bd10      	pop	{r4, pc}

0001623e <for_each_alarm_callback>:
for_each_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   1623e:	b530      	push	{r4, r5, lr}
   16240:	4604      	mov	r4, r0
   16242:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   16244:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   16246:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   16248:	f001 fa6c 	bl	17724 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   1624c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   16250:	7922      	ldrb	r2, [r4, #4]
   16252:	f003 031f 	and.w	r3, r3, #31
   16256:	429a      	cmp	r2, r3
   16258:	d11b      	bne.n	16292 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   1625a:	f89d 3005 	ldrb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   1625e:	7962      	ldrb	r2, [r4, #5]
   16260:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16264:	429a      	cmp	r2, r3
   16266:	d114      	bne.n	16292 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   16268:	f89d 3004 	ldrb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   1626c:	79a2      	ldrb	r2, [r4, #6]
   1626e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16272:	429a      	cmp	r2, r3
   16274:	d10d      	bne.n	16292 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   16276:	2300      	movs	r3, #0
   16278:	a904      	add	r1, sp, #16
   1627a:	f841 3d10 	str.w	r3, [r1, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   1627e:	6823      	ldr	r3, [r4, #0]
   16280:	6818      	ldr	r0, [r3, #0]
   16282:	f002 fa81 	bl	18788 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   16286:	9b00      	ldr	r3, [sp, #0]
   16288:	b11b      	cbz	r3, 16292 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   1628a:	682b      	ldr	r3, [r5, #0]
   1628c:	f043 0301 	orr.w	r3, r3, #1
   16290:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   16292:	2001      	movs	r0, #1
   16294:	b005      	add	sp, #20
   16296:	bd30      	pop	{r4, r5, pc}

00016298 <RTC_IRQHandler>:
RTC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   16298:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   1629a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   1629c:	4a23      	ldr	r2, [pc, #140]	; (1632c <RTC_IRQHandler+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   1629e:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   162a0:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   162a2:	4c23      	ldr	r4, [pc, #140]	; (16330 <RTC_IRQHandler+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   162a4:	f043 0301 	orr.w	r3, r3, #1
   162a8:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   162aa:	a803      	add	r0, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   162ac:	9502      	str	r5, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   162ae:	f001 fa39 	bl	17724 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   162b2:	462b      	mov	r3, r5
   162b4:	9500      	str	r5, [sp, #0]
   162b6:	aa02      	add	r2, sp, #8
   162b8:	491e      	ldr	r1, [pc, #120]	; (16334 <RTC_IRQHandler+0x9c>)
   162ba:	6820      	ldr	r0, [r4, #0]
   162bc:	f7ff fb2b 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   162c0:	f89d 300c 	ldrb.w	r3, [sp, #12]
   162c4:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   162c8:	d11b      	bne.n	16302 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   162ca:	9300      	str	r3, [sp, #0]
   162cc:	aa02      	add	r2, sp, #8
   162ce:	4919      	ldr	r1, [pc, #100]	; (16334 <RTC_IRQHandler+0x9c>)
   162d0:	6860      	ldr	r0, [r4, #4]
   162d2:	f7ff fb20 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   162d6:	f89d 300d 	ldrb.w	r3, [sp, #13]
   162da:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   162de:	d110      	bne.n	16302 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   162e0:	9300      	str	r3, [sp, #0]
   162e2:	aa02      	add	r2, sp, #8
   162e4:	4913      	ldr	r1, [pc, #76]	; (16334 <RTC_IRQHandler+0x9c>)
   162e6:	68a0      	ldr	r0, [r4, #8]
   162e8:	f7ff fb15 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   162ec:	f89d 300e 	ldrb.w	r3, [sp, #14]
   162f0:	f013 031f 	ands.w	r3, r3, #31
   162f4:	d105      	bne.n	16302 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   162f6:	9300      	str	r3, [sp, #0]
   162f8:	aa02      	add	r2, sp, #8
   162fa:	490e      	ldr	r1, [pc, #56]	; (16334 <RTC_IRQHandler+0x9c>)
   162fc:	68e0      	ldr	r0, [r4, #12]
   162fe:	f7ff fb0a 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   16302:	2300      	movs	r3, #0
   16304:	480c      	ldr	r0, [pc, #48]	; (16338 <RTC_IRQHandler+0xa0>)
   16306:	9300      	str	r3, [sp, #0]
   16308:	aa02      	add	r2, sp, #8
   1630a:	490c      	ldr	r1, [pc, #48]	; (1633c <RTC_IRQHandler+0xa4>)
   1630c:	6800      	ldr	r0, [r0, #0]
   1630e:	f7ff fb02 	bl	15916 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   16312:	9b02      	ldr	r3, [sp, #8]
   16314:	b13b      	cbz	r3, 16326 <RTC_IRQHandler+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   16316:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1631a:	4b09      	ldr	r3, [pc, #36]	; (16340 <RTC_IRQHandler+0xa8>)
   1631c:	601a      	str	r2, [r3, #0]
   1631e:	f3bf 8f4f 	dsb	sy
   16322:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   16326:	b007      	add	sp, #28
   16328:	bd30      	pop	{r4, r5, pc}
   1632a:	bf00      	nop
   1632c:	40024000 	.word	0x40024000
   16330:	2007c52c 	.word	0x2007c52c
   16334:	0001621b 	.word	0x0001621b
   16338:	2007c53c 	.word	0x2007c53c
   1633c:	0001623f 	.word	0x0001623f
   16340:	e000ed04 	.word	0xe000ed04

00016344 <delay_us>:
delay_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   16344:	b570      	push	{r4, r5, r6, lr}
   16346:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   16348:	f7fa f8a8 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   1634c:	1984      	adds	r4, r0, r6
   1634e:	f141 0500 	adc.w	r5, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   16352:	f7fa f8a3 	bl	1049c <sys_get_uptime_us>
   16356:	42a9      	cmp	r1, r5
   16358:	bf08      	it	eq
   1635a:	42a0      	cmpeq	r0, r4
   1635c:	d3f9      	bcc.n	16352 <delay_us+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   1635e:	bd70      	pop	{r4, r5, r6, pc}

00016360 <is_freertos_running>:
is_freertos_running():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   16360:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16362:	f002 ff89 	bl	19278 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   16366:	1e83      	subs	r3, r0, #2
   16368:	4258      	negs	r0, r3
   1636a:	4158      	adcs	r0, r3
   1636c:	bd08      	pop	{r3, pc}

0001636e <delay_ms>:
delay_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   1636e:	b510      	push	{r4, lr}
   16370:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   16372:	f7ff fff5 	bl	16360 <is_freertos_running>
   16376:	b120      	cbz	r0, 16382 <delay_ms+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   16378:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   1637a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   1637e:	f002 bdcd 	b.w	18f1c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   16382:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   16386:	4360      	muls	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16388:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   1638c:	f7ff bfda 	b.w	16344 <delay_us>

00016390 <str::str(char*, int)>:
_ZN3strC2EPci():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
{
    init(strlen(pString)); // Init with enough memory allocation needed to store pString's length
    copyFrom(pString);
}
/// Cannot call init() for this constructor
str::str(char *buff, int size) :
   16390:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mStackMem(true),
        mCapacity(0),
        mpStr(buff),
        mpTempStr(NULL),
        mpTokenPtr(NULL)
   16392:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   16394:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16396:	7023      	strb	r3, [r4, #0]
   16398:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
{
    mCapacity = (size > 0) ? (size - 1) : 0;
   1639a:	2a00      	cmp	r2, #0
   1639c:	bfd4      	ite	le
   1639e:	461a      	movle	r2, r3
   163a0:	f102 32ff 	addgt.w	r2, r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   163a4:	60a1      	str	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   163a6:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   163a8:	60e3      	str	r3, [r4, #12]
   163aa:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
    mCapacity = (size > 0) ? (size - 1) : 0;
   163ac:	6062      	str	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:53
    memset(mpStr, 0, mCapacity);
   163ae:	2100      	movs	r1, #0
   163b0:	f008 f8dc 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:54
}
   163b4:	4620      	mov	r0, r4
   163b6:	bd10      	pop	{r4, pc}

000163b8 <str::~str()>:
_ZN3strD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:55
str::~str()
   163b8:	b538      	push	{r3, r4, r5, lr}
   163ba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58
{
    //printf("Delete %u bytes @ %p\n", mCapacity, mpStr);
    if(0 != mpStr && !mStackMem) {
   163bc:	6880      	ldr	r0, [r0, #8]
   163be:	b118      	cbz	r0, 163c8 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58 (discriminator 1)
   163c0:	7823      	ldrb	r3, [r4, #0]
   163c2:	b90b      	cbnz	r3, 163c8 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:59
        free(mpStr);
   163c4:	f008 f876 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:61
    }
    if (mpTempStr) {
   163c8:	68e5      	ldr	r5, [r4, #12]
   163ca:	b135      	cbz	r5, 163da <str::~str()+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:62 (discriminator 1)
        delete mpTempStr;
   163cc:	4628      	mov	r0, r5
   163ce:	f7ff fff3 	bl	163b8 <str::~str()>
   163d2:	2114      	movs	r1, #20
   163d4:	4628      	mov	r0, r5
   163d6:	f006 f800 	bl	1c3da <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:64
    }
}
   163da:	4620      	mov	r0, r4
   163dc:	bd38      	pop	{r3, r4, r5, pc}

000163de <str::getLen() const>:
_ZNK3str6getLenEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:69


int str::getLen() const
{
    return strlen(mpStr);
   163de:	6880      	ldr	r0, [r0, #8]
   163e0:	f009 be1e 	b.w	20020 <strlen>

000163e4 <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:74
}
int str::getCapacity() const
{
    return mCapacity;
}
   163e4:	6840      	ldr	r0, [r0, #4]
   163e6:	4770      	bx	lr

000163e8 <str::clear()>:
_ZN3str5clearEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:87
        return true;
    }
}
void str::clear()
{
    *mpStr = '\0';
   163e8:	2200      	movs	r2, #0
   163ea:	6883      	ldr	r3, [r0, #8]
   163ec:	701a      	strb	r2, [r3, #0]
   163ee:	4770      	bx	lr

000163f0 <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:144
    va_end(args);
    return len;
}

int str::scanf(const char* pFormat, ...)
{
   163f0:	b40e      	push	{r1, r2, r3}
   163f2:	b503      	push	{r0, r1, lr}
   163f4:	aa03      	add	r2, sp, #12
   163f6:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    va_list args;
    va_start(args, pFormat);
    int parsedParams = vsscanf (mpStr, pFormat, args);
   163fa:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:146
    va_start(args, pFormat);
   163fc:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    int parsedParams = vsscanf (mpStr, pFormat, args);
   163fe:	f00b f851 	bl	214a4 <vsiscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:151
    va_end(args);

    return parsedParams;
}
   16402:	b002      	add	sp, #8
   16404:	f85d eb04 	ldr.w	lr, [sp], #4
   16408:	b003      	add	sp, #12
   1640a:	4770      	bx	lr

0001640c <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154

int str::tokenize(const char* delimators, int char_ptr_count, ...)
{
   1640c:	b40c      	push	{r2, r3}
   1640e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    va_list args;
    va_start(args, char_ptr_count);

    int token_count = 0;
    char *it = NULL;
   16410:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16412:	ab08      	add	r3, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   16414:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16416:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   1641a:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   1641e:	462a      	mov	r2, r5
   16420:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16422:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:156
    va_start(args, char_ptr_count);
   16424:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   16426:	f00a fcd4 	bl	20dd2 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162

    while(token != NULL && char_ptr_count > 0) {
   1642a:	b178      	cbz	r0, 1644c <str::tokenize(char const*, int, ...)+0x40>
   1642c:	1b3b      	subs	r3, r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162 (discriminator 1)
   1642e:	2b00      	cmp	r3, #0
   16430:	dd0c      	ble.n	1644c <str::tokenize(char const*, int, ...)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:163
        char **p = va_arg(args, char**);
   16432:	9b00      	ldr	r3, [sp, #0]
   16434:	1d1a      	adds	r2, r3, #4
   16436:	681b      	ldr	r3, [r3, #0]
   16438:	9200      	str	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:164
        if (p) {
   1643a:	b103      	cbz	r3, 1643e <str::tokenize(char const*, int, ...)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:165
            *p = token;
   1643c:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:169
        }

        // Get next token
        token = strtok_r(NULL, delimators, &it);
   1643e:	462a      	mov	r2, r5
   16440:	4631      	mov	r1, r6
   16442:	2000      	movs	r0, #0
   16444:	f00a fcc5 	bl	20dd2 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:172

        --char_ptr_count;
        ++token_count;
   16448:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162
    while(token != NULL && char_ptr_count > 0) {
   1644a:	e7ee      	b.n	1642a <str::tokenize(char const*, int, ...)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:177
    }
    va_end(args);

    return token_count;
}
   1644c:	4620      	mov	r0, r4
   1644e:	b003      	add	sp, #12
   16450:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   16454:	b002      	add	sp, #8
   16456:	4770      	bx	lr

00016458 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:241
    append(hexVal);
}


bool str::compareTo(const char* pString) const
{
   16458:	b508      	push	{r3, lr}
   1645a:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:242
    return (0 == strcmp(pString, mpStr));
   1645c:	6881      	ldr	r1, [r0, #8]
   1645e:	4618      	mov	r0, r3
   16460:	f009 fdcc 	bl	1fffc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:243
}
   16464:	fab0 f080 	clz	r0, r0
   16468:	0940      	lsrs	r0, r0, #5
   1646a:	bd08      	pop	{r3, pc}

0001646c <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:245
bool str::compareToIgnoreCase(const char* pString) const
{
   1646c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:246
    return (0 == strcasecmp(mpStr, pString));
   1646e:	6880      	ldr	r0, [r0, #8]
   16470:	f009 fd89 	bl	1ff86 <strcasecmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:247
}
   16474:	fab0 f080 	clz	r0, r0
   16478:	0940      	lsrs	r0, r0, #5
   1647a:	bd08      	pop	{r3, pc}

0001647c <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
    return firstIndexOf(pString) != mInvalidIndex;
}


int str::firstIndexOfIgnoreCase(const char* pString) const
{
   1647c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    int findIndex = mInvalidIndex;
    char* firstChar;

    if(0 != *pString && 0 != *mpStr)
   16480:	780f      	ldrb	r7, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
{
   16482:	468a      	mov	sl, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    if(0 != *pString && 0 != *mpStr)
   16484:	b3a7      	cbz	r7, 164f0 <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   16486:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259 (discriminator 1)
   1648a:	6886      	ldr	r6, [r0, #8]
   1648c:	7833      	ldrb	r3, [r6, #0]
   1648e:	b38b      	cbz	r3, 164f4 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:261 (discriminator 1)
    {
        for(char* pSearchLoc = mpStr; 0 != *pSearchLoc; pSearchLoc = firstChar + 1)
   16490:	7833      	ldrb	r3, [r6, #0]
   16492:	b37b      	cbz	r3, 164f4 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:264
        {
            // First, find first char match ignoring the case.
            if(0 == (firstChar = strchr(pSearchLoc, tolower(*pString)))) {
   16494:	4638      	mov	r0, r7
   16496:	f00a fd5b 	bl	20f50 <tolower>
   1649a:	4601      	mov	r1, r0
   1649c:	4630      	mov	r0, r6
   1649e:	f009 fd9f 	bl	1ffe0 <strchr>
   164a2:	b938      	cbnz	r0, 164b4 <str::firstIndexOfIgnoreCase(char const*) const+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:265
                if(0 == (firstChar = strchr(pSearchLoc, toupper(*pString)))) {
   164a4:	4638      	mov	r0, r7
   164a6:	f00a fd60 	bl	20f6a <toupper>
   164aa:	4601      	mov	r1, r0
   164ac:	4630      	mov	r0, r6
   164ae:	f009 fd97 	bl	1ffe0 <strchr>
   164b2:	b1e8      	cbz	r0, 164f0 <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   164b4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:273
                }
            }

            // First char matched, now match remaining string
            char* i2 = (char*)pString + 1;
            findIndex = firstChar - pSearchLoc;
   164b6:	1b85      	subs	r5, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:272
            char* i2 = (char*)pString + 1;
   164b8:	f10a 0801 	add.w	r8, sl, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275

            for(char* i1 = firstChar + 1; *i1 && *i2; i1++, i2++)
   164bc:	1c46      	adds	r6, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 1)
   164be:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   164c2:	46c1      	mov	r9, r8
   164c4:	b188      	cbz	r0, 164ea <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 2)
   164c6:	f898 b000 	ldrb.w	fp, [r8]
   164ca:	f108 0801 	add.w	r8, r8, #1
   164ce:	f1bb 0f00 	cmp.w	fp, #0
   164d2:	d00a      	beq.n	164ea <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:277
            {
                if(tolower(*i1) != tolower(*i2))
   164d4:	f00a fd3c 	bl	20f50 <tolower>
   164d8:	9001      	str	r0, [sp, #4]
   164da:	4658      	mov	r0, fp
   164dc:	f00a fd38 	bl	20f50 <tolower>
   164e0:	9b01      	ldr	r3, [sp, #4]
   164e2:	4283      	cmp	r3, r0
   164e4:	d0eb      	beq.n	164be <str::firstIndexOfIgnoreCase(char const*) const+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:279
                {
                    findIndex = mInvalidIndex;
   164e6:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:285
                    break;
                }
            }

            // If iterator2 reached null char, we matched entire string!
            if(0 == *i2) {
   164ea:	f899 3000 	ldrb.w	r3, [r9]
   164ee:	e7ce      	b.n	1648e <str::firstIndexOfIgnoreCase(char const*) const+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:256
    int findIndex = mInvalidIndex;
   164f0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:292
            }
        };
    }

    return findIndex;
}
   164f4:	4628      	mov	r0, r5
   164f6:	b003      	add	sp, #12
   164f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000164fc <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:294
bool str::containsIgnoreCase(const char* pString) const
{
   164fc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:295
    return firstIndexOfIgnoreCase(pString) != mInvalidIndex;
   164fe:	f7ff ffbd 	bl	1647c <str::firstIndexOfIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:296
}
   16502:	3001      	adds	r0, #1
   16504:	bf18      	it	ne
   16506:	2001      	movne	r0, #1
   16508:	bd08      	pop	{r3, pc}

0001650a <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:298
int str::firstIndexOf(const char* pString) const
{
   1650a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:299
    char* pFindPtr = strstr(mpStr, pString);
   1650c:	6884      	ldr	r4, [r0, #8]
   1650e:	4620      	mov	r0, r4
   16510:	f009 fdef 	bl	200f2 <strstr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
    return (0 == pFindPtr) ? mInvalidIndex : (pFindPtr - mpStr);
   16514:	b108      	cbz	r0, 1651a <str::firstIndexOf(char const*) const+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300 (discriminator 1)
   16516:	1b00      	subs	r0, r0, r4
   16518:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
   1651a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:301
}
   1651e:	bd10      	pop	{r4, pc}

00016520 <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
    return count;
}


bool str::beginsWith(const char* pString) const
{
   16520:	b570      	push	{r4, r5, r6, lr}
   16522:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16524:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
{
   16526:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16528:	f009 fd7a 	bl	20020 <strlen>
   1652c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && (0 == strncmp(mpStr, pString, theirLen)));
   1652e:	4620      	mov	r0, r4
   16530:	f7ff ff55 	bl	163de <str::getLen() const>
   16534:	4286      	cmp	r6, r0
   16536:	dc08      	bgt.n	1654a <str::beginsWith(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343 (discriminator 1)
   16538:	4632      	mov	r2, r6
   1653a:	4629      	mov	r1, r5
   1653c:	68a0      	ldr	r0, [r4, #8]
   1653e:	f009 fd9e 	bl	2007e <strncmp>
   16542:	fab0 f080 	clz	r0, r0
   16546:	0940      	lsrs	r0, r0, #5
   16548:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343
   1654a:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:344
}
   1654c:	bd70      	pop	{r4, r5, r6, pc}

0001654e <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
bool str::beginsWithIgnoreCase(const char* pString) const
{
   1654e:	b570      	push	{r4, r5, r6, lr}
   16550:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16552:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
{
   16554:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16556:	f009 fd63 	bl	20020 <strlen>
   1655a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && 0 == strncasecmp(pString, mpStr, theirLen));
   1655c:	4628      	mov	r0, r5
   1655e:	f7ff ff3e 	bl	163de <str::getLen() const>
   16562:	4286      	cmp	r6, r0
   16564:	dc08      	bgt.n	16578 <str::beginsWithIgnoreCase(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350 (discriminator 1)
   16566:	4632      	mov	r2, r6
   16568:	68a9      	ldr	r1, [r5, #8]
   1656a:	4620      	mov	r0, r4
   1656c:	f009 fd60 	bl	20030 <strncasecmp>
   16570:	fab0 f080 	clz	r0, r0
   16574:	0940      	lsrs	r0, r0, #5
   16576:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350
   16578:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:351
}
   1657a:	bd70      	pop	{r4, r5, r6, pc}

0001657c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364

    const char c = mpStr[len];
    return beginsWith(pString) && (seperator == c || '\0' == c);
}
bool str::beginsWithWholeWordIgnoreCase(const char* pString, char seperator) const
{
   1657c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1657e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    // After comparison, the char must be a space or null terminated
    int len = strlen(pString);
   16580:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364
{
   16582:	460e      	mov	r6, r1
   16584:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    int len = strlen(pString);
   16586:	f009 fd4b 	bl	20020 <strlen>
   1658a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:367
    if (len > getLen()) {
   1658c:	4620      	mov	r0, r4
   1658e:	f7ff ff26 	bl	163de <str::getLen() const>
   16592:	4285      	cmp	r5, r0
   16594:	dc0c      	bgt.n	165b0 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
        return false;
    }

    const char c = mpStr[len];
   16596:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   16598:	4631      	mov	r1, r6
   1659a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
    const char c = mpStr[len];
   1659c:	5d5d      	ldrb	r5, [r3, r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   1659e:	f7ff ffd6 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   165a2:	b130      	cbz	r0, 165b2 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 1)
   165a4:	42bd      	cmp	r5, r7
   165a6:	d004      	beq.n	165b2 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 4)
   165a8:	fab5 f085 	clz	r0, r5
   165ac:	0940      	lsrs	r0, r0, #5
   165ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
   165b0:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:373
}
   165b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000165b4 <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:418
        return eraseAfter(findIndex, strlen(pString));
    }
    return false;
}
bool str::eraseFirst(int nChars)
{
   165b4:	b538      	push	{r3, r4, r5, lr}
   165b6:	460c      	mov	r4, r1
   165b8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   165ba:	f7ff ff10 	bl	163de <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    bool ok = false;
    if(nChars > 0 && nChars <= len)
   165be:	2c00      	cmp	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   165c0:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    if(nChars > 0 && nChars <= len)
   165c2:	dd09      	ble.n	165d8 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421 (discriminator 1)
   165c4:	42a0      	cmp	r0, r4
   165c6:	db07      	blt.n	165d8 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:423
    {
        memmove(mpStr, mpStr + nChars, len - nChars + 1);
   165c8:	68a8      	ldr	r0, [r5, #8]
   165ca:	1b12      	subs	r2, r2, r4
   165cc:	3201      	adds	r2, #1
   165ce:	1901      	adds	r1, r0, r4
   165d0:	f007 ffb2 	bl	1e538 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:424
        ok = true;
   165d4:	2001      	movs	r0, #1
   165d6:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:420
    bool ok = false;
   165d8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:427
    }
    return ok;
}
   165da:	bd38      	pop	{r3, r4, r5, pc}

000165dc <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:429
bool str::eraseLast(int nChars)
{
   165dc:	b538      	push	{r3, r4, r5, lr}
   165de:	460c      	mov	r4, r1
   165e0:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:430
    const int len = getLen();
   165e2:	f7ff fefc 	bl	163de <str::getLen() const>
   165e6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:432
    bool ok = false;
    if(nChars <= len)
   165e8:	42a0      	cmp	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:434
    {
        mpStr[len-nChars] = '\0';
   165ea:	bfa1      	itttt	ge
   165ec:	68aa      	ldrge	r2, [r5, #8]
   165ee:	1b00      	subge	r0, r0, r4
   165f0:	5413      	strbge	r3, [r2, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:435
        ok = true;
   165f2:	2001      	movge	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:431
    bool ok = false;
   165f4:	bfb8      	it	lt
   165f6:	4618      	movlt	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:438
    }
    return ok;
}
   165f8:	bd38      	pop	{r3, r4, r5, pc}

000165fa <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:454
        ok = true;
    }
    return ok;
}
bool str::eraseAfter(int index, int nChars)
{
   165fa:	b570      	push	{r4, r5, r6, lr}
   165fc:	460d      	mov	r5, r1
   165fe:	4606      	mov	r6, r0
   16600:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:455
    const int ourLen = getLen();
   16602:	f7ff feec 	bl	163de <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458
    bool ok = false;

    if(index >= 0 && index < ourLen && nChars > 0)
   16606:	2d00      	cmp	r5, #0
   16608:	db11      	blt.n	1662e <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 1)
   1660a:	42a8      	cmp	r0, r5
   1660c:	dd0f      	ble.n	1662e <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 2)
   1660e:	2c00      	cmp	r4, #0
   16610:	dd0d      	ble.n	1662e <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:461
    {
        // "012345", index = 2, nChars = 6
        if(nChars > ourLen - index) {
   16612:	1b42      	subs	r2, r0, r5
   16614:	4294      	cmp	r4, r2
   16616:	bfa8      	it	ge
   16618:	4614      	movge	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:464
            nChars = ourLen - index;
        }
        memmove(mpStr+index, mpStr+index+nChars, ourLen - index - nChars + 1);
   1661a:	68b0      	ldr	r0, [r6, #8]
   1661c:	1b12      	subs	r2, r2, r4
   1661e:	442c      	add	r4, r5
   16620:	1901      	adds	r1, r0, r4
   16622:	3201      	adds	r2, #1
   16624:	4428      	add	r0, r5
   16626:	f007 ff87 	bl	1e538 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:465
        ok = true;
   1662a:	2001      	movs	r0, #1
   1662c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:456
    bool ok = false;
   1662e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:468
    }
    return ok;
}
   16630:	bd70      	pop	{r4, r5, r6, pc}

00016632 <str::erase(char const*)>:
_ZN3str5eraseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:409
{
   16632:	b570      	push	{r4, r5, r6, lr}
   16634:	4605      	mov	r5, r0
   16636:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   16638:	f7ff ff67 	bl	1650a <str::firstIndexOf(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   1663c:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   1663e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   16640:	d009      	beq.n	16656 <str::erase(char const*)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16642:	4630      	mov	r0, r6
   16644:	f009 fcec 	bl	20020 <strlen>
   16648:	4621      	mov	r1, r4
   1664a:	4602      	mov	r2, r0
   1664c:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   1664e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16652:	f7ff bfd2 	b.w	165fa <str::eraseAfter(int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   16656:	2000      	movs	r0, #0
   16658:	bd70      	pop	{r4, r5, r6, pc}

0001665a <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:470
bool str::eraseFirstWords(int words, char separator)
{
   1665a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1665c:	6885      	ldr	r5, [r0, #8]
   1665e:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    int n = 0;
    int found = 0;

    // test one two
    for (n = 0; mpStr[n] && found != words; n++) {
   16660:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:472
    int found = 0;
   16662:	2400      	movs	r4, #0
   16664:	1b59      	subs	r1, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 1)
    for (n = 0; mpStr[n] && found != words; n++) {
   16666:	f813 6b01 	ldrb.w	r6, [r3], #1
   1666a:	b13e      	cbz	r6, 1667c <str::eraseFirstWords(int, char)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 2)
   1666c:	42bc      	cmp	r4, r7
   1666e:	d003      	beq.n	16678 <str::eraseFirstWords(int, char)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:476
        if (mpStr[n] == separator) {
   16670:	4296      	cmp	r6, r2
   16672:	d1f7      	bne.n	16664 <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:477
            found++;
   16674:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    for (n = 0; mpStr[n] && found != words; n++) {
   16676:	e7f5      	b.n	16664 <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:482
        }
    }

    if (found == words && mpStr[n]) {
        eraseFirst(n);
   16678:	f7ff ff9c 	bl	165b4 <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:486
    }

    return !!found;
}
   1667c:	1c20      	adds	r0, r4, #0
   1667e:	bf18      	it	ne
   16680:	2001      	movne	r0, #1
   16682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016684 <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:508
    return count;
}


void str::trimStart(const char* pChars)
{
   16684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16686:	4606      	mov	r6, r0
   16688:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    int numBegCharsToRemove = 0;
    const int ourLen = getLen();
   1668a:	f7ff fea8 	bl	163de <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:509
    int numBegCharsToRemove = 0;
   1668e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    const int ourLen = getLen();
   16690:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512 (discriminator 1)

    for(int i = 0; i < ourLen; i++)
   16692:	42bc      	cmp	r4, r7
   16694:	da0e      	bge.n	166b4 <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:514
    {
        const int len = strlen(pChars);
   16696:	4628      	mov	r0, r5
   16698:	f009 fcc2 	bl	20020 <strlen>
   1669c:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:517 (discriminator 1)
        bool trimDone = false;

        for(int j = 0 ; j < len; j++)
   1669e:	1b5a      	subs	r2, r3, r5
   166a0:	4290      	cmp	r0, r2
   166a2:	dd07      	ble.n	166b4 <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:519
        {
            if(pChars[j] == mpStr[i]) {
   166a4:	68b1      	ldr	r1, [r6, #8]
   166a6:	f813 2b01 	ldrb.w	r2, [r3], #1
   166aa:	5d09      	ldrb	r1, [r1, r4]
   166ac:	4291      	cmp	r1, r2
   166ae:	d1f6      	bne.n	1669e <str::trimStart(char const*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:521
                trimDone = true;
                numBegCharsToRemove++;
   166b0:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512
    for(int i = 0; i < ourLen; i++)
   166b2:	e7ee      	b.n	16692 <str::trimStart(char const*)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:531
        if(!trimDone) {
            break;
        }
    }

    if(numBegCharsToRemove > 0) {
   166b4:	b12c      	cbz	r4, 166c2 <str::trimStart(char const*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   166b6:	4621      	mov	r1, r4
   166b8:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:534
    }
}
   166ba:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   166be:	f7ff bf79 	b.w	165b4 <str::eraseFirst(int)>
   166c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000166c4 <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
void str::trimEnd(const char* pChars)
{
   166c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   166c6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   166c8:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
{
   166ca:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   166cc:	f009 fca8 	bl	20020 <strlen>
   166d0:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   166d2:	4628      	mov	r0, r5
   166d4:	f7ff fe83 	bl	163de <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
        for(int j = 0 ; j < trimLen; j++)
        {
            if(pChars[j] == mpStr[i])
            {
                trimDone = true;
                mpStr[i] = '\0';
   166d8:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   166da:	3801      	subs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538 (discriminator 1)
   166dc:	2800      	cmp	r0, #0
   166de:	db0d      	blt.n	166fc <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
   166e0:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:541 (discriminator 1)
        for(int j = 0 ; j < trimLen; j++)
   166e2:	1b1a      	subs	r2, r3, r4
   166e4:	4297      	cmp	r7, r2
   166e6:	dd09      	ble.n	166fc <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:543
            if(pChars[j] == mpStr[i])
   166e8:	68aa      	ldr	r2, [r5, #8]
   166ea:	f813 eb01 	ldrb.w	lr, [r3], #1
   166ee:	1811      	adds	r1, r2, r0
   166f0:	5c12      	ldrb	r2, [r2, r0]
   166f2:	4572      	cmp	r2, lr
   166f4:	d1f5      	bne.n	166e2 <str::trimEnd(char const*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
                mpStr[i] = '\0';
   166f6:	700e      	strb	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   166f8:	3801      	subs	r0, #1
   166fa:	e7ef      	b.n	166dc <str::trimEnd(char const*)+0x18>
   166fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000166fe <str::operator==(char const*) const>:
_ZNK3streqEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:918
        (*this) = str::toInt(mpStr) - n; // Call Assignment Operator for int
    }
}
bool str::operator==(const char* pString) const
{
    return compareTo(pString);
   166fe:	f7ff beab 	b.w	16458 <str::compareTo(char const*) const>

00016702 <str::operator()() const>:
_ZNK3strclEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:968
bool str::operator>(float x) const             { return (float)(*this) > x;         }

const char* str::operator()() const
{
    return mpStr;
}
   16702:	6880      	ldr	r0, [r0, #8]
   16704:	4770      	bx	lr

00016706 <str::operator int() const>:
_ZN3str5toIntEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:28
int str::toInt(const char* pString)     {   return atoi(pString);   }
   16706:	6880      	ldr	r0, [r0, #8]
   16708:	f007 b9e5 	b.w	1dad6 <atoi>

0001670c <str::operator[](int)>:
_ZN3strixEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:981
{
    return str::toFloat(mpStr);
}

char& str::operator[](int pos)
{
   1670c:	b538      	push	{r3, r4, r5, lr}
   1670e:	460c      	mov	r4, r1
   16710:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:982
    return pos < getLen() ? mpStr[pos] : mpStr[0];
   16712:	f7ff fe64 	bl	163de <str::getLen() const>
   16716:	42a0      	cmp	r0, r4
   16718:	68a8      	ldr	r0, [r5, #8]
   1671a:	bfc8      	it	gt
   1671c:	1900      	addgt	r0, r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:983
}
   1671e:	bd38      	pop	{r3, r4, r5, pc}

00016720 <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    }
}

bool str::reAllocateMem(const int size)
{
    if (mStackMem) {
   16720:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1027
{
   16722:	b570      	push	{r4, r5, r6, lr}
   16724:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    if (mStackMem) {
   16726:	b9fb      	cbnz	r3, 16768 <str::reAllocateMem(int)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
        return false;
    }

    // Minimum size is 4 bytes, but we need 1 extra char for NULL
    mCapacity = (0 == size) ? 4 : (1 + size);
   16728:	b1b1      	cbz	r1, 16758 <str::reAllocateMem(int)+0x38>
   1672a:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036

    // Align the size to minimize memory fragmentation
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   1672c:	2410      	movs	r4, #16
   1672e:	fb91 f4f4 	sdiv	r4, r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038

    if(0 == mpStr){
   16732:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   16734:	3401      	adds	r4, #1
   16736:	0124      	lsls	r4, r4, #4
   16738:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038
    if(0 == mpStr){
   1673a:	b97e      	cbnz	r6, 1675c <str::reAllocateMem(int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1039
        mpStr = (char*)malloc(mCapacity);
   1673c:	4620      	mov	r0, r4
   1673e:	f007 feb1 	bl	1e4a4 <malloc>
   16742:	60a8      	str	r0, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1040
        if (NULL != mpStr) {
   16744:	b118      	cbz	r0, 1674e <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1041
            memset(mpStr, 0, mCapacity);
   16746:	4622      	mov	r2, r4
   16748:	4631      	mov	r1, r6
   1674a:	f007 ff0f 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1048
    }
    else {
        mpStr = (char*)realloc(mpStr, mCapacity+1);
    }

    return (NULL != mpStr);
   1674e:	68a8      	ldr	r0, [r5, #8]
   16750:	3000      	adds	r0, #0
   16752:	bf18      	it	ne
   16754:	2001      	movne	r0, #1
   16756:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
    mCapacity = (0 == size) ? 4 : (1 + size);
   16758:	2104      	movs	r1, #4
   1675a:	e7e7      	b.n	1672c <str::reAllocateMem(int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1045
        mpStr = (char*)realloc(mpStr, mCapacity+1);
   1675c:	1c61      	adds	r1, r4, #1
   1675e:	4630      	mov	r0, r6
   16760:	f009 f98e 	bl	1fa80 <realloc>
   16764:	60a8      	str	r0, [r5, #8]
   16766:	e7f2      	b.n	1674e <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1029
        return false;
   16768:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1049
}
   1676a:	bd70      	pop	{r4, r5, r6, pc}

0001676c <str::init(int)>:
_ZN3str4initEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:453
        static const int mAllocSize = 16;

        /// init() is called by constructors to initialize the string
        void init(int initialLength=mAllocSize)
        {
            mStackMem = false;
   1676c:	2200      	movs	r2, #0
   1676e:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:454
            mCapacity = 0;
   16770:	6042      	str	r2, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:455
            mpStr = 0;
   16772:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:456
            mpTempStr = 0;
   16774:	60c2      	str	r2, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:457
            mpTokenPtr = 0;
   16776:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:459

            reAllocateMem(initialLength);
   16778:	f7ff bfd2 	b.w	16720 <str::reAllocateMem(int)>

0001677c <str::str(int)>:
_ZN3strC2Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:35
str::str(int capacity)
   1677c:	b510      	push	{r4, lr}
   1677e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:37
    init(capacity);
   16780:	f7ff fff4 	bl	1676c <str::init(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:38
}
   16784:	4620      	mov	r0, r4
   16786:	bd10      	pop	{r4, pc}

00016788 <str::reserve(int)>:
_ZN3str7reserveEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:77
    if(mCapacity < n)
   16788:	6843      	ldr	r3, [r0, #4]
   1678a:	428b      	cmp	r3, r1
   1678c:	da01      	bge.n	16792 <str::reserve(int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:79
        return reAllocateMem(n);
   1678e:	f7ff bfc7 	b.w	16720 <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:84
}
   16792:	2001      	movs	r0, #1
   16794:	4770      	bx	lr

00016796 <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   16796:	b40e      	push	{r1, r2, r3}
   16798:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   1679a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:113
    int len = 0;
   1679c:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   1679e:	ab07      	add	r3, sp, #28
   167a0:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:116
    va_start(args, format);
   167a4:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:118
    while (mpStr)
   167a6:	68b0      	ldr	r0, [r6, #8]
   167a8:	b180      	cbz	r0, 167cc <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   167aa:	6875      	ldr	r5, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   167ac:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   167ae:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   167b0:	463a      	mov	r2, r7
   167b2:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   167b4:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   167b6:	f00a fe43 	bl	21440 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   167ba:	4285      	cmp	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   167bc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   167be:	dc05      	bgt.n	167cc <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:132
            break_loop = !reserve(len + 1);
   167c0:	1c41      	adds	r1, r0, #1
   167c2:	4630      	mov	r0, r6
   167c4:	f7ff ffe0 	bl	16788 <str::reserve(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:134
        if (break_loop) {
   167c8:	2800      	cmp	r0, #0
   167ca:	d1ec      	bne.n	167a6 <str::printf(char const*, ...)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:141
}
   167cc:	4620      	mov	r0, r4
   167ce:	b002      	add	sp, #8
   167d0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   167d4:	b003      	add	sp, #12
   167d6:	4770      	bx	lr

000167d8 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1011
{
   167d8:	b538      	push	{r3, r4, r5, lr}
   167da:	4605      	mov	r5, r0
   167dc:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1013
    const int existingLen = getLen();
   167de:	f7ff fdfe 	bl	163de <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   167e2:	686b      	ldr	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1014
    const int requiredMem = newLen + existingLen;
   167e4:	1821      	adds	r1, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   167e6:	4299      	cmp	r1, r3
   167e8:	dd05      	ble.n	167f6 <str::ensureMemoryToInsertNChars(int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   167ea:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   167ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   167f0:	3120      	adds	r1, #32
   167f2:	f7ff bf95 	b.w	16720 <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   167f6:	2001      	movs	r0, #1
   167f8:	bd38      	pop	{r3, r4, r5, pc}

000167fa <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   167fa:	b570      	push	{r4, r5, r6, lr}
   167fc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   167fe:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   16800:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   16802:	f009 fc0d 	bl	20020 <strlen>
   16806:	4601      	mov	r1, r0
   16808:	4628      	mov	r0, r5
   1680a:	f7ff ffe5 	bl	167d8 <str::ensureMemoryToInsertNChars(int)>
   1680e:	4604      	mov	r4, r0
   16810:	b118      	cbz	r0, 1681a <str::insertAtEnd(char const*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:187
        strcat(mpStr, pString);
   16812:	4631      	mov	r1, r6
   16814:	68a8      	ldr	r0, [r5, #8]
   16816:	f009 fbd4 	bl	1ffc2 <strcat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:191
}
   1681a:	4620      	mov	r0, r4
   1681c:	bd70      	pop	{r4, r5, r6, pc}

0001681e <str::operator+=(char)>:
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   1681e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:876
{
   16820:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   16822:	f8ad 3004 	strh.w	r3, [sp, #4]
   16826:	ab02      	add	r3, sp, #8
   16828:	f803 1d04 	strb.w	r1, [r3, #-4]!
_ZN3str6appendEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:216
    insertAtEnd(pString);
   1682c:	4619      	mov	r1, r3
   1682e:	f7ff ffe4 	bl	167fa <str::insertAtEnd(char const*)>
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:879
}
   16832:	b003      	add	sp, #12
   16834:	f85d fb04 	ldr.w	pc, [sp], #4

00016838 <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052

void str::copyFrom(const char* pString)
{
   16838:	b570      	push	{r4, r5, r6, lr}
   1683a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   1683c:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052
{
   1683e:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   16840:	f009 fbee 	bl	20020 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055

    if(strLen > mCapacity) {
   16844:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   16846:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055
    if(strLen > mCapacity) {
   16848:	4298      	cmp	r0, r3
   1684a:	dd0d      	ble.n	16868 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1057
        // If we can't allocate memory, only copy up to capacity
        if (!reAllocateMem(strLen)) {
   1684c:	4620      	mov	r0, r4
   1684e:	f7ff ff67 	bl	16720 <str::reAllocateMem(int)>
   16852:	4606      	mov	r6, r0
   16854:	b940      	cbnz	r0, 16868 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1058
            strncpy(mpStr, pString, mCapacity);
   16856:	6862      	ldr	r2, [r4, #4]
   16858:	4629      	mov	r1, r5
   1685a:	68a0      	ldr	r0, [r4, #8]
   1685c:	f009 fc21 	bl	200a2 <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1059
            mpStr[mCapacity] = '\0';
   16860:	68a2      	ldr	r2, [r4, #8]
   16862:	6863      	ldr	r3, [r4, #4]
   16864:	54d6      	strb	r6, [r2, r3]
   16866:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
            return;
        }
    }

    strcpy(mpStr, pString);
   16868:	4629      	mov	r1, r5
   1686a:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1065
}
   1686c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
    strcpy(mpStr, pString);
   16870:	f009 bbce 	b.w	20010 <strcpy>

00016874 <str::operator=(char const*)>:
_ZN3straSEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:831
    copyFrom(pString);
   16874:	f7ff bfe0 	b.w	16838 <str::copyFrom(char const*)>

00016878 <_sbrk>:
_sbrk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   16878:	4b12      	ldr	r3, [pc, #72]	; (168c4 <_sbrk+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   1687a:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   1687c:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   1687e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   16880:	b912      	cbnz	r2, 16888 <_sbrk+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   16882:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16886:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   16888:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   1688a:	4a0f      	ldr	r2, [pc, #60]	; (168c8 <_sbrk+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   1688c:	1844      	adds	r4, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   1688e:	4d0f      	ldr	r5, [pc, #60]	; (168cc <_sbrk+0x54>)
   16890:	4422      	add	r2, r4
   16892:	42aa      	cmp	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   16894:	bf97      	itett	ls
   16896:	4a0e      	ldrls	r2, [pc, #56]	; (168d0 <_sbrk+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   16898:	601c      	strhi	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   1689a:	1888      	addls	r0, r1, r2
   1689c:	6018      	strls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   1689e:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   168a0:	bf98      	it	ls
   168a2:	4610      	movls	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   168a4:	4a0b      	ldr	r2, [pc, #44]	; (168d4 <_sbrk+0x5c>)
   168a6:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   168a8:	bf82      	ittt	hi
   168aa:	3201      	addhi	r2, #1
   168ac:	601a      	strhi	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   168ae:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   168b0:	b139      	cbz	r1, 168c2 <_sbrk+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   168b2:	4a09      	ldr	r2, [pc, #36]	; (168d8 <_sbrk+0x60>)
   168b4:	6813      	ldr	r3, [r2, #0]
   168b6:	3301      	adds	r3, #1
   168b8:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   168ba:	4b08      	ldr	r3, [pc, #32]	; (168dc <_sbrk+0x64>)
   168bc:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   168be:	4b08      	ldr	r3, [pc, #32]	; (168e0 <_sbrk+0x68>)
   168c0:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   168c2:	bd30      	pop	{r4, r5, pc}
   168c4:	2007c548 	.word	0x2007c548
   168c8:	efff7fff 	.word	0xefff7fff
   168cc:	10073ffe 	.word	0x10073ffe
   168d0:	2007c900 	.word	0x2007c900
   168d4:	20083fff 	.word	0x20083fff
   168d8:	2007c540 	.word	0x2007c540
   168dc:	2007c544 	.word	0x2007c544
   168e0:	2007c54c 	.word	0x2007c54c

000168e4 <operator new(unsigned int)>:
_Znwj():
   168e4:	f007 bdde 	b.w	1e4a4 <malloc>

000168e8 <operator new[](unsigned int)>:
_Znaj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:104

/** @{ Redirect C++ memory functions to C */
void *operator new(size_t size)     {   return malloc(size);    }
void *operator new[](size_t size)   {   return malloc(size);    }
   168e8:	f007 bddc 	b.w	1e4a4 <malloc>

000168ec <operator delete(void*)>:
_ZdlPv():
   168ec:	f007 bde2 	b.w	1e4b4 <free>

000168f0 <operator delete[](void*)>:
_ZdaPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:106
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
   168f0:	f007 bde0 	b.w	1e4b4 <free>

000168f4 <sys_get_mem_info>:
sys_get_mem_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   168f4:	b530      	push	{r4, r5, lr}
   168f6:	4604      	mov	r4, r0
   168f8:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   168fa:	4668      	mov	r0, sp
   168fc:	f008 f89a 	bl	1ea34 <mallinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   16900:	4b21      	ldr	r3, [pc, #132]	; (16988 <sys_get_mem_info+0x94>)
   16902:	4d22      	ldr	r5, [pc, #136]	; (1698c <sys_get_mem_info+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   16904:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   16906:	9b08      	ldr	r3, [sp, #32]
   16908:	4a21      	ldr	r2, [pc, #132]	; (16990 <sys_get_mem_info+0x9c>)
   1690a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   1690c:	9b07      	ldr	r3, [sp, #28]
   1690e:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   16910:	b953      	cbnz	r3, 16928 <sys_get_mem_info+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   16912:	6813      	ldr	r3, [r2, #0]
   16914:	491f      	ldr	r1, [pc, #124]	; (16994 <sys_get_mem_info+0xa0>)
   16916:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   16918:	bf8a      	itet	hi
   1691a:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   1691e:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   16922:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   16926:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   16928:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   1692a:	6861      	ldr	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   1692c:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   1692e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   16932:	bf82      	ittt	hi
   16934:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   16938:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   1693c:	6061      	strhi	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   1693e:	6811      	ldr	r1, [r2, #0]
   16940:	4a14      	ldr	r2, [pc, #80]	; (16994 <sys_get_mem_info+0xa0>)
   16942:	4291      	cmp	r1, r2
   16944:	d813      	bhi.n	1696e <sys_get_mem_info+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   16946:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   1694a:	1a52      	subs	r2, r2, r1
   1694c:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   16950:	441a      	add	r2, r3
   16952:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   16954:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   16956:	4b10      	ldr	r3, [pc, #64]	; (16998 <sys_get_mem_info+0xa4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   16958:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   1695a:	681b      	ldr	r3, [r3, #0]
   1695c:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   1695e:	4b0f      	ldr	r3, [pc, #60]	; (1699c <sys_get_mem_info+0xa8>)
   16960:	681b      	ldr	r3, [r3, #0]
   16962:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   16964:	4b0e      	ldr	r3, [pc, #56]	; (169a0 <sys_get_mem_info+0xac>)
   16966:	681b      	ldr	r3, [r3, #0]
   16968:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   1696a:	b00b      	add	sp, #44	; 0x2c
   1696c:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   1696e:	4b0d      	ldr	r3, [pc, #52]	; (169a4 <sys_get_mem_info+0xb0>)
   16970:	4299      	cmp	r1, r3
   16972:	d8ef      	bhi.n	16954 <sys_get_mem_info+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   16974:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   16978:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   1697c:	1b5b      	subs	r3, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   1697e:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   16980:	bfc8      	it	gt
   16982:	60e3      	strgt	r3, [r4, #12]
   16984:	e7e6      	b.n	16954 <sys_get_mem_info+0x60>
   16986:	bf00      	nop
   16988:	00000900 	.word	0x00000900
   1698c:	2007c900 	.word	0x2007c900
   16990:	2007c548 	.word	0x2007c548
   16994:	10008000 	.word	0x10008000
   16998:	2007c544 	.word	0x2007c544
   1699c:	2007c54c 	.word	0x2007c54c
   169a0:	2007c540 	.word	0x2007c540
   169a4:	20083fff 	.word	0x20083fff

000169a8 <__malloc_lock>:
__malloc_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   169a8:	f001 bbfc 	b.w	181a4 <vPortEnterCritical>

000169ac <__malloc_unlock>:
__malloc_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   169ac:	f001 bc0a 	b.w	181c4 <vPortExitCritical>

000169b0 <_gettimeofday>:
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   169b0:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   169b2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   169b4:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   169b6:	b3a8      	cbz	r0, 16a24 <_gettimeofday+0x74>
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   169b8:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   169ba:	4668      	mov	r0, sp
   169bc:	f000 feb2 	bl	17724 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   169c0:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   169c4:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   169c6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   169ca:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   169cc:	f89d 3001 	ldrb.w	r3, [sp, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   169d0:	950b      	str	r5, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   169d2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   169d6:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   169d8:	f89d 3002 	ldrb.w	r3, [sp, #2]
   169dc:	f003 031f 	and.w	r3, r3, #31
   169e0:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   169e2:	f89d 3004 	ldrb.w	r3, [sp, #4]
   169e6:	f003 031f 	and.w	r3, r3, #31
   169ea:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   169ec:	f89d 3005 	ldrb.w	r3, [sp, #5]
   169f0:	f003 030f 	and.w	r3, r3, #15
   169f4:	3b01      	subs	r3, #1
   169f6:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   169f8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   169fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
   16a00:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   16a04:	9308      	str	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   16a06:	f89d 3003 	ldrb.w	r3, [sp, #3]
   16a0a:	f003 0307 	and.w	r3, r3, #7
   16a0e:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   16a10:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   16a14:	f3c3 030b 	ubfx	r3, r3, #0, #12
   16a18:	3b01      	subs	r3, #1
   16a1a:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   16a1c:	f007 fe8e 	bl	1e73c <mktime>
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   16a20:	e884 0021 	stmia.w	r4, {r0, r5}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   16a24:	2000      	movs	r0, #0
   16a26:	b00d      	add	sp, #52	; 0x34
   16a28:	bd30      	pop	{r4, r5, pc}

00016a2a <remap_fatfs_errors>:
remap_fatfs_errors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   16a2a:	3803      	subs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   16a2c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   16a2e:	280a      	cmp	r0, #10
   16a30:	d822      	bhi.n	16a78 <remap_fatfs_errors+0x4e>
   16a32:	e8df f000 	tbb	[pc, r0]
   16a36:	0621      	.short	0x0621
   16a38:	15190d06 	.word	0x15190d06
   16a3c:	2111191d 	.word	0x2111191d
   16a40:	21          	.byte	0x21
   16a41:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   16a42:	f007 f85d 	bl	1db00 <__errno>
   16a46:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   16a48:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   16a4a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16a4e:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   16a50:	f007 f856 	bl	1db00 <__errno>
   16a54:	2316      	movs	r3, #22
   16a56:	e7f7      	b.n	16a48 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   16a58:	f007 f852 	bl	1db00 <__errno>
   16a5c:	2313      	movs	r3, #19
   16a5e:	e7f3      	b.n	16a48 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   16a60:	f007 f84e 	bl	1db00 <__errno>
   16a64:	2311      	movs	r3, #17
   16a66:	e7ef      	b.n	16a48 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   16a68:	f007 f84a 	bl	1db00 <__errno>
   16a6c:	230d      	movs	r3, #13
   16a6e:	e7eb      	b.n	16a48 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   16a70:	f007 f846 	bl	1db00 <__errno>
   16a74:	2309      	movs	r3, #9
   16a76:	e7e7      	b.n	16a48 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   16a78:	f007 f842 	bl	1db00 <__errno>
   16a7c:	2305      	movs	r3, #5
   16a7e:	e7e3      	b.n	16a48 <remap_fatfs_errors+0x1e>

00016a80 <findslot>:
findslot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   16a80:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   16a82:	b570      	push	{r4, r5, r6, lr}
   16a84:	490e      	ldr	r1, [pc, #56]	; (16ac0 <findslot+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   16a86:	d006      	beq.n	16a96 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   16a88:	4b0e      	ldr	r3, [pc, #56]	; (16ac4 <findslot+0x44>)
   16a8a:	681b      	ldr	r3, [r3, #0]
   16a8c:	4298      	cmp	r0, r3
   16a8e:	d102      	bne.n	16a96 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   16a90:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   16a92:	4610      	mov	r0, r2
   16a94:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   16a96:	2300      	movs	r3, #0
   16a98:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   16a9a:	4d0b      	ldr	r5, [pc, #44]	; (16ac8 <findslot+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   16a9c:	600b      	str	r3, [r1, #0]
   16a9e:	2b06      	cmp	r3, #6
   16aa0:	461a      	mov	r2, r3
   16aa2:	d006      	beq.n	16ab2 <findslot+0x32>
   16aa4:	1c53      	adds	r3, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   16aa6:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   16aaa:	f856 6c10 	ldr.w	r6, [r6, #-16]
   16aae:	42b0      	cmp	r0, r6
   16ab0:	d104      	bne.n	16abc <findslot+0x3c>
   16ab2:	b104      	cbz	r4, 16ab6 <findslot+0x36>
   16ab4:	600a      	str	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   16ab6:	4b03      	ldr	r3, [pc, #12]	; (16ac4 <findslot+0x44>)
   16ab8:	6018      	str	r0, [r3, #0]
   16aba:	e7ea      	b.n	16a92 <findslot+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   16abc:	2401      	movs	r4, #1
   16abe:	e7ee      	b.n	16a9e <findslot+0x1e>
   16ac0:	2007c5bc 	.word	0x2007c5bc
   16ac4:	2007c098 	.word	0x2007c098
   16ac8:	2007c55c 	.word	0x2007c55c

00016acc <remap_handle>:
remap_handle():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   16acc:	4b08      	ldr	r3, [pc, #32]	; (16af0 <remap_handle+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   16ace:	b510      	push	{r4, lr}
   16ad0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   16ad2:	6818      	ldr	r0, [r3, #0]
   16ad4:	b118      	cbz	r0, 16ade <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   16ad6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   16ad8:	b90b      	cbnz	r3, 16ade <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   16ada:	f007 f975 	bl	1ddc8 <__sinit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   16ade:	b124      	cbz	r4, 16aea <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   16ae0:	2c01      	cmp	r4, #1
   16ae2:	d002      	beq.n	16aea <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   16ae4:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   16ae6:	bf18      	it	ne
   16ae8:	3c20      	subne	r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   16aea:	4620      	mov	r0, r4
   16aec:	bd10      	pop	{r4, pc}
   16aee:	bf00      	nop
   16af0:	2007c0e4 	.word	0x2007c0e4

00016af4 <sys_set_outchar_func>:
sys_set_outchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   16af4:	4b01      	ldr	r3, [pc, #4]	; (16afc <sys_set_outchar_func+0x8>)
   16af6:	6018      	str	r0, [r3, #0]
   16af8:	4770      	bx	lr
   16afa:	bf00      	nop
   16afc:	2007c554 	.word	0x2007c554

00016b00 <sys_set_inchar_func>:
sys_set_inchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   16b00:	4b01      	ldr	r3, [pc, #4]	; (16b08 <sys_set_inchar_func+0x8>)
   16b02:	6018      	str	r0, [r3, #0]
   16b04:	4770      	bx	lr
   16b06:	bf00      	nop
   16b08:	2007c550 	.word	0x2007c550

00016b0c <_kill>:
_kill():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   16b0c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   16b0e:	4802      	ldr	r0, [pc, #8]	; (16b18 <_kill+0xc>)
   16b10:	f008 ff4c 	bl	1f9ac <puts>
   16b14:	e7fe      	b.n	16b14 <_kill+0x8>
   16b16:	bf00      	nop
   16b18:	00025343 	.word	0x00025343

00016b1c <_exit>:
_exit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   16b1c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   16b1e:	4802      	ldr	r0, [pc, #8]	; (16b28 <_exit+0xc>)
   16b20:	f008 ff44 	bl	1f9ac <puts>
   16b24:	e7fe      	b.n	16b24 <_exit+0x8>
   16b26:	bf00      	nop
   16b28:	00025329 	.word	0x00025329

00016b2c <_getpid>:
_getpid():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   16b2c:	2000      	movs	r0, #0
   16b2e:	4770      	bx	lr

00016b30 <_init>:
_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   16b30:	2001      	movs	r0, #1
   16b32:	4770      	bx	lr

00016b34 <syscalls_init>:
syscalls_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   16b34:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   16b36:	4b0a      	ldr	r3, [pc, #40]	; (16b60 <syscalls_init+0x2c>)
   16b38:	781d      	ldrb	r5, [r3, #0]
   16b3a:	b985      	cbnz	r5, 16b5e <syscalls_init+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   16b3c:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   16b3e:	4c09      	ldr	r4, [pc, #36]	; (16b64 <syscalls_init+0x30>)
   16b40:	2260      	movs	r2, #96	; 0x60
   16b42:	4629      	mov	r1, r5
   16b44:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   16b46:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   16b48:	f007 fd10 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   16b4c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   16b50:	6323      	str	r3, [r4, #48]	; 0x30
   16b52:	6423      	str	r3, [r4, #64]	; 0x40
   16b54:	6523      	str	r3, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   16b56:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   16b58:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   16b5a:	6126      	str	r6, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   16b5c:	6223      	str	r3, [r4, #32]
   16b5e:	bd70      	pop	{r4, r5, r6, pc}
   16b60:	2007c558 	.word	0x2007c558
   16b64:	2007c55c 	.word	0x2007c55c

00016b68 <_read>:
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   16b68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   16b6c:	4689      	mov	r9, r1
   16b6e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   16b70:	f7ff ffac 	bl	16acc <remap_handle>
   16b74:	4605      	mov	r5, r0
   16b76:	f7ff ff83 	bl	16a80 <findslot>
   16b7a:	2806      	cmp	r0, #6
   16b7c:	d106      	bne.n	16b8c <_read+0x24>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16b7e:	f006 ffbf 	bl	1db00 <__errno>
   16b82:	2309      	movs	r3, #9
   16b84:	6003      	str	r3, [r0, #0]
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   16b86:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16b8a:	e016      	b.n	16bba <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   16b8c:	4e1b      	ldr	r6, [pc, #108]	; (16bfc <_read+0x94>)
   16b8e:	0107      	lsls	r7, r0, #4
   16b90:	19f3      	adds	r3, r6, r7
   16b92:	689b      	ldr	r3, [r3, #8]
   16b94:	07db      	lsls	r3, r3, #31
   16b96:	d4f2      	bmi.n	16b7e <_read+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   16b98:	2d00      	cmp	r5, #0
   16b9a:	d011      	beq.n	16bc0 <_read+0x58>
   16b9c:	db01      	blt.n	16ba2 <_read+0x3a>
   16b9e:	2d05      	cmp	r5, #5
   16ba0:	ddf1      	ble.n	16b86 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   16ba2:	19f3      	adds	r3, r6, r7
   16ba4:	68d8      	ldr	r0, [r3, #12]
   16ba6:	2800      	cmp	r0, #0
   16ba8:	d0ed      	beq.n	16b86 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   16baa:	ab01      	add	r3, sp, #4
   16bac:	4622      	mov	r2, r4
   16bae:	4649      	mov	r1, r9
   16bb0:	f7fc f883 	bl	12cba <f_read>
   16bb4:	b1f8      	cbz	r0, 16bf6 <_read+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   16bb6:	f7ff ff38 	bl	16a2a <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   16bba:	b003      	add	sp, #12
   16bbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   16bc0:	4b0f      	ldr	r3, [pc, #60]	; (16c00 <_read+0x98>)
   16bc2:	681a      	ldr	r2, [r3, #0]
   16bc4:	4698      	mov	r8, r3
   16bc6:	b132      	cbz	r2, 16bd6 <_read+0x6e>
   16bc8:	464d      	mov	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   16bca:	eba5 0309 	sub.w	r3, r5, r9
   16bce:	429c      	cmp	r4, r3
   16bd0:	dc0a      	bgt.n	16be8 <_read+0x80>
   16bd2:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   16bd6:	1b60      	subs	r0, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   16bd8:	2800      	cmp	r0, #0
   16bda:	dbd4      	blt.n	16b86 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   16bdc:	443e      	add	r6, r7
   16bde:	6873      	ldr	r3, [r6, #4]
   16be0:	1a20      	subs	r0, r4, r0
   16be2:	4403      	add	r3, r0
   16be4:	6073      	str	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   16be6:	e7e8      	b.n	16bba <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   16be8:	f8d8 3000 	ldr.w	r3, [r8]
   16bec:	2000      	movs	r0, #0
   16bee:	4798      	blx	r3
   16bf0:	f805 0b01 	strb.w	r0, [r5], #1
   16bf4:	e7e9      	b.n	16bca <_read+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   16bf6:	9801      	ldr	r0, [sp, #4]
   16bf8:	1a20      	subs	r0, r4, r0
   16bfa:	e7ed      	b.n	16bd8 <_read+0x70>
   16bfc:	2007c55c 	.word	0x2007c55c
   16c00:	2007c550 	.word	0x2007c550

00016c04 <_lseek>:
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   16c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16c06:	460e      	mov	r6, r1
   16c08:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   16c0a:	f7ff ff5f 	bl	16acc <remap_handle>
   16c0e:	f7ff ff37 	bl	16a80 <findslot>
   16c12:	2806      	cmp	r0, #6
   16c14:	d004      	beq.n	16c20 <_lseek+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   16c16:	4c12      	ldr	r4, [pc, #72]	; (16c60 <_lseek+0x5c>)
   16c18:	0105      	lsls	r5, r0, #4
   16c1a:	1962      	adds	r2, r4, r5
   16c1c:	68d0      	ldr	r0, [r2, #12]
   16c1e:	b930      	cbnz	r0, 16c2e <_lseek+0x2a>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16c20:	f006 ff6e 	bl	1db00 <__errno>
   16c24:	2309      	movs	r3, #9
   16c26:	6003      	str	r3, [r0, #0]
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   16c28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16c2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   16c2e:	b93f      	cbnz	r7, 16c40 <_lseek+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   16c30:	4631      	mov	r1, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   16c32:	f7fc fa27 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   16c36:	b170      	cbz	r0, 16c56 <_lseek+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   16c38:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   16c3c:	f7ff bef5 	b.w	16a2a <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   16c40:	2f01      	cmp	r7, #1
   16c42:	d102      	bne.n	16c4a <_lseek+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   16c44:	6881      	ldr	r1, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   16c46:	4431      	add	r1, r6
   16c48:	e7f3      	b.n	16c32 <_lseek+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   16c4a:	2f02      	cmp	r7, #2
   16c4c:	d101      	bne.n	16c52 <_lseek+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   16c4e:	68c1      	ldr	r1, [r0, #12]
   16c50:	e7f9      	b.n	16c46 <_lseek+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   16c52:	2009      	movs	r0, #9
   16c54:	e7f0      	b.n	16c38 <_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   16c56:	1963      	adds	r3, r4, r5
   16c58:	68da      	ldr	r2, [r3, #12]
   16c5a:	6890      	ldr	r0, [r2, #8]
   16c5c:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   16c5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16c60:	2007c55c 	.word	0x2007c55c

00016c64 <_write>:
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   16c64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   16c68:	460f      	mov	r7, r1
   16c6a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   16c6c:	f7ff ff2e 	bl	16acc <remap_handle>
   16c70:	4606      	mov	r6, r0
   16c72:	f7ff ff05 	bl	16a80 <findslot>
   16c76:	2806      	cmp	r0, #6
   16c78:	4605      	mov	r5, r0
   16c7a:	d104      	bne.n	16c86 <_write+0x22>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16c7c:	f006 ff40 	bl	1db00 <__errno>
   16c80:	2309      	movs	r3, #9
   16c82:	6003      	str	r3, [r0, #0]
   16c84:	e006      	b.n	16c94 <_write+0x30>
   16c86:	2e05      	cmp	r6, #5
   16c88:	d826      	bhi.n	16cd8 <_write+0x74>
   16c8a:	2001      	movs	r0, #1
   16c8c:	40b0      	lsls	r0, r6
   16c8e:	f010 0f39 	tst.w	r0, #57	; 0x39
   16c92:	d002      	beq.n	16c9a <_write+0x36>
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   16c94:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16c98:	e02c      	b.n	16cf4 <_write+0x90>
   16c9a:	f010 0f06 	tst.w	r0, #6
   16c9e:	d01b      	beq.n	16cd8 <_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   16ca0:	4e17      	ldr	r6, [pc, #92]	; (16d00 <_write+0x9c>)
   16ca2:	6830      	ldr	r0, [r6, #0]
   16ca4:	b130      	cbz	r0, 16cb4 <_write+0x50>
   16ca6:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   16ca8:	eba8 0307 	sub.w	r3, r8, r7
   16cac:	429c      	cmp	r4, r3
   16cae:	dc0e      	bgt.n	16cce <_write+0x6a>
   16cb0:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   16cb4:	1a20      	subs	r0, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   16cb6:	1c43      	adds	r3, r0, #1
   16cb8:	d0ec      	beq.n	16c94 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   16cba:	42a0      	cmp	r0, r4
   16cbc:	d0ea      	beq.n	16c94 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   16cbe:	4b11      	ldr	r3, [pc, #68]	; (16d04 <_write+0xa0>)
   16cc0:	1a20      	subs	r0, r4, r0
   16cc2:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   16cc6:	685a      	ldr	r2, [r3, #4]
   16cc8:	4402      	add	r2, r0
   16cca:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   16ccc:	e012      	b.n	16cf4 <_write+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   16cce:	6833      	ldr	r3, [r6, #0]
   16cd0:	f818 0b01 	ldrb.w	r0, [r8], #1
   16cd4:	4798      	blx	r3
   16cd6:	e7e7      	b.n	16ca8 <_write+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   16cd8:	4b0a      	ldr	r3, [pc, #40]	; (16d04 <_write+0xa0>)
   16cda:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   16cde:	68d8      	ldr	r0, [r3, #12]
   16ce0:	2800      	cmp	r0, #0
   16ce2:	d0cb      	beq.n	16c7c <_write+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   16ce4:	ab01      	add	r3, sp, #4
   16ce6:	4622      	mov	r2, r4
   16ce8:	4639      	mov	r1, r7
   16cea:	f7fc f89e 	bl	12e2a <f_write>
   16cee:	b120      	cbz	r0, 16cfa <_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   16cf0:	f7ff fe9b 	bl	16a2a <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   16cf4:	b002      	add	sp, #8
   16cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   16cfa:	9801      	ldr	r0, [sp, #4]
   16cfc:	e7da      	b.n	16cb4 <_write+0x50>
   16cfe:	bf00      	nop
   16d00:	2007c554 	.word	0x2007c554
   16d04:	2007c55c 	.word	0x2007c55c

00016d08 <_open>:
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554

int _open(const char *path, int flags, ...)
{
   16d08:	b40e      	push	{r1, r2, r3}
   16d0a:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
   16d0e:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    int fh = 0;
    int slot;

    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   16d10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554
{
   16d14:	9d07      	ldr	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   16d16:	f7ff feb3 	bl	16a80 <findslot>
   16d1a:	2806      	cmp	r0, #6
   16d1c:	4606      	mov	r6, r0
   16d1e:	d109      	bne.n	16d34 <_open+0x2c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16d20:	f006 feee 	bl	1db00 <__errno>
   16d24:	2317      	movs	r3, #23
   16d26:	6003      	str	r3, [r0, #0]
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    {
        free(openfiles[slot].fatfsFCB);
        openfiles[slot].fatfsFCB = NULL;
    }

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   16d28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:646
}
   16d2c:	e8bd 41f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, lr}
   16d30:	b003      	add	sp, #12
   16d32:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:561
    if (flags & O_APPEND)
   16d34:	0728      	lsls	r0, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   16d36:	4943      	ldr	r1, [pc, #268]	; (16e44 <_open+0x13c>)
   16d38:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:562
        flags &= ~O_TRUNC;
   16d3a:	bf48      	it	mi
   16d3c:	f425 6580 	bicmi.w	r5, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   16d40:	f009 f95c 	bl	1fffc <strcmp>
   16d44:	2800      	cmp	r0, #0
   16d46:	d076      	beq.n	16e36 <_open+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:566
    else if (!__builtin_strcmp(path, "/dev/uart1"))
   16d48:	493f      	ldr	r1, [pc, #252]	; (16e48 <_open+0x140>)
   16d4a:	4638      	mov	r0, r7
   16d4c:	f009 f956 	bl	1fffc <strcmp>
   16d50:	2800      	cmp	r0, #0
   16d52:	d072      	beq.n	16e3a <_open+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:568
    else if (!__builtin_strcmp(path, "/dev/usb"))
   16d54:	493d      	ldr	r1, [pc, #244]	; (16e4c <_open+0x144>)
   16d56:	4638      	mov	r0, r7
   16d58:	f009 f950 	bl	1fffc <strcmp>
   16d5c:	2800      	cmp	r0, #0
   16d5e:	d06e      	beq.n	16e3e <_open+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:586
        if (((flags & (O_CREAT | O_TRUNC)) == (O_CREAT | O_TRUNC))
   16d60:	f405 63c0 	and.w	r3, r5, #1536	; 0x600
   16d64:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
   16d68:	d101      	bne.n	16d6e <_open+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:587
                && (flags & (O_RDWR | O_WRONLY)))
   16d6a:	07a9      	lsls	r1, r5, #30
   16d6c:	d10d      	bne.n	16d8a <_open+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:589
        else if ((flags & (O_CREAT | O_EXCL)) == (O_CREAT | O_EXCL))
   16d6e:	f405 6320 	and.w	r3, r5, #2560	; 0xa00
   16d72:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
   16d76:	d039      	beq.n	16dec <_open+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:591
        else if ((flags & O_CREAT) == O_CREAT)
   16d78:	f415 7200 	ands.w	r2, r5, #512	; 0x200
   16d7c:	d138      	bne.n	16df0 <_open+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:593
        else if ((flags == O_RDONLY) || (flags == O_WRONLY)
   16d7e:	2d02      	cmp	r5, #2
   16d80:	d904      	bls.n	16d8c <_open+0x84>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16d82:	f006 febd 	bl	1db00 <__errno>
   16d86:	2316      	movs	r3, #22
   16d88:	e7cd      	b.n	16d26 <_open+0x1e>
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:588
            fatfsFlags = FA_CREATE_ALWAYS;
   16d8a:	2208      	movs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:599
        if ((flags & O_ACCMODE) == O_RDONLY)
   16d8c:	f015 0303 	ands.w	r3, r5, #3
   16d90:	d130      	bne.n	16df4 <_open+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:600
            fatfsFlags |= FA_READ;
   16d92:	f042 0401 	orr.w	r4, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:609
        errno = EIO;
   16d96:	f006 feb3 	bl	1db00 <__errno>
   16d9a:	2305      	movs	r3, #5
   16d9c:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:611
        if (!openfiles[slot].fatfsFCB)
   16d9e:	4b2c      	ldr	r3, [pc, #176]	; (16e50 <_open+0x148>)
   16da0:	eb03 1806 	add.w	r8, r3, r6, lsl #4
   16da4:	f8d8 000c 	ldr.w	r0, [r8, #12]
   16da8:	b9c0      	cbnz	r0, 16ddc <_open+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:612
            if ((openfiles[slot].fatfsFCB = __builtin_calloc(1, sizeof(FIL))))
   16daa:	f44f 7109 	mov.w	r1, #548	; 0x224
   16dae:	2001      	movs	r0, #1
   16db0:	f006 fe96 	bl	1dae0 <calloc>
   16db4:	f8c8 000c 	str.w	r0, [r8, #12]
   16db8:	2800      	cmp	r0, #0
   16dba:	d0b5      	beq.n	16d28 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615
                                == FR_OK) ? (slot + MONITOR_FATFS) : -1) == -1)
   16dbc:	b2e2      	uxtb	r2, r4
   16dbe:	4639      	mov	r1, r7
   16dc0:	f7fb fee4 	bl	12b8c <f_open>
   16dc4:	b910      	cbnz	r0, 16dcc <_open+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615 (discriminator 1)
   16dc6:	1db4      	adds	r4, r6, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:613 (discriminator 1)
                if ((fh =
   16dc8:	1c62      	adds	r2, r4, #1
   16dca:	d11d      	bne.n	16e08 <_open+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:616
                    remap_fatfs_errors(f);
   16dcc:	f7ff fe2d 	bl	16a2a <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:639
    if ((fh < 0) && openfiles[slot].fatfsFCB)
   16dd0:	4b1f      	ldr	r3, [pc, #124]	; (16e50 <_open+0x148>)
   16dd2:	eb03 1306 	add.w	r3, r3, r6, lsl #4
   16dd6:	68d8      	ldr	r0, [r3, #12]
   16dd8:	2800      	cmp	r0, #0
   16dda:	d0a5      	beq.n	16d28 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:641
        free(openfiles[slot].fatfsFCB);
   16ddc:	f007 fb6a 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:642
        openfiles[slot].fatfsFCB = NULL;
   16de0:	4b1b      	ldr	r3, [pc, #108]	; (16e50 <_open+0x148>)
   16de2:	eb03 1606 	add.w	r6, r3, r6, lsl #4
   16de6:	2300      	movs	r3, #0
   16de8:	60f3      	str	r3, [r6, #12]
   16dea:	e79d      	b.n	16d28 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:590
            fatfsFlags = FA_OPEN_EXISTING;
   16dec:	2200      	movs	r2, #0
   16dee:	e7cd      	b.n	16d8c <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:592
            fatfsFlags = FA_OPEN_ALWAYS;
   16df0:	2210      	movs	r2, #16
   16df2:	e7cb      	b.n	16d8c <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:601
        else if ((flags & O_ACCMODE) == O_WRONLY)
   16df4:	2b01      	cmp	r3, #1
   16df6:	d102      	bne.n	16dfe <_open+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:602
            fatfsFlags |= FA_WRITE;
   16df8:	f042 0402 	orr.w	r4, r2, #2
   16dfc:	e7cb      	b.n	16d96 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:603
        else if ((flags & O_ACCMODE) == O_RDWR)
   16dfe:	2b02      	cmp	r3, #2
   16e00:	d1bf      	bne.n	16d82 <_open+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:604
            fatfsFlags |= (FA_READ | FA_WRITE);
   16e02:	f042 0403 	orr.w	r4, r2, #3
   16e06:	e7c6      	b.n	16d96 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:623
    if (fh >= 0)
   16e08:	2c00      	cmp	r4, #0
   16e0a:	dbe1      	blt.n	16dd0 <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:625
        openfiles[slot].handle = fh;
   16e0c:	4a10      	ldr	r2, [pc, #64]	; (16e50 <_open+0x148>)
   16e0e:	0133      	lsls	r3, r6, #4
   16e10:	18d7      	adds	r7, r2, r3
   16e12:	50d4      	str	r4, [r2, r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:626
        openfiles[slot].pos = 0;
   16e14:	2300      	movs	r3, #0
   16e16:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   16e18:	072b      	lsls	r3, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:627
        openfiles[slot].flags = flags;
   16e1a:	60bd      	str	r5, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   16e1c:	d508      	bpl.n	16e30 <_open+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:631
            if (f_lseek(openfiles[slot].fatfsFCB,
   16e1e:	68f8      	ldr	r0, [r7, #12]
   16e20:	68c1      	ldr	r1, [r0, #12]
   16e22:	f7fc f92f 	bl	13084 <f_lseek>
   16e26:	2800      	cmp	r0, #0
   16e28:	d1d2      	bne.n	16dd0 <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:635
                openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   16e2a:	68fb      	ldr	r3, [r7, #12]
   16e2c:	689b      	ldr	r3, [r3, #8]
   16e2e:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   16e30:	f104 0020 	add.w	r0, r4, #32
   16e34:	e77a      	b.n	16d2c <_open+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:565
        fh = MONITOR_UART0;
   16e36:	2403      	movs	r4, #3
   16e38:	e7e8      	b.n	16e0c <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:567
        fh = MONITOR_UART1;
   16e3a:	2404      	movs	r4, #4
   16e3c:	e7e6      	b.n	16e0c <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:569
        fh = MONITOR_USB;
   16e3e:	2405      	movs	r4, #5
   16e40:	e7e4      	b.n	16e0c <_open+0x104>
   16e42:	bf00      	nop
   16e44:	0002535d 	.word	0x0002535d
   16e48:	00025368 	.word	0x00025368
   16e4c:	00025373 	.word	0x00025373
   16e50:	2007c55c 	.word	0x2007c55c

00016e54 <_close>:
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

int _close(int fd)
{
   16e54:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   16e56:	f7ff fe39 	bl	16acc <remap_handle>
   16e5a:	f7ff fe11 	bl	16a80 <findslot>
   16e5e:	2806      	cmp	r0, #6
   16e60:	d106      	bne.n	16e70 <_close+0x1c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16e62:	f006 fe4d 	bl	1db00 <__errno>
   16e66:	2309      	movs	r3, #9
   16e68:	6003      	str	r3, [r0, #0]
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   16e6a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16e6e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   16e70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16e74:	4b0b      	ldr	r3, [pc, #44]	; (16ea4 <_close+0x50>)
   16e76:	0100      	lsls	r0, r0, #4
   16e78:	181c      	adds	r4, r3, r0
   16e7a:	501a      	str	r2, [r3, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   16e7c:	68e0      	ldr	r0, [r4, #12]
   16e7e:	b908      	cbnz	r0, 16e84 <_close+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   16e80:	2000      	movs	r0, #0
   16e82:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   16e84:	f7fc f8ec 	bl	13060 <f_close>
   16e88:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   16e8a:	68e0      	ldr	r0, [r4, #12]
   16e8c:	f007 fb12 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   16e90:	2300      	movs	r3, #0
   16e92:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   16e94:	2d00      	cmp	r5, #0
   16e96:	d0f3      	beq.n	16e80 <_close+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   16e98:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   16e9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   16e9e:	f7ff bdc4 	b.w	16a2a <remap_fatfs_errors>
   16ea2:	bf00      	nop
   16ea4:	2007c55c 	.word	0x2007c55c

00016ea8 <_fstat>:
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   16ea8:	b508      	push	{r3, lr}
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   16eaa:	f006 fe29 	bl	1db00 <__errno>
   16eae:	2358      	movs	r3, #88	; 0x58
   16eb0:	6003      	str	r3, [r0, #0]
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   16eb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16eb6:	bd08      	pop	{r3, pc}

00016eb8 <_isatty>:
_isatty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   16eb8:	4b07      	ldr	r3, [pc, #28]	; (16ed8 <_isatty+0x20>)
   16eba:	681b      	ldr	r3, [r3, #0]
   16ebc:	689a      	ldr	r2, [r3, #8]
   16ebe:	4282      	cmp	r2, r0
   16ec0:	d007      	beq.n	16ed2 <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   16ec2:	685a      	ldr	r2, [r3, #4]
   16ec4:	4282      	cmp	r2, r0
   16ec6:	d004      	beq.n	16ed2 <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   16ec8:	68db      	ldr	r3, [r3, #12]
   16eca:	1a1b      	subs	r3, r3, r0
   16ecc:	4258      	negs	r0, r3
   16ece:	4158      	adcs	r0, r3
   16ed0:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   16ed2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   16ed4:	4770      	bx	lr
   16ed6:	bf00      	nop
   16ed8:	2007c0e4 	.word	0x2007c0e4

00016edc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
    I2C_SET_READ_MODE(address);
    return transfer(address, NULL, 0, rdata, rlength);
}

bool I2C_Base::transfer(uint8_t address, uint8_t * wdata, uint32_t wlength, uint8_t * rdata, uint32_t rlength)
{
   16edc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    bool status = false;
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   16ee0:	f890 5105 	ldrb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
{
   16ee4:	4604      	mov	r4, r0
   16ee6:	468a      	mov	sl, r1
   16ee8:	4617      	mov	r7, r2
   16eea:	4699      	mov	r9, r3
   16eec:	9e08      	ldr	r6, [sp, #32]
   16eee:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   16ef2:	b11d      	cbz	r5, 16efc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    {
        return status;
   16ef4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:130

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   16ef6:	4628      	mov	r0, r5
   16ef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 1)
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   16efc:	b90a      	cbnz	r2, 16f02 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 2)
   16efe:	2e00      	cmp	r6, #0
   16f00:	d0f8      	beq.n	16ef4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:98
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   16f02:	f002 f9b9 	bl	19278 <xTaskGetSchedulerState>
   16f06:	2802      	cmp	r0, #2
   16f08:	d035      	beq.n	16f76 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x9a>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
/// Private ///

void I2C_Base::i2cKickOffTransfer(uint8_t addr, uint8_t * wbytes, uint32_t wlength, uint8_t * rbytes, uint32_t rlength)
{
    mTransaction.slaveAddr      = addr;
    mTransaction.error          = 0;
   16f0a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mTransaction.dataWrite      = wbytes;
    mTransaction.writeLength    = wlength;
    mTransaction.dataRead       = rbytes;
    mTransaction.readLength     = rlength;
    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   16f0c:	2220      	movs	r2, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   16f0e:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   16f12:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   16f16:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   16f1a:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   16f1e:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   16f22:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   16f26:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   16f2a:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   16f2c:	f7f9 fab6 	bl	1049c <sys_get_uptime_us>
   16f30:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16f34:	2300      	movs	r3, #0
   16f36:	f006 fc3f 	bl	1d7b8 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:103
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   16f3a:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   16f3e:	f141 0700 	adc.w	r7, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:104
        while (!xSemaphoreTake(mTransferCompleteSignal, 0))
   16f42:	2300      	movs	r3, #0
   16f44:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   16f48:	461a      	mov	r2, r3
   16f4a:	4619      	mov	r1, r3
   16f4c:	f001 fc50 	bl	187f0 <xQueueGenericReceive>
   16f50:	b128      	cbz	r0, 16f5e <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
        status = (0 == mTransaction.error);
   16f52:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   16f56:	fab5 f585 	clz	r5, r5
   16f5a:	096d      	lsrs	r5, r5, #5
   16f5c:	e7cb      	b.n	16ef6 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   16f5e:	f7f9 fa9d 	bl	1049c <sys_get_uptime_us>
   16f62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16f66:	2300      	movs	r3, #0
   16f68:	f006 fc26 	bl	1d7b8 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:106
            if (sys_get_uptime_ms() > timeout)
   16f6c:	428f      	cmp	r7, r1
   16f6e:	bf08      	it	eq
   16f70:	4286      	cmpeq	r6, r0
   16f72:	d2e6      	bcs.n	16f42 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x66>
   16f74:	e7ed      	b.n	16f52 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   16f76:	2300      	movs	r3, #0
   16f78:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16f7c:	4619      	mov	r1, r3
   16f7e:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   16f82:	f001 fc35 	bl	187f0 <xQueueGenericReceive>
   16f86:	2800      	cmp	r0, #0
   16f88:	d0b4      	beq.n	16ef4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:117
        xSemaphoreTake(mTransferCompleteSignal, 0);
   16f8a:	2300      	movs	r3, #0
   16f8c:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   16f90:	461a      	mov	r2, r3
   16f92:	4619      	mov	r1, r3
   16f94:	f001 fc2c 	bl	187f0 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   16f98:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   16f9a:	2120      	movs	r1, #32
   16f9c:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   16fa0:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   16fa4:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   16fa8:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   16fac:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   16fb0:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   16fb4:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   16fb8:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   16fbc:	6011      	str	r1, [r2, #0]
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   16fbe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16fc2:	4619      	mov	r1, r3
   16fc4:	f001 fc14 	bl	187f0 <xQueueGenericReceive>
   16fc8:	b120      	cbz	r0, 16fd4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:123
            status = (0 == mTransaction.error);
   16fca:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   16fce:	fab5 f585 	clz	r5, r5
   16fd2:	096d      	lsrs	r5, r5, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
        xSemaphoreGive(mI2CMutex);
   16fd4:	2300      	movs	r3, #0
   16fd6:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   16fda:	461a      	mov	r2, r3
   16fdc:	4619      	mov	r1, r3
   16fde:	f001 faff 	bl	185e0 <xQueueGenericSend>
   16fe2:	e788      	b.n	16ef6 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>

00016fe4 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base21writeRegisterThenReadEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   16fe4:	b410      	push	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   16fe6:	f041 0101 	orr.w	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:65
}
   16fea:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   16fec:	f7ff bf76 	b.w	16edc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>

00016ff0 <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   16ff0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:48
    uint8_t register_return = 0;
   16ff2:	2300      	movs	r3, #0
   16ff4:	f88d 3017 	strb.w	r3, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   16ff8:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   16ffa:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   16ffe:	f10d 0217 	add.w	r2, sp, #23
   17002:	9200      	str	r2, [sp, #0]
   17004:	9301      	str	r3, [sp, #4]
   17006:	f10d 020f 	add.w	r2, sp, #15
   1700a:	f7ff ffeb 	bl	16fe4 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
}
   1700e:	f89d 0017 	ldrb.w	r0, [sp, #23]
   17012:	b007      	add	sp, #28
   17014:	f85d fb04 	ldr.w	pc, [sp], #4

00017018 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
{
   17018:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1701a:	ac04      	add	r4, sp, #16
   1701c:	f804 2d01 	strb.w	r2, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:81
    return writeRegisterThenRead(deviceAddress, &firstReg, 1, pData, transferSize);
   17020:	9a06      	ldr	r2, [sp, #24]
   17022:	9300      	str	r3, [sp, #0]
   17024:	9201      	str	r2, [sp, #4]
   17026:	2301      	movs	r3, #1
   17028:	4622      	mov	r2, r4
   1702a:	f7ff ffdb 	bl	16fe4 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:82
}
   1702e:	b004      	add	sp, #16
   17030:	bd10      	pop	{r4, pc}

00017032 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
{
   17032:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:77
    return transfer(address, wdata, wlength, NULL, 0);
   17034:	2400      	movs	r4, #0
   17036:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   1703a:	9401      	str	r4, [sp, #4]
   1703c:	9400      	str	r4, [sp, #0]
   1703e:	f7ff ff4d 	bl	16edc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:78
}
   17042:	b002      	add	sp, #8
   17044:	bd10      	pop	{r4, pc}

00017046 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
{
   17046:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:55
    writeBytes[0] = registerAddress;
   17048:	f88d 2004 	strb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:56
    writeBytes[1] = value;
   1704c:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return writeRegisters(deviceAddress, writeBytes, 2);
   17050:	aa01      	add	r2, sp, #4
   17052:	2302      	movs	r3, #2
   17054:	f7ff ffed 	bl	17032 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:59
}
   17058:	b003      	add	sp, #12
   1705a:	f85d fb04 	ldr.w	pc, [sp], #4

0001705e <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:84
{
   1705e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
    return transfer(address, NULL, 0, rdata, rlength);
   17060:	e88d 000c 	stmia.w	sp, {r2, r3}
   17064:	2300      	movs	r3, #0
   17066:	f041 0101 	orr.w	r1, r1, #1
   1706a:	461a      	mov	r2, r3
   1706c:	f7ff ff36 	bl	16edc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
}
   17070:	b003      	add	sp, #12
   17072:	f85d fb04 	ldr.w	pc, [sp], #4

00017076 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   17076:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
{
   17078:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   1707a:	aa02      	add	r2, sp, #8
   1707c:	f802 3d01 	strb.w	r3, [r2, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
    return readRegisters(address, &notUsed, lenZeroToTestDeviceReady);
   17080:	f7ff ffed 	bl	1705e <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:140
}
   17084:	b003      	add	sp, #12
   17086:	f85d fb04 	ldr.w	pc, [sp], #4
   1708a:	Address 0x000000000001708a is out of bounds.


0001708c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   1708c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   1708e:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   17090:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   17092:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
   17096:	f880 5105 	strb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   1709a:	2001      	movs	r0, #1
   1709c:	f001 fb22 	bl	186e4 <xQueueCreateMutex>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   170a0:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   170a2:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   170a6:	4629      	mov	r1, r5
   170a8:	2001      	movs	r0, #1
   170aa:	f001 fa7f 	bl	185ac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   170ae:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   170b2:	4a0c      	ldr	r2, [pc, #48]	; (170e4 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   170b4:	f8c4 010c 	str.w	r0, [r4, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   170b8:	4293      	cmp	r3, r2
   170ba:	d00c      	beq.n	170d6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4a>
   170bc:	f502 2288 	add.w	r2, r2, #278528	; 0x44000
   170c0:	4293      	cmp	r3, r2
   170c2:	d00a      	beq.n	170da <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4e>
   170c4:	f5a2 2204 	sub.w	r2, r2, #540672	; 0x84000
   170c8:	4293      	cmp	r3, r2
   170ca:	d108      	bne.n	170de <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:156
            mIRQ = I2C0_IRQn;
   170cc:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   170ce:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:168
}
   170d2:	4620      	mov	r0, r4
   170d4:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:159
            mIRQ = I2C1_IRQn;
   170d6:	230b      	movs	r3, #11
   170d8:	e7f9      	b.n	170ce <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:162
            mIRQ = I2C2_IRQn;
   170da:	230c      	movs	r3, #12
   170dc:	e7f7      	b.n	170ce <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   170de:	2363      	movs	r3, #99	; 0x63
   170e0:	e7f5      	b.n	170ce <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
   170e2:	bf00      	nop
   170e4:	4005c000 	.word	0x4005c000

000170e8 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   170e8:	f990 3104 	ldrsb.w	r3, [r0, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   170ec:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   170ee:	2b0b      	cmp	r3, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   170f0:	4605      	mov	r5, r0
   170f2:	460c      	mov	r4, r1
   170f4:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   170f6:	d035      	beq.n	17164 <I2C_Base::init(unsigned long, unsigned long)+0x7c>
   170f8:	2b0c      	cmp	r3, #12
   170fa:	d036      	beq.n	1716a <I2C_Base::init(unsigned long, unsigned long)+0x82>
   170fc:	2b0a      	cmp	r3, #10
   170fe:	d137      	bne.n	17170 <I2C_Base::init(unsigned long, unsigned long)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:175
        case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   17100:	2101      	movs	r1, #1
   17102:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   17104:	f7f9 fc0a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   17108:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   1710c:	bf98      	it	ls
   1710e:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   17112:	f04f 026c 	mov.w	r2, #108	; 0x6c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   17116:	bf94      	ite	ls
   17118:	4371      	mulls	r1, r6
   1711a:	4916      	ldrhi	r1, [pc, #88]	; (17174 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   1711c:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   17120:	fbb4 f1f1 	udiv	r1, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   17124:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   17126:	2228      	movs	r2, #40	; 0x28
   17128:	2064      	movs	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   1712a:	0849      	lsrs	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   1712c:	434a      	muls	r2, r1
   1712e:	fbb2 f2f0 	udiv	r2, r2, r0
   17132:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   17134:	223c      	movs	r2, #60	; 0x3c
   17136:	4351      	muls	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   17138:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   1713a:	fbb1 f1f0 	udiv	r1, r1, r0
   1713e:	6159      	str	r1, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   17140:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2ADR1 = 0;
   17142:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:202
    mpI2CRegs->I2ADR2 = 0;
   17144:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    mpI2CRegs->I2ADR3 = 0;
   17146:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
    mpI2CRegs->I2CONSET = 0x40;
   17148:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1714a:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
   1714c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:208
    NVIC_EnableIRQ(mIRQ);
   1714e:	f995 3104 	ldrsb.w	r3, [r5, #260]	; 0x104
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17152:	4a09      	ldr	r2, [pc, #36]	; (17178 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   17154:	0959      	lsrs	r1, r3, #5
   17156:	f003 031f 	and.w	r3, r3, #31
   1715a:	fa00 f303 	lsl.w	r3, r0, r3
   1715e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   17162:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
        case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   17164:	2101      	movs	r1, #1
   17166:	2013      	movs	r0, #19
   17168:	e7cc      	b.n	17104 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   1716a:	2101      	movs	r1, #1
   1716c:	201a      	movs	r0, #26
   1716e:	e7c9      	b.n	17104 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:178
        default: return false;
   17170:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:211
}
   17172:	bd70      	pop	{r4, r5, r6, pc}
   17174:	000186a0 	.word	0x000186a0
   17178:	e000e100 	.word	0xe000e100

0001717c <I2C_Base::setStop()>:
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
{
    mpI2CRegs->I2CONSET = (1 << 5);
}
inline void I2C_Base::clearSTARTFlag()
{
    mpI2CRegs->I2CONCLR = (1 << 5);
   1717c:	2220      	movs	r2, #32
   1717e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
   17182:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:250
    mpI2CRegs->I2CONCLR = (1 << 2);
}
inline void I2C_Base::setStop()
{
    clearSTARTFlag();
    mpI2CRegs->I2CONSET = (1 << 4);
   17184:	2210      	movs	r2, #16
   17186:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   17188:	2208      	movs	r2, #8
   1718a:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:252
    clearSIFlag();
    while ((mpI2CRegs->I2CONSET & (1 << 4)));
   1718c:	681a      	ldr	r2, [r3, #0]
   1718e:	06d2      	lsls	r2, r2, #27
   17190:	d4fc      	bmi.n	1718c <I2C_Base::setStop()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:253
    if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   17192:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
   17196:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:255
    {
        state = readComplete;
   17198:	bf4c      	ite	mi
   1719a:	2301      	movmi	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:259
    }
    else
    {
        state = writeComplete;
   1719c:	2302      	movpl	r3, #2
   1719e:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
   171a2:	4770      	bx	lr

000171a4 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
        readModeNackedBySlave = 0x48,
        dataAvailableAckSent  = 0x50,
        dataAvailableNackSent = 0x58,
    };

    state = busy;
   171a4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   171a6:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
    state = busy;
   171a8:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
     *  For 2+ bytes:  dataAvailableAckSent --> ... (dataAvailableAckSent) --> dataAvailableNackSent --> (stop)
     *  For 1  byte :  dataAvailableNackSent --> (stop)
     ***********************************************************************************************************
     */

    switch (mpI2CRegs->I2STAT)
   171ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   171b0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   171b2:	685a      	ldr	r2, [r3, #4]
   171b4:	2a28      	cmp	r2, #40	; 0x28
   171b6:	d044      	beq.n	17242 <I2C_Base::i2cStateMachine()+0x9e>
   171b8:	d80d      	bhi.n	171d6 <I2C_Base::i2cStateMachine()+0x32>
   171ba:	2a10      	cmp	r2, #16
   171bc:	d027      	beq.n	1720e <I2C_Base::i2cStateMachine()+0x6a>
   171be:	2a18      	cmp	r2, #24
   171c0:	d028      	beq.n	17214 <I2C_Base::i2cStateMachine()+0x70>
   171c2:	2a08      	cmp	r2, #8
   171c4:	d10c      	bne.n	171e0 <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:318
    {
        case start:
            //u0_dbg_printf("sta\n");
            if(mTransaction.writeLength == 0)
   171c6:	f8d0 1118 	ldr.w	r1, [r0, #280]	; 0x118
   171ca:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   171ce:	b9b1      	cbnz	r1, 171fe <I2C_Base::i2cStateMachine()+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            }
            clearSIFlag();
            break;
        case repeatStart:
            //u0_dbg_printf("rsta-%X\n", I2C_READ_ADDR(mTransaction.slaveAddr));
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   171d0:	f042 0201 	orr.w	r2, r2, #1
   171d4:	e015      	b.n	17202 <I2C_Base::i2cStateMachine()+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   171d6:	2a40      	cmp	r2, #64	; 0x40
   171d8:	d03e      	beq.n	17258 <I2C_Base::i2cStateMachine()+0xb4>
   171da:	d805      	bhi.n	171e8 <I2C_Base::i2cStateMachine()+0x44>
   171dc:	2a38      	cmp	r2, #56	; 0x38
   171de:	d059      	beq.n	17294 <I2C_Base::i2cStateMachine()+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:436
        case slaveAddressNacked:    // no break
        case dataNackedBySlave:     // no break
        case readModeNackedBySlave: // no break
        case busError:              // no break
        default:
            mTransaction.error = mpI2CRegs->I2STAT;
   171e0:	685b      	ldr	r3, [r3, #4]
   171e2:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
   171e6:	e01d      	b.n	17224 <I2C_Base::i2cStateMachine()+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   171e8:	2a50      	cmp	r2, #80	; 0x50
   171ea:	d03f      	beq.n	1726c <I2C_Base::i2cStateMachine()+0xc8>
   171ec:	2a58      	cmp	r2, #88	; 0x58
   171ee:	d1f7      	bne.n	171e0 <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:421
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   171f0:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   171f4:	689b      	ldr	r3, [r3, #8]
   171f6:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   171f8:	f7ff ffc0 	bl	1717c <I2C_Base::setStop()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:438
            break;
   171fc:	e004      	b.n	17208 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
                mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   171fe:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   17202:	609a      	str	r2, [r3, #8]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   17204:	2208      	movs	r2, #8
   17206:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:442
    }

    return state;
}
   17208:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
   1720c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   1720e:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   17212:	e7dd      	b.n	171d0 <I2C_Base::i2cStateMachine()+0x2c>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   17214:	2220      	movs	r2, #32
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   17216:	f8d0 1120 	ldr.w	r1, [r0, #288]	; 0x120
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   1721a:	619a      	str	r2, [r3, #24]
   1721c:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   17220:	b911      	cbnz	r1, 17228 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340 (discriminator 1)
   17222:	b90a      	cbnz	r2, 17228 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   17224:	4620      	mov	r0, r4
   17226:	e7e7      	b.n	171f8 <I2C_Base::i2cStateMachine()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:345
            else if(0 != mTransaction.writeLength)
   17228:	2a00      	cmp	r2, #0
   1722a:	d0ed      	beq.n	17208 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   1722c:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   17230:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   17232:	f811 0b01 	ldrb.w	r0, [r1], #1
   17236:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
                ++mTransaction.dataWrite;
   17238:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   1723c:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
   17240:	e7e0      	b.n	17204 <I2C_Base::i2cStateMachine()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:357
            if (0 == mTransaction.writeLength)
   17242:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
   17246:	2a00      	cmp	r2, #0
   17248:	d1f0      	bne.n	1722c <I2C_Base::i2cStateMachine()+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:360
                if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   1724a:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   1724e:	07d2      	lsls	r2, r2, #31
   17250:	d5e8      	bpl.n	17224 <I2C_Base::i2cStateMachine()+0x80>
_ZN8I2C_Base12setSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:233
    mpI2CRegs->I2CONSET = (1 << 5);
   17252:	2220      	movs	r2, #32
   17254:	601a      	str	r2, [r3, #0]
   17256:	e7d5      	b.n	17204 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   17258:	2220      	movs	r2, #32
   1725a:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:387
            if (mTransaction.readLength > 1)
   1725c:	f8d0 2120 	ldr.w	r2, [r0, #288]	; 0x120
   17260:	2a01      	cmp	r2, #1
   17262:	f04f 0204 	mov.w	r2, #4
   17266:	d8f5      	bhi.n	17254 <I2C_Base::i2cStateMachine()+0xb0>
_ZN8I2C_Base11setNackFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:245
    mpI2CRegs->I2CONCLR = (1 << 2);
   17268:	619a      	str	r2, [r3, #24]
   1726a:	e7cb      	b.n	17204 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:400
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   1726c:	689b      	ldr	r3, [r3, #8]
   1726e:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   17272:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
            ++mTransaction.dataRead;
   17274:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
   17278:	2204      	movs	r2, #4
   1727a:	3301      	adds	r3, #1
   1727c:	f8c0 311c 	str.w	r3, [r0, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   17280:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
   17284:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   17286:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   17288:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   1728c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   17290:	d1e0      	bne.n	17254 <I2C_Base::i2cStateMachine()+0xb0>
   17292:	e7e9      	b.n	17268 <I2C_Base::i2cStateMachine()+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17294:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   17298:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   1729a:	f012 0f01 	tst.w	r2, #1
   1729e:	bf14      	ite	ne
   172a0:	2201      	movne	r2, #1
   172a2:	2202      	moveq	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   172a4:	f880 3111 	strb.w	r3, [r0, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   172a8:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:429
            break;
   172ac:	e7ac      	b.n	17208 <I2C_Base::i2cStateMachine()+0x64>
   172ae:	Address 0x00000000000172ae is out of bounds.


000172b0 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:36
{
   172b0:	b513      	push	{r0, r1, r4, lr}
   172b2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:38
    if (busy != i2cStateMachine())
   172b4:	f7ff ff76 	bl	171a4 <I2C_Base::i2cStateMachine()>
   172b8:	b188      	cbz	r0, 172de <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:40
        long higherPriorityTaskWaiting = 0;
   172ba:	2300      	movs	r3, #0
   172bc:	a902      	add	r1, sp, #8
   172be:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   172c2:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   172c6:	f001 fa5f 	bl	18788 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   172ca:	9b01      	ldr	r3, [sp, #4]
   172cc:	b13b      	cbz	r3, 172de <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42 (discriminator 1)
   172ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   172d2:	4b04      	ldr	r3, [pc, #16]	; (172e4 <I2C_Base::handleInterrupt()+0x34>)
   172d4:	601a      	str	r2, [r3, #0]
   172d6:	f3bf 8f4f 	dsb	sy
   172da:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
}
   172de:	b002      	add	sp, #8
   172e0:	bd10      	pop	{r4, pc}
   172e2:	bf00      	nop
   172e4:	e000ed04 	.word	0xe000ed04

000172e8 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   172e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
   172ea:	4604      	mov	r4, r0
   172ec:	4615      	mov	r5, r2
   172ee:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   172f2:	f001 ffc1 	bl	19278 <xTaskGetSchedulerState>
   172f6:	2802      	cmp	r0, #2
   172f8:	d009      	beq.n	1730e <UartDev::putChar(char, unsigned int)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   172fa:	6963      	ldr	r3, [r4, #20]
   172fc:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17300:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   17302:	7d1a      	ldrb	r2, [r3, #20]
   17304:	0652      	lsls	r2, r2, #25
   17306:	d5fc      	bpl.n	17302 <UartDev::putChar(char, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   17308:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   1730a:	b003      	add	sp, #12
   1730c:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   1730e:	2300      	movs	r3, #0
   17310:	462a      	mov	r2, r5
   17312:	f10d 0107 	add.w	r1, sp, #7
   17316:	69e0      	ldr	r0, [r4, #28]
   17318:	f001 f962 	bl	185e0 <xQueueGenericSend>
   1731c:	2800      	cmp	r0, #0
   1731e:	d0f4      	beq.n	1730a <UartDev::putChar(char, unsigned int)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   17320:	6963      	ldr	r3, [r4, #20]
   17322:	7d1b      	ldrb	r3, [r3, #20]
   17324:	065b      	lsls	r3, r3, #25
   17326:	d5ef      	bpl.n	17308 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   17328:	2300      	movs	r3, #0
   1732a:	f10d 0107 	add.w	r1, sp, #7
   1732e:	461a      	mov	r2, r3
   17330:	69e0      	ldr	r0, [r4, #28]
   17332:	f001 fa5d 	bl	187f0 <xQueueGenericReceive>
   17336:	2800      	cmp	r0, #0
   17338:	d0e6      	beq.n	17308 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   1733a:	6963      	ldr	r3, [r4, #20]
   1733c:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17340:	701a      	strb	r2, [r3, #0]
   17342:	e7e1      	b.n	17308 <UartDev::putChar(char, unsigned int)+0x20>

00017344 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   17344:	b510      	push	{r4, lr}
   17346:	4604      	mov	r4, r0
   17348:	4b02      	ldr	r3, [pc, #8]	; (17354 <UartDev::~UartDev()+0x10>)
   1734a:	6003      	str	r3, [r0, #0]
   1734c:	f000 f9d0 	bl	176f0 <CharDev::~CharDev()>
   17350:	4620      	mov	r0, r4
   17352:	bd10      	pop	{r4, pc}
   17354:	0002539c 	.word	0x0002539c

00017358 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   17358:	b510      	push	{r4, lr}
   1735a:	4604      	mov	r4, r0
   1735c:	f7ff fff2 	bl	17344 <UartDev::~UartDev()>
   17360:	4620      	mov	r0, r4
   17362:	212c      	movs	r1, #44	; 0x2c
   17364:	f005 f839 	bl	1c3da <operator delete(void*, unsigned int)>
   17368:	4620      	mov	r0, r4
   1736a:	bd10      	pop	{r4, pc}

0001736c <UartDev::flush()>:
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   1736c:	b510      	push	{r4, lr}
   1736e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17370:	f001 ff82 	bl	19278 <xTaskGetSchedulerState>
   17374:	2802      	cmp	r0, #2
   17376:	d107      	bne.n	17388 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   17378:	69e0      	ldr	r0, [r4, #28]
   1737a:	f001 fb07 	bl	1898c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   1737e:	b118      	cbz	r0, 17388 <UartDev::flush()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   17380:	2001      	movs	r0, #1
   17382:	f001 fdcb 	bl	18f1c <vTaskDelay>
   17386:	e7f7      	b.n	17378 <UartDev::flush()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   17388:	2001      	movs	r0, #1
   1738a:	bd10      	pop	{r4, pc}

0001738c <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   1738c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1738e:	4606      	mov	r6, r0
   17390:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   17392:	460f      	mov	r7, r1
   17394:	b909      	cbnz	r1, 1739a <UartDev::getChar(char*, unsigned int)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   17396:	2000      	movs	r0, #0
   17398:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   1739a:	6983      	ldr	r3, [r0, #24]
   1739c:	2b00      	cmp	r3, #0
   1739e:	d0fa      	beq.n	17396 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   173a0:	f001 ff6a 	bl	19278 <xTaskGetSchedulerState>
   173a4:	2802      	cmp	r0, #2
   173a6:	d109      	bne.n	173bc <UartDev::getChar(char*, unsigned int)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   173a8:	2300      	movs	r3, #0
   173aa:	4622      	mov	r2, r4
   173ac:	4639      	mov	r1, r7
   173ae:	69b0      	ldr	r0, [r6, #24]
   173b0:	f001 fa1e 	bl	187f0 <xQueueGenericReceive>
   173b4:	3000      	adds	r0, #0
   173b6:	bf18      	it	ne
   173b8:	2001      	movne	r0, #1
   173ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   173bc:	f7f9 f86e 	bl	1049c <sys_get_uptime_us>
   173c0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   173c4:	2300      	movs	r3, #0
   173c6:	f006 f9f7 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   173ca:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   173cc:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   173ce:	2300      	movs	r3, #0
   173d0:	4639      	mov	r1, r7
   173d2:	461a      	mov	r2, r3
   173d4:	69b0      	ldr	r0, [r6, #24]
   173d6:	f001 fa0b 	bl	187f0 <xQueueGenericReceive>
   173da:	b958      	cbnz	r0, 173f4 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   173dc:	f7f9 f85e 	bl	1049c <sys_get_uptime_us>
   173e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   173e4:	2300      	movs	r3, #0
   173e6:	f006 f9e7 	bl	1d7b8 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   173ea:	428d      	cmp	r5, r1
   173ec:	bf08      	it	eq
   173ee:	4284      	cmpeq	r4, r0
   173f0:	d2ed      	bcs.n	173ce <UartDev::getChar(char*, unsigned int)+0x42>
   173f2:	e7d0      	b.n	17396 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   173f4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   173f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000173f8 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
{
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */

    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   173f8:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:97
{
   173fa:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   173fc:	6944      	ldr	r4, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
    {
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   173fe:	0109      	lsls	r1, r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17400:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   17402:	6a00      	ldr	r0, [r0, #32]
   17404:	fbb0 f0f1 	udiv	r0, r0, r1
   17408:	f005 fc3a 	bl	1cc80 <__aeabi_ui2d>
   1740c:	4b06      	ldr	r3, [pc, #24]	; (17428 <UartDev::setBaudRate(unsigned int)+0x30>)
   1740e:	2200      	movs	r2, #0
   17410:	f005 fafa 	bl	1ca08 <__adddf3>
   17414:	f005 febc 	bl	1d190 <__aeabi_d2uiz>
   17418:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:105
        mpUARTRegBase->DLM = (bd >> 8);
   1741a:	0a03      	lsrs	r3, r0, #8
   1741c:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
        mpUARTRegBase->DLL = (bd >> 0);
    }
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   1741e:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:106
        mpUARTRegBase->DLL = (bd >> 0);
   17420:	b2c0      	uxtb	r0, r0
   17422:	7020      	strb	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   17424:	7323      	strb	r3, [r4, #12]
   17426:	bd10      	pop	{r4, pc}
   17428:	3fe00000 	.word	0x3fe00000

0001742c <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   1742c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   1742e:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   17430:	6942      	ldr	r2, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   17432:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   17434:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   17438:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   1743a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   1743c:	f003 030e 	and.w	r3, r3, #14
   17440:	2b04      	cmp	r3, #4
   17442:	d021      	beq.n	17488 <UartDev::handleInterrupt()+0x5c>
   17444:	2b0c      	cmp	r3, #12
   17446:	d01f      	beq.n	17488 <UartDev::handleInterrupt()+0x5c>
   17448:	2b02      	cmp	r3, #2
   1744a:	d13f      	bne.n	174cc <UartDev::handleInterrupt()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   1744c:	69c0      	ldr	r0, [r0, #28]
   1744e:	f001 faa6 	bl	1899e <uxQueueMessagesWaitingFromISR>
   17452:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   17454:	4298      	cmp	r0, r3
   17456:	d903      	bls.n	17460 <UartDev::handleInterrupt()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   17458:	69e0      	ldr	r0, [r4, #28]
   1745a:	f001 faa0 	bl	1899e <uxQueueMessagesWaitingFromISR>
   1745e:	84e0      	strh	r0, [r4, #38]	; 0x26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   17460:	2610      	movs	r6, #16
   17462:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   17464:	aa01      	add	r2, sp, #4
   17466:	f10d 0103 	add.w	r1, sp, #3
   1746a:	69e0      	ldr	r0, [r4, #28]
   1746c:	f001 fa5a 	bl	18924 <xQueueReceiveFromISR>
   17470:	2800      	cmp	r0, #0
   17472:	d12e      	bne.n	174d2 <UartDev::handleInterrupt()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   17474:	b35d      	cbz	r5, 174ce <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   17476:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1747a:	4b1b      	ldr	r3, [pc, #108]	; (174e8 <UartDev::handleInterrupt()+0xbc>)
   1747c:	601a      	str	r2, [r3, #0]
   1747e:	f3bf 8f4f 	dsb	sy
   17482:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   17486:	e022      	b.n	174ce <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   17488:	f001 fc4a 	bl	18d20 <xTaskGetTickCountFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   1748c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   1748e:	62a0      	str	r0, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   17490:	6963      	ldr	r3, [r4, #20]
   17492:	7d1a      	ldrb	r2, [r3, #20]
   17494:	07d2      	lsls	r2, r2, #31
   17496:	d50e      	bpl.n	174b6 <UartDev::handleInterrupt()+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   17498:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   1749a:	aa01      	add	r2, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   1749c:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   174a0:	f10d 0103 	add.w	r1, sp, #3
   174a4:	2300      	movs	r3, #0
   174a6:	69a0      	ldr	r0, [r4, #24]
   174a8:	f001 f92e 	bl	18708 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   174ac:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   174ae:	2b00      	cmp	r3, #0
   174b0:	bf18      	it	ne
   174b2:	2501      	movne	r5, #1
   174b4:	e7ec      	b.n	17490 <UartDev::handleInterrupt()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   174b6:	69a0      	ldr	r0, [r4, #24]
   174b8:	f001 fa71 	bl	1899e <uxQueueMessagesWaitingFromISR>
   174bc:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   174be:	4298      	cmp	r0, r3
   174c0:	d9d8      	bls.n	17474 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   174c2:	69a0      	ldr	r0, [r4, #24]
   174c4:	f001 fa6b 	bl	1899e <uxQueueMessagesWaitingFromISR>
   174c8:	84a0      	strh	r0, [r4, #36]	; 0x24
   174ca:	e7d3      	b.n	17474 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   174cc:	7d13      	ldrb	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   174ce:	b002      	add	sp, #8
   174d0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   174d2:	6963      	ldr	r3, [r4, #20]
   174d4:	f89d 2003 	ldrb.w	r2, [sp, #3]
   174d8:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   174da:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   174dc:	2b00      	cmp	r3, #0
   174de:	bf18      	it	ne
   174e0:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   174e2:	3e01      	subs	r6, #1
   174e4:	d0c6      	beq.n	17474 <UartDev::handleInterrupt()+0x48>
   174e6:	e7bd      	b.n	17464 <UartDev::handleInterrupt()+0x38>
   174e8:	e000ed04 	.word	0xe000ed04

000174ec <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   174ec:	b538      	push	{r3, r4, r5, lr}
   174ee:	4604      	mov	r4, r0
   174f0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   174f2:	f000 f8ed 	bl	176d0 <CharDev::CharDev()>
   174f6:	4b06      	ldr	r3, [pc, #24]	; (17510 <UartDev::UartDev(unsigned int*)+0x24>)
   174f8:	6165      	str	r5, [r4, #20]
   174fa:	6023      	str	r3, [r4, #0]
   174fc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   174fe:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   17500:	61a3      	str	r3, [r4, #24]
   17502:	61e3      	str	r3, [r4, #28]
   17504:	6223      	str	r3, [r4, #32]
   17506:	84a3      	strh	r3, [r4, #36]	; 0x24
   17508:	84e3      	strh	r3, [r4, #38]	; 0x26
   1750a:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   1750c:	bd38      	pop	{r3, r4, r5, pc}
   1750e:	bf00      	nop
   17510:	0002539c 	.word	0x0002539c

00017514 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208

bool UartDev::init(unsigned int pclk, unsigned int baudRate,
                   int rxQSize, int txQSize)
{
   17514:	b570      	push	{r4, r5, r6, lr}
   17516:	4616      	mov	r6, r2
   17518:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    mPeripheralClock = pclk;

    // Configure UART Hardware: Baud rate, FIFOs etc.
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   1751a:	4a25      	ldr	r2, [pc, #148]	; (175b0 <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>)
   1751c:	6943      	ldr	r3, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208
{
   1751e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17520:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:209
    mPeripheralClock = pclk;
   17522:	6201      	str	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17524:	d12f      	bne.n	17586 <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:214
    {
        lpc_pconp(pconp_uart0, true);
   17526:	2101      	movs	r1, #1
   17528:	2003      	movs	r0, #3
   1752a:	f7f9 f9f7 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1752e:	2220      	movs	r2, #32
   17530:	4b20      	ldr	r3, [pc, #128]	; (175b4 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246

    // Enable & Reset FIFOs and set 4 char timeout for Rx
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);

    setBaudRate(baudRate);
   17532:	4631      	mov	r1, r6
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17534:	601a      	str	r2, [r3, #0]
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   17536:	2241      	movs	r2, #65	; 0x41
   17538:	6963      	ldr	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   1753a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   1753c:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:244
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);
   1753e:	7a1a      	ldrb	r2, [r3, #8]
   17540:	f042 0206 	orr.w	r2, r2, #6
   17544:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   17546:	f7ff ff57 	bl	173f8 <UartDev::setBaudRate(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253
    // Set minimum queue size?
    if (rxQSize < 9) rxQSize = 8;
    if (txQSize < 9) txQSize = 8;

    // Create the receive and transmit queues
    if (!mRxQueue) mRxQueue = xQueueCreate(rxQSize, sizeof(char));
   1754a:	69a2      	ldr	r2, [r4, #24]
   1754c:	b942      	cbnz	r2, 17560 <UartDev::init(unsigned int, unsigned int, int, int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253 (discriminator 1)
   1754e:	2d08      	cmp	r5, #8
   17550:	4628      	mov	r0, r5
   17552:	f04f 0101 	mov.w	r1, #1
   17556:	bfb8      	it	lt
   17558:	2008      	movlt	r0, #8
   1755a:	f001 f827 	bl	185ac <xQueueGenericCreate>
   1755e:	61a0      	str	r0, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254
    if (!mTxQueue) mTxQueue = xQueueCreate(txQSize, sizeof(char));
   17560:	69e2      	ldr	r2, [r4, #28]
   17562:	b93a      	cbnz	r2, 17574 <UartDev::init(unsigned int, unsigned int, int, int)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254 (discriminator 1)
   17564:	9804      	ldr	r0, [sp, #16]
   17566:	2101      	movs	r1, #1
   17568:	2808      	cmp	r0, #8
   1756a:	bfb8      	it	lt
   1756c:	2008      	movlt	r0, #8
   1756e:	f001 f81d 	bl	185ac <xQueueGenericCreate>
   17572:	61e0      	str	r0, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:261
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetQueueName(mRxQueue, "UART RX-Q");
    vTraceSetQueueName(mTxQueue, "UART TX-Q");

    // Enable Rx/Tx and line status Interrupts:
    mpUARTRegBase->IER = (1 << 0) | (1 << 1) | (1 << 2); // B0:Rx, B1: Tx
   17574:	2207      	movs	r2, #7
   17576:	6963      	ldr	r3, [r4, #20]
   17578:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263

    return (0 != mRxQueue && 0 != mTxQueue);
   1757a:	69a3      	ldr	r3, [r4, #24]
   1757c:	b10b      	cbz	r3, 17582 <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 1)
   1757e:	69e3      	ldr	r3, [r4, #28]
   17580:	b9a3      	cbnz	r3, 175ac <UartDev::init(unsigned int, unsigned int, int, int)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 4)
   17582:	2000      	movs	r0, #0
   17584:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:225
    else if (LPC_UART2_BASE == (unsigned int) mpUARTRegBase)
   17586:	4a0c      	ldr	r2, [pc, #48]	; (175b8 <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   17588:	4293      	cmp	r3, r2
   1758a:	d105      	bne.n	17598 <UartDev::init(unsigned int, unsigned int, int, int)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:227
        lpc_pconp(pconp_uart2, true);
   1758c:	2101      	movs	r1, #1
   1758e:	2018      	movs	r0, #24
   17590:	f7f9 f9c4 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17594:	2280      	movs	r2, #128	; 0x80
   17596:	e7cb      	b.n	17530 <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:231
    else if (LPC_UART3_BASE == (unsigned int) mpUARTRegBase)
   17598:	4a08      	ldr	r2, [pc, #32]	; (175bc <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   1759a:	4293      	cmp	r3, r2
   1759c:	d1f1      	bne.n	17582 <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:233
        lpc_pconp(pconp_uart3, true);
   1759e:	2101      	movs	r1, #1
   175a0:	2019      	movs	r0, #25
   175a2:	f7f9 f9bb 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   175a6:	f44f 7280 	mov.w	r2, #256	; 0x100
   175aa:	e7c1      	b.n	17530 <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263
    return (0 != mRxQueue && 0 != mTxQueue);
   175ac:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:264
}
   175ae:	bd70      	pop	{r4, r5, r6, pc}
   175b0:	4000c000 	.word	0x4000c000
   175b4:	e000e100 	.word	0xe000e100
   175b8:	40098000 	.word	0x40098000
   175bc:	4009c000 	.word	0x4009c000

000175c0 <CharDev::flush()>:
_ZN7CharDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   175c0:	2001      	movs	r0, #1
   175c2:	4770      	bx	lr

000175c4 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:34
#include "utilities.h"      // system_get_timer_ms();



bool CharDev::put(const char* pString, unsigned int timeout)
{
   175c4:	b570      	push	{r4, r5, r6, lr}
   175c6:	4605      	mov	r5, r0
   175c8:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:35
    if (!pString) {
   175ca:	b909      	cbnz	r1, 175d0 <CharDev::put(char const*, unsigned int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:36
        return false;
   175cc:	2000      	movs	r0, #0
   175ce:	bd70      	pop	{r4, r5, r6, pc}
   175d0:	1e4c      	subs	r4, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:39
    }

    while(*pString) {
   175d2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   175d6:	b139      	cbz	r1, 175e8 <CharDev::put(char const*, unsigned int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:40
        if(!putChar(*pString++, timeout)) {
   175d8:	682b      	ldr	r3, [r5, #0]
   175da:	4632      	mov	r2, r6
   175dc:	685b      	ldr	r3, [r3, #4]
   175de:	4628      	mov	r0, r5
   175e0:	4798      	blx	r3
   175e2:	2800      	cmp	r0, #0
   175e4:	d1f5      	bne.n	175d2 <CharDev::put(char const*, unsigned int)+0xe>
   175e6:	e7f1      	b.n	175cc <CharDev::put(char const*, unsigned int)+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:45
            return false;
        }
    }

    return true;
   175e8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:46
}
   175ea:	bd70      	pop	{r4, r5, r6, pc}

000175ec <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:49

void CharDev::putline(const char* pBuff, unsigned int timeout)
{
   175ec:	b538      	push	{r3, r4, r5, lr}
   175ee:	4604      	mov	r4, r0
   175f0:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:50
    this->put(pBuff, timeout);
   175f2:	f7ff ffe7 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   175f6:	462a      	mov	r2, r5
   175f8:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:52
}
   175fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   175fe:	4901      	ldr	r1, [pc, #4]	; (17604 <CharDev::putline(char const*, unsigned int)+0x18>)
   17600:	f7ff bfe0 	b.w	175c4 <CharDev::put(char const*, unsigned int)>
   17604:	00025198 	.word	0x00025198

00017608 <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55

bool CharDev::gets(char* pBuff, int maxLen, unsigned int timeout)
{
   17608:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   1760c:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55
{
   1760e:	4607      	mov	r7, r0
   17610:	460d      	mov	r5, r1
   17612:	4690      	mov	r8, r2
   17614:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   17616:	ae02      	add	r6, sp, #8
   17618:	f806 4d01 	strb.w	r4, [r6, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:60
    int charCount = 0;
    bool success = false;

    while(getChar(&c, timeout)) {
   1761c:	683b      	ldr	r3, [r7, #0]
   1761e:	464a      	mov	r2, r9
   17620:	681b      	ldr	r3, [r3, #0]
   17622:	4631      	mov	r1, r6
   17624:	4638      	mov	r0, r7
   17626:	4798      	blx	r3
   17628:	b178      	cbz	r0, 1764a <CharDev::gets(char*, int, unsigned int)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61
        if ('\r' != c && '\n' != c) {
   1762a:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1762e:	2a0d      	cmp	r2, #13
   17630:	d003      	beq.n	1763a <CharDev::gets(char*, int, unsigned int)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61 (discriminator 1)
   17632:	2a0a      	cmp	r2, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:62 (discriminator 1)
            *pBuff++ = c;
   17634:	bf1c      	itt	ne
   17636:	702a      	strbne	r2, [r5, #0]
   17638:	3501      	addne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:64
        }
        if(++charCount >= maxLen) {
   1763a:	3401      	adds	r4, #1
   1763c:	4544      	cmp	r4, r8
   1763e:	da09      	bge.n	17654 <CharDev::gets(char*, int, unsigned int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:67
            break;
        }
        if('\n' == c) {
   17640:	2a0a      	cmp	r2, #10
   17642:	d1eb      	bne.n	1761c <CharDev::gets(char*, int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:75
        }
    }

    // If we didn't get any characters, don't null terminate the string
    if(charCount > 0) {
        *pBuff = '\0';
   17644:	2300      	movs	r3, #0
   17646:	702b      	strb	r3, [r5, #0]
   17648:	e001      	b.n	1764e <CharDev::gets(char*, int, unsigned int)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:74
    if(charCount > 0) {
   1764a:	2c00      	cmp	r4, #0
   1764c:	d1fa      	bne.n	17644 <CharDev::gets(char*, int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:79
    }

    return success;
}
   1764e:	b003      	add	sp, #12
   17650:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:58
    bool success = false;
   17654:	2000      	movs	r0, #0
   17656:	e7f5      	b.n	17644 <CharDev::gets(char*, int, unsigned int)+0x3c>

00017658 <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:82

int CharDev::printf(const char *format, ...)
{
   17658:	b40e      	push	{r1, r2, r3}
   1765a:	b533      	push	{r0, r1, r4, r5, lr}
   1765c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:83
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1765e:	f001 fe0b 	bl	19278 <xTaskGetSchedulerState>
   17662:	2802      	cmp	r0, #2
   17664:	d106      	bne.n	17674 <CharDev::printf(char const*, ...)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:84
        xSemaphoreTake(mPrintfSemaphore, portMAX_DELAY);
   17666:	2300      	movs	r3, #0
   17668:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1766c:	4619      	mov	r1, r3
   1766e:	68e0      	ldr	r0, [r4, #12]
   17670:	f001 f8be 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:89
    }

        int len = 0;
        va_list args;
        va_start(args, format);
   17674:	ab06      	add	r3, sp, #24
   17676:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93

        do {
            va_list args_copy;
            va_copy(args_copy, args);
   17678:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   1767a:	9a05      	ldr	r2, [sp, #20]
   1767c:	8921      	ldrh	r1, [r4, #8]
   1767e:	6860      	ldr	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93
            va_copy(args_copy, args);
   17680:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17682:	f009 fedd 	bl	21440 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            va_end(args_copy);

            if (len >= mPrintfMemSize) {
   17686:	8923      	ldrh	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17688:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            if (len >= mPrintfMemSize) {
   1768a:	4298      	cmp	r0, r3
   1768c:	db0a      	blt.n	176a4 <CharDev::printf(char const*, ...)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:99
                const int align = 16;
                mPrintfMemSize = (align + ((len/align) * align));
   1768e:	f020 010f 	bic.w	r1, r0, #15
   17692:	3110      	adds	r1, #16
   17694:	b289      	uxth	r1, r1
   17696:	8121      	strh	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:112
                        free(mpPrintfMem);
                    }
                    mpPrintfMem = (char*) malloc(mPrintfMemSize);
                }
                else {
                    mpPrintfMem = (char*) realloc(mpPrintfMem, mPrintfMemSize);
   17698:	6860      	ldr	r0, [r4, #4]
   1769a:	f008 f9f1 	bl	1fa80 <realloc>
   1769e:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:118
                }
            }
            else {
                break;
            }
        } while (mpPrintfMem);
   176a0:	2800      	cmp	r0, #0
   176a2:	d1e9      	bne.n	17678 <CharDev::printf(char const*, ...)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:121

        va_end(args);
        this->put(mpPrintfMem);
   176a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   176a8:	6861      	ldr	r1, [r4, #4]
   176aa:	4620      	mov	r0, r4
   176ac:	f7ff ff8a 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:123

    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   176b0:	f001 fde2 	bl	19278 <xTaskGetSchedulerState>
   176b4:	2802      	cmp	r0, #2
   176b6:	d105      	bne.n	176c4 <CharDev::printf(char const*, ...)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:124
        xSemaphoreGive(mPrintfSemaphore);
   176b8:	2300      	movs	r3, #0
   176ba:	68e0      	ldr	r0, [r4, #12]
   176bc:	461a      	mov	r2, r3
   176be:	4619      	mov	r1, r3
   176c0:	f000 ff8e 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:128
    }

    return len;
}
   176c4:	4628      	mov	r0, r5
   176c6:	b002      	add	sp, #8
   176c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   176cc:	b003      	add	sp, #12
   176ce:	4770      	bx	lr

000176d0 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   176d0:	4b06      	ldr	r3, [pc, #24]	; (176ec <CharDev::CharDev()+0x1c>)
   176d2:	b510      	push	{r4, lr}
   176d4:	6003      	str	r3, [r0, #0]
   176d6:	2300      	movs	r3, #0
   176d8:	4604      	mov	r4, r0
   176da:	6043      	str	r3, [r0, #4]
   176dc:	8103      	strh	r3, [r0, #8]
   176de:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   176e0:	2001      	movs	r0, #1
   176e2:	f000 ffff 	bl	186e4 <xQueueCreateMutex>
   176e6:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   176e8:	4620      	mov	r0, r4
   176ea:	bd10      	pop	{r4, pc}
   176ec:	000253cc 	.word	0x000253cc

000176f0 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   176f0:	4b04      	ldr	r3, [pc, #16]	; (17704 <CharDev::~CharDev()+0x14>)
   176f2:	b510      	push	{r4, lr}
   176f4:	4604      	mov	r4, r0
   176f6:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   176f8:	6840      	ldr	r0, [r0, #4]
   176fa:	b108      	cbz	r0, 17700 <CharDev::~CharDev()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   176fc:	f006 feda 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   17700:	4620      	mov	r0, r4
   17702:	bd10      	pop	{r4, pc}
   17704:	000253cc 	.word	0x000253cc

00017708 <RIT_IRQHandler>:
RIT_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   17708:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   1770a:	4b04      	ldr	r3, [pc, #16]	; (1771c <RIT_IRQHandler+0x14>)
   1770c:	681b      	ldr	r3, [r3, #0]
   1770e:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   17710:	4a03      	ldr	r2, [pc, #12]	; (17720 <RIT_IRQHandler+0x18>)
   17712:	7a13      	ldrb	r3, [r2, #8]
   17714:	f043 0301 	orr.w	r3, r3, #1
   17718:	7213      	strb	r3, [r2, #8]
   1771a:	bd08      	pop	{r3, pc}
   1771c:	2007c5c0 	.word	0x2007c5c0
   17720:	400b0000 	.word	0x400b0000

00017724 <rtc_gettime>:
rtc_gettime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   17724:	b5f0      	push	{r4, r5, r6, r7, lr}
   17726:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17728:	466c      	mov	r4, sp
   1772a:	4d0f      	ldr	r5, [pc, #60]	; (17768 <rtc_gettime+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   1772c:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1772e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17732:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17736:	ae03      	add	r6, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17738:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   1773c:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   17740:	220c      	movs	r2, #12
   17742:	4631      	mov	r1, r6
   17744:	4620      	mov	r0, r4
   17746:	f006 fedd 	bl	1e504 <memcmp>
   1774a:	b938      	cbnz	r0, 1775c <rtc_gettime+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   1774c:	cc03      	ldmia	r4!, {r0, r1}
   1774e:	6038      	str	r0, [r7, #0]
   17750:	6820      	ldr	r0, [r4, #0]
   17752:	6079      	str	r1, [r7, #4]
   17754:	60b8      	str	r0, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   17756:	4638      	mov	r0, r7
   17758:	b007      	add	sp, #28
   1775a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1775c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17760:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   17764:	e7e8      	b.n	17738 <rtc_gettime+0x14>
   17766:	bf00      	nop
   17768:	40024014 	.word	0x40024014

0001776c <rtc_settime>:
rtc_settime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   1776c:	2200      	movs	r2, #0
   1776e:	4b18      	ldr	r3, [pc, #96]	; (177d0 <rtc_settime+0x64>)
   17770:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   17772:	7802      	ldrb	r2, [r0, #0]
   17774:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17778:	f883 2020 	strb.w	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   1777c:	7842      	ldrb	r2, [r0, #1]
   1777e:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17782:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   17786:	7882      	ldrb	r2, [r0, #2]
   17788:	f3c2 0204 	ubfx	r2, r2, #0, #5
   1778c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   17790:	78c2      	ldrb	r2, [r0, #3]
   17792:	f3c2 0202 	ubfx	r2, r2, #0, #3
   17796:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   1779a:	7902      	ldrb	r2, [r0, #4]
   1779c:	f3c2 0204 	ubfx	r2, r2, #0, #5
   177a0:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   177a4:	7942      	ldrb	r2, [r0, #5]
   177a6:	f3c2 0203 	ubfx	r2, r2, #0, #4
   177aa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   177ae:	79c1      	ldrb	r1, [r0, #7]
   177b0:	7982      	ldrb	r2, [r0, #6]
   177b2:	f001 010f 	and.w	r1, r1, #15
   177b6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   177ba:	7a41      	ldrb	r1, [r0, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   177bc:	879a      	strh	r2, [r3, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   177be:	7a02      	ldrb	r2, [r0, #8]
   177c0:	f001 010f 	and.w	r1, r1, #15
   177c4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   177c8:	869a      	strh	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   177ca:	2201      	movs	r2, #1
   177cc:	721a      	strb	r2, [r3, #8]
   177ce:	4770      	bx	lr
   177d0:	40024000 	.word	0x40024000

000177d4 <rtc_init>:
rtc_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   177d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   177d6:	2101      	movs	r1, #1
   177d8:	2009      	movs	r0, #9
   177da:	f7f9 f89f 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   177de:	2201      	movs	r2, #1
   177e0:	4b2f      	ldr	r3, [pc, #188]	; (178a0 <rtc_init+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   177e2:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   177e4:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   177e6:	f7ff ff9d 	bl	17724 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   177ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   177ee:	f603 0326 	addw	r3, r3, #2086	; 0x826
   177f2:	f3c3 030b 	ubfx	r3, r3, #0, #12
   177f6:	2b0f      	cmp	r3, #15
   177f8:	d81e      	bhi.n	17838 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   177fa:	f89d 3005 	ldrb.w	r3, [sp, #5]
   177fe:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   17802:	2b3b      	cmp	r3, #59	; 0x3b
   17804:	dc18      	bgt.n	17838 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17806:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1780a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1780e:	2b3b      	cmp	r3, #59	; 0x3b
   17810:	dc12      	bgt.n	17838 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   17812:	f89d 3006 	ldrb.w	r3, [sp, #6]
   17816:	f003 031f 	and.w	r3, r3, #31
   1781a:	2b17      	cmp	r3, #23
   1781c:	dc0c      	bgt.n	17838 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   1781e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   17822:	f3c3 030b 	ubfx	r3, r3, #0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17826:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   1782a:	da05      	bge.n	17838 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   1782c:	f89d 3009 	ldrb.w	r3, [sp, #9]
   17830:	f003 030f 	and.w	r3, r3, #15
   17834:	2b0c      	cmp	r3, #12
   17836:	dd2f      	ble.n	17898 <rtc_init+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   17838:	2201      	movs	r2, #1
   1783a:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   1783e:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   17840:	f362 0304 	bfi	r3, r2, #0, #5
   17844:	f88d 3008 	strb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   17848:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1784c:	f362 0303 	bfi	r3, r2, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   17850:	f240 72da 	movw	r2, #2010	; 0x7da
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   17854:	f88d 3009 	strb.w	r3, [sp, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   17858:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1785c:	f362 030b 	bfi	r3, r2, #0, #12
   17860:	f8ad 300a 	strh.w	r3, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   17864:	f89d 3007 	ldrb.w	r3, [sp, #7]
   17868:	f36f 0302 	bfc	r3, #0, #3
   1786c:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   17870:	f89d 3006 	ldrb.w	r3, [sp, #6]
   17874:	f36f 0304 	bfc	r3, #0, #5
   17878:	f88d 3006 	strb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   1787c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17880:	f36f 0305 	bfc	r3, #0, #6
   17884:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   17888:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1788c:	f36f 0305 	bfc	r3, #0, #6
   17890:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   17894:	f7ff ff6a 	bl	1776c <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   17898:	b005      	add	sp, #20
   1789a:	f85d fb04 	ldr.w	pc, [sp], #4
   1789e:	bf00      	nop
   178a0:	40024000 	.word	0x40024000

000178a4 <rtc_get_date_time_str>:
rtc_get_date_time_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:94
}

const char* rtc_get_date_time_str(void)
{
   178a4:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:96
    time_t rawtime;
    time (&rawtime);
   178a6:	a801      	add	r0, sp, #4
   178a8:	f009 fb3e 	bl	20f28 <time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:98

    return ctime (&rawtime);
   178ac:	a801      	add	r0, sp, #4
   178ae:	f006 f91f 	bl	1daf0 <ctime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:99
}
   178b2:	b003      	add	sp, #12
   178b4:	f85d fb04 	ldr.w	pc, [sp], #4

000178b8 <handle_eint_list>:
handle_eint_list():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   178b8:	b570      	push	{r4, r5, r6, lr}
   178ba:	4605      	mov	r5, r0
   178bc:	460e      	mov	r6, r1
   178be:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   178c0:	b10c      	cbz	r4, 178c6 <handle_eint_list+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   178c2:	682b      	ldr	r3, [r5, #0]
   178c4:	b903      	cbnz	r3, 178c8 <handle_eint_list+0x10>
   178c6:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   178c8:	6822      	ldr	r2, [r4, #0]
   178ca:	4213      	tst	r3, r2
   178cc:	d008      	beq.n	178e0 <handle_eint_list+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   178ce:	6863      	ldr	r3, [r4, #4]
   178d0:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   178d2:	6822      	ldr	r2, [r4, #0]
   178d4:	682b      	ldr	r3, [r5, #0]
   178d6:	ea23 0302 	bic.w	r3, r3, r2
   178da:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   178dc:	6823      	ldr	r3, [r4, #0]
   178de:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   178e0:	68a4      	ldr	r4, [r4, #8]
   178e2:	e7ed      	b.n	178c0 <handle_eint_list+0x8>

000178e4 <eint3_enable.isra.0>:
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   178e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   178e6:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   178e8:	4084      	lsls	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   178ea:	460f      	mov	r7, r1
   178ec:	4616      	mov	r6, r2
   178ee:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   178f0:	d010      	beq.n	17914 <eint3_enable.isra.0+0x30>
   178f2:	b179      	cbz	r1, 17914 <eint3_enable.isra.0+0x30>
   178f4:	200c      	movs	r0, #12
   178f6:	f006 fdd5 	bl	1e4a4 <malloc>
   178fa:	b158      	cbz	r0, 17914 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   178fc:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   17900:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   17902:	e880 0090 	stmia.w	r0, {r4, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   17906:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   17908:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   1790a:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   1790c:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1790e:	4b02      	ldr	r3, [pc, #8]	; (17918 <eint3_enable.isra.0+0x34>)
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   17910:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17912:	601a      	str	r2, [r3, #0]
   17914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17916:	bf00      	nop
   17918:	e000e100 	.word	0xe000e100

0001791c <EINT3_IRQHandler>:
EINT3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   1791c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   1791e:	4c18      	ldr	r4, [pc, #96]	; (17980 <EINT3_IRQHandler+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17920:	4918      	ldr	r1, [pc, #96]	; (17984 <EINT3_IRQHandler+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   17922:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17924:	4668      	mov	r0, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   17926:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   17928:	68a3      	ldr	r3, [r4, #8]
   1792a:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   1792c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1792e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   17930:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   17932:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17934:	4b14      	ldr	r3, [pc, #80]	; (17988 <EINT3_IRQHandler+0x6c>)
   17936:	681a      	ldr	r2, [r3, #0]
   17938:	f7ff ffbe 	bl	178b8 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   1793c:	4b13      	ldr	r3, [pc, #76]	; (1798c <EINT3_IRQHandler+0x70>)
   1793e:	4911      	ldr	r1, [pc, #68]	; (17984 <EINT3_IRQHandler+0x68>)
   17940:	681a      	ldr	r2, [r3, #0]
   17942:	a801      	add	r0, sp, #4
   17944:	f7ff ffb8 	bl	178b8 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   17948:	4b11      	ldr	r3, [pc, #68]	; (17990 <EINT3_IRQHandler+0x74>)
   1794a:	4912      	ldr	r1, [pc, #72]	; (17994 <EINT3_IRQHandler+0x78>)
   1794c:	681a      	ldr	r2, [r3, #0]
   1794e:	a802      	add	r0, sp, #8
   17950:	f7ff ffb2 	bl	178b8 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   17954:	4b10      	ldr	r3, [pc, #64]	; (17998 <EINT3_IRQHandler+0x7c>)
   17956:	490f      	ldr	r1, [pc, #60]	; (17994 <EINT3_IRQHandler+0x78>)
   17958:	681a      	ldr	r2, [r3, #0]
   1795a:	a803      	add	r0, sp, #12
   1795c:	f7ff ffac 	bl	178b8 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   17960:	9b00      	ldr	r3, [sp, #0]
   17962:	b90b      	cbnz	r3, 17968 <EINT3_IRQHandler+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   17964:	9b01      	ldr	r3, [sp, #4]
   17966:	b113      	cbz	r3, 1796e <EINT3_IRQHandler+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   17968:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1796c:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   1796e:	9b02      	ldr	r3, [sp, #8]
   17970:	b90b      	cbnz	r3, 17976 <EINT3_IRQHandler+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   17972:	9b03      	ldr	r3, [sp, #12]
   17974:	b113      	cbz	r3, 1797c <EINT3_IRQHandler+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   17976:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1797a:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   1797c:	b004      	add	sp, #16
   1797e:	bd10      	pop	{r4, pc}
   17980:	40028080 	.word	0x40028080
   17984:	4002808c 	.word	0x4002808c
   17988:	2007c5c8 	.word	0x2007c5c8
   1798c:	2007c5c4 	.word	0x2007c5c4
   17990:	2007c5d0 	.word	0x2007c5d0
   17994:	400280ac 	.word	0x400280ac
   17998:	2007c5cc 	.word	0x2007c5cc

0001799c <eint3_enable_port0>:
eint3_enable_port0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   1799c:	b410      	push	{r4}
   1799e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   179a0:	2900      	cmp	r1, #0
   179a2:	4a06      	ldr	r2, [pc, #24]	; (179bc <eint3_enable_port0+0x20>)
   179a4:	4906      	ldr	r1, [pc, #24]	; (179c0 <eint3_enable_port0+0x24>)
   179a6:	4b07      	ldr	r3, [pc, #28]	; (179c4 <eint3_enable_port0+0x28>)
   179a8:	bf18      	it	ne
   179aa:	4613      	movne	r3, r2
   179ac:	4a06      	ldr	r2, [pc, #24]	; (179c8 <eint3_enable_port0+0x2c>)
   179ae:	bf18      	it	ne
   179b0:	460a      	movne	r2, r1
   179b2:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   179b4:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   179b6:	f7ff bf95 	b.w	178e4 <eint3_enable.isra.0>
   179ba:	bf00      	nop
   179bc:	40028094 	.word	0x40028094
   179c0:	2007c5c4 	.word	0x2007c5c4
   179c4:	40028090 	.word	0x40028090
   179c8:	2007c5c8 	.word	0x2007c5c8

000179cc <adc0_start_conversion>:
adc0_start_conversion():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   179cc:	4a07      	ldr	r2, [pc, #28]	; (179ec <adc0_start_conversion+0x20>)
   179ce:	6813      	ldr	r3, [r2, #0]
   179d0:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   179d4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   179d8:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   179da:	2301      	movs	r3, #1
   179dc:	6811      	ldr	r1, [r2, #0]
   179de:	fa03 f000 	lsl.w	r0, r3, r0
   179e2:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   179e6:	4308      	orrs	r0, r1
   179e8:	6010      	str	r0, [r2, #0]
   179ea:	4770      	bx	lr
   179ec:	40034000 	.word	0x40034000

000179f0 <ADC_IRQHandler>:
ADC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   179f0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   179f2:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   179f4:	4a0d      	ldr	r2, [pc, #52]	; (17a2c <ADC_IRQHandler+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   179f6:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   179f8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   179fa:	480d      	ldr	r0, [pc, #52]	; (17a30 <ADC_IRQHandler+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   179fc:	f3c2 120b 	ubfx	r2, r2, #4, #12
   17a00:	f8ad 2002 	strh.w	r2, [sp, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   17a04:	f10d 0102 	add.w	r1, sp, #2
   17a08:	aa01      	add	r2, sp, #4
   17a0a:	6800      	ldr	r0, [r0, #0]
   17a0c:	f000 fe7c 	bl	18708 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   17a10:	9b01      	ldr	r3, [sp, #4]
   17a12:	b13b      	cbz	r3, 17a24 <ADC_IRQHandler+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   17a14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17a18:	4b06      	ldr	r3, [pc, #24]	; (17a34 <ADC_IRQHandler+0x44>)
   17a1a:	601a      	str	r2, [r3, #0]
   17a1c:	f3bf 8f4f 	dsb	sy
   17a20:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   17a24:	b003      	add	sp, #12
   17a26:	f85d fb04 	ldr.w	pc, [sp], #4
   17a2a:	bf00      	nop
   17a2c:	40034000 	.word	0x40034000
   17a30:	2007c5d8 	.word	0x2007c5d8
   17a34:	e000ed04 	.word	0xe000ed04

00017a38 <adc0_init>:
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   17a38:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   17a3a:	f7f8 febd 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   17a3e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   17a40:	08c4      	lsrs	r4, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   17a42:	200c      	movs	r0, #12
   17a44:	f7f8 ff6a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   17a48:	2103      	movs	r1, #3
   17a4a:	200c      	movs	r0, #12
   17a4c:	f7f8 ff80 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   17a50:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   17a54:	4a10      	ldr	r2, [pc, #64]	; (17a98 <adc0_init+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   17a56:	4911      	ldr	r1, [pc, #68]	; (17a9c <adc0_init+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   17a58:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   17a5a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   17a5c:	fbb4 f0f3 	udiv	r0, r4, r3
   17a60:	4288      	cmp	r0, r1
   17a62:	d814      	bhi.n	17a8e <adc0_init+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   17a64:	6811      	ldr	r1, [r2, #0]
   17a66:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   17a6a:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   17a6c:	2001      	movs	r0, #1
   17a6e:	f000 fe39 	bl	186e4 <xQueueCreateMutex>
   17a72:	4b0b      	ldr	r3, [pc, #44]	; (17aa0 <adc0_init+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   17a74:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   17a76:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   17a78:	2102      	movs	r1, #2
   17a7a:	2001      	movs	r0, #1
   17a7c:	f000 fd96 	bl	185ac <xQueueGenericCreate>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17a80:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   17a84:	4b07      	ldr	r3, [pc, #28]	; (17aa4 <adc0_init+0x6c>)
   17a86:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17a88:	4b07      	ldr	r3, [pc, #28]	; (17aa8 <adc0_init+0x70>)
   17a8a:	601a      	str	r2, [r3, #0]
   17a8c:	bd10      	pop	{r4, pc}
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   17a8e:	3302      	adds	r3, #2
   17a90:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   17a94:	d1e2      	bne.n	17a5c <adc0_init+0x24>
   17a96:	e7e9      	b.n	17a6c <adc0_init+0x34>
   17a98:	40034000 	.word	0x40034000
   17a9c:	00c65d3f 	.word	0x00c65d3f
   17aa0:	2007c5d4 	.word	0x2007c5d4
   17aa4:	2007c5d8 	.word	0x2007c5d8
   17aa8:	e000e100 	.word	0xe000e100

00017aac <adc0_get_reading>:
adc0_get_reading():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   17aac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   17aae:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   17ab0:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   17ab2:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   17ab4:	f8ad 4006 	strh.w	r4, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   17ab8:	d81d      	bhi.n	17af6 <adc0_get_reading+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   17aba:	f001 fbdd 	bl	19278 <xTaskGetSchedulerState>
   17abe:	2802      	cmp	r0, #2
   17ac0:	4e15      	ldr	r6, [pc, #84]	; (17b18 <adc0_get_reading+0x6c>)
   17ac2:	d11c      	bne.n	17afe <adc0_get_reading+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   17ac4:	4f15      	ldr	r7, [pc, #84]	; (17b1c <adc0_get_reading+0x70>)
   17ac6:	4623      	mov	r3, r4
   17ac8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17acc:	4621      	mov	r1, r4
   17ace:	6838      	ldr	r0, [r7, #0]
   17ad0:	f000 fe8e 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   17ad4:	4628      	mov	r0, r5
   17ad6:	f7ff ff79 	bl	179cc <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   17ada:	4623      	mov	r3, r4
   17adc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17ae0:	f10d 0106 	add.w	r1, sp, #6
   17ae4:	6830      	ldr	r0, [r6, #0]
   17ae6:	f000 fe83 	bl	187f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   17aea:	4623      	mov	r3, r4
   17aec:	4622      	mov	r2, r4
   17aee:	4621      	mov	r1, r4
   17af0:	6838      	ldr	r0, [r7, #0]
   17af2:	f000 fd75 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   17af6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   17afa:	b003      	add	sp, #12
   17afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   17afe:	4628      	mov	r0, r5
   17b00:	f7ff ff64 	bl	179cc <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   17b04:	2300      	movs	r3, #0
   17b06:	f10d 0106 	add.w	r1, sp, #6
   17b0a:	461a      	mov	r2, r3
   17b0c:	6830      	ldr	r0, [r6, #0]
   17b0e:	f000 fe6f 	bl	187f0 <xQueueGenericReceive>
   17b12:	2800      	cmp	r0, #0
   17b14:	d0f6      	beq.n	17b04 <adc0_get_reading+0x58>
   17b16:	e7ee      	b.n	17af6 <adc0_get_reading+0x4a>
   17b18:	2007c5d8 	.word	0x2007c5d8
   17b1c:	2007c5d4 	.word	0x2007c5d4

00017b20 <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   17b20:	b510      	push	{r4, lr}
   17b22:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   17b24:	4b02      	ldr	r3, [pc, #8]	; (17b30 <Uart3::~Uart3()+0x10>)
   17b26:	6003      	str	r3, [r0, #0]
   17b28:	f7ff fde2 	bl	176f0 <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   17b2c:	4620      	mov	r0, r4
   17b2e:	bd10      	pop	{r4, pc}
   17b30:	0002539c 	.word	0x0002539c

00017b34 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   17b34:	b510      	push	{r4, lr}
   17b36:	4604      	mov	r4, r0
   17b38:	f7ff fff2 	bl	17b20 <Uart3::~Uart3()>
   17b3c:	4620      	mov	r0, r4
   17b3e:	212c      	movs	r1, #44	; 0x2c
   17b40:	f004 fc4b 	bl	1c3da <operator delete(void*, unsigned int)>
   17b44:	4620      	mov	r0, r4
   17b46:	bd10      	pop	{r4, pc}

00017b48 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   17b48:	b510      	push	{r4, lr}
   17b4a:	4604      	mov	r4, r0
   17b4c:	4903      	ldr	r1, [pc, #12]	; (17b5c <Uart3::Uart3()+0x14>)
   17b4e:	f7ff fccd 	bl	174ec <UartDev::UartDev(unsigned int*)>
   17b52:	4b03      	ldr	r3, [pc, #12]	; (17b60 <Uart3::Uart3()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   17b54:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   17b56:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   17b58:	bd10      	pop	{r4, pc}
   17b5a:	bf00      	nop
   17b5c:	4009c000 	.word	0x4009c000
   17b60:	00025434 	.word	0x00025434

00017b64 <UART3_IRQHandler>:
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   17b64:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17b66:	4c07      	ldr	r4, [pc, #28]	; (17b84 <UART3_IRQHandler+0x20>)
   17b68:	6823      	ldr	r3, [r4, #0]
   17b6a:	b933      	cbnz	r3, 17b7a <UART3_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17b6c:	202c      	movs	r0, #44	; 0x2c
   17b6e:	f7fe feb9 	bl	168e4 <operator new(unsigned int)>
   17b72:	4605      	mov	r5, r0
   17b74:	f7ff ffe8 	bl	17b48 <Uart3::Uart3()>
   17b78:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   17b7a:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   17b7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   17b80:	f7ff bc54 	b.w	1742c <UartDev::handleInterrupt()>
   17b84:	2007c5dc 	.word	0x2007c5dc

00017b88 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   17b88:	b510      	push	{r4, lr}
   17b8a:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   17b8c:	4b02      	ldr	r3, [pc, #8]	; (17b98 <Uart2::~Uart2()+0x10>)
   17b8e:	6003      	str	r3, [r0, #0]
   17b90:	f7ff fdae 	bl	176f0 <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   17b94:	4620      	mov	r0, r4
   17b96:	bd10      	pop	{r4, pc}
   17b98:	0002539c 	.word	0x0002539c

00017b9c <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   17b9c:	b510      	push	{r4, lr}
   17b9e:	4604      	mov	r4, r0
   17ba0:	f7ff fff2 	bl	17b88 <Uart2::~Uart2()>
   17ba4:	4620      	mov	r0, r4
   17ba6:	212c      	movs	r1, #44	; 0x2c
   17ba8:	f004 fc17 	bl	1c3da <operator delete(void*, unsigned int)>
   17bac:	4620      	mov	r0, r4
   17bae:	bd10      	pop	{r4, pc}

00017bb0 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   17bb0:	b510      	push	{r4, lr}
   17bb2:	4604      	mov	r4, r0
   17bb4:	4903      	ldr	r1, [pc, #12]	; (17bc4 <Uart2::Uart2()+0x14>)
   17bb6:	f7ff fc99 	bl	174ec <UartDev::UartDev(unsigned int*)>
   17bba:	4b03      	ldr	r3, [pc, #12]	; (17bc8 <Uart2::Uart2()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   17bbc:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   17bbe:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   17bc0:	bd10      	pop	{r4, pc}
   17bc2:	bf00      	nop
   17bc4:	40098000 	.word	0x40098000
   17bc8:	0002549c 	.word	0x0002549c

00017bcc <UART2_IRQHandler>:
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   17bcc:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17bce:	4c07      	ldr	r4, [pc, #28]	; (17bec <UART2_IRQHandler+0x20>)
   17bd0:	6823      	ldr	r3, [r4, #0]
   17bd2:	b933      	cbnz	r3, 17be2 <UART2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17bd4:	202c      	movs	r0, #44	; 0x2c
   17bd6:	f7fe fe85 	bl	168e4 <operator new(unsigned int)>
   17bda:	4605      	mov	r5, r0
   17bdc:	f7ff ffe8 	bl	17bb0 <Uart2::Uart2()>
   17be0:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   17be2:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   17be4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   17be8:	f7ff bc20 	b.w	1742c <UartDev::handleInterrupt()>
   17bec:	2007c5e0 	.word	0x2007c5e0

00017bf0 <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
    ok = true;
    return ok;
}

bool NordicStream::flush(void)
{
   17bf0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    bool ok = false;
    mesh_packet_t ackPkt;

    /* If destination address is not set, use the last source as destination */
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   17bf2:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
{
   17bf6:	b08a      	sub	sp, #40	; 0x28
   17bf8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   17bfa:	b905      	cbnz	r5, 17bfe <NordicStream::flush()+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86 (discriminator 1)
   17bfc:	7c45      	ldrb	r5, [r0, #17]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   17bfe:	4628      	mov	r0, r5
   17c00:	f7f9 ff5e 	bl	11ac0 <mesh_get_max_timeout_before_packet_fails>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)

    void *data = &(mTxBuffer.pkt.data[0]);
    uint8_t len = mTxBuffer.dataPtr;
    mTxBuffer.dataPtr = 0;
   17c04:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:90 (discriminator 4)
    uint8_t len = mTxBuffer.dataPtr;
   17c06:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)
    mTxBuffer.dataPtr = 0;
   17c0a:	f884 2052 	strb.w	r2, [r4, #82]	; 0x52
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
    return mesh_is_ack_required(pkt);
}

/// Just a wrapper around mesh_send() to put all wireless related API at this file.
static inline bool wireless_send(uint8_t dst_addr, mesh_protocol_t protocol, const void *data, uint8_t len, uint8_t max_hops) {
    return mesh_send(dst_addr, protocol, data, len, max_hops);
   17c0e:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   17c12:	4606      	mov	r6, r0
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
   17c14:	9200      	str	r2, [sp, #0]
   17c16:	2101      	movs	r1, #1
   17c18:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   17c1c:	4628      	mov	r0, r5
   17c1e:	f7f9 fd7d 	bl	1171c <mesh_send>
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:94 (discriminator 4)

    /* Send the packet and wait for the ACK */
    if ((ok = wireless_send(dst, mesh_pkt_ack, data, len, mHops)))
   17c22:	4604      	mov	r4, r0
   17c24:	b170      	cbz	r0, 17c44 <NordicStream::flush()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:96
    {
        if ((ok = wireless_get_ack_pkt(&ackPkt, ackTimeoutMs)))
   17c26:	4631      	mov	r1, r6
   17c28:	a802      	add	r0, sp, #8
   17c2a:	f7f9 fa1f 	bl	1106c <wireless_get_ack_pkt>
   17c2e:	b148      	cbz	r0, 17c44 <NordicStream::flush()+0x54>
mesh_is_ack_ok():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:263
    return (mesh_pkt_ack_rsp == pRxPkt->info.pkt_type && pRxPkt->nwk.src == sentDstAddr);
   17c30:	f89d 300c 	ldrb.w	r3, [sp, #12]
   17c34:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   17c38:	2bc0      	cmp	r3, #192	; 0xc0
   17c3a:	d103      	bne.n	17c44 <NordicStream::flush()+0x54>
   17c3c:	f89d 3008 	ldrb.w	r3, [sp, #8]
   17c40:	42ab      	cmp	r3, r5
   17c42:	d000      	beq.n	17c46 <NordicStream::flush()+0x56>
   17c44:	2400      	movs	r4, #0
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:103
            ok = mesh_is_ack_ok(&ackPkt, dst);
        }
    }

    return ok;
}
   17c46:	4620      	mov	r0, r4
   17c48:	b00a      	add	sp, #40	; 0x28
   17c4a:	bd70      	pop	{r4, r5, r6, pc}

00017c4c <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/nrf_stream.hpp:44
 * You can use printf(), scanf() etc, and all the data will be sent to the
 * address set by setDestAddr().  If the destination address is not set, then
 * it will be sent to the last source that sent us data on nordic.
 *
 */
class NordicStream : public CharDev, public SingletonTemplate<NordicStream>
   17c4c:	b510      	push	{r4, lr}
   17c4e:	4604      	mov	r4, r0
   17c50:	4b02      	ldr	r3, [pc, #8]	; (17c5c <NordicStream::~NordicStream()+0x10>)
   17c52:	6003      	str	r3, [r0, #0]
   17c54:	f7ff fd4c 	bl	176f0 <CharDev::~CharDev()>
   17c58:	4620      	mov	r0, r4
   17c5a:	bd10      	pop	{r4, pc}
   17c5c:	00025514 	.word	0x00025514

00017c60 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   17c60:	b510      	push	{r4, lr}
   17c62:	4604      	mov	r4, r0
   17c64:	f7ff fff2 	bl	17c4c <NordicStream::~NordicStream()>
   17c68:	4620      	mov	r0, r4
   17c6a:	2158      	movs	r1, #88	; 0x58
   17c6c:	f004 fbb5 	bl	1c3da <operator delete(void*, unsigned int)>
   17c70:	4620      	mov	r0, r4
   17c72:	bd10      	pop	{r4, pc}

00017c74 <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:64
{
   17c74:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   17c76:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   17c7a:	1c62      	adds	r2, r4, #1
   17c7c:	b2d2      	uxtb	r2, r2
   17c7e:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   17c80:	2a17      	cmp	r2, #23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   17c82:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   17c86:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   17c8a:	d902      	bls.n	17c92 <NordicStream::putChar(char, unsigned int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:72
        ok = flush();
   17c8c:	6803      	ldr	r3, [r0, #0]
   17c8e:	689b      	ldr	r3, [r3, #8]
   17c90:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:78
}
   17c92:	2001      	movs	r0, #1
   17c94:	bd10      	pop	{r4, pc}

00017c96 <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   17c96:	b570      	push	{r4, r5, r6, lr}
   17c98:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   17c9a:	7e03      	ldrb	r3, [r0, #24]
   17c9c:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   17ca0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   17ca2:	4299      	cmp	r1, r3
   17ca4:	bfb4      	ite	lt
   17ca6:	2501      	movlt	r5, #1
   17ca8:	2500      	movge	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:49
    if (!dataAvailable) {
   17caa:	db0b      	blt.n	17cc4 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:50
        if (wireless_get_rx_pkt(&(mRxBuffer.pkt), timeout)) {
   17cac:	4611      	mov	r1, r2
   17cae:	3011      	adds	r0, #17
   17cb0:	f7f9 f9d4 	bl	1105c <wireless_get_rx_pkt>
   17cb4:	b130      	cbz	r0, 17cc4 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   17cb6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   17cb8:	7e25      	ldrb	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   17cba:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   17cbe:	1aed      	subs	r5, r5, r3
   17cc0:	bf18      	it	ne
   17cc2:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:56
    if (dataAvailable) {
   17cc4:	b13d      	cbz	r5, 17cd6 <NordicStream::getChar(char*, unsigned int)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:57
        *pInputChar = mRxBuffer.pkt.data[mRxBuffer.dataPtr++];
   17cc6:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   17cca:	1c5a      	adds	r2, r3, #1
   17ccc:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   17cd0:	441c      	add	r4, r3
   17cd2:	7e63      	ldrb	r3, [r4, #25]
   17cd4:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:61
}
   17cd6:	4628      	mov	r0, r5
   17cd8:	bd70      	pop	{r4, r5, r6, pc}
   17cda:	Address 0x0000000000017cda is out of bounds.


00017cdc <NordicStream::NordicStream()>:
_ZN12NordicStreamC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   17cdc:	b570      	push	{r4, r5, r6, lr}
   17cde:	4604      	mov	r4, r0
   17ce0:	f7ff fcf6 	bl	176d0 <CharDev::CharDev()>
   17ce4:	4b0c      	ldr	r3, [pc, #48]	; (17d18 <NordicStream::NordicStream()+0x3c>)
   17ce6:	2500      	movs	r5, #0
   17ce8:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   17cea:	2621      	movs	r6, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   17cec:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   17cee:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   17cf0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   17cf4:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   17cf6:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   17cfa:	f104 0011 	add.w	r0, r4, #17
   17cfe:	f006 fc35 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:34
    memset(&mTxBuffer, 0, sizeof(mTxBuffer));
   17d02:	4632      	mov	r2, r6
   17d04:	4629      	mov	r1, r5
   17d06:	f104 0032 	add.w	r0, r4, #50	; 0x32
   17d0a:	f006 fc2f 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:41
    mesh_set_retry_count(MESH_RETRY_COUNT_MAX);
   17d0e:	2007      	movs	r0, #7
   17d10:	f7f9 fbd4 	bl	114bc <mesh_set_retry_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:42
}
   17d14:	4620      	mov	r0, r4
   17d16:	bd70      	pop	{r4, r5, r6, pc}
   17d18:	00025514 	.word	0x00025514

00017d1c <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   17d1c:	b510      	push	{r4, lr}
   17d1e:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   17d20:	4b02      	ldr	r3, [pc, #8]	; (17d2c <Uart0::~Uart0()+0x10>)
   17d22:	6003      	str	r3, [r0, #0]
   17d24:	f7ff fce4 	bl	176f0 <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   17d28:	4620      	mov	r0, r4
   17d2a:	bd10      	pop	{r4, pc}
   17d2c:	0002539c 	.word	0x0002539c

00017d30 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   17d30:	b510      	push	{r4, lr}
   17d32:	4604      	mov	r4, r0
   17d34:	f7ff fff2 	bl	17d1c <Uart0::~Uart0()>
   17d38:	4620      	mov	r0, r4
   17d3a:	212c      	movs	r1, #44	; 0x2c
   17d3c:	f004 fb4d 	bl	1c3da <operator delete(void*, unsigned int)>
   17d40:	4620      	mov	r0, r4
   17d42:	bd10      	pop	{r4, pc}

00017d44 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
        Uart0::getInstance().handleInterrupt();
    }
}

bool Uart0::init(unsigned int baudRate, int rxQSize, int txQSize)
{
   17d44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   17d46:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    // Configure PINSEL for UART0
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   17d48:	490d      	ldr	r1, [pc, #52]	; (17d80 <Uart0::init(unsigned int, int, int)+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   17d4a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   17d4c:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   17d4e:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   17d50:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   17d54:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   17d56:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   17d58:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   17d5a:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   17d5e:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:46

    // Set UART0 Peripheral Clock divider to 1
    lpc_pclk(pclk_uart0, clkdiv_1);
   17d60:	2101      	movs	r1, #1
   17d62:	2003      	movs	r0, #3
   17d64:	f7f8 fdf4 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:47
    const unsigned int pclk = sys_get_cpu_clock();
   17d68:	f7f8 fd26 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:49

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
   17d6c:	9700      	str	r7, [sp, #0]
   17d6e:	4601      	mov	r1, r0
   17d70:	4633      	mov	r3, r6
   17d72:	462a      	mov	r2, r5
   17d74:	4620      	mov	r0, r4
   17d76:	f7ff fbcd 	bl	17514 <UartDev::init(unsigned int, unsigned int, int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:50
}
   17d7a:	b003      	add	sp, #12
   17d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17d7e:	bf00      	nop
   17d80:	4002c000 	.word	0x4002c000

00017d84 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   17d84:	b510      	push	{r4, lr}
   17d86:	4604      	mov	r4, r0
   17d88:	4903      	ldr	r1, [pc, #12]	; (17d98 <Uart0::Uart0()+0x14>)
   17d8a:	f7ff fbaf 	bl	174ec <UartDev::UartDev(unsigned int*)>
   17d8e:	4b03      	ldr	r3, [pc, #12]	; (17d9c <Uart0::Uart0()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   17d90:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   17d92:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   17d94:	bd10      	pop	{r4, pc}
   17d96:	bf00      	nop
   17d98:	4000c000 	.word	0x4000c000
   17d9c:	0002557c 	.word	0x0002557c

00017da0 <UART0_IRQHandler>:
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   17da0:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17da2:	4c07      	ldr	r4, [pc, #28]	; (17dc0 <UART0_IRQHandler+0x20>)
   17da4:	6823      	ldr	r3, [r4, #0]
   17da6:	b933      	cbnz	r3, 17db6 <UART0_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17da8:	202c      	movs	r0, #44	; 0x2c
   17daa:	f7fe fd9b 	bl	168e4 <operator new(unsigned int)>
   17dae:	4605      	mov	r5, r0
   17db0:	f7ff ffe8 	bl	17d84 <Uart0::Uart0()>
   17db4:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   17db6:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   17db8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   17dbc:	f7ff bb36 	b.w	1742c <UartDev::handleInterrupt()>
   17dc0:	2007c5e4 	.word	0x2007c5e4

00017dc4 <ssp1_dma_init>:
ssp1_dma_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   17dc4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   17dc6:	2101      	movs	r1, #1
   17dc8:	201d      	movs	r0, #29
   17dca:	f7f8 fda7 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   17dce:	2201      	movs	r2, #1
   17dd0:	4b02      	ldr	r3, [pc, #8]	; (17ddc <ssp1_dma_init+0x18>)
   17dd2:	631a      	str	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   17dd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   17dd6:	07d2      	lsls	r2, r2, #31
   17dd8:	d5fc      	bpl.n	17dd4 <ssp1_dma_init+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   17dda:	bd08      	pop	{r3, pc}
   17ddc:	50004000 	.word	0x50004000

00017de0 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   17de0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   17de4:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   17de6:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   17dea:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   17dec:	d24a      	bcs.n	17e84 <ssp1_dma_transfer_block+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   17dee:	4b27      	ldr	r3, [pc, #156]	; (17e8c <ssp1_dma_transfer_block+0xac>)
   17df0:	691c      	ldr	r4, [r3, #16]
   17df2:	07e5      	lsls	r5, r4, #31
   17df4:	d448      	bmi.n	17e88 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   17df6:	4c26      	ldr	r4, [pc, #152]	; (17e90 <ssp1_dma_transfer_block+0xb0>)
   17df8:	6924      	ldr	r4, [r4, #16]
   17dfa:	07e4      	lsls	r4, r4, #31
   17dfc:	d444      	bmi.n	17e88 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   17dfe:	4c25      	ldr	r4, [pc, #148]	; (17e94 <ssp1_dma_transfer_block+0xb4>)
   17e00:	68e5      	ldr	r5, [r4, #12]
   17e02:	076d      	lsls	r5, r5, #29
   17e04:	d435      	bmi.n	17e72 <ssp1_dma_transfer_block+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   17e06:	2503      	movs	r5, #3
   17e08:	4c23      	ldr	r4, [pc, #140]	; (17e98 <ssp1_dma_transfer_block+0xb8>)
   17e0a:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   17e0c:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   17e0e:	4d23      	ldr	r5, [pc, #140]	; (17e9c <ssp1_dma_transfer_block+0xbc>)
   17e10:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   17e12:	2a00      	cmp	r2, #0
   17e14:	d02f      	beq.n	17e76 <ssp1_dma_transfer_block+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   17e16:	ac01      	add	r4, sp, #4
   17e18:	605c      	str	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   17e1a:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   17e1e:	60dc      	str	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   17e20:	2400      	movs	r4, #0
   17e22:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   17e24:	f241 0406 	movw	r4, #4102	; 0x1006
   17e28:	611c      	str	r4, [r3, #16]
   17e2a:	4c19      	ldr	r4, [pc, #100]	; (17e90 <ssp1_dma_transfer_block+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   17e2c:	b33a      	cbz	r2, 17e7e <ssp1_dma_transfer_block+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   17e2e:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   17e30:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   17e34:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   17e36:	60e1      	str	r1, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   17e38:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   17e3a:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   17e3c:	f44f 6208 	mov.w	r2, #2176	; 0x880
   17e40:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   17e42:	691a      	ldr	r2, [r3, #16]
   17e44:	f042 0201 	orr.w	r2, r2, #1
   17e48:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   17e4a:	6922      	ldr	r2, [r4, #16]
   17e4c:	f042 0201 	orr.w	r2, r2, #1
   17e50:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   17e52:	4a10      	ldr	r2, [pc, #64]	; (17e94 <ssp1_dma_transfer_block+0xb4>)
   17e54:	6a51      	ldr	r1, [r2, #36]	; 0x24
   17e56:	f041 0103 	orr.w	r1, r1, #3
   17e5a:	6251      	str	r1, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   17e5c:	68d8      	ldr	r0, [r3, #12]
   17e5e:	f3c0 000b 	ubfx	r0, r0, #0, #12
   17e62:	2800      	cmp	r0, #0
   17e64:	d1fa      	bne.n	17e5c <ssp1_dma_transfer_block+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   17e66:	6a53      	ldr	r3, [r2, #36]	; 0x24
   17e68:	f023 0303 	bic.w	r3, r3, #3
   17e6c:	6253      	str	r3, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   17e6e:	b003      	add	sp, #12
   17e70:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   17e72:	68a5      	ldr	r5, [r4, #8]
   17e74:	e7c4      	b.n	17e00 <ssp1_dma_transfer_block+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   17e76:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   17e78:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   17e7c:	e7cf      	b.n	17e1e <ssp1_dma_transfer_block+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   17e7e:	aa01      	add	r2, sp, #4
   17e80:	6022      	str	r2, [r4, #0]
   17e82:	e7d7      	b.n	17e34 <ssp1_dma_transfer_block+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   17e84:	2001      	movs	r0, #1
   17e86:	e7f2      	b.n	17e6e <ssp1_dma_transfer_block+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   17e88:	2002      	movs	r0, #2
   17e8a:	e7f0      	b.n	17e6e <ssp1_dma_transfer_block+0x8e>
   17e8c:	50004120 	.word	0x50004120
   17e90:	50004100 	.word	0x50004100
   17e94:	40030000 	.word	0x40030000
   17e98:	50004000 	.word	0x50004000
   17e9c:	40030008 	.word	0x40030008

00017ea0 <spi1_lock>:
spi1_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   17ea0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   17ea2:	4c0a      	ldr	r4, [pc, #40]	; (17ecc <spi1_lock+0x2c>)
   17ea4:	6823      	ldr	r3, [r4, #0]
   17ea6:	b91b      	cbnz	r3, 17eb0 <spi1_lock+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   17ea8:	2001      	movs	r0, #1
   17eaa:	f000 fc1b 	bl	186e4 <xQueueCreateMutex>
   17eae:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17eb0:	f001 f9e2 	bl	19278 <xTaskGetSchedulerState>
   17eb4:	2802      	cmp	r0, #2
   17eb6:	d108      	bne.n	17eca <spi1_lock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   17eb8:	2300      	movs	r3, #0
   17eba:	6820      	ldr	r0, [r4, #0]
   17ebc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   17ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   17ec4:	4619      	mov	r1, r3
   17ec6:	f000 bc93 	b.w	187f0 <xQueueGenericReceive>
   17eca:	bd10      	pop	{r4, pc}
   17ecc:	2007c5e8 	.word	0x2007c5e8

00017ed0 <spi1_unlock>:
spi1_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   17ed0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17ed2:	f001 f9d1 	bl	19278 <xTaskGetSchedulerState>
   17ed6:	2802      	cmp	r0, #2
   17ed8:	d108      	bne.n	17eec <spi1_unlock+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   17eda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   17ede:	2300      	movs	r3, #0
   17ee0:	4803      	ldr	r0, [pc, #12]	; (17ef0 <spi1_unlock+0x20>)
   17ee2:	461a      	mov	r2, r3
   17ee4:	4619      	mov	r1, r3
   17ee6:	6800      	ldr	r0, [r0, #0]
   17ee8:	f000 bb7a 	b.w	185e0 <xQueueGenericSend>
   17eec:	bd10      	pop	{r4, pc}
   17eee:	bf00      	nop
   17ef0:	2007c5e8 	.word	0x2007c5e8

00017ef4 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   17ef4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   17ef6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   17ef8:	4b05      	ldr	r3, [pc, #20]	; (17f10 <lpc_timer_get_struct+0x1c>)
   17efa:	f10d 0e10 	add.w	lr, sp, #16
   17efe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   17f00:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   17f04:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   17f08:	f854 0c10 	ldr.w	r0, [r4, #-16]
   17f0c:	b004      	add	sp, #16
   17f0e:	bd10      	pop	{r4, pc}
   17f10:	00025590 	.word	0x00025590

00017f14 <lpc_timer_enable>:
lpc_timer_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   17f14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   17f16:	460f      	mov	r7, r1
   17f18:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   17f1a:	f7ff ffeb 	bl	17ef4 <lpc_timer_get_struct>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   17f1e:	2317      	movs	r3, #23
   17f20:	2401      	movs	r4, #1
   17f22:	2216      	movs	r2, #22
   17f24:	2102      	movs	r1, #2
   17f26:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   17f2a:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   17f2e:	ab02      	add	r3, sp, #8
   17f30:	441e      	add	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   17f32:	f88d 2002 	strb.w	r2, [sp, #2]
   17f36:	f88d 1001 	strb.w	r1, [sp, #1]
   17f3a:	f88d 4000 	strb.w	r4, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   17f3e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   17f40:	f88d 1005 	strb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   17f44:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   17f48:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   17f4a:	f88d 2006 	strb.w	r2, [sp, #6]
   17f4e:	f88d 4004 	strb.w	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   17f52:	f7f8 fce3 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   17f56:	4621      	mov	r1, r4
   17f58:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   17f5c:	f7f8 fcf8 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   17f60:	2300      	movs	r3, #0
   17f62:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   17f64:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   17f66:	672b      	str	r3, [r5, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   17f68:	f7f8 fc26 	bl	107b8 <sys_get_cpu_clock>
   17f6c:	4b03      	ldr	r3, [pc, #12]	; (17f7c <lpc_timer_enable+0x68>)
   17f6e:	fbb0 f0f3 	udiv	r0, r0, r3
   17f72:	4347      	muls	r7, r0
   17f74:	60ef      	str	r7, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   17f76:	b003      	add	sp, #12
   17f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17f7a:	bf00      	nop
   17f7c:	000f4240 	.word	0x000f4240

00017f80 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
}



bool I2C2::init(unsigned int speedInKhz)
{
   17f80:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   17f82:	4b18      	ldr	r3, [pc, #96]	; (17fe4 <I2C2::init(unsigned int)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   17f84:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   17f86:	695c      	ldr	r4, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   17f88:	4b17      	ldr	r3, [pc, #92]	; (17fe8 <I2C2::init(unsigned int)+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   17f8a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   17f8c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   17f8e:	201a      	movs	r0, #26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   17f90:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   17f94:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   17f96:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   17f98:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   17f9c:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   17fa0:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   17fa2:	6e99      	ldr	r1, [r3, #104]	; 0x68
   17fa4:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   17fa8:	6699      	str	r1, [r3, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   17faa:	6819      	ldr	r1, [r3, #0]
   17fac:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   17fb0:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   17fb2:	6819      	ldr	r1, [r3, #0]
   17fb4:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   17fb8:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   17fba:	2103      	movs	r1, #3
   17fbc:	f7f8 fcc8 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   17fc0:	f7f8 fbfa 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   17fc4:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   17fc8:	d106      	bne.n	17fd8 <I2C2::init(unsigned int)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   17fca:	4632      	mov	r2, r6
   17fcc:	08c1      	lsrs	r1, r0, #3
   17fce:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   17fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   17fd4:	f7ff b888 	b.w	170e8 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
        /**
         * Disables I2C operation
         * This can be used to disable all I2C operations in case of severe I2C Bus Failure
         * @warning Once disabled, I2C cannot be enabled again
         */
        void disableOperation() { mDisableOperation = true; }
   17fd8:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   17fda:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
   17fdc:	f885 3105 	strb.w	r3, [r5, #261]	; 0x105
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   17fe0:	bd70      	pop	{r4, r5, r6, pc}
   17fe2:	bf00      	nop
   17fe4:	2009c000 	.word	0x2009c000
   17fe8:	4002c000 	.word	0x4002c000

00017fec <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   17fec:	b510      	push	{r4, lr}
   17fee:	4604      	mov	r4, r0
   17ff0:	4902      	ldr	r1, [pc, #8]	; (17ffc <I2C2::I2C2()+0x10>)
   17ff2:	f7ff f84b 	bl	1708c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   17ff6:	4620      	mov	r0, r4
   17ff8:	bd10      	pop	{r4, pc}
   17ffa:	bf00      	nop
   17ffc:	400a0000 	.word	0x400a0000

00018000 <I2C2_IRQHandler>:
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   18000:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   18002:	4c08      	ldr	r4, [pc, #32]	; (18024 <I2C2_IRQHandler+0x24>)
   18004:	6823      	ldr	r3, [r4, #0]
   18006:	b93b      	cbnz	r3, 18018 <I2C2_IRQHandler+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   18008:	f44f 7094 	mov.w	r0, #296	; 0x128
   1800c:	f7fe fc6a 	bl	168e4 <operator new(unsigned int)>
   18010:	4605      	mov	r5, r0
   18012:	f7ff ffeb 	bl	17fec <I2C2::I2C2()>
   18016:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   18018:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   1801a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   1801e:	f7ff b947 	b.w	172b0 <I2C_Base::handleInterrupt()>
   18022:	bf00      	nop
   18024:	2007c5ec 	.word	0x2007c5ec

00018028 <CAN_tx_now>:
CAN_tx_now():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   18028:	6802      	ldr	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   1802a:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   1802c:	69d3      	ldr	r3, [r2, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   1802e:	f013 0304 	ands.w	r3, r3, #4
   18032:	d010      	beq.n	18056 <CAN_tx_now+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   18034:	f102 0330 	add.w	r3, r2, #48	; 0x30
   18038:	f101 0410 	add.w	r4, r1, #16
   1803c:	f851 5b04 	ldr.w	r5, [r1], #4
   18040:	42a1      	cmp	r1, r4
   18042:	f843 5b04 	str.w	r5, [r3], #4
   18046:	d1f9      	bne.n	1803c <CAN_tx_now+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   18048:	8a43      	ldrh	r3, [r0, #18]
   1804a:	3301      	adds	r3, #1
   1804c:	8243      	strh	r3, [r0, #18]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   1804e:	2321      	movs	r3, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   18050:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   18052:	6053      	str	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   18054:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   18056:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   18058:	bd30      	pop	{r4, r5, pc}
   1805a:	Address 0x000000000001805a is out of bounds.


0001805c <CAN_handle_isr>:
CAN_handle_isr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   1805c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   18060:	4c26      	ldr	r4, [pc, #152]	; (180fc <CAN_handle_isr+0xa0>)
   18062:	0145      	lsls	r5, r0, #5
   18064:	f854 8005 	ldr.w	r8, [r4, r5]
   18068:	1967      	adds	r7, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   1806a:	f8d8 600c 	ldr.w	r6, [r8, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   1806e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   18072:	4333      	orrs	r3, r6
   18074:	07d9      	lsls	r1, r3, #31
   18076:	d516      	bpl.n	180a6 <CAN_handle_isr+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   18078:	6878      	ldr	r0, [r7, #4]
   1807a:	f000 fc90 	bl	1899e <uxQueueMessagesWaitingFromISR>
   1807e:	89fb      	ldrh	r3, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   18080:	f108 0120 	add.w	r1, r8, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   18084:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   18086:	f04f 0300 	mov.w	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   1808a:	bf88      	it	hi
   1808c:	81f8      	strhhi	r0, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   1808e:	1967      	adds	r7, r4, r5
   18090:	461a      	mov	r2, r3
   18092:	6878      	ldr	r0, [r7, #4]
   18094:	f000 fb38 	bl	18708 <xQueueGenericSendFromISR>
   18098:	b358      	cbz	r0, 180f2 <CAN_handle_isr+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   1809a:	8abb      	ldrh	r3, [r7, #20]
   1809c:	3301      	adds	r3, #1
   1809e:	82bb      	strh	r3, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   180a0:	2304      	movs	r3, #4
   180a2:	f8c8 3004 	str.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   180a6:	f240 6302 	movw	r3, #1538	; 0x602
   180aa:	421e      	tst	r6, r3
   180ac:	d012      	beq.n	180d4 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   180ae:	1967      	adds	r7, r4, r5
   180b0:	68b8      	ldr	r0, [r7, #8]
   180b2:	f000 fc74 	bl	1899e <uxQueueMessagesWaitingFromISR>
   180b6:	8a3b      	ldrh	r3, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   180b8:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   180ba:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   180bc:	bf88      	it	hi
   180be:	8238      	strhhi	r0, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   180c0:	1967      	adds	r7, r4, r5
   180c2:	4669      	mov	r1, sp
   180c4:	68b8      	ldr	r0, [r7, #8]
   180c6:	f000 fc2d 	bl	18924 <xQueueReceiveFromISR>
   180ca:	b118      	cbz	r0, 180d4 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   180cc:	4669      	mov	r1, sp
   180ce:	4638      	mov	r0, r7
   180d0:	f7ff ffaa 	bl	18028 <CAN_tx_now>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   180d4:	06b2      	lsls	r2, r6, #26
   180d6:	d503      	bpl.n	180e0 <CAN_handle_isr+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   180d8:	1963      	adds	r3, r4, r5
   180da:	699b      	ldr	r3, [r3, #24]
   180dc:	4630      	mov	r0, r6
   180de:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   180e0:	0733      	lsls	r3, r6, #28
   180e2:	d503      	bpl.n	180ec <CAN_handle_isr+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   180e4:	442c      	add	r4, r5
   180e6:	69e3      	ldr	r3, [r4, #28]
   180e8:	4630      	mov	r0, r6
   180ea:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   180ec:	b004      	add	sp, #16
   180ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   180f2:	89bb      	ldrh	r3, [r7, #12]
   180f4:	3301      	adds	r3, #1
   180f6:	81bb      	strh	r3, [r7, #12]
   180f8:	e7d2      	b.n	180a0 <CAN_handle_isr+0x44>
   180fa:	bf00      	nop
   180fc:	2007c09c 	.word	0x2007c09c

00018100 <CAN_IRQHandler>:
CAN_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   18100:	4b08      	ldr	r3, [pc, #32]	; (18124 <CAN_IRQHandler+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   18102:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   18104:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   18108:	04a2      	lsls	r2, r4, #18
   1810a:	d502      	bpl.n	18112 <CAN_IRQHandler+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   1810c:	2000      	movs	r0, #0
   1810e:	f7ff ffa5 	bl	1805c <CAN_handle_isr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   18112:	0463      	lsls	r3, r4, #17
   18114:	d504      	bpl.n	18120 <CAN_IRQHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   18116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   1811a:	2001      	movs	r0, #1
   1811c:	f7ff bf9e 	b.w	1805c <CAN_handle_isr>
   18120:	bd10      	pop	{r4, pc}
   18122:	bf00      	nop
   18124:	400fc000 	.word	0x400fc000

00018128 <prvTaskExitError>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   18128:	f04f 0310 	mov.w	r3, #16
   1812c:	f383 8811 	msr	BASEPRI, r3
   18130:	f3bf 8f6f 	isb	sy
   18134:	f3bf 8f4f 	dsb	sy
   18138:	e7fe      	b.n	18138 <prvTaskExitError+0x10>
prvTaskExitError():
   1813a:	Address 0x000000000001813a is out of bounds.


0001813c <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:270
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
   1813c:	4806      	ldr	r0, [pc, #24]	; (18158 <prvPortStartFirstTask+0x1c>)
   1813e:	6800      	ldr	r0, [r0, #0]
   18140:	6800      	ldr	r0, [r0, #0]
   18142:	f380 8808 	msr	MSP, r0
   18146:	b662      	cpsie	i
   18148:	b661      	cpsie	f
   1814a:	f3bf 8f4f 	dsb	sy
   1814e:	f3bf 8f6f 	isb	sy
   18152:	df00      	svc	0
   18154:	bf00      	nop
   18156:	0000      	.short	0x0000
   18158:	e000ed08 	.word	0xe000ed08

0001815c <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   1815c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   18160:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   18164:	4b05      	ldr	r3, [pc, #20]	; (1817c <pxPortInitialiseStack+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   18166:	f021 0101 	bic.w	r1, r1, #1
   1816a:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   1816e:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   18172:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
}
   18176:	3840      	subs	r0, #64	; 0x40
   18178:	4770      	bx	lr
   1817a:	bf00      	nop
   1817c:	00018129 	.word	0x00018129

00018180 <vPortSVCHandler>:
vPortSVCHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
	__asm volatile (
   18180:	4b07      	ldr	r3, [pc, #28]	; (181a0 <pxCurrentTCBConst2>)
   18182:	6819      	ldr	r1, [r3, #0]
   18184:	6808      	ldr	r0, [r1, #0]
   18186:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1818a:	f380 8809 	msr	PSP, r0
   1818e:	f3bf 8f6f 	isb	sy
   18192:	f04f 0000 	mov.w	r0, #0
   18196:	f380 8811 	msr	BASEPRI, r0
   1819a:	f04e 0e0d 	orr.w	lr, lr, #13
   1819e:	4770      	bx	lr

000181a0 <pxCurrentTCBConst2>:
   181a0:	2007c600 	.word	0x2007c600

000181a4 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   181a4:	f04f 0310 	mov.w	r3, #16
   181a8:	f383 8811 	msr	BASEPRI, r3
   181ac:	f3bf 8f6f 	isb	sy
   181b0:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   181b4:	4a02      	ldr	r2, [pc, #8]	; (181c0 <vPortEnterCritical+0x1c>)
   181b6:	6813      	ldr	r3, [r2, #0]
   181b8:	3301      	adds	r3, #1
   181ba:	6013      	str	r3, [r2, #0]
   181bc:	4770      	bx	lr
   181be:	bf00      	nop
   181c0:	2007c5f0 	.word	0x2007c5f0

000181c4 <vPortExitCritical>:
vPortExitCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   181c4:	4a03      	ldr	r2, [pc, #12]	; (181d4 <vPortExitCritical+0x10>)
   181c6:	6813      	ldr	r3, [r2, #0]
   181c8:	3b01      	subs	r3, #1
   181ca:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   181cc:	b90b      	cbnz	r3, 181d2 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   181ce:	f383 8811 	msr	BASEPRI, r3
   181d2:	4770      	bx	lr
   181d4:	2007c5f0 	.word	0x2007c5f0
vPortExitCritical():
   181d8:	ffffffff 	.word	0xffffffff
   181dc:	ffffffff 	.word	0xffffffff

000181e0 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   181e0:	f3ef 8009 	mrs	r0, PSP
   181e4:	f3bf 8f6f 	isb	sy
   181e8:	4b0d      	ldr	r3, [pc, #52]	; (18220 <pxCurrentTCBConst>)
   181ea:	681a      	ldr	r2, [r3, #0]
   181ec:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   181f0:	6010      	str	r0, [r2, #0]
   181f2:	e92d 4008 	stmdb	sp!, {r3, lr}
   181f6:	f04f 0010 	mov.w	r0, #16
   181fa:	f380 8811 	msr	BASEPRI, r0
   181fe:	f000 fea5 	bl	18f4c <vTaskSwitchContext>
   18202:	f04f 0000 	mov.w	r0, #0
   18206:	f380 8811 	msr	BASEPRI, r0
   1820a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1820e:	6819      	ldr	r1, [r3, #0]
   18210:	6808      	ldr	r0, [r1, #0]
   18212:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   18216:	f380 8809 	msr	PSP, r0
   1821a:	f3bf 8f6f 	isb	sy
   1821e:	4770      	bx	lr

00018220 <pxCurrentTCBConst>:
   18220:	2007c600 	.word	0x2007c600

00018224 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   18224:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   18226:	f04f 0310 	mov.w	r3, #16
   1822a:	f383 8811 	msr	BASEPRI, r3
   1822e:	f3bf 8f6f 	isb	sy
   18232:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   18236:	f000 fd7f 	bl	18d38 <xTaskIncrementTick>
   1823a:	b118      	cbz	r0, 18244 <xPortSysTickHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   1823c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18240:	4b02      	ldr	r3, [pc, #8]	; (1824c <xPortSysTickHandler+0x28>)
   18242:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18244:	2300      	movs	r3, #0
   18246:	f383 8811 	msr	BASEPRI, r3
   1824a:	bd08      	pop	{r3, pc}
   1824c:	e000ed04 	.word	0xe000ed04

00018250 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:626
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
   18250:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   18254:	4b02      	ldr	r3, [pc, #8]	; (18260 <vPortSetupTimerInterrupt+0x10>)
   18256:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:627
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
   18258:	2207      	movs	r2, #7
   1825a:	f843 2c04 	str.w	r2, [r3, #-4]
   1825e:	4770      	bx	lr
   18260:	e000e014 	.word	0xe000e014

00018264 <xPortStartScheduler>:
xPortStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:289
{
   18264:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:339
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
   18266:	4b09      	ldr	r3, [pc, #36]	; (1828c <xPortStartScheduler+0x28>)
   18268:	681a      	ldr	r2, [r3, #0]
   1826a:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   1826e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:340
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
   18270:	681a      	ldr	r2, [r3, #0]
   18272:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   18276:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:344
	vPortSetupTimerInterrupt();
   18278:	f7ff ffea 	bl	18250 <vPortSetupTimerInterrupt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:347
	uxCriticalNesting = 0;
   1827c:	2200      	movs	r2, #0
   1827e:	4b04      	ldr	r3, [pc, #16]	; (18290 <xPortStartScheduler+0x2c>)
   18280:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:350
	prvPortStartFirstTask();
   18282:	f7ff ff5b 	bl	1813c <prvPortStartFirstTask>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:356
	prvTaskExitError();
   18286:	f7ff ff4f 	bl	18128 <prvTaskExitError>
   1828a:	bf00      	nop
   1828c:	e000ed20 	.word	0xe000ed20
   18290:	2007c5f0 	.word	0x2007c5f0

00018294 <rts_not_full_trace_init>:
rts_not_full_trace_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:36



// Init the run time counter that is not used by the full trace
void rts_not_full_trace_init( void )
{
   18294:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:38
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   18296:	f7f8 f901 	bl	1049c <sys_get_uptime_us>
   1829a:	4b02      	ldr	r3, [pc, #8]	; (182a4 <rts_not_full_trace_init+0x10>)
   1829c:	e9c3 0100 	strd	r0, r1, [r3]
   182a0:	bd08      	pop	{r3, pc}
   182a2:	bf00      	nop
   182a4:	2007c5f8 	.word	0x2007c5f8

000182a8 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
}

unsigned int rts_not_full_trace_get()
{
   182a8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   182aa:	f7f8 f8f7 	bl	1049c <sys_get_uptime_us>
   182ae:	4b02      	ldr	r3, [pc, #8]	; (182b8 <rts_not_full_trace_get+0x10>)
   182b0:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   182b2:	1ac0      	subs	r0, r0, r3
   182b4:	bd08      	pop	{r3, pc}
   182b6:	bf00      	nop
   182b8:	2007c5f8 	.word	0x2007c5f8

000182bc <rts_not_full_trace_reset>:
rts_not_full_trace_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:46
void rts_not_full_trace_reset()
{
   182bc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:47
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   182be:	f7f8 f8ed 	bl	1049c <sys_get_uptime_us>
   182c2:	4b02      	ldr	r3, [pc, #8]	; (182cc <rts_not_full_trace_reset+0x10>)
   182c4:	e9c3 0100 	strd	r0, r1, [r3]
   182c8:	bd08      	pop	{r3, pc}
   182ca:	bf00      	nop
   182cc:	2007c5f8 	.word	0x2007c5f8

000182d0 <vApplicationIdleHook>:
__WFI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1196
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   182d0:	bf30      	wfi
   182d2:	4770      	bx	lr

000182d4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   182d4:	b510      	push	{r4, lr}
   182d6:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   182d8:	4809      	ldr	r0, [pc, #36]	; (18300 <vApplicationStackOverflowHook+0x2c>)
   182da:	f7fd ff71 	bl	161c0 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   182de:	4620      	mov	r0, r4
   182e0:	f7fd ff6e 	bl	161c0 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   182e4:	4807      	ldr	r0, [pc, #28]	; (18304 <vApplicationStackOverflowHook+0x30>)
   182e6:	f7fd ff6b 	bl	161c0 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   182ea:	4807      	ldr	r0, [pc, #28]	; (18308 <vApplicationStackOverflowHook+0x34>)
   182ec:	f7fe f82a 	bl	16344 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   182f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   182f4:	22aa      	movs	r2, #170	; 0xaa
   182f6:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   182f8:	2200      	movs	r2, #0
   182fa:	701a      	strb	r2, [r3, #0]
   182fc:	bd10      	pop	{r4, pc}
   182fe:	bf00      	nop
   18300:	000255d6 	.word	0x000255d6
   18304:	000255ff 	.word	0x000255ff
   18308:	002dc6c0 	.word	0x002dc6c0

0001830c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   1830c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   1830e:	4806      	ldr	r0, [pc, #24]	; (18328 <vApplicationMallocFailedHook+0x1c>)
   18310:	f7fd ff56 	bl	161c0 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   18314:	4805      	ldr	r0, [pc, #20]	; (1832c <vApplicationMallocFailedHook+0x20>)
   18316:	f7fe f815 	bl	16344 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1831a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1831e:	22aa      	movs	r2, #170	; 0xaa
   18320:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   18322:	2200      	movs	r2, #0
   18324:	701a      	strb	r2, [r3, #0]
   18326:	bd08      	pop	{r3, pc}
   18328:	000255a0 	.word	0x000255a0
   1832c:	002dc6c0 	.word	0x002dc6c0

00018330 <pvPortMalloc>:
pvPortMalloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   18330:	b510      	push	{r4, lr}
   18332:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   18334:	f000 fce6 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   18338:	4620      	mov	r0, r4
   1833a:	f006 f8b3 	bl	1e4a4 <malloc>
   1833e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   18340:	f000 fd80 	bl	18e44 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   18344:	b90c      	cbnz	r4, 1834a <pvPortMalloc+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   18346:	f7ff ffe1 	bl	1830c <vApplicationMallocFailedHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   1834a:	4620      	mov	r0, r4
   1834c:	bd10      	pop	{r4, pc}

0001834e <vPortFree>:
vPortFree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   1834e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   18350:	4604      	mov	r4, r0
   18352:	b140      	cbz	r0, 18366 <vPortFree+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   18354:	f000 fcd6 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   18358:	4620      	mov	r0, r4
   1835a:	f006 f8ab 	bl	1e4b4 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   1835e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   18362:	f000 bd6f 	b.w	18e44 <xTaskResumeAll>
   18366:	bd10      	pop	{r4, pc}

00018368 <vListInitialise>:
vListInitialise():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18368:	f100 0308 	add.w	r3, r0, #8
   1836c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   1836e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18372:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18374:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   18376:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   18378:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   1837a:	6003      	str	r3, [r0, #0]
   1837c:	4770      	bx	lr

0001837e <vListInitialiseItem>:
vListInitialiseItem():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   1837e:	2300      	movs	r3, #0
   18380:	6103      	str	r3, [r0, #16]
   18382:	4770      	bx	lr

00018384 <vListInsertEnd>:
vListInsertEnd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   18384:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   18386:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   18388:	604b      	str	r3, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   1838a:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   1838c:	689a      	ldr	r2, [r3, #8]
   1838e:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   18390:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   18392:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   18394:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   18396:	3301      	adds	r3, #1
   18398:	6003      	str	r3, [r0, #0]
   1839a:	4770      	bx	lr

0001839c <vListInsert>:
vListInsert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   1839c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   1839e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   183a0:	1c53      	adds	r3, r2, #1
   183a2:	d10a      	bne.n	183ba <vListInsert+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   183a4:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   183a6:	685a      	ldr	r2, [r3, #4]
   183a8:	604a      	str	r2, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   183aa:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   183ac:	608b      	str	r3, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   183ae:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   183b0:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   183b2:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   183b4:	3301      	adds	r3, #1
   183b6:	6003      	str	r3, [r0, #0]
   183b8:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   183ba:	f100 0308 	add.w	r3, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   183be:	685c      	ldr	r4, [r3, #4]
   183c0:	6825      	ldr	r5, [r4, #0]
   183c2:	42aa      	cmp	r2, r5
   183c4:	d3ef      	bcc.n	183a6 <vListInsert+0xa>
   183c6:	4623      	mov	r3, r4
   183c8:	e7f9      	b.n	183be <vListInsert+0x22>

000183ca <uxListRemove>:
uxListRemove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   183ca:	6841      	ldr	r1, [r0, #4]
   183cc:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   183ce:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   183d0:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   183d2:	6882      	ldr	r2, [r0, #8]
   183d4:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   183d6:	6859      	ldr	r1, [r3, #4]
   183d8:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   183da:	bf08      	it	eq
   183dc:	605a      	streq	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   183de:	2200      	movs	r2, #0
   183e0:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   183e2:	6818      	ldr	r0, [r3, #0]
   183e4:	3801      	subs	r0, #1
   183e6:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   183e8:	4770      	bx	lr

000183ea <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   183ea:	b570      	push	{r4, r5, r6, lr}
   183ec:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   183ee:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   183f0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   183f2:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   183f4:	b942      	cbnz	r2, 18408 <prvCopyDataToQueue+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   183f6:	6805      	ldr	r5, [r0, #0]
   183f8:	b99d      	cbnz	r5, 18422 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   183fa:	6840      	ldr	r0, [r0, #4]
   183fc:	f000 ff94 	bl	19328 <xTaskPriorityDisinherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   18400:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18402:	3601      	adds	r6, #1
   18404:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   18406:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   18408:	b96d      	cbnz	r5, 18426 <prvCopyDataToQueue+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   1840a:	6880      	ldr	r0, [r0, #8]
   1840c:	f006 f889 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   18410:	68a3      	ldr	r3, [r4, #8]
   18412:	6c22      	ldr	r2, [r4, #64]	; 0x40
   18414:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18416:	6862      	ldr	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   18418:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   1841a:	4293      	cmp	r3, r2
   1841c:	d301      	bcc.n	18422 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   1841e:	6823      	ldr	r3, [r4, #0]
   18420:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   18422:	2000      	movs	r0, #0
   18424:	e7ed      	b.n	18402 <prvCopyDataToQueue+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18426:	68c0      	ldr	r0, [r0, #12]
   18428:	f006 f87b 	bl	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   1842c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1842e:	68e2      	ldr	r2, [r4, #12]
   18430:	425b      	negs	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18432:	6821      	ldr	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   18434:	441a      	add	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18436:	428a      	cmp	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   18438:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   1843a:	bf3e      	ittt	cc
   1843c:	6862      	ldrcc	r2, [r4, #4]
   1843e:	189b      	addcc	r3, r3, r2
   18440:	60e3      	strcc	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   18442:	2d02      	cmp	r5, #2
   18444:	d1ed      	bne.n	18422 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   18446:	b10e      	cbz	r6, 1844c <prvCopyDataToQueue+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   18448:	3e01      	subs	r6, #1
   1844a:	e7ea      	b.n	18422 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   1844c:	4630      	mov	r0, r6
   1844e:	e7d8      	b.n	18402 <prvCopyDataToQueue+0x18>

00018450 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   18450:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   18452:	6c85      	ldr	r5, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   18454:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   18456:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   18458:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   1845a:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   1845c:	4299      	cmp	r1, r3
   1845e:	d21a      	bcs.n	18496 <prvNotifyQueueSetContainer+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18460:	a901      	add	r1, sp, #4
   18462:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   18464:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18468:	f7ff ffbf 	bl	183ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   1846c:	b264      	sxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   1846e:	1c63      	adds	r3, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18470:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   18472:	d10b      	bne.n	1848c <prvNotifyQueueSetContainer+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   18474:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   18476:	b133      	cbz	r3, 18486 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   18478:	f105 0024 	add.w	r0, r5, #36	; 0x24
   1847c:	f000 fdd2 	bl	19024 <xTaskRemoveFromEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   18480:	2800      	cmp	r0, #0
   18482:	bf18      	it	ne
   18484:	2601      	movne	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   18486:	4630      	mov	r0, r6
   18488:	b002      	add	sp, #8
   1848a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1848c:	3401      	adds	r4, #1
   1848e:	b264      	sxtb	r4, r4
   18490:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   18494:	e7f7      	b.n	18486 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   18496:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   18498:	e7f5      	b.n	18486 <prvNotifyQueueSetContainer+0x36>

0001849a <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1849a:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   1849c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1849e:	b410      	push	{r4}
   184a0:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   184a2:	b162      	cbz	r2, 184be <prvCopyDataFromQueue+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   184a4:	68d9      	ldr	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   184a6:	685c      	ldr	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   184a8:	4411      	add	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   184aa:	42a1      	cmp	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   184ac:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   184ae:	bf28      	it	cs
   184b0:	6819      	ldrcs	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   184b2:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   184b4:	bf28      	it	cs
   184b6:	60d9      	strcs	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   184b8:	68d9      	ldr	r1, [r3, #12]
   184ba:	f006 b832 	b.w	1e522 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   184be:	bc10      	pop	{r4}
   184c0:	4770      	bx	lr

000184c2 <prvUnlockQueue>:
prvUnlockQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   184c2:	b570      	push	{r4, r5, r6, lr}
   184c4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   184c6:	f7ff fe6d 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   184ca:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   184ce:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   184d2:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   184d4:	2d00      	cmp	r5, #0
   184d6:	dc14      	bgt.n	18502 <prvUnlockQueue+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   184d8:	23ff      	movs	r3, #255	; 0xff
   184da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   184de:	f7ff fe71 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   184e2:	f7ff fe5f 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   184e6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   184ea:	f104 0610 	add.w	r6, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   184ee:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   184f0:	2d00      	cmp	r5, #0
   184f2:	dc19      	bgt.n	18528 <prvUnlockQueue+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   184f4:	23ff      	movs	r3, #255	; 0xff
   184f6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   184fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   184fe:	f7ff be61 	b.w	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   18502:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18504:	b14b      	cbz	r3, 1851a <prvUnlockQueue+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   18506:	2100      	movs	r1, #0
   18508:	4620      	mov	r0, r4
   1850a:	f7ff ffa1 	bl	18450 <prvNotifyQueueSetContainer>
   1850e:	b108      	cbz	r0, 18514 <prvUnlockQueue+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   18510:	f000 fdf2 	bl	190f8 <vTaskMissedYield>
   18514:	3d01      	subs	r5, #1
   18516:	b26d      	sxtb	r5, r5
   18518:	e7dc      	b.n	184d4 <prvUnlockQueue+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1851a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1851c:	2b00      	cmp	r3, #0
   1851e:	d0db      	beq.n	184d8 <prvUnlockQueue+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18520:	4630      	mov	r0, r6
   18522:	f000 fd7f 	bl	19024 <xTaskRemoveFromEventList>
   18526:	e7f2      	b.n	1850e <prvUnlockQueue+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18528:	6923      	ldr	r3, [r4, #16]
   1852a:	2b00      	cmp	r3, #0
   1852c:	d0e2      	beq.n	184f4 <prvUnlockQueue+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1852e:	4630      	mov	r0, r6
   18530:	f000 fd78 	bl	19024 <xTaskRemoveFromEventList>
   18534:	b108      	cbz	r0, 1853a <prvUnlockQueue+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   18536:	f000 fddf 	bl	190f8 <vTaskMissedYield>
   1853a:	3d01      	subs	r5, #1
   1853c:	b26d      	sxtb	r5, r5
   1853e:	e7d7      	b.n	184f0 <prvUnlockQueue+0x2e>

00018540 <xQueueGenericReset>:
xQueueGenericReset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   18540:	b538      	push	{r3, r4, r5, lr}
   18542:	4604      	mov	r4, r0
   18544:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   18546:	f7ff fe2d 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   1854a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1854c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1854e:	6822      	ldr	r2, [r4, #0]
   18550:	4343      	muls	r3, r0
   18552:	18d1      	adds	r1, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   18554:	1a1b      	subs	r3, r3, r0
   18556:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   18558:	6061      	str	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   1855a:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   1855c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   1855e:	23ff      	movs	r3, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   18560:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   18562:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   18564:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   18568:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   1856c:	b995      	cbnz	r5, 18594 <xQueueGenericReset+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1856e:	6923      	ldr	r3, [r4, #16]
   18570:	b163      	cbz	r3, 1858c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18572:	f104 0010 	add.w	r0, r4, #16
   18576:	f000 fd55 	bl	19024 <xTaskRemoveFromEventList>
   1857a:	b138      	cbz	r0, 1858c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   1857c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18580:	4b09      	ldr	r3, [pc, #36]	; (185a8 <xQueueGenericReset+0x68>)
   18582:	601a      	str	r2, [r3, #0]
   18584:	f3bf 8f4f 	dsb	sy
   18588:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   1858c:	f7ff fe1a 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   18590:	2001      	movs	r0, #1
   18592:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   18594:	f104 0010 	add.w	r0, r4, #16
   18598:	f7ff fee6 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   1859c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   185a0:	f7ff fee2 	bl	18368 <vListInitialise>
   185a4:	e7f2      	b.n	1858c <xQueueGenericReset+0x4c>
   185a6:	bf00      	nop
   185a8:	e000ed04 	.word	0xe000ed04

000185ac <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   185ac:	b570      	push	{r4, r5, r6, lr}
   185ae:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   185b0:	4348      	muls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   185b2:	304c      	adds	r0, #76	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   185b4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   185b6:	f7ff febb 	bl	18330 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   185ba:	4604      	mov	r4, r0
   185bc:	b148      	cbz	r0, 185d2 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   185be:	b955      	cbnz	r5, 185d6 <xQueueGenericCreate+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   185c0:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   185c2:	63e6      	str	r6, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   185c4:	6425      	str	r5, [r4, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   185c6:	2101      	movs	r1, #1
   185c8:	4620      	mov	r0, r4
   185ca:	f7ff ffb9 	bl	18540 <xQueueGenericReset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   185ce:	2300      	movs	r3, #0
   185d0:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   185d2:	4620      	mov	r0, r4
   185d4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   185d6:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   185da:	6003      	str	r3, [r0, #0]
   185dc:	e7f1      	b.n	185c2 <xQueueGenericCreate+0x16>
xQueueGenericCreate():
   185de:	Address 0x00000000000185de is out of bounds.


000185e0 <xQueueGenericSend>:
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   185e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   185e4:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   185e6:	4604      	mov	r4, r0
   185e8:	4689      	mov	r9, r1
   185ea:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   185ec:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   185ee:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 186e0 <xQueueGenericSend+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   185f2:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   185f4:	f7ff fdd6 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   185f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   185fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   185fc:	429a      	cmp	r2, r3
   185fe:	d301      	bcc.n	18604 <xQueueGenericSend+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   18600:	2e02      	cmp	r6, #2
   18602:	d121      	bne.n	18648 <xQueueGenericSend+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18604:	4632      	mov	r2, r6
   18606:	4649      	mov	r1, r9
   18608:	4620      	mov	r0, r4
   1860a:	f7ff feee 	bl	183ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   1860e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18610:	b193      	cbz	r3, 18638 <xQueueGenericSend+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18612:	4631      	mov	r1, r6
   18614:	4620      	mov	r0, r4
   18616:	f7ff ff1b 	bl	18450 <prvNotifyQueueSetContainer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   1861a:	b138      	cbz	r0, 1862c <xQueueGenericSend+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   1861c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18620:	4b2f      	ldr	r3, [pc, #188]	; (186e0 <xQueueGenericSend+0x100>)
   18622:	601a      	str	r2, [r3, #0]
   18624:	f3bf 8f4f 	dsb	sy
   18628:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   1862c:	f7ff fdca 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   18630:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   18632:	b004      	add	sp, #16
   18634:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18638:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1863a:	2b00      	cmp	r3, #0
   1863c:	d0ed      	beq.n	1861a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1863e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18642:	f000 fcef 	bl	19024 <xTaskRemoveFromEventList>
   18646:	e7e8      	b.n	1861a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   18648:	9d01      	ldr	r5, [sp, #4]
   1864a:	b91d      	cbnz	r5, 18654 <xQueueGenericSend+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   1864c:	f7ff fdba 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   18650:	2000      	movs	r0, #0
   18652:	e7ee      	b.n	18632 <xQueueGenericSend+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   18654:	b917      	cbnz	r7, 1865c <xQueueGenericSend+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   18656:	a802      	add	r0, sp, #8
   18658:	f000 fd1c 	bl	19094 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   1865c:	f7ff fdb2 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   18660:	f000 fb50 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   18664:	f7ff fd9e 	bl	181a4 <vPortEnterCritical>
   18668:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1866c:	2bff      	cmp	r3, #255	; 0xff
   1866e:	bf08      	it	eq
   18670:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   18674:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   18678:	2bff      	cmp	r3, #255	; 0xff
   1867a:	bf08      	it	eq
   1867c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   18680:	f7ff fda0 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   18684:	a901      	add	r1, sp, #4
   18686:	a802      	add	r0, sp, #8
   18688:	f000 fd10 	bl	190ac <xTaskCheckForTimeOut>
   1868c:	bb10      	cbnz	r0, 186d4 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   1868e:	f7ff fd89 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   18692:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   18694:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   18696:	f7ff fd95 	bl	181c4 <vPortExitCritical>
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   1869a:	42af      	cmp	r7, r5
   1869c:	d114      	bne.n	186c8 <xQueueGenericSend+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   1869e:	9901      	ldr	r1, [sp, #4]
   186a0:	f104 0010 	add.w	r0, r4, #16
   186a4:	f000 fcae 	bl	19004 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   186a8:	4620      	mov	r0, r4
   186aa:	f7ff ff0a 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   186ae:	f000 fbc9 	bl	18e44 <xTaskResumeAll>
   186b2:	b938      	cbnz	r0, 186c4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   186b4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   186b8:	f8ca 3000 	str.w	r3, [sl]
   186bc:	f3bf 8f4f 	dsb	sy
   186c0:	f3bf 8f6f 	isb	sy
   186c4:	2701      	movs	r7, #1
   186c6:	e795      	b.n	185f4 <xQueueGenericSend+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   186c8:	4620      	mov	r0, r4
   186ca:	f7ff fefa 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   186ce:	f000 fbb9 	bl	18e44 <xTaskResumeAll>
   186d2:	e7f7      	b.n	186c4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   186d4:	4620      	mov	r0, r4
   186d6:	f7ff fef4 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   186da:	f000 fbb3 	bl	18e44 <xTaskResumeAll>
   186de:	e7b7      	b.n	18650 <xQueueGenericSend+0x70>
   186e0:	e000ed04 	.word	0xe000ed04

000186e4 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   186e4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   186e6:	4602      	mov	r2, r0
   186e8:	2100      	movs	r1, #0
   186ea:	2001      	movs	r0, #1
   186ec:	f7ff ff5e 	bl	185ac <xQueueGenericCreate>
prvInitialiseMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   186f0:	4604      	mov	r4, r0
   186f2:	b138      	cbz	r0, 18704 <xQueueCreateMutex+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   186f4:	2300      	movs	r3, #0
   186f6:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   186f8:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   186fa:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   186fc:	461a      	mov	r2, r3
   186fe:	4619      	mov	r1, r3
   18700:	f7ff ff6e 	bl	185e0 <xQueueGenericSend>
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   18704:	4620      	mov	r0, r4
   18706:	bd10      	pop	{r4, pc}

00018708 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   18708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1870c:	4604      	mov	r4, r0
   1870e:	4690      	mov	r8, r2
   18710:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18712:	f3ef 8611 	mrs	r6, BASEPRI
   18716:	f04f 0310 	mov.w	r3, #16
   1871a:	f383 8811 	msr	BASEPRI, r3
   1871e:	f3bf 8f6f 	isb	sy
   18722:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   18726:	6b82      	ldr	r2, [r0, #56]	; 0x38
   18728:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   1872a:	429a      	cmp	r2, r3
   1872c:	d301      	bcc.n	18732 <xQueueGenericSendFromISR+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   1872e:	2f02      	cmp	r7, #2
   18730:	d128      	bne.n	18784 <xQueueGenericSendFromISR+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18732:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18736:	463a      	mov	r2, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18738:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   1873a:	4620      	mov	r0, r4
   1873c:	f7ff fe55 	bl	183ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   18740:	1c6b      	adds	r3, r5, #1
   18742:	d11a      	bne.n	1877a <xQueueGenericSendFromISR+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   18744:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18746:	b183      	cbz	r3, 1876a <xQueueGenericSendFromISR+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18748:	4639      	mov	r1, r7
   1874a:	4620      	mov	r0, r4
   1874c:	f7ff fe80 	bl	18450 <prvNotifyQueueSetContainer>
   18750:	b908      	cbnz	r0, 18756 <xQueueGenericSendFromISR+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   18752:	2001      	movs	r0, #1
   18754:	e005      	b.n	18762 <xQueueGenericSendFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   18756:	f1b8 0f00 	cmp.w	r8, #0
   1875a:	d0fa      	beq.n	18752 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   1875c:	2001      	movs	r0, #1
   1875e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18762:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   18766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1876a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1876c:	2b00      	cmp	r3, #0
   1876e:	d0f0      	beq.n	18752 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18770:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18774:	f000 fc56 	bl	19024 <xTaskRemoveFromEventList>
   18778:	e7ea      	b.n	18750 <xQueueGenericSendFromISR+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1877a:	3501      	adds	r5, #1
   1877c:	b26d      	sxtb	r5, r5
   1877e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   18782:	e7e6      	b.n	18752 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   18784:	2000      	movs	r0, #0
   18786:	e7ec      	b.n	18762 <xQueueGenericSendFromISR+0x5a>

00018788 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   18788:	b538      	push	{r3, r4, r5, lr}
   1878a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1878c:	f3ef 8411 	mrs	r4, BASEPRI
   18790:	f04f 0210 	mov.w	r2, #16
   18794:	f382 8811 	msr	BASEPRI, r2
   18798:	f3bf 8f6f 	isb	sy
   1879c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   187a0:	6b81      	ldr	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   187a2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   187a4:	4291      	cmp	r1, r2
   187a6:	d221      	bcs.n	187ec <xQueueGiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   187a8:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   187ac:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   187ae:	b252      	sxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   187b0:	6381      	str	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   187b2:	1c51      	adds	r1, r2, #1
   187b4:	d115      	bne.n	187e2 <xQueueGiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   187b6:	6c82      	ldr	r2, [r0, #72]	; 0x48
   187b8:	b162      	cbz	r2, 187d4 <xQueueGiveFromISR+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   187ba:	2100      	movs	r1, #0
   187bc:	f7ff fe48 	bl	18450 <prvNotifyQueueSetContainer>
   187c0:	b908      	cbnz	r0, 187c6 <xQueueGiveFromISR+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   187c2:	2001      	movs	r0, #1
   187c4:	e003      	b.n	187ce <xQueueGiveFromISR+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   187c6:	2d00      	cmp	r5, #0
   187c8:	d0fb      	beq.n	187c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   187ca:	2001      	movs	r0, #1
   187cc:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   187ce:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   187d2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   187d4:	6a42      	ldr	r2, [r0, #36]	; 0x24
   187d6:	2a00      	cmp	r2, #0
   187d8:	d0f3      	beq.n	187c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   187da:	3024      	adds	r0, #36	; 0x24
   187dc:	f000 fc22 	bl	19024 <xTaskRemoveFromEventList>
   187e0:	e7ee      	b.n	187c0 <xQueueGiveFromISR+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   187e2:	3201      	adds	r2, #1
   187e4:	b252      	sxtb	r2, r2
   187e6:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   187ea:	e7ea      	b.n	187c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   187ec:	2000      	movs	r0, #0
   187ee:	e7ee      	b.n	187ce <xQueueGiveFromISR+0x46>

000187f0 <xQueueGenericReceive>:
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   187f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   187f4:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   187f8:	4604      	mov	r4, r0
   187fa:	460f      	mov	r7, r1
   187fc:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   187fe:	4656      	mov	r6, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   18800:	f8df 911c 	ldr.w	r9, [pc, #284]	; 18920 <xQueueGenericReceive+0x130>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   18804:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   18806:	f7ff fccd 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   1880a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   1880c:	b355      	cbz	r5, 18864 <xQueueGenericReceive+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   1880e:	4639      	mov	r1, r7
   18810:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   18812:	68e6      	ldr	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   18814:	f7ff fe41 	bl	1849a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   18818:	f1b8 0f00 	cmp.w	r8, #0
   1881c:	d11b      	bne.n	18856 <xQueueGenericReceive+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   1881e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18820:	3d01      	subs	r5, #1
   18822:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18824:	b913      	cbnz	r3, 1882c <xQueueGenericReceive+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   18826:	f000 fdb7 	bl	19398 <pvTaskIncrementMutexHeldCount>
   1882a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1882c:	6923      	ldr	r3, [r4, #16]
   1882e:	b163      	cbz	r3, 1884a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18830:	f104 0010 	add.w	r0, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18834:	f000 fbf6 	bl	19024 <xTaskRemoveFromEventList>
   18838:	b138      	cbz	r0, 1884a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   1883a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1883e:	4b38      	ldr	r3, [pc, #224]	; (18920 <xQueueGenericReceive+0x130>)
   18840:	601a      	str	r2, [r3, #0]
   18842:	f3bf 8f4f 	dsb	sy
   18846:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   1884a:	f7ff fcbb 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   1884e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   18850:	b004      	add	sp, #16
   18852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18856:	6a63      	ldr	r3, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   18858:	60e6      	str	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1885a:	2b00      	cmp	r3, #0
   1885c:	d0f5      	beq.n	1884a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1885e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18862:	e7e7      	b.n	18834 <xQueueGenericReceive+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   18864:	9d01      	ldr	r5, [sp, #4]
   18866:	b91d      	cbnz	r5, 18870 <xQueueGenericReceive+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   18868:	f7ff fcac 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   1886c:	4628      	mov	r0, r5
   1886e:	e7ef      	b.n	18850 <xQueueGenericReceive+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   18870:	f1ba 0f00 	cmp.w	sl, #0
   18874:	d102      	bne.n	1887c <xQueueGenericReceive+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   18876:	a802      	add	r0, sp, #8
   18878:	f000 fc0c 	bl	19094 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   1887c:	f7ff fca2 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   18880:	f000 fa40 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   18884:	f7ff fc8e 	bl	181a4 <vPortEnterCritical>
   18888:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1888c:	2bff      	cmp	r3, #255	; 0xff
   1888e:	bf08      	it	eq
   18890:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   18894:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   18898:	2bff      	cmp	r3, #255	; 0xff
   1889a:	bf08      	it	eq
   1889c:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   188a0:	f7ff fc90 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   188a4:	a901      	add	r1, sp, #4
   188a6:	a802      	add	r0, sp, #8
   188a8:	f000 fc00 	bl	190ac <xTaskCheckForTimeOut>
   188ac:	bb50      	cbnz	r0, 18904 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   188ae:	f7ff fc79 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   188b2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   188b4:	f7ff fc86 	bl	181c4 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   188b8:	b9f5      	cbnz	r5, 188f8 <xQueueGenericReceive+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   188ba:	6823      	ldr	r3, [r4, #0]
   188bc:	b933      	cbnz	r3, 188cc <xQueueGenericReceive+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   188be:	f7ff fc71 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   188c2:	6860      	ldr	r0, [r4, #4]
   188c4:	f000 fce8 	bl	19298 <vTaskPriorityInherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   188c8:	f7ff fc7c 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   188cc:	9901      	ldr	r1, [sp, #4]
   188ce:	f104 0024 	add.w	r0, r4, #36	; 0x24
   188d2:	f000 fb97 	bl	19004 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   188d6:	4620      	mov	r0, r4
   188d8:	f7ff fdf3 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   188dc:	f000 fab2 	bl	18e44 <xTaskResumeAll>
   188e0:	b938      	cbnz	r0, 188f2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   188e2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   188e6:	f8c9 3000 	str.w	r3, [r9]
   188ea:	f3bf 8f4f 	dsb	sy
   188ee:	f3bf 8f6f 	isb	sy
   188f2:	f04f 0a01 	mov.w	sl, #1
   188f6:	e786      	b.n	18806 <xQueueGenericReceive+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   188f8:	4620      	mov	r0, r4
   188fa:	f7ff fde2 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   188fe:	f000 faa1 	bl	18e44 <xTaskResumeAll>
   18902:	e7f6      	b.n	188f2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   18904:	4620      	mov	r0, r4
   18906:	f7ff fddc 	bl	184c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   1890a:	f000 fa9b 	bl	18e44 <xTaskResumeAll>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   1890e:	f7ff fc49 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   18912:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   18914:	f7ff fc56 	bl	181c4 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   18918:	2d00      	cmp	r5, #0
   1891a:	d1ea      	bne.n	188f2 <xQueueGenericReceive+0x102>
   1891c:	e7a6      	b.n	1886c <xQueueGenericReceive+0x7c>
   1891e:	bf00      	nop
   18920:	e000ed04 	.word	0xe000ed04

00018924 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   18924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18928:	4607      	mov	r7, r0
   1892a:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1892c:	f3ef 8611 	mrs	r6, BASEPRI
   18930:	f04f 0310 	mov.w	r3, #16
   18934:	f383 8811 	msr	BASEPRI, r3
   18938:	f3bf 8f6f 	isb	sy
   1893c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18940:	6b84      	ldr	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   18942:	b30c      	cbz	r4, 18988 <xQueueReceiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   18944:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18948:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   1894a:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   1894c:	f7ff fda5 	bl	1849a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   18950:	1c6b      	adds	r3, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18952:	63bc      	str	r4, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   18954:	d113      	bne.n	1897e <xQueueReceiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18956:	693b      	ldr	r3, [r7, #16]
   18958:	b90b      	cbnz	r3, 1895e <xQueueReceiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   1895a:	2001      	movs	r0, #1
   1895c:	e00b      	b.n	18976 <xQueueReceiveFromISR+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1895e:	f107 0010 	add.w	r0, r7, #16
   18962:	f000 fb5f 	bl	19024 <xTaskRemoveFromEventList>
   18966:	2800      	cmp	r0, #0
   18968:	d0f7      	beq.n	1895a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   1896a:	f1b8 0f00 	cmp.w	r8, #0
   1896e:	d0f4      	beq.n	1895a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   18970:	2001      	movs	r0, #1
   18972:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18976:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   1897a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   1897e:	3501      	adds	r5, #1
   18980:	b26d      	sxtb	r5, r5
   18982:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   18986:	e7e8      	b.n	1895a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   18988:	4620      	mov	r0, r4
   1898a:	e7f4      	b.n	18976 <xQueueReceiveFromISR+0x52>

0001898c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   1898c:	b510      	push	{r4, lr}
   1898e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   18990:	f7ff fc08 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   18994:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   18996:	f7ff fc15 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   1899a:	4620      	mov	r0, r4
   1899c:	bd10      	pop	{r4, pc}

0001899e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   1899e:	6b80      	ldr	r0, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   189a0:	4770      	bx	lr

000189a2 <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:39

    return (taskRunTime * 100) / totalRunTime;
}

static void prvResetRunTimeStatsInList(List_t *pxList)
{
   189a2:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46

    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
    do
    {
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
        pxNextTCB->ulRunTimeCounter = 0;
   189a4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:42
    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   189a6:	6843      	ldr	r3, [r0, #4]
   189a8:	f100 0108 	add.w	r1, r0, #8
   189ac:	685b      	ldr	r3, [r3, #4]
   189ae:	428b      	cmp	r3, r1
   189b0:	6043      	str	r3, [r0, #4]
   189b2:	bf04      	itt	eq
   189b4:	68c3      	ldreq	r3, [r0, #12]
   189b6:	6043      	streq	r3, [r0, #4]
   189b8:	6843      	ldr	r3, [r0, #4]
   189ba:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:45
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   189bc:	685b      	ldr	r3, [r3, #4]
   189be:	4299      	cmp	r1, r3
   189c0:	bf08      	it	eq
   189c2:	68c3      	ldreq	r3, [r0, #12]
   189c4:	68da      	ldr	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   189c6:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46
        pxNextTCB->ulRunTimeCounter = 0;
   189c8:	64d5      	str	r5, [r2, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   189ca:	d1f7      	bne.n	189bc <prvResetRunTimeStatsInList+0x1a>
   189cc:	6043      	str	r3, [r0, #4]
   189ce:	bd30      	pop	{r4, r5, pc}

000189d0 <prvIdleTask>:
prvIdleTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
   189d0:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3132
{
   189d4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   189d6:	4c06      	ldr	r4, [pc, #24]	; (189f0 <prvIdleTask+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   189d8:	4d06      	ldr	r5, [pc, #24]	; (189f4 <prvIdleTask+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   189da:	6823      	ldr	r3, [r4, #0]
   189dc:	2b01      	cmp	r3, #1
   189de:	d904      	bls.n	189ea <prvIdleTask+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   189e0:	602e      	str	r6, [r5, #0]
   189e2:	f3bf 8f4f 	dsb	sy
   189e6:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3186
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
   189ea:	f7ff fc71 	bl	182d0 <vApplicationIdleHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3143
		prvCheckTasksWaitingTermination();
   189ee:	e7f4      	b.n	189da <prvIdleTask+0xa>
   189f0:	2007c60c 	.word	0x2007c60c
   189f4:	e000ed04 	.word	0xe000ed04

000189f8 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   189f8:	4a06      	ldr	r2, [pc, #24]	; (18a14 <prvResetNextTaskUnblockTime+0x1c>)
   189fa:	6813      	ldr	r3, [r2, #0]
   189fc:	6819      	ldr	r1, [r3, #0]
   189fe:	4b06      	ldr	r3, [pc, #24]	; (18a18 <prvResetNextTaskUnblockTime+0x20>)
   18a00:	b919      	cbnz	r1, 18a0a <prvResetNextTaskUnblockTime+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   18a02:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   18a06:	601a      	str	r2, [r3, #0]
   18a08:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   18a0a:	6812      	ldr	r2, [r2, #0]
   18a0c:	68d2      	ldr	r2, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   18a0e:	68d2      	ldr	r2, [r2, #12]
   18a10:	6852      	ldr	r2, [r2, #4]
   18a12:	e7f8      	b.n	18a06 <prvResetNextTaskUnblockTime+0xe>
   18a14:	2007c604 	.word	0x2007c604
   18a18:	2007c718 	.word	0x2007c718

00018a1c <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   18a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   18a1e:	4b1b      	ldr	r3, [pc, #108]	; (18a8c <prvAddCurrentTaskToDelayedList+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18a20:	4e1b      	ldr	r6, [pc, #108]	; (18a90 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   18a22:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   18a24:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18a26:	6830      	ldr	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   18a28:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18a2a:	3004      	adds	r0, #4
   18a2c:	f7ff fccd 	bl	183ca <uxListRemove>
   18a30:	4633      	mov	r3, r6
   18a32:	b940      	cbnz	r0, 18a46 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   18a34:	2001      	movs	r0, #1
   18a36:	6831      	ldr	r1, [r6, #0]
   18a38:	4e16      	ldr	r6, [pc, #88]	; (18a94 <prvAddCurrentTaskToDelayedList+0x78>)
   18a3a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   18a3c:	6832      	ldr	r2, [r6, #0]
   18a3e:	4088      	lsls	r0, r1
   18a40:	ea22 0200 	bic.w	r2, r2, r0
   18a44:	6032      	str	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   18a46:	1c62      	adds	r2, r4, #1
   18a48:	d107      	bne.n	18a5a <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   18a4a:	b137      	cbz	r7, 18a5a <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   18a4c:	6819      	ldr	r1, [r3, #0]
   18a4e:	4812      	ldr	r0, [pc, #72]	; (18a98 <prvAddCurrentTaskToDelayedList+0x7c>)
   18a50:	3104      	adds	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   18a52:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   18a56:	f7ff bc95 	b.w	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   18a5a:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   18a5c:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   18a5e:	42a5      	cmp	r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   18a60:	6054      	str	r4, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   18a62:	d907      	bls.n	18a74 <prvAddCurrentTaskToDelayedList+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   18a64:	4a0d      	ldr	r2, [pc, #52]	; (18a9c <prvAddCurrentTaskToDelayedList+0x80>)
   18a66:	6810      	ldr	r0, [r2, #0]
   18a68:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   18a6a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   18a6e:	3104      	adds	r1, #4
   18a70:	f7ff bc94 	b.w	1839c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   18a74:	4a0a      	ldr	r2, [pc, #40]	; (18aa0 <prvAddCurrentTaskToDelayedList+0x84>)
   18a76:	6810      	ldr	r0, [r2, #0]
   18a78:	6819      	ldr	r1, [r3, #0]
   18a7a:	3104      	adds	r1, #4
   18a7c:	f7ff fc8e 	bl	1839c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   18a80:	4b08      	ldr	r3, [pc, #32]	; (18aa4 <prvAddCurrentTaskToDelayedList+0x88>)
   18a82:	681a      	ldr	r2, [r3, #0]
   18a84:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   18a86:	bf38      	it	cc
   18a88:	601c      	strcc	r4, [r3, #0]
   18a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18a8c:	2007c74c 	.word	0x2007c74c
   18a90:	2007c600 	.word	0x2007c600
   18a94:	2007c6e8 	.word	0x2007c6e8
   18a98:	2007c738 	.word	0x2007c738
   18a9c:	2007c608 	.word	0x2007c608
   18aa0:	2007c604 	.word	0x2007c604
   18aa4:	2007c718 	.word	0x2007c718

00018aa8 <xTaskCreate>:
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   18aa8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18aac:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   18ab0:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18ab2:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   18ab4:	460d      	mov	r5, r1
   18ab6:	4699      	mov	r9, r3
   18ab8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18aba:	f7ff fc39 	bl	18330 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   18abe:	4607      	mov	r7, r0
   18ac0:	2800      	cmp	r0, #0
   18ac2:	f000 809b 	beq.w	18bfc <xTaskCreate+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   18ac6:	2058      	movs	r0, #88	; 0x58
   18ac8:	f7ff fc32 	bl	18330 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   18acc:	4604      	mov	r4, r0
   18ace:	2800      	cmp	r0, #0
   18ad0:	f000 8091 	beq.w	18bf6 <xTaskCreate+0x14e>
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   18ad4:	4652      	mov	r2, sl
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   18ad6:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   18ad8:	21a5      	movs	r1, #165	; 0xa5
   18ada:	4638      	mov	r0, r7
   18adc:	f005 fd46 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   18ae0:	6b23      	ldr	r3, [r4, #48]	; 0x30
   18ae2:	f1aa 0a04 	sub.w	sl, sl, #4
   18ae6:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   18ae8:	f02a 0a07 	bic.w	sl, sl, #7
   18aec:	1e6b      	subs	r3, r5, #1
   18aee:	f104 0234 	add.w	r2, r4, #52	; 0x34
   18af2:	3507      	adds	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   18af4:	7859      	ldrb	r1, [r3, #1]
   18af6:	f802 1b01 	strb.w	r1, [r2], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   18afa:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   18afe:	b109      	cbz	r1, 18b04 <xTaskCreate+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   18b00:	42ab      	cmp	r3, r5
   18b02:	d1f7      	bne.n	18af4 <xTaskCreate+0x4c>
   18b04:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   18b06:	f04f 0b00 	mov.w	fp, #0
   18b0a:	2d09      	cmp	r5, #9
   18b0c:	bf28      	it	cs
   18b0e:	2509      	movcs	r5, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   18b10:	1d27      	adds	r7, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   18b12:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   18b14:	6465      	str	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   18b16:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   18b18:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   18b1c:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   18b20:	f7ff fc2d 	bl	1837e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18b24:	f1c5 050a 	rsb	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   18b28:	f104 0018 	add.w	r0, r4, #24
   18b2c:	f7ff fc27 	bl	1837e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   18b30:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   18b34:	6124      	str	r4, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18b36:	61a5      	str	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   18b38:	6264      	str	r4, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   18b3a:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   18b3e:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   18b42:	464a      	mov	r2, r9
   18b44:	4641      	mov	r1, r8
   18b46:	4650      	mov	r0, sl
   18b48:	f7ff fb08 	bl	1815c <pxPortInitialiseStack>
   18b4c:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   18b4e:	b106      	cbz	r6, 18b52 <xTaskCreate+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   18b50:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   18b52:	f7ff fb27 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   18b56:	4b30      	ldr	r3, [pc, #192]	; (18c18 <xTaskCreate+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   18b58:	4e30      	ldr	r6, [pc, #192]	; (18c1c <xTaskCreate+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   18b5a:	681a      	ldr	r2, [r3, #0]
   18b5c:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 18c44 <xTaskCreate+0x19c>
   18b60:	3201      	adds	r2, #1
   18b62:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   18b64:	6835      	ldr	r5, [r6, #0]
   18b66:	2d00      	cmp	r5, #0
   18b68:	d14b      	bne.n	18c02 <xTaskCreate+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   18b6a:	6034      	str	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   18b6c:	681b      	ldr	r3, [r3, #0]
   18b6e:	2b01      	cmp	r3, #1
   18b70:	d11a      	bne.n	18ba8 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   18b72:	eb08 0005 	add.w	r0, r8, r5
   18b76:	3514      	adds	r5, #20
   18b78:	f7ff fbf6 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   18b7c:	2dc8      	cmp	r5, #200	; 0xc8
   18b7e:	d1f8      	bne.n	18b72 <xTaskCreate+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   18b80:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 18c48 <xTaskCreate+0x1a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   18b84:	4d26      	ldr	r5, [pc, #152]	; (18c20 <xTaskCreate+0x178>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   18b86:	4648      	mov	r0, r9
   18b88:	f7ff fbee 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   18b8c:	4628      	mov	r0, r5
   18b8e:	f7ff fbeb 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   18b92:	4824      	ldr	r0, [pc, #144]	; (18c24 <xTaskCreate+0x17c>)
   18b94:	f7ff fbe8 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   18b98:	4823      	ldr	r0, [pc, #140]	; (18c28 <xTaskCreate+0x180>)
   18b9a:	f7ff fbe5 	bl	18368 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   18b9e:	4b23      	ldr	r3, [pc, #140]	; (18c2c <xTaskCreate+0x184>)
   18ba0:	f8c3 9000 	str.w	r9, [r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   18ba4:	4b22      	ldr	r3, [pc, #136]	; (18c30 <xTaskCreate+0x188>)
   18ba6:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   18ba8:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   18baa:	4a22      	ldr	r2, [pc, #136]	; (18c34 <xTaskCreate+0x18c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   18bac:	4922      	ldr	r1, [pc, #136]	; (18c38 <xTaskCreate+0x190>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   18bae:	6813      	ldr	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   18bb0:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   18bb2:	3301      	adds	r3, #1
   18bb4:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   18bb6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   18bb8:	fa05 f302 	lsl.w	r3, r5, r2
   18bbc:	4303      	orrs	r3, r0
   18bbe:	2014      	movs	r0, #20
   18bc0:	600b      	str	r3, [r1, #0]
   18bc2:	fb00 8002 	mla	r0, r0, r2, r8
   18bc6:	4639      	mov	r1, r7
   18bc8:	f7ff fbdc 	bl	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   18bcc:	f7ff fafa 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   18bd0:	4b1a      	ldr	r3, [pc, #104]	; (18c3c <xTaskCreate+0x194>)
   18bd2:	681b      	ldr	r3, [r3, #0]
   18bd4:	b163      	cbz	r3, 18bf0 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   18bd6:	6833      	ldr	r3, [r6, #0]
   18bd8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   18bda:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   18bdc:	429a      	cmp	r2, r3
   18bde:	d207      	bcs.n	18bf0 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   18be0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18be4:	4b16      	ldr	r3, [pc, #88]	; (18c40 <xTaskCreate+0x198>)
   18be6:	601a      	str	r2, [r3, #0]
   18be8:	f3bf 8f4f 	dsb	sy
   18bec:	f3bf 8f6f 	isb	sy
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   18bf0:	4628      	mov	r0, r5
   18bf2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   18bf6:	4638      	mov	r0, r7
   18bf8:	f7ff fba9 	bl	1834e <vPortFree>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   18bfc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   18c00:	e7f6      	b.n	18bf0 <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   18c02:	4b0e      	ldr	r3, [pc, #56]	; (18c3c <xTaskCreate+0x194>)
   18c04:	681b      	ldr	r3, [r3, #0]
   18c06:	2b00      	cmp	r3, #0
   18c08:	d1ce      	bne.n	18ba8 <xTaskCreate+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   18c0a:	6833      	ldr	r3, [r6, #0]
   18c0c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   18c0e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   18c10:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   18c12:	bf98      	it	ls
   18c14:	6034      	strls	r4, [r6, #0]
   18c16:	e7c7      	b.n	18ba8 <xTaskCreate+0x100>
   18c18:	2007c6d8 	.word	0x2007c6d8
   18c1c:	2007c600 	.word	0x2007c600
   18c20:	2007c700 	.word	0x2007c700
   18c24:	2007c720 	.word	0x2007c720
   18c28:	2007c738 	.word	0x2007c738
   18c2c:	2007c604 	.word	0x2007c604
   18c30:	2007c608 	.word	0x2007c608
   18c34:	2007c6e4 	.word	0x2007c6e4
   18c38:	2007c6e8 	.word	0x2007c6e8
   18c3c:	2007c734 	.word	0x2007c734
   18c40:	e000ed04 	.word	0xe000ed04
   18c44:	2007c60c 	.word	0x2007c60c
   18c48:	2007c6ec 	.word	0x2007c6ec

00018c4c <eTaskGetState>:
eTaskGetState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   18c4c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   18c4e:	4b10      	ldr	r3, [pc, #64]	; (18c90 <eTaskGetState+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   18c50:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   18c52:	681b      	ldr	r3, [r3, #0]
   18c54:	4298      	cmp	r0, r3
   18c56:	d015      	beq.n	18c84 <eTaskGetState+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1284
			taskENTER_CRITICAL();
   18c58:	f7ff faa4 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1286
				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
   18c5c:	6965      	ldr	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1288
			taskEXIT_CRITICAL();
   18c5e:	f7ff fab1 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290
			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
   18c62:	4b0c      	ldr	r3, [pc, #48]	; (18c94 <eTaskGetState+0x48>)
   18c64:	681b      	ldr	r3, [r3, #0]
   18c66:	429d      	cmp	r5, r3
   18c68:	d00e      	beq.n	18c88 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290 (discriminator 1)
   18c6a:	4b0b      	ldr	r3, [pc, #44]	; (18c98 <eTaskGetState+0x4c>)
   18c6c:	681b      	ldr	r3, [r3, #0]
   18c6e:	429d      	cmp	r5, r3
   18c70:	d00a      	beq.n	18c88 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1298
				else if( pxStateList == &xSuspendedTaskList )
   18c72:	4b0a      	ldr	r3, [pc, #40]	; (18c9c <eTaskGetState+0x50>)
   18c74:	429d      	cmp	r5, r3
   18c76:	d109      	bne.n	18c8c <eTaskGetState+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1303
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
   18c78:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   18c7a:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1305
						eReturn = eSuspended;
   18c7c:	bf14      	ite	ne
   18c7e:	2002      	movne	r0, #2
   18c80:	2003      	moveq	r0, #3
   18c82:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1280
			eReturn = eRunning;
   18c84:	2000      	movs	r0, #0
   18c86:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1309
						eReturn = eBlocked;
   18c88:	2002      	movs	r0, #2
   18c8a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1328
				eReturn = eReady;
   18c8c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1333
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
   18c8e:	bd38      	pop	{r3, r4, r5, pc}
   18c90:	2007c600 	.word	0x2007c600
   18c94:	2007c604 	.word	0x2007c604
   18c98:	2007c608 	.word	0x2007c608
   18c9c:	2007c738 	.word	0x2007c738

00018ca0 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1827
{
   18ca0:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1860
		xReturn = xTaskCreate(	prvIdleTask,
   18ca2:	2400      	movs	r4, #0
   18ca4:	4b11      	ldr	r3, [pc, #68]	; (18cec <vTaskStartScheduler+0x4c>)
   18ca6:	9400      	str	r4, [sp, #0]
   18ca8:	9301      	str	r3, [sp, #4]
   18caa:	2280      	movs	r2, #128	; 0x80
   18cac:	4623      	mov	r3, r4
   18cae:	4910      	ldr	r1, [pc, #64]	; (18cf0 <vTaskStartScheduler+0x50>)
   18cb0:	4810      	ldr	r0, [pc, #64]	; (18cf4 <vTaskStartScheduler+0x54>)
   18cb2:	f7ff fef9 	bl	18aa8 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1881
	if( xReturn == pdPASS )
   18cb6:	2801      	cmp	r0, #1
   18cb8:	d116      	bne.n	18ce8 <vTaskStartScheduler+0x48>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   18cba:	f04f 0310 	mov.w	r3, #16
   18cbe:	f383 8811 	msr	BASEPRI, r3
   18cc2:	f3bf 8f6f 	isb	sy
   18cc6:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1898
		xNextTaskUnblockTime = portMAX_DELAY;
   18cca:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18cce:	4b0a      	ldr	r3, [pc, #40]	; (18cf8 <vTaskStartScheduler+0x58>)
   18cd0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1899
		xSchedulerRunning = pdTRUE;
   18cd2:	4b0a      	ldr	r3, [pc, #40]	; (18cfc <vTaskStartScheduler+0x5c>)
   18cd4:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1900
		xTickCount = ( TickType_t ) 0U;
   18cd6:	4b0a      	ldr	r3, [pc, #40]	; (18d00 <vTaskStartScheduler+0x60>)
   18cd8:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1905
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
   18cda:	f7ff fadb 	bl	18294 <rts_not_full_trace_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   18cde:	b002      	add	sp, #8
   18ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1909
		if( xPortStartScheduler() != pdFALSE )
   18ce4:	f7ff babe 	b.w	18264 <xPortStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   18ce8:	b002      	add	sp, #8
   18cea:	bd10      	pop	{r4, pc}
   18cec:	2007c714 	.word	0x2007c714
   18cf0:	0002562b 	.word	0x0002562b
   18cf4:	000189d1 	.word	0x000189d1
   18cf8:	2007c718 	.word	0x2007c718
   18cfc:	2007c734 	.word	0x2007c734
   18d00:	2007c74c 	.word	0x2007c74c

00018d04 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   18d04:	4a02      	ldr	r2, [pc, #8]	; (18d10 <vTaskSuspendAll+0xc>)
   18d06:	6813      	ldr	r3, [r2, #0]
   18d08:	3301      	adds	r3, #1
   18d0a:	6013      	str	r3, [r2, #0]
   18d0c:	4770      	bx	lr
   18d0e:	bf00      	nop
   18d10:	2007c6e0 	.word	0x2007c6e0

00018d14 <xTaskGetTickCount>:
xTaskGetTickCount():
   18d14:	4b01      	ldr	r3, [pc, #4]	; (18d1c <xTaskGetTickCount+0x8>)
   18d16:	6818      	ldr	r0, [r3, #0]
   18d18:	4770      	bx	lr
   18d1a:	bf00      	nop
   18d1c:	2007c74c 	.word	0x2007c74c

00018d20 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   18d20:	4b01      	ldr	r3, [pc, #4]	; (18d28 <xTaskGetTickCountFromISR+0x8>)
   18d22:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   18d24:	4770      	bx	lr
   18d26:	bf00      	nop
   18d28:	2007c74c 	.word	0x2007c74c

00018d2c <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2177
	return uxCurrentNumberOfTasks;
   18d2c:	4b01      	ldr	r3, [pc, #4]	; (18d34 <uxTaskGetNumberOfTasks+0x8>)
   18d2e:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2178
}
   18d30:	4770      	bx	lr
   18d32:	bf00      	nop
   18d34:	2007c6d8 	.word	0x2007c6d8

00018d38 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   18d38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   18d3c:	4b36      	ldr	r3, [pc, #216]	; (18e18 <xTaskIncrementTick+0xe0>)
   18d3e:	681b      	ldr	r3, [r3, #0]
   18d40:	2b00      	cmp	r3, #0
   18d42:	d147      	bne.n	18dd4 <xTaskIncrementTick+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   18d44:	4b35      	ldr	r3, [pc, #212]	; (18e1c <xTaskIncrementTick+0xe4>)
   18d46:	681c      	ldr	r4, [r3, #0]
   18d48:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   18d4a:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   18d4c:	b95c      	cbnz	r4, 18d66 <xTaskIncrementTick+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   18d4e:	4a34      	ldr	r2, [pc, #208]	; (18e20 <xTaskIncrementTick+0xe8>)
   18d50:	4b34      	ldr	r3, [pc, #208]	; (18e24 <xTaskIncrementTick+0xec>)
   18d52:	6811      	ldr	r1, [r2, #0]
   18d54:	6818      	ldr	r0, [r3, #0]
   18d56:	6010      	str	r0, [r2, #0]
   18d58:	4a33      	ldr	r2, [pc, #204]	; (18e28 <xTaskIncrementTick+0xf0>)
   18d5a:	6019      	str	r1, [r3, #0]
   18d5c:	6813      	ldr	r3, [r2, #0]
   18d5e:	3301      	adds	r3, #1
   18d60:	6013      	str	r3, [r2, #0]
   18d62:	f7ff fe49 	bl	189f8 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   18d66:	4d31      	ldr	r5, [pc, #196]	; (18e2c <xTaskIncrementTick+0xf4>)
   18d68:	f04f 0b00 	mov.w	fp, #0
   18d6c:	682b      	ldr	r3, [r5, #0]
   18d6e:	4f30      	ldr	r7, [pc, #192]	; (18e30 <xTaskIncrementTick+0xf8>)
   18d70:	429c      	cmp	r4, r3
   18d72:	d33e      	bcc.n	18df2 <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   18d74:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 18e20 <xTaskIncrementTick+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   18d78:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 18e40 <xTaskIncrementTick+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   18d7c:	f8d8 2000 	ldr.w	r2, [r8]
   18d80:	6812      	ldr	r2, [r2, #0]
   18d82:	bb72      	cbnz	r2, 18de2 <xTaskIncrementTick+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18d84:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18d88:	602a      	str	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   18d8a:	e032      	b.n	18df2 <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   18d8c:	f106 0a04 	add.w	sl, r6, #4
   18d90:	4650      	mov	r0, sl
   18d92:	f7ff fb1a 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   18d96:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   18d98:	b119      	cbz	r1, 18da2 <xTaskIncrementTick+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   18d9a:	f106 0018 	add.w	r0, r6, #24
   18d9e:	f7ff fb14 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   18da2:	2201      	movs	r2, #1
   18da4:	f04f 0e14 	mov.w	lr, #20
   18da8:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   18daa:	f8d9 3000 	ldr.w	r3, [r9]
   18dae:	fa02 f100 	lsl.w	r1, r2, r0
   18db2:	4319      	orrs	r1, r3
   18db4:	4b1f      	ldr	r3, [pc, #124]	; (18e34 <xTaskIncrementTick+0xfc>)
   18db6:	f8c9 1000 	str.w	r1, [r9]
   18dba:	fb0e 3000 	mla	r0, lr, r0, r3
   18dbe:	4651      	mov	r1, sl
   18dc0:	f7ff fae0 	bl	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   18dc4:	6838      	ldr	r0, [r7, #0]
   18dc6:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   18dc8:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   18dca:	4291      	cmp	r1, r2
   18dcc:	bf28      	it	cs
   18dce:	f04f 0b01 	movcs.w	fp, #1
   18dd2:	e7d3      	b.n	18d7c <xTaskIncrementTick+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   18dd4:	4a18      	ldr	r2, [pc, #96]	; (18e38 <xTaskIncrementTick+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   18dd6:	f04f 0b00 	mov.w	fp, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   18dda:	6813      	ldr	r3, [r2, #0]
   18ddc:	3301      	adds	r3, #1
   18dde:	6013      	str	r3, [r2, #0]
   18de0:	e011      	b.n	18e06 <xTaskIncrementTick+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   18de2:	f8d8 2000 	ldr.w	r2, [r8]
   18de6:	68d2      	ldr	r2, [r2, #12]
   18de8:	68d6      	ldr	r6, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   18dea:	6871      	ldr	r1, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   18dec:	428c      	cmp	r4, r1
   18dee:	d2cd      	bcs.n	18d8c <xTaskIncrementTick+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   18df0:	6029      	str	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   18df2:	683a      	ldr	r2, [r7, #0]
   18df4:	4b0f      	ldr	r3, [pc, #60]	; (18e34 <xTaskIncrementTick+0xfc>)
   18df6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   18df8:	2214      	movs	r2, #20
   18dfa:	434a      	muls	r2, r1
   18dfc:	589a      	ldr	r2, [r3, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   18dfe:	2a02      	cmp	r2, #2
   18e00:	bf28      	it	cs
   18e02:	f04f 0b01 	movcs.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   18e06:	4a0d      	ldr	r2, [pc, #52]	; (18e3c <xTaskIncrementTick+0x104>)
   18e08:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   18e0a:	2a00      	cmp	r2, #0
   18e0c:	bf18      	it	ne
   18e0e:	f04f 0b01 	movne.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   18e12:	4658      	mov	r0, fp
   18e14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e18:	2007c6e0 	.word	0x2007c6e0
   18e1c:	2007c74c 	.word	0x2007c74c
   18e20:	2007c604 	.word	0x2007c604
   18e24:	2007c608 	.word	0x2007c608
   18e28:	2007c71c 	.word	0x2007c71c
   18e2c:	2007c718 	.word	0x2007c718
   18e30:	2007c600 	.word	0x2007c600
   18e34:	2007c60c 	.word	0x2007c60c
   18e38:	2007c6dc 	.word	0x2007c6dc
   18e3c:	2007c750 	.word	0x2007c750
   18e40:	2007c6e8 	.word	0x2007c6e8

00018e44 <xTaskResumeAll>:
xTaskResumeAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   18e44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   18e48:	f7ff f9ac 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   18e4c:	4b2a      	ldr	r3, [pc, #168]	; (18ef8 <xTaskResumeAll+0xb4>)
   18e4e:	681a      	ldr	r2, [r3, #0]
   18e50:	3a01      	subs	r2, #1
   18e52:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   18e54:	681c      	ldr	r4, [r3, #0]
   18e56:	b12c      	cbz	r4, 18e64 <xTaskResumeAll+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   18e58:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   18e5a:	f7ff f9b3 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   18e5e:	4620      	mov	r0, r4
   18e60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   18e64:	4b25      	ldr	r3, [pc, #148]	; (18efc <xTaskResumeAll+0xb8>)
   18e66:	681b      	ldr	r3, [r3, #0]
   18e68:	2b00      	cmp	r3, #0
   18e6a:	d0f5      	beq.n	18e58 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   18e6c:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 18f14 <xTaskResumeAll+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   18e70:	4f23      	ldr	r7, [pc, #140]	; (18f00 <xTaskResumeAll+0xbc>)
   18e72:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 18f18 <xTaskResumeAll+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   18e76:	f8d9 3000 	ldr.w	r3, [r9]
   18e7a:	b9e3      	cbnz	r3, 18eb6 <xTaskResumeAll+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   18e7c:	b10c      	cbz	r4, 18e82 <xTaskResumeAll+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   18e7e:	f7ff fdbb 	bl	189f8 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   18e82:	4d20      	ldr	r5, [pc, #128]	; (18f04 <xTaskResumeAll+0xc0>)
   18e84:	682c      	ldr	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   18e86:	b144      	cbz	r4, 18e9a <xTaskResumeAll+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   18e88:	2701      	movs	r7, #1
   18e8a:	4e1f      	ldr	r6, [pc, #124]	; (18f08 <xTaskResumeAll+0xc4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   18e8c:	f7ff ff54 	bl	18d38 <xTaskIncrementTick>
   18e90:	b100      	cbz	r0, 18e94 <xTaskResumeAll+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   18e92:	6037      	str	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   18e94:	3c01      	subs	r4, #1
   18e96:	d1f9      	bne.n	18e8c <xTaskResumeAll+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   18e98:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   18e9a:	4b1b      	ldr	r3, [pc, #108]	; (18f08 <xTaskResumeAll+0xc4>)
   18e9c:	681b      	ldr	r3, [r3, #0]
   18e9e:	2b00      	cmp	r3, #0
   18ea0:	d0da      	beq.n	18e58 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   18ea2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18ea6:	4b19      	ldr	r3, [pc, #100]	; (18f0c <xTaskResumeAll+0xc8>)
   18ea8:	601a      	str	r2, [r3, #0]
   18eaa:	f3bf 8f4f 	dsb	sy
   18eae:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   18eb2:	2401      	movs	r4, #1
   18eb4:	e7d1      	b.n	18e5a <xTaskResumeAll+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   18eb6:	f8d9 300c 	ldr.w	r3, [r9, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   18eba:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   18ebc:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   18ebe:	1d26      	adds	r6, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   18ec0:	f104 0018 	add.w	r0, r4, #24
   18ec4:	f7ff fa81 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   18ec8:	4630      	mov	r0, r6
   18eca:	f7ff fa7e 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   18ece:	2014      	movs	r0, #20
   18ed0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   18ed2:	6839      	ldr	r1, [r7, #0]
   18ed4:	fa05 f302 	lsl.w	r3, r5, r2
   18ed8:	430b      	orrs	r3, r1
   18eda:	fb00 8002 	mla	r0, r0, r2, r8
   18ede:	4631      	mov	r1, r6
   18ee0:	603b      	str	r3, [r7, #0]
   18ee2:	f7ff fa4f 	bl	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   18ee6:	4b0a      	ldr	r3, [pc, #40]	; (18f10 <xTaskResumeAll+0xcc>)
   18ee8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   18eea:	681b      	ldr	r3, [r3, #0]
   18eec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   18eee:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   18ef0:	bf24      	itt	cs
   18ef2:	4b05      	ldrcs	r3, [pc, #20]	; (18f08 <xTaskResumeAll+0xc4>)
   18ef4:	601d      	strcs	r5, [r3, #0]
   18ef6:	e7be      	b.n	18e76 <xTaskResumeAll+0x32>
   18ef8:	2007c6e0 	.word	0x2007c6e0
   18efc:	2007c6d8 	.word	0x2007c6d8
   18f00:	2007c6e8 	.word	0x2007c6e8
   18f04:	2007c6dc 	.word	0x2007c6dc
   18f08:	2007c750 	.word	0x2007c750
   18f0c:	e000ed04 	.word	0xe000ed04
   18f10:	2007c600 	.word	0x2007c600
   18f14:	2007c720 	.word	0x2007c720
   18f18:	2007c60c 	.word	0x2007c60c

00018f1c <vTaskDelay>:
vTaskDelay():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   18f1c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   18f1e:	b940      	cbnz	r0, 18f32 <vTaskDelay+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   18f20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18f24:	4b08      	ldr	r3, [pc, #32]	; (18f48 <vTaskDelay+0x2c>)
   18f26:	601a      	str	r2, [r3, #0]
   18f28:	f3bf 8f4f 	dsb	sy
   18f2c:	f3bf 8f6f 	isb	sy
   18f30:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   18f32:	f7ff fee7 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   18f36:	2100      	movs	r1, #0
   18f38:	f7ff fd70 	bl	18a1c <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   18f3c:	f7ff ff82 	bl	18e44 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   18f40:	2800      	cmp	r0, #0
   18f42:	d0ed      	beq.n	18f20 <vTaskDelay+0x4>
   18f44:	bd08      	pop	{r3, pc}
   18f46:	bf00      	nop
   18f48:	e000ed04 	.word	0xe000ed04

00018f4c <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   18f4c:	4b26      	ldr	r3, [pc, #152]	; (18fe8 <vTaskSwitchContext+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   18f4e:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   18f50:	681a      	ldr	r2, [r3, #0]
   18f52:	4b26      	ldr	r3, [pc, #152]	; (18fec <vTaskSwitchContext+0xa0>)
   18f54:	b112      	cbz	r2, 18f5c <vTaskSwitchContext+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   18f56:	2201      	movs	r2, #1
   18f58:	601a      	str	r2, [r3, #0]
   18f5a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   18f5c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   18f5e:	f7ff f9a3 	bl	182a8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   18f62:	4a23      	ldr	r2, [pc, #140]	; (18ff0 <vTaskSwitchContext+0xa4>)
   18f64:	4c23      	ldr	r4, [pc, #140]	; (18ff4 <vTaskSwitchContext+0xa8>)
   18f66:	6815      	ldr	r5, [r2, #0]
   18f68:	42a8      	cmp	r0, r5
   18f6a:	d904      	bls.n	18f76 <vTaskSwitchContext+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   18f6c:	6821      	ldr	r1, [r4, #0]
   18f6e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   18f70:	1b5b      	subs	r3, r3, r5
   18f72:	4403      	add	r3, r0
   18f74:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   18f76:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   18f78:	6010      	str	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   18f7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   18f7c:	681a      	ldr	r2, [r3, #0]
   18f7e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   18f82:	d10b      	bne.n	18f9c <vTaskSwitchContext+0x50>
   18f84:	685a      	ldr	r2, [r3, #4]
   18f86:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   18f8a:	d107      	bne.n	18f9c <vTaskSwitchContext+0x50>
   18f8c:	689a      	ldr	r2, [r3, #8]
   18f8e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   18f92:	d103      	bne.n	18f9c <vTaskSwitchContext+0x50>
   18f94:	68db      	ldr	r3, [r3, #12]
   18f96:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   18f9a:	d004      	beq.n	18fa6 <vTaskSwitchContext+0x5a>
   18f9c:	6820      	ldr	r0, [r4, #0]
   18f9e:	6821      	ldr	r1, [r4, #0]
   18fa0:	3134      	adds	r1, #52	; 0x34
   18fa2:	f7ff f997 	bl	182d4 <vApplicationStackOverflowHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   18fa6:	4b14      	ldr	r3, [pc, #80]	; (18ff8 <vTaskSwitchContext+0xac>)
   18fa8:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   18faa:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   18fae:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   18fb0:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   18fb2:	f1c3 031f 	rsb	r3, r3, #31
   18fb6:	fb00 f203 	mul.w	r2, r0, r3
   18fba:	4910      	ldr	r1, [pc, #64]	; (18ffc <vTaskSwitchContext+0xb0>)
   18fbc:	188d      	adds	r5, r1, r2
   18fbe:	686e      	ldr	r6, [r5, #4]
   18fc0:	3208      	adds	r2, #8
   18fc2:	6876      	ldr	r6, [r6, #4]
   18fc4:	440a      	add	r2, r1
   18fc6:	4296      	cmp	r6, r2
   18fc8:	fb00 1303 	mla	r3, r0, r3, r1
   18fcc:	bf08      	it	eq
   18fce:	6872      	ldreq	r2, [r6, #4]
   18fd0:	606e      	str	r6, [r5, #4]
   18fd2:	bf08      	it	eq
   18fd4:	606a      	streq	r2, [r5, #4]
   18fd6:	685b      	ldr	r3, [r3, #4]
   18fd8:	68db      	ldr	r3, [r3, #12]
   18fda:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   18fdc:	6823      	ldr	r3, [r4, #0]
   18fde:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   18fe0:	4b07      	ldr	r3, [pc, #28]	; (19000 <vTaskSwitchContext+0xb4>)
   18fe2:	645a      	str	r2, [r3, #68]	; 0x44
   18fe4:	bd70      	pop	{r4, r5, r6, pc}
   18fe6:	bf00      	nop
   18fe8:	2007c6e0 	.word	0x2007c6e0
   18fec:	2007c750 	.word	0x2007c750
   18ff0:	2007c6d4 	.word	0x2007c6d4
   18ff4:	2007c600 	.word	0x2007c600
   18ff8:	2007c6e8 	.word	0x2007c6e8
   18ffc:	2007c60c 	.word	0x2007c60c
   19000:	40024000 	.word	0x40024000

00019004 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   19004:	b510      	push	{r4, lr}
   19006:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   19008:	4b05      	ldr	r3, [pc, #20]	; (19020 <vTaskPlaceOnEventList+0x1c>)
   1900a:	6819      	ldr	r1, [r3, #0]
   1900c:	3118      	adds	r1, #24
   1900e:	f7ff f9c5 	bl	1839c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   19012:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   19014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   19018:	2101      	movs	r1, #1
   1901a:	f7ff bcff 	b.w	18a1c <prvAddCurrentTaskToDelayedList>
   1901e:	bf00      	nop
   19020:	2007c600 	.word	0x2007c600

00019024 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   19024:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   19026:	68c3      	ldr	r3, [r0, #12]
   19028:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   1902a:	f104 0518 	add.w	r5, r4, #24
   1902e:	4628      	mov	r0, r5
   19030:	f7ff f9cb 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19034:	4b11      	ldr	r3, [pc, #68]	; (1907c <xTaskRemoveFromEventList+0x58>)
   19036:	681b      	ldr	r3, [r3, #0]
   19038:	b9e3      	cbnz	r3, 19074 <xTaskRemoveFromEventList+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   1903a:	1d25      	adds	r5, r4, #4
   1903c:	4628      	mov	r0, r5
   1903e:	f7ff f9c4 	bl	183ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   19042:	2301      	movs	r3, #1
   19044:	490e      	ldr	r1, [pc, #56]	; (19080 <xTaskRemoveFromEventList+0x5c>)
   19046:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19048:	6808      	ldr	r0, [r1, #0]
   1904a:	4093      	lsls	r3, r2
   1904c:	4303      	orrs	r3, r0
   1904e:	2014      	movs	r0, #20
   19050:	600b      	str	r3, [r1, #0]
   19052:	4629      	mov	r1, r5
   19054:	4b0b      	ldr	r3, [pc, #44]	; (19084 <xTaskRemoveFromEventList+0x60>)
   19056:	fb00 3002 	mla	r0, r0, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   1905a:	f7ff f993 	bl	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   1905e:	4b0a      	ldr	r3, [pc, #40]	; (19088 <xTaskRemoveFromEventList+0x64>)
   19060:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19062:	681b      	ldr	r3, [r3, #0]
   19064:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19066:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   19068:	bf85      	ittet	hi
   1906a:	2001      	movhi	r0, #1
   1906c:	4b07      	ldrhi	r3, [pc, #28]	; (1908c <xTaskRemoveFromEventList+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   1906e:	2000      	movls	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   19070:	6018      	strhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   19072:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   19074:	4629      	mov	r1, r5
   19076:	4806      	ldr	r0, [pc, #24]	; (19090 <xTaskRemoveFromEventList+0x6c>)
   19078:	e7ef      	b.n	1905a <xTaskRemoveFromEventList+0x36>
   1907a:	bf00      	nop
   1907c:	2007c6e0 	.word	0x2007c6e0
   19080:	2007c6e8 	.word	0x2007c6e8
   19084:	2007c60c 	.word	0x2007c60c
   19088:	2007c600 	.word	0x2007c600
   1908c:	2007c750 	.word	0x2007c750
   19090:	2007c720 	.word	0x2007c720

00019094 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   19094:	4b03      	ldr	r3, [pc, #12]	; (190a4 <vTaskSetTimeOutState+0x10>)
   19096:	681b      	ldr	r3, [r3, #0]
   19098:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   1909a:	4b03      	ldr	r3, [pc, #12]	; (190a8 <vTaskSetTimeOutState+0x14>)
   1909c:	681b      	ldr	r3, [r3, #0]
   1909e:	6043      	str	r3, [r0, #4]
   190a0:	4770      	bx	lr
   190a2:	bf00      	nop
   190a4:	2007c71c 	.word	0x2007c71c
   190a8:	2007c74c 	.word	0x2007c74c

000190ac <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   190ac:	b538      	push	{r3, r4, r5, lr}
   190ae:	460d      	mov	r5, r1
   190b0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   190b2:	f7ff f877 	bl	181a4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   190b6:	4b0e      	ldr	r3, [pc, #56]	; (190f0 <xTaskCheckForTimeOut+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   190b8:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   190ba:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   190bc:	1c53      	adds	r3, r2, #1
   190be:	d010      	beq.n	190e2 <xTaskCheckForTimeOut+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   190c0:	4b0c      	ldr	r3, [pc, #48]	; (190f4 <xTaskCheckForTimeOut+0x48>)
   190c2:	6821      	ldr	r1, [r4, #0]
   190c4:	681b      	ldr	r3, [r3, #0]
   190c6:	4299      	cmp	r1, r3
   190c8:	6863      	ldr	r3, [r4, #4]
   190ca:	d001      	beq.n	190d0 <xTaskCheckForTimeOut+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   190cc:	4298      	cmp	r0, r3
   190ce:	d20d      	bcs.n	190ec <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   190d0:	1ac1      	subs	r1, r0, r3
   190d2:	428a      	cmp	r2, r1
   190d4:	d90a      	bls.n	190ec <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   190d6:	1a1b      	subs	r3, r3, r0
   190d8:	4413      	add	r3, r2
   190da:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   190dc:	4620      	mov	r0, r4
   190de:	f7ff ffd9 	bl	19094 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   190e2:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   190e4:	f7ff f86e 	bl	181c4 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   190e8:	4620      	mov	r0, r4
   190ea:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   190ec:	2401      	movs	r4, #1
   190ee:	e7f9      	b.n	190e4 <xTaskCheckForTimeOut+0x38>
   190f0:	2007c74c 	.word	0x2007c74c
   190f4:	2007c71c 	.word	0x2007c71c

000190f8 <vTaskMissedYield>:
vTaskMissedYield():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   190f8:	2201      	movs	r2, #1
   190fa:	4b01      	ldr	r3, [pc, #4]	; (19100 <vTaskMissedYield+0x8>)
   190fc:	601a      	str	r2, [r3, #0]
   190fe:	4770      	bx	lr
   19100:	2007c750 	.word	0x2007c750

00019104 <vTaskGetInfo>:
vTaskGetInfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3412
	{
   19104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19108:	460c      	mov	r4, r1
   1910a:	4617      	mov	r7, r2
   1910c:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416
		pxTCB = prvGetTCBFromHandle( xTask );
   1910e:	4606      	mov	r6, r0
   19110:	bb58      	cbnz	r0, 1916a <vTaskGetInfo+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416 (discriminator 1)
   19112:	4b1b      	ldr	r3, [pc, #108]	; (19180 <vTaskGetInfo+0x7c>)
   19114:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3419 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
   19116:	f105 0334 	add.w	r3, r5, #52	; 0x34
   1911a:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   1911c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3418 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
   1911e:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   19120:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3421 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
   19122:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   19124:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3422 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
   19126:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   19128:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3429 (discriminator 4)
			if( pxTaskStatus->eCurrentState == eSuspended )
   1912a:	7b23      	ldrb	r3, [r4, #12]
   1912c:	2b03      	cmp	r3, #3
   1912e:	d107      	bne.n	19140 <vTaskGetInfo+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3431
				vTaskSuspendAll();
   19130:	f7ff fde8 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3433
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   19134:	6aab      	ldr	r3, [r5, #40]	; 0x28
   19136:	b10b      	cbz	r3, 1913c <vTaskGetInfo+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3435
						pxTaskStatus->eCurrentState = eBlocked;
   19138:	2302      	movs	r3, #2
   1913a:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3438
				xTaskResumeAll();
   1913c:	f7ff fe82 	bl	18e44 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19140:	6c6b      	ldr	r3, [r5, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   19142:	f1b8 0f05 	cmp.w	r8, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19146:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3455
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
   19148:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   1914a:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   1914c:	d00f      	beq.n	1916e <vTaskGetInfo+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3468
			pxTaskStatus->eCurrentState = eState;
   1914e:	f884 800c 	strb.w	r8, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3477
		if( xGetFreeStackSpace != pdFALSE )
   19152:	b18f      	cbz	r7, 19178 <vTaskGetInfo+0x74>
   19154:	6b29      	ldr	r1, [r5, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3485
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
   19156:	460a      	mov	r2, r1
   19158:	1a53      	subs	r3, r2, r1
prvTaskCheckFreeStackSpace():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   1915a:	f812 0b01 	ldrb.w	r0, [r2], #1
   1915e:	28a5      	cmp	r0, #165	; 0xa5
   19160:	d0fa      	beq.n	19158 <vTaskGetInfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3543
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
   19162:	089b      	lsrs	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3545
		return ( uint16_t ) ulCount;
   19164:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
   19166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1916a:	4605      	mov	r5, r0
   1916c:	e7d3      	b.n	19116 <vTaskGetInfo+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3472
			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
   1916e:	4630      	mov	r0, r6
   19170:	f7ff fd6c 	bl	18c4c <eTaskGetState>
   19174:	7320      	strb	r0, [r4, #12]
   19176:	e7ec      	b.n	19152 <vTaskGetInfo+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3491
			pxTaskStatus->usStackHighWaterMark = 0;
   19178:	8427      	strh	r7, [r4, #32]
   1917a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1917e:	bf00      	nop
   19180:	2007c600 	.word	0x2007c600

00019184 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   19184:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19188:	680d      	ldr	r5, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   1918a:	4681      	mov	r9, r0
   1918c:	460c      	mov	r4, r1
   1918e:	4693      	mov	fp, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19190:	b31d      	cbz	r5, 191da <prvListTasksWithinSingleList+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3503
	UBaseType_t uxTask = 0;
   19192:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19194:	f04f 0a24 	mov.w	sl, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3507
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   19198:	684b      	ldr	r3, [r1, #4]
   1919a:	f101 0708 	add.w	r7, r1, #8
   1919e:	685b      	ldr	r3, [r3, #4]
   191a0:	42bb      	cmp	r3, r7
   191a2:	604b      	str	r3, [r1, #4]
   191a4:	bf04      	itt	eq
   191a6:	68cb      	ldreq	r3, [r1, #12]
   191a8:	604b      	streq	r3, [r1, #4]
   191aa:	684b      	ldr	r3, [r1, #4]
   191ac:	f8d3 800c 	ldr.w	r8, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   191b0:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   191b2:	fb0a 9105 	mla	r1, sl, r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   191b6:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   191b8:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   191ba:	429f      	cmp	r7, r3
   191bc:	6063      	str	r3, [r4, #4]
   191be:	bf08      	it	eq
   191c0:	68e3      	ldreq	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3517
				uxTask++;
   191c2:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   191c6:	bf08      	it	eq
   191c8:	6063      	streq	r3, [r4, #4]
   191ca:	6863      	ldr	r3, [r4, #4]
   191cc:	68de      	ldr	r6, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   191ce:	465b      	mov	r3, fp
   191d0:	4630      	mov	r0, r6
   191d2:	f7ff ff97 	bl	19104 <vTaskGetInfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3518
			} while( pxNextTCB != pxFirstTCB );
   191d6:	45b0      	cmp	r8, r6
   191d8:	d1ea      	bne.n	191b0 <prvListTasksWithinSingleList+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3526
	}
   191da:	4628      	mov	r0, r5
   191dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000191e0 <uxTaskGetSystemState>:
uxTaskGetSystemState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2322
	{
   191e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   191e4:	4606      	mov	r6, r0
   191e6:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2325
		vTaskSuspendAll();
   191e8:	f7ff fd8c 	bl	18d04 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2328
			if( uxArraySize >= uxCurrentNumberOfTasks )
   191ec:	4b1d      	ldr	r3, [pc, #116]	; (19264 <uxTaskGetSystemState+0x84>)
   191ee:	681b      	ldr	r3, [r3, #0]
   191f0:	428b      	cmp	r3, r1
   191f2:	d834      	bhi.n	1925e <uxTaskGetSystemState+0x7e>
   191f4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   191f6:	2724      	movs	r7, #36	; 0x24
   191f8:	462c      	mov	r4, r5
   191fa:	f8df 9078 	ldr.w	r9, [pc, #120]	; 19274 <uxTaskGetSystemState+0x94>
   191fe:	f105 01b4 	add.w	r1, r5, #180	; 0xb4
   19202:	fb07 6004 	mla	r0, r7, r4, r6
   19206:	2201      	movs	r2, #1
   19208:	4449      	add	r1, r9
   1920a:	f7ff ffbb 	bl	19184 <prvListTasksWithinSingleList>
   1920e:	3d14      	subs	r5, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19210:	f115 0fc8 	cmn.w	r5, #200	; 0xc8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   19214:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19216:	d1f2      	bne.n	191fe <uxTaskGetSystemState+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   19218:	4b13      	ldr	r3, [pc, #76]	; (19268 <uxTaskGetSystemState+0x88>)
   1921a:	2202      	movs	r2, #2
   1921c:	6819      	ldr	r1, [r3, #0]
   1921e:	fb07 6004 	mla	r0, r7, r4, r6
   19222:	f7ff ffaf 	bl	19184 <prvListTasksWithinSingleList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   19226:	4b11      	ldr	r3, [pc, #68]	; (1926c <uxTaskGetSystemState+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   19228:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   1922a:	6819      	ldr	r1, [r3, #0]
   1922c:	2202      	movs	r2, #2
   1922e:	fb07 6004 	mla	r0, r7, r4, r6
   19232:	f7ff ffa7 	bl	19184 <prvListTasksWithinSingleList>
   19236:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2356
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
   19238:	fb07 6004 	mla	r0, r7, r4, r6
   1923c:	2203      	movs	r2, #3
   1923e:	490c      	ldr	r1, [pc, #48]	; (19270 <uxTaskGetSystemState+0x90>)
   19240:	f7ff ffa0 	bl	19184 <prvListTasksWithinSingleList>
   19244:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2362
					if( pulTotalRunTime != NULL )
   19246:	f1b8 0f00 	cmp.w	r8, #0
   1924a:	d003      	beq.n	19254 <uxTaskGetSystemState+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2367
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   1924c:	f7ff f82c 	bl	182a8 <rts_not_full_trace_get>
   19250:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2385
		( void ) xTaskResumeAll();
   19254:	f7ff fdf6 	bl	18e44 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2388
	}
   19258:	4620      	mov	r0, r4
   1925a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2323
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
   1925e:	2400      	movs	r4, #0
   19260:	e7f8      	b.n	19254 <uxTaskGetSystemState+0x74>
   19262:	bf00      	nop
   19264:	2007c6d8 	.word	0x2007c6d8
   19268:	2007c604 	.word	0x2007c604
   1926c:	2007c608 	.word	0x2007c608
   19270:	2007c738 	.word	0x2007c738
   19274:	2007c60c 	.word	0x2007c60c

00019278 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   19278:	4b05      	ldr	r3, [pc, #20]	; (19290 <xTaskGetSchedulerState+0x18>)
   1927a:	681b      	ldr	r3, [r3, #0]
   1927c:	b133      	cbz	r3, 1928c <xTaskGetSchedulerState+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1927e:	4b05      	ldr	r3, [pc, #20]	; (19294 <xTaskGetSchedulerState+0x1c>)
   19280:	681b      	ldr	r3, [r3, #0]
   19282:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   19284:	bf0c      	ite	eq
   19286:	2002      	moveq	r0, #2
   19288:	2000      	movne	r0, #0
   1928a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   1928c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   1928e:	4770      	bx	lr
   19290:	2007c734 	.word	0x2007c734
   19294:	2007c6e0 	.word	0x2007c6e0

00019298 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   19298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   1929c:	4604      	mov	r4, r0
   1929e:	2800      	cmp	r0, #0
   192a0:	d039      	beq.n	19316 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   192a2:	4d1e      	ldr	r5, [pc, #120]	; (1931c <vTaskPriorityInherit+0x84>)
   192a4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   192a6:	682a      	ldr	r2, [r5, #0]
   192a8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   192aa:	4293      	cmp	r3, r2
   192ac:	d233      	bcs.n	19316 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   192ae:	2714      	movs	r7, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   192b0:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   192b2:	4e1b      	ldr	r6, [pc, #108]	; (19320 <vTaskPriorityInherit+0x88>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   192b4:	2a00      	cmp	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   192b6:	bfa8      	it	ge
   192b8:	682a      	ldrge	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   192ba:	fb07 6303 	mla	r3, r7, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   192be:	bfa2      	ittt	ge
   192c0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   192c2:	f1c2 020a 	rsbge	r2, r2, #10
   192c6:	6182      	strge	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   192c8:	6942      	ldr	r2, [r0, #20]
   192ca:	429a      	cmp	r2, r3
   192cc:	d120      	bne.n	19310 <vTaskPriorityInherit+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   192ce:	f100 0804 	add.w	r8, r0, #4
   192d2:	4640      	mov	r0, r8
   192d4:	f7ff f879 	bl	183ca <uxListRemove>
   192d8:	4a12      	ldr	r2, [pc, #72]	; (19324 <vTaskPriorityInherit+0x8c>)
   192da:	b948      	cbnz	r0, 192f0 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   192dc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   192de:	4347      	muls	r7, r0
   192e0:	59f3      	ldr	r3, [r6, r7]
   192e2:	b92b      	cbnz	r3, 192f0 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   192e4:	2101      	movs	r1, #1
   192e6:	6813      	ldr	r3, [r2, #0]
   192e8:	4081      	lsls	r1, r0
   192ea:	ea23 0301 	bic.w	r3, r3, r1
   192ee:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   192f0:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   192f2:	6811      	ldr	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   192f4:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   192f6:	2301      	movs	r3, #1
   192f8:	4083      	lsls	r3, r0
   192fa:	430b      	orrs	r3, r1
   192fc:	6013      	str	r3, [r2, #0]
   192fe:	2314      	movs	r3, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19300:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19302:	4641      	mov	r1, r8
   19304:	fb03 6000 	mla	r0, r3, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   19308:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   1930c:	f7ff b83a 	b.w	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19310:	682b      	ldr	r3, [r5, #0]
   19312:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19314:	62c3      	str	r3, [r0, #44]	; 0x2c
   19316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1931a:	bf00      	nop
   1931c:	2007c600 	.word	0x2007c600
   19320:	2007c60c 	.word	0x2007c60c
   19324:	2007c6e8 	.word	0x2007c6e8

00019328 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   19328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   1932a:	4604      	mov	r4, r0
   1932c:	b908      	cbnz	r0, 19332 <xTaskPriorityDisinherit+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   1932e:	2000      	movs	r0, #0
   19330:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19332:	6c83      	ldr	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19334:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   19336:	6c42      	ldr	r2, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19338:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   1933a:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   1933c:	6483      	str	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   1933e:	d0f6      	beq.n	1932e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   19340:	2b00      	cmp	r3, #0
   19342:	d1f4      	bne.n	1932e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19344:	1d05      	adds	r5, r0, #4
   19346:	4628      	mov	r0, r5
   19348:	f7ff f83f 	bl	183ca <uxListRemove>
   1934c:	4e10      	ldr	r6, [pc, #64]	; (19390 <xTaskPriorityDisinherit+0x68>)
   1934e:	4a11      	ldr	r2, [pc, #68]	; (19394 <xTaskPriorityDisinherit+0x6c>)
   19350:	b950      	cbnz	r0, 19368 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   19352:	2114      	movs	r1, #20
   19354:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   19356:	4379      	muls	r1, r7
   19358:	5873      	ldr	r3, [r6, r1]
   1935a:	b92b      	cbnz	r3, 19368 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   1935c:	2001      	movs	r0, #1
   1935e:	6813      	ldr	r3, [r2, #0]
   19360:	40b8      	lsls	r0, r7
   19362:	ea23 0300 	bic.w	r3, r3, r0
   19366:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   19368:	6c63      	ldr	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1936a:	f1c3 010a 	rsb	r1, r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   1936e:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19370:	61a1      	str	r1, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   19372:	2401      	movs	r4, #1
   19374:	6811      	ldr	r1, [r2, #0]
   19376:	fa04 f003 	lsl.w	r0, r4, r3
   1937a:	4308      	orrs	r0, r1
   1937c:	6010      	str	r0, [r2, #0]
   1937e:	2014      	movs	r0, #20
   19380:	4629      	mov	r1, r5
   19382:	fb00 6003 	mla	r0, r0, r3, r6
   19386:	f7fe fffd 	bl	18384 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   1938a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   1938c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1938e:	bf00      	nop
   19390:	2007c60c 	.word	0x2007c60c
   19394:	2007c6e8 	.word	0x2007c6e8

00019398 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   19398:	4b04      	ldr	r3, [pc, #16]	; (193ac <pvTaskIncrementMutexHeldCount+0x14>)
   1939a:	681a      	ldr	r2, [r3, #0]
   1939c:	b11a      	cbz	r2, 193a6 <pvTaskIncrementMutexHeldCount+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   1939e:	6819      	ldr	r1, [r3, #0]
   193a0:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   193a2:	3201      	adds	r2, #1
   193a4:	648a      	str	r2, [r1, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   193a6:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   193a8:	4770      	bx	lr
   193aa:	bf00      	nop
   193ac:	2007c600 	.word	0x2007c600

000193b0 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:51
}

void vTaskResetRunTimeStats(void)
{
   193b0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:53
    BaseType_t uxQueue = configMAX_PRIORITIES;
    vTaskSuspendAll();
   193b2:	f7ff fca7 	bl	18d04 <vTaskSuspendAll>
   193b6:	24b4      	movs	r4, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:58
    {
        do
        {
            uxQueue--;
            if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE)
   193b8:	4d12      	ldr	r5, [pc, #72]	; (19404 <vTaskResetRunTimeStats+0x54>)
   193ba:	5963      	ldr	r3, [r4, r5]
   193bc:	b113      	cbz	r3, 193c4 <vTaskResetRunTimeStats+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:60
            {
                prvResetRunTimeStatsInList(
   193be:	1928      	adds	r0, r5, r4
   193c0:	f7ff faef 	bl	189a2 <prvResetRunTimeStatsInList>
   193c4:	3c14      	subs	r4, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:63
                        (List_t *) &(pxReadyTasksLists[uxQueue]));
            }
        } while (uxQueue > ( unsigned portBASE_TYPE ) tskIDLE_PRIORITY);
   193c6:	f114 0f14 	cmn.w	r4, #20
   193ca:	d1f6      	bne.n	193ba <vTaskResetRunTimeStats+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:65

        if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE)
   193cc:	4b0e      	ldr	r3, [pc, #56]	; (19408 <vTaskResetRunTimeStats+0x58>)
   193ce:	681a      	ldr	r2, [r3, #0]
   193d0:	6812      	ldr	r2, [r2, #0]
   193d2:	b112      	cbz	r2, 193da <vTaskResetRunTimeStats+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:67
        {
            prvResetRunTimeStatsInList((List_t *) pxDelayedTaskList);
   193d4:	6818      	ldr	r0, [r3, #0]
   193d6:	f7ff fae4 	bl	189a2 <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:70
        }

        if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE)
   193da:	4b0c      	ldr	r3, [pc, #48]	; (1940c <vTaskResetRunTimeStats+0x5c>)
   193dc:	681a      	ldr	r2, [r3, #0]
   193de:	6812      	ldr	r2, [r2, #0]
   193e0:	b112      	cbz	r2, 193e8 <vTaskResetRunTimeStats+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:72
        {
            prvResetRunTimeStatsInList((List_t *) pxOverflowDelayedTaskList);
   193e2:	6818      	ldr	r0, [r3, #0]
   193e4:	f7ff fadd 	bl	189a2 <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:86
        }
#endif

#if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
   193e8:	4809      	ldr	r0, [pc, #36]	; (19410 <vTaskResetRunTimeStats+0x60>)
   193ea:	6803      	ldr	r3, [r0, #0]
   193ec:	b10b      	cbz	r3, 193f2 <vTaskResetRunTimeStats+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:88
            {
                prvResetRunTimeStatsInList(( List_t * ) &xSuspendedTaskList );
   193ee:	f7ff fad8 	bl	189a2 <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:92
            }
        }
#endif
        ulTaskSwitchedInTime = 0;
   193f2:	2200      	movs	r2, #0
   193f4:	4b07      	ldr	r3, [pc, #28]	; (19414 <vTaskResetRunTimeStats+0x64>)
   193f6:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:93
        portRESET_TIMER_FOR_RUN_TIME_STATS();
   193f8:	f7fe ff60 	bl	182bc <rts_not_full_trace_reset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:96
    }
    xTaskResumeAll();
}
   193fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:95
    xTaskResumeAll();
   19400:	f7ff bd20 	b.w	18e44 <xTaskResumeAll>
   19404:	2007c60c 	.word	0x2007c60c
   19408:	2007c604 	.word	0x2007c604
   1940c:	2007c608 	.word	0x2007c608
   19410:	2007c738 	.word	0x2007c738
   19414:	2007c6d4 	.word	0x2007c6d4

00019418 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99

    void vRunTimeStatIsrEntry()
    {
   19418:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   1941a:	f7fe ff45 	bl	182a8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   1941e:	4b06      	ldr	r3, [pc, #24]	; (19438 <vRunTimeStatIsrEntry+0x20>)
   19420:	4a06      	ldr	r2, [pc, #24]	; (1943c <vRunTimeStatIsrEntry+0x24>)
   19422:	6819      	ldr	r1, [r3, #0]
   19424:	b129      	cbz	r1, 19432 <vRunTimeStatIsrEntry+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   19426:	6819      	ldr	r1, [r3, #0]
   19428:	6814      	ldr	r4, [r2, #0]
   1942a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   1942c:	1b1b      	subs	r3, r3, r4
   1942e:	4403      	add	r3, r0
   19430:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   19432:	6010      	str	r0, [r2, #0]
   19434:	bd10      	pop	{r4, pc}
   19436:	bf00      	nop
   19438:	2007c600 	.word	0x2007c600
   1943c:	2007c6d4 	.word	0x2007c6d4

00019440 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   19440:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   19442:	f7fe ff31 	bl	182a8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   19446:	4b01      	ldr	r3, [pc, #4]	; (1944c <vRunTimeStatIsrExit+0xc>)
   19448:	6018      	str	r0, [r3, #0]
   1944a:	bd08      	pop	{r3, pc}
   1944c:	2007c6d4 	.word	0x2007c6d4

00019450 <stream_tlm(char const*, void*)>:
_ZL10stream_tlmPKcPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:609
    return true;
}

#if (SYS_CFG_ENABLE_TLM)
static void stream_tlm(const char *s, void *arg)
{
   19450:	b538      	push	{r3, r4, r5, lr}
   19452:	460c      	mov	r4, r1
   19454:	1e45      	subs	r5, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    CharDev *out = (CharDev*) arg;
    while (*s) {
   19456:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   1945a:	b131      	cbz	r1, 1946a <stream_tlm(char const*, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:612
        out->putChar(*s);
   1945c:	6823      	ldr	r3, [r4, #0]
   1945e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19462:	685b      	ldr	r3, [r3, #4]
   19464:	4620      	mov	r0, r4
   19466:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    while (*s) {
   19468:	e7f5      	b.n	19456 <stream_tlm(char const*, void*)+0x6>
   1946a:	bd38      	pop	{r3, r4, r5, pc}

0001946c <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   1946c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   1946e:	4d10      	ldr	r5, [pc, #64]	; (194b0 <Storage::getFlashDrive()+0x44>)
   19470:	4e10      	ldr	r6, [pc, #64]	; (194b4 <Storage::getFlashDrive()+0x48>)
   19472:	782c      	ldrb	r4, [r5, #0]
   19474:	f3bf 8f5b 	dmb	ish
   19478:	f014 0401 	ands.w	r4, r4, #1
   1947c:	d115      	bne.n	194aa <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   1947e:	4628      	mov	r0, r5
   19480:	f002 ffad 	bl	1c3de <__cxa_guard_acquire>
   19484:	b188      	cbz	r0, 194aa <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   19486:	f44f 700e 	mov.w	r0, #568	; 0x238
   1948a:	f7fd fa2b 	bl	168e4 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   1948e:	2330      	movs	r3, #48	; 0x30
   19490:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19494:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   19496:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   1949a:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   1949e:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   194a2:	6030      	str	r0, [r6, #0]
   194a4:	4628      	mov	r0, r5
   194a6:	f002 ffa6 	bl	1c3f6 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   194aa:	6830      	ldr	r0, [r6, #0]
   194ac:	bd70      	pop	{r4, r5, r6, pc}
   194ae:	bf00      	nop
   194b0:	2007c764 	.word	0x2007c764
   194b4:	2007c768 	.word	0x2007c768

000194b8 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:55

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
   194b8:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   194ba:	4d10      	ldr	r5, [pc, #64]	; (194fc <Storage::getSDDrive()+0x44>)
   194bc:	4e10      	ldr	r6, [pc, #64]	; (19500 <Storage::getSDDrive()+0x48>)
   194be:	782b      	ldrb	r3, [r5, #0]
   194c0:	f3bf 8f5b 	dmb	ish
   194c4:	f013 0401 	ands.w	r4, r3, #1
   194c8:	d116      	bne.n	194f8 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 1)
   194ca:	4628      	mov	r0, r5
   194cc:	f002 ff87 	bl	1c3de <__cxa_guard_acquire>
   194d0:	b190      	cbz	r0, 194f8 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   194d2:	f44f 700e 	mov.w	r0, #568	; 0x238
   194d6:	f7fd fa05 	bl	168e4 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   194da:	2301      	movs	r3, #1
   194dc:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)
            mVolStr[0] = volumeNum + '0';
   194e0:	2331      	movs	r3, #49	; 0x31
   194e2:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   194e6:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   194e8:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   194ec:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   194f0:	6030      	str	r0, [r6, #0]
   194f2:	4628      	mov	r0, r5
   194f4:	f002 ff7f 	bl	1c3f6 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:59
            return *pSDCardDrive;
        }
   194f8:	6830      	ldr	r0, [r6, #0]
   194fa:	bd70      	pop	{r4, r5, r6, pc}
   194fc:	2007c75c 	.word	0x2007c75c
   19500:	2007c760 	.word	0x2007c760

00019504 <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:51
{
   19504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19508:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
   1950c:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:54
    const int delayInMs = (int)cmdParams;  // cast parameter str to integer
   1950e:	f7fd f8fa 	bl	16706 <str::operator int() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:56
    if(delayInMs > 0) {
   19512:	1e04      	subs	r4, r0, #0
   19514:	dd04      	ble.n	19520 <taskListHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:57
        vTaskResetRunTimeStats();
   19516:	f7ff ff4b 	bl	193b0 <vTaskResetRunTimeStats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:58
        vTaskDelayMs(delayInMs);
   1951a:	4620      	mov	r0, r4
   1951c:	f7ff fcfe 	bl	18f1c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19520:	f10d 0914 	add.w	r9, sp, #20
   19524:	464c      	mov	r4, r9
   19526:	4d2a      	ldr	r5, [pc, #168]	; (195d0 <taskListHandler(str&, CharDev&, void*)+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19528:	f04f 0b64 	mov.w	fp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   1952c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1952e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19530:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19532:	aa04      	add	r2, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19534:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   19536:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19538:	2110      	movs	r1, #16
   1953a:	a80a      	add	r0, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   1953c:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   1953e:	f7ff fe4f 	bl	191e0 <uxTaskGetSystemState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19542:	4a24      	ldr	r2, [pc, #144]	; (195d4 <taskListHandler(str&, CharDev&, void*)+0xd0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19544:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19546:	4924      	ldr	r1, [pc, #144]	; (195d8 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   19548:	4638      	mov	r0, r7
   1954a:	f7fe f885 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:68
    uint32_t tasksRunTime = 0;
   1954e:	4626      	mov	r6, r4
   19550:	f04f 0800 	mov.w	r8, #0
   19554:	ad0a      	add	r5, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 1)
        for (unsigned i = 0; i < uxArraySize; i++) {
   19556:	45d0      	cmp	r8, sl
   19558:	d01c      	beq.n	19594 <taskListHandler(str&, CharDev&, void*)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:78
            if (e->uxBasePriority == priorityNum) {
   1955a:	696b      	ldr	r3, [r5, #20]
   1955c:	42a3      	cmp	r3, r4
   1955e:	d115      	bne.n	1958c <taskListHandler(str&, CharDev&, void*)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19560:	69aa      	ldr	r2, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19562:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19564:	4416      	add	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19566:	b11b      	cbz	r3, 19570 <taskListHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81 (discriminator 1)
   19568:	fbb3 f3fb 	udiv	r3, r3, fp
   1956c:	fbb2 f3f3 	udiv	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:86 (discriminator 4)
                              e->pcTaskName, taskStatusTbl[e->eCurrentState], e->uxBasePriority,
   19570:	7b29      	ldrb	r1, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19572:	9203      	str	r2, [sp, #12]
   19574:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   19576:	8c2b      	ldrh	r3, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19578:	9400      	str	r4, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   1957a:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   1957c:	9301      	str	r3, [sp, #4]
   1957e:	f859 3021 	ldr.w	r3, [r9, r1, lsl #2]
   19582:	686a      	ldr	r2, [r5, #4]
   19584:	4915      	ldr	r1, [pc, #84]	; (195dc <taskListHandler(str&, CharDev&, void*)+0xd8>)
   19586:	4638      	mov	r0, r7
   19588:	f7fe f866 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 2)
        for (unsigned i = 0; i < uxArraySize; i++) {
   1958c:	f108 0801 	add.w	r8, r8, #1
   19590:	3524      	adds	r5, #36	; 0x24
   19592:	e7e0      	b.n	19556 <taskListHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:73 (discriminator 2)
    for(unsigned priorityNum = 0; priorityNum < configMAX_PRIORITIES; priorityNum++)
   19594:	3401      	adds	r4, #1
   19596:	2c0a      	cmp	r4, #10
   19598:	d1da      	bne.n	19550 <taskListHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   1959a:	2264      	movs	r2, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   1959c:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   1959e:	4910      	ldr	r1, [pc, #64]	; (195e0 <taskListHandler(str&, CharDev&, void*)+0xdc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   195a0:	1b9e      	subs	r6, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   195a2:	fbb3 f3f2 	udiv	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   195a6:	9600      	str	r6, [sp, #0]
   195a8:	fbb6 f3f3 	udiv	r3, r6, r3
   195ac:	4a0d      	ldr	r2, [pc, #52]	; (195e4 <taskListHandler(str&, CharDev&, void*)+0xe0>)
   195ae:	4638      	mov	r0, r7
   195b0:	f7fe f852 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:100
    if (uxTaskGetNumberOfTasks() > maxTasks) {
   195b4:	f7ff fbba 	bl	18d2c <uxTaskGetNumberOfTasks>
   195b8:	2810      	cmp	r0, #16
   195ba:	d904      	bls.n	195c6 <taskListHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:101
        output.printf("** WARNING: Only reported first %u tasks\n", maxTasks);
   195bc:	2210      	movs	r2, #16
   195be:	490a      	ldr	r1, [pc, #40]	; (195e8 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   195c0:	4638      	mov	r0, r7
   195c2:	f7fe f849 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:105
}
   195c6:	2001      	movs	r0, #1
   195c8:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
   195cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195d0:	00025630 	.word	0x00025630
   195d4:	00025bff 	.word	0x00025bff
   195d8:	00025c04 	.word	0x00025c04
   195dc:	00025c2b 	.word	0x00025c2b
   195e0:	00025c53 	.word	0x00025c53
   195e4:	00025c48 	.word	0x00025c48
   195e8:	00025c72 	.word	0x00025c72

000195ec <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:108
{
   195ec:	b510      	push	{r4, lr}
   195ee:	460c      	mov	r4, r1
   195f0:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:118
    sys_get_mem_info_str(buffer);
   195f4:	4668      	mov	r0, sp
   195f6:	f7f6 ff67 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:119
    output.putline(buffer);
   195fa:	4620      	mov	r0, r4
   195fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19600:	4669      	mov	r1, sp
   19602:	f7fd fff3 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:121
}
   19606:	2001      	movs	r0, #1
   19608:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   1960c:	bd10      	pop	{r4, pc}
   1960e:	Address 0x000000000001960e is out of bounds.


00019610 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19610:	b530      	push	{r4, r5, lr}
   19612:	460c      	mov	r4, r1
   19614:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   19616:	492c      	ldr	r1, [pc, #176]	; (196c8 <timeHandler(str&, CharDev&, void*)+0xb8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19618:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   1961a:	f7fc ff81 	bl	16520 <str::beginsWith(char const*) const>
   1961e:	2800      	cmp	r0, #0
   19620:	d048      	beq.n	196b4 <timeHandler(str&, CharDev&, void*)+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:190
        if( 7 != cmdParams.scanf("%*s %u %u %u %u %u %u %u", &m, &d, &y, &hr, &mn, &sc, &w))
   19622:	ab0c      	add	r3, sp, #48	; 0x30
   19624:	9304      	str	r3, [sp, #16]
   19626:	ab0b      	add	r3, sp, #44	; 0x2c
   19628:	9303      	str	r3, [sp, #12]
   1962a:	ab0a      	add	r3, sp, #40	; 0x28
   1962c:	9302      	str	r3, [sp, #8]
   1962e:	ab09      	add	r3, sp, #36	; 0x24
   19630:	9301      	str	r3, [sp, #4]
   19632:	ab08      	add	r3, sp, #32
   19634:	9300      	str	r3, [sp, #0]
   19636:	aa06      	add	r2, sp, #24
   19638:	ab07      	add	r3, sp, #28
   1963a:	4924      	ldr	r1, [pc, #144]	; (196cc <timeHandler(str&, CharDev&, void*)+0xbc>)
   1963c:	4628      	mov	r0, r5
   1963e:	f7fc fed7 	bl	163f0 <str::scanf(char const*, ...)>
   19642:	2807      	cmp	r0, #7
   19644:	d002      	beq.n	1964c <timeHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:192
            return false;
   19646:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:203
}
   19648:	b011      	add	sp, #68	; 0x44
   1964a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   1964c:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   19650:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   19652:	a80d      	add	r0, sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   19654:	f362 0303 	bfi	r3, r2, #0, #4
   19658:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   1965c:	9a07      	ldr	r2, [sp, #28]
   1965e:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   19662:	f362 0304 	bfi	r3, r2, #0, #5
   19666:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   1966a:	9a08      	ldr	r2, [sp, #32]
   1966c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   19670:	f362 030b 	bfi	r3, r2, #0, #12
   19674:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:196
        time.hour = hr, time.min = mn; time.sec = sc;
   19678:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1967a:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   1967e:	f362 0304 	bfi	r3, r2, #0, #5
   19682:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   19686:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19688:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   1968c:	f362 0305 	bfi	r3, r2, #0, #6
   19690:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   19694:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   19696:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   1969a:	f362 0305 	bfi	r3, r2, #0, #6
   1969e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:197
        time.dow = w;
   196a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   196a4:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   196a8:	f362 0302 	bfi	r3, r2, #0, #3
   196ac:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   196b0:	f7fe f85c 	bl	1776c <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:201
    output.printf("%s", rtc_get_date_time_str());
   196b4:	f7fe f8f6 	bl	178a4 <rtc_get_date_time_str>
   196b8:	4905      	ldr	r1, [pc, #20]	; (196d0 <timeHandler(str&, CharDev&, void*)+0xc0>)
   196ba:	4602      	mov	r2, r0
   196bc:	4620      	mov	r0, r4
   196be:	f7fd ffcb 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:202
    return true;
   196c2:	2001      	movs	r0, #1
   196c4:	e7c0      	b.n	19648 <timeHandler(str&, CharDev&, void*)+0x38>
   196c6:	bf00      	nop
   196c8:	0002587a 	.word	0x0002587a
   196cc:	0002587e 	.word	0x0002587e
   196d0:	000251fa 	.word	0x000251fa

000196d4 <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   196d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   196d6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   196d8:	4950      	ldr	r1, [pc, #320]	; (1981c <logHandler(str&, CharDev&, void*)+0x148>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   196da:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   196dc:	f7fd f80f 	bl	166fe <str::operator==(char const*) const>
   196e0:	4606      	mov	r6, r0
   196e2:	b150      	cbz	r0, 196fa <logHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:210
        LOG_FLUSH();
   196e4:	f7fc fc06 	bl	15ef4 <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:211
        output.putline("Log(s) have been flushed");
   196e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   196ec:	494c      	ldr	r1, [pc, #304]	; (19820 <logHandler(str&, CharDev&, void*)+0x14c>)
   196ee:	4628      	mov	r0, r5
   196f0:	f7fd ff7c 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:248
}
   196f4:	2001      	movs	r0, #1
   196f6:	b003      	add	sp, #12
   196f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:213
    else if (cmdParams == "status") {
   196fa:	494a      	ldr	r1, [pc, #296]	; (19824 <logHandler(str&, CharDev&, void*)+0x150>)
   196fc:	4620      	mov	r0, r4
   196fe:	f7fc fffe 	bl	166fe <str::operator==(char const*) const>
   19702:	b360      	cbz	r0, 1975e <logHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:214
        output.printf("Blocked calls  : %u\n", logger_get_blocked_call_count());
   19704:	f7fc fc1a 	bl	15f3c <logger_get_blocked_call_count>
   19708:	4947      	ldr	r1, [pc, #284]	; (19828 <logHandler(str&, CharDev&, void*)+0x154>)
   1970a:	4602      	mov	r2, r0
   1970c:	4628      	mov	r0, r5
   1970e:	f7fd ffa3 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:215
        output.printf("Queue watermark: %u\n", logger_get_num_buffers_watermark());
   19712:	f7fc fc1f 	bl	15f54 <logger_get_num_buffers_watermark>
   19716:	4945      	ldr	r1, [pc, #276]	; (1982c <logHandler(str&, CharDev&, void*)+0x158>)
   19718:	4602      	mov	r2, r0
   1971a:	4628      	mov	r0, r5
   1971c:	f7fd ff9c 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:216
        output.printf("Highest file write time: %ums\n", logger_get_highest_file_write_time_ms());
   19720:	f7fc fc12 	bl	15f48 <logger_get_highest_file_write_time_ms>
   19724:	4942      	ldr	r1, [pc, #264]	; (19830 <logHandler(str&, CharDev&, void*)+0x15c>)
   19726:	4602      	mov	r2, r0
   19728:	4628      	mov	r0, r5
   1972a:	f7fd ff95 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:217
        output.printf("Call counts    : %u dgb %u info %u warn %u err\n",
   1972e:	4630      	mov	r0, r6
   19730:	f7fc fbfa 	bl	15f28 <logger_get_logged_call_count>
   19734:	4604      	mov	r4, r0
   19736:	2001      	movs	r0, #1
   19738:	f7fc fbf6 	bl	15f28 <logger_get_logged_call_count>
   1973c:	4606      	mov	r6, r0
   1973e:	2002      	movs	r0, #2
   19740:	f7fc fbf2 	bl	15f28 <logger_get_logged_call_count>
   19744:	4607      	mov	r7, r0
   19746:	2003      	movs	r0, #3
   19748:	f7fc fbee 	bl	15f28 <logger_get_logged_call_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:221
                      logger_get_logged_call_count(log_error));
   1974c:	9700      	str	r7, [sp, #0]
   1974e:	9001      	str	r0, [sp, #4]
   19750:	4633      	mov	r3, r6
   19752:	4622      	mov	r2, r4
   19754:	4937      	ldr	r1, [pc, #220]	; (19834 <logHandler(str&, CharDev&, void*)+0x160>)
   19756:	4628      	mov	r0, r5
   19758:	f7fd ff7e 	bl	17658 <CharDev::printf(char const*, ...)>
   1975c:	e7ca      	b.n	196f4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:223
    else if (cmdParams.beginsWith("raw")) {
   1975e:	4936      	ldr	r1, [pc, #216]	; (19838 <logHandler(str&, CharDev&, void*)+0x164>)
   19760:	4620      	mov	r0, r4
   19762:	f7fc fedd 	bl	16520 <str::beginsWith(char const*) const>
   19766:	b150      	cbz	r0, 1977e <logHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:224
        cmdParams.eraseFirstWords(1);
   19768:	2220      	movs	r2, #32
   1976a:	2101      	movs	r1, #1
   1976c:	4620      	mov	r0, r4
   1976e:	f7fc ff74 	bl	1665a <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:225
        logger_log_raw(cmdParams());
   19772:	4620      	mov	r0, r4
   19774:	f7fc ffc5 	bl	16702 <str::operator()() const>
   19778:	f7fc fd02 	bl	16180 <logger_log_raw>
   1977c:	e7ba      	b.n	196f4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227
    else if ( (enablePrintf = cmdParams.beginsWith("enable ")) || cmdParams.beginsWith("disable ")) {
   1977e:	492f      	ldr	r1, [pc, #188]	; (1983c <logHandler(str&, CharDev&, void*)+0x168>)
   19780:	4620      	mov	r0, r4
   19782:	f7fc fecd 	bl	16520 <str::beginsWith(char const*) const>
   19786:	4606      	mov	r6, r0
   19788:	b9f8      	cbnz	r0, 197ca <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227 (discriminator 2)
   1978a:	492d      	ldr	r1, [pc, #180]	; (19840 <logHandler(str&, CharDev&, void*)+0x16c>)
   1978c:	4620      	mov	r0, r4
   1978e:	f7fc fec7 	bl	16520 <str::beginsWith(char const*) const>
   19792:	b9d0      	cbnz	r0, 197ca <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:243
            LOG_INFO(cmdParams());
   19794:	4620      	mov	r0, r4
   19796:	f7fc ffb4 	bl	16702 <str::operator()() const>
   1979a:	23f3      	movs	r3, #243	; 0xf3
   1979c:	9000      	str	r0, [sp, #0]
   1979e:	4a29      	ldr	r2, [pc, #164]	; (19844 <logHandler(str&, CharDev&, void*)+0x170>)
   197a0:	4929      	ldr	r1, [pc, #164]	; (19848 <logHandler(str&, CharDev&, void*)+0x174>)
   197a2:	2001      	movs	r0, #1
   197a4:	f7fc fc50 	bl	16048 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:245
        output.printf("Logged: |%s|\n", cmdParams());
   197a8:	4620      	mov	r0, r4
   197aa:	f7fc ffaa 	bl	16702 <str::operator()() const>
   197ae:	4927      	ldr	r1, [pc, #156]	; (1984c <logHandler(str&, CharDev&, void*)+0x178>)
   197b0:	4602      	mov	r2, r0
   197b2:	4628      	mov	r0, r5
   197b4:	f7fd ff50 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:247
    return true;
   197b8:	e79c      	b.n	196f4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   197ba:	2403      	movs	r4, #3
   197bc:	e016      	b.n	197ec <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   197be:	2402      	movs	r4, #2
   197c0:	e014      	b.n	197ec <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   197c2:	4b23      	ldr	r3, [pc, #140]	; (19850 <logHandler(str&, CharDev&, void*)+0x17c>)
   197c4:	e024      	b.n	19810 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   197c6:	4b23      	ldr	r3, [pc, #140]	; (19854 <logHandler(str&, CharDev&, void*)+0x180>)
   197c8:	e022      	b.n	19810 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   197ca:	4923      	ldr	r1, [pc, #140]	; (19858 <logHandler(str&, CharDev&, void*)+0x184>)
   197cc:	4620      	mov	r0, r4
   197ce:	f7fc fe95 	bl	164fc <str::containsIgnoreCase(char const*) const>
   197d2:	2800      	cmp	r0, #0
   197d4:	d1f3      	bne.n	197be <logHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   197d6:	4921      	ldr	r1, [pc, #132]	; (1985c <logHandler(str&, CharDev&, void*)+0x188>)
   197d8:	4620      	mov	r0, r4
   197da:	f7fc fe8f 	bl	164fc <str::containsIgnoreCase(char const*) const>
   197de:	2800      	cmp	r0, #0
   197e0:	d1eb      	bne.n	197ba <logHandler(str&, CharDev&, void*)+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:231
                            cmdParams.containsIgnoreCase("info")  ? log_info  : log_debug;
   197e2:	4620      	mov	r0, r4
   197e4:	491b      	ldr	r1, [pc, #108]	; (19854 <logHandler(str&, CharDev&, void*)+0x180>)
   197e6:	f7fc fe89 	bl	164fc <str::containsIgnoreCase(char const*) const>
   197ea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:233
        logger_set_printf(type, enablePrintf);
   197ec:	4631      	mov	r1, r6
   197ee:	4620      	mov	r0, r4
   197f0:	f7fc fc1c 	bl	1602c <logger_set_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   197f4:	4b1a      	ldr	r3, [pc, #104]	; (19860 <logHandler(str&, CharDev&, void*)+0x18c>)
   197f6:	4a1b      	ldr	r2, [pc, #108]	; (19864 <logHandler(str&, CharDev&, void*)+0x190>)
   197f8:	2e00      	cmp	r6, #0
   197fa:	bf08      	it	eq
   197fc:	461a      	moveq	r2, r3
   197fe:	2c00      	cmp	r4, #0
   19800:	d0df      	beq.n	197c2 <logHandler(str&, CharDev&, void*)+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   19802:	2c01      	cmp	r4, #1
   19804:	d0df      	beq.n	197c6 <logHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236 (discriminator 1)
   19806:	4915      	ldr	r1, [pc, #84]	; (1985c <logHandler(str&, CharDev&, void*)+0x188>)
   19808:	4b13      	ldr	r3, [pc, #76]	; (19858 <logHandler(str&, CharDev&, void*)+0x184>)
   1980a:	2c02      	cmp	r4, #2
   1980c:	bf18      	it	ne
   1980e:	460b      	movne	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
   19810:	4915      	ldr	r1, [pc, #84]	; (19868 <logHandler(str&, CharDev&, void*)+0x194>)
   19812:	4628      	mov	r0, r5
   19814:	f7fd ff20 	bl	17658 <CharDev::printf(char const*, ...)>
   19818:	e76c      	b.n	196f4 <logHandler(str&, CharDev&, void*)+0x20>
   1981a:	bf00      	nop
   1981c:	0002573c 	.word	0x0002573c
   19820:	00025742 	.word	0x00025742
   19824:	0002575b 	.word	0x0002575b
   19828:	00025762 	.word	0x00025762
   1982c:	00025777 	.word	0x00025777
   19830:	0002578c 	.word	0x0002578c
   19834:	000257ab 	.word	0x000257ab
   19838:	000257db 	.word	0x000257db
   1983c:	000257df 	.word	0x000257df
   19840:	000257e7 	.word	0x000257e7
   19844:	00025e92 	.word	0x00025e92
   19848:	00025809 	.word	0x00025809
   1984c:	0002586c 	.word	0x0002586c
   19850:	00025318 	.word	0x00025318
   19854:	000265fa 	.word	0x000265fa
   19858:	0002531e 	.word	0x0002531e
   1985c:	00025323 	.word	0x00025323
   19860:	00025733 	.word	0x00025733
   19864:	0002572b 	.word	0x0002572b
   19868:	000257f0 	.word	0x000257f0

0001986c <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   1986c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   1986e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   19870:	b089      	sub	sp, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19872:	ab04      	add	r3, sp, #16
   19874:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   19876:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19878:	ab03      	add	r3, sp, #12
   1987a:	2202      	movs	r2, #2
   1987c:	4918      	ldr	r1, [pc, #96]	; (198e0 <cpHandler(str&, CharDev&, void*)+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   1987e:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:253
    char *dstFile = NULL;
   19880:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19882:	f7fc fdc3 	bl	1640c <str::tokenize(char const*, int, ...)>
   19886:	2802      	cmp	r0, #2
   19888:	d128      	bne.n	198dc <cpHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   1988a:	ab07      	add	r3, sp, #28
   1988c:	9300      	str	r3, [sp, #0]
   1988e:	aa05      	add	r2, sp, #20
   19890:	ab06      	add	r3, sp, #24
   19892:	9904      	ldr	r1, [sp, #16]
   19894:	9803      	ldr	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:258
    unsigned int readTimeMs = 0;
   19896:	9405      	str	r4, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:259
    unsigned int writeTimeMs = 0;
   19898:	9406      	str	r4, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:260
    unsigned int bytesTransferred = 0;
   1989a:	9407      	str	r4, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   1989c:	f7fb f885 	bl	149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:264
    if(FR_OK != copyStatus) {
   198a0:	4602      	mov	r2, r0
   198a2:	b148      	cbz	r0, 198b8 <cpHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:265
        output.printf("Error %u copying |%s| -> |%s|\n", copyStatus, srcFile, dstFile);
   198a4:	9b04      	ldr	r3, [sp, #16]
   198a6:	490f      	ldr	r1, [pc, #60]	; (198e4 <cpHandler(str&, CharDev&, void*)+0x78>)
   198a8:	9300      	str	r3, [sp, #0]
   198aa:	4628      	mov	r0, r5
   198ac:	9b03      	ldr	r3, [sp, #12]
   198ae:	f7fd fed3 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:272
    return true;
   198b2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:273
}
   198b4:	b009      	add	sp, #36	; 0x24
   198b6:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   198b8:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   198ba:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   198bc:	2a00      	cmp	r2, #0
   198be:	bf08      	it	eq
   198c0:	2201      	moveq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   198c2:	2b00      	cmp	r3, #0
   198c4:	bf08      	it	eq
   198c6:	2301      	moveq	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:268
        output.printf("Finished!  Read: %u Kb/sec, Write: %u Kb/sec\n",
   198c8:	9907      	ldr	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   198ca:	4628      	mov	r0, r5
   198cc:	fbb1 f3f3 	udiv	r3, r1, r3
   198d0:	fbb1 f2f2 	udiv	r2, r1, r2
   198d4:	4904      	ldr	r1, [pc, #16]	; (198e8 <cpHandler(str&, CharDev&, void*)+0x7c>)
   198d6:	f7fd febf 	bl	17658 <CharDev::printf(char const*, ...)>
   198da:	e7ea      	b.n	198b2 <cpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:255
        return false;
   198dc:	4620      	mov	r0, r4
   198de:	e7e9      	b.n	198b4 <cpHandler(str&, CharDev&, void*)+0x48>
   198e0:	0002657f 	.word	0x0002657f
   198e4:	00025d6a 	.word	0x00025d6a
   198e8:	00025d89 	.word	0x00025d89

000198ec <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   198ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   198f0:	460e      	mov	r6, r1
   198f2:	f5ad 6d85 	sub.w	sp, sp, #1064	; 0x428
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   198f6:	4938      	ldr	r1, [pc, #224]	; (199d8 <catHandler(str&, CharDev&, void*)+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   198f8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   198fa:	f7fc fe9a 	bl	16632 <str::erase(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   198fe:	4937      	ldr	r1, [pc, #220]	; (199dc <catHandler(str&, CharDev&, void*)+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   19900:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   19902:	4628      	mov	r0, r5
   19904:	f7fc febe 	bl	16684 <str::trimStart(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:280
    cmdParams.trimEnd(" ");
   19908:	4934      	ldr	r1, [pc, #208]	; (199dc <catHandler(str&, CharDev&, void*)+0xf0>)
   1990a:	4628      	mov	r0, r5
   1990c:	f7fc feda 	bl	166c4 <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:290
    if(FR_OK != f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   19910:	4628      	mov	r0, r5
   19912:	f7fc fef6 	bl	16702 <str::operator()() const>
   19916:	2201      	movs	r2, #1
   19918:	4601      	mov	r1, r0
   1991a:	a881      	add	r0, sp, #516	; 0x204
   1991c:	f7f9 f936 	bl	12b8c <f_open>
   19920:	4604      	mov	r4, r0
   19922:	b160      	cbz	r0, 1993e <catHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:292
        output.printf("Failed to open: %s\n", cmdParams());
   19924:	4628      	mov	r0, r5
   19926:	f7fc feec 	bl	16702 <str::operator()() const>
   1992a:	492d      	ldr	r1, [pc, #180]	; (199e0 <catHandler(str&, CharDev&, void*)+0xf4>)
   1992c:	4602      	mov	r2, r0
   1992e:	4630      	mov	r0, r6
   19930:	f7fd fe92 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:327
}
   19934:	2001      	movs	r0, #1
   19936:	f50d 6d85 	add.w	sp, sp, #1064	; 0x428
   1993a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:297
        char buffer[512] = { 0 };
   1993e:	f10d 0a04 	add.w	sl, sp, #4
   19942:	4601      	mov	r1, r0
   19944:	f44f 7200 	mov.w	r2, #512	; 0x200
   19948:	4650      	mov	r0, sl
   1994a:	f004 fe0f 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:298
        UINT bytesRead = 0;
   1994e:	9400      	str	r4, [sp, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   19950:	f7f6 fda4 	bl	1049c <sys_get_uptime_us>
   19954:	4680      	mov	r8, r0
   19956:	4689      	mov	r9, r1
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302
        while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   19958:	466b      	mov	r3, sp
   1995a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1995e:	4651      	mov	r1, sl
   19960:	a881      	add	r0, sp, #516	; 0x204
   19962:	f7f9 f9aa 	bl	12cba <f_read>
   19966:	b908      	cbnz	r0, 1996c <catHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302 (discriminator 1)
   19968:	9b00      	ldr	r3, [sp, #0]
   1996a:	bb23      	cbnz	r3, 199b6 <catHandler(str&, CharDev&, void*)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:317
        f_close(&file);
   1996c:	a881      	add	r0, sp, #516	; 0x204
   1996e:	f7f9 fb77 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:319
        if(!printToScreen) {
   19972:	b1cf      	cbz	r7, 199a8 <catHandler(str&, CharDev&, void*)+0xbc>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   19974:	f7f6 fd92 	bl	1049c <sys_get_uptime_us>
   19978:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1997c:	2300      	movs	r3, #0
   1997e:	f003 ff1b 	bl	1d7b8 <__aeabi_uldivmod>
   19982:	2300      	movs	r3, #0
   19984:	4605      	mov	r5, r0
   19986:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1998a:	4640      	mov	r0, r8
   1998c:	4649      	mov	r1, r9
   1998e:	f003 ff13 	bl	1d7b8 <__aeabi_uldivmod>
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:322
                          totalBytesRead/(0 == timeTaken  ? 1 : timeTaken));
   19992:	1a28      	subs	r0, r5, r0
   19994:	bf14      	ite	ne
   19996:	4603      	movne	r3, r0
   19998:	2301      	moveq	r3, #1
   1999a:	4622      	mov	r2, r4
   1999c:	fbb4 f3f3 	udiv	r3, r4, r3
   199a0:	4910      	ldr	r1, [pc, #64]	; (199e4 <catHandler(str&, CharDev&, void*)+0xf8>)
   199a2:	4630      	mov	r0, r6
   199a4:	f7fd fe58 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:324
        output.putline("");
   199a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   199ac:	490e      	ldr	r1, [pc, #56]	; (199e8 <catHandler(str&, CharDev&, void*)+0xfc>)
   199ae:	4630      	mov	r0, r6
   199b0:	f7fd fe1c 	bl	175ec <CharDev::putline(char const*, unsigned int)>
   199b4:	e7be      	b.n	19934 <catHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:304
            totalBytesRead += bytesRead;
   199b6:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:306
            if(printToScreen) {
   199b8:	2f00      	cmp	r7, #0
   199ba:	d1cd      	bne.n	19958 <catHandler(str&, CharDev&, void*)+0x6c>
   199bc:	463d      	mov	r5, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 3)
                for (UINT i = 0; i < bytesRead; i++) {
   199be:	9b00      	ldr	r3, [sp, #0]
   199c0:	429d      	cmp	r5, r3
   199c2:	d2c9      	bcs.n	19958 <catHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:308 (discriminator 2)
                    output.putChar(buffer[i]);
   199c4:	6833      	ldr	r3, [r6, #0]
   199c6:	f81a 1005 	ldrb.w	r1, [sl, r5]
   199ca:	685b      	ldr	r3, [r3, #4]
   199cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   199d0:	4630      	mov	r0, r6
   199d2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 2)
                for (UINT i = 0; i < bytesRead; i++) {
   199d4:	3501      	adds	r5, #1
   199d6:	e7f2      	b.n	199be <catHandler(str&, CharDev&, void*)+0xd2>
   199d8:	00025644 	.word	0x00025644
   199dc:	0002657f 	.word	0x0002657f
   199e0:	0002564d 	.word	0x0002564d
   199e4:	00025661 	.word	0x00025661
   199e8:	00026518 	.word	0x00026518

000199ec <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   199ec:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   199ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199f2:	460c      	mov	r4, r1
   199f4:	b0c1      	sub	sp, #260	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   199f6:	4956      	ldr	r1, [pc, #344]	; (19b50 <lsHandler(str&, CharDev&, void*)+0x164>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   199f8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   199fa:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   199fc:	f7fc fe7f 	bl	166fe <str::operator==(char const*) const>
   19a00:	b998      	cbnz	r0, 19a2a <lsHandler(str&, CharDev&, void*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341 (discriminator 2)
   19a02:	4628      	mov	r0, r5
   19a04:	f7fc fe7d 	bl	16702 <str::operator()() const>
   19a08:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:342 (discriminator 4)
    if (FR_OK != (returnCode = f_opendir(&Dir, dirPath))) {
   19a0a:	4631      	mov	r1, r6
   19a0c:	a817      	add	r0, sp, #92	; 0x5c
   19a0e:	f7f9 fbe0 	bl	131d2 <f_opendir>
   19a12:	4605      	mov	r5, r0
   19a14:	b158      	cbz	r0, 19a2e <lsHandler(str&, CharDev&, void*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:343
        output.printf("Invalid directory: |%s| (Error %i)\n", dirPath, returnCode);
   19a16:	4603      	mov	r3, r0
   19a18:	4632      	mov	r2, r6
   19a1a:	494e      	ldr	r1, [pc, #312]	; (19b54 <lsHandler(str&, CharDev&, void*)+0x168>)
   19a1c:	4620      	mov	r0, r4
   19a1e:	f7fd fe1b 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:404
}
   19a22:	2001      	movs	r0, #1
   19a24:	b041      	add	sp, #260	; 0x104
   19a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   19a2a:	4e4b      	ldr	r6, [pc, #300]	; (19b58 <lsHandler(str&, CharDev&, void*)+0x16c>)
   19a2c:	e7ed      	b.n	19a0a <lsHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:360
    output.printf("Directory listing of: %s\n\n", dirPath);
   19a2e:	4632      	mov	r2, r6
   19a30:	494a      	ldr	r1, [pc, #296]	; (19b5c <lsHandler(str&, CharDev&, void*)+0x170>)
   19a32:	4620      	mov	r0, r4
   19a34:	f7fd fe10 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   19a38:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   19a3a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 19b6c <lsHandler(str&, CharDev&, void*)+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   19a3e:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   19a40:	f10d 0880 	add.w	r8, sp, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   19a44:	a90f      	add	r1, sp, #60	; 0x3c
   19a46:	a817      	add	r0, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   19a48:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   19a4c:	9316      	str	r3, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   19a4e:	f7f9 fc03 	bl	13258 <f_readdir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369
        if ( (FR_OK != returnCode) || !Finfo.fname[0]) {
   19a52:	2800      	cmp	r0, #0
   19a54:	d163      	bne.n	19b1e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369 (discriminator 1)
   19a56:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
   19a5a:	2b00      	cmp	r3, #0
   19a5c:	d05f      	beq.n	19b1e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   19a5e:	f89d 1044 	ldrb.w	r1, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:387
                (Finfo.ftime >> 11), (Finfo.ftime >> 5) & 63,
   19a62:	f8bd 0042 	ldrh.w	r0, [sp, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   19a66:	06ca      	lsls	r2, r1, #27
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   19a68:	bf5b      	ittet	pl
   19a6a:	9b0e      	ldrpl	r3, [sp, #56]	; 0x38
   19a6c:	9a0f      	ldrpl	r2, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19a6e:	2244      	movmi	r2, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   19a70:	189b      	addpl	r3, r3, r2
   19a72:	bf5b      	ittet	pl
   19a74:	930e      	strpl	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19a76:	222d      	movpl	r2, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:374
            numDirs++;
   19a78:	3501      	addmi	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:377
            numFiles++;
   19a7a:	3701      	addpl	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19a7c:	f011 0f01 	tst.w	r1, #1
   19a80:	bf14      	ite	ne
   19a82:	2352      	movne	r3, #82	; 0x52
   19a84:	232d      	moveq	r3, #45	; 0x2d
   19a86:	f011 0f02 	tst.w	r1, #2
   19a8a:	bf14      	ite	ne
   19a8c:	f04f 0e48 	movne.w	lr, #72	; 0x48
   19a90:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   19a94:	f011 0f04 	tst.w	r1, #4
   19a98:	bf14      	ite	ne
   19a9a:	f04f 0c53 	movne.w	ip, #83	; 0x53
   19a9e:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   19aa2:	f011 0f20 	tst.w	r1, #32
   19aa6:	bf14      	ite	ne
   19aa8:	f04f 0a41 	movne.w	sl, #65	; 0x41
   19aac:	f04f 0a2d 	moveq.w	sl, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   19ab0:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   19ab4:	f10d 0b45 	add.w	fp, sp, #69	; 0x45
   19ab8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19abc:	f3c0 1b45 	ubfx	fp, r0, #5, #6
   19ac0:	12c0      	asrs	r0, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   19ac2:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19ac4:	f001 001f 	and.w	r0, r1, #31
   19ac8:	930b      	str	r3, [sp, #44]	; 0x2c
   19aca:	9005      	str	r0, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   19acc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19ace:	f3c1 1043 	ubfx	r0, r1, #5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   19ad2:	1249      	asrs	r1, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   19ad4:	f201 71bc 	addw	r1, r1, #1980	; 0x7bc
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   19ad8:	f8cd c004 	str.w	ip, [sp, #4]
   19adc:	f8cd e000 	str.w	lr, [sp]
   19ae0:	9308      	str	r3, [sp, #32]
   19ae2:	9004      	str	r0, [sp, #16]
   19ae4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19ae6:	9103      	str	r1, [sp, #12]
   19ae8:	f8cd b01c 	str.w	fp, [sp, #28]
   19aec:	4649      	mov	r1, r9
   19aee:	f8cd a008 	str.w	sl, [sp, #8]
   19af2:	4620      	mov	r0, r4
   19af4:	f7fd fdb0 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:392
        output.put(" - ");
   19af8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19afc:	4918      	ldr	r1, [pc, #96]	; (19b60 <lsHandler(str&, CharDev&, void*)+0x174>)
   19afe:	4620      	mov	r0, r4
   19b00:	f7fd fd60 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:393
        output.put(Lfname);
   19b04:	4641      	mov	r1, r8
   19b06:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19b0a:	4620      	mov	r0, r4
   19b0c:	f7fd fd5a 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:395
        output.putline("");
   19b10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19b14:	490e      	ldr	r1, [pc, #56]	; (19b50 <lsHandler(str&, CharDev&, void*)+0x164>)
   19b16:	4620      	mov	r0, r4
   19b18:	f7fd fd68 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   19b1c:	e78f      	b.n	19a3e <lsHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:397
    output.printf("\n%4u File(s), %10d bytes total\n%4d Dir(s)", numFiles, fileBytesTotal, numDirs);
   19b1e:	463a      	mov	r2, r7
   19b20:	4910      	ldr	r1, [pc, #64]	; (19b64 <lsHandler(str&, CharDev&, void*)+0x178>)
   19b22:	9500      	str	r5, [sp, #0]
   19b24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19b26:	4620      	mov	r0, r4
   19b28:	f7fd fd96 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:399
    if (f_getfree(dirPath, (DWORD*) &fileBytesTotal, &fs) == FR_OK)
   19b2c:	aa0d      	add	r2, sp, #52	; 0x34
   19b2e:	a90e      	add	r1, sp, #56	; 0x38
   19b30:	4630      	mov	r0, r6
   19b32:	f7f9 fbc0 	bl	132b6 <f_getfree>
   19b36:	2800      	cmp	r0, #0
   19b38:	f47f af73 	bne.w	19a22 <lsHandler(str&, CharDev&, void*)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:401
        output.printf(", %10dK bytes free\n", fileBytesTotal * fs->csize / 2);
   19b3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19b3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19b40:	789b      	ldrb	r3, [r3, #2]
   19b42:	4909      	ldr	r1, [pc, #36]	; (19b68 <lsHandler(str&, CharDev&, void*)+0x17c>)
   19b44:	435a      	muls	r2, r3
   19b46:	4620      	mov	r0, r4
   19b48:	0852      	lsrs	r2, r2, #1
   19b4a:	f7fd fd85 	bl	17658 <CharDev::printf(char const*, ...)>
   19b4e:	e768      	b.n	19a22 <lsHandler(str&, CharDev&, void*)+0x36>
   19b50:	00026518 	.word	0x00026518
   19b54:	00025dba 	.word	0x00025dba
   19b58:	00025db7 	.word	0x00025db7
   19b5c:	00025dde 	.word	0x00025dde
   19b60:	00025e26 	.word	0x00025e26
   19b64:	00025e2a 	.word	0x00025e2a
   19b68:	00025e54 	.word	0x00025e54
   19b6c:	00025df9 	.word	0x00025df9

00019b70 <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:407
{
   19b70:	b570      	push	{r4, r5, r6, lr}
   19b72:	460c      	mov	r4, r1
   19b74:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:408
    output.printf("Create directory '%s' : %s\n",
   19b76:	f7fc fdc4 	bl	16702 <str::operator()() const>
   19b7a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:409
                   cmdParams(), (FR_OK == f_mkdir(cmdParams())) ? "OK" : "ERROR");
   19b7c:	4630      	mov	r0, r6
   19b7e:	f7fc fdc0 	bl	16702 <str::operator()() const>
   19b82:	f7f9 fc5b 	bl	1343c <f_mkdir>
   19b86:	4a06      	ldr	r2, [pc, #24]	; (19ba0 <mkdirHandler(str&, CharDev&, void*)+0x30>)
   19b88:	4b06      	ldr	r3, [pc, #24]	; (19ba4 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   19b8a:	4907      	ldr	r1, [pc, #28]	; (19ba8 <mkdirHandler(str&, CharDev&, void*)+0x38>)
   19b8c:	2800      	cmp	r0, #0
   19b8e:	bf08      	it	eq
   19b90:	4613      	moveq	r3, r2
   19b92:	462a      	mov	r2, r5
   19b94:	4620      	mov	r0, r4
   19b96:	f7fd fd5f 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:411
}
   19b9a:	2001      	movs	r0, #1
   19b9c:	bd70      	pop	{r4, r5, r6, pc}
   19b9e:	bf00      	nop
   19ba0:	00025b72 	.word	0x00025b72
   19ba4:	00025b7c 	.word	0x00025b7c
   19ba8:	0002599e 	.word	0x0002599e

00019bac <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:414
{
   19bac:	b570      	push	{r4, r5, r6, lr}
   19bae:	460c      	mov	r4, r1
   19bb0:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:415
    output.printf("Delete '%s' : %s\n",
   19bb2:	f7fc fda6 	bl	16702 <str::operator()() const>
   19bb6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:416
                  cmdParams(), (FR_OK == f_unlink(cmdParams())) ? "OK" : "ERROR");
   19bb8:	4630      	mov	r0, r6
   19bba:	f7fc fda2 	bl	16702 <str::operator()() const>
   19bbe:	f7f9 fbde 	bl	1337e <f_unlink>
   19bc2:	4a06      	ldr	r2, [pc, #24]	; (19bdc <rmHandler(str&, CharDev&, void*)+0x30>)
   19bc4:	4b06      	ldr	r3, [pc, #24]	; (19be0 <rmHandler(str&, CharDev&, void*)+0x34>)
   19bc6:	4907      	ldr	r1, [pc, #28]	; (19be4 <rmHandler(str&, CharDev&, void*)+0x38>)
   19bc8:	2800      	cmp	r0, #0
   19bca:	bf08      	it	eq
   19bcc:	4613      	moveq	r3, r2
   19bce:	462a      	mov	r2, r5
   19bd0:	4620      	mov	r0, r4
   19bd2:	f7fd fd41 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:418
}
   19bd6:	2001      	movs	r0, #1
   19bd8:	bd70      	pop	{r4, r5, r6, pc}
   19bda:	bf00      	nop
   19bdc:	00025b72 	.word	0x00025b72
   19be0:	00025b7c 	.word	0x00025b7c
   19be4:	00025e80 	.word	0x00025e80

00019be8 <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   19be8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   19bea:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19bec:	ab03      	add	r3, sp, #12
   19bee:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   19bf0:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19bf2:	ab02      	add	r3, sp, #8
   19bf4:	2202      	movs	r2, #2
   19bf6:	490f      	ldr	r1, [pc, #60]	; (19c34 <mvHandler(str&, CharDev&, void*)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   19bf8:	9402      	str	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:478
    char *dstFile = NULL;
   19bfa:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19bfc:	f7fc fc06 	bl	1640c <str::tokenize(char const*, int, ...)>
   19c00:	2802      	cmp	r0, #2
   19c02:	d115      	bne.n	19c30 <mvHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   19c04:	9c02      	ldr	r4, [sp, #8]
   19c06:	9d03      	ldr	r5, [sp, #12]
   19c08:	4620      	mov	r0, r4
   19c0a:	4629      	mov	r1, r5
   19c0c:	f7f9 fcbf 	bl	1358e <f_rename>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   19c10:	4b09      	ldr	r3, [pc, #36]	; (19c38 <mvHandler(str&, CharDev&, void*)+0x50>)
   19c12:	490a      	ldr	r1, [pc, #40]	; (19c3c <mvHandler(str&, CharDev&, void*)+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   19c14:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   19c16:	2800      	cmp	r0, #0
   19c18:	bf0c      	ite	eq
   19c1a:	4608      	moveq	r0, r1
   19c1c:	4618      	movne	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   19c1e:	462b      	mov	r3, r5
   19c20:	9000      	str	r0, [sp, #0]
   19c22:	4907      	ldr	r1, [pc, #28]	; (19c40 <mvHandler(str&, CharDev&, void*)+0x58>)
   19c24:	4630      	mov	r0, r6
   19c26:	f7fd fd17 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:487
    return true;
   19c2a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:488
}
   19c2c:	b004      	add	sp, #16
   19c2e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:480
        return false;
   19c30:	4620      	mov	r0, r4
   19c32:	e7fb      	b.n	19c2c <mvHandler(str&, CharDev&, void*)+0x44>
   19c34:	0002657f 	.word	0x0002657f
   19c38:	00025b7c 	.word	0x00025b7c
   19c3c:	00025b72 	.word	0x00025b72
   19c40:	00025e68 	.word	0x00025e68

00019c44 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:491
{
   19c44:	b530      	push	{r4, r5, lr}
   19c46:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   19c4a:	460c      	mov	r4, r1
   19c4c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:496
    if (FR_OK != f_open(&file, cmdParams(), FA_WRITE | FA_CREATE_ALWAYS)) {
   19c4e:	f7fc fd58 	bl	16702 <str::operator()() const>
   19c52:	220a      	movs	r2, #10
   19c54:	4601      	mov	r1, r0
   19c56:	a803      	add	r0, sp, #12
   19c58:	f7f8 ff98 	bl	12b8c <f_open>
   19c5c:	b158      	cbz	r0, 19c76 <newFileHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:497
        output.printf("Unable to open '%s' to write the file\n", cmdParams());
   19c5e:	4628      	mov	r0, r5
   19c60:	f7fc fd4f 	bl	16702 <str::operator()() const>
   19c64:	4921      	ldr	r1, [pc, #132]	; (19cec <newFileHandler(str&, CharDev&, void*)+0xa8>)
   19c66:	4602      	mov	r2, r0
   19c68:	4620      	mov	r0, r4
   19c6a:	f7fd fcf5 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:517
}
   19c6e:	2001      	movs	r0, #1
   19c70:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   19c74:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:501
    char c = 0;
   19c76:	f88d 0007 	strb.w	r0, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:502
    UINT bw = 0;
   19c7a:	9002      	str	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:503
    output.printf("End the file by using %c character.  %i is the timeout\n", end_file, timeout_ms);
   19c7c:	f242 7310 	movw	r3, #10000	; 0x2710
   19c80:	227e      	movs	r2, #126	; 0x7e
   19c82:	491b      	ldr	r1, [pc, #108]	; (19cf0 <newFileHandler(str&, CharDev&, void*)+0xac>)
   19c84:	4620      	mov	r0, r4
   19c86:	f7fd fce7 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:504
    output.printf("Sorry, no backspace support :(\n");
   19c8a:	491a      	ldr	r1, [pc, #104]	; (19cf4 <newFileHandler(str&, CharDev&, void*)+0xb0>)
   19c8c:	4620      	mov	r0, r4
   19c8e:	f7fd fce3 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   19c92:	4d19      	ldr	r5, [pc, #100]	; (19cf8 <newFileHandler(str&, CharDev&, void*)+0xb4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506
    while (output.getChar(&c, timeout_ms) && c != end_file) {
   19c94:	6823      	ldr	r3, [r4, #0]
   19c96:	f242 7210 	movw	r2, #10000	; 0x2710
   19c9a:	681b      	ldr	r3, [r3, #0]
   19c9c:	f10d 0107 	add.w	r1, sp, #7
   19ca0:	4620      	mov	r0, r4
   19ca2:	4798      	blx	r3
   19ca4:	b118      	cbz	r0, 19cae <newFileHandler(str&, CharDev&, void*)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506 (discriminator 1)
   19ca6:	f89d 3007 	ldrb.w	r3, [sp, #7]
   19caa:	2b7e      	cmp	r3, #126	; 0x7e
   19cac:	d10f      	bne.n	19cce <newFileHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:515
    f_close(&file);
   19cae:	a803      	add	r0, sp, #12
   19cb0:	f7f9 f9d6 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:516
    return true;
   19cb4:	e7db      	b.n	19c6e <newFileHandler(str&, CharDev&, void*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507 (discriminator 2)
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   19cb6:	9b02      	ldr	r3, [sp, #8]
   19cb8:	2b01      	cmp	r3, #1
   19cba:	d111      	bne.n	19ce0 <newFileHandler(str&, CharDev&, void*)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:511
            output.putChar(c);
   19cbc:	6823      	ldr	r3, [r4, #0]
   19cbe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19cc2:	685b      	ldr	r3, [r3, #4]
   19cc4:	f89d 1007 	ldrb.w	r1, [sp, #7]
   19cc8:	4620      	mov	r0, r4
   19cca:	4798      	blx	r3
   19ccc:	e7e2      	b.n	19c94 <newFileHandler(str&, CharDev&, void*)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   19cce:	ab02      	add	r3, sp, #8
   19cd0:	2201      	movs	r2, #1
   19cd2:	f10d 0107 	add.w	r1, sp, #7
   19cd6:	a803      	add	r0, sp, #12
   19cd8:	f7f9 f8a7 	bl	12e2a <f_write>
   19cdc:	2800      	cmp	r0, #0
   19cde:	d0ea      	beq.n	19cb6 <newFileHandler(str&, CharDev&, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   19ce0:	4629      	mov	r1, r5
   19ce2:	4620      	mov	r0, r4
   19ce4:	f7fd fcb8 	bl	17658 <CharDev::printf(char const*, ...)>
   19ce8:	e7d4      	b.n	19c94 <newFileHandler(str&, CharDev&, void*)+0x50>
   19cea:	bf00      	nop
   19cec:	00025ac5 	.word	0x00025ac5
   19cf0:	00025aec 	.word	0x00025aec
   19cf4:	00025b24 	.word	0x00025b24
   19cf8:	00025b44 	.word	0x00025b44

00019cfc <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   19cfc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   19cfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d02:	f5ad 7d43 	sub.w	sp, sp, #780	; 0x30c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:529
    char *dstDir = NULL;
   19d06:	ac06      	add	r4, sp, #24
   19d08:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   19d0a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   19d0c:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:530
    if(2 != cmdParams.tokenize(" ", 2, &srcDir, &dstDir)) {
   19d0e:	9400      	str	r4, [sp, #0]
   19d10:	ab05      	add	r3, sp, #20
   19d12:	2202      	movs	r2, #2
   19d14:	4940      	ldr	r1, [pc, #256]	; (19e18 <dcpHandler(str&, CharDev&, void*)+0x11c>)
   19d16:	f7fc fb79 	bl	1640c <str::tokenize(char const*, int, ...)>
   19d1a:	2802      	cmp	r0, #2
   19d1c:	d00a      	beq.n	19d34 <dcpHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:531
        output.putline("ERROR: Give me source and destination directory separated by a space");
   19d1e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19d22:	493e      	ldr	r1, [pc, #248]	; (19e1c <dcpHandler(str&, CharDev&, void*)+0x120>)
   19d24:	4630      	mov	r0, r6
   19d26:	f7fd fc61 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:572
}
   19d2a:	2001      	movs	r0, #1
   19d2c:	f50d 7d43 	add.w	sp, sp, #780	; 0x30c
   19d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:536
    if (FR_OK != (returnCode = f_opendir(&Dir, dstDir))) {
   19d34:	6821      	ldr	r1, [r4, #0]
   19d36:	a819      	add	r0, sp, #100	; 0x64
   19d38:	f7f9 fa4b 	bl	131d2 <f_opendir>
   19d3c:	b128      	cbz	r0, 19d4a <dcpHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:537
        output.printf("Invalid destination directory: |%s|\n", dstDir);
   19d3e:	6822      	ldr	r2, [r4, #0]
   19d40:	4937      	ldr	r1, [pc, #220]	; (19e20 <dcpHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   19d42:	4630      	mov	r0, r6
   19d44:	f7fd fc88 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:543
        return true;
   19d48:	e7ef      	b.n	19d2a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:541
    if (FR_OK != (returnCode = f_opendir(&Dir, srcDir))) {
   19d4a:	9905      	ldr	r1, [sp, #20]
   19d4c:	a819      	add	r0, sp, #100	; 0x64
   19d4e:	f7f9 fa40 	bl	131d2 <f_opendir>
   19d52:	b110      	cbz	r0, 19d5a <dcpHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   19d54:	9a05      	ldr	r2, [sp, #20]
   19d56:	4933      	ldr	r1, [pc, #204]	; (19e24 <dcpHandler(str&, CharDev&, void*)+0x128>)
   19d58:	e7f3      	b.n	19d42 <dcpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   19d5a:	f44f 7280 	mov.w	r2, #256	; 0x100
   19d5e:	a942      	add	r1, sp, #264	; 0x108
   19d60:	a807      	add	r0, sp, #28
   19d62:	f7fc fb15 	bl	16390 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   19d66:	f44f 7280 	mov.w	r2, #256	; 0x100
   19d6a:	a982      	add	r1, sp, #520	; 0x208
   19d6c:	a80c      	add	r0, sp, #48	; 0x30
   19d6e:	f7fc fb0f 	bl	16390 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   19d72:	4f2d      	ldr	r7, [pc, #180]	; (19e28 <dcpHandler(str&, CharDev&, void*)+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   19d74:	f10d 0a88 	add.w	sl, sp, #136	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   19d78:	f04f 0880 	mov.w	r8, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   19d7c:	a911      	add	r1, sp, #68	; 0x44
   19d7e:	a819      	add	r0, sp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   19d80:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   19d84:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   19d88:	f7f9 fa66 	bl	13258 <f_readdir>
   19d8c:	b910      	cbnz	r0, 19d94 <dcpHandler(str&, CharDev&, void*)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556 (discriminator 2)
   19d8e:	f89d 304d 	ldrb.w	r3, [sp, #77]	; 0x4d
   19d92:	b933      	cbnz	r3, 19da2 <dcpHandler(str&, CharDev&, void*)+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   19d94:	a80c      	add	r0, sp, #48	; 0x30
   19d96:	f7fc fb0f 	bl	163b8 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   19d9a:	a807      	add	r0, sp, #28
   19d9c:	f7fc fb0c 	bl	163b8 <str::~str()>
   19da0:	e7c3      	b.n	19d2a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:561
        if (!(Finfo.fattrib & AM_DIR))
   19da2:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
   19da6:	f015 0510 	ands.w	r5, r5, #16
   19daa:	d1e7      	bne.n	19d7c <dcpHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   19dac:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   19db0:	9a05      	ldr	r2, [sp, #20]
   19db2:	4639      	mov	r1, r7
   19db4:	a807      	add	r0, sp, #28
   19db6:	f7fc fcee 	bl	16796 <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:564
            dst.printf("%s/%s", dstDir, Finfo.fname);
   19dba:	6822      	ldr	r2, [r4, #0]
   19dbc:	4639      	mov	r1, r7
   19dbe:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   19dc2:	a80c      	add	r0, sp, #48	; 0x30
   19dc4:	f7fc fce7 	bl	16796 <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   19dc8:	a807      	add	r0, sp, #28
   19dca:	f7fc fc9a 	bl	16702 <str::operator()() const>
   19dce:	4680      	mov	r8, r0
   19dd0:	a80c      	add	r0, sp, #48	; 0x30
   19dd2:	f7fc fc96 	bl	16702 <str::operator()() const>
   19dd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   19dd8:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   19dda:	a807      	add	r0, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   19ddc:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   19dde:	f7fc fc90 	bl	16702 <str::operator()() const>
   19de2:	4683      	mov	fp, r0
   19de4:	a80c      	add	r0, sp, #48	; 0x30
   19de6:	f7fc fc8c 	bl	16702 <str::operator()() const>
   19dea:	462b      	mov	r3, r5
   19dec:	462a      	mov	r2, r5
   19dee:	4601      	mov	r1, r0
   19df0:	9500      	str	r5, [sp, #0]
   19df2:	4658      	mov	r0, fp
   19df4:	f7fa fdd9 	bl	149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   19df8:	4b0c      	ldr	r3, [pc, #48]	; (19e2c <dcpHandler(str&, CharDev&, void*)+0x130>)
   19dfa:	4a0d      	ldr	r2, [pc, #52]	; (19e30 <dcpHandler(str&, CharDev&, void*)+0x134>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   19dfc:	490d      	ldr	r1, [pc, #52]	; (19e34 <dcpHandler(str&, CharDev&, void*)+0x138>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   19dfe:	2800      	cmp	r0, #0
   19e00:	bf18      	it	ne
   19e02:	461a      	movne	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   19e04:	9b03      	ldr	r3, [sp, #12]
   19e06:	9201      	str	r2, [sp, #4]
   19e08:	9300      	str	r3, [sp, #0]
   19e0a:	4642      	mov	r2, r8
   19e0c:	464b      	mov	r3, r9
   19e0e:	4630      	mov	r0, r6
   19e10:	f7fd fc22 	bl	17658 <CharDev::printf(char const*, ...)>
   19e14:	e7b0      	b.n	19d78 <dcpHandler(str&, CharDev&, void*)+0x7c>
   19e16:	bf00      	nop
   19e18:	0002657f 	.word	0x0002657f
   19e1c:	0002567c 	.word	0x0002567c
   19e20:	000256c1 	.word	0x000256c1
   19e24:	000256e6 	.word	0x000256e6
   19e28:	00025706 	.word	0x00025706
   19e2c:	00025b7c 	.word	0x00025b7c
   19e30:	00025b72 	.word	0x00025b72
   19e34:	0002570c 	.word	0x0002570c

00019e38 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   19e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   19e3a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   19e3c:	4923      	ldr	r1, [pc, #140]	; (19ecc <storageHandler(str&, CharDev&, void*)+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   19e3e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   19e40:	f7fc fc5d 	bl	166fe <str::operator==(char const*) const>
   19e44:	4604      	mov	r4, r0
   19e46:	b198      	cbz	r0, 19e70 <storageHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
        output.putline((FR_OK == Storage::getSDDrive().format()) ? "Format OK" : "Format ERROR");
   19e48:	f7ff fb36 	bl	194b8 <Storage::getSDDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   19e4c:	2200      	movs	r2, #0
   19e4e:	f200 2035 	addw	r0, r0, #565	; 0x235
   19e52:	4611      	mov	r1, r2
   19e54:	f7f9 fc2a 	bl	136ac <f_mkfs>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
   19e58:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19e5c:	4b1c      	ldr	r3, [pc, #112]	; (19ed0 <storageHandler(str&, CharDev&, void*)+0x98>)
   19e5e:	491d      	ldr	r1, [pc, #116]	; (19ed4 <storageHandler(str&, CharDev&, void*)+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   19e60:	2800      	cmp	r0, #0
   19e62:	bf18      	it	ne
   19e64:	4619      	movne	r1, r3
   19e66:	4628      	mov	r0, r5
   19e68:	f7fd fbc0 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:592
}
   19e6c:	4620      	mov	r0, r4
   19e6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:579
    else if(cmdParams == "format flash") {
   19e70:	4919      	ldr	r1, [pc, #100]	; (19ed8 <storageHandler(str&, CharDev&, void*)+0xa0>)
   19e72:	4630      	mov	r0, r6
   19e74:	f7fc fc43 	bl	166fe <str::operator==(char const*) const>
   19e78:	4604      	mov	r4, r0
   19e7a:	b110      	cbz	r0, 19e82 <storageHandler(str&, CharDev&, void*)+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:580
        output.putline((FR_OK == Storage::getFlashDrive().format()) ? "Format OK" : "Format ERROR");
   19e7c:	f7ff faf6 	bl	1946c <Storage::getFlashDrive()>
   19e80:	e7e4      	b.n	19e4c <storageHandler(str&, CharDev&, void*)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:582
    else if(cmdParams == "mount sd") {
   19e82:	4916      	ldr	r1, [pc, #88]	; (19edc <storageHandler(str&, CharDev&, void*)+0xa4>)
   19e84:	4630      	mov	r0, r6
   19e86:	f7fc fc3a 	bl	166fe <str::operator==(char const*) const>
   19e8a:	4604      	mov	r4, r0
   19e8c:	b158      	cbz	r0, 19ea6 <storageHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
        output.putline(FR_OK == Storage::getSDDrive().mount() ? "SD Card mounted" : "Error mounting SD Card");
   19e8e:	f7ff fb13 	bl	194b8 <Storage::getSDDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   19e92:	2201      	movs	r2, #1
   19e94:	f200 2135 	addw	r1, r0, #565	; 0x235
   19e98:	f7f8 fe3a 	bl	12b10 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
   19e9c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19ea0:	4b0f      	ldr	r3, [pc, #60]	; (19ee0 <storageHandler(str&, CharDev&, void*)+0xa8>)
   19ea2:	4910      	ldr	r1, [pc, #64]	; (19ee4 <storageHandler(str&, CharDev&, void*)+0xac>)
   19ea4:	e7dc      	b.n	19e60 <storageHandler(str&, CharDev&, void*)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:585
    else if(cmdParams == "mount flash") {
   19ea6:	4910      	ldr	r1, [pc, #64]	; (19ee8 <storageHandler(str&, CharDev&, void*)+0xb0>)
   19ea8:	4630      	mov	r0, r6
   19eaa:	f7fc fc28 	bl	166fe <str::operator==(char const*) const>
   19eae:	4604      	mov	r4, r0
   19eb0:	2800      	cmp	r0, #0
   19eb2:	d0db      	beq.n	19e6c <storageHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   19eb4:	f7ff fada 	bl	1946c <Storage::getFlashDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
   19eb8:	2201      	movs	r2, #1
   19eba:	f200 2135 	addw	r1, r0, #565	; 0x235
   19ebe:	f7f8 fe27 	bl	12b10 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
   19ec2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19ec6:	4b09      	ldr	r3, [pc, #36]	; (19eec <storageHandler(str&, CharDev&, void*)+0xb4>)
   19ec8:	4909      	ldr	r1, [pc, #36]	; (19ef0 <storageHandler(str&, CharDev&, void*)+0xb8>)
   19eca:	e7c9      	b.n	19e60 <storageHandler(str&, CharDev&, void*)+0x28>
   19ecc:	00025bd3 	.word	0x00025bd3
   19ed0:	00025b75 	.word	0x00025b75
   19ed4:	00025b6b 	.word	0x00025b6b
   19ed8:	00025bdd 	.word	0x00025bdd
   19edc:	00025bea 	.word	0x00025bea
   19ee0:	00025b92 	.word	0x00025b92
   19ee4:	00025b82 	.word	0x00025b82
   19ee8:	00025bf3 	.word	0x00025bf3
   19eec:	00025bb7 	.word	0x00025bb7
   19ef0:	00025ba9 	.word	0x00025ba9

00019ef4 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:595
{
   19ef4:	b508      	push	{r3, lr}
   19ef6:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:596
    output.putline("Rebooting System");
   19ef8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19efc:	4908      	ldr	r1, [pc, #32]	; (19f20 <rebootHandler(str&, CharDev&, void*)+0x2c>)
   19efe:	f7fd fb75 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:599
    LOG_FLUSH();
   19f02:	f7fb fff7 	bl	15ef4 <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:601
    vTaskDelayMs(2000);
   19f06:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   19f0a:	f7ff f807 	bl	18f1c <vTaskDelay>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   19f0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   19f12:	22aa      	movs	r2, #170	; 0xaa
   19f14:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   19f16:	2200      	movs	r2, #0
   19f18:	701a      	strb	r2, [r3, #0]
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:605
}
   19f1a:	2001      	movs	r0, #1
   19f1c:	bd08      	pop	{r3, pc}
   19f1e:	bf00      	nop
   19f20:	00025a65 	.word	0x00025a65

00019f24 <telemetryHandler(str&, CharDev&, void*)>:
_Z16telemetryHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:618
        s++;
    }
}

CMD_HANDLER_FUNC(telemetryHandler)
{
   19f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19f28:	b0c4      	sub	sp, #272	; 0x110
   19f2a:	4607      	mov	r7, r0
   19f2c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:619
    if(cmdParams.getLen() == 0)
   19f2e:	f7fc fa56 	bl	163de <str::getLen() const>
   19f32:	4602      	mov	r2, r0
   19f34:	b938      	cbnz	r0, 19f46 <telemetryHandler(str&, CharDev&, void*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
    {
        tlm_stream_all(stream_tlm, &output, false);
    }
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
    {
        tlm_stream_all(stream_tlm, &output, true);
   19f36:	4621      	mov	r1, r4
   19f38:	483e      	ldr	r0, [pc, #248]	; (1a034 <telemetryHandler(str&, CharDev&, void*)+0x110>)
   19f3a:	f7fb f823 	bl	14f84 <tlm_stream_all>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:665
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
            }
        }
    }
    return true;
}
   19f3e:	2001      	movs	r0, #1
   19f40:	b044      	add	sp, #272	; 0x110
   19f42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:623
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
   19f46:	493c      	ldr	r1, [pc, #240]	; (1a038 <telemetryHandler(str&, CharDev&, void*)+0x114>)
   19f48:	4638      	mov	r0, r7
   19f4a:	f7fc fb00 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   19f4e:	b108      	cbz	r0, 19f54 <telemetryHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
        tlm_stream_all(stream_tlm, &output, true);
   19f50:	2201      	movs	r2, #1
   19f52:	e7f0      	b.n	19f36 <telemetryHandler(str&, CharDev&, void*)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:627
    else if(cmdParams == "save") {
   19f54:	4939      	ldr	r1, [pc, #228]	; (1a03c <telemetryHandler(str&, CharDev&, void*)+0x118>)
   19f56:	4638      	mov	r0, r7
   19f58:	f7fc fbd1 	bl	166fe <str::operator==(char const*) const>
   19f5c:	4680      	mov	r8, r0
   19f5e:	b1a0      	cbz	r0, 19f8a <telemetryHandler(str&, CharDev&, void*)+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:628
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   19f60:	4937      	ldr	r1, [pc, #220]	; (1a040 <telemetryHandler(str&, CharDev&, void*)+0x11c>)
   19f62:	4838      	ldr	r0, [pc, #224]	; (1a044 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   19f64:	f003 ffde 	bl	1df24 <fopen>
   19f68:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:629
        tlm_stream_one_file(tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME), fd);
   19f6a:	4836      	ldr	r0, [pc, #216]	; (1a044 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   19f6c:	f7fb f832 	bl	14fd4 <tlm_component_get_by_name>
   19f70:	4629      	mov	r1, r5
   19f72:	f7fb f815 	bl	14fa0 <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:630
        fclose(fd);
   19f76:	4628      	mov	r0, r5
   19f78:	f003 fe1a 	bl	1dbb0 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:631
        output.putline("Telemetry was saved to disk");
   19f7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19f80:	4931      	ldr	r1, [pc, #196]	; (1a048 <telemetryHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   19f82:	4620      	mov	r0, r4
   19f84:	f7fd fb32 	bl	175ec <CharDev::putline(char const*, unsigned int)>
   19f88:	e7d9      	b.n	19f3e <telemetryHandler(str&, CharDev&, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:633
    else if(cmdParams.beginsWithIgnoreCase("get")) {
   19f8a:	4930      	ldr	r1, [pc, #192]	; (1a04c <telemetryHandler(str&, CharDev&, void*)+0x128>)
   19f8c:	4638      	mov	r0, r7
   19f8e:	f7fc fade 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   19f92:	ad02      	add	r5, sp, #8
   19f94:	ae03      	add	r6, sp, #12
   19f96:	b328      	cbz	r0, 19fe4 <telemetryHandler(str&, CharDev&, void*)+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:634
        char *compName = NULL;
   19f98:	f8c5 8000 	str.w	r8, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:635
        char *varName = NULL;
   19f9c:	f8c6 8000 	str.w	r8, [r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:636
        if (3 == cmdParams.tokenize(" ", 3, NULL, &compName, &varName)) {
   19fa0:	4643      	mov	r3, r8
   19fa2:	e88d 0060 	stmia.w	sp, {r5, r6}
   19fa6:	2203      	movs	r2, #3
   19fa8:	4929      	ldr	r1, [pc, #164]	; (1a050 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   19faa:	4638      	mov	r0, r7
   19fac:	f7fc fa2e 	bl	1640c <str::tokenize(char const*, int, ...)>
   19fb0:	2803      	cmp	r0, #3
   19fb2:	d113      	bne.n	19fdc <telemetryHandler(str&, CharDev&, void*)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:637
            char buffer[256] = { 0 };
   19fb4:	f44f 7280 	mov.w	r2, #256	; 0x100
   19fb8:	4641      	mov	r1, r8
   19fba:	a804      	add	r0, sp, #16
   19fbc:	f004 fad6 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   19fc0:	aa04      	add	r2, sp, #16
   19fc2:	f44f 7380 	mov.w	r3, #256	; 0x100
   19fc6:	6831      	ldr	r1, [r6, #0]
   19fc8:	6828      	ldr	r0, [r5, #0]
   19fca:	f7fb fbcb 	bl	15764 <tlm_variable_get_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   19fce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   19fd2:	b108      	cbz	r0, 19fd8 <telemetryHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   19fd4:	a904      	add	r1, sp, #16
   19fd6:	e7d4      	b.n	19f82 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:642
                output.putline("Error locating or printing variable value");
   19fd8:	491e      	ldr	r1, [pc, #120]	; (1a054 <telemetryHandler(str&, CharDev&, void*)+0x130>)
   19fda:	e7d2      	b.n	19f82 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:646
            output.putline("Required parameters: 'get <comp name> <var name>");
   19fdc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19fe0:	491d      	ldr	r1, [pc, #116]	; (1a058 <telemetryHandler(str&, CharDev&, void*)+0x134>)
   19fe2:	e7ce      	b.n	19f82 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   19fe4:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:650
        char *compName = NULL;
   19fe8:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:651
        char *varName = NULL;
   19fea:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   19fec:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:653
        if (3 != cmdParams.tokenize(" ", 3, &compName, &varName, &varVal)) {
   19ff0:	462b      	mov	r3, r5
   19ff2:	e88d 0140 	stmia.w	sp, {r6, r8}
   19ff6:	2203      	movs	r2, #3
   19ff8:	4915      	ldr	r1, [pc, #84]	; (1a050 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   19ffa:	4638      	mov	r0, r7
   19ffc:	f7fc fa06 	bl	1640c <str::tokenize(char const*, int, ...)>
   1a000:	2803      	cmp	r0, #3
   1a002:	d003      	beq.n	1a00c <telemetryHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   1a004:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a008:	4914      	ldr	r1, [pc, #80]	; (1a05c <telemetryHandler(str&, CharDev&, void*)+0x138>)
   1a00a:	e7ba      	b.n	19f82 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a00c:	f8d8 2000 	ldr.w	r2, [r8]
   1a010:	6831      	ldr	r1, [r6, #0]
   1a012:	6828      	ldr	r0, [r5, #0]
   1a014:	f7fb f8a8 	bl	15168 <tlm_variable_set_value>
   1a018:	f8d8 3000 	ldr.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a01c:	9300      	str	r3, [sp, #0]
   1a01e:	6833      	ldr	r3, [r6, #0]
   1a020:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a022:	b120      	cbz	r0, 1a02e <telemetryHandler(str&, CharDev&, void*)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a024:	490e      	ldr	r1, [pc, #56]	; (1a060 <telemetryHandler(str&, CharDev&, void*)+0x13c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:660
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
   1a026:	4620      	mov	r0, r4
   1a028:	f7fd fb16 	bl	17658 <CharDev::printf(char const*, ...)>
   1a02c:	e787      	b.n	19f3e <telemetryHandler(str&, CharDev&, void*)+0x1a>
   1a02e:	490d      	ldr	r1, [pc, #52]	; (1a064 <telemetryHandler(str&, CharDev&, void*)+0x140>)
   1a030:	e7f9      	b.n	1a026 <telemetryHandler(str&, CharDev&, void*)+0x102>
   1a032:	bf00      	nop
   1a034:	00019451 	.word	0x00019451
   1a038:	00025c9c 	.word	0x00025c9c
   1a03c:	00025ca2 	.word	0x00025ca2
   1a040:	000257dd 	.word	0x000257dd
   1a044:	00025cbe 	.word	0x00025cbe
   1a048:	00025ca7 	.word	0x00025ca7
   1a04c:	00025cc3 	.word	0x00025cc3
   1a050:	0002657f 	.word	0x0002657f
   1a054:	00025cc7 	.word	0x00025cc7
   1a058:	00025cf1 	.word	0x00025cf1
   1a05c:	00025d22 	.word	0x00025d22
   1a060:	00025d3e 	.word	0x00025d3e
   1a064:	00025d4f 	.word	0x00025d4f

0001a068 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
#endif

CMD_HANDLER_FUNC(learnIrHandler)
{
   1a068:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a06a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
{
   1a06c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a06e:	f7fb fe2b 	bl	15cc8 <scheduler_task::getSharedObject(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:672

    if (learn_sem)
   1a072:	b160      	cbz	r0, 1a08e <learnIrHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:674
    {
        xSemaphoreGive(learn_sem);
   1a074:	2300      	movs	r3, #0
   1a076:	461a      	mov	r2, r3
   1a078:	4619      	mov	r1, r3
   1a07a:	f7fe fab1 	bl	185e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:675
        output.putline("Learning mode enabled");
   1a07e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a082:	4905      	ldr	r1, [pc, #20]	; (1a098 <learnIrHandler(str&, CharDev&, void*)+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
    }
    else
    {
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a084:	4620      	mov	r0, r4
   1a086:	f7fd fab1 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:683
    }

    return true;
}
   1a08a:	2001      	movs	r0, #1
   1a08c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a08e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a092:	4902      	ldr	r1, [pc, #8]	; (1a09c <learnIrHandler(str&, CharDev&, void*)+0x34>)
   1a094:	e7f6      	b.n	1a084 <learnIrHandler(str&, CharDev&, void*)+0x1c>
   1a096:	bf00      	nop
   1a098:	00025a76 	.word	0x00025a76
   1a09c:	00025a8c 	.word	0x00025a8c

0001a0a0 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1a0a0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a0a2:	4c06      	ldr	r4, [pc, #24]	; (1a0bc <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   1a0a4:	6823      	ldr	r3, [r4, #0]
   1a0a6:	b93b      	cbnz	r3, 1a0b8 <SingletonTemplate<I2C2>::getInstance()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a0a8:	f44f 7094 	mov.w	r0, #296	; 0x128
   1a0ac:	f7fc fc1a 	bl	168e4 <operator new(unsigned int)>
   1a0b0:	4605      	mov	r5, r0
   1a0b2:	f7fd ff9b 	bl	17fec <I2C2::I2C2()>
   1a0b6:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1a0b8:	6820      	ldr	r0, [r4, #0]
   1a0ba:	bd38      	pop	{r3, r4, r5, pc}
   1a0bc:	2007c5ec 	.word	0x2007c5ec

0001a0c0 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
{
   1a0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a0c4:	4c60      	ldr	r4, [pc, #384]	; (1a248 <healthHandler(str&, CharDev&, void*)+0x188>)
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1a0c6:	b091      	sub	sp, #68	; 0x44
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1a0c8:	6823      	ldr	r3, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1a0ca:	460e      	mov	r6, r1
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1a0cc:	b933      	cbnz	r3, 1a0dc <healthHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a0ce:	202c      	movs	r0, #44	; 0x2c
   1a0d0:	f7fc fc08 	bl	168e4 <operator new(unsigned int)>
   1a0d4:	4605      	mov	r5, r0
   1a0d6:	f7fd fe55 	bl	17d84 <Uart0::Uart0()>
   1a0da:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:107
        return *(classType*)mpSingletonInstance;
   1a0dc:	6827      	ldr	r7, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:129
    Storage::getFlashDrive().getDriveInfo(&total, &available);
   1a0de:	f7ff f9c5 	bl	1946c <Storage::getFlashDrive()>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1a0e2:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1a0e4:	aa0c      	add	r2, sp, #48	; 0x30
   1a0e6:	a90d      	add	r1, sp, #52	; 0x34
   1a0e8:	f200 2035 	addw	r0, r0, #565	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1a0ec:	940d      	str	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1a0ee:	f7f9 f8e2 	bl	132b6 <f_getfree>
   1a0f2:	2800      	cmp	r0, #0
   1a0f4:	d14f      	bne.n	1a196 <healthHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a0f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1a0f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a0fa:	789d      	ldrb	r5, [r3, #2]
   1a0fc:	699b      	ldr	r3, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1a0fe:	436c      	muls	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a100:	3b02      	subs	r3, #2
   1a102:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1a104:	0864      	lsrs	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1a106:	086d      	lsrs	r5, r5, #1
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a108:	4b50      	ldr	r3, [pc, #320]	; (1a24c <healthHandler(str&, CharDev&, void*)+0x18c>)
   1a10a:	681a      	ldr	r2, [r3, #0]
   1a10c:	4698      	mov	r8, r3
   1a10e:	b97a      	cbnz	r2, 1a130 <healthHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a110:	200c      	movs	r0, #12
   1a112:	f7fc fbe7 	bl	168e4 <operator new(unsigned int)>
   1a116:	4681      	mov	r9, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   1a118:	f7ff ffc2 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1a11c:	2390      	movs	r3, #144	; 0x90
   1a11e:	f889 3004 	strb.w	r3, [r9, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   1a122:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1a124:	f8c9 0000 	str.w	r0, [r9]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1a128:	f8c9 3008 	str.w	r3, [r9, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1a12c:	f8c8 9000 	str.w	r9, [r8]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:131
    float floatTemp = TS.getFarenheit();
   1a130:	f8d8 0000 	ldr.w	r0, [r8]
   1a134:	f7fa fe58 	bl	14de8 <I2C_Temp::getFarenheit()>
   1a138:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:132
    int floatSig1 = (int) floatTemp;
   1a13a:	f003 faf7 	bl	1d72c <__aeabi_f2iz>
   1a13e:	900a      	str	r0, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:133
    int floatDec1 = ((floatTemp - floatSig1) * 10);
   1a140:	f003 f950 	bl	1d3e4 <__aeabi_i2f>
   1a144:	4601      	mov	r1, r0
   1a146:	4648      	mov	r0, r9
   1a148:	f003 f896 	bl	1d278 <__aeabi_fsub>
   1a14c:	4940      	ldr	r1, [pc, #256]	; (1a250 <healthHandler(str&, CharDev&, void*)+0x190>)
   1a14e:	f003 f99d 	bl	1d48c <__aeabi_fmul>
   1a152:	f003 faeb 	bl	1d72c <__aeabi_f2iz>
   1a156:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:134
    rtc_t bt = sys_get_boot_time();
   1a158:	a80d      	add	r0, sp, #52	; 0x34
   1a15a:	f7f6 f857 	bl	1020c <sys_get_boot_time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:138
    if (flash_supports_metadata())
   1a15e:	f7fa fb6d 	bl	1483c <flash_supports_metadata>
   1a162:	2800      	cmp	r0, #0
   1a164:	d069      	beq.n	1a23a <healthHandler(str&, CharDev&, void*)+0x17a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:140
        spi1_lock();
   1a166:	f7fd fe9b 	bl	17ea0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1a16a:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1a16e:	f7fa fb4f 	bl	14810 <flash_get_page_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:137
    unsigned int highestPageWrCnt = 0;
   1a172:	46d3      	mov	fp, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1a174:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:136
    unsigned int highestWrCnt = 0;
   1a176:	46d0      	mov	r8, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144 (discriminator 1)
        for (unsigned int i = 0; i < pages; i++) {
   1a178:	459a      	cmp	sl, r3
   1a17a:	930b      	str	r3, [sp, #44]	; 0x2c
   1a17c:	d00d      	beq.n	1a19a <healthHandler(str&, CharDev&, void*)+0xda>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:145
            const unsigned int wrCount = flash_get_page_write_count(i);
   1a17e:	4650      	mov	r0, sl
   1a180:	f7fa fbaa 	bl	148d8 <flash_get_page_write_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:146
            if (wrCount > highestWrCnt) {
   1a184:	4580      	cmp	r8, r0
   1a186:	bf38      	it	cc
   1a188:	46d3      	movcc	fp, sl
   1a18a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a18c:	bf38      	it	cc
   1a18e:	4680      	movcc	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1a190:	f10a 0a01 	add.w	sl, sl, #1
   1a194:	e7f0      	b.n	1a178 <healthHandler(str&, CharDev&, void*)+0xb8>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:70
            *pTotalDriveSpaceKB = 0;
   1a196:	4625      	mov	r5, r4
   1a198:	e7b6      	b.n	1a108 <healthHandler(str&, CharDev&, void*)+0x48>
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:151
        spi1_unlock();
   1a19a:	f7fd fe99 	bl	17ed0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1a19e:	2364      	movs	r3, #100	; 0x64
   1a1a0:	fb03 f308 	mul.w	r3, r3, r8
   1a1a4:	4a2b      	ldr	r2, [pc, #172]	; (1a254 <healthHandler(str&, CharDev&, void*)+0x194>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1a1a6:	f8cd 8008 	str.w	r8, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1a1aa:	fbb3 f3f2 	udiv	r3, r3, r2
   1a1ae:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1a1b2:	9300      	str	r3, [sp, #0]
   1a1b4:	f8cd b004 	str.w	fp, [sp, #4]
   1a1b8:	462b      	mov	r3, r5
   1a1ba:	4622      	mov	r2, r4
   1a1bc:	4926      	ldr	r1, [pc, #152]	; (1a258 <healthHandler(str&, CharDev&, void*)+0x198>)
   1a1be:	4630      	mov	r0, r6
   1a1c0:	f7fd fa4a 	bl	17658 <CharDev::printf(char const*, ...)>
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a1c4:	4c25      	ldr	r4, [pc, #148]	; (1a25c <healthHandler(str&, CharDev&, void*)+0x19c>)
   1a1c6:	6823      	ldr	r3, [r4, #0]
   1a1c8:	b91b      	cbnz	r3, 1a1d2 <healthHandler(str&, CharDev&, void*)+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a1ca:	2001      	movs	r0, #1
   1a1cc:	f7fc fb8a 	bl	168e4 <operator new(unsigned int)>
   1a1d0:	6020      	str	r0, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:168
                    LS.getRawValue(),
   1a1d2:	6820      	ldr	r0, [r4, #0]
   1a1d4:	f7fa fdcc 	bl	14d70 <Light_Sensor::getRawValue()>
   1a1d8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a1da:	f7fd fb63 	bl	178a4 <rtc_get_date_time_str>
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
        inline unsigned int getTxQueueWatermark() const { return mTxQWatermark; }
   1a1de:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a1e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
   1a1e2:	9309      	str	r3, [sp, #36]	; 0x24
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
        inline unsigned int getRxQueueWatermark() const { return mRxQWatermark; }
   1a1e4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
   1a1e6:	491e      	ldr	r1, [pc, #120]	; (1a260 <healthHandler(str&, CharDev&, void*)+0x1a0>)
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
   1a1e8:	9308      	str	r3, [sp, #32]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a1ea:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a1ee:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a1f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a1f4:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a1f6:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a1fa:	9400      	str	r4, [sp, #0]
   1a1fc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a200:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a202:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a206:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a208:	f003 031f 	and.w	r3, r3, #31
   1a20c:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a20e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a212:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1a216:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a218:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a21c:	f003 031f 	and.w	r3, r3, #31
   1a220:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a222:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a226:	f003 030f 	and.w	r3, r3, #15
   1a22a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a22c:	464b      	mov	r3, r9
   1a22e:	f7fd fa13 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:177
}
   1a232:	2001      	movs	r0, #1
   1a234:	b011      	add	sp, #68	; 0x44
   1a236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:159
        output.printf("Flash: %u/%u\n", available, total);
   1a23a:	462b      	mov	r3, r5
   1a23c:	4622      	mov	r2, r4
   1a23e:	4909      	ldr	r1, [pc, #36]	; (1a264 <healthHandler(str&, CharDev&, void*)+0x1a4>)
   1a240:	4630      	mov	r0, r6
   1a242:	f7fd fa09 	bl	17658 <CharDev::printf(char const*, ...)>
   1a246:	e7bd      	b.n	1a1c4 <healthHandler(str&, CharDev&, void*)+0x104>
   1a248:	2007c5e4 	.word	0x2007c5e4
   1a24c:	2007c754 	.word	0x2007c754
   1a250:	41200000 	.word	0x41200000
   1a254:	000186a0 	.word	0x000186a0
   1a258:	000259ba 	.word	0x000259ba
   1a25c:	2007c758 	.word	0x2007c758
   1a260:	000259fc 	.word	0x000259fc
   1a264:	000259ee 	.word	0x000259ee

0001a268 <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1a268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a26c:	460c      	mov	r4, r1
   1a26e:	b0c7      	sub	sp, #284	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a270:	4957      	ldr	r1, [pc, #348]	; (1a3d0 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1a272:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a274:	f7fc f96b 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a278:	4956      	ldr	r1, [pc, #344]	; (1a3d4 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a27a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a27c:	4648      	mov	r0, r9
   1a27e:	f7fc f966 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a282:	4955      	ldr	r1, [pc, #340]	; (1a3d8 <i2cIoHandler(str&, CharDev&, void*)+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a284:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a286:	4648      	mov	r0, r9
   1a288:	f7fc f961 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1a28c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1a28e:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1a292:	ad05      	add	r5, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a294:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1a296:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:427
    int reg = 0;
   1a298:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1a29a:	f8c8 6000 	str.w	r6, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1a29e:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:431
    if (read) {
   1a2a0:	2f00      	cmp	r7, #0
   1a2a2:	d04b      	beq.n	1a33c <i2cIoHandler(str&, CharDev&, void*)+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:432
        if (cmdParams.scanf("%*s %0x %0x %u", &addr, &reg, &count) < 2) {
   1a2a4:	9500      	str	r5, [sp, #0]
   1a2a6:	ab03      	add	r3, sp, #12
   1a2a8:	aa02      	add	r2, sp, #8
   1a2aa:	494c      	ldr	r1, [pc, #304]	; (1a3dc <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   1a2ac:	4648      	mov	r0, r9
   1a2ae:	f7fc f89f 	bl	163f0 <str::scanf(char const*, ...)>
   1a2b2:	2801      	cmp	r0, #1
   1a2b4:	dc0a      	bgt.n	1a2cc <i2cIoHandler(str&, CharDev&, void*)+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:433
            output.putline("Need device and register address");
   1a2b6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a2ba:	4949      	ldr	r1, [pc, #292]	; (1a3e0 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   1a2bc:	4620      	mov	r0, r4
   1a2be:	f7fd f995 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:434
            return false;
   1a2c2:	4637      	mov	r7, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:473
}
   1a2c4:	4638      	mov	r0, r7
   1a2c6:	b047      	add	sp, #284	; 0x11c
   1a2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:437
        uint8_t buffer[256] = { 0 };
   1a2cc:	f44f 7980 	mov.w	r9, #256	; 0x100
   1a2d0:	f10d 0818 	add.w	r8, sp, #24
   1a2d4:	464a      	mov	r2, r9
   1a2d6:	4631      	mov	r1, r6
   1a2d8:	4640      	mov	r0, r8
   1a2da:	f004 f947 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:438
        if (count <= 0) {
   1a2de:	682b      	ldr	r3, [r5, #0]
   1a2e0:	bb33      	cbnz	r3, 1a330 <i2cIoHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:439
            count = 1;
   1a2e2:	2301      	movs	r3, #1
   1a2e4:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:445
        bool ok = I2C2::getInstance().readRegisters(addr, reg, &buffer[0], count);
   1a2e6:	f7ff fedb 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1a2ea:	682b      	ldr	r3, [r5, #0]
   1a2ec:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1a2f0:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1a2f4:	9300      	str	r3, [sp, #0]
   1a2f6:	4643      	mov	r3, r8
   1a2f8:	f7fc fe8e 	bl	17018 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:446
        output.printf("Read status from device %#2X: %s: \n", addr, ok ? "OK" : "ERROR");
   1a2fc:	4a39      	ldr	r2, [pc, #228]	; (1a3e4 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   1a2fe:	4b3a      	ldr	r3, [pc, #232]	; (1a3e8 <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   1a300:	493a      	ldr	r1, [pc, #232]	; (1a3ec <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   1a302:	2800      	cmp	r0, #0
   1a304:	bf18      	it	ne
   1a306:	4613      	movne	r3, r2
   1a308:	9a02      	ldr	r2, [sp, #8]
   1a30a:	4620      	mov	r0, r4
   1a30c:	f7fd f9a4 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447
        for (unsigned int i = 0; i < count; i++) {
   1a310:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1a312:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 1a404 <i2cIoHandler(str&, CharDev&, void*)+0x19c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 3)
        for (unsigned int i = 0; i < count; i++) {
   1a316:	682b      	ldr	r3, [r5, #0]
   1a318:	429e      	cmp	r6, r3
   1a31a:	d2d3      	bcs.n	1a2c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448 (discriminator 2)
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1a31c:	9a03      	ldr	r2, [sp, #12]
   1a31e:	f818 3006 	ldrb.w	r3, [r8, r6]
   1a322:	4432      	add	r2, r6
   1a324:	4649      	mov	r1, r9
   1a326:	4620      	mov	r0, r4
   1a328:	f7fd f996 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 2)
        for (unsigned int i = 0; i < count; i++) {
   1a32c:	3601      	adds	r6, #1
   1a32e:	e7f2      	b.n	1a316 <i2cIoHandler(str&, CharDev&, void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:441
        else if (count > sizeof(buffer)) {
   1a330:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:442
            count = sizeof(buffer);
   1a334:	bf88      	it	hi
   1a336:	f8c5 9000 	strhi.w	r9, [r5]
   1a33a:	e7d4      	b.n	1a2e6 <i2cIoHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:451
    else if (write) {
   1a33c:	f1bb 0f00 	cmp.w	fp, #0
   1a340:	d02c      	beq.n	1a39c <i2cIoHandler(str&, CharDev&, void*)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:452
        if (3 != cmdParams.scanf("%*s %0x %0x %0x", &addr, &reg, &data)) {
   1a342:	f8cd 8000 	str.w	r8, [sp]
   1a346:	ab03      	add	r3, sp, #12
   1a348:	aa02      	add	r2, sp, #8
   1a34a:	4929      	ldr	r1, [pc, #164]	; (1a3f0 <i2cIoHandler(str&, CharDev&, void*)+0x188>)
   1a34c:	4648      	mov	r0, r9
   1a34e:	f7fc f84f 	bl	163f0 <str::scanf(char const*, ...)>
   1a352:	2803      	cmp	r0, #3
   1a354:	d006      	beq.n	1a364 <i2cIoHandler(str&, CharDev&, void*)+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:453
            output.putline("Need device, register address and data");
   1a356:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a35a:	4926      	ldr	r1, [pc, #152]	; (1a3f4 <i2cIoHandler(str&, CharDev&, void*)+0x18c>)
   1a35c:	4620      	mov	r0, r4
   1a35e:	f7fd f945 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:454
            return false;
   1a362:	e7af      	b.n	1a2c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:457
        if (I2C2::getInstance().writeReg(addr, reg, data)) {
   1a364:	f7ff fe9c 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1a368:	f898 3000 	ldrb.w	r3, [r8]
   1a36c:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1a370:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1a374:	f7fc fe67 	bl	17046 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>
   1a378:	b150      	cbz	r0, 1a390 <i2cIoHandler(str&, CharDev&, void*)+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:458
            output.printf("Wrote %#2X to %#2X::%#2X\n", data, addr, reg);
   1a37a:	9b03      	ldr	r3, [sp, #12]
   1a37c:	491e      	ldr	r1, [pc, #120]	; (1a3f8 <i2cIoHandler(str&, CharDev&, void*)+0x190>)
   1a37e:	9300      	str	r3, [sp, #0]
   1a380:	f8d8 2000 	ldr.w	r2, [r8]
   1a384:	9b02      	ldr	r3, [sp, #8]
   1a386:	4620      	mov	r0, r4
   1a388:	f7fd f966 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:472
    return (read || write || discover);
   1a38c:	465f      	mov	r7, fp
   1a38e:	e799      	b.n	1a2c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:461
            output.printf("Error writing to device %#x\n", addr);
   1a390:	9a02      	ldr	r2, [sp, #8]
   1a392:	491a      	ldr	r1, [pc, #104]	; (1a3fc <i2cIoHandler(str&, CharDev&, void*)+0x194>)
   1a394:	4620      	mov	r0, r4
   1a396:	f7fd f95f 	bl	17658 <CharDev::printf(char const*, ...)>
   1a39a:	e7f7      	b.n	1a38c <i2cIoHandler(str&, CharDev&, void*)+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:464
    else if (discover) {
   1a39c:	b1a8      	cbz	r0, 1a3ca <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1a39e:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1a3a0:	4d17      	ldr	r5, [pc, #92]	; (1a400 <i2cIoHandler(str&, CharDev&, void*)+0x198>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1a3a2:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 1)
   1a3a4:	9b02      	ldr	r3, [sp, #8]
   1a3a6:	2bfe      	cmp	r3, #254	; 0xfe
   1a3a8:	dc0f      	bgt.n	1a3ca <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:466
            if (I2C2::getInstance().checkDeviceResponse(addr)) {
   1a3aa:	f7ff fe79 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1a3ae:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1a3b2:	f7fc fe60 	bl	17076 <I2C_Base::checkDeviceResponse(unsigned char)>
   1a3b6:	b120      	cbz	r0, 1a3c2 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1a3b8:	9a02      	ldr	r2, [sp, #8]
   1a3ba:	4629      	mov	r1, r5
   1a3bc:	4620      	mov	r0, r4
   1a3be:	f7fd f94b 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 2)
        for (addr = 2; addr <= 254; addr += 2) {
   1a3c2:	9b02      	ldr	r3, [sp, #8]
   1a3c4:	3302      	adds	r3, #2
   1a3c6:	9302      	str	r3, [sp, #8]
   1a3c8:	e7ec      	b.n	1a3a4 <i2cIoHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a3ca:	4657      	mov	r7, sl
   1a3cc:	e77a      	b.n	1a2c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
   1a3ce:	bf00      	nop
   1a3d0:	000266b9 	.word	0x000266b9
   1a3d4:	00025897 	.word	0x00025897
   1a3d8:	0002589d 	.word	0x0002589d
   1a3dc:	000258a6 	.word	0x000258a6
   1a3e0:	000258b5 	.word	0x000258b5
   1a3e4:	00025b72 	.word	0x00025b72
   1a3e8:	00025b7c 	.word	0x00025b7c
   1a3ec:	000258d6 	.word	0x000258d6
   1a3f0:	0002590a 	.word	0x0002590a
   1a3f4:	0002591a 	.word	0x0002591a
   1a3f8:	00025941 	.word	0x00025941
   1a3fc:	0002595b 	.word	0x0002595b
   1a400:	00025978 	.word	0x00025978
   1a404:	000258fa 	.word	0x000258fa

0001a408 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:14



#if MESH_USE_STATISTICS
static void wirelessHandlerPrintStats(CharDev& output, mesh_stats_t *s, uint8_t node)
{
   1a408:	b530      	push	{r4, r5, lr}
   1a40a:	460c      	mov	r4, r1
   1a40c:	4605      	mov	r5, r0
   1a40e:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:15
    output.printf("N%u: Rx/Tx, Rte/Ovt, Retried/Mesh Retried/Repeated: \n", node);
   1a410:	490a      	ldr	r1, [pc, #40]	; (1a43c <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x34>)
   1a412:	f7fd f921 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1a416:	88a1      	ldrh	r1, [r4, #4]
   1a418:	8823      	ldrh	r3, [r4, #0]
   1a41a:	9104      	str	r1, [sp, #16]
   1a41c:	8921      	ldrh	r1, [r4, #8]
   1a41e:	8862      	ldrh	r2, [r4, #2]
   1a420:	9103      	str	r1, [sp, #12]
   1a422:	88e1      	ldrh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_intercepted, s->pkts_sent,
                    s->rte_entries, s->rte_overwritten,
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1a424:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1a426:	9102      	str	r1, [sp, #8]
   1a428:	7ae1      	ldrb	r1, [r4, #11]
   1a42a:	9101      	str	r1, [sp, #4]
   1a42c:	7aa1      	ldrb	r1, [r4, #10]
   1a42e:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1a430:	4903      	ldr	r1, [pc, #12]	; (1a440 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x38>)
   1a432:	f7fd f911 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:20
}
   1a436:	b007      	add	sp, #28
   1a438:	bd30      	pop	{r4, r5, pc}
   1a43a:	bf00      	nop
   1a43c:	000263d8 	.word	0x000263d8
   1a440:	0002640e 	.word	0x0002640e

0001a444 <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
    return true;
}

#if MESH_USE_STATISTICS
static CMD_HANDLER_FUNC(wsStatsHandler)
{
   1a444:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1a446:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
{
   1a448:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1a44a:	f7f7 fb4b 	bl	11ae4 <mesh_get_stats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:248
    wirelessHandlerPrintStats(output, &stats, mesh_get_node_address());
   1a44e:	f7f7 f82f 	bl	114b0 <mesh_get_node_address>
   1a452:	a901      	add	r1, sp, #4
   1a454:	4602      	mov	r2, r0
   1a456:	4620      	mov	r0, r4
   1a458:	f7ff ffd6 	bl	1a408 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:250
    return true;
}
   1a45c:	2001      	movs	r0, #1
   1a45e:	b004      	add	sp, #16
   1a460:	bd10      	pop	{r4, pc}
   1a462:	Address 0x000000000001a462 is out of bounds.


0001a464 <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
#endif

static CMD_HANDLER_FUNC(wsTxHandler)
{
   1a464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1a468:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1a46a:	b08c      	sub	sp, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    mesh_packet_t pkt;
    #if MESH_USE_STATISTICS
    mesh_stats_t stats = { 0 };
    #endif

    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1a46c:	ab03      	add	r3, sp, #12
   1a46e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1a470:	460d      	mov	r5, r1
   1a472:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1a474:	ab02      	add	r3, sp, #8
   1a476:	2202      	movs	r2, #2
   1a478:	4938      	ldr	r1, [pc, #224]	; (1a55c <wsTxHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1a47a:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:256
    char *data_str = NULL;
   1a47c:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1a47e:	f7fb ffc5 	bl	1640c <str::tokenize(char const*, int, ...)>
   1a482:	42b0      	cmp	r0, r6
   1a484:	dd29      	ble.n	1a4da <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:271
        return false;
    }

    /* Data is optional */
    const uint8_t dst_addr = atoi(addr_str);
   1a486:	9802      	ldr	r0, [sp, #8]
   1a488:	f003 fb25 	bl	1dad6 <atoi>
   1a48c:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272
    const uint8_t len = data_str ? strlen(data_str) : 0;
   1a48e:	9803      	ldr	r0, [sp, #12]
   1a490:	b108      	cbz	r0, 1a496 <wsTxHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272 (discriminator 1)
   1a492:	f005 fdc5 	bl	20020 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276 (discriminator 4)

    // Flush any packets
    while (wireless_get_rx_pkt(&pkt, 0)) {
        output.putline("Discarded a stale wireless packet");
   1a496:	4e32      	ldr	r6, [pc, #200]	; (1a560 <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   1a498:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1a49a:	2100      	movs	r1, #0
   1a49c:	a804      	add	r0, sp, #16
   1a49e:	f7f6 fddd 	bl	1105c <wireless_get_rx_pkt>
   1a4a2:	b130      	cbz	r0, 1a4b2 <wsTxHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276
        output.putline("Discarded a stale wireless packet");
   1a4a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a4a8:	4631      	mov	r1, r6
   1a4aa:	4628      	mov	r0, r5
   1a4ac:	f7fd f89e 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1a4b0:	e7f3      	b.n	1a49a <wsTxHandler(str&, CharDev&, void*)+0x36>
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59
   1a4b2:	2302      	movs	r3, #2
   1a4b4:	f118 0100 	adds.w	r1, r8, #0
   1a4b8:	9300      	str	r3, [sp, #0]
   1a4ba:	9a03      	ldr	r2, [sp, #12]
   1a4bc:	4623      	mov	r3, r4
   1a4be:	bf18      	it	ne
   1a4c0:	2101      	movne	r1, #1
   1a4c2:	4638      	mov	r0, r7
   1a4c4:	f7f7 f92a 	bl	1171c <mesh_send>
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:280
        ;
    }

    if (! wireless_send(dst_addr, ack ? mesh_pkt_ack : mesh_pkt_nack, data_str, len, max_hops_to_use)) {
   1a4c8:	4606      	mov	r6, r0
   1a4ca:	b950      	cbnz	r0, 1a4e2 <wsTxHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:281
        output.putline("Error sending packet, check parameters!");
   1a4cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a4d0:	4924      	ldr	r1, [pc, #144]	; (1a564 <wsTxHandler(str&, CharDev&, void*)+0x100>)
   1a4d2:	4628      	mov	r0, r5
   1a4d4:	f7fd f88a 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:312
        else {
            output.printf("Packet sent to %s but no ACK received", addr_str);
        }
    }

    return true;
   1a4d8:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:313
}
   1a4da:	4630      	mov	r0, r6
   1a4dc:	b00c      	add	sp, #48	; 0x30
   1a4de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:284
    else if (ack)
   1a4e2:	f1b8 0f00 	cmp.w	r8, #0
   1a4e6:	d0f8      	beq.n	1a4da <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286
        if(wireless_get_ack_pkt(&pkt, timeout_ms) && dst_addr == pkt.nwk.src)
   1a4e8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1a4ec:	a804      	add	r0, sp, #16
   1a4ee:	f7f6 fdbd 	bl	1106c <wireless_get_ack_pkt>
   1a4f2:	b360      	cbz	r0, 1a54e <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286 (discriminator 1)
   1a4f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
   1a4f8:	42bb      	cmp	r3, r7
   1a4fa:	d128      	bne.n	1a54e <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:289
            if (sizeof(stats) == pkt.info.data_len) {
   1a4fc:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1a500:	2b0c      	cmp	r3, #12
   1a502:	d104      	bne.n	1a50e <wsTxHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:291
                wirelessHandlerPrintStats(output, p, pkt.nwk.src);
   1a504:	463a      	mov	r2, r7
   1a506:	a906      	add	r1, sp, #24
   1a508:	4628      	mov	r0, r5
   1a50a:	f7ff ff7d 	bl	1a408 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:296
            if (0 == len) {
   1a50e:	b9bc      	cbnz	r4, 1a540 <wsTxHandler(str&, CharDev&, void*)+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:297
                output.printf("Remote node name: '");
   1a510:	4915      	ldr	r1, [pc, #84]	; (1a568 <wsTxHandler(str&, CharDev&, void*)+0x104>)
   1a512:	4628      	mov	r0, r5
   1a514:	f7fd f8a0 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 3)
                for (int i=0; i<pkt.info.data_len; i++) {
   1a518:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1a51c:	429c      	cmp	r4, r3
   1a51e:	da0a      	bge.n	1a536 <wsTxHandler(str&, CharDev&, void*)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:299 (discriminator 2)
                    output.putChar(pkt.data[i]);
   1a520:	ab04      	add	r3, sp, #16
   1a522:	1919      	adds	r1, r3, r4
   1a524:	682b      	ldr	r3, [r5, #0]
   1a526:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a52a:	685b      	ldr	r3, [r3, #4]
   1a52c:	7a09      	ldrb	r1, [r1, #8]
   1a52e:	4628      	mov	r0, r5
   1a530:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 2)
                for (int i=0; i<pkt.info.data_len; i++) {
   1a532:	3401      	adds	r4, #1
   1a534:	e7f0      	b.n	1a518 <wsTxHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:301
                output.printf("'\n");
   1a536:	490d      	ldr	r1, [pc, #52]	; (1a56c <wsTxHandler(str&, CharDev&, void*)+0x108>)
   1a538:	4628      	mov	r0, r5
   1a53a:	f7fd f88d 	bl	17658 <CharDev::printf(char const*, ...)>
   1a53e:	e7cc      	b.n	1a4da <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:304
                output.putline("Received the acknowledgment!");
   1a540:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a544:	490a      	ldr	r1, [pc, #40]	; (1a570 <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   1a546:	4628      	mov	r0, r5
   1a548:	f7fd f850 	bl	175ec <CharDev::putline(char const*, unsigned int)>
   1a54c:	e7c5      	b.n	1a4da <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:308
            output.printf("Packet sent to %s but no ACK received", addr_str);
   1a54e:	9a02      	ldr	r2, [sp, #8]
   1a550:	4908      	ldr	r1, [pc, #32]	; (1a574 <wsTxHandler(str&, CharDev&, void*)+0x110>)
   1a552:	4628      	mov	r0, r5
   1a554:	f7fd f880 	bl	17658 <CharDev::printf(char const*, ...)>
   1a558:	e7bf      	b.n	1a4da <wsTxHandler(str&, CharDev&, void*)+0x76>
   1a55a:	bf00      	nop
   1a55c:	0002657f 	.word	0x0002657f
   1a560:	000260e5 	.word	0x000260e5
   1a564:	00026107 	.word	0x00026107
   1a568:	0002612f 	.word	0x0002612f
   1a56c:	00026e00 	.word	0x00026e00
   1a570:	00026143 	.word	0x00026143
   1a574:	00026160 	.word	0x00026160

0001a578 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:213
{
   1a578:	b538      	push	{r3, r4, r5, lr}
   1a57a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:214
    int addr = (int) cmdParams;
   1a57c:	f7fc f8c3 	bl	16706 <str::operator int() const>
   1a580:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:215
    output.printf("Set address to %i: %s\n", addr, mesh_set_node_address(addr) ? "OK" : "FAILED");
   1a582:	b2c0      	uxtb	r0, r0
   1a584:	f7f6 ff88 	bl	11498 <mesh_set_node_address>
   1a588:	4a05      	ldr	r2, [pc, #20]	; (1a5a0 <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   1a58a:	4b06      	ldr	r3, [pc, #24]	; (1a5a4 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   1a58c:	4906      	ldr	r1, [pc, #24]	; (1a5a8 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   1a58e:	2800      	cmp	r0, #0
   1a590:	bf18      	it	ne
   1a592:	4613      	movne	r3, r2
   1a594:	4622      	mov	r2, r4
   1a596:	4628      	mov	r0, r5
   1a598:	f7fd f85e 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:217
}
   1a59c:	2001      	movs	r0, #1
   1a59e:	bd38      	pop	{r3, r4, r5, pc}
   1a5a0:	00025b72 	.word	0x00025b72
   1a5a4:	00026186 	.word	0x00026186
   1a5a8:	0002618d 	.word	0x0002618d

0001a5ac <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:220
{
   1a5ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1a5ae:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:222
    const int routes = mesh_get_num_routing_entries();
   1a5b0:	f7f7 f8f6 	bl	117a0 <mesh_get_num_routing_entries>
   1a5b4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:224
    output.printf(line);
   1a5b6:	4916      	ldr	r1, [pc, #88]	; (1a610 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1a5b8:	4620      	mov	r0, r4
   1a5ba:	f7fd f84d 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:225
    output.printf("Routing table size is %i\n", routes);
   1a5be:	4915      	ldr	r1, [pc, #84]	; (1a614 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   1a5c0:	462a      	mov	r2, r5
   1a5c2:	4620      	mov	r0, r4
   1a5c4:	f7fd f848 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:226
    output.printf(line);
   1a5c8:	4911      	ldr	r1, [pc, #68]	; (1a610 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1a5ca:	4620      	mov	r0, r4
   1a5cc:	f7fd f844 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:228
    if (routes > 0)
   1a5d0:	b1dd      	cbz	r5, 1a60a <wsRteHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:230
        output.printf("| DST | Next HOP | HOPS |\n");
   1a5d2:	4911      	ldr	r1, [pc, #68]	; (1a618 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   1a5d4:	4620      	mov	r0, r4
   1a5d6:	f7fd f83f 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:231
        output.printf(line);
   1a5da:	490d      	ldr	r1, [pc, #52]	; (1a610 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1a5dc:	4620      	mov	r0, r4
   1a5de:	f7fd f83b 	bl	17658 <CharDev::printf(char const*, ...)>
   1a5e2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1a5e4:	4e0d      	ldr	r6, [pc, #52]	; (1a61c <wsRteHandler(str&, CharDev&, void*)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:235
        while ((e = mesh_get_routing_entry(i++))) {
   1a5e6:	b2e8      	uxtb	r0, r5
   1a5e8:	f7f7 f8c4 	bl	11774 <mesh_get_routing_entry>
   1a5ec:	3501      	adds	r5, #1
   1a5ee:	b140      	cbz	r0, 1a602 <wsRteHandler(str&, CharDev&, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1a5f0:	7881      	ldrb	r1, [r0, #2]
   1a5f2:	7843      	ldrb	r3, [r0, #1]
   1a5f4:	7802      	ldrb	r2, [r0, #0]
   1a5f6:	9100      	str	r1, [sp, #0]
   1a5f8:	4620      	mov	r0, r4
   1a5fa:	4631      	mov	r1, r6
   1a5fc:	f7fd f82c 	bl	17658 <CharDev::printf(char const*, ...)>
   1a600:	e7f1      	b.n	1a5e6 <wsRteHandler(str&, CharDev&, void*)+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:238
        output.printf(line);
   1a602:	4903      	ldr	r1, [pc, #12]	; (1a610 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1a604:	4620      	mov	r0, r4
   1a606:	f7fd f827 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:242
}
   1a60a:	2001      	movs	r0, #1
   1a60c:	b002      	add	sp, #8
   1a60e:	bd70      	pop	{r4, r5, r6, pc}
   1a610:	00025eb5 	.word	0x00025eb5
   1a614:	00025ed0 	.word	0x00025ed0
   1a618:	00025eea 	.word	0x00025eea
   1a61c:	00025f05 	.word	0x00025f05

0001a620 <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1a620:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1a624:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a626:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1a628:	aa0a      	add	r2, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1a62a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1a62c:	f842 3d24 	str.w	r3, [r2, #-36]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:194
    cmdParams.scanf("%i", &timeout_ms);
   1a630:	4918      	ldr	r1, [pc, #96]	; (1a694 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   1a632:	f7fb fedd 	bl	163f0 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:190
    bool rx = false;
   1a636:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1a638:	4f17      	ldr	r7, [pc, #92]	; (1a698 <wsRxHandler(str&, CharDev&, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1a63a:	4e18      	ldr	r6, [pc, #96]	; (1a69c <wsRxHandler(str&, CharDev&, void*)+0x7c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1a63c:	9901      	ldr	r1, [sp, #4]
   1a63e:	a802      	add	r0, sp, #8
   1a640:	f7f6 fd0c 	bl	1105c <wireless_get_rx_pkt>
   1a644:	b1d8      	cbz	r0, 1a67e <wsRxHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1a646:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1a64a:	4639      	mov	r1, r7
   1a64c:	4620      	mov	r0, r4
   1a64e:	f7fd f803 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198
        for (int i = 0; i < pkt.info.data_len; i++) {
   1a652:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 3)
   1a654:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1a658:	429d      	cmp	r5, r3
   1a65a:	da0a      	bge.n	1a672 <wsRxHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:199 (discriminator 2)
            output.putChar(pkt.data[i]);
   1a65c:	ab02      	add	r3, sp, #8
   1a65e:	1959      	adds	r1, r3, r5
   1a660:	6823      	ldr	r3, [r4, #0]
   1a662:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a666:	685b      	ldr	r3, [r3, #4]
   1a668:	7a09      	ldrb	r1, [r1, #8]
   1a66a:	4620      	mov	r0, r4
   1a66c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 2)
        for (int i = 0; i < pkt.info.data_len; i++) {
   1a66e:	3501      	adds	r5, #1
   1a670:	e7f0      	b.n	1a654 <wsRxHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1a672:	4631      	mov	r1, r6
   1a674:	4620      	mov	r0, r4
   1a676:	f7fc ffef 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:202
        rx = true;
   1a67a:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1a67c:	e7de      	b.n	1a63c <wsRxHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:205
    if (!rx) {
   1a67e:	b92d      	cbnz	r5, 1a68c <wsRxHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:206
        output.putline("No data received");
   1a680:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a684:	4906      	ldr	r1, [pc, #24]	; (1a6a0 <wsRxHandler(str&, CharDev&, void*)+0x80>)
   1a686:	4620      	mov	r0, r4
   1a688:	f7fc ffb0 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:210
}
   1a68c:	2001      	movs	r0, #1
   1a68e:	b00b      	add	sp, #44	; 0x2c
   1a690:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1a692:	bf00      	nop
   1a694:	00026467 	.word	0x00026467
   1a698:	000260bd 	.word	0x000260bd
   1a69c:	00026517 	.word	0x00026517
   1a6a0:	000260d4 	.word	0x000260d4

0001a6a4 <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316

CMD_HANDLER_FUNC(wirelessHandler)
{
   1a6a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    static CommandProcessor *pCmdProcessor = NULL;
    if (NULL == pCmdProcessor)
   1a6a8:	4c3c      	ldr	r4, [pc, #240]	; (1a79c <wirelessHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1a6aa:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1a6ac:	6826      	ldr	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1a6ae:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1a6b0:	2e00      	cmp	r6, #0
   1a6b2:	d162      	bne.n	1a77a <wirelessHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
    {
        pCmdProcessor = new CommandProcessor(8);
   1a6b4:	2024      	movs	r0, #36	; 0x24
   1a6b6:	f7fc f915 	bl	168e4 <operator new(unsigned int)>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1a6ba:	2304      	movs	r3, #4
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
   1a6bc:	4605      	mov	r5, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1a6be:	e880 0048 	stmia.w	r0, {r3, r6}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1a6c2:	6086      	str	r6, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1a6c4:	60c6      	str	r6, [r0, #12]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1a6c6:	2120      	movs	r1, #32
   1a6c8:	4630      	mov	r0, r6
   1a6ca:	f005 f9d9 	bl	1fa80 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1a6ce:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1a6d0:	60e8      	str	r0, [r5, #12]
   1a6d2:	ea4f 0886 	mov.w	r8, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1a6d6:	2e07      	cmp	r6, #7
   1a6d8:	d80e      	bhi.n	1a6f8 <wirelessHandler(str&, CharDev&, void*)+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1a6da:	2010      	movs	r0, #16
   1a6dc:	f7fc f902 	bl	168e4 <operator new(unsigned int)>
   1a6e0:	4682      	mov	sl, r0
   1a6e2:	2210      	movs	r2, #16
   1a6e4:	2100      	movs	r1, #0
   1a6e6:	f003 ff41 	bl	1e56c <memset>
   1a6ea:	68eb      	ldr	r3, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1a6ec:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1a6ee:	f843 a008 	str.w	sl, [r3, r8]
   1a6f2:	f108 0804 	add.w	r8, r8, #4
   1a6f6:	e7ee      	b.n	1a6d6 <wirelessHandler(str&, CharDev&, void*)+0x32>
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1a6f8:	2600      	movs	r6, #0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1a6fa:	2308      	movs	r3, #8
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
         * Constructor
         * @param numCmds Optional: Initial list of vector size to avoid memory re-allocation
         * @note addHandler() will grow the vector of command handlers if more commands are added later
         */
        CommandProcessor(int numCmds=8) :
            mCmdHandlerVector(numCmds), mEnShortCmds(true)
   1a6fc:	f04f 0801 	mov.w	r8, #1
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
   1a700:	606b      	str	r3, [r5, #4]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
   1a702:	4a27      	ldr	r2, [pc, #156]	; (1a7a0 <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   1a704:	4b27      	ldr	r3, [pc, #156]	; (1a7a4 <wirelessHandler(str&, CharDev&, void*)+0x100>)
   1a706:	4928      	ldr	r1, [pc, #160]	; (1a7a8 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   1a708:	4628      	mov	r0, r5
   1a70a:	9600      	str	r6, [sp, #0]
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1a70c:	f885 8020 	strb.w	r8, [r5, #32]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
        pCmdProcessor = new CommandProcessor(8);
   1a710:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1a712:	f7fb f915 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:322
        pCmdProcessor->addHandler(wsFileTxHandler,  "transfer", "'transfer <src filename> <dst filename> <naddr>' : Transfer a file to another board");
   1a716:	4b25      	ldr	r3, [pc, #148]	; (1a7ac <wirelessHandler(str&, CharDev&, void*)+0x108>)
   1a718:	4a25      	ldr	r2, [pc, #148]	; (1a7b0 <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   1a71a:	4926      	ldr	r1, [pc, #152]	; (1a7b4 <wirelessHandler(str&, CharDev&, void*)+0x110>)
   1a71c:	6820      	ldr	r0, [r4, #0]
   1a71e:	9600      	str	r6, [sp, #0]
   1a720:	f7fb f90e 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:323
        pCmdProcessor->addHandler(wsRxHandler,      "rx",       "'rx <time_ms>' : Poll for a packet");
   1a724:	4b24      	ldr	r3, [pc, #144]	; (1a7b8 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   1a726:	4a25      	ldr	r2, [pc, #148]	; (1a7bc <wirelessHandler(str&, CharDev&, void*)+0x118>)
   1a728:	4925      	ldr	r1, [pc, #148]	; (1a7c0 <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   1a72a:	6820      	ldr	r0, [r4, #0]
   1a72c:	9600      	str	r6, [sp, #0]
   1a72e:	f7fb f907 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:324
        pCmdProcessor->addHandler(wsAddrHandler,    "addr",     "'addr <addr>   : Set the wireless address");
   1a732:	4b24      	ldr	r3, [pc, #144]	; (1a7c4 <wirelessHandler(str&, CharDev&, void*)+0x120>)
   1a734:	4a24      	ldr	r2, [pc, #144]	; (1a7c8 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   1a736:	4925      	ldr	r1, [pc, #148]	; (1a7cc <wirelessHandler(str&, CharDev&, void*)+0x128>)
   1a738:	6820      	ldr	r0, [r4, #0]
   1a73a:	9600      	str	r6, [sp, #0]
   1a73c:	f7fb f900 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:325
        pCmdProcessor->addHandler(wsRteHandler,     "routes",   "'routes' : See the wireless routes");
   1a740:	4b23      	ldr	r3, [pc, #140]	; (1a7d0 <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   1a742:	4a24      	ldr	r2, [pc, #144]	; (1a7d4 <wirelessHandler(str&, CharDev&, void*)+0x130>)
   1a744:	4924      	ldr	r1, [pc, #144]	; (1a7d8 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   1a746:	6820      	ldr	r0, [r4, #0]
   1a748:	9600      	str	r6, [sp, #0]
   1a74a:	f7fb f8f9 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:329

        void *ack = (void*) 1;
        void *nack = 0;
        pCmdProcessor->addHandler(wsTxHandler,      "ack",  "'ack <addr> <data>'  : Send a packet and wait for acknowledgment", ack);
   1a74e:	4b23      	ldr	r3, [pc, #140]	; (1a7dc <wirelessHandler(str&, CharDev&, void*)+0x138>)
   1a750:	4a23      	ldr	r2, [pc, #140]	; (1a7e0 <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   1a752:	4924      	ldr	r1, [pc, #144]	; (1a7e4 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1a754:	6820      	ldr	r0, [r4, #0]
   1a756:	f8cd 8000 	str.w	r8, [sp]
   1a75a:	f7fb f8f1 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:330
        pCmdProcessor->addHandler(wsTxHandler,      "nack", "'nack <addr> <data>' : Send a packet", nack);
   1a75e:	4b22      	ldr	r3, [pc, #136]	; (1a7e8 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   1a760:	4a22      	ldr	r2, [pc, #136]	; (1a7ec <wirelessHandler(str&, CharDev&, void*)+0x148>)
   1a762:	4920      	ldr	r1, [pc, #128]	; (1a7e4 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1a764:	6820      	ldr	r0, [r4, #0]
   1a766:	9600      	str	r6, [sp, #0]
   1a768:	f7fb f8ea 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:333

        #if MESH_USE_STATISTICS
        pCmdProcessor->addHandler(wsStatsHandler,   "stats", "'stats' : See the wireless stats");
   1a76c:	9600      	str	r6, [sp, #0]
   1a76e:	4b20      	ldr	r3, [pc, #128]	; (1a7f0 <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1a770:	4a20      	ldr	r2, [pc, #128]	; (1a7f4 <wirelessHandler(str&, CharDev&, void*)+0x150>)
   1a772:	4921      	ldr	r1, [pc, #132]	; (1a7f8 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   1a774:	6820      	ldr	r0, [r4, #0]
   1a776:	f7fb f8e3 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:338
        #endif
    }

    /* Display help for empty command */
    if (cmdParams == "") {
   1a77a:	4920      	ldr	r1, [pc, #128]	; (1a7fc <wirelessHandler(str&, CharDev&, void*)+0x158>)
   1a77c:	4638      	mov	r0, r7
   1a77e:	f7fb ffbe 	bl	166fe <str::operator==(char const*) const>
   1a782:	b118      	cbz	r0, 1a78c <wirelessHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:339
        cmdParams = "help";
   1a784:	491e      	ldr	r1, [pc, #120]	; (1a800 <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   1a786:	4638      	mov	r0, r7
   1a788:	f7fc f874 	bl	16874 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    }

    return pCmdProcessor->handleCommand(cmdParams, output);
   1a78c:	464a      	mov	r2, r9
   1a78e:	4639      	mov	r1, r7
   1a790:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:343
}
   1a792:	b002      	add	sp, #8
   1a794:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    return pCmdProcessor->handleCommand(cmdParams, output);
   1a798:	f7fb b9b6 	b.w	15b08 <CommandProcessor::handleCommand(str&, CharDev&)>
   1a79c:	2007c770 	.word	0x2007c770
   1a7a0:	00025f5a 	.word	0x00025f5a
   1a7a4:	00025f20 	.word	0x00025f20
   1a7a8:	0001aa51 	.word	0x0001aa51
   1a7ac:	00025f61 	.word	0x00025f61
   1a7b0:	00025fb5 	.word	0x00025fb5
   1a7b4:	0001a825 	.word	0x0001a825
   1a7b8:	00025fbe 	.word	0x00025fbe
   1a7bc:	00025fe1 	.word	0x00025fe1
   1a7c0:	0001a621 	.word	0x0001a621
   1a7c4:	00025fe4 	.word	0x00025fe4
   1a7c8:	00026ee0 	.word	0x00026ee0
   1a7cc:	0001a579 	.word	0x0001a579
   1a7d0:	0002600e 	.word	0x0002600e
   1a7d4:	0002602a 	.word	0x0002602a
   1a7d8:	0001a5ad 	.word	0x0001a5ad
   1a7dc:	00026031 	.word	0x00026031
   1a7e0:	00026098 	.word	0x00026098
   1a7e4:	0001a465 	.word	0x0001a465
   1a7e8:	00026072 	.word	0x00026072
   1a7ec:	00026097 	.word	0x00026097
   1a7f0:	0002609c 	.word	0x0002609c
   1a7f4:	000260b7 	.word	0x000260b7
   1a7f8:	0001a445 	.word	0x0001a445
   1a7fc:	00026518 	.word	0x00026518
   1a800:	0002519b 	.word	0x0002519b

0001a804 <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1a804:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a806:	4c06      	ldr	r4, [pc, #24]	; (1a820 <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   1a808:	6823      	ldr	r3, [r4, #0]
   1a80a:	b933      	cbnz	r3, 1a81a <SingletonTemplate<NordicStream>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a80c:	2058      	movs	r0, #88	; 0x58
   1a80e:	f7fc f869 	bl	168e4 <operator new(unsigned int)>
   1a812:	4605      	mov	r5, r0
   1a814:	f7fd fa62 	bl	17cdc <NordicStream::NordicStream()>
   1a818:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1a81a:	6820      	ldr	r0, [r4, #0]
   1a81c:	bd38      	pop	{r3, r4, r5, pc}
   1a81e:	bf00      	nop
   1a820:	2007c76c 	.word	0x2007c76c

0001a824 <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1a824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a828:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   1a82c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1a82e:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1a830:	f10d 09b4 	add.w	r9, sp, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1a834:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1a836:	a80d      	add	r0, sp, #52	; 0x34
   1a838:	2100      	movs	r1, #0
   1a83a:	f003 fe97 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1a83e:	2280      	movs	r2, #128	; 0x80
   1a840:	2100      	movs	r1, #0
   1a842:	4648      	mov	r0, r9
   1a844:	f003 fe92 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:114
    int addr = 0;
   1a848:	2300      	movs	r3, #0
   1a84a:	ae06      	add	r6, sp, #24
   1a84c:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:117
    if (3 != cmdParams.scanf("%128s %128s %i", &srcFile[0], &dstFile[0], &addr)) {
   1a84e:	aa0d      	add	r2, sp, #52	; 0x34
   1a850:	9600      	str	r6, [sp, #0]
   1a852:	464b      	mov	r3, r9
   1a854:	4974      	ldr	r1, [pc, #464]	; (1aa28 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   1a856:	4620      	mov	r0, r4
   1a858:	f7fb fdca 	bl	163f0 <str::scanf(char const*, ...)>
   1a85c:	2803      	cmp	r0, #3
   1a85e:	d004      	beq.n	1a86a <wsFileTxHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:118
        return false;
   1a860:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:186
}
   1a862:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   1a866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:120
    if (FR_OK != f_open(&file, srcFile, FA_OPEN_EXISTING | FA_READ)) {
   1a86a:	2201      	movs	r2, #1
   1a86c:	a90d      	add	r1, sp, #52	; 0x34
   1a86e:	a8ed      	add	r0, sp, #948	; 0x3b4
   1a870:	f7f8 f98c 	bl	12b8c <f_open>
   1a874:	4605      	mov	r5, r0
   1a876:	2800      	cmp	r0, #0
   1a878:	d1f2      	bne.n	1a860 <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1a87a:	f7ff ffc3 	bl	1a804 <SingletonTemplate<NordicStream>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1a87e:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1a880:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1a882:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1a886:	a94d      	add	r1, sp, #308	; 0x134
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1a888:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1a88a:	a808      	add	r0, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:127
    char c = 0;
   1a88c:	f88d 5017 	strb.w	r5, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:130
    unsigned int bytesRead = 0;
   1a890:	9507      	str	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1a892:	f7fb fd7d 	bl	16390 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:139
    output.printf("Transfer %s --> %i:%s\n", srcFile, addr, dstFile);
   1a896:	f8cd 9000 	str.w	r9, [sp]
   1a89a:	6833      	ldr	r3, [r6, #0]
   1a89c:	aa0d      	add	r2, sp, #52	; 0x34
   1a89e:	4963      	ldr	r1, [pc, #396]	; (1aa2c <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   1a8a0:	4640      	mov	r0, r8
   1a8a2:	f7fc fed9 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:131
    unsigned int fileOffset = 0;
   1a8a6:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140
    while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   1a8a8:	ab07      	add	r3, sp, #28
   1a8aa:	f44f 7200 	mov.w	r2, #512	; 0x200
   1a8ae:	a96d      	add	r1, sp, #436	; 0x1b4
   1a8b0:	a8ed      	add	r0, sp, #948	; 0x3b4
   1a8b2:	f7f8 fa02 	bl	12cba <f_read>
   1a8b6:	2800      	cmp	r0, #0
   1a8b8:	f040 80ad 	bne.w	1aa16 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140 (discriminator 1)
   1a8bc:	9b07      	ldr	r3, [sp, #28]
   1a8be:	2b00      	cmp	r3, #0
   1a8c0:	f000 80a9 	beq.w	1aa16 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:143
        if (retries >= retriesMax) {
   1a8c4:	2d02      	cmp	r5, #2
   1a8c6:	f200 80a6 	bhi.w	1aa16 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:147
        n.printf("file buffer 0 %i\n", bytesRead);
   1a8ca:	ae07      	add	r6, sp, #28
   1a8cc:	6832      	ldr	r2, [r6, #0]
   1a8ce:	4958      	ldr	r1, [pc, #352]	; (1aa30 <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   1a8d0:	4620      	mov	r0, r4
   1a8d2:	f7fc fec1 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1a8d6:	6823      	ldr	r3, [r4, #0]
   1a8d8:	4620      	mov	r0, r4
   1a8da:	689b      	ldr	r3, [r3, #8]
   1a8dc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:150
        expectedChecksum = 0;
   1a8de:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1a8e2:	f50d 7bda 	add.w	fp, sp, #436	; 0x1b4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 3)
        for (unsigned int i=0; i < bytesRead; i++) {
   1a8e6:	ab6d      	add	r3, sp, #436	; 0x1b4
   1a8e8:	6832      	ldr	r2, [r6, #0]
   1a8ea:	ebab 0303 	sub.w	r3, fp, r3
   1a8ee:	429a      	cmp	r2, r3
   1a8f0:	6823      	ldr	r3, [r4, #0]
   1a8f2:	d90c      	bls.n	1a90e <wsFileTxHandler(str&, CharDev&, void*)+0xea>
   1a8f4:	f8cd b00c 	str.w	fp, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:152 (discriminator 2)
            n.putChar(buffer[i]);
   1a8f8:	685b      	ldr	r3, [r3, #4]
   1a8fa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a8fe:	f81b 1b01 	ldrb.w	r1, [fp], #1
   1a902:	4620      	mov	r0, r4
   1a904:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:153 (discriminator 2)
            expectedChecksum += buffer[i];
   1a906:	9b03      	ldr	r3, [sp, #12]
   1a908:	781b      	ldrb	r3, [r3, #0]
   1a90a:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 2)
        for (unsigned int i=0; i < bytesRead; i++) {
   1a90c:	e7eb      	b.n	1a8e6 <wsFileTxHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:155
        n.flush();
   1a90e:	689b      	ldr	r3, [r3, #8]
   1a910:	4620      	mov	r0, r4
   1a912:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:158
        n.gets((char*) response(), response.getCapacity(), timeout);
   1a914:	a808      	add	r0, sp, #32
   1a916:	f7fb fef4 	bl	16702 <str::operator()() const>
   1a91a:	4683      	mov	fp, r0
   1a91c:	a808      	add	r0, sp, #32
   1a91e:	f7fb fd61 	bl	163e4 <str::getCapacity() const>
   1a922:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1a926:	4602      	mov	r2, r0
   1a928:	4659      	mov	r1, fp
   1a92a:	4620      	mov	r0, r4
   1a92c:	f7fc fe6c 	bl	17608 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:159
        response.eraseFirstWords(1);
   1a930:	2220      	movs	r2, #32
   1a932:	2101      	movs	r1, #1
   1a934:	eb0d 0002 	add.w	r0, sp, r2
   1a938:	f7fb fe8f 	bl	1665a <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:160
        if ( (int)response != expectedChecksum) {
   1a93c:	a808      	add	r0, sp, #32
   1a93e:	f7fb fee2 	bl	16706 <str::operator int() const>
   1a942:	4582      	cmp	sl, r0
   1a944:	d01c      	beq.n	1a980 <wsFileTxHandler(str&, CharDev&, void*)+0x15c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:161
            output.printf("ERROR: Checksum Expected %i Actual %i\n", expectedChecksum, (int) response);
   1a946:	a808      	add	r0, sp, #32
   1a948:	f7fb fedd 	bl	16706 <str::operator int() const>
   1a94c:	4652      	mov	r2, sl
   1a94e:	4603      	mov	r3, r0
   1a950:	4938      	ldr	r1, [pc, #224]	; (1aa34 <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   1a952:	4640      	mov	r0, r8
   1a954:	f7fc fe80 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162
            doRetry();
   1a958:	4937      	ldr	r1, [pc, #220]	; (1aa38 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1a95a:	4620      	mov	r0, r4
   1a95c:	f7fc fe7c 	bl	17658 <CharDev::printf(char const*, ...)>
   1a960:	6823      	ldr	r3, [r4, #0]
   1a962:	4620      	mov	r0, r4
   1a964:	689b      	ldr	r3, [r3, #8]
   1a966:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162 (discriminator 1)
   1a968:	6823      	ldr	r3, [r4, #0]
   1a96a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a96e:	681b      	ldr	r3, [r3, #0]
   1a970:	f10d 0117 	add.w	r1, sp, #23
   1a974:	4620      	mov	r0, r4
   1a976:	4798      	blx	r3
   1a978:	2800      	cmp	r0, #0
   1a97a:	d1f5      	bne.n	1a968 <wsFileTxHandler(str&, CharDev&, void*)+0x144>
   1a97c:	3501      	adds	r5, #1
   1a97e:	e7a1      	b.n	1a8c4 <wsFileTxHandler(str&, CharDev&, void*)+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:166
        n.printf("file commit %s %i %i\n", dstFile, fileOffset, bytesRead);
   1a980:	6833      	ldr	r3, [r6, #0]
   1a982:	464a      	mov	r2, r9
   1a984:	492d      	ldr	r1, [pc, #180]	; (1aa3c <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   1a986:	9300      	str	r3, [sp, #0]
   1a988:	4620      	mov	r0, r4
   1a98a:	463b      	mov	r3, r7
   1a98c:	f7fc fe64 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:167
        n.flush();
   1a990:	6823      	ldr	r3, [r4, #0]
   1a992:	4620      	mov	r0, r4
   1a994:	689b      	ldr	r3, [r3, #8]
   1a996:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:168
        n.gets((char*) response(), response.getCapacity(), timeout);
   1a998:	a808      	add	r0, sp, #32
   1a99a:	f7fb feb2 	bl	16702 <str::operator()() const>
   1a99e:	4682      	mov	sl, r0
   1a9a0:	a808      	add	r0, sp, #32
   1a9a2:	f7fb fd1f 	bl	163e4 <str::getCapacity() const>
   1a9a6:	4651      	mov	r1, sl
   1a9a8:	4602      	mov	r2, r0
   1a9aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1a9ae:	4620      	mov	r0, r4
   1a9b0:	f7fc fe2a 	bl	17608 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:169
        if (!response.containsIgnoreCase("ok")) {
   1a9b4:	4922      	ldr	r1, [pc, #136]	; (1aa40 <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   1a9b6:	a808      	add	r0, sp, #32
   1a9b8:	f7fb fda0 	bl	164fc <str::containsIgnoreCase(char const*) const>
   1a9bc:	b9d0      	cbnz	r0, 1a9f4 <wsFileTxHandler(str&, CharDev&, void*)+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:170
            output.printf("ERROR: Remote node did not acknowledge file write (%s)\n", response());
   1a9be:	a808      	add	r0, sp, #32
   1a9c0:	f7fb fe9f 	bl	16702 <str::operator()() const>
   1a9c4:	491f      	ldr	r1, [pc, #124]	; (1aa44 <wsFileTxHandler(str&, CharDev&, void*)+0x220>)
   1a9c6:	4602      	mov	r2, r0
   1a9c8:	4640      	mov	r0, r8
   1a9ca:	f7fc fe45 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171
            doRetry();
   1a9ce:	491a      	ldr	r1, [pc, #104]	; (1aa38 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1a9d0:	4620      	mov	r0, r4
   1a9d2:	f7fc fe41 	bl	17658 <CharDev::printf(char const*, ...)>
   1a9d6:	6823      	ldr	r3, [r4, #0]
   1a9d8:	4620      	mov	r0, r4
   1a9da:	689b      	ldr	r3, [r3, #8]
   1a9dc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171 (discriminator 1)
   1a9de:	6823      	ldr	r3, [r4, #0]
   1a9e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a9e4:	681b      	ldr	r3, [r3, #0]
   1a9e6:	f10d 0117 	add.w	r1, sp, #23
   1a9ea:	4620      	mov	r0, r4
   1a9ec:	4798      	blx	r3
   1a9ee:	2800      	cmp	r0, #0
   1a9f0:	d1f5      	bne.n	1a9de <wsFileTxHandler(str&, CharDev&, void*)+0x1ba>
   1a9f2:	e7c3      	b.n	1a97c <wsFileTxHandler(str&, CharDev&, void*)+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:174
        response = "";
   1a9f4:	4914      	ldr	r1, [pc, #80]	; (1aa48 <wsFileTxHandler(str&, CharDev&, void*)+0x224>)
   1a9f6:	a808      	add	r0, sp, #32
   1a9f8:	f7fb ff3c 	bl	16874 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1a9fc:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1a9fe:	4913      	ldr	r1, [pc, #76]	; (1aa4c <wsFileTxHandler(str&, CharDev&, void*)+0x228>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1aa00:	441f      	add	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1aa02:	463a      	mov	r2, r7
   1aa04:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   1aa06:	4640      	mov	r0, r8
   1aa08:	f7fc fe26 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:179
        if (retries > 0) {
   1aa0c:	2d00      	cmp	r5, #0
   1aa0e:	f43f af4b 	beq.w	1a8a8 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:180
            --retries;
   1aa12:	3d01      	subs	r5, #1
   1aa14:	e748      	b.n	1a8a8 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:184
    f_close(&file);
   1aa16:	a8ed      	add	r0, sp, #948	; 0x3b4
   1aa18:	f7f8 fb22 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1aa1c:	a808      	add	r0, sp, #32
   1aa1e:	f7fb fccb 	bl	163b8 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:185
    return true;
   1aa22:	2001      	movs	r0, #1
   1aa24:	e71d      	b.n	1a862 <wsFileTxHandler(str&, CharDev&, void*)+0x3e>
   1aa26:	bf00      	nop
   1aa28:	000261a4 	.word	0x000261a4
   1aa2c:	000261b3 	.word	0x000261b3
   1aa30:	000261ca 	.word	0x000261ca
   1aa34:	000261dc 	.word	0x000261dc
   1aa38:	00026517 	.word	0x00026517
   1aa3c:	00026203 	.word	0x00026203
   1aa40:	00026219 	.word	0x00026219
   1aa44:	0002621c 	.word	0x0002621c
   1aa48:	00026518 	.word	0x00026518
   1aa4c:	00026254 	.word	0x00026254

0001aa50 <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1aa50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1aa54:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1aa56:	4607      	mov	r7, r0
   1aa58:	b086      	sub	sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1aa5a:	aa06      	add	r2, sp, #24
   1aa5c:	f842 4d0c 	str.w	r4, [r2, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1aa60:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:28
    cmdParams.scanf("%i", &addr);
   1aa62:	493d      	ldr	r1, [pc, #244]	; (1ab58 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   1aa64:	f7fb fcc4 	bl	163f0 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:29
    cmdParams.eraseFirstWords(1);
   1aa68:	2220      	movs	r2, #32
   1aa6a:	2101      	movs	r1, #1
   1aa6c:	4638      	mov	r0, r7
   1aa6e:	f7fb fdf4 	bl	1665a <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31
    if (0 == addr || 0 == cmdParams.getLen())
   1aa72:	9b03      	ldr	r3, [sp, #12]
   1aa74:	2b00      	cmp	r3, #0
   1aa76:	d068      	beq.n	1ab4a <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31 (discriminator 2)
   1aa78:	4638      	mov	r0, r7
   1aa7a:	f7fb fcb0 	bl	163de <str::getLen() const>
   1aa7e:	2800      	cmp	r0, #0
   1aa80:	d063      	beq.n	1ab4a <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:38
        NordicStream &n = NordicStream::getInstance();
   1aa82:	f7ff febf 	bl	1a804 <SingletonTemplate<NordicStream>::getInstance()>
   1aa86:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:41
        char c = 0;
   1aa88:	f10d 0818 	add.w	r8, sp, #24
   1aa8c:	f808 4d0d 	strb.w	r4, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:42
        while (n.getChar(&c, 5)) {
   1aa90:	682b      	ldr	r3, [r5, #0]
   1aa92:	2205      	movs	r2, #5
   1aa94:	681b      	ldr	r3, [r3, #0]
   1aa96:	4641      	mov	r1, r8
   1aa98:	4628      	mov	r0, r5
   1aa9a:	4798      	blx	r3
   1aa9c:	4604      	mov	r4, r0
   1aa9e:	2800      	cmp	r0, #0
   1aaa0:	d1f6      	bne.n	1aa90 <wsStreamHandler(str&, CharDev&, void*)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1aaa2:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1aaa4:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1aaa6:	f885 3053 	strb.w	r3, [r5, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1aaaa:	f7fb fe2a 	bl	16702 <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:52
        int count = 0;
   1aaae:	4627      	mov	r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1aab0:	4601      	mov	r1, r0
   1aab2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aab6:	4628      	mov	r0, r5
   1aab8:	f7fc fd98 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:47
        n.flush();
   1aabc:	682b      	ldr	r3, [r5, #0]
   1aabe:	4628      	mov	r0, r5
   1aac0:	689b      	ldr	r3, [r3, #8]
   1aac2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1aac4:	4b25      	ldr	r3, [pc, #148]	; (1ab5c <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1aac6:	f10d 0918 	add.w	r9, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1aaca:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1aacc:	f849 4d04 	str.w	r4, [r9, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1aad0:	9004      	str	r0, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:68
        while (n.getChar(&c, timeout_ms))
   1aad2:	682b      	ldr	r3, [r5, #0]
   1aad4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1aad8:	681b      	ldr	r3, [r3, #0]
   1aada:	4641      	mov	r1, r8
   1aadc:	4628      	mov	r0, r5
   1aade:	4798      	blx	r3
   1aae0:	b1d0      	cbz	r0, 1ab18 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:75
            memmove(&lastChars[0], &lastChars[1], sizeof(endOfTx) - 1);
   1aae2:	2203      	movs	r2, #3
   1aae4:	f10d 0115 	add.w	r1, sp, #21
   1aae8:	4648      	mov	r0, r9
   1aaea:	f003 fd25 	bl	1e538 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1aaee:	f89d a00b 	ldrb.w	sl, [sp, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1aaf2:	2204      	movs	r2, #4
   1aaf4:	a904      	add	r1, sp, #16
   1aaf6:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1aaf8:	f88d a017 	strb.w	sl, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1aafc:	f003 fd02 	bl	1e504 <memcmp>
   1ab00:	b150      	cbz	r0, 1ab18 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1ab02:	6833      	ldr	r3, [r6, #0]
   1ab04:	2201      	movs	r2, #1
   1ab06:	685b      	ldr	r3, [r3, #4]
   1ab08:	4651      	mov	r1, sl
   1ab0a:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:81
            ++count;
   1ab0c:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1ab0e:	4798      	blx	r3
   1ab10:	2800      	cmp	r0, #0
   1ab12:	d1de      	bne.n	1aad2 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:83
                dropped++;
   1ab14:	3401      	adds	r4, #1
   1ab16:	e7dc      	b.n	1aad2 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:87
        int pkts = count / MESH_DATA_PAYLOAD_SIZE;
   1ab18:	2218      	movs	r2, #24
   1ab1a:	fbb7 f3f2 	udiv	r3, r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:88
        if (0 != (count % MESH_DATA_PAYLOAD_SIZE)) {
   1ab1e:	fb02 7213 	mls	r2, r2, r3, r7
   1ab22:	b102      	cbz	r2, 1ab26 <wsStreamHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:89
            pkts++;
   1ab24:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:92
        output.printf("    Received %i bytes over %i packets\n", count, pkts);
   1ab26:	463a      	mov	r2, r7
   1ab28:	490d      	ldr	r1, [pc, #52]	; (1ab60 <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   1ab2a:	4630      	mov	r0, r6
   1ab2c:	f7fc fd94 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:93
        if (dropped > 0) {
   1ab30:	b13c      	cbz	r4, 1ab42 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:97
                            dropped, __FILE__, __LINE__);
   1ab32:	2361      	movs	r3, #97	; 0x61
   1ab34:	4622      	mov	r2, r4
   1ab36:	9300      	str	r3, [sp, #0]
   1ab38:	490a      	ldr	r1, [pc, #40]	; (1ab64 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   1ab3a:	4b0b      	ldr	r3, [pc, #44]	; (1ab68 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   1ab3c:	4630      	mov	r0, r6
   1ab3e:	f7fc fd8b 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:102
}
   1ab42:	2001      	movs	r0, #1
   1ab44:	b006      	add	sp, #24
   1ab46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:33
        output.putline("Parse error: try: 'stream <addr> <command>'");
   1ab4a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ab4e:	4907      	ldr	r1, [pc, #28]	; (1ab6c <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   1ab50:	4630      	mov	r0, r6
   1ab52:	f7fc fd4b 	bl	175ec <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:101
    return true;
   1ab56:	e7f4      	b.n	1ab42 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   1ab58:	00026467 	.word	0x00026467
   1ab5c:	00025eb1 	.word	0x00025eb1
   1ab60:	00026260 	.word	0x00026260
   1ab64:	000262f3 	.word	0x000262f3
   1ab68:	00026287 	.word	0x00026287
   1ab6c:	000263ac 	.word	0x000263ac

0001ab70 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:17
#include "chip_info.h"



CMD_HANDLER_FUNC(flashProgHandler)
{
   1ab70:	b570      	push	{r4, r5, r6, lr}
   1ab72:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   1ab76:	4605      	mov	r5, r0
   1ab78:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:21
    FIL file;
    const int maxChars = 12;

    if (cmdParams.getLen() >= maxChars) {
   1ab7a:	f7fb fc30 	bl	163de <str::getLen() const>
   1ab7e:	280b      	cmp	r0, #11
   1ab80:	dd05      	ble.n	1ab8e <flashProgHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:22
        output.printf("Filename should be less than %i chars\n", maxChars);
   1ab82:	220c      	movs	r2, #12
   1ab84:	4922      	ldr	r1, [pc, #136]	; (1ac10 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        taskDISABLE_INTERRUPTS();
        chip_program_from_filename(cmdParams());
        sys_reboot();
    }
    else {
        output.printf("Unable to open '%s'\n", cmdParams());
   1ab86:	4620      	mov	r0, r4
   1ab88:	f7fc fd66 	bl	17658 <CharDev::printf(char const*, ...)>
   1ab8c:	e036      	b.n	1abfc <flashProgHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:24
    else if (FR_OK == f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   1ab8e:	4628      	mov	r0, r5
   1ab90:	f7fb fdb7 	bl	16702 <str::operator()() const>
   1ab94:	2201      	movs	r2, #1
   1ab96:	4601      	mov	r1, r0
   1ab98:	a801      	add	r0, sp, #4
   1ab9a:	f7f7 fff7 	bl	12b8c <f_open>
   1ab9e:	4606      	mov	r6, r0
   1aba0:	bb80      	cbnz	r0, 1ac04 <flashProgHandler(str&, CharDev&, void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:26
        f_close(&file);
   1aba2:	a801      	add	r0, sp, #4
   1aba4:	f7f8 fa5c 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:27
        output.printf("%s (%u bytes) will be programmed.\n"
   1aba8:	4628      	mov	r0, r5
   1abaa:	f7fb fdaa 	bl	16702 <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:29
                      cmdParams(), file.fsize);
   1abae:	4919      	ldr	r1, [pc, #100]	; (1ac14 <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   1abb0:	4602      	mov	r2, r0
   1abb2:	9b04      	ldr	r3, [sp, #16]
   1abb4:	4620      	mov	r0, r4
   1abb6:	f7fc fd4f 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:32
        output.flush();
   1abba:	6823      	ldr	r3, [r4, #0]
   1abbc:	4620      	mov	r0, r4
   1abbe:	689b      	ldr	r3, [r3, #8]
   1abc0:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:33
        vTaskDelay(10);
   1abc2:	200a      	movs	r0, #10
   1abc4:	f7fe f9aa 	bl	18f1c <vTaskDelay>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:244
	);
   1abc8:	f04f 0310 	mov.w	r3, #16
   1abcc:	f383 8811 	msr	BASEPRI, r3
   1abd0:	f3bf 8f6f 	isb	sy
   1abd4:	f3bf 8f4f 	dsb	sy
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:41
        chip_program_from_filename(cmdParams());
   1abd8:	4628      	mov	r0, r5
   1abda:	f7fb fd92 	bl	16702 <str::operator()() const>
   1abde:	4602      	mov	r2, r0
chip_program_from_filename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    const uint32_t signature = 0xDEADD00D;      ///< Signature to write to command register
    volatile uint32_t *pCommandReg = &(LPC_RTC->GPREG0); ///< Image program "command" is stored here
    volatile uint32_t *pFilename   = &(LPC_RTC->GPREG1); ///< Null terminated image name (up to 12 chars)

    // Do not use strcpy(), it will not work!
    memcpy((void*) pFilename, filename, maxChars);
   1abe0:	4b0d      	ldr	r3, [pc, #52]	; (1ac18 <flashProgHandler(str&, CharDev&, void*)+0xa8>)
   1abe2:	6800      	ldr	r0, [r0, #0]
   1abe4:	6851      	ldr	r1, [r2, #4]
   1abe6:	c303      	stmia	r3!, {r0, r1}
   1abe8:	6890      	ldr	r0, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75

    // Setting the signature is the "command" to program from the filename upon next boot.
    *pCommandReg = signature;
   1abea:	4a0c      	ldr	r2, [pc, #48]	; (1ac1c <flashProgHandler(str&, CharDev&, void*)+0xac>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    memcpy((void*) pFilename, filename, maxChars);
   1abec:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75
    *pCommandReg = signature;
   1abee:	f843 2c0c 	str.w	r2, [r3, #-12]
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1abf2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1abf6:	22aa      	movs	r2, #170	; 0xaa
   1abf8:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1abfa:	701e      	strb	r6, [r3, #0]
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:48
    }
    return true;
}
   1abfc:	2001      	movs	r0, #1
   1abfe:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   1ac02:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        output.printf("Unable to open '%s'\n", cmdParams());
   1ac04:	4628      	mov	r0, r5
   1ac06:	f7fb fd7c 	bl	16702 <str::operator()() const>
   1ac0a:	4905      	ldr	r1, [pc, #20]	; (1ac20 <flashProgHandler(str&, CharDev&, void*)+0xb0>)
   1ac0c:	4602      	mov	r2, r0
   1ac0e:	e7ba      	b.n	1ab86 <flashProgHandler(str&, CharDev&, void*)+0x16>
   1ac10:	000264ab 	.word	0x000264ab
   1ac14:	000264d2 	.word	0x000264d2
   1ac18:	40024048 	.word	0x40024048
   1ac1c:	deadd00d 	.word	0xdeadd00d
   1ac20:	00026519 	.word	0x00026519

0001ac24 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51

CMD_HANDLER_FUNC(getFileHandler)
{
   1ac24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    const int maxBufferSize = 1024;
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1ac28:	4c41      	ldr	r4, [pc, #260]	; (1ad30 <getFileHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1ac2a:	b0a4      	sub	sp, #144	; 0x90
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1ac2c:	7823      	ldrb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1ac2e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1ac30:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1ac32:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1ac34:	f3bf 8f5b 	dmb	ish
   1ac38:	d40c      	bmi.n	1ac54 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 1)
   1ac3a:	4620      	mov	r0, r4
   1ac3c:	f001 fbcf 	bl	1c3de <__cxa_guard_acquire>
   1ac40:	b140      	cbz	r0, 1ac54 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 2)
   1ac42:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1ac46:	f003 fc2d 	bl	1e4a4 <malloc>
   1ac4a:	4b3a      	ldr	r3, [pc, #232]	; (1ad34 <getFileHandler(str&, CharDev&, void*)+0x110>)
   1ac4c:	6018      	str	r0, [r3, #0]
   1ac4e:	4620      	mov	r0, r4
   1ac50:	f001 fbd1 	bl	1c3f6 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:60
    /**
     * Packet format:
     * buffer <offset> <num bytes> ...
     * commit <filename> <file offset> <num bytes from buffer>
     */
    if (cmdParams.beginsWithIgnoreCase("commit"))
   1ac54:	4938      	ldr	r1, [pc, #224]	; (1ad38 <getFileHandler(str&, CharDev&, void*)+0x114>)
   1ac56:	4630      	mov	r0, r6
   1ac58:	f7fb fc79 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   1ac5c:	4607      	mov	r7, r0
   1ac5e:	4604      	mov	r4, r0
   1ac60:	b330      	cbz	r0, 1acb0 <getFileHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:62
    {
        char filename[128] = { 0 };
   1ac62:	2280      	movs	r2, #128	; 0x80
   1ac64:	2100      	movs	r1, #0
   1ac66:	a804      	add	r0, sp, #16
   1ac68:	f003 fc80 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:63
        int offset = 0;
   1ac6c:	2300      	movs	r3, #0
   1ac6e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:64
        int size = 0;
   1ac70:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:65
        cmdParams.scanf("%*s %128s %i %i", &filename[0], &offset, &size);
   1ac72:	ab03      	add	r3, sp, #12
   1ac74:	9300      	str	r3, [sp, #0]
   1ac76:	aa04      	add	r2, sp, #16
   1ac78:	ab02      	add	r3, sp, #8
   1ac7a:	4930      	ldr	r1, [pc, #192]	; (1ad3c <getFileHandler(str&, CharDev&, void*)+0x118>)
   1ac7c:	4630      	mov	r0, r6
   1ac7e:	f7fb fbb7 	bl	163f0 <str::scanf(char const*, ...)>
   1ac82:	492c      	ldr	r1, [pc, #176]	; (1ad34 <getFileHandler(str&, CharDev&, void*)+0x110>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68

        FRESULT writeStatus = FR_INT_ERR;
        if(0 == offset) {
   1ac84:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1ac86:	9a03      	ldr	r2, [sp, #12]
   1ac88:	6809      	ldr	r1, [r1, #0]
   1ac8a:	a804      	add	r0, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68
        if(0 == offset) {
   1ac8c:	b96b      	cbnz	r3, 1acaa <getFileHandler(str&, CharDev&, void*)+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1ac8e:	f7f9 ff26 	bl	14ade <Storage::write(char const*, void*, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:74
        }
        else {
            writeStatus = Storage::append(filename, spBuffer, size, offset);
        }
        output.printf(FR_OK == writeStatus ? "OK\n" : "File write error\n");
   1ac92:	4b2b      	ldr	r3, [pc, #172]	; (1ad40 <getFileHandler(str&, CharDev&, void*)+0x11c>)
   1ac94:	492b      	ldr	r1, [pc, #172]	; (1ad44 <getFileHandler(str&, CharDev&, void*)+0x120>)
   1ac96:	2800      	cmp	r0, #0
   1ac98:	bf18      	it	ne
   1ac9a:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
            return true;
        }

        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
            if(! output.getChar(&c, OS_MS(2000))) {
                output.printf("ERROR: TIMEOUT\n");
   1ac9c:	4628      	mov	r0, r5
   1ac9e:	f7fc fcdb 	bl	17658 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:107
    else {
        return false;
    }

    return true;
}
   1aca2:	4638      	mov	r0, r7
   1aca4:	b024      	add	sp, #144	; 0x90
   1aca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:72
            writeStatus = Storage::append(filename, spBuffer, size, offset);
   1acaa:	f7f9 ff3a 	bl	14b22 <Storage::append(char const*, void const*, unsigned int, unsigned int)>
   1acae:	e7f0      	b.n	1ac92 <getFileHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:76
    else if (cmdParams.beginsWithIgnoreCase("buffer"))
   1acb0:	4925      	ldr	r1, [pc, #148]	; (1ad48 <getFileHandler(str&, CharDev&, void*)+0x124>)
   1acb2:	4630      	mov	r0, r6
   1acb4:	f7fb fc4b 	bl	1654e <str::beginsWithIgnoreCase(char const*) const>
   1acb8:	4607      	mov	r7, r0
   1acba:	2800      	cmp	r0, #0
   1acbc:	d0f1      	beq.n	1aca2 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1acbe:	ab04      	add	r3, sp, #16
   1acc0:	4630      	mov	r0, r6
   1acc2:	aa03      	add	r2, sp, #12
   1acc4:	4921      	ldr	r1, [pc, #132]	; (1ad4c <getFileHandler(str&, CharDev&, void*)+0x128>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:78
        int offset = 0;
   1acc6:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:79
        int numBytes = 0;
   1acc8:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:81
        char c = 0;
   1acca:	f88d 4008 	strb.w	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1acce:	f7fb fb8f 	bl	163f0 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:85
        if (offset + numBytes > maxBufferSize) {
   1acd2:	9e03      	ldr	r6, [sp, #12]
   1acd4:	9b04      	ldr	r3, [sp, #16]
   1acd6:	4433      	add	r3, r6
   1acd8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1acdc:	dc13      	bgt.n	1ad06 <getFileHandler(str&, CharDev&, void*)+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 1)
            spBuffer[i] = c;
   1acde:	f8df 8054 	ldr.w	r8, [pc, #84]	; 1ad34 <getFileHandler(str&, CharDev&, void*)+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 1)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1ace2:	9b03      	ldr	r3, [sp, #12]
   1ace4:	9a04      	ldr	r2, [sp, #16]
   1ace6:	1af3      	subs	r3, r6, r3
   1ace8:	4293      	cmp	r3, r2
   1acea:	da1d      	bge.n	1ad28 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 2)
   1acec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
   1acf0:	da1a      	bge.n	1ad28 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:91
            if(! output.getChar(&c, OS_MS(2000))) {
   1acf2:	682b      	ldr	r3, [r5, #0]
   1acf4:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   1acf8:	681b      	ldr	r3, [r3, #0]
   1acfa:	a902      	add	r1, sp, #8
   1acfc:	4628      	mov	r0, r5
   1acfe:	4798      	blx	r3
   1ad00:	b940      	cbnz	r0, 1ad14 <getFileHandler(str&, CharDev&, void*)+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
                output.printf("ERROR: TIMEOUT\n");
   1ad02:	4913      	ldr	r1, [pc, #76]	; (1ad50 <getFileHandler(str&, CharDev&, void*)+0x12c>)
   1ad04:	e7ca      	b.n	1ac9c <getFileHandler(str&, CharDev&, void*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:86
            output.printf("ERROR: Max buffer size is %i bytes\n", maxBufferSize);
   1ad06:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1ad0a:	4912      	ldr	r1, [pc, #72]	; (1ad54 <getFileHandler(str&, CharDev&, void*)+0x130>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1ad0c:	4628      	mov	r0, r5
   1ad0e:	f7fc fca3 	bl	17658 <CharDev::printf(char const*, ...)>
   1ad12:	e7c6      	b.n	1aca2 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 3)
            spBuffer[i] = c;
   1ad14:	f8d8 3000 	ldr.w	r3, [r8]
   1ad18:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1ad1c:	559a      	strb	r2, [r3, r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1ad1e:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1ad22:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1ad24:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1ad26:	e7dc      	b.n	1ace2 <getFileHandler(str&, CharDev&, void*)+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1ad28:	4622      	mov	r2, r4
   1ad2a:	490b      	ldr	r1, [pc, #44]	; (1ad58 <getFileHandler(str&, CharDev&, void*)+0x134>)
   1ad2c:	e7ee      	b.n	1ad0c <getFileHandler(str&, CharDev&, void*)+0xe8>
   1ad2e:	bf00      	nop
   1ad30:	2007c774 	.word	0x2007c774
   1ad34:	2007c778 	.word	0x2007c778
   1ad38:	00026442 	.word	0x00026442
   1ad3c:	00026449 	.word	0x00026449
   1ad40:	00026430 	.word	0x00026430
   1ad44:	0002642c 	.word	0x0002642c
   1ad48:	00026459 	.word	0x00026459
   1ad4c:	00026460 	.word	0x00026460
   1ad50:	0002648e 	.word	0x0002648e
   1ad54:	0002646a 	.word	0x0002646a
   1ad58:	0002649e 	.word	0x0002649e

0001ad5c <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
 * Terminal task is our UART0 terminal that handles our commands into the board.
 * This also saves and restores the "disk" telemetry.  Disk telemetry variables
 * are automatically saved and restored across power-cycles to help us preserve
 * any non-volatile information.
 */
class terminalTask : public scheduler_task
   1ad5c:	b538      	push	{r3, r4, r5, lr}
   1ad5e:	4604      	mov	r4, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1ad60:	2500      	movs	r5, #0
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1ad62:	4b10      	ldr	r3, [pc, #64]	; (1ada4 <terminalTask::~terminalTask()+0x48>)
   1ad64:	6003      	str	r3, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
   1ad66:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1ad68:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   1ad6a:	42ab      	cmp	r3, r5
   1ad6c:	d906      	bls.n	1ad7c <terminalTask::~terminalTask()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1ad6e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1ad72:	2110      	movs	r1, #16
   1ad74:	f001 fb31 	bl	1c3da <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1ad78:	3501      	adds	r5, #1
   1ad7a:	e7f4      	b.n	1ad66 <terminalTask::~terminalTask()+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1ad7c:	b108      	cbz	r0, 1ad82 <terminalTask::~terminalTask()+0x26>
   1ad7e:	f7fb fdb7 	bl	168f0 <operator delete[](void*)>
_ZN6VECTORIN12terminalTask9cmdChan_tEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1ad82:	2500      	movs	r5, #0
   1ad84:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1ad86:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1ad88:	42ab      	cmp	r3, r5
   1ad8a:	d906      	bls.n	1ad9a <terminalTask::~terminalTask()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1ad8c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1ad90:	210c      	movs	r1, #12
   1ad92:	f001 fb22 	bl	1c3da <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1ad96:	3501      	adds	r5, #1
   1ad98:	e7f4      	b.n	1ad84 <terminalTask::~terminalTask()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1ad9a:	b108      	cbz	r0, 1ada0 <terminalTask::~terminalTask()+0x44>
   1ad9c:	f7fb fda8 	bl	168f0 <operator delete[](void*)>
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1ada0:	4620      	mov	r0, r4
   1ada2:	bd38      	pop	{r3, r4, r5, pc}
   1ada4:	00026cf4 	.word	0x00026cf4

0001ada8 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   1ada8:	b510      	push	{r4, lr}
   1adaa:	4604      	mov	r4, r0
   1adac:	f7ff ffd6 	bl	1ad5c <terminalTask::~terminalTask()>
   1adb0:	4620      	mov	r0, r4
   1adb2:	2190      	movs	r1, #144	; 0x90
   1adb4:	f001 fb11 	bl	1c3da <operator delete(void*, unsigned int)>
   1adb8:	4620      	mov	r0, r4
   1adba:	bd10      	pop	{r4, pc}

0001adbc <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:59
{
    /* Nothing to do */
}

bool terminalTask::regTlm(void)
{
   1adbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1adbe:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:61
    #if SYS_CFG_ENABLE_TLM
    return (TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mCommandCount, tlm_uint) &&
   1adc0:	2402      	movs	r4, #2
   1adc2:	2601      	movs	r6, #1
   1adc4:	480c      	ldr	r0, [pc, #48]	; (1adf8 <terminalTask::regTlm()+0x3c>)
   1adc6:	f7fa f905 	bl	14fd4 <tlm_component_get_by_name>
   1adca:	9401      	str	r4, [sp, #4]
   1adcc:	9600      	str	r6, [sp, #0]
   1adce:	4623      	mov	r3, r4
   1add0:	f105 0274 	add.w	r2, r5, #116	; 0x74
   1add4:	4909      	ldr	r1, [pc, #36]	; (1adfc <terminalTask::regTlm()+0x40>)
   1add6:	f7fa f971 	bl	150bc <tlm_variable_register>
   1adda:	b150      	cbz	r0, 1adf2 <terminalTask::regTlm()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:62
            TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mDiskTlmSize, tlm_uint));
   1addc:	4806      	ldr	r0, [pc, #24]	; (1adf8 <terminalTask::regTlm()+0x3c>)
   1adde:	f7fa f8f9 	bl	14fd4 <tlm_component_get_by_name>
   1ade2:	9401      	str	r4, [sp, #4]
   1ade4:	9600      	str	r6, [sp, #0]
   1ade6:	4623      	mov	r3, r4
   1ade8:	f105 0276 	add.w	r2, r5, #118	; 0x76
   1adec:	4904      	ldr	r1, [pc, #16]	; (1ae00 <terminalTask::regTlm()+0x44>)
   1adee:	f7fa f965 	bl	150bc <tlm_variable_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:66
    #else
    return true;
    #endif
}
   1adf2:	b002      	add	sp, #8
   1adf4:	bd70      	pop	{r4, r5, r6, pc}
   1adf6:	bf00      	nop
   1adf8:	00025318 	.word	0x00025318
   1adfc:	0002659d 	.word	0x0002659d
   1ae00:	000265ab 	.word	0x000265ab

0001ae04 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:416
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
   1ae04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ae08:	4604      	mov	r4, r0
   1ae0a:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1ae0c:	68c0      	ldr	r0, [r0, #12]
   1ae0e:	0089      	lsls	r1, r1, #2
   1ae10:	f004 fe36 	bl	1fa80 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1ae14:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae18:	68a5      	ldr	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1ae1a:	60e0      	str	r0, [r4, #12]
   1ae1c:	00af      	lsls	r7, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae1e:	42ae      	cmp	r6, r5
   1ae20:	d90d      	bls.n	1ae3e <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1ae22:	200c      	movs	r0, #12
   1ae24:	f7fb fd5e 	bl	168e4 <operator new(unsigned int)>
   1ae28:	68e3      	ldr	r3, [r4, #12]
   1ae2a:	f8c0 8000 	str.w	r8, [r0]
   1ae2e:	f8c0 8004 	str.w	r8, [r0, #4]
   1ae32:	f880 8008 	strb.w	r8, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae36:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1ae38:	51d8      	str	r0, [r3, r7]
   1ae3a:	3704      	adds	r7, #4
   1ae3c:	e7ef      	b.n	1ae1e <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1ae3e:	6066      	str	r6, [r4, #4]
   1ae40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001ae44 <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1ae44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1ae46:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1ae48:	4604      	mov	r4, r0
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1ae4a:	2604      	movs	r6, #4
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1ae4c:	460b      	mov	r3, r1
   1ae4e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   1ae52:	9500      	str	r5, [sp, #0]
   1ae54:	4924      	ldr	r1, [pc, #144]	; (1aee8 <terminalTask::terminalTask(unsigned char)+0xa4>)
   1ae56:	f7fa ff1d 	bl	15c94 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1ae5a:	4b24      	ldr	r3, [pc, #144]	; (1aeec <terminalTask::terminalTask(unsigned char)+0xa8>)
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
   1ae5c:	6366      	str	r6, [r4, #52]	; 0x34
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1ae5e:	6023      	str	r3, [r4, #0]
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1ae60:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1ae62:	63e5      	str	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1ae64:	6425      	str	r5, [r4, #64]	; 0x40
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
   1ae66:	2102      	movs	r1, #2
   1ae68:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1ae6c:	f7ff ffca 	bl	1ae04 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1ae70:	6526      	str	r6, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1ae72:	6565      	str	r5, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1ae74:	65a5      	str	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1ae76:	65e5      	str	r5, [r4, #92]	; 0x5c
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1ae78:	4628      	mov	r0, r5
   1ae7a:	2160      	movs	r1, #96	; 0x60
   1ae7c:	f004 fe00 	bl	1fa80 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae80:	6da5      	ldr	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1ae82:	65e0      	str	r0, [r4, #92]	; 0x5c
   1ae84:	00ae      	lsls	r6, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae86:	2d17      	cmp	r5, #23
   1ae88:	d80c      	bhi.n	1aea4 <terminalTask::terminalTask(unsigned char)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1ae8a:	2010      	movs	r0, #16
   1ae8c:	f7fb fd2a 	bl	168e4 <operator new(unsigned int)>
   1ae90:	4607      	mov	r7, r0
   1ae92:	2210      	movs	r2, #16
   1ae94:	2100      	movs	r1, #0
   1ae96:	f003 fb69 	bl	1e56c <memset>
   1ae9a:	6de3      	ldr	r3, [r4, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1ae9c:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1ae9e:	519f      	str	r7, [r3, r6]
   1aea0:	3604      	adds	r6, #4
   1aea2:	e7f0      	b.n	1ae86 <terminalTask::terminalTask(unsigned char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1aea4:	2318      	movs	r3, #24
   1aea6:	6563      	str	r3, [r4, #84]	; 0x54
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1aea8:	2301      	movs	r3, #1
   1aeaa:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1aeae:	2300      	movs	r3, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
    public:
        /// Default constructor
        SoftTimer() : mTargetMs(0), mIntervalMs(0) {}

        /// Constructor to set timer while instantiating this object.
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1aeb0:	2200      	movs	r2, #0
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1aeb2:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
   1aeb6:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
   1aeba:	67a3      	str	r3, [r4, #120]	; 0x78
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77

        /**
         * Resets the timer from this point of time using the new timer value given.
         * @param ms  The milliseconds at which timer should expire next.
         */
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1aebc:	2700      	movs	r7, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1aebe:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1aec0:	4e0b      	ldr	r6, [pc, #44]	; (1aef0 <terminalTask::terminalTask(unsigned char)+0xac>)
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1aec2:	e9c4 2320 	strd	r2, r3, [r4, #128]	; 0x80
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1aec6:	e9c4 6722 	strd	r6, r7, [r4, #136]	; 0x88
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   1aeca:	f7f5 fae7 	bl	1049c <sys_get_uptime_us>
   1aece:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1aed2:	2300      	movs	r3, #0
   1aed4:	f002 fc70 	bl	1d7b8 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
   1aed8:	1980      	adds	r0, r0, r6
   1aeda:	4179      	adcs	r1, r7
   1aedc:	e9c4 0120 	strd	r0, r1, [r4, #128]	; 0x80
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:56
}
   1aee0:	4620      	mov	r0, r4
   1aee2:	b003      	add	sp, #12
   1aee4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1aee6:	bf00      	nop
   1aee8:	00026cc5 	.word	0x00026cc5
   1aeec:	00026cf4 	.word	0x00026cf4
   1aef0:	0001d4c0 	.word	0x0001d4c0

0001aef4 <terminalTask::saveDiskTlm()>:
_ZN12terminalTask11saveDiskTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:217

    return true;
}

bool terminalTask::saveDiskTlm(void)
{
   1aef4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1aef6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:221
    bool changed = false;

    #if SYS_CFG_ENABLE_TLM
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1aef8:	481a      	ldr	r0, [pc, #104]	; (1af64 <terminalTask::saveDiskTlm()+0x70>)
   1aefa:	f7fa f86b 	bl	14fd4 <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224

    /* Size of telemetry shouldn't change */
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1aefe:	f8b5 6076 	ldrh.w	r6, [r5, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:221
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1af02:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1af04:	b916      	cbnz	r6, 1af0c <terminalTask::saveDiskTlm()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:225
        return changed;
   1af06:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:248
        }
    }
    #endif

    return changed;
}
   1af08:	b003      	add	sp, #12
   1af0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224 (discriminator 2)
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1af0c:	f7fa fc88 	bl	15820 <tlm_binary_get_size_one>
   1af10:	4286      	cmp	r6, r0
   1af12:	d1f8      	bne.n	1af06 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:228
    if (!tlm_binary_compare_one(disk, mpBinaryDiskTlm))
   1af14:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1af16:	4620      	mov	r0, r4
   1af18:	f7fa fc9a 	bl	15850 <tlm_binary_compare_one>
   1af1c:	4607      	mov	r7, r0
   1af1e:	2800      	cmp	r0, #0
   1af20:	d1f1      	bne.n	1af06 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:231
        puts("Disk variables changed...");
   1af22:	4811      	ldr	r0, [pc, #68]	; (1af68 <terminalTask::saveDiskTlm()+0x74>)
   1af24:	f004 fd42 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:233
        FILE *file = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   1af28:	4910      	ldr	r1, [pc, #64]	; (1af6c <terminalTask::saveDiskTlm()+0x78>)
   1af2a:	480e      	ldr	r0, [pc, #56]	; (1af64 <terminalTask::saveDiskTlm()+0x70>)
   1af2c:	f002 fffa 	bl	1df24 <fopen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:234
        if (file) {
   1af30:	4606      	mov	r6, r0
   1af32:	b1a8      	cbz	r0, 1af60 <terminalTask::saveDiskTlm()+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:236
            tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1af34:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1af36:	4620      	mov	r0, r4
   1af38:	f7fa fc7d 	bl	15836 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:238
            tlm_stream_one_file(disk, file);
   1af3c:	4631      	mov	r1, r6
   1af3e:	4620      	mov	r0, r4
   1af40:	f7fa f82e 	bl	14fa0 <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:239
            fclose(file);
   1af44:	4630      	mov	r0, r6
   1af46:	f002 fe33 	bl	1dbb0 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:241
            puts("Changes saved to disk...");
   1af4a:	4809      	ldr	r0, [pc, #36]	; (1af70 <terminalTask::saveDiskTlm()+0x7c>)
   1af4c:	f004 fd2e 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:242
            LOG_SIMPLE_MSG("Disk variables saved to disk");
   1af50:	4b08      	ldr	r3, [pc, #32]	; (1af74 <terminalTask::saveDiskTlm()+0x80>)
   1af52:	463a      	mov	r2, r7
   1af54:	9300      	str	r3, [sp, #0]
   1af56:	4639      	mov	r1, r7
   1af58:	463b      	mov	r3, r7
   1af5a:	2001      	movs	r0, #1
   1af5c:	f7fb f874 	bl	16048 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:230
        changed = true;
   1af60:	2001      	movs	r0, #1
   1af62:	e7d1      	b.n	1af08 <terminalTask::saveDiskTlm()+0x14>
   1af64:	00025cbe 	.word	0x00025cbe
   1af68:	0002652e 	.word	0x0002652e
   1af6c:	000257dd 	.word	0x000257dd
   1af70:	00026548 	.word	0x00026548
   1af74:	00026561 	.word	0x00026561

0001af78 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:252


void terminalTask::handleEchoAndBackspace(cmdChan_t *io, char newChar)
{
   1af78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:254
    /* Pointers to reduce too many -> references */
    const bool echo = io->echo;
   1af7c:	7a0f      	ldrb	r7, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:252
{
   1af7e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:255
    str *pStr = io->cmdstr;
   1af80:	684d      	ldr	r5, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:256
    CharDev *iodev = io->iodev;
   1af82:	680e      	ldr	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:259

    // Backspace 1 char @ terminal and erase last char of string
    if (echo && '\b' == newChar) {
   1af84:	b33f      	cbz	r7, 1afd6 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:259 (discriminator 1)
   1af86:	2a08      	cmp	r2, #8
   1af88:	d119      	bne.n	1afbe <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:260
        if(pStr->getLen() > 0) {
   1af8a:	4628      	mov	r0, r5
   1af8c:	f7fb fa27 	bl	163de <str::getLen() const>
   1af90:	2800      	cmp	r0, #0
   1af92:	dd12      	ble.n	1afba <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:261
            iodev->put("\b ");
   1af94:	4913      	ldr	r1, [pc, #76]	; (1afe4 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x6c>)
   1af96:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1af9a:	4630      	mov	r0, r6
   1af9c:	f7fc fb12 	bl	175c4 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:262
            pStr->eraseLast(1);
   1afa0:	2101      	movs	r1, #1
   1afa2:	4628      	mov	r0, r5
   1afa4:	f7fb fb1a 	bl	165dc <str::eraseLast(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:275
    else if ('\n' != newChar && '\r' != newChar) {
        *(pStr) += newChar;
    }

    if (echo) {
        iodev->putChar(newChar);
   1afa8:	6833      	ldr	r3, [r6, #0]
   1afaa:	4621      	mov	r1, r4
   1afac:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:277
    }
}
   1afae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:275
        iodev->putChar(newChar);
   1afb2:	685b      	ldr	r3, [r3, #4]
   1afb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1afb8:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:267
            newChar = bellSound;
   1afba:	2407      	movs	r4, #7
   1afbc:	e7f4      	b.n	1afa8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:270
    else if ('\n' != newChar && '\r' != newChar) {
   1afbe:	2a0a      	cmp	r2, #10
   1afc0:	d0f2      	beq.n	1afa8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1afc2:	2a0d      	cmp	r2, #13
   1afc4:	d0f0      	beq.n	1afa8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:271
        *(pStr) += newChar;
   1afc6:	4621      	mov	r1, r4
   1afc8:	4628      	mov	r0, r5
   1afca:	f7fb fc28 	bl	1681e <str::operator+=(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:274
    if (echo) {
   1afce:	2f00      	cmp	r7, #0
   1afd0:	d1ea      	bne.n	1afa8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1afd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:270
    else if ('\n' != newChar && '\r' != newChar) {
   1afd6:	2a0a      	cmp	r2, #10
   1afd8:	d0fb      	beq.n	1afd2 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5a>
   1afda:	2a0d      	cmp	r2, #13
   1afdc:	d1f3      	bne.n	1afc6 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x4e>
   1afde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1afe2:	bf00      	nop
   1afe4:	0002657e 	.word	0x0002657e

0001afe8 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:280

void terminalTask::addCommandChannel(CharDev *channel, bool echo)
{
   1afe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1afea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:284
    cmdChan_t input;
    input.iodev = channel;
    input.echo = echo;
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1afec:	2014      	movs	r0, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:280
{
   1afee:	460f      	mov	r7, r1
   1aff0:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:284
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1aff2:	f7fb fc77 	bl	168e4 <operator new(unsigned int)>
   1aff6:	2180      	movs	r1, #128	; 0x80
   1aff8:	4606      	mov	r6, r0
   1affa:	f7fb fbbf 	bl	1677c <str::str(int)>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
    if(mVectorSize >= mVectorCapacity)
   1affe:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1b000:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b002:	428b      	cmp	r3, r1
   1b004:	d306      	bcc.n	1b014 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   1b006:	6b63      	ldr	r3, [r4, #52]	; 0x34
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418
    if(newSize < mVectorCapacity)
   1b008:	18c9      	adds	r1, r1, r3
   1b00a:	d203      	bcs.n	1b014 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   1b00c:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1b010:	f7ff fef8 	bl	1ae04 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   1b014:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b016:	6c22      	ldr	r2, [r4, #64]	; 0x40
   1b018:	1c59      	adds	r1, r3, #1
   1b01a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1b01e:	63e1      	str	r1, [r4, #60]	; 0x3c
   1b020:	601f      	str	r7, [r3, #0]
   1b022:	605e      	str	r6, [r3, #4]
   1b024:	721d      	strb	r5, [r3, #8]
   1b026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001b028 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:289
    mCmdIface += input;
}

terminalTask::cmdChan_t terminalTask::getCommand(void)
{
   1b028:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:290
    if (0 == mCmdIface.size()) {
   1b02c:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:289
{
   1b02e:	4606      	mov	r6, r0
   1b030:	460d      	mov	r5, r1
   1b032:	ac01      	add	r4, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:290
    if (0 == mCmdIface.size()) {
   1b034:	b977      	cbnz	r7, 1b054 <terminalTask::getCommand()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:291
        vTaskDelayMs(1000);
   1b036:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1b03a:	f7fd ff6f 	bl	18f1c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:292
        cmdChan_t noIface = { NULL, NULL };
   1b03e:	9701      	str	r7, [sp, #4]
   1b040:	6067      	str	r7, [r4, #4]
   1b042:	60a7      	str	r7, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:341
            ret.iodev = NULL;
            break;
        }
    } while (c != '\n');

    return ret;
   1b044:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   1b048:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:342
}
   1b04c:	4630      	mov	r0, r6
   1b04e:	b004      	add	sp, #16
   1b050:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   1b054:	6c0b      	ldr	r3, [r1, #64]	; 0x40
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b056:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:297
    cmdChan_t ret = mCmdIface[0];
   1b05a:	681b      	ldr	r3, [r3, #0]
   1b05c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b060:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:297
    cmdChan_t ret = mCmdIface[0];
   1b062:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b066:	f808 3d0d 	strb.w	r3, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:303
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b06a:	f7fd fe53 	bl	18d14 <xTaskGetTickCount>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b06e:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:303
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b070:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306 (discriminator 1)
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b072:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1b074:	429f      	cmp	r7, r3
   1b076:	d25c      	bcs.n	1b132 <terminalTask::getCommand()+0x10a>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b078:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1b07a:	ea4f 0a87 	mov.w	sl, r7, lsl #2
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308
            if (mCmdIface[idx].iodev->isReady() && mCmdIface[idx].iodev->getChar(&c, 0))
   1b07e:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   1b082:	6818      	ldr	r0, [r3, #0]
   1b084:	7c03      	ldrb	r3, [r0, #16]
   1b086:	2b00      	cmp	r3, #0
   1b088:	d051      	beq.n	1b12e <terminalTask::getCommand()+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308 (discriminator 1)
   1b08a:	6803      	ldr	r3, [r0, #0]
   1b08c:	2200      	movs	r2, #0
   1b08e:	681b      	ldr	r3, [r3, #0]
   1b090:	4641      	mov	r1, r8
   1b092:	4798      	blx	r3
   1b094:	2800      	cmp	r0, #0
   1b096:	d04a      	beq.n	1b12e <terminalTask::getCommand()+0x106>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b098:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1b09a:	429f      	cmp	r7, r3
   1b09c:	d244      	bcs.n	1b128 <terminalTask::getCommand()+0x100>
   1b09e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1b0a0:	f853 300a 	ldr.w	r3, [r3, sl]
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:310
                ret = mCmdIface[idx];
   1b0a4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1b0a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:311
                handleEchoAndBackspace(&ret, c);
   1b0ac:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1b0b0:	4621      	mov	r1, r4
   1b0b2:	4628      	mov	r0, r5
   1b0b4:	f7ff ff60 	bl	1af78 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b0b8:	f7f5 f9f0 	bl	1049c <sys_get_uptime_us>
   1b0bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b0c0:	2300      	movs	r3, #0
   1b0c2:	f002 fb79 	bl	1d7b8 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80

        /// Resets the timer from this point of time using the previous timeout interval
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1b0c6:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b0ca:	1880      	adds	r0, r0, r2
   1b0cc:	4159      	adcs	r1, r3
   1b0ce:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:327
        if (ret.cmdstr->getLen() >= ret.cmdstr->getCapacity() - 1) {
   1b0d2:	9802      	ldr	r0, [sp, #8]
   1b0d4:	f7fb f983 	bl	163de <str::getLen() const>
   1b0d8:	4607      	mov	r7, r0
   1b0da:	9802      	ldr	r0, [sp, #8]
   1b0dc:	f7fb f982 	bl	163e4 <str::getCapacity() const>
   1b0e0:	3801      	subs	r0, #1
   1b0e2:	4287      	cmp	r7, r0
   1b0e4:	daae      	bge.n	1b044 <terminalTask::getCommand()+0x1c>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
        { return (0 == mIntervalMs) ? false : ( getCurrentTimeMs() >= mTargetMs); }
   1b0e6:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b0ea:	4313      	orrs	r3, r2
   1b0ec:	d029      	beq.n	1b142 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b0ee:	f7f5 f9d5 	bl	1049c <sys_get_uptime_us>
   1b0f2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b0f6:	2300      	movs	r3, #0
   1b0f8:	f002 fb5e 	bl	1d7b8 <__aeabi_uldivmod>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
   1b0fc:	e9d5 2320 	ldrd	r2, r3, [r5, #128]	; 0x80
   1b100:	4299      	cmp	r1, r3
   1b102:	bf08      	it	eq
   1b104:	4290      	cmpeq	r0, r2
   1b106:	d31c      	bcc.n	1b142 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b108:	f7f5 f9c8 	bl	1049c <sys_get_uptime_us>
   1b10c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b110:	2300      	movs	r3, #0
   1b112:	f002 fb51 	bl	1d7b8 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1b116:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b11a:	1880      	adds	r0, r0, r2
   1b11c:	4159      	adcs	r1, r3
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:336
            ret.iodev = NULL;
   1b11e:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
   1b120:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:336
   1b124:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:337
            break;
   1b126:	e78d      	b.n	1b044 <terminalTask::getCommand()+0x1c>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b128:	f105 0344 	add.w	r3, r5, #68	; 0x44
   1b12c:	e7ba      	b.n	1b0a4 <terminalTask::getCommand()+0x7c>
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b12e:	3701      	adds	r7, #1
   1b130:	e79f      	b.n	1b072 <terminalTask::getCommand()+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:322
        if (!gotChar && xTaskGetTickCount() == ticksBefore) {
   1b132:	f7fd fdef 	bl	18d14 <xTaskGetTickCount>
   1b136:	4581      	cmp	r9, r0
   1b138:	d1cb      	bne.n	1b0d2 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:323
            vTaskDelay(2);
   1b13a:	2002      	movs	r0, #2
   1b13c:	f7fd feee 	bl	18f1c <vTaskDelay>
   1b140:	e7c7      	b.n	1b0d2 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:339
    } while (c != '\n');
   1b142:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1b146:	2b0a      	cmp	r3, #10
   1b148:	d18f      	bne.n	1b06a <terminalTask::getCommand()+0x42>
   1b14a:	e77b      	b.n	1b044 <terminalTask::getCommand()+0x1c>

0001b14c <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:174
{
   1b14c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1b150:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:175
    printf("LPC: ");
   1b152:	4827      	ldr	r0, [pc, #156]	; (1b1f0 <terminalTask::run(void*)+0xa4>)
   1b154:	f004 fbb6 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:176
    cmdChan_t cmdChannel = getCommand();
   1b158:	4629      	mov	r1, r5
   1b15a:	a801      	add	r0, sp, #4
   1b15c:	f7ff ff64 	bl	1b028 <terminalTask::getCommand()>
   1b160:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:179
    if (!cmdChannel.iodev) {
   1b162:	b954      	cbnz	r4, 1b17a <terminalTask::run(void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:180
        if (saveDiskTlm()) {
   1b164:	4628      	mov	r0, r5
   1b166:	f7ff fec5 	bl	1aef4 <terminalTask::saveDiskTlm()>
   1b16a:	b910      	cbnz	r0, 1b172 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:184
            puts("");
   1b16c:	4821      	ldr	r0, [pc, #132]	; (1b1f4 <terminalTask::run(void*)+0xa8>)
   1b16e:	f004 fc1d 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:214
}
   1b172:	2001      	movs	r0, #1
   1b174:	b004      	add	sp, #16
   1b176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:190
        str& cmd = *(cmdChannel.cmdstr);
   1b17a:	9e02      	ldr	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:192
        if (cmd.getLen() > 0)
   1b17c:	4630      	mov	r0, r6
   1b17e:	f7fb f92e 	bl	163de <str::getLen() const>
   1b182:	2800      	cmp	r0, #0
   1b184:	ddf5      	ble.n	1b172 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194
            PRINT_EXECUTION_SPEED()
   1b186:	f7f5 f989 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b18a:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b18e:	f105 0e50 	add.w	lr, r5, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194
            PRINT_EXECUTION_SPEED()
   1b192:	4607      	mov	r7, r0
   1b194:	b320      	cbz	r0, 1b1e0 <terminalTask::run(void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
                ++mCommandCount;
   1b196:	f8b5 3074 	ldrh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b19a:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
                ++mCommandCount;
   1b19c:	3301      	adds	r3, #1
   1b19e:	f8a5 3074 	strh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b1a2:	4631      	mov	r1, r6
   1b1a4:	4670      	mov	r0, lr
   1b1a6:	f7fa fcaf 	bl	15b08 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b1aa:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b1ac:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b1ae:	f88d 8000 	strb.w	r8, [sp]
   1b1b2:	f88d 8001 	strb.w	r8, [sp, #1]
   1b1b6:	f88d 3002 	strb.w	r3, [sp, #2]
   1b1ba:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1b1be:	6823      	ldr	r3, [r4, #0]
   1b1c0:	f81d 1005 	ldrb.w	r1, [sp, r5]
   1b1c4:	685b      	ldr	r3, [r3, #4]
   1b1c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b1ca:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b1cc:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1b1ce:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b1d0:	2d04      	cmp	r5, #4
   1b1d2:	d1f4      	bne.n	1b1be <terminalTask::run(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194 (discriminator 2)
            PRINT_EXECUTION_SPEED()
   1b1d4:	f7f5 f962 	bl	1049c <sys_get_uptime_us>
   1b1d8:	1bc1      	subs	r1, r0, r7
   1b1da:	4807      	ldr	r0, [pc, #28]	; (1b1f8 <terminalTask::run(void*)+0xac>)
   1b1dc:	f004 fb72 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:208
            cmd.clear();
   1b1e0:	4630      	mov	r0, r6
   1b1e2:	f7fb f901 	bl	163e8 <str::clear()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:209
            io.flush();
   1b1e6:	6823      	ldr	r3, [r4, #0]
   1b1e8:	4620      	mov	r0, r4
   1b1ea:	689b      	ldr	r3, [r3, #8]
   1b1ec:	4798      	blx	r3
   1b1ee:	e7c0      	b.n	1b172 <terminalTask::run(void*)+0x26>
   1b1f0:	00026581 	.word	0x00026581
   1b1f4:	00026518 	.word	0x00026518
   1b1f8:	00026587 	.word	0x00026587

0001b1fc <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b1fc:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b1fe:	4c06      	ldr	r4, [pc, #24]	; (1b218 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   1b200:	6823      	ldr	r3, [r4, #0]
   1b202:	b933      	cbnz	r3, 1b212 <SingletonTemplate<Uart0>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b204:	202c      	movs	r0, #44	; 0x2c
   1b206:	f7fb fb6d 	bl	168e4 <operator new(unsigned int)>
   1b20a:	4605      	mov	r5, r0
   1b20c:	f7fc fdba 	bl	17d84 <Uart0::Uart0()>
   1b210:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b212:	6820      	ldr	r0, [r4, #0]
   1b214:	bd38      	pop	{r3, r4, r5, pc}
   1b216:	bf00      	nop
   1b218:	2007c5e4 	.word	0x2007c5e4

0001b21c <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:58
        {
            char c = 0;
            Uart0::getInstance().getChar(&c);
            return c;
        }
        static char putcharIntrDriven(char thechar)
   1b21c:	b510      	push	{r4, lr}
   1b21e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
        {
            return Uart0::getInstance().putChar(thechar);
   1b220:	f7ff ffec 	bl	1b1fc <SingletonTemplate<Uart0>::getInstance()>
   1b224:	6803      	ldr	r3, [r0, #0]
   1b226:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:61
        }
   1b228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
            return Uart0::getInstance().putChar(thechar);
   1b22c:	685b      	ldr	r3, [r3, #4]
   1b22e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b232:	4718      	bx	r3

0001b234 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1b234:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:52
        static char getcharIntrDriven(char unused)
   1b236:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1b238:	ac02      	add	r4, sp, #8
   1b23a:	f804 3d01 	strb.w	r3, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:55
            Uart0::getInstance().getChar(&c);
   1b23e:	f7ff ffdd 	bl	1b1fc <SingletonTemplate<Uart0>::getInstance()>
   1b242:	6803      	ldr	r3, [r0, #0]
   1b244:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b248:	681b      	ldr	r3, [r3, #0]
   1b24a:	4621      	mov	r1, r4
   1b24c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:57
        }
   1b24e:	f89d 0007 	ldrb.w	r0, [sp, #7]
   1b252:	b002      	add	sp, #8
   1b254:	bd10      	pop	{r4, pc}
   1b256:	Address 0x000000000001b256 is out of bounds.


0001b258 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1b25c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b25e:	b08a      	sub	sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:71
    CommandProcessor &cp = mCmdProc;
   1b260:	f100 0450 	add.w	r4, r0, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b264:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1b266:	9500      	str	r5, [sp, #0]
   1b268:	4620      	mov	r0, r4
   1b26a:	4b67      	ldr	r3, [pc, #412]	; (1b408 <terminalTask::taskEntry()+0x1b0>)
   1b26c:	4a67      	ldr	r2, [pc, #412]	; (1b40c <terminalTask::taskEntry()+0x1b4>)
   1b26e:	4968      	ldr	r1, [pc, #416]	; (1b410 <terminalTask::taskEntry()+0x1b8>)
   1b270:	f7fa fb66 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:75
    cp.addHandler(memInfoHandler,  "meminfo", "See memory info");
   1b274:	9500      	str	r5, [sp, #0]
   1b276:	4620      	mov	r0, r4
   1b278:	4b66      	ldr	r3, [pc, #408]	; (1b414 <terminalTask::taskEntry()+0x1bc>)
   1b27a:	4a67      	ldr	r2, [pc, #412]	; (1b418 <terminalTask::taskEntry()+0x1c0>)
   1b27c:	4967      	ldr	r1, [pc, #412]	; (1b41c <terminalTask::taskEntry()+0x1c4>)
   1b27e:	f7fa fb5f 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:76
    cp.addHandler(healthHandler,   "health",  "Output system health");
   1b282:	9500      	str	r5, [sp, #0]
   1b284:	4620      	mov	r0, r4
   1b286:	4b66      	ldr	r3, [pc, #408]	; (1b420 <terminalTask::taskEntry()+0x1c8>)
   1b288:	4a66      	ldr	r2, [pc, #408]	; (1b424 <terminalTask::taskEntry()+0x1cc>)
   1b28a:	4967      	ldr	r1, [pc, #412]	; (1b428 <terminalTask::taskEntry()+0x1d0>)
   1b28c:	f7fa fb58 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:77
    cp.addHandler(timeHandler,     "time",    "'time' to view time.  'time set MM DD YYYY HH MM SS Wday' to set time");
   1b290:	9500      	str	r5, [sp, #0]
   1b292:	4620      	mov	r0, r4
   1b294:	4b65      	ldr	r3, [pc, #404]	; (1b42c <terminalTask::taskEntry()+0x1d4>)
   1b296:	4a66      	ldr	r2, [pc, #408]	; (1b430 <terminalTask::taskEntry()+0x1d8>)
   1b298:	4966      	ldr	r1, [pc, #408]	; (1b434 <terminalTask::taskEntry()+0x1dc>)
   1b29a:	f7fa fb51 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:81
                                          "'cat 0:file.txt -noprint' to test if file can be read");
   1b29e:	9500      	str	r5, [sp, #0]
   1b2a0:	4620      	mov	r0, r4
   1b2a2:	4b65      	ldr	r3, [pc, #404]	; (1b438 <terminalTask::taskEntry()+0x1e0>)
   1b2a4:	4a65      	ldr	r2, [pc, #404]	; (1b43c <terminalTask::taskEntry()+0x1e4>)
   1b2a6:	4966      	ldr	r1, [pc, #408]	; (1b440 <terminalTask::taskEntry()+0x1e8>)
   1b2a8:	f7fa fb4a 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:82
    cp.addHandler(cpHandler,     "cp",    "Copy files from/to Flash/SD Card.  Ex: 'cp 0:file.txt 1:file.txt'");
   1b2ac:	9500      	str	r5, [sp, #0]
   1b2ae:	4620      	mov	r0, r4
   1b2b0:	4b64      	ldr	r3, [pc, #400]	; (1b444 <terminalTask::taskEntry()+0x1ec>)
   1b2b2:	4a65      	ldr	r2, [pc, #404]	; (1b448 <terminalTask::taskEntry()+0x1f0>)
   1b2b4:	4965      	ldr	r1, [pc, #404]	; (1b44c <terminalTask::taskEntry()+0x1f4>)
   1b2b6:	f7fa fb43 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:83
    cp.addHandler(dcpHandler,    "dcp",   "Copy all files of a directory to another directory.  Ex: 'dcp 0:src 1:dst'");
   1b2ba:	9500      	str	r5, [sp, #0]
   1b2bc:	4620      	mov	r0, r4
   1b2be:	4b64      	ldr	r3, [pc, #400]	; (1b450 <terminalTask::taskEntry()+0x1f8>)
   1b2c0:	4a64      	ldr	r2, [pc, #400]	; (1b454 <terminalTask::taskEntry()+0x1fc>)
   1b2c2:	4965      	ldr	r1, [pc, #404]	; (1b458 <terminalTask::taskEntry()+0x200>)
   1b2c4:	f7fa fb3c 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:84
    cp.addHandler(lsHandler,     "ls",    "Use 'ls 0:' for Flash, or 'ls 1:' for SD Card");
   1b2c8:	9500      	str	r5, [sp, #0]
   1b2ca:	4620      	mov	r0, r4
   1b2cc:	4b63      	ldr	r3, [pc, #396]	; (1b45c <terminalTask::taskEntry()+0x204>)
   1b2ce:	4a64      	ldr	r2, [pc, #400]	; (1b460 <terminalTask::taskEntry()+0x208>)
   1b2d0:	4964      	ldr	r1, [pc, #400]	; (1b464 <terminalTask::taskEntry()+0x20c>)
   1b2d2:	f7fa fb35 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:85
    cp.addHandler(mkdirHandler,  "mkdir", "Create a directory. Ex: 'mkdir test'");
   1b2d6:	9500      	str	r5, [sp, #0]
   1b2d8:	4620      	mov	r0, r4
   1b2da:	4b63      	ldr	r3, [pc, #396]	; (1b468 <terminalTask::taskEntry()+0x210>)
   1b2dc:	4a63      	ldr	r2, [pc, #396]	; (1b46c <terminalTask::taskEntry()+0x214>)
   1b2de:	4964      	ldr	r1, [pc, #400]	; (1b470 <terminalTask::taskEntry()+0x218>)
   1b2e0:	f7fa fb2e 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:86
    cp.addHandler(mvHandler,     "mv",    "Rename a file. Ex: 'rm 0:file.txt 0:new.txt'");
   1b2e4:	9500      	str	r5, [sp, #0]
   1b2e6:	4620      	mov	r0, r4
   1b2e8:	4b62      	ldr	r3, [pc, #392]	; (1b474 <terminalTask::taskEntry()+0x21c>)
   1b2ea:	4a63      	ldr	r2, [pc, #396]	; (1b478 <terminalTask::taskEntry()+0x220>)
   1b2ec:	4963      	ldr	r1, [pc, #396]	; (1b47c <terminalTask::taskEntry()+0x224>)
   1b2ee:	f7fa fb27 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:87
    cp.addHandler(newFileHandler,"nf",    "Write a new file. Ex: 'nf <file.txt>");
   1b2f2:	9500      	str	r5, [sp, #0]
   1b2f4:	4620      	mov	r0, r4
   1b2f6:	4b62      	ldr	r3, [pc, #392]	; (1b480 <terminalTask::taskEntry()+0x228>)
   1b2f8:	4a62      	ldr	r2, [pc, #392]	; (1b484 <terminalTask::taskEntry()+0x22c>)
   1b2fa:	4963      	ldr	r1, [pc, #396]	; (1b488 <terminalTask::taskEntry()+0x230>)
   1b2fc:	f7fa fb20 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:88
    cp.addHandler(rmHandler,     "rm",    "Remove a file. Ex: 'rm 0:file.txt'");
   1b300:	9500      	str	r5, [sp, #0]
   1b302:	4620      	mov	r0, r4
   1b304:	4b61      	ldr	r3, [pc, #388]	; (1b48c <terminalTask::taskEntry()+0x234>)
   1b306:	4a62      	ldr	r2, [pc, #392]	; (1b490 <terminalTask::taskEntry()+0x238>)
   1b308:	4962      	ldr	r1, [pc, #392]	; (1b494 <terminalTask::taskEntry()+0x23c>)
   1b30a:	f7fa fb19 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:93
                                           "'i2c discover' : Discovers all I2C devices on the BUS");
   1b30e:	9500      	str	r5, [sp, #0]
   1b310:	4620      	mov	r0, r4
   1b312:	4b61      	ldr	r3, [pc, #388]	; (1b498 <terminalTask::taskEntry()+0x240>)
   1b314:	4a61      	ldr	r2, [pc, #388]	; (1b49c <terminalTask::taskEntry()+0x244>)
   1b316:	4962      	ldr	r1, [pc, #392]	; (1b4a0 <terminalTask::taskEntry()+0x248>)
   1b318:	f7fa fb12 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:103
    cp.addHandler(storageHandler,  "storage",  "Parameters: 'format sd', 'format flash', 'mount sd', 'mount flash'");
   1b31c:	9500      	str	r5, [sp, #0]
   1b31e:	4620      	mov	r0, r4
   1b320:	4b60      	ldr	r3, [pc, #384]	; (1b4a4 <terminalTask::taskEntry()+0x24c>)
   1b322:	4a61      	ldr	r2, [pc, #388]	; (1b4a8 <terminalTask::taskEntry()+0x250>)
   1b324:	4961      	ldr	r1, [pc, #388]	; (1b4ac <terminalTask::taskEntry()+0x254>)
   1b326:	f7fa fb0b 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:104
    cp.addHandler(rebootHandler,   "reboot",   "Reboots the system");
   1b32a:	9500      	str	r5, [sp, #0]
   1b32c:	4620      	mov	r0, r4
   1b32e:	4b60      	ldr	r3, [pc, #384]	; (1b4b0 <terminalTask::taskEntry()+0x258>)
   1b330:	4a60      	ldr	r2, [pc, #384]	; (1b4b4 <terminalTask::taskEntry()+0x25c>)
   1b332:	4961      	ldr	r1, [pc, #388]	; (1b4b8 <terminalTask::taskEntry()+0x260>)
   1b334:	f7fa fb04 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:110
                                               );
   1b338:	9500      	str	r5, [sp, #0]
   1b33a:	4620      	mov	r0, r4
   1b33c:	4b5f      	ldr	r3, [pc, #380]	; (1b4bc <terminalTask::taskEntry()+0x264>)
   1b33e:	4a60      	ldr	r2, [pc, #384]	; (1b4c0 <terminalTask::taskEntry()+0x268>)
   1b340:	4960      	ldr	r1, [pc, #384]	; (1b4c4 <terminalTask::taskEntry()+0x26c>)
   1b342:	f7fa fafd 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:111
    cp.addHandler(learnIrHandler,  "learn",    "Begin to learn IR codes for numbers 0-9");
   1b346:	9500      	str	r5, [sp, #0]
   1b348:	4620      	mov	r0, r4
   1b34a:	4b5f      	ldr	r3, [pc, #380]	; (1b4c8 <terminalTask::taskEntry()+0x270>)
   1b34c:	4a5f      	ldr	r2, [pc, #380]	; (1b4cc <terminalTask::taskEntry()+0x274>)
   1b34e:	4960      	ldr	r1, [pc, #384]	; (1b4d0 <terminalTask::taskEntry()+0x278>)
   1b350:	f7fa faf6 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:112
    cp.addHandler(wirelessHandler, "wireless", "Use 'wireless' to see the nested commands");
   1b354:	9500      	str	r5, [sp, #0]
   1b356:	4620      	mov	r0, r4
   1b358:	4b5e      	ldr	r3, [pc, #376]	; (1b4d4 <terminalTask::taskEntry()+0x27c>)
   1b35a:	4a5f      	ldr	r2, [pc, #380]	; (1b4d8 <terminalTask::taskEntry()+0x280>)
   1b35c:	495f      	ldr	r1, [pc, #380]	; (1b4dc <terminalTask::taskEntry()+0x284>)
   1b35e:	f7fa faef 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:121
                                             "Write buffer to file: commit <filename> <file offset> <num bytes from buffer>");
   1b362:	9500      	str	r5, [sp, #0]
   1b364:	4620      	mov	r0, r4
   1b366:	4b5e      	ldr	r3, [pc, #376]	; (1b4e0 <terminalTask::taskEntry()+0x288>)
   1b368:	4a5e      	ldr	r2, [pc, #376]	; (1b4e4 <terminalTask::taskEntry()+0x28c>)
   1b36a:	495f      	ldr	r1, [pc, #380]	; (1b4e8 <terminalTask::taskEntry()+0x290>)
   1b36c:	f7fa fae8 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:122
    cp.addHandler(flashProgHandler, "flash", "'flash <filename>' Will flash CPU with this new binary file");
   1b370:	9500      	str	r5, [sp, #0]
   1b372:	4620      	mov	r0, r4
   1b374:	4b5d      	ldr	r3, [pc, #372]	; (1b4ec <terminalTask::taskEntry()+0x294>)
   1b376:	4a5e      	ldr	r2, [pc, #376]	; (1b4f0 <terminalTask::taskEntry()+0x298>)
   1b378:	495e      	ldr	r1, [pc, #376]	; (1b4f4 <terminalTask::taskEntry()+0x29c>)
   1b37a:	f7fa fae1 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:129
                                                 "'telemetry get <comp. name> <name>' to get variable value\n");
   1b37e:	9500      	str	r5, [sp, #0]
   1b380:	4b5d      	ldr	r3, [pc, #372]	; (1b4f8 <terminalTask::taskEntry()+0x2a0>)
   1b382:	4a5e      	ldr	r2, [pc, #376]	; (1b4fc <terminalTask::taskEntry()+0x2a4>)
   1b384:	495e      	ldr	r1, [pc, #376]	; (1b500 <terminalTask::taskEntry()+0x2a8>)
   1b386:	4620      	mov	r0, r4
   1b388:	f7fa fada 	bl	15940 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:133
    Uart0& uart0 = Uart0::getInstance();
   1b38c:	f7ff ff36 	bl	1b1fc <SingletonTemplate<Uart0>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1b390:	f44f 7380 	mov.w	r3, #256	; 0x100
   1b394:	2220      	movs	r2, #32
   1b396:	f44f 4116 	mov.w	r1, #38400	; 0x9600
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:133
    Uart0& uart0 = Uart0::getInstance();
   1b39a:	4605      	mov	r5, r0
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
        /**
         * @{  This API just provides a means to set a flag if UART is ready or not
         *     This doesn't cause any change to the way UART functions.
         */
        bool isReady(void) { return mReady; }
        void setReady(bool r) { mReady = r; }
   1b39c:	2701      	movs	r7, #1
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1b39e:	f7fc fcd1 	bl	17d44 <Uart0::init(unsigned int, int, int)>
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
   1b3a2:	742f      	strb	r7, [r5, #16]
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
   1b3a4:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:136
    sys_set_inchar_func(uart0.getcharIntrDriven);
   1b3a6:	4857      	ldr	r0, [pc, #348]	; (1b504 <terminalTask::taskEntry()+0x2ac>)
   1b3a8:	f7fb fbaa 	bl	16b00 <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:137
    sys_set_outchar_func(uart0.putcharIntrDriven);
   1b3ac:	4856      	ldr	r0, [pc, #344]	; (1b508 <terminalTask::taskEntry()+0x2b0>)
   1b3ae:	f7fb fba1 	bl	16af4 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:140
    addCommandChannel(&uart0, true);
   1b3b2:	463a      	mov	r2, r7
   1b3b4:	4629      	mov	r1, r5
   1b3b6:	4630      	mov	r0, r6
   1b3b8:	f7ff fe16 	bl	1afe8 <terminalTask::addCommandChannel(CharDev*, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:154
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1b3bc:	4853      	ldr	r0, [pc, #332]	; (1b50c <terminalTask::taskEntry()+0x2b4>)
   1b3be:	f7f9 fe09 	bl	14fd4 <tlm_component_get_by_name>
   1b3c2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:155
    mDiskTlmSize = tlm_binary_get_size_one(disk);
   1b3c4:	f7fa fa2c 	bl	15820 <tlm_binary_get_size_one>
   1b3c8:	f8a6 0076 	strh.w	r0, [r6, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:156
    mpBinaryDiskTlm = new char[mDiskTlmSize];
   1b3cc:	b280      	uxth	r0, r0
   1b3ce:	f7fb fa8b 	bl	168e8 <operator new[](unsigned int)>
   1b3d2:	4601      	mov	r1, r0
   1b3d4:	67b0      	str	r0, [r6, #120]	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:162
    tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1b3d6:	4638      	mov	r0, r7
   1b3d8:	f7fa fa2d 	bl	15836 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:166
    STR_ON_STACK(help, 8);
   1b3dc:	2208      	movs	r2, #8
   1b3de:	a903      	add	r1, sp, #12
   1b3e0:	a805      	add	r0, sp, #20
   1b3e2:	f7fa ffd5 	bl	16390 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:167
    help = "help";
   1b3e6:	a805      	add	r0, sp, #20
   1b3e8:	4949      	ldr	r1, [pc, #292]	; (1b510 <terminalTask::taskEntry()+0x2b8>)
   1b3ea:	f7fb fa43 	bl	16874 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:168
    mCmdProc.handleCommand(help, uart0);
   1b3ee:	462a      	mov	r2, r5
   1b3f0:	a905      	add	r1, sp, #20
   1b3f2:	4620      	mov	r0, r4
   1b3f4:	f7fa fb88 	bl	15b08 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:166
    STR_ON_STACK(help, 8);
   1b3f8:	a805      	add	r0, sp, #20
   1b3fa:	f7fa ffdd 	bl	163b8 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:171
}
   1b3fe:	4640      	mov	r0, r8
   1b400:	b00a      	add	sp, #40	; 0x28
   1b402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b406:	bf00      	nop
   1b408:	000265b8 	.word	0x000265b8
   1b40c:	000265fa 	.word	0x000265fa
   1b410:	00019505 	.word	0x00019505
   1b414:	000265ef 	.word	0x000265ef
   1b418:	000265ff 	.word	0x000265ff
   1b41c:	000195ed 	.word	0x000195ed
   1b420:	00026607 	.word	0x00026607
   1b424:	00026615 	.word	0x00026615
   1b428:	0001a0c1 	.word	0x0001a0c1
   1b42c:	0002661c 	.word	0x0002661c
   1b430:	0002665d 	.word	0x0002665d
   1b434:	00019611 	.word	0x00019611
   1b438:	00026662 	.word	0x00026662
   1b43c:	000266be 	.word	0x000266be
   1b440:	000198ed 	.word	0x000198ed
   1b444:	000266c2 	.word	0x000266c2
   1b448:	00026750 	.word	0x00026750
   1b44c:	0001986d 	.word	0x0001986d
   1b450:	00026704 	.word	0x00026704
   1b454:	0002674f 	.word	0x0002674f
   1b458:	00019cfd 	.word	0x00019cfd
   1b45c:	00026753 	.word	0x00026753
   1b460:	00026781 	.word	0x00026781
   1b464:	000199ed 	.word	0x000199ed
   1b468:	00026784 	.word	0x00026784
   1b46c:	000267a9 	.word	0x000267a9
   1b470:	00019b71 	.word	0x00019b71
   1b474:	000267af 	.word	0x000267af
   1b478:	000267dc 	.word	0x000267dc
   1b47c:	00019be9 	.word	0x00019be9
   1b480:	000267df 	.word	0x000267df
   1b484:	00027475 	.word	0x00027475
   1b488:	00019c45 	.word	0x00019c45
   1b48c:	00026804 	.word	0x00026804
   1b490:	00026827 	.word	0x00026827
   1b494:	00019bad 	.word	0x00019bad
   1b498:	0002682a 	.word	0x0002682a
   1b49c:	000268fd 	.word	0x000268fd
   1b4a0:	0001a269 	.word	0x0001a269
   1b4a4:	00026901 	.word	0x00026901
   1b4a8:	00026944 	.word	0x00026944
   1b4ac:	00019e39 	.word	0x00019e39
   1b4b0:	0002694c 	.word	0x0002694c
   1b4b4:	0002695f 	.word	0x0002695f
   1b4b8:	00019ef5 	.word	0x00019ef5
   1b4bc:	00026966 	.word	0x00026966
   1b4c0:	00026a65 	.word	0x00026a65
   1b4c4:	000196d5 	.word	0x000196d5
   1b4c8:	00026a69 	.word	0x00026a69
   1b4cc:	00026a91 	.word	0x00026a91
   1b4d0:	0001a069 	.word	0x0001a069
   1b4d4:	00026a97 	.word	0x00026a97
   1b4d8:	00026d6a 	.word	0x00026d6a
   1b4dc:	0001a6a5 	.word	0x0001a6a5
   1b4e0:	00026ac1 	.word	0x00026ac1
   1b4e4:	00026bb5 	.word	0x00026bb5
   1b4e8:	0001ac25 	.word	0x0001ac25
   1b4ec:	00026b7e 	.word	0x00026b7e
   1b4f0:	00025be4 	.word	0x00025be4
   1b4f4:	0001ab71 	.word	0x0001ab71
   1b4f8:	00026bba 	.word	0x00026bba
   1b4fc:	00026cbb 	.word	0x00026cbb
   1b500:	00019f25 	.word	0x00019f25
   1b504:	0001b235 	.word	0x0001b235
   1b508:	0001b21d 	.word	0x0001b21d
   1b50c:	00025cbe 	.word	0x00025cbe
   1b510:	0002519b 	.word	0x0002519b

0001b514 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b516:	4c0c      	ldr	r4, [pc, #48]	; (1b548 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   1b518:	6823      	ldr	r3, [r4, #0]
   1b51a:	b99b      	cbnz	r3, 1b544 <SingletonTemplate<LED_Display>::getInstance()+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b51c:	2008      	movs	r0, #8
   1b51e:	f7fb f9e1 	bl	168e4 <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b522:	4d0a      	ldr	r5, [pc, #40]	; (1b54c <SingletonTemplate<LED_Display>::getInstance()+0x38>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b524:	4606      	mov	r6, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b526:	682b      	ldr	r3, [r5, #0]
   1b528:	b93b      	cbnz	r3, 1b53a <SingletonTemplate<LED_Display>::getInstance()+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b52a:	f44f 7094 	mov.w	r0, #296	; 0x128
   1b52e:	f7fb f9d9 	bl	168e4 <operator new(unsigned int)>
   1b532:	4607      	mov	r7, r0
   1b534:	f7fc fd5a 	bl	17fec <I2C2::I2C2()>
   1b538:	602f      	str	r7, [r5, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1b53a:	682b      	ldr	r3, [r5, #0]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1b53c:	6026      	str	r6, [r4, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1b53e:	6033      	str	r3, [r6, #0]
   1b540:	2340      	movs	r3, #64	; 0x40
   1b542:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b544:	6820      	ldr	r0, [r4, #0]
   1b546:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b548:	2007c77c 	.word	0x2007c77c
   1b54c:	2007c5ec 	.word	0x2007c5ec

0001b550 <hl_print_line()>:
_ZL13hl_print_linev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   1b550:	4801      	ldr	r0, [pc, #4]	; (1b558 <hl_print_line()+0x8>)
   1b552:	f004 ba2b 	b.w	1f9ac <puts>
   1b556:	bf00      	nop
   1b558:	000270c0 	.word	0x000270c0

0001b55c <ssp_set_max_clock>:
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   1b55c:	b538      	push	{r3, r4, r5, lr}
   1b55e:	4604      	mov	r4, r0
   1b560:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   1b562:	f7f5 f929 	bl	107b8 <sys_get_cpu_clock>
   1b566:	4b07      	ldr	r3, [pc, #28]	; (1b584 <ssp_set_max_clock+0x28>)
   1b568:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   1b56c:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1b56e:	fbb0 f2f3 	udiv	r2, r0, r3
   1b572:	42aa      	cmp	r2, r5
   1b574:	d904      	bls.n	1b580 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   1b576:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1b57a:	d001      	beq.n	1b580 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   1b57c:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1b57e:	e7f6      	b.n	1b56e <ssp_set_max_clock+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   1b580:	6123      	str	r3, [r4, #16]
   1b582:	bd38      	pop	{r3, r4, r5, pc}
   1b584:	000f4240 	.word	0x000f4240

0001b588 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   1b588:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   1b58a:	f200 2635 	addw	r6, r0, #565	; 0x235
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   1b58e:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   1b590:	2201      	movs	r2, #1
   1b592:	4631      	mov	r1, r6
   1b594:	f7f7 fabc 	bl	12b10 <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   1b598:	4605      	mov	r5, r0
   1b59a:	bb38      	cbnz	r0, 1b5ec <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1b59c:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1b59e:	aa02      	add	r2, sp, #8
   1b5a0:	a903      	add	r1, sp, #12
   1b5a2:	4630      	mov	r0, r6
   1b5a4:	f7f7 fe87 	bl	132b6 <f_getfree>
   1b5a8:	bb40      	cbnz	r0, 1b5fc <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1b5aa:	9802      	ldr	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1b5ac:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1b5ae:	7882      	ldrb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1b5b0:	fb03 f102 	mul.w	r1, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1b5b4:	6983      	ldr	r3, [r0, #24]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   1b5b6:	4812      	ldr	r0, [pc, #72]	; (1b600 <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   1b5b8:	3b02      	subs	r3, #2
   1b5ba:	435a      	muls	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1b5bc:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   1b5be:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   1b5c2:	bf38      	it	cc
   1b5c4:	2001      	movcc	r0, #1
   1b5c6:	4b0f      	ldr	r3, [pc, #60]	; (1b604 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   1b5c8:	bf24      	itt	cs
   1b5ca:	4603      	movcs	r3, r0
   1b5cc:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1b5d0:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   1b5d2:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   1b5d6:	fbb2 f2f0 	udiv	r2, r2, r0
   1b5da:	9100      	str	r1, [sp, #0]
   1b5dc:	9301      	str	r3, [sp, #4]
   1b5de:	4621      	mov	r1, r4
   1b5e0:	4809      	ldr	r0, [pc, #36]	; (1b608 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   1b5e2:	f004 f96f 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   1b5e6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   1b5e8:	b004      	add	sp, #16
   1b5ea:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1b5ec:	4b07      	ldr	r3, [pc, #28]	; (1b60c <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   1b5ee:	462a      	mov	r2, r5
   1b5f0:	4621      	mov	r1, r4
   1b5f2:	4807      	ldr	r0, [pc, #28]	; (1b610 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   1b5f4:	f004 f966 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   1b5f8:	2000      	movs	r0, #0
   1b5fa:	e7f5      	b.n	1b5e8 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1b5fc:	4b05      	ldr	r3, [pc, #20]	; (1b614 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   1b5fe:	e7f6      	b.n	1b5ee <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   1b600:	000270fe 	.word	0x000270fe
   1b604:	000270fb 	.word	0x000270fb
   1b608:	00027108 	.word	0x00027108
   1b60c:	00027105 	.word	0x00027105
   1b610:	00027136 	.word	0x00027136
   1b614:	00027101 	.word	0x00027101

0001b618 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b618:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b61a:	4c05      	ldr	r4, [pc, #20]	; (1b630 <SingletonTemplate<LED>::getInstance()+0x18>)
   1b61c:	6825      	ldr	r5, [r4, #0]
   1b61e:	b925      	cbnz	r5, 1b62a <SingletonTemplate<LED>::getInstance()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b620:	2001      	movs	r0, #1
   1b622:	f7fb f95f 	bl	168e4 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   1b626:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1b628:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b62a:	6820      	ldr	r0, [r4, #0]
   1b62c:	bd38      	pop	{r3, r4, r5, pc}
   1b62e:	bf00      	nop
   1b630:	2007c784 	.word	0x2007c784

0001b634 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b634:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b636:	4c08      	ldr	r4, [pc, #32]	; (1b658 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   1b638:	6823      	ldr	r3, [r4, #0]
   1b63a:	b95b      	cbnz	r3, 1b654 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b63c:	200c      	movs	r0, #12
   1b63e:	f7fb f951 	bl	168e4 <operator new(unsigned int)>
   1b642:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1b644:	f7fe fd2c 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1b648:	2390      	movs	r3, #144	; 0x90
   1b64a:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1b64c:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1b64e:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1b650:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1b652:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b654:	6820      	ldr	r0, [r4, #0]
   1b656:	bd38      	pop	{r3, r4, r5, pc}
   1b658:	2007c754 	.word	0x2007c754

0001b65c <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b65c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b65e:	4c04      	ldr	r4, [pc, #16]	; (1b670 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   1b660:	6823      	ldr	r3, [r4, #0]
   1b662:	b91b      	cbnz	r3, 1b66c <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b664:	2001      	movs	r0, #1
   1b666:	f7fb f93d 	bl	168e4 <operator new(unsigned int)>
   1b66a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b66c:	6820      	ldr	r0, [r4, #0]
   1b66e:	bd10      	pop	{r4, pc}
   1b670:	2007c758 	.word	0x2007c758

0001b674 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b674:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b676:	4c04      	ldr	r4, [pc, #16]	; (1b688 <SingletonTemplate<Switches>::getInstance()+0x14>)
   1b678:	6823      	ldr	r3, [r4, #0]
   1b67a:	b91b      	cbnz	r3, 1b684 <SingletonTemplate<Switches>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b67c:	2001      	movs	r0, #1
   1b67e:	f7fb f931 	bl	168e4 <operator new(unsigned int)>
   1b682:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b684:	6820      	ldr	r0, [r4, #0]
   1b686:	bd10      	pop	{r4, pc}
   1b688:	2007c780 	.word	0x2007c780

0001b68c <high_level_init()>:
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1b68c:	2340      	movs	r3, #64	; 0x40
   1b68e:	49b6      	ldr	r1, [pc, #728]	; (1b968 <high_level_init()+0x2dc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   1b690:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1b692:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1b694:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1b698:	4ab4      	ldr	r2, [pc, #720]	; (1b96c <high_level_init()+0x2e0>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1b69a:	2507      	movs	r5, #7
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   1b69c:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   1b69e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1b6a2:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   1b6a4:	4bb2      	ldr	r3, [pc, #712]	; (1b970 <high_level_init()+0x2e4>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1b6a6:	2402      	movs	r4, #2
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1b6a8:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   1b6aa:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1b6ae:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   1b6b2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   1b6b4:	6818      	ldr	r0, [r3, #0]
   1b6b6:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   1b6ba:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   1b6bc:	6818      	ldr	r0, [r3, #0]
   1b6be:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1b6c2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   1b6c4:	6808      	ldr	r0, [r1, #0]
   1b6c6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   1b6ca:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   1b6cc:	6818      	ldr	r0, [r3, #0]
   1b6ce:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   1b6d2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   1b6d4:	6818      	ldr	r0, [r3, #0]
   1b6d6:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   1b6da:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   1b6dc:	6818      	ldr	r0, [r3, #0]
   1b6de:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   1b6e2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   1b6e4:	6818      	ldr	r0, [r3, #0]
   1b6e6:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   1b6ea:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   1b6ec:	6818      	ldr	r0, [r3, #0]
   1b6ee:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   1b6f2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   1b6f4:	6818      	ldr	r0, [r3, #0]
   1b6f6:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   1b6fa:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   1b6fc:	6858      	ldr	r0, [r3, #4]
   1b6fe:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   1b702:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   1b704:	6858      	ldr	r0, [r3, #4]
   1b706:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   1b70a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   1b70c:	6858      	ldr	r0, [r3, #4]
   1b70e:	f020 0003 	bic.w	r0, r0, #3
   1b712:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   1b714:	6808      	ldr	r0, [r1, #0]
   1b716:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   1b71a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   1b71c:	6858      	ldr	r0, [r3, #4]
   1b71e:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1b722:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   1b724:	6808      	ldr	r0, [r1, #0]
   1b726:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   1b72a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   1b72c:	68d9      	ldr	r1, [r3, #12]
   1b72e:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   1b732:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   1b734:	6811      	ldr	r1, [r2, #0]
   1b736:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   1b73a:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   1b73c:	6859      	ldr	r1, [r3, #4]
   1b73e:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   1b742:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   1b744:	6859      	ldr	r1, [r3, #4]
   1b746:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   1b74a:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   1b74c:	6898      	ldr	r0, [r3, #8]
   1b74e:	4989      	ldr	r1, [pc, #548]	; (1b974 <high_level_init()+0x2e8>)
   1b750:	4001      	ands	r1, r0
   1b752:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   1b754:	6811      	ldr	r1, [r2, #0]
   1b756:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   1b75a:	f041 0101 	orr.w	r1, r1, #1
   1b75e:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   1b760:	6899      	ldr	r1, [r3, #8]
   1b762:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1b766:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   1b768:	6899      	ldr	r1, [r3, #8]
   1b76a:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   1b76e:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   1b770:	6811      	ldr	r1, [r2, #0]
   1b772:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   1b776:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   1b778:	68d9      	ldr	r1, [r3, #12]
   1b77a:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   1b77e:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   1b780:	68d9      	ldr	r1, [r3, #12]
   1b782:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   1b786:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   1b788:	68d9      	ldr	r1, [r3, #12]
   1b78a:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1b78e:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   1b790:	6813      	ldr	r3, [r2, #0]
   1b792:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   1b796:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   1b798:	6813      	ldr	r3, [r2, #0]
   1b79a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   1b79e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   1b7a0:	f7fc f94a 	bl	17a38 <adc0_init>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   1b7a4:	2101      	movs	r1, #1
   1b7a6:	200a      	movs	r0, #10
   1b7a8:	f7f5 f8b8 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   1b7ac:	2101      	movs	r1, #1
   1b7ae:	200a      	movs	r0, #10
   1b7b0:	f7f5 f8ce 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1b7b4:	4870      	ldr	r0, [pc, #448]	; (1b978 <high_level_init()+0x2ec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1b7b6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1b7b8:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1b7ba:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1b7bc:	f7ff fece 	bl	1b55c <ssp_set_max_clock>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   1b7c0:	f7fc fb00 	bl	17dc4 <ssp1_dma_init>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   1b7c4:	2101      	movs	r1, #1
   1b7c6:	2015      	movs	r0, #21
   1b7c8:	f7f5 f8a8 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   1b7cc:	2101      	movs	r1, #1
   1b7ce:	2015      	movs	r0, #21
   1b7d0:	f7f5 f8be 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1b7d4:	4869      	ldr	r0, [pc, #420]	; (1b97c <high_level_init()+0x2f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1b7d6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1b7d8:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1b7da:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1b7dc:	f7ff febe 	bl	1b55c <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   1b7e0:	f7fe fc5e 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1b7e4:	2164      	movs	r1, #100	; 0x64
   1b7e6:	f7fc fbcb 	bl	17f80 <I2C2::init(unsigned int)>
   1b7ea:	b910      	cbnz	r0, 1b7f2 <high_level_init()+0x166>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   1b7ec:	4864      	ldr	r0, [pc, #400]	; (1b980 <high_level_init()+0x2f4>)
   1b7ee:	f004 f8dd 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   1b7f2:	f7f4 fe29 	bl	10448 <lpc_sys_setup_system_timer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   1b7f6:	f7f5 fc0b 	bl	11010 <wireless_init>
   1b7fa:	b910      	cbnz	r0, 1b802 <high_level_init()+0x176>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   1b7fc:	4861      	ldr	r0, [pc, #388]	; (1b984 <high_level_init()+0x2f8>)
   1b7fe:	f004 f8d5 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   1b802:	4861      	ldr	r0, [pc, #388]	; (1b988 <high_level_init()+0x2fc>)
   1b804:	f7f9 fbf8 	bl	14ff8 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   1b808:	4860      	ldr	r0, [pc, #384]	; (1b98c <high_level_init()+0x300>)
   1b80a:	f7f9 fbf5 	bl	14ff8 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   1b80e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1b812:	f7fa fdac 	bl	1636e <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   1b816:	f7ff fe9b 	bl	1b550 <hl_print_line()>
hl_print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   1b81a:	f7f4 ffcd 	bl	107b8 <sys_get_cpu_clock>
   1b81e:	f001 fddd 	bl	1d3dc <__aeabi_ui2f>
   1b822:	495b      	ldr	r1, [pc, #364]	; (1b990 <high_level_init()+0x304>)
   1b824:	f001 fee6 	bl	1d5f4 <__aeabi_fdiv>
   1b828:	f001 fa4c 	bl	1ccc4 <__aeabi_f2d>
   1b82c:	4602      	mov	r2, r0
   1b82e:	460b      	mov	r3, r1
   1b830:	4858      	ldr	r0, [pc, #352]	; (1b994 <high_level_init()+0x308>)
   1b832:	f004 f847 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   1b836:	f7f4 fce3 	bl	10200 <sys_get_boot_type>
   1b83a:	2805      	cmp	r0, #5
   1b83c:	ac04      	add	r4, sp, #16
   1b83e:	d114      	bne.n	1b86a <high_level_init()+0x1de>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   1b840:	2300      	movs	r3, #0
   1b842:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   1b844:	4b54      	ldr	r3, [pc, #336]	; (1b998 <high_level_init()+0x30c>)
   1b846:	681b      	ldr	r3, [r3, #0]
   1b848:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   1b84a:	f7ff fe81 	bl	1b550 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1b84e:	4b53      	ldr	r3, [pc, #332]	; (1b99c <high_level_init()+0x310>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1b850:	4853      	ldr	r0, [pc, #332]	; (1b9a0 <high_level_init()+0x314>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1b852:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   1b854:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   1b856:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1b858:	9400      	str	r4, [sp, #0]
   1b85a:	f004 f833 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   1b85e:	f7ff fe77 	bl	1b550 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   1b862:	f241 3088 	movw	r0, #5000	; 0x1388
   1b866:	f7fa fd82 	bl	1636e <delay_ms>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1b86a:	f7fd fdff 	bl	1946c <Storage::getFlashDrive()>
   1b86e:	494d      	ldr	r1, [pc, #308]	; (1b9a4 <high_level_init()+0x318>)
   1b870:	f7ff fe8a 	bl	1b588 <hl_mount_storage(FileSystemObject&, char const*)>
   1b874:	4605      	mov	r5, r0
   1b876:	bb68      	cbnz	r0, 1b8d4 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   1b878:	484b      	ldr	r0, [pc, #300]	; (1b9a8 <high_level_init()+0x31c>)
   1b87a:	f004 f823 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   1b87e:	f7f9 f855 	bl	1492c <flash_chip_erase>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   1b882:	f7fd fdf3 	bl	1946c <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1b886:	4629      	mov	r1, r5
   1b888:	462a      	mov	r2, r5
   1b88a:	f200 2035 	addw	r0, r0, #565	; 0x235
   1b88e:	f7f7 ff0d 	bl	136ac <f_mkfs>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   1b892:	4b46      	ldr	r3, [pc, #280]	; (1b9ac <high_level_init()+0x320>)
   1b894:	4a46      	ldr	r2, [pc, #280]	; (1b9b0 <high_level_init()+0x324>)
   1b896:	2800      	cmp	r0, #0
   1b898:	bf0c      	ite	eq
   1b89a:	4610      	moveq	r0, r2
   1b89c:	4618      	movne	r0, r3
   1b89e:	f004 f885 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1b8a2:	f7fd fde3 	bl	1946c <Storage::getFlashDrive()>
   1b8a6:	493f      	ldr	r1, [pc, #252]	; (1b9a4 <high_level_init()+0x318>)
   1b8a8:	f7ff fe6e 	bl	1b588 <hl_mount_storage(FileSystemObject&, char const*)>
   1b8ac:	b990      	cbnz	r0, 1b8d4 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   1b8ae:	4841      	ldr	r0, [pc, #260]	; (1b9b4 <high_level_init()+0x328>)
   1b8b0:	f004 f87c 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   1b8b4:	f7f8 ffbc 	bl	14830 <flash_get_page_size>
   1b8b8:	4601      	mov	r1, r0
   1b8ba:	483f      	ldr	r0, [pc, #252]	; (1b9b8 <high_level_init()+0x32c>)
   1b8bc:	f004 f802 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   1b8c0:	f7f8 ffa6 	bl	14810 <flash_get_page_count>
   1b8c4:	4605      	mov	r5, r0
   1b8c6:	f7f8 ffb3 	bl	14830 <flash_get_page_size>
   1b8ca:	fb00 f105 	mul.w	r1, r0, r5
   1b8ce:	483b      	ldr	r0, [pc, #236]	; (1b9bc <high_level_init()+0x330>)
   1b8d0:	f003 fff8 	bl	1f8c4 <iprintf>
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   1b8d4:	4e3a      	ldr	r6, [pc, #232]	; (1b9c0 <high_level_init()+0x334>)
   1b8d6:	4f3b      	ldr	r7, [pc, #236]	; (1b9c4 <high_level_init()+0x338>)
   1b8d8:	7833      	ldrb	r3, [r6, #0]
   1b8da:	f3bf 8f5b 	dmb	ish
   1b8de:	f013 0501 	ands.w	r5, r3, #1
   1b8e2:	d116      	bne.n	1b912 <high_level_init()+0x286>
   1b8e4:	4630      	mov	r0, r6
   1b8e6:	f000 fd7a 	bl	1c3de <__cxa_guard_acquire>
   1b8ea:	b190      	cbz	r0, 1b912 <high_level_init()+0x286>
   1b8ec:	f44f 700e 	mov.w	r0, #568	; 0x238
   1b8f0:	f7fa fff8 	bl	168e4 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   1b8f4:	2301      	movs	r3, #1
   1b8f6:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   1b8fa:	2331      	movs	r3, #49	; 0x31
   1b8fc:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1b900:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   1b902:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1b906:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   1b90a:	6038      	str	r0, [r7, #0]
   1b90c:	4630      	mov	r0, r6
   1b90e:	f000 fd72 	bl	1c3f6 <__cxa_guard_release>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   1b912:	492d      	ldr	r1, [pc, #180]	; (1b9c8 <high_level_init()+0x33c>)
   1b914:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b916:	4d2d      	ldr	r5, [pc, #180]	; (1b9cc <high_level_init()+0x340>)
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   1b918:	f7ff fe36 	bl	1b588 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   1b91c:	2118      	movs	r1, #24
   1b91e:	4816      	ldr	r0, [pc, #88]	; (1b978 <high_level_init()+0x2ec>)
   1b920:	f7ff fe1c 	bl	1b55c <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   1b924:	f7ff fe14 	bl	1b550 <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1b928:	682b      	ldr	r3, [r5, #0]
   1b92a:	b94b      	cbnz	r3, 1b940 <high_level_init()+0x2b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b92c:	2008      	movs	r0, #8
   1b92e:	f7fa ffd9 	bl	168e4 <operator new(unsigned int)>
   1b932:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1b934:	f7fe fbb4 	bl	1a0a0 <SingletonTemplate<I2C2>::getInstance()>
   1b938:	2338      	movs	r3, #56	; 0x38
   1b93a:	6030      	str	r0, [r6, #0]
   1b93c:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1b93e:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   1b940:	6828      	ldr	r0, [r5, #0]
   1b942:	f7f9 f92d 	bl	14ba0 <Acceleration_Sensor::init()>
   1b946:	4606      	mov	r6, r0
   1b948:	b910      	cbnz	r0, 1b950 <high_level_init()+0x2c4>
   1b94a:	4821      	ldr	r0, [pc, #132]	; (1b9d0 <high_level_init()+0x344>)
   1b94c:	f004 f82e 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   1b950:	f7ff fe70 	bl	1b634 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1b954:	f7f9 fa1e 	bl	14d94 <I2C_Temp::init()>
   1b958:	4605      	mov	r5, r0
   1b95a:	2800      	cmp	r0, #0
   1b95c:	d13c      	bne.n	1b9d8 <high_level_init()+0x34c>
   1b95e:	481d      	ldr	r0, [pc, #116]	; (1b9d4 <high_level_init()+0x348>)
   1b960:	f004 f824 	bl	1f9ac <puts>
   1b964:	462e      	mov	r6, r5
   1b966:	e037      	b.n	1b9d8 <high_level_init()+0x34c>
   1b968:	2009c000 	.word	0x2009c000
   1b96c:	2009c020 	.word	0x2009c020
   1b970:	4002c000 	.word	0x4002c000
   1b974:	fffcfcf0 	.word	0xfffcfcf0
   1b978:	40030000 	.word	0x40030000
   1b97c:	40088000 	.word	0x40088000
   1b980:	00026d1d 	.word	0x00026d1d
   1b984:	00026d4e 	.word	0x00026d4e
   1b988:	00025cbe 	.word	0x00025cbe
   1b98c:	00025318 	.word	0x00025318
   1b990:	49742400 	.word	0x49742400
   1b994:	00026d73 	.word	0x00026d73
   1b998:	40024044 	.word	0x40024044
   1b99c:	40024000 	.word	0x40024000
   1b9a0:	00026d8b 	.word	0x00026d8b
   1b9a4:	00026e03 	.word	0x00026e03
   1b9a8:	00026e0b 	.word	0x00026e0b
   1b9ac:	00026d11 	.word	0x00026d11
   1b9b0:	00026d0c 	.word	0x00026d0c
   1b9b4:	00026e48 	.word	0x00026e48
   1b9b8:	00026e67 	.word	0x00026e67
   1b9bc:	00026e76 	.word	0x00026e76
   1b9c0:	2007c75c 	.word	0x2007c75c
   1b9c4:	2007c760 	.word	0x2007c760
   1b9c8:	00025ba1 	.word	0x00025ba1
   1b9cc:	2007c788 	.word	0x2007c788
   1b9d0:	00026e91 	.word	0x00026e91
   1b9d4:	00026eac 	.word	0x00026eac
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   1b9d8:	f7ff fd9c 	bl	1b514 <SingletonTemplate<LED_Display>::getInstance()>
   1b9dc:	f7f9 f962 	bl	14ca4 <LED_Display::init()>
   1b9e0:	4605      	mov	r5, r0
   1b9e2:	b918      	cbnz	r0, 1b9ec <high_level_init()+0x360>
   1b9e4:	486d      	ldr	r0, [pc, #436]	; (1bb9c <high_level_init()+0x510>)
   1b9e6:	f003 ffe1 	bl	1f9ac <puts>
   1b9ea:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b9ec:	4d6c      	ldr	r5, [pc, #432]	; (1bba0 <high_level_init()+0x514>)
   1b9ee:	682b      	ldr	r3, [r5, #0]
   1b9f0:	b91b      	cbnz	r3, 1b9fa <high_level_init()+0x36e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b9f2:	2001      	movs	r0, #1
   1b9f4:	f7fa ff76 	bl	168e4 <operator new(unsigned int)>
   1b9f8:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   1b9fa:	6828      	ldr	r0, [r5, #0]
   1b9fc:	f7f9 f920 	bl	14c40 <IR_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   1ba00:	f7ff fe2c 	bl	1b65c <SingletonTemplate<Light_Sensor>::getInstance()>
   1ba04:	f7f9 f9b2 	bl	14d6c <Light_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   1ba08:	f7ff fe06 	bl	1b618 <SingletonTemplate<LED>::getInstance()>
   1ba0c:	f7f9 f983 	bl	14d16 <LED::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   1ba10:	f7ff fe30 	bl	1b674 <SingletonTemplate<Switches>::getInstance()>
   1ba14:	f7f9 f9af 	bl	14d76 <Switches::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   1ba18:	f7ff fdfe 	bl	1b618 <SingletonTemplate<LED>::getInstance()>
   1ba1c:	2100      	movs	r1, #0
   1ba1e:	f7f9 f97d 	bl	14d1c <LED::setAll(unsigned char)>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   1ba22:	2e00      	cmp	r6, #0
   1ba24:	f040 8081 	bne.w	1bb2a <high_level_init()+0x49e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   1ba28:	f7ff fd92 	bl	1b550 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   1ba2c:	f7ff fd72 	bl	1b514 <SingletonTemplate<LED_Display>::getInstance()>
   1ba30:	212d      	movs	r1, #45	; 0x2d
   1ba32:	f7f9 f91f 	bl	14c74 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   1ba36:	f7ff fd6d 	bl	1b514 <SingletonTemplate<LED_Display>::getInstance()>
   1ba3a:	212d      	movs	r1, #45	; 0x2d
   1ba3c:	f7f9 f926 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   1ba40:	f7ff fdea 	bl	1b618 <SingletonTemplate<LED>::getInstance()>
   1ba44:	21ff      	movs	r1, #255	; 0xff
   1ba46:	f7f9 f969 	bl	14d1c <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   1ba4a:	2210      	movs	r2, #16
   1ba4c:	2100      	movs	r1, #0
   1ba4e:	4620      	mov	r0, r4
   1ba50:	f002 fd8c 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   1ba54:	2300      	movs	r3, #0
   1ba56:	220f      	movs	r2, #15
   1ba58:	4621      	mov	r1, r4
   1ba5a:	4852      	ldr	r0, [pc, #328]	; (1bba4 <high_level_init()+0x518>)
   1ba5c:	f7f9 f81d 	bl	14a9a <Storage::read(char const*, void*, unsigned int, unsigned int)>
   1ba60:	b980      	cbnz	r0, 1ba84 <high_level_init()+0x3f8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   1ba62:	4620      	mov	r0, r4
   1ba64:	f002 f837 	bl	1dad6 <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   1ba68:	b2c5      	uxtb	r5, r0
   1ba6a:	4628      	mov	r0, r5
   1ba6c:	f7f5 fd14 	bl	11498 <mesh_set_node_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   1ba70:	4a4d      	ldr	r2, [pc, #308]	; (1bba8 <high_level_init()+0x51c>)
   1ba72:	4b4e      	ldr	r3, [pc, #312]	; (1bbac <high_level_init()+0x520>)
   1ba74:	4629      	mov	r1, r5
   1ba76:	2800      	cmp	r0, #0
   1ba78:	bf18      	it	ne
   1ba7a:	4613      	movne	r3, r2
   1ba7c:	4a49      	ldr	r2, [pc, #292]	; (1bba4 <high_level_init()+0x518>)
   1ba7e:	484c      	ldr	r0, [pc, #304]	; (1bbb0 <high_level_init()+0x524>)
   1ba80:	f003 ff20 	bl	1f8c4 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   1ba84:	f7ff fdea 	bl	1b65c <SingletonTemplate<Light_Sensor>::getInstance()>
   1ba88:	f7f9 f972 	bl	14d70 <Light_Sensor::getRawValue()>
   1ba8c:	4605      	mov	r5, r0
   1ba8e:	2000      	movs	r0, #0
   1ba90:	f005 fa4a 	bl	20f28 <time>
   1ba94:	4428      	add	r0, r5
   1ba96:	f003 ff91 	bl	1f9bc <srand>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   1ba9a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1ba9e:	2100      	movs	r1, #0
   1baa0:	4620      	mov	r0, r4
   1baa2:	f002 fd63 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   1baa6:	4620      	mov	r0, r4
   1baa8:	f7f4 fd0e 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   1baac:	4621      	mov	r1, r4
   1baae:	4841      	ldr	r0, [pc, #260]	; (1bbb4 <high_level_init()+0x528>)
   1bab0:	f003 ff08 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   1bab4:	f7ff fd4c 	bl	1b550 <hl_print_line()>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   1bab8:	2280      	movs	r2, #128	; 0x80
   1baba:	2100      	movs	r1, #0
   1babc:	4620      	mov	r0, r4
   1babe:	f002 fd55 	bl	1e56c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   1bac2:	4620      	mov	r0, r4
   1bac4:	f7f8 fe90 	bl	147e8 <flash_read_permanent_id>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   1bac8:	7822      	ldrb	r2, [r4, #0]
   1baca:	2aff      	cmp	r2, #255	; 0xff
   1bacc:	d03b      	beq.n	1bb46 <high_level_init()+0x4ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   1bace:	4621      	mov	r1, r4
   1bad0:	4839      	ldr	r0, [pc, #228]	; (1bbb8 <high_level_init()+0x52c>)
   1bad2:	f003 fef7 	bl	1f8c4 <iprintf>
chip_get_prog_max():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   1bad6:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1bada:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   1badc:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1bae0:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   1bae2:	f24f 0310 	movw	r3, #61456	; 0xf010
   1bae6:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   1bae8:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1baec:	681a      	ldr	r2, [r3, #0]
   1baee:	f24f 0304 	movw	r3, #61444	; 0xf004
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1baf2:	0aad      	lsrs	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1baf4:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1baf6:	0aa4      	lsrs	r4, r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1baf8:	4830      	ldr	r0, [pc, #192]	; (1bbbc <high_level_init()+0x530>)
   1bafa:	f003 fee3 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   1bafe:	462a      	mov	r2, r5
   1bb00:	4621      	mov	r1, r4
   1bb02:	482f      	ldr	r0, [pc, #188]	; (1bbc0 <high_level_init()+0x534>)
   1bb04:	f003 fede 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   1bb08:	4631      	mov	r1, r6
   1bb0a:	482e      	ldr	r0, [pc, #184]	; (1bbc4 <high_level_init()+0x538>)
   1bb0c:	f003 feda 	bl	1f8c4 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   1bb10:	f7ff fd1e 	bl	1b550 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   1bb14:	2001      	movs	r0, #1
   1bb16:	f7fa fa23 	bl	15f60 <logger_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   1bb1a:	482b      	ldr	r0, [pc, #172]	; (1bbc8 <high_level_init()+0x53c>)
   1bb1c:	f003 ff46 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   1bb20:	f7ff fd16 	bl	1b550 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   1bb24:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   1bb28:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   1bb2a:	f7ff fcf3 	bl	1b514 <SingletonTemplate<LED_Display>::getInstance()>
   1bb2e:	4605      	mov	r5, r0
   1bb30:	f7ff fd80 	bl	1b634 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1bb34:	f7f9 f958 	bl	14de8 <I2C_Temp::getFarenheit()>
   1bb38:	f001 fe1e 	bl	1d778 <__aeabi_f2uiz>
   1bb3c:	b2c1      	uxtb	r1, r0
   1bb3e:	4628      	mov	r0, r5
   1bb40:	f7f9 f8cc 	bl	14cdc <LED_Display::setNumber(char)>
   1bb44:	e781      	b.n	1ba4a <high_level_init()+0x3be>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   1bb46:	f7ff fd95 	bl	1b674 <SingletonTemplate<Switches>::getInstance()>
   1bb4a:	f7f9 f917 	bl	14d7c <Switches::getSwitchValues()>
   1bb4e:	2809      	cmp	r0, #9
   1bb50:	d11f      	bne.n	1bb92 <high_level_init()+0x506>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   1bb52:	481e      	ldr	r0, [pc, #120]	; (1bbcc <high_level_init()+0x540>)
   1bb54:	f003 ff2a 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   1bb58:	4621      	mov	r1, r4
   1bb5a:	481d      	ldr	r0, [pc, #116]	; (1bbd0 <high_level_init()+0x544>)
   1bb5c:	f004 f83e 	bl	1fbdc <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   1bb60:	4621      	mov	r1, r4
   1bb62:	481c      	ldr	r0, [pc, #112]	; (1bbd4 <high_level_init()+0x548>)
   1bb64:	f003 feae 	bl	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   1bb68:	481b      	ldr	r0, [pc, #108]	; (1bbd8 <high_level_init()+0x54c>)
   1bb6a:	f003 ff1f 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1bb6e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1bb70:	a903      	add	r1, sp, #12
   1bb72:	481a      	ldr	r0, [pc, #104]	; (1bbdc <high_level_init()+0x550>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1bb74:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1bb76:	f004 f831 	bl	1fbdc <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   1bb7a:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1bb7e:	2b59      	cmp	r3, #89	; 0x59
   1bb80:	d103      	bne.n	1bb8a <high_level_init()+0x4fe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   1bb82:	4620      	mov	r0, r4
   1bb84:	f7f8 fe0e 	bl	147a4 <flash_write_permanent_id>
   1bb88:	e7a5      	b.n	1bad6 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   1bb8a:	4815      	ldr	r0, [pc, #84]	; (1bbe0 <high_level_init()+0x554>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1bb8c:	f003 ff0e 	bl	1f9ac <puts>
   1bb90:	e7a1      	b.n	1bad6 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   1bb92:	4814      	ldr	r0, [pc, #80]	; (1bbe4 <high_level_init()+0x558>)
   1bb94:	f003 ff0a 	bl	1f9ac <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1bb98:	4813      	ldr	r0, [pc, #76]	; (1bbe8 <high_level_init()+0x55c>)
   1bb9a:	e7f7      	b.n	1bb8c <high_level_init()+0x500>
   1bb9c:	00026ec6 	.word	0x00026ec6
   1bba0:	2007c310 	.word	0x2007c310
   1bba4:	00026edf 	.word	0x00026edf
   1bba8:	00026d17 	.word	0x00026d17
   1bbac:	00026186 	.word	0x00026186
   1bbb0:	00026ee5 	.word	0x00026ee5
   1bbb4:	000251fa 	.word	0x000251fa
   1bbb8:	00026f19 	.word	0x00026f19
   1bbbc:	00027036 	.word	0x00027036
   1bbc0:	00027062 	.word	0x00027062
   1bbc4:	0002708f 	.word	0x0002708f
   1bbc8:	000270ac 	.word	0x000270ac
   1bbcc:	00026f35 	.word	0x00026f35
   1bbd0:	00026f57 	.word	0x00026f57
   1bbd4:	00026f5c 	.word	0x00026f5c
   1bbd8:	00026f77 	.word	0x00026f77
   1bbdc:	00026fba 	.word	0x00026fba
   1bbe0:	00026fbe 	.word	0x00026fbe
   1bbe4:	00026fd6 	.word	0x00026fd6
   1bbe8:	00027004 	.word	0x00027004

0001bbec <ADCDriver::ADCDriver()>:
_ZN9ADCDriverC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:16


ADCDriver::ADCDriver()
{

}
   1bbec:	4770      	bx	lr
   1bbee:	Address 0x000000000001bbee is out of bounds.


0001bbf0 <ADCDriver::adcInitBurstMode()>:
_ZN9ADCDriver16adcInitBurstModeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:21

void ADCDriver::adcInitBurstMode()
{
	LPC_SC->PCONP |= (1 << ADCBit);
	LPC_ADC->ADCR = 0; //Set the whole register to C instead of
   1bbf0:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:20
	LPC_SC->PCONP |= (1 << ADCBit);
   1bbf2:	4a15      	ldr	r2, [pc, #84]	; (1bc48 <ADCDriver::adcInitBurstMode()+0x58>)
   1bbf4:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
   1bbf8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
   1bbfc:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:21
	LPC_ADC->ADCR = 0; //Set the whole register to C instead of
   1bc00:	4b12      	ldr	r3, [pc, #72]	; (1bc4c <ADCDriver::adcInitBurstMode()+0x5c>)
   1bc02:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:23
	//clearing bits everytime.
	LPC_ADC->ADCR |= (1 << 21);
   1bc04:	6819      	ldr	r1, [r3, #0]
   1bc06:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
   1bc0a:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:24
	LPC_SC->PCLKSEL0  &= ~(3 << 24); // used to be 3 by 24
   1bc0c:	f8d2 11a8 	ldr.w	r1, [r2, #424]	; 0x1a8
   1bc10:	f021 7140 	bic.w	r1, r1, #50331648	; 0x3000000
   1bc14:	f8c2 11a8 	str.w	r1, [r2, #424]	; 0x1a8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:25
	LPC_SC->PCLKSEL0 |= (1 << 24);
   1bc18:	f8d2 11a8 	ldr.w	r1, [r2, #424]	; 0x1a8
   1bc1c:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   1bc20:	f8c2 11a8 	str.w	r1, [r2, #424]	; 0x1a8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:26
	LPC_ADC->ADCR |= (0b11 << 8); //set clkdiv to 7
   1bc24:	681a      	ldr	r2, [r3, #0]
   1bc26:	f442 7240 	orr.w	r2, r2, #768	; 0x300
   1bc2a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:27
	LPC_ADC->ADCR |= (0b1111111 << 0);
   1bc2c:	681a      	ldr	r2, [r3, #0]
   1bc2e:	f042 027f 	orr.w	r2, r2, #127	; 0x7f
   1bc32:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:28
	LPC_ADC->ADCR |= (1 << ADCBurst);
   1bc34:	681a      	ldr	r2, [r3, #0]
   1bc36:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   1bc3a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:29
	LPC_ADC->ADCR &= ~(0b000 < myStartBit);
   1bc3c:	681a      	ldr	r2, [r3, #0]
   1bc3e:	f022 0201 	bic.w	r2, r2, #1
   1bc42:	601a      	str	r2, [r3, #0]
   1bc44:	4770      	bx	lr
   1bc46:	bf00      	nop
   1bc48:	400fc000 	.word	0x400fc000
   1bc4c:	40034000 	.word	0x40034000

0001bc50 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)>:
_ZN9ADCDriver12adcSelectPinENS_7ADC_PINE():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:34
}

void ADCDriver::adcSelectPin(ADC_PIN adc_pin_arg)
{
	switch (adc_pin_arg)
   1bc50:	2903      	cmp	r1, #3
   1bc52:	d838      	bhi.n	1bcc6 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x76>
   1bc54:	e8df f001 	tbb	[pc, r1]
   1bc58:	38261402 	.word	0x38261402
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:37
	{
	case (ADC_PIN_0_25):
		LPC_PINCON->PINSEL1 &= ~(0b11 << 18);
   1bc5c:	4b23      	ldr	r3, [pc, #140]	; (1bcec <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x9c>)
   1bc5e:	685a      	ldr	r2, [r3, #4]
   1bc60:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
   1bc64:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:38
		LPC_PINCON->PINMODE1 &= ~(0b11 << 18);
   1bc66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1bc68:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
   1bc6c:	645a      	str	r2, [r3, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:39
		LPC_PINCON->PINSEL1 |= (0b01 << 18);
   1bc6e:	685a      	ldr	r2, [r3, #4]
   1bc70:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   1bc74:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:40
		LPC_PINCON->PINMODE1 |= (0b11 << 18);
   1bc76:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1bc78:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
   1bc7c:	645a      	str	r2, [r3, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:41
		break;
   1bc7e:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:43
	case (ADC_PIN_0_26):
		LPC_PINCON->PINSEL1 &= ~(0b11 << 20);
   1bc80:	4b1a      	ldr	r3, [pc, #104]	; (1bcec <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x9c>)
   1bc82:	685a      	ldr	r2, [r3, #4]
   1bc84:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
   1bc88:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:44
		LPC_PINCON->PINMODE1 &= ~(0b11 << 20);
   1bc8a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1bc8c:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
   1bc90:	645a      	str	r2, [r3, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:45
		LPC_PINCON->PINMODE1 |= (0b11 << 28);
   1bc92:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1bc94:	f042 5240 	orr.w	r2, r2, #805306368	; 0x30000000
   1bc98:	645a      	str	r2, [r3, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:46
		LPC_PINCON->PINSEL1 |= (0b01 << 20);
   1bc9a:	685a      	ldr	r2, [r3, #4]
   1bc9c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   1bca0:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:47
		break;
   1bca2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:49
	case (ADC_PIN_1_30):
		LPC_PINCON->PINSEL3 &= ~(0b11 << 28);
   1bca4:	4b11      	ldr	r3, [pc, #68]	; (1bcec <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x9c>)
   1bca6:	68da      	ldr	r2, [r3, #12]
   1bca8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
   1bcac:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:50
		LPC_PINCON->PINMODE3 &= ~(0b11 << 28);
   1bcae:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   1bcb0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
   1bcb4:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:51
		LPC_PINCON->PINMODE3 |= (0b11 << 28);
   1bcb6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   1bcb8:	f042 5240 	orr.w	r2, r2, #805306368	; 0x30000000
   1bcbc:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:52
		LPC_PINCON->PINSEL3 |= (0b11 << 28);
   1bcbe:	68da      	ldr	r2, [r3, #12]
   1bcc0:	f042 5240 	orr.w	r2, r2, #805306368	; 0x30000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:58
		break;
	case (ADC_PIN_1_31):
		LPC_PINCON->PINSEL3 &= ~(0b11 << 30);
		LPC_PINCON->PINMODE3 &= ~(0b11 << 30);
		LPC_PINCON->PINMODE3 |= (0b11 << 30);
		LPC_PINCON->PINSEL3 |= (0b11 << 30);
   1bcc4:	60da      	str	r2, [r3, #12]
   1bcc6:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:55
		LPC_PINCON->PINSEL3 &= ~(0b11 << 30);
   1bcc8:	4b08      	ldr	r3, [pc, #32]	; (1bcec <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x9c>)
   1bcca:	68da      	ldr	r2, [r3, #12]
   1bccc:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
   1bcd0:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:56
		LPC_PINCON->PINMODE3 &= ~(0b11 << 30);
   1bcd2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   1bcd4:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
   1bcd8:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:57
		LPC_PINCON->PINMODE3 |= (0b11 << 30);
   1bcda:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   1bcdc:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
   1bce0:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:58
		LPC_PINCON->PINSEL3 |= (0b11 << 30);
   1bce2:	68da      	ldr	r2, [r3, #12]
   1bce4:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
   1bce8:	e7ec      	b.n	1bcc4 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)+0x74>
   1bcea:	bf00      	nop
   1bcec:	4002c000 	.word	0x4002c000

0001bcf0 <ADCDriver::readADCVoltageByChannel(unsigned char)>:
_ZN9ADCDriver23readADCVoltageByChannelEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:68

float ADCDriver::readADCVoltageByChannel(uint8_t adc_channel_arg)
{
	volatile uint32_t* adc_Raw_Voltage_Reg; //address to adc percentage(raw value)

	switch (adc_channel_arg)
   1bcf0:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:65
{
   1bcf2:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:68
	switch (adc_channel_arg)
   1bcf4:	2903      	cmp	r1, #3
   1bcf6:	d81a      	bhi.n	1bd2e <ADCDriver::readADCVoltageByChannel(unsigned char)+0x3e>
   1bcf8:	e8df f001 	tbb	[pc, r1]
   1bcfc:	15130217 	.word	0x15130217
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:74
	{
	case 2:
		adc_Raw_Voltage_Reg = &LPC_ADC->ADDR2;
		break;
	case 3:
		adc_Raw_Voltage_Reg = &LPC_ADC->ADDR3;
   1bd00:	4b0c      	ldr	r3, [pc, #48]	; (1bd34 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:86
		break;
	default:
		return 0;
	}

	while ((*adc_Raw_Voltage_Reg & (1 << 31)) == 0); //wait bit 31 is 1. Bit 32 is the done bit
   1bd02:	681a      	ldr	r2, [r3, #0]
   1bd04:	2a00      	cmp	r2, #0
   1bd06:	dafc      	bge.n	1bd02 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:89
	//stating that the adc_voltage value is loaded.

	float voltage = ((((*adc_Raw_Voltage_Reg >> 4) & 0xFFF) * VREF) / MaxPercent);
   1bd08:	6818      	ldr	r0, [r3, #0]
   1bd0a:	f3c0 100b 	ubfx	r0, r0, #4, #12
   1bd0e:	f001 fb65 	bl	1d3dc <__aeabi_ui2f>
   1bd12:	4909      	ldr	r1, [pc, #36]	; (1bd38 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x48>)
   1bd14:	f001 fbba 	bl	1d48c <__aeabi_fmul>
   1bd18:	f04f 5166 	mov.w	r1, #964689920	; 0x39800000
   1bd1c:	f001 fbb6 	bl	1d48c <__aeabi_fmul>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:91

	return voltage;
   1bd20:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:77
		adc_Raw_Voltage_Reg = &LPC_ADC->ADDR4;
   1bd22:	4b06      	ldr	r3, [pc, #24]	; (1bd3c <ADCDriver::readADCVoltageByChannel(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:78
		break;
   1bd24:	e7ed      	b.n	1bd02 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:80
		adc_Raw_Voltage_Reg = &LPC_ADC->ADDR5;
   1bd26:	4b06      	ldr	r3, [pc, #24]	; (1bd40 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:81
		break;
   1bd28:	e7eb      	b.n	1bd02 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:71
		adc_Raw_Voltage_Reg = &LPC_ADC->ADDR2;
   1bd2a:	4b06      	ldr	r3, [pc, #24]	; (1bd44 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x54>)
   1bd2c:	e7e9      	b.n	1bd02 <ADCDriver::readADCVoltageByChannel(unsigned char)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:83
		return 0;
   1bd2e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/ADCDriver.cpp:92
   1bd30:	bd08      	pop	{r3, pc}
   1bd32:	bf00      	nop
   1bd34:	4003401c 	.word	0x4003401c
   1bd38:	40533333 	.word	0x40533333
   1bd3c:	40034020 	.word	0x40034020
   1bd40:	40034024 	.word	0x40034024
   1bd44:	40034018 	.word	0x40034018

0001bd48 <PWMDriver::PWMDriver()>:
_ZN9PWMDriverC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:11
const uint32_t MCU_clock = 48 * 1000000; //clock in hz(48Mhz)

PWMDriver::PWMDriver()
{

}
   1bd48:	4770      	bx	lr
   1bd4a:	Address 0x000000000001bd4a is out of bounds.


0001bd4c <PWMDriver::pwmSelectPinCon(unsigned char)>:
_ZN9PWMDriver15pwmSelectPinConEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:63
}

void PWMDriver::pwmSelectPinCon(uint8_t in_pin)
{
	uint32_t shift_bit = in_pin * 2;
	LPC_PINCON->PINSEL4 &= ~(0b11 << shift_bit);
   1bd4c:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:61
{
   1bd4e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:62
	uint32_t shift_bit = in_pin * 2;
   1bd50:	004d      	lsls	r5, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:63
	LPC_PINCON->PINSEL4 &= ~(0b11 << shift_bit);
   1bd52:	40aa      	lsls	r2, r5
   1bd54:	43d0      	mvns	r0, r2
   1bd56:	4b08      	ldr	r3, [pc, #32]	; (1bd78 <PWMDriver::pwmSelectPinCon(unsigned char)+0x2c>)
   1bd58:	691c      	ldr	r4, [r3, #16]
   1bd5a:	4004      	ands	r4, r0
   1bd5c:	611c      	str	r4, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:64
	LPC_PINCON->PINMODE4 &= ~(0b11 << shift_bit);
   1bd5e:	6d19      	ldr	r1, [r3, #80]	; 0x50
   1bd60:	4008      	ands	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:65
	LPC_PINCON->PINSEL4 |= (0b01 << shift_bit);
   1bd62:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:64
	LPC_PINCON->PINMODE4 &= ~(0b11 << shift_bit);
   1bd64:	6518      	str	r0, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:65
	LPC_PINCON->PINSEL4 |= (0b01 << shift_bit);
   1bd66:	6918      	ldr	r0, [r3, #16]
   1bd68:	40a9      	lsls	r1, r5
   1bd6a:	4301      	orrs	r1, r0
   1bd6c:	6119      	str	r1, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:66
	LPC_PINCON->PINMODE4 |= (0b11 << shift_bit);
   1bd6e:	6d19      	ldr	r1, [r3, #80]	; 0x50
   1bd70:	430a      	orrs	r2, r1
   1bd72:	651a      	str	r2, [r3, #80]	; 0x50
   1bd74:	bd30      	pop	{r4, r5, pc}
   1bd76:	bf00      	nop
   1bd78:	4002c000 	.word	0x4002c000

0001bd7c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)>:
_ZN9PWMDriver12pwmSelectPinENS_7PWM_PINE():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:29
	switch (pwm_pin_arg)
   1bd7c:	2905      	cmp	r1, #5
   1bd7e:	d811      	bhi.n	1bda4 <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x28>
   1bd80:	e8df f001 	tbb	[pc, r1]
   1bd84:	0a080603 	.word	0x0a080603
   1bd88:	0e0c      	.short	0x0e0c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:33
		PWMDriver::pwmSelectPinCon(pin);
   1bd8a:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:53
		PWMDriver::pwmSelectPinCon(pin);
   1bd8c:	f7ff bfde 	b.w	1bd4c <PWMDriver::pwmSelectPinCon(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:37
		PWMDriver::pwmSelectPinCon(pin);
   1bd90:	2101      	movs	r1, #1
   1bd92:	e7fb      	b.n	1bd8c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:41
		PWMDriver::pwmSelectPinCon(pin);
   1bd94:	2102      	movs	r1, #2
   1bd96:	e7f9      	b.n	1bd8c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:45
		PWMDriver::pwmSelectPinCon(pin);
   1bd98:	2103      	movs	r1, #3
   1bd9a:	e7f7      	b.n	1bd8c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:49
		PWMDriver::pwmSelectPinCon(pin);
   1bd9c:	2104      	movs	r1, #4
   1bd9e:	e7f5      	b.n	1bd8c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:53
		PWMDriver::pwmSelectPinCon(pin);
   1bda0:	2105      	movs	r1, #5
   1bda2:	e7f3      	b.n	1bd8c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)+0x10>
   1bda4:	4770      	bx	lr
   1bda6:	Address 0x000000000001bda6 is out of bounds.


0001bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>:
_ZN9PWMDriver12setDutyCycleENS_7PWM_PINEf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:100

	setDuty0();
}

void PWMDriver::setDutyCycle(PWMDriver::PWM_PIN pwm_pin_arg, float duty_cycle_percentage)
{
   1bda8:	b570      	push	{r4, r5, r6, lr}
   1bdaa:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:101
	uint32_t rawDutyCycle = (LPC_PWM1->MR0 * duty_cycle_percentage);
   1bdac:	4d19      	ldr	r5, [pc, #100]	; (1be14 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x6c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:100
{
   1bdae:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:101
	uint32_t rawDutyCycle = (LPC_PWM1->MR0 * duty_cycle_percentage);
   1bdb0:	69a8      	ldr	r0, [r5, #24]
   1bdb2:	f001 fb13 	bl	1d3dc <__aeabi_ui2f>
   1bdb6:	4631      	mov	r1, r6
   1bdb8:	f001 fb68 	bl	1d48c <__aeabi_fmul>
   1bdbc:	f001 fcdc 	bl	1d778 <__aeabi_f2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:102
	uint32_t dutyCycle = rawDutyCycle / 100;
   1bdc0:	2264      	movs	r2, #100	; 0x64
   1bdc2:	462b      	mov	r3, r5
   1bdc4:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:103
	switch (pwm_pin_arg)
   1bdc8:	2c05      	cmp	r4, #5
   1bdca:	d809      	bhi.n	1bde0 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x38>
   1bdcc:	e8df f004 	tbb	[pc, r4]
   1bdd0:	130e0903 	.word	0x130e0903
   1bdd4:	1d18      	.short	0x1d18
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:106
	{
	case PWM_PIN_2_0:
		LPC_PWM1->MR1 = dutyCycle; //set duty cycle value
   1bdd6:	61e8      	str	r0, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:107
		LPC_PWM1->LER |= (1 << 1); //Load Enable Register
   1bdd8:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1bdda:	f042 0202 	orr.w	r2, r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:127
		LPC_PWM1->MR5 = dutyCycle;
		LPC_PWM1->LER |= (1 << 5);
		break;
	case PWM_PIN_2_5:
		LPC_PWM1->MR6 = dutyCycle;
		LPC_PWM1->LER |= (1 << 6);
   1bdde:	651a      	str	r2, [r3, #80]	; 0x50
   1bde0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:110
		LPC_PWM1->MR2 = dutyCycle;
   1bde2:	6228      	str	r0, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:111
		LPC_PWM1->LER |= (1 << 2);
   1bde4:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1bde6:	f042 0204 	orr.w	r2, r2, #4
   1bdea:	e7f8      	b.n	1bdde <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:114
		LPC_PWM1->MR3 = dutyCycle;
   1bdec:	6268      	str	r0, [r5, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:115
		LPC_PWM1->LER |= (1 << 3);
   1bdee:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1bdf0:	f042 0208 	orr.w	r2, r2, #8
   1bdf4:	e7f3      	b.n	1bdde <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:118
		LPC_PWM1->MR4 = dutyCycle;
   1bdf6:	6428      	str	r0, [r5, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:119
		LPC_PWM1->LER |= (1 << 4);
   1bdf8:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1bdfa:	f042 0210 	orr.w	r2, r2, #16
   1bdfe:	e7ee      	b.n	1bdde <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:122
		LPC_PWM1->MR5 = dutyCycle;
   1be00:	6468      	str	r0, [r5, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:123
		LPC_PWM1->LER |= (1 << 5);
   1be02:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1be04:	f042 0220 	orr.w	r2, r2, #32
   1be08:	e7e9      	b.n	1bdde <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:126
		LPC_PWM1->MR6 = dutyCycle;
   1be0a:	64a8      	str	r0, [r5, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:127
		LPC_PWM1->LER |= (1 << 6);
   1be0c:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   1be0e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1be12:	e7e4      	b.n	1bdde <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)+0x36>
   1be14:	40018000 	.word	0x40018000

0001be18 <PWMDriver::setDuty0()>:
_ZN9PWMDriver8setDuty0Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:70
{
   1be18:	b538      	push	{r3, r4, r5, lr}
   1be1a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:71
	setDutyCycle(PWM_PIN_2_0, 100);
   1be1c:	4c0f      	ldr	r4, [pc, #60]	; (1be5c <PWMDriver::setDuty0()+0x44>)
   1be1e:	2100      	movs	r1, #0
   1be20:	4622      	mov	r2, r4
   1be22:	f7ff ffc1 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:72
	setDutyCycle(PWM_PIN_2_1, 100);
   1be26:	4622      	mov	r2, r4
   1be28:	4628      	mov	r0, r5
   1be2a:	2101      	movs	r1, #1
   1be2c:	f7ff ffbc 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:73
	setDutyCycle(PWM_PIN_2_2, 100);
   1be30:	4622      	mov	r2, r4
   1be32:	4628      	mov	r0, r5
   1be34:	2102      	movs	r1, #2
   1be36:	f7ff ffb7 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:74
	setDutyCycle(PWM_PIN_2_3, 100);
   1be3a:	4622      	mov	r2, r4
   1be3c:	4628      	mov	r0, r5
   1be3e:	2103      	movs	r1, #3
   1be40:	f7ff ffb2 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:75
	setDutyCycle(PWM_PIN_2_4, 100);
   1be44:	4622      	mov	r2, r4
   1be46:	4628      	mov	r0, r5
   1be48:	2104      	movs	r1, #4
   1be4a:	f7ff ffad 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:76
	setDutyCycle(PWM_PIN_2_5, 100);
   1be4e:	4622      	mov	r2, r4
   1be50:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:77
}
   1be52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:76
	setDutyCycle(PWM_PIN_2_5, 100);
   1be56:	2105      	movs	r1, #5
   1be58:	f7ff bfa6 	b.w	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
   1be5c:	42c80000 	.word	0x42c80000

0001be60 <PWMDriver::setFrequency(unsigned long)>:
_ZN9PWMDriver12setFrequencyEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:136
	}
}

void PWMDriver::setFrequency(uint32_t frequency_Hz)
{
	const uint32_t frequency = MCU_clock / frequency_Hz;
   1be60:	4b04      	ldr	r3, [pc, #16]	; (1be74 <PWMDriver::setFrequency(unsigned long)+0x14>)
   1be62:	fbb3 f1f1 	udiv	r1, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:137
	LPC_PWM1->MR0 = frequency; //save value into Match Register 0
   1be66:	4b04      	ldr	r3, [pc, #16]	; (1be78 <PWMDriver::setFrequency(unsigned long)+0x18>)
   1be68:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:138
	LPC_PWM1->LER |= (1 << 0); //Load Enable to laod match register 0
   1be6a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   1be6c:	f042 0201 	orr.w	r2, r2, #1
   1be70:	651a      	str	r2, [r3, #80]	; 0x50
   1be72:	4770      	bx	lr
   1be74:	02dc6c00 	.word	0x02dc6c00
   1be78:	40018000 	.word	0x40018000

0001be7c <PWMDriver::pwmInitSingleEdgeMode(unsigned long)>:
_ZN9PWMDriver21pwmInitSingleEdgeModeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:80
{
   1be7c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:81
	LPC_SC->PCONP |= (1 << powerUpBit); //power pwm is set to on
   1be7e:	4b1a      	ldr	r3, [pc, #104]	; (1bee8 <PWMDriver::pwmInitSingleEdgeMode(unsigned long)+0x6c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:84
	LPC_PWM1->MCR |= (1 << 1); // generates interrupt when MCR matches
   1be80:	4c1a      	ldr	r4, [pc, #104]	; (1beec <PWMDriver::pwmInitSingleEdgeMode(unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:81
	LPC_SC->PCONP |= (1 << powerUpBit); //power pwm is set to on
   1be82:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
   1be86:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1be8a:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:82
	LPC_SC->PCLKSEL0 &= ~(0b11 << pClkBit); //reset peri clock
   1be8e:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
   1be92:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
   1be96:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:83
	LPC_SC->PCLKSEL0 |= (1 << pClkBit); //set peri clock
   1be9a:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
   1be9e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   1bea2:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:84
	LPC_PWM1->MCR |= (1 << 1); // generates interrupt when MCR matches
   1bea6:	6963      	ldr	r3, [r4, #20]
   1bea8:	f043 0302 	orr.w	r3, r3, #2
   1beac:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:85
	LPC_PWM1->PR  = 0; //resets prescale counter. Counts +1
   1beae:	2300      	movs	r3, #0
   1beb0:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:87
	setFrequency(frequency_Hz);
   1beb2:	f7ff ffd5 	bl	1be60 <PWMDriver::setFrequency(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:88
	LPC_PWM1->PCR &= ~(0b11111 << 2); // 0 is single, 1 is double.
   1beb6:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
   1beb8:	f023 037c 	bic.w	r3, r3, #124	; 0x7c
   1bebc:	64e3      	str	r3, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:89
	LPC_PWM1->TCR |= (1 << 0); // bit 0 is counter. 1 enables count
   1bebe:	6863      	ldr	r3, [r4, #4]
   1bec0:	f043 0301 	orr.w	r3, r3, #1
   1bec4:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:90
	LPC_PWM1->TCR |= (1 << tcr_Pwm_Enable); //pwm mode is enabled
   1bec6:	6863      	ldr	r3, [r4, #4]
   1bec8:	f043 0308 	orr.w	r3, r3, #8
   1becc:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:91
	LPC_PWM1->CTCR &= ~(0b1111 << 0); //enables the timer
   1bece:	6f23      	ldr	r3, [r4, #112]	; 0x70
   1bed0:	f023 030f 	bic.w	r3, r3, #15
   1bed4:	6723      	str	r3, [r4, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:94
	LPC_PWM1->PCR |= (0b111111 << 9);
   1bed6:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
   1bed8:	f443 43fc 	orr.w	r3, r3, #32256	; 0x7e00
   1bedc:	64e3      	str	r3, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:97
}
   1bede:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/PWMDriver.cpp:96
	setDuty0();
   1bee2:	f7ff bf99 	b.w	1be18 <PWMDriver::setDuty0()>
   1bee6:	bf00      	nop
   1bee8:	400fc000 	.word	0x400fc000
   1beec:	40018000 	.word	0x40018000

0001bef0 <LabGPIOInterrupts::init()>:
_ZN17LabGPIOInterrupts4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   1bef0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   1bef4:	4b01      	ldr	r3, [pc, #4]	; (1befc <LabGPIOInterrupts::init()+0xc>)
   1bef6:	601a      	str	r2, [r3, #0]
   1bef8:	4770      	bx	lr
   1befa:	bf00      	nop
   1befc:	e000e100 	.word	0xe000e100

0001bf00 <LabGPIOInterrupts::handle_interrupt()>:
_ZN17LabGPIOInterrupts16handle_interruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:41
	}

	gpio_isr[portState][pin] = pin_isr;
	return true;
}
void LabGPIOInterrupts::handle_interrupt(void) {
   1bf00:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:42
	if (port0) {
   1bf02:	f890 10f8 	ldrb.w	r1, [r0, #248]	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:41
void LabGPIOInterrupts::handle_interrupt(void) {
   1bf06:	4605      	mov	r5, r0
   1bf08:	4c1d      	ldr	r4, [pc, #116]	; (1bf80 <LabGPIOInterrupts::handle_interrupt()+0x80>)
   1bf0a:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
   1bf0e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:42
	if (port0) {
   1bf10:	b139      	cbz	r1, 1bf22 <LabGPIOInterrupts::handle_interrupt()+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:43
		if (((LPC_GPIOINT->IO0IntStatR & (1 << pin)) || (LPC_GPIOINT->IO0IntStatF & (1 << pin))) == 1) {
   1bf12:	6861      	ldr	r1, [r4, #4]
   1bf14:	4093      	lsls	r3, r2
   1bf16:	4219      	tst	r1, r3
   1bf18:	d10b      	bne.n	1bf32 <LabGPIOInterrupts::handle_interrupt()+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:43 (discriminator 2)
   1bf1a:	68a1      	ldr	r1, [r4, #8]
   1bf1c:	420b      	tst	r3, r1
   1bf1e:	d108      	bne.n	1bf32 <LabGPIOInterrupts::handle_interrupt()+0x32>
   1bf20:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:52
		}
		else {
		}
	}
	else {
		if (((LPC_GPIOINT->IO2IntStatR & (1 << pin)) || (LPC_GPIOINT->IO2IntStatF & (1 << pin))) == 1) {
   1bf22:	6a61      	ldr	r1, [r4, #36]	; 0x24
   1bf24:	4093      	lsls	r3, r2
   1bf26:	4219      	tst	r1, r3
   1bf28:	d119      	bne.n	1bf5e <LabGPIOInterrupts::handle_interrupt()+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:52 (discriminator 2)
   1bf2a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   1bf2c:	420b      	tst	r3, r1
   1bf2e:	d116      	bne.n	1bf5e <LabGPIOInterrupts::handle_interrupt()+0x5e>
   1bf30:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:44
			gpio_isr[portState][pin]();
   1bf32:	211e      	movs	r1, #30
   1bf34:	f895 30f1 	ldrb.w	r3, [r5, #241]	; 0xf1
   1bf38:	fb01 2203 	mla	r2, r1, r3, r2
   1bf3c:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
   1bf40:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:45
			LPC_GPIOINT->IO0IntClr |= (1 << pin);
   1bf42:	2301      	movs	r3, #1
   1bf44:	f895 10f0 	ldrb.w	r1, [r5, #240]	; 0xf0
   1bf48:	68e2      	ldr	r2, [r4, #12]
   1bf4a:	408b      	lsls	r3, r1
   1bf4c:	431a      	orrs	r2, r3
   1bf4e:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:46
			printf("%d", LPC_GPIOINT->IO0IntStatR & (1 << pin));
   1bf50:	6861      	ldr	r1, [r4, #4]
   1bf52:	480c      	ldr	r0, [pc, #48]	; (1bf84 <LabGPIOInterrupts::handle_interrupt()+0x84>)
   1bf54:	4019      	ands	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:60
		}
		else {

		}
	}
}
   1bf56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:46
			printf("%d", LPC_GPIOINT->IO0IntStatR & (1 << pin));
   1bf5a:	f003 bcb3 	b.w	1f8c4 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:53
			gpio_isr[portState][pin]();
   1bf5e:	211e      	movs	r1, #30
   1bf60:	f895 30f1 	ldrb.w	r3, [r5, #241]	; 0xf1
   1bf64:	fb01 2203 	mla	r2, r1, r3, r2
   1bf68:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
   1bf6c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:54
			LPC_GPIOINT->IO2IntClr |= (1 << pin);
   1bf6e:	2301      	movs	r3, #1
   1bf70:	f895 10f0 	ldrb.w	r1, [r5, #240]	; 0xf0
   1bf74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1bf76:	408b      	lsls	r3, r1
   1bf78:	4313      	orrs	r3, r2
   1bf7a:	62e3      	str	r3, [r4, #44]	; 0x2c
   1bf7c:	bd38      	pop	{r3, r4, r5, pc}
   1bf7e:	bf00      	nop
   1bf80:	40028080 	.word	0x40028080
   1bf84:	00027169 	.word	0x00027169

0001bf88 <LabGPIOInterrupts::setRisingEdge(bool)>:
_ZN17LabGPIOInterrupts13setRisingEdgeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:62

void LabGPIOInterrupts::setRisingEdge(bool port_0) {
   1bf88:	4a07      	ldr	r2, [pc, #28]	; (1bfa8 <LabGPIOInterrupts::setRisingEdge(bool)+0x20>)
   1bf8a:	f890 00f0 	ldrb.w	r0, [r0, #240]	; 0xf0
   1bf8e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:63
	if (port_0) {
   1bf90:	b121      	cbz	r1, 1bf9c <LabGPIOInterrupts::setRisingEdge(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:64
		LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   1bf92:	6911      	ldr	r1, [r2, #16]
   1bf94:	4083      	lsls	r3, r0
   1bf96:	430b      	orrs	r3, r1
   1bf98:	6113      	str	r3, [r2, #16]
   1bf9a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:67
	}
	else {
		LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   1bf9c:	6b11      	ldr	r1, [r2, #48]	; 0x30
   1bf9e:	4083      	lsls	r3, r0
   1bfa0:	430b      	orrs	r3, r1
   1bfa2:	6313      	str	r3, [r2, #48]	; 0x30
   1bfa4:	4770      	bx	lr
   1bfa6:	bf00      	nop
   1bfa8:	40028080 	.word	0x40028080

0001bfac <LabGPIOInterrupts::setFallingEdge(bool)>:
_ZN17LabGPIOInterrupts14setFallingEdgeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:71
	}
}

void LabGPIOInterrupts::setFallingEdge(bool port_0) {
   1bfac:	4a07      	ldr	r2, [pc, #28]	; (1bfcc <LabGPIOInterrupts::setFallingEdge(bool)+0x20>)
   1bfae:	f890 00f0 	ldrb.w	r0, [r0, #240]	; 0xf0
   1bfb2:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:72
	if (port_0) {
   1bfb4:	b121      	cbz	r1, 1bfc0 <LabGPIOInterrupts::setFallingEdge(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:73
		LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   1bfb6:	6951      	ldr	r1, [r2, #20]
   1bfb8:	4083      	lsls	r3, r0
   1bfba:	430b      	orrs	r3, r1
   1bfbc:	6153      	str	r3, [r2, #20]
   1bfbe:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:76
	}
	else {
		LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   1bfc0:	6b51      	ldr	r1, [r2, #52]	; 0x34
   1bfc2:	4083      	lsls	r3, r0
   1bfc4:	430b      	orrs	r3, r1
   1bfc6:	6353      	str	r3, [r2, #52]	; 0x34
   1bfc8:	4770      	bx	lr
   1bfca:	bf00      	nop
   1bfcc:	40028080 	.word	0x40028080

0001bfd0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)>:
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhhPFvvE20InterruptCondition_E():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:19
bool LabGPIOInterrupts::attachInterruptHandler(uint8_t po, uint8_t pi, void (*pin_isr)(void), InterruptCondition_E condition) {
   1bfd0:	b570      	push	{r4, r5, r6, lr}
   1bfd2:	461d      	mov	r5, r3
   1bfd4:	4604      	mov	r4, r0
   1bfd6:	f89d 3010 	ldrb.w	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:20
	switch (po) {
   1bfda:	b121      	cbz	r1, 1bfe6 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x16>
   1bfdc:	2902      	cmp	r1, #2
   1bfde:	f04f 0000 	mov.w	r0, #0
   1bfe2:	d01c      	beq.n	1c01e <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x4e>
   1bfe4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:21
	case 0: port = (LPC_GPIO_TypeDef*) LPC_GPIO0; portState = 0; port0 = 1; break;
   1bfe6:	f884 10f1 	strb.w	r1, [r4, #241]	; 0xf1
   1bfea:	2101      	movs	r1, #1
   1bfec:	481d      	ldr	r0, [pc, #116]	; (1c064 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x94>)
   1bfee:	f884 10f8 	strb.w	r1, [r4, #248]	; 0xf8
   1bff2:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:26
	port->FIODIR &= !(1 << pin);
   1bff6:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:25
	pin = pi;
   1bff8:	f884 20f0 	strb.w	r2, [r4, #240]	; 0xf0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:26
	port->FIODIR &= !(1 << pin);
   1bffc:	fa16 f202 	lsls.w	r2, r6, r2
   1c000:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
   1c004:	6801      	ldr	r1, [r0, #0]
   1c006:	f001 0101 	and.w	r1, r1, #1
   1c00a:	bf18      	it	ne
   1c00c:	2100      	movne	r1, #0
   1c00e:	6001      	str	r1, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:27
	if (rising_edge == condition) {
   1c010:	b96b      	cbnz	r3, 1c02e <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:35
		setRisingEdge(port0);
   1c012:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c016:	4620      	mov	r0, r4
   1c018:	f7ff ffb6 	bl	1bf88 <LabGPIOInterrupts::setRisingEdge(bool)>
   1c01c:	e00e      	b.n	1c03c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:22
	case 2: port = (LPC_GPIO_TypeDef*) LPC_GPIO2; portState = 2; port0 = 0; break;
   1c01e:	4e12      	ldr	r6, [pc, #72]	; (1c068 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x98>)
   1c020:	f884 10f1 	strb.w	r1, [r4, #241]	; 0xf1
   1c024:	f8c4 60f4 	str.w	r6, [r4, #244]	; 0xf4
   1c028:	f884 00f8 	strb.w	r0, [r4, #248]	; 0xf8
   1c02c:	e7e3      	b.n	1bff6 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:30
	else if (falling_edge == condition) {
   1c02e:	2b01      	cmp	r3, #1
   1c030:	d10f      	bne.n	1c052 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:31
		setFallingEdge(port0);
   1c032:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c036:	4620      	mov	r0, r4
   1c038:	f7ff ffb8 	bl	1bfac <LabGPIOInterrupts::setFallingEdge(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:38
	gpio_isr[portState][pin] = pin_isr;
   1c03c:	211e      	movs	r1, #30
   1c03e:	f894 30f1 	ldrb.w	r3, [r4, #241]	; 0xf1
   1c042:	f894 20f0 	ldrb.w	r2, [r4, #240]	; 0xf0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:39
	return true;
   1c046:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:38
	gpio_isr[portState][pin] = pin_isr;
   1c048:	fb01 2303 	mla	r3, r1, r3, r2
   1c04c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:40
}
   1c050:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:33
	else if (both_edges == condition) {
   1c052:	2b02      	cmp	r3, #2
   1c054:	d1f2      	bne.n	1c03c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/LabGPIOInterrupts.cpp:34
		setFallingEdge(port0);
   1c056:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c05a:	4620      	mov	r0, r4
   1c05c:	f7ff ffa6 	bl	1bfac <LabGPIOInterrupts::setFallingEdge(bool)>
   1c060:	e7d7      	b.n	1c012 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x42>
   1c062:	bf00      	nop
   1c064:	2009c000 	.word	0x2009c000
   1c068:	2009c040 	.word	0x2009c040

0001c06c <vCall_Back()>:
_Z10vCall_Backv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:59
	float pwm_value; //takes pwm to set pwm
} green, blue, red; //RGB struct for each RGB led

void vCall_Back() //used for ISR button trigger.
{
	if (on_Mode == true) {
   1c06c:	4b03      	ldr	r3, [pc, #12]	; (1c07c <vCall_Back()+0x10>)
   1c06e:	781a      	ldrb	r2, [r3, #0]
   1c070:	b112      	cbz	r2, 1c078 <vCall_Back()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:60
		on_Mode = false;
   1c072:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:63
	}
	else if (on_Mode == false) {
		on_Mode = true;
   1c074:	701a      	strb	r2, [r3, #0]
   1c076:	4770      	bx	lr
   1c078:	2201      	movs	r2, #1
   1c07a:	e7fb      	b.n	1c074 <vCall_Back()+0x8>
   1c07c:	2007c0dc 	.word	0x2007c0dc

0001c080 <c_eint3_handler()>:
_Z15c_eint3_handlerv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:73
	return dutyCycle;
}

void c_eint3_handler(void)
{
	gpio_intr_instance.handle_interrupt();
   1c080:	4801      	ldr	r0, [pc, #4]	; (1c088 <c_eint3_handler()+0x8>)
   1c082:	f7ff bf3d 	b.w	1bf00 <LabGPIOInterrupts::handle_interrupt()>
   1c086:	bf00      	nop
   1c088:	2007c794 	.word	0x2007c794
   1c08c:	ffffffff 	.word	0xffffffff

0001c090 <vRGB(void*)>:
_Z4vRGBPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:79
}

//**********************RTOS TASKS BELOW**********************

void vRGB(void * pvParamaters)
{	rgb_ADC.adcInitBurstMode();
   1c090:	e92d 4887 	stmdb	sp!, {r0, r1, r2, r7, fp, lr}
_Z12getDutyCyclef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:67
	float dutyCycle = adc_volt * (100 / 3.3); //3.3 is VREF, returns the duty cycle
   1c094:	f20f 09e0 	addw	r9, pc, #224	; 0xe0
   1c098:	e9d9 8900 	ldrd	r8, r9, [r9]
_Z4vRGBPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:79
{	rgb_ADC.adcInitBurstMode();
   1c09c:	4838      	ldr	r0, [pc, #224]	; (1c180 <vRGB(void*)+0xf0>)
   1c09e:	f7ff fda7 	bl	1bbf0 <ADCDriver::adcInitBurstMode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:80
	rgb_PWM.pwmInitSingleEdgeMode(100);
   1c0a2:	2164      	movs	r1, #100	; 0x64
   1c0a4:	4837      	ldr	r0, [pc, #220]	; (1c184 <vRGB(void*)+0xf4>)
   1c0a6:	f7ff fee9 	bl	1be7c <PWMDriver::pwmInitSingleEdgeMode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:81
	rgb_ADC.adcSelectPin(ADCDriver::ADC_PIN_0_26);
   1c0aa:	2101      	movs	r1, #1
   1c0ac:	4834      	ldr	r0, [pc, #208]	; (1c180 <vRGB(void*)+0xf0>)
   1c0ae:	f7ff fdcf 	bl	1bc50 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:82
	rgb_ADC.adcSelectPin(ADCDriver::ADC_PIN_1_31);
   1c0b2:	2103      	movs	r1, #3
   1c0b4:	4832      	ldr	r0, [pc, #200]	; (1c180 <vRGB(void*)+0xf0>)
   1c0b6:	f7ff fdcb 	bl	1bc50 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:83
	rgb_ADC.adcSelectPin(ADCDriver::ADC_PIN_1_30);
   1c0ba:	2102      	movs	r1, #2
   1c0bc:	4830      	ldr	r0, [pc, #192]	; (1c180 <vRGB(void*)+0xf0>)
   1c0be:	f7ff fdc7 	bl	1bc50 <ADCDriver::adcSelectPin(ADCDriver::ADC_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:84
	rgb_PWM.pwmSelectPin(PWMDriver::PWM_PIN_2_0);
   1c0c2:	2100      	movs	r1, #0
   1c0c4:	482f      	ldr	r0, [pc, #188]	; (1c184 <vRGB(void*)+0xf4>)
   1c0c6:	f7ff fe59 	bl	1bd7c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:85
	rgb_PWM.pwmSelectPin(PWMDriver::PWM_PIN_2_1);
   1c0ca:	2101      	movs	r1, #1
   1c0cc:	482d      	ldr	r0, [pc, #180]	; (1c184 <vRGB(void*)+0xf4>)
   1c0ce:	f7ff fe55 	bl	1bd7c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:86
	rgb_PWM.pwmSelectPin(PWMDriver::PWM_PIN_2_2);
   1c0d2:	2102      	movs	r1, #2
   1c0d4:	482b      	ldr	r0, [pc, #172]	; (1c184 <vRGB(void*)+0xf4>)
   1c0d6:	f7ff fe51 	bl	1bd7c <PWMDriver::pwmSelectPin(PWMDriver::PWM_PIN)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:87
	rgb_PWM.setFrequency(def_freq);
   1c0da:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1c0de:	4829      	ldr	r0, [pc, #164]	; (1c184 <vRGB(void*)+0xf4>)
   1c0e0:	f7ff febe 	bl	1be60 <PWMDriver::setFrequency(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:93
	while (1)
	{
		if (on_Mode == 1)
		{
			//Set ADC_value
			green.adc_value = rgb_ADC.readADCVoltageByChannel(3);
   1c0e4:	f8df a098 	ldr.w	sl, [pc, #152]	; 1c180 <vRGB(void*)+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:101

			//set the duty cycle now
			green.pwm_value = getDutyCycle(green.adc_value);
			blue.pwm_value = getDutyCycle(blue.adc_value);
			red.pwm_value = getDutyCycle(red.adc_value);
			rgb_PWM.setDutyCycle(PWMDriver::PWM_PIN_2_0, green.pwm_value);
   1c0e8:	4d26      	ldr	r5, [pc, #152]	; (1c184 <vRGB(void*)+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:90
		if (on_Mode == 1)
   1c0ea:	4b27      	ldr	r3, [pc, #156]	; (1c188 <vRGB(void*)+0xf8>)
   1c0ec:	781b      	ldrb	r3, [r3, #0]
   1c0ee:	b903      	cbnz	r3, 1c0f2 <vRGB(void*)+0x62>
   1c0f0:	e7fe      	b.n	1c0f0 <vRGB(void*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:93
			green.adc_value = rgb_ADC.readADCVoltageByChannel(3);
   1c0f2:	2103      	movs	r1, #3
   1c0f4:	4650      	mov	r0, sl
   1c0f6:	f7ff fdfb 	bl	1bcf0 <ADCDriver::readADCVoltageByChannel(unsigned char)>
   1c0fa:	4f24      	ldr	r7, [pc, #144]	; (1c18c <vRGB(void*)+0xfc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:94
			blue.adc_value = rgb_ADC.readADCVoltageByChannel(5);
   1c0fc:	2105      	movs	r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:93
			green.adc_value = rgb_ADC.readADCVoltageByChannel(3);
   1c0fe:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:94
			blue.adc_value = rgb_ADC.readADCVoltageByChannel(5);
   1c100:	4650      	mov	r0, sl
   1c102:	f7ff fdf5 	bl	1bcf0 <ADCDriver::readADCVoltageByChannel(unsigned char)>
   1c106:	4c22      	ldr	r4, [pc, #136]	; (1c190 <vRGB(void*)+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:95
			red.adc_value = rgb_ADC.readADCVoltageByChannel(4);
   1c108:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:94
			blue.adc_value = rgb_ADC.readADCVoltageByChannel(5);
   1c10a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:95
			red.adc_value = rgb_ADC.readADCVoltageByChannel(4);
   1c10c:	4650      	mov	r0, sl
   1c10e:	f7ff fdef 	bl	1bcf0 <ADCDriver::readADCVoltageByChannel(unsigned char)>
   1c112:	4e20      	ldr	r6, [pc, #128]	; (1c194 <vRGB(void*)+0x104>)
   1c114:	4683      	mov	fp, r0
   1c116:	6030      	str	r0, [r6, #0]
_Z12getDutyCyclef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:67
	float dutyCycle = adc_volt * (100 / 3.3); //3.3 is VREF, returns the duty cycle
   1c118:	6838      	ldr	r0, [r7, #0]
   1c11a:	f000 fdd3 	bl	1ccc4 <__aeabi_f2d>
   1c11e:	4642      	mov	r2, r8
   1c120:	464b      	mov	r3, r9
   1c122:	f000 fe23 	bl	1cd6c <__aeabi_dmul>
   1c126:	f001 f853 	bl	1d1d0 <__aeabi_d2f>
   1c12a:	9001      	str	r0, [sp, #4]
_Z4vRGBPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:98
			green.pwm_value = getDutyCycle(green.adc_value);
   1c12c:	6078      	str	r0, [r7, #4]
_Z12getDutyCyclef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:67
	float dutyCycle = adc_volt * (100 / 3.3); //3.3 is VREF, returns the duty cycle
   1c12e:	6820      	ldr	r0, [r4, #0]
   1c130:	f000 fdc8 	bl	1ccc4 <__aeabi_f2d>
   1c134:	4642      	mov	r2, r8
   1c136:	464b      	mov	r3, r9
   1c138:	f000 fe18 	bl	1cd6c <__aeabi_dmul>
   1c13c:	f001 f848 	bl	1d1d0 <__aeabi_d2f>
   1c140:	6060      	str	r0, [r4, #4]
   1c142:	4658      	mov	r0, fp
   1c144:	f000 fdbe 	bl	1ccc4 <__aeabi_f2d>
   1c148:	464b      	mov	r3, r9
   1c14a:	4642      	mov	r2, r8
   1c14c:	f000 fe0e 	bl	1cd6c <__aeabi_dmul>
   1c150:	f001 f83e 	bl	1d1d0 <__aeabi_d2f>
_Z4vRGBPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:101
			rgb_PWM.setDutyCycle(PWMDriver::PWM_PIN_2_0, green.pwm_value);
   1c154:	9a01      	ldr	r2, [sp, #4]
_Z12getDutyCyclef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:67
	float dutyCycle = adc_volt * (100 / 3.3); //3.3 is VREF, returns the duty cycle
   1c156:	6070      	str	r0, [r6, #4]
_Z4vRGBPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:101
			rgb_PWM.setDutyCycle(PWMDriver::PWM_PIN_2_0, green.pwm_value);
   1c158:	2100      	movs	r1, #0
   1c15a:	4628      	mov	r0, r5
   1c15c:	f7ff fe24 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:102
			rgb_PWM.setDutyCycle(PWMDriver::PWM_PIN_2_1, blue.pwm_value);
   1c160:	6862      	ldr	r2, [r4, #4]
   1c162:	4628      	mov	r0, r5
   1c164:	2101      	movs	r1, #1
   1c166:	f7ff fe1f 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:103
			rgb_PWM.setDutyCycle(PWMDriver::PWM_PIN_2_2, red.pwm_value);
   1c16a:	6872      	ldr	r2, [r6, #4]
   1c16c:	2102      	movs	r1, #2
   1c16e:	4628      	mov	r0, r5
   1c170:	f7ff fe1a 	bl	1bda8 <PWMDriver::setDutyCycle(PWMDriver::PWM_PIN, float)>
   1c174:	e7b9      	b.n	1c0ea <vRGB(void*)+0x5a>
   1c176:	bf00      	nop
   1c178:	64d9364e 	.word	0x64d9364e
   1c17c:	403e4d93 	.word	0x403e4d93
   1c180:	2007c8a0 	.word	0x2007c8a0
   1c184:	2007c8a1 	.word	0x2007c8a1
   1c188:	2007c0dc 	.word	0x2007c0dc
   1c18c:	2007c890 	.word	0x2007c890
   1c190:	2007c78c 	.word	0x2007c78c
   1c194:	2007c898 	.word	0x2007c898

0001c198 <vDisplay(void*)>:
_Z8vDisplayPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:120
	}

}

void vDisplay(void * pvParameters)
{
   1c198:	b580      	push	{r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:124
	while (1)
	{
		u0_dbg_printf("**********************ADC Values**********************\n");
		u0_dbg_printf("Green: %f\n", green.adc_value);
   1c19a:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 1c23c <vDisplay(void*)+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:125
		u0_dbg_printf("Blue: %f\n", blue.adc_value);
   1c19e:	4e21      	ldr	r6, [pc, #132]	; (1c224 <vDisplay(void*)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:126
		u0_dbg_printf("Red: %f\n", red.adc_value);
   1c1a0:	4c21      	ldr	r4, [pc, #132]	; (1c228 <vDisplay(void*)+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:124 (discriminator 1)
		u0_dbg_printf("Green: %f\n", green.adc_value);
   1c1a2:	f8df 909c 	ldr.w	r9, [pc, #156]	; 1c240 <vDisplay(void*)+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:123 (discriminator 1)
		u0_dbg_printf("**********************ADC Values**********************\n");
   1c1a6:	4821      	ldr	r0, [pc, #132]	; (1c22c <vDisplay(void*)+0x94>)
   1c1a8:	f7fa f819 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:124 (discriminator 1)
		u0_dbg_printf("Green: %f\n", green.adc_value);
   1c1ac:	f8d9 0000 	ldr.w	r0, [r9]
   1c1b0:	f000 fd88 	bl	1ccc4 <__aeabi_f2d>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:125 (discriminator 1)
		u0_dbg_printf("Blue: %f\n", blue.adc_value);
   1c1b4:	4f1e      	ldr	r7, [pc, #120]	; (1c230 <vDisplay(void*)+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:124 (discriminator 1)
		u0_dbg_printf("Green: %f\n", green.adc_value);
   1c1b6:	4602      	mov	r2, r0
   1c1b8:	460b      	mov	r3, r1
   1c1ba:	4640      	mov	r0, r8
   1c1bc:	f7fa f80f 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:125 (discriminator 1)
		u0_dbg_printf("Blue: %f\n", blue.adc_value);
   1c1c0:	6838      	ldr	r0, [r7, #0]
   1c1c2:	f000 fd7f 	bl	1ccc4 <__aeabi_f2d>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:126 (discriminator 1)
		u0_dbg_printf("Red: %f\n", red.adc_value);
   1c1c6:	4d1b      	ldr	r5, [pc, #108]	; (1c234 <vDisplay(void*)+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:125 (discriminator 1)
		u0_dbg_printf("Blue: %f\n", blue.adc_value);
   1c1c8:	4602      	mov	r2, r0
   1c1ca:	460b      	mov	r3, r1
   1c1cc:	4630      	mov	r0, r6
   1c1ce:	f7fa f806 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:126 (discriminator 1)
		u0_dbg_printf("Red: %f\n", red.adc_value);
   1c1d2:	6828      	ldr	r0, [r5, #0]
   1c1d4:	f000 fd76 	bl	1ccc4 <__aeabi_f2d>
   1c1d8:	4602      	mov	r2, r0
   1c1da:	460b      	mov	r3, r1
   1c1dc:	4620      	mov	r0, r4
   1c1de:	f7f9 fffe 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:127 (discriminator 1)
		u0_dbg_printf("**********************DutyCycle Values**********************\n");
   1c1e2:	4815      	ldr	r0, [pc, #84]	; (1c238 <vDisplay(void*)+0xa0>)
   1c1e4:	f7f9 fffb 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:128 (discriminator 1)
		u0_dbg_printf("Green: %f\n", green.pwm_value);
   1c1e8:	f8d9 0004 	ldr.w	r0, [r9, #4]
   1c1ec:	f000 fd6a 	bl	1ccc4 <__aeabi_f2d>
   1c1f0:	4602      	mov	r2, r0
   1c1f2:	460b      	mov	r3, r1
   1c1f4:	4640      	mov	r0, r8
   1c1f6:	f7f9 fff2 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:129 (discriminator 1)
		u0_dbg_printf("Blue: %f\n", blue.pwm_value);
   1c1fa:	6878      	ldr	r0, [r7, #4]
   1c1fc:	f000 fd62 	bl	1ccc4 <__aeabi_f2d>
   1c200:	4602      	mov	r2, r0
   1c202:	460b      	mov	r3, r1
   1c204:	4630      	mov	r0, r6
   1c206:	f7f9 ffea 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:130 (discriminator 1)
		u0_dbg_printf("Red: %f\n", red.pwm_value);
   1c20a:	6868      	ldr	r0, [r5, #4]
   1c20c:	f000 fd5a 	bl	1ccc4 <__aeabi_f2d>
   1c210:	4602      	mov	r2, r0
   1c212:	460b      	mov	r3, r1
   1c214:	4620      	mov	r0, r4
   1c216:	f7f9 ffe2 	bl	161de <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:131 (discriminator 1)
		vTaskDelay(1000);
   1c21a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1c21e:	f7fc fe7d 	bl	18f1c <vTaskDelay>
   1c222:	e7be      	b.n	1c1a2 <vDisplay(void*)+0xa>
   1c224:	000271af 	.word	0x000271af
   1c228:	000271b9 	.word	0x000271b9
   1c22c:	0002716c 	.word	0x0002716c
   1c230:	2007c78c 	.word	0x2007c78c
   1c234:	2007c898 	.word	0x2007c898
   1c238:	000271c2 	.word	0x000271c2
   1c23c:	000271a4 	.word	0x000271a4
   1c240:	2007c890 	.word	0x2007c890

0001c244 <main>:
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:136
	}
}

int main (void)
{
   1c244:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:140
	uint8_t pin = 0;
	gpio_intr_instance.init();
	//Task creation for RGB
	xTaskCreate(vRGB, "vRGB", 2048, NULL, 3, NULL);
   1c246:	2400      	movs	r4, #0
   1c248:	2503      	movs	r5, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:138
	gpio_intr_instance.init();
   1c24a:	4e1d      	ldr	r6, [pc, #116]	; (1c2c0 <main+0x7c>)
   1c24c:	4630      	mov	r0, r6
   1c24e:	f7ff fe4f 	bl	1bef0 <LabGPIOInterrupts::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:140
	xTaskCreate(vRGB, "vRGB", 2048, NULL, 3, NULL);
   1c252:	4623      	mov	r3, r4
   1c254:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1c258:	491a      	ldr	r1, [pc, #104]	; (1c2c4 <main+0x80>)
   1c25a:	9401      	str	r4, [sp, #4]
   1c25c:	9500      	str	r5, [sp, #0]
   1c25e:	481a      	ldr	r0, [pc, #104]	; (1c2c8 <main+0x84>)
   1c260:	f7fc fc22 	bl	18aa8 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:141
	scheduler_add_task(new terminalTask(PRIORITY_HIGH));
   1c264:	2090      	movs	r0, #144	; 0x90
   1c266:	f7fa fb3d 	bl	168e4 <operator new(unsigned int)>
   1c26a:	4607      	mov	r7, r0
   1c26c:	4629      	mov	r1, r5
   1c26e:	f7fe fde9 	bl	1ae44 <terminalTask::terminalTask(unsigned char)>
   1c272:	4638      	mov	r0, r7
   1c274:	f7f9 fd00 	bl	15c78 <scheduler_add_task(scheduler_task*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:143
	//Task Creation for printing out info;
	xTaskCreate(vDisplay, "vDisplay", 2048, NULL, 3, NULL);
   1c278:	4623      	mov	r3, r4
   1c27a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1c27e:	4913      	ldr	r1, [pc, #76]	; (1c2cc <main+0x88>)
   1c280:	9401      	str	r4, [sp, #4]
   1c282:	9500      	str	r5, [sp, #0]
   1c284:	4812      	ldr	r0, [pc, #72]	; (1c2d0 <main+0x8c>)
   1c286:	f7fc fc0f 	bl	18aa8 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:144
	scheduler_add_task(new terminalTask(PRIORITY_HIGH));
   1c28a:	2090      	movs	r0, #144	; 0x90
   1c28c:	f7fa fb2a 	bl	168e4 <operator new(unsigned int)>
   1c290:	4607      	mov	r7, r0
   1c292:	4629      	mov	r1, r5
   1c294:	f7fe fdd6 	bl	1ae44 <terminalTask::terminalTask(unsigned char)>
   1c298:	4638      	mov	r0, r7
   1c29a:	f7f9 fced 	bl	15c78 <scheduler_add_task(scheduler_task*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:146
	//Setup GPIO port for interrupt;
	gpio_intr_instance.attachInterruptHandler(pin, pin, vCall_Back, rising_edge); //GPIO 0.0
   1c29e:	4b0d      	ldr	r3, [pc, #52]	; (1c2d4 <main+0x90>)
   1c2a0:	4622      	mov	r2, r4
   1c2a2:	4621      	mov	r1, r4
   1c2a4:	9400      	str	r4, [sp, #0]
   1c2a6:	4630      	mov	r0, r6
   1c2a8:	f7ff fe92 	bl	1bfd0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:147
	isr_register(EINT3_IRQn, c_eint3_handler);
   1c2ac:	490a      	ldr	r1, [pc, #40]	; (1c2d8 <main+0x94>)
   1c2ae:	2015      	movs	r0, #21
   1c2b0:	f7f4 f9ae 	bl	10610 <isr_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:148
	vTaskStartScheduler();
   1c2b4:	f7fc fcf4 	bl	18ca0 <vTaskStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:149
}
   1c2b8:	4620      	mov	r0, r4
   1c2ba:	b003      	add	sp, #12
   1c2bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c2be:	bf00      	nop
   1c2c0:	2007c794 	.word	0x2007c794
   1c2c4:	00027200 	.word	0x00027200
   1c2c8:	0001c091 	.word	0x0001c091
   1c2cc:	00027205 	.word	0x00027205
   1c2d0:	0001c199 	.word	0x0001c199
   1c2d4:	0001c06d 	.word	0x0001c06d
   1c2d8:	0001c081 	.word	0x0001c081

0001c2dc <_GLOBAL__sub_I_rgb_ADC>:
_GLOBAL__sub_I_rgb_ADC():
   1c2dc:	b508      	push	{r3, lr}
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:37
ADCDriver rgb_ADC;
   1c2de:	4804      	ldr	r0, [pc, #16]	; (1c2f0 <_GLOBAL__sub_I_rgb_ADC+0x14>)
   1c2e0:	f7ff fc84 	bl	1bbec <ADCDriver::ADCDriver()>
_GLOBAL__sub_I_rgb_ADC():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:149
}
   1c2e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/ADC_PWM_LAB/L5_Application/main.cpp:40
PWMDriver rgb_PWM;
   1c2e8:	4802      	ldr	r0, [pc, #8]	; (1c2f4 <_GLOBAL__sub_I_rgb_ADC+0x18>)
   1c2ea:	f7ff bd2d 	b.w	1bd48 <PWMDriver::PWMDriver()>
   1c2ee:	bf00      	nop
   1c2f0:	2007c8a0 	.word	0x2007c8a0
   1c2f4:	2007c8a1 	.word	0x2007c8a1

0001c2f8 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1c2f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1c2fa:	2310      	movs	r3, #16
   1c2fc:	2400      	movs	r4, #0
   1c2fe:	9302      	str	r3, [sp, #8]
   1c300:	6803      	ldr	r3, [r0, #0]
   1c302:	4615      	mov	r5, r2
   1c304:	699e      	ldr	r6, [r3, #24]
   1c306:	9400      	str	r4, [sp, #0]
   1c308:	466b      	mov	r3, sp
   1c30a:	f88d 4004 	strb.w	r4, [sp, #4]
   1c30e:	9403      	str	r4, [sp, #12]
   1c310:	6812      	ldr	r2, [r2, #0]
   1c312:	47b0      	blx	r6
   1c314:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1c318:	f003 0306 	and.w	r3, r3, #6
   1c31c:	2b06      	cmp	r3, #6
   1c31e:	bf09      	itett	eq
   1c320:	2001      	moveq	r0, #1
   1c322:	4620      	movne	r0, r4
   1c324:	9b00      	ldreq	r3, [sp, #0]
   1c326:	602b      	streq	r3, [r5, #0]
   1c328:	b004      	add	sp, #16
   1c32a:	bd70      	pop	{r4, r5, r6, pc}

0001c32c <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1c32c:	9800      	ldr	r0, [sp, #0]
   1c32e:	4290      	cmp	r0, r2
   1c330:	bf0c      	ite	eq
   1c332:	2006      	moveq	r0, #6
   1c334:	2001      	movne	r0, #1
   1c336:	4770      	bx	lr

0001c338 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   1c338:	b510      	push	{r4, lr}
   1c33a:	4604      	mov	r4, r0
   1c33c:	4b02      	ldr	r3, [pc, #8]	; (1c348 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1c33e:	6003      	str	r3, [r0, #0]
   1c340:	f000 f8e3 	bl	1c50a <std::type_info::~type_info()>
   1c344:	4620      	mov	r0, r4
   1c346:	bd10      	pop	{r4, pc}
   1c348:	00027248 	.word	0x00027248

0001c34c <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1c34c:	b510      	push	{r4, lr}
   1c34e:	4604      	mov	r4, r0
   1c350:	f7ff fff2 	bl	1c338 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c354:	4620      	mov	r0, r4
   1c356:	2108      	movs	r1, #8
   1c358:	f000 f83f 	bl	1c3da <operator delete(void*, unsigned int)>
   1c35c:	4620      	mov	r0, r4
   1c35e:	bd10      	pop	{r4, pc}

0001c360 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1c360:	b538      	push	{r3, r4, r5, lr}
   1c362:	4615      	mov	r5, r2
   1c364:	461c      	mov	r4, r3
   1c366:	f000 f8d3 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c36a:	b120      	cbz	r0, 1c376 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   1c36c:	2308      	movs	r3, #8
   1c36e:	60e3      	str	r3, [r4, #12]
   1c370:	2306      	movs	r3, #6
   1c372:	6025      	str	r5, [r4, #0]
   1c374:	7123      	strb	r3, [r4, #4]
   1c376:	bd38      	pop	{r3, r4, r5, pc}

0001c378 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1c378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c37c:	4605      	mov	r5, r0
   1c37e:	460c      	mov	r4, r1
   1c380:	4616      	mov	r6, r2
   1c382:	461f      	mov	r7, r3
   1c384:	f000 f8c4 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c388:	b948      	cbnz	r0, 1c39e <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1c38a:	2f03      	cmp	r7, #3
   1c38c:	d807      	bhi.n	1c39e <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1c38e:	6823      	ldr	r3, [r4, #0]
   1c390:	4632      	mov	r2, r6
   1c392:	4629      	mov	r1, r5
   1c394:	4620      	mov	r0, r4
   1c396:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c39a:	695b      	ldr	r3, [r3, #20]
   1c39c:	4718      	bx	r3
   1c39e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c3a2 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1c3a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c3a6:	9e06      	ldr	r6, [sp, #24]
   1c3a8:	4698      	mov	r8, r3
   1c3aa:	9b08      	ldr	r3, [sp, #32]
   1c3ac:	4607      	mov	r7, r0
   1c3ae:	429e      	cmp	r6, r3
   1c3b0:	4615      	mov	r5, r2
   1c3b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1c3b4:	d103      	bne.n	1c3be <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1c3b6:	9907      	ldr	r1, [sp, #28]
   1c3b8:	f000 f8aa 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c3bc:	b958      	cbnz	r0, 1c3d6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c3be:	4641      	mov	r1, r8
   1c3c0:	4638      	mov	r0, r7
   1c3c2:	f000 f8a5 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c3c6:	b118      	cbz	r0, 1c3d0 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   1c3c8:	2301      	movs	r3, #1
   1c3ca:	6026      	str	r6, [r4, #0]
   1c3cc:	7125      	strb	r5, [r4, #4]
   1c3ce:	71a3      	strb	r3, [r4, #6]
   1c3d0:	2000      	movs	r0, #0
   1c3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c3d6:	7165      	strb	r5, [r4, #5]
   1c3d8:	e7fa      	b.n	1c3d0 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>

0001c3da <operator delete(void*, unsigned int)>:
_ZdlPvj():
   1c3da:	f7fa ba87 	b.w	168ec <operator delete(void*)>

0001c3de <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1c3de:	6803      	ldr	r3, [r0, #0]
   1c3e0:	07db      	lsls	r3, r3, #31
   1c3e2:	d406      	bmi.n	1c3f2 <__cxa_guard_acquire+0x14>
   1c3e4:	7843      	ldrb	r3, [r0, #1]
   1c3e6:	b103      	cbz	r3, 1c3ea <__cxa_guard_acquire+0xc>
   1c3e8:	deff      	udf	#255	; 0xff
   1c3ea:	2301      	movs	r3, #1
   1c3ec:	7043      	strb	r3, [r0, #1]
   1c3ee:	4618      	mov	r0, r3
   1c3f0:	4770      	bx	lr
   1c3f2:	2000      	movs	r0, #0
   1c3f4:	4770      	bx	lr

0001c3f6 <__cxa_guard_release>:
__cxa_guard_release():
   1c3f6:	2301      	movs	r3, #1
   1c3f8:	6003      	str	r3, [r0, #0]
   1c3fa:	4770      	bx	lr

0001c3fc <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1c3fc:	b508      	push	{r3, lr}
   1c3fe:	f000 faeb 	bl	1c9d8 <std::terminate()>
   1c402:	Address 0x000000000001c402 is out of bounds.


0001c404 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   1c404:	b510      	push	{r4, lr}
   1c406:	4604      	mov	r4, r0
   1c408:	4b02      	ldr	r3, [pc, #8]	; (1c414 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1c40a:	6003      	str	r3, [r0, #0]
   1c40c:	f7ff ff94 	bl	1c338 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c410:	4620      	mov	r0, r4
   1c412:	bd10      	pop	{r4, pc}
   1c414:	000272a8 	.word	0x000272a8

0001c418 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1c418:	b510      	push	{r4, lr}
   1c41a:	4604      	mov	r4, r0
   1c41c:	f7ff fff2 	bl	1c404 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1c420:	4620      	mov	r0, r4
   1c422:	210c      	movs	r1, #12
   1c424:	f7ff ffd9 	bl	1c3da <operator delete(void*, unsigned int)>
   1c428:	4620      	mov	r0, r4
   1c42a:	bd10      	pop	{r4, pc}

0001c42c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c430:	9e06      	ldr	r6, [sp, #24]
   1c432:	4680      	mov	r8, r0
   1c434:	4296      	cmp	r6, r2
   1c436:	460f      	mov	r7, r1
   1c438:	4614      	mov	r4, r2
   1c43a:	461d      	mov	r5, r3
   1c43c:	d103      	bne.n	1c446 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   1c43e:	4619      	mov	r1, r3
   1c440:	f000 f866 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c444:	b958      	cbnz	r0, 1c45e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   1c446:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1c44a:	4622      	mov	r2, r4
   1c44c:	6803      	ldr	r3, [r0, #0]
   1c44e:	9606      	str	r6, [sp, #24]
   1c450:	6a1e      	ldr	r6, [r3, #32]
   1c452:	4639      	mov	r1, r7
   1c454:	462b      	mov	r3, r5
   1c456:	46b4      	mov	ip, r6
   1c458:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c45c:	4760      	bx	ip
   1c45e:	2006      	movs	r0, #6
   1c460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c464 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1c464:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c468:	460e      	mov	r6, r1
   1c46a:	4619      	mov	r1, r3
   1c46c:	4683      	mov	fp, r0
   1c46e:	4617      	mov	r7, r2
   1c470:	4699      	mov	r9, r3
   1c472:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1c474:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   1c478:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   1c47c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1c47e:	f000 f847 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c482:	b190      	cbz	r0, 1c4aa <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   1c484:	2e00      	cmp	r6, #0
   1c486:	602c      	str	r4, [r5, #0]
   1c488:	712f      	strb	r7, [r5, #4]
   1c48a:	db09      	blt.n	1c4a0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   1c48c:	4434      	add	r4, r6
   1c48e:	45a0      	cmp	r8, r4
   1c490:	bf0c      	ite	eq
   1c492:	2406      	moveq	r4, #6
   1c494:	2401      	movne	r4, #1
   1c496:	71ac      	strb	r4, [r5, #6]
   1c498:	2000      	movs	r0, #0
   1c49a:	b001      	add	sp, #4
   1c49c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4a0:	3602      	adds	r6, #2
   1c4a2:	d1f9      	bne.n	1c498 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c4a4:	2301      	movs	r3, #1
   1c4a6:	71ab      	strb	r3, [r5, #6]
   1c4a8:	e7f6      	b.n	1c498 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c4aa:	4544      	cmp	r4, r8
   1c4ac:	d104      	bne.n	1c4b8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1c4ae:	4651      	mov	r1, sl
   1c4b0:	4658      	mov	r0, fp
   1c4b2:	f000 f82d 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c4b6:	b988      	cbnz	r0, 1c4dc <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   1c4b8:	f8db 0008 	ldr.w	r0, [fp, #8]
   1c4bc:	463a      	mov	r2, r7
   1c4be:	6803      	ldr	r3, [r0, #0]
   1c4c0:	950d      	str	r5, [sp, #52]	; 0x34
   1c4c2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   1c4c6:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   1c4ca:	940a      	str	r4, [sp, #40]	; 0x28
   1c4cc:	69dc      	ldr	r4, [r3, #28]
   1c4ce:	4631      	mov	r1, r6
   1c4d0:	464b      	mov	r3, r9
   1c4d2:	46a4      	mov	ip, r4
   1c4d4:	b001      	add	sp, #4
   1c4d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4da:	4760      	bx	ip
   1c4dc:	716f      	strb	r7, [r5, #5]
   1c4de:	e7db      	b.n	1c498 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

0001c4e0 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1c4e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c4e4:	4604      	mov	r4, r0
   1c4e6:	460d      	mov	r5, r1
   1c4e8:	4616      	mov	r6, r2
   1c4ea:	461f      	mov	r7, r3
   1c4ec:	f7ff ff38 	bl	1c360 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1c4f0:	b948      	cbnz	r0, 1c506 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   1c4f2:	68a0      	ldr	r0, [r4, #8]
   1c4f4:	4632      	mov	r2, r6
   1c4f6:	6803      	ldr	r3, [r0, #0]
   1c4f8:	4629      	mov	r1, r5
   1c4fa:	699c      	ldr	r4, [r3, #24]
   1c4fc:	463b      	mov	r3, r7
   1c4fe:	46a4      	mov	ip, r4
   1c500:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c504:	4760      	bx	ip
   1c506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c50a <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   1c50a:	4770      	bx	lr

0001c50c <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1c50c:	2000      	movs	r0, #0
   1c50e:	4770      	bx	lr

0001c510 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1c510:	4281      	cmp	r1, r0
   1c512:	b508      	push	{r3, lr}
   1c514:	d00e      	beq.n	1c534 <std::type_info::operator==(std::type_info const&) const+0x24>
   1c516:	6840      	ldr	r0, [r0, #4]
   1c518:	7803      	ldrb	r3, [r0, #0]
   1c51a:	2b2a      	cmp	r3, #42	; 0x2a
   1c51c:	d00c      	beq.n	1c538 <std::type_info::operator==(std::type_info const&) const+0x28>
   1c51e:	6849      	ldr	r1, [r1, #4]
   1c520:	780b      	ldrb	r3, [r1, #0]
   1c522:	2b2a      	cmp	r3, #42	; 0x2a
   1c524:	bf08      	it	eq
   1c526:	3101      	addeq	r1, #1
   1c528:	f003 fd68 	bl	1fffc <strcmp>
   1c52c:	fab0 f080 	clz	r0, r0
   1c530:	0940      	lsrs	r0, r0, #5
   1c532:	bd08      	pop	{r3, pc}
   1c534:	2001      	movs	r0, #1
   1c536:	bd08      	pop	{r3, pc}
   1c538:	2000      	movs	r0, #0
   1c53a:	bd08      	pop	{r3, pc}

0001c53c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   1c53c:	b510      	push	{r4, lr}
   1c53e:	4604      	mov	r4, r0
   1c540:	4b02      	ldr	r3, [pc, #8]	; (1c54c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1c542:	6003      	str	r3, [r0, #0]
   1c544:	f7ff fef8 	bl	1c338 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c548:	4620      	mov	r0, r4
   1c54a:	bd10      	pop	{r4, pc}
   1c54c:	00027320 	.word	0x00027320

0001c550 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1c550:	b510      	push	{r4, lr}
   1c552:	4604      	mov	r4, r0
   1c554:	f7ff fff2 	bl	1c53c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1c558:	4620      	mov	r0, r4
   1c55a:	2118      	movs	r1, #24
   1c55c:	f7ff ff3d 	bl	1c3da <operator delete(void*, unsigned int)>
   1c560:	4620      	mov	r0, r4
   1c562:	bd10      	pop	{r4, pc}

0001c564 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c564:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c568:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   1c56c:	4604      	mov	r4, r0
   1c56e:	454a      	cmp	r2, r9
   1c570:	460f      	mov	r7, r1
   1c572:	4616      	mov	r6, r2
   1c574:	4698      	mov	r8, r3
   1c576:	d103      	bne.n	1c580 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   1c578:	4619      	mov	r1, r3
   1c57a:	f7ff ffc9 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c57e:	bb38      	cbnz	r0, 1c5d0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1c580:	68e5      	ldr	r5, [r4, #12]
   1c582:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1c586:	e001      	b.n	1c58c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   1c588:	3d01      	subs	r5, #1
   1c58a:	3c08      	subs	r4, #8
   1c58c:	b315      	cbz	r5, 1c5d4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   1c58e:	68e3      	ldr	r3, [r4, #12]
   1c590:	079a      	lsls	r2, r3, #30
   1c592:	d5f9      	bpl.n	1c588 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c594:	f013 0a01 	ands.w	sl, r3, #1
   1c598:	ea4f 2223 	mov.w	r2, r3, asr #8
   1c59c:	d003      	beq.n	1c5a6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   1c59e:	1cfb      	adds	r3, r7, #3
   1c5a0:	d0f2      	beq.n	1c588 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c5a2:	6833      	ldr	r3, [r6, #0]
   1c5a4:	589a      	ldr	r2, [r3, r2]
   1c5a6:	68a0      	ldr	r0, [r4, #8]
   1c5a8:	4432      	add	r2, r6
   1c5aa:	6803      	ldr	r3, [r0, #0]
   1c5ac:	f8cd 9000 	str.w	r9, [sp]
   1c5b0:	f8d3 b020 	ldr.w	fp, [r3, #32]
   1c5b4:	4639      	mov	r1, r7
   1c5b6:	4643      	mov	r3, r8
   1c5b8:	47d8      	blx	fp
   1c5ba:	2803      	cmp	r0, #3
   1c5bc:	dde4      	ble.n	1c588 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c5be:	f1ba 0f00 	cmp.w	sl, #0
   1c5c2:	d002      	beq.n	1c5ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1c5c4:	f040 0001 	orr.w	r0, r0, #1
   1c5c8:	b2c0      	uxtb	r0, r0
   1c5ca:	b003      	add	sp, #12
   1c5cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5d0:	2006      	movs	r0, #6
   1c5d2:	e7fa      	b.n	1c5ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1c5d4:	2001      	movs	r0, #1
   1c5d6:	e7f8      	b.n	1c5ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

0001c5d8 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1c5d8:	b4f0      	push	{r4, r5, r6, r7}
   1c5da:	1e0e      	subs	r6, r1, #0
   1c5dc:	9c04      	ldr	r4, [sp, #16]
   1c5de:	db06      	blt.n	1c5ee <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   1c5e0:	1990      	adds	r0, r2, r6
   1c5e2:	4284      	cmp	r4, r0
   1c5e4:	bf14      	ite	ne
   1c5e6:	2001      	movne	r0, #1
   1c5e8:	2006      	moveq	r0, #6
   1c5ea:	bcf0      	pop	{r4, r5, r6, r7}
   1c5ec:	4770      	bx	lr
   1c5ee:	3602      	adds	r6, #2
   1c5f0:	d005      	beq.n	1c5fe <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   1c5f2:	6805      	ldr	r5, [r0, #0]
   1c5f4:	9404      	str	r4, [sp, #16]
   1c5f6:	6a2c      	ldr	r4, [r5, #32]
   1c5f8:	46a4      	mov	ip, r4
   1c5fa:	bcf0      	pop	{r4, r5, r6, r7}
   1c5fc:	4760      	bx	ip
   1c5fe:	2001      	movs	r0, #1
   1c600:	e7f3      	b.n	1c5ea <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

0001c602 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1c602:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c606:	b091      	sub	sp, #68	; 0x44
   1c608:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   1c60a:	9308      	str	r3, [sp, #32]
   1c60c:	68a3      	ldr	r3, [r4, #8]
   1c60e:	4688      	mov	r8, r1
   1c610:	06d9      	lsls	r1, r3, #27
   1c612:	bf48      	it	mi
   1c614:	6883      	ldrmi	r3, [r0, #8]
   1c616:	9207      	str	r2, [sp, #28]
   1c618:	bf48      	it	mi
   1c61a:	60a3      	strmi	r3, [r4, #8]
   1c61c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1c61e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1c620:	4681      	mov	r9, r0
   1c622:	4293      	cmp	r3, r2
   1c624:	d105      	bne.n	1c632 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1c626:	991b      	ldr	r1, [sp, #108]	; 0x6c
   1c628:	f7ff ff72 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c62c:	2800      	cmp	r0, #0
   1c62e:	f040 8119 	bne.w	1c864 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   1c632:	9908      	ldr	r1, [sp, #32]
   1c634:	4648      	mov	r0, r9
   1c636:	f7ff ff6b 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c63a:	4682      	mov	sl, r0
   1c63c:	2800      	cmp	r0, #0
   1c63e:	d16e      	bne.n	1c71e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   1c640:	2600      	movs	r6, #0
   1c642:	f1b8 0f00 	cmp.w	r8, #0
   1c646:	bfa8      	it	ge
   1c648:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1c64a:	46b3      	mov	fp, r6
   1c64c:	bfa4      	itt	ge
   1c64e:	eba3 0308 	subge.w	r3, r3, r8
   1c652:	9309      	strge	r3, [sp, #36]	; 0x24
   1c654:	f04f 0301 	mov.w	r3, #1
   1c658:	930a      	str	r3, [sp, #40]	; 0x28
   1c65a:	9b07      	ldr	r3, [sp, #28]
   1c65c:	bfb8      	it	lt
   1c65e:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   1c662:	f043 0301 	orr.w	r3, r3, #1
   1c666:	9606      	str	r6, [sp, #24]
   1c668:	930b      	str	r3, [sp, #44]	; 0x2c
   1c66a:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1c66e:	9304      	str	r3, [sp, #16]
   1c670:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   1c674:	9305      	str	r3, [sp, #20]
   1c676:	9b04      	ldr	r3, [sp, #16]
   1c678:	2b00      	cmp	r3, #0
   1c67a:	f000 80e9 	beq.w	1c850 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   1c67e:	9b05      	ldr	r3, [sp, #20]
   1c680:	68a5      	ldr	r5, [r4, #8]
   1c682:	68db      	ldr	r3, [r3, #12]
   1c684:	950f      	str	r5, [sp, #60]	; 0x3c
   1c686:	07da      	lsls	r2, r3, #31
   1c688:	bf48      	it	mi
   1c68a:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   1c68c:	ea4f 2123 	mov.w	r1, r3, asr #8
   1c690:	bf48      	it	mi
   1c692:	6800      	ldrmi	r0, [r0, #0]
   1c694:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   1c698:	bf48      	it	mi
   1c69a:	5841      	ldrmi	r1, [r0, r1]
   1c69c:	981a      	ldr	r0, [sp, #104]	; 0x68
   1c69e:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   1c6a2:	4401      	add	r1, r0
   1c6a4:	9809      	ldr	r0, [sp, #36]	; 0x24
   1c6a6:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   1c6aa:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   1c6ae:	bf4c      	ite	mi
   1c6b0:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   1c6b2:	9a07      	ldrpl	r2, [sp, #28]
   1c6b4:	b138      	cbz	r0, 1c6c6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   1c6b6:	4288      	cmp	r0, r1
   1c6b8:	bf2c      	ite	cs
   1c6ba:	2000      	movcs	r0, #0
   1c6bc:	2001      	movcc	r0, #1
   1c6be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   1c6c0:	42b8      	cmp	r0, r7
   1c6c2:	f000 80ba 	beq.w	1c83a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   1c6c6:	079b      	lsls	r3, r3, #30
   1c6c8:	d407      	bmi.n	1c6da <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   1c6ca:	f118 0f02 	cmn.w	r8, #2
   1c6ce:	d102      	bne.n	1c6d6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   1c6d0:	07af      	lsls	r7, r5, #30
   1c6d2:	f000 80b4 	beq.w	1c83e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1c6d6:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1c6da:	9b05      	ldr	r3, [sp, #20]
   1c6dc:	ad0d      	add	r5, sp, #52	; 0x34
   1c6de:	6898      	ldr	r0, [r3, #8]
   1c6e0:	6803      	ldr	r3, [r0, #0]
   1c6e2:	9503      	str	r5, [sp, #12]
   1c6e4:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   1c6e6:	9502      	str	r5, [sp, #8]
   1c6e8:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1c6ea:	e88d 0022 	stmia.w	sp, {r1, r5}
   1c6ee:	4641      	mov	r1, r8
   1c6f0:	69dd      	ldr	r5, [r3, #28]
   1c6f2:	9b08      	ldr	r3, [sp, #32]
   1c6f4:	47a8      	blx	r5
   1c6f6:	7961      	ldrb	r1, [r4, #5]
   1c6f8:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   1c6fc:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   1c700:	4311      	orrs	r1, r2
   1c702:	2d06      	cmp	r5, #6
   1c704:	4603      	mov	r3, r0
   1c706:	7161      	strb	r1, [r4, #5]
   1c708:	d001      	beq.n	1c70e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   1c70a:	2d02      	cmp	r5, #2
   1c70c:	d122      	bne.n	1c754 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   1c70e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c710:	71a5      	strb	r5, [r4, #6]
   1c712:	6023      	str	r3, [r4, #0]
   1c714:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1c718:	7123      	strb	r3, [r4, #4]
   1c71a:	4682      	mov	sl, r0
   1c71c:	e078      	b.n	1c810 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1c71e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1c720:	f1b8 0f00 	cmp.w	r8, #0
   1c724:	6023      	str	r3, [r4, #0]
   1c726:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1c72a:	7123      	strb	r3, [r4, #4]
   1c72c:	db0c      	blt.n	1c748 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   1c72e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1c730:	4498      	add	r8, r3
   1c732:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1c734:	4543      	cmp	r3, r8
   1c736:	bf0c      	ite	eq
   1c738:	f04f 0806 	moveq.w	r8, #6
   1c73c:	f04f 0801 	movne.w	r8, #1
   1c740:	f884 8006 	strb.w	r8, [r4, #6]
   1c744:	2600      	movs	r6, #0
   1c746:	e064      	b.n	1c812 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1c748:	f118 0f02 	cmn.w	r8, #2
   1c74c:	d1fa      	bne.n	1c744 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1c74e:	2301      	movs	r3, #1
   1c750:	71a3      	strb	r3, [r4, #6]
   1c752:	e7f7      	b.n	1c744 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1c754:	6822      	ldr	r2, [r4, #0]
   1c756:	b986      	cbnz	r6, 1c77a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1c758:	b97a      	cbnz	r2, 1c77a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1c75a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1c75c:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   1c760:	6022      	str	r2, [r4, #0]
   1c762:	7125      	strb	r5, [r4, #4]
   1c764:	b122      	cbz	r2, 1c770 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1c766:	b119      	cbz	r1, 1c770 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1c768:	f8d9 2008 	ldr.w	r2, [r9, #8]
   1c76c:	07d5      	lsls	r5, r2, #31
   1c76e:	d5d4      	bpl.n	1c71a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   1c770:	7962      	ldrb	r2, [r4, #5]
   1c772:	2a04      	cmp	r2, #4
   1c774:	d164      	bne.n	1c840 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   1c776:	469a      	mov	sl, r3
   1c778:	e04a      	b.n	1c810 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1c77a:	b15a      	cbz	r2, 1c794 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   1c77c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c77e:	429a      	cmp	r2, r3
   1c780:	d106      	bne.n	1c790 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   1c782:	7923      	ldrb	r3, [r4, #4]
   1c784:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   1c788:	4313      	orrs	r3, r2
   1c78a:	7123      	strb	r3, [r4, #4]
   1c78c:	4633      	mov	r3, r6
   1c78e:	e7ef      	b.n	1c770 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1c790:	b92b      	cbnz	r3, 1c79e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1c792:	b920      	cbnz	r0, 1c79e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1c794:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c796:	2b00      	cmp	r3, #0
   1c798:	d0f8      	beq.n	1c78c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1c79a:	2e00      	cmp	r6, #0
   1c79c:	d0f6      	beq.n	1c78c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1c79e:	2903      	cmp	r1, #3
   1c7a0:	79a7      	ldrb	r7, [r4, #6]
   1c7a2:	d904      	bls.n	1c7ae <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   1c7a4:	07c8      	lsls	r0, r1, #31
   1c7a6:	d561      	bpl.n	1c86c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c7a8:	68a3      	ldr	r3, [r4, #8]
   1c7aa:	0799      	lsls	r1, r3, #30
   1c7ac:	d55e      	bpl.n	1c86c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c7ae:	b97f      	cbnz	r7, 1c7d0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   1c7b0:	2d03      	cmp	r5, #3
   1c7b2:	dd05      	ble.n	1c7c0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1c7b4:	07eb      	lsls	r3, r5, #31
   1c7b6:	d560      	bpl.n	1c87a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   1c7b8:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1c7bc:	079f      	lsls	r7, r3, #30
   1c7be:	d52c      	bpl.n	1c81a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1c7c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1c7c2:	4641      	mov	r1, r8
   1c7c4:	9300      	str	r3, [sp, #0]
   1c7c6:	9808      	ldr	r0, [sp, #32]
   1c7c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1c7ca:	f7ff ff05 	bl	1c5d8 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1c7ce:	4607      	mov	r7, r0
   1c7d0:	b945      	cbnz	r5, 1c7e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1c7d2:	2f03      	cmp	r7, #3
   1c7d4:	dd54      	ble.n	1c880 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1c7d6:	07fd      	lsls	r5, r7, #31
   1c7d8:	d503      	bpl.n	1c7e2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   1c7da:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1c7de:	0798      	lsls	r0, r3, #30
   1c7e0:	d44e      	bmi.n	1c880 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1c7e2:	2501      	movs	r5, #1
   1c7e4:	ea85 0307 	eor.w	r3, r5, r7
   1c7e8:	b2db      	uxtb	r3, r3
   1c7ea:	2b03      	cmp	r3, #3
   1c7ec:	d917      	bls.n	1c81e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   1c7ee:	2d03      	cmp	r5, #3
   1c7f0:	bfc5      	ittet	gt
   1c7f2:	462f      	movgt	r7, r5
   1c7f4:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   1c7f6:	4633      	movle	r3, r6
   1c7f8:	6023      	strgt	r3, [r4, #0]
   1c7fa:	bfc8      	it	gt
   1c7fc:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   1c800:	71a7      	strb	r7, [r4, #6]
   1c802:	bfc4      	itt	gt
   1c804:	7123      	strbgt	r3, [r4, #4]
   1c806:	2300      	movgt	r3, #0
   1c808:	07b9      	lsls	r1, r7, #30
   1c80a:	d401      	bmi.n	1c810 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1c80c:	07fa      	lsls	r2, r7, #31
   1c80e:	d4af      	bmi.n	1c770 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1c810:	4656      	mov	r6, sl
   1c812:	4630      	mov	r0, r6
   1c814:	b011      	add	sp, #68	; 0x44
   1c816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c81a:	2701      	movs	r7, #1
   1c81c:	e7e2      	b.n	1c7e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1c81e:	403d      	ands	r5, r7
   1c820:	b2ed      	uxtb	r5, r5
   1c822:	2d03      	cmp	r5, #3
   1c824:	f8c4 b000 	str.w	fp, [r4]
   1c828:	d904      	bls.n	1c834 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   1c82a:	2302      	movs	r3, #2
   1c82c:	f04f 0a01 	mov.w	sl, #1
   1c830:	71a3      	strb	r3, [r4, #6]
   1c832:	e7ed      	b.n	1c810 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1c834:	2301      	movs	r3, #1
   1c836:	71a3      	strb	r3, [r4, #6]
   1c838:	e79a      	b.n	1c770 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1c83a:	2301      	movs	r3, #1
   1c83c:	9306      	str	r3, [sp, #24]
   1c83e:	4633      	mov	r3, r6
   1c840:	9a04      	ldr	r2, [sp, #16]
   1c842:	461e      	mov	r6, r3
   1c844:	3a01      	subs	r2, #1
   1c846:	9204      	str	r2, [sp, #16]
   1c848:	9a05      	ldr	r2, [sp, #20]
   1c84a:	3a08      	subs	r2, #8
   1c84c:	9205      	str	r2, [sp, #20]
   1c84e:	e712      	b.n	1c676 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1c850:	9b06      	ldr	r3, [sp, #24]
   1c852:	2b00      	cmp	r3, #0
   1c854:	d0dd      	beq.n	1c812 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1c856:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c858:	9306      	str	r3, [sp, #24]
   1c85a:	2b00      	cmp	r3, #0
   1c85c:	d0d9      	beq.n	1c812 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1c85e:	9b04      	ldr	r3, [sp, #16]
   1c860:	930a      	str	r3, [sp, #40]	; 0x28
   1c862:	e702      	b.n	1c66a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   1c864:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1c868:	7163      	strb	r3, [r4, #5]
   1c86a:	e76b      	b.n	1c744 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1c86c:	2f00      	cmp	r7, #0
   1c86e:	bf08      	it	eq
   1c870:	2701      	moveq	r7, #1
   1c872:	2d00      	cmp	r5, #0
   1c874:	bf08      	it	eq
   1c876:	2501      	moveq	r5, #1
   1c878:	e7b4      	b.n	1c7e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1c87a:	2d00      	cmp	r5, #0
   1c87c:	d1cd      	bne.n	1c81a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1c87e:	2701      	movs	r7, #1
   1c880:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1c882:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1c884:	9300      	str	r3, [sp, #0]
   1c886:	4641      	mov	r1, r8
   1c888:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1c88a:	9808      	ldr	r0, [sp, #32]
   1c88c:	f7ff fea4 	bl	1c5d8 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1c890:	4605      	mov	r5, r0
   1c892:	e7a7      	b.n	1c7e4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

0001c894 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1c894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c898:	b089      	sub	sp, #36	; 0x24
   1c89a:	4607      	mov	r7, r0
   1c89c:	9102      	str	r1, [sp, #8]
   1c89e:	4692      	mov	sl, r2
   1c8a0:	461c      	mov	r4, r3
   1c8a2:	f7ff fd5d 	bl	1c360 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1c8a6:	4605      	mov	r5, r0
   1c8a8:	2800      	cmp	r0, #0
   1c8aa:	d155      	bne.n	1c958 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c8ac:	f04f 0b00 	mov.w	fp, #0
   1c8b0:	f8d4 8008 	ldr.w	r8, [r4, #8]
   1c8b4:	f8d7 900c 	ldr.w	r9, [r7, #12]
   1c8b8:	f018 0f10 	tst.w	r8, #16
   1c8bc:	bf18      	it	ne
   1c8be:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   1c8c2:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   1c8c6:	f008 0301 	and.w	r3, r8, #1
   1c8ca:	9303      	str	r3, [sp, #12]
   1c8cc:	f1b9 0f00 	cmp.w	r9, #0
   1c8d0:	d06b      	beq.n	1c9aa <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   1c8d2:	68f2      	ldr	r2, [r6, #12]
   1c8d4:	f8cd b010 	str.w	fp, [sp, #16]
   1c8d8:	f002 0301 	and.w	r3, r2, #1
   1c8dc:	9300      	str	r3, [sp, #0]
   1c8de:	f012 0302 	ands.w	r3, r2, #2
   1c8e2:	f88d b014 	strb.w	fp, [sp, #20]
   1c8e6:	f8cd 8018 	str.w	r8, [sp, #24]
   1c8ea:	f8cd b01c 	str.w	fp, [sp, #28]
   1c8ee:	9301      	str	r3, [sp, #4]
   1c8f0:	d102      	bne.n	1c8f8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   1c8f2:	9b03      	ldr	r3, [sp, #12]
   1c8f4:	2b00      	cmp	r3, #0
   1c8f6:	d04a      	beq.n	1c98e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1c8f8:	f1ba 0f00 	cmp.w	sl, #0
   1c8fc:	d030      	beq.n	1c960 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   1c8fe:	9b00      	ldr	r3, [sp, #0]
   1c900:	1212      	asrs	r2, r2, #8
   1c902:	b113      	cbz	r3, 1c90a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   1c904:	f8da 3000 	ldr.w	r3, [sl]
   1c908:	589a      	ldr	r2, [r3, r2]
   1c90a:	4452      	add	r2, sl
   1c90c:	68b0      	ldr	r0, [r6, #8]
   1c90e:	9902      	ldr	r1, [sp, #8]
   1c910:	6803      	ldr	r3, [r0, #0]
   1c912:	699d      	ldr	r5, [r3, #24]
   1c914:	ab04      	add	r3, sp, #16
   1c916:	47a8      	blx	r5
   1c918:	4605      	mov	r5, r0
   1c91a:	2800      	cmp	r0, #0
   1c91c:	d037      	beq.n	1c98e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1c91e:	9b07      	ldr	r3, [sp, #28]
   1c920:	2b08      	cmp	r3, #8
   1c922:	d103      	bne.n	1c92c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1c924:	9b00      	ldr	r3, [sp, #0]
   1c926:	b10b      	cbz	r3, 1c92c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1c928:	68b3      	ldr	r3, [r6, #8]
   1c92a:	9307      	str	r3, [sp, #28]
   1c92c:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1c930:	2b03      	cmp	r3, #3
   1c932:	dd02      	ble.n	1c93a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1c934:	9a01      	ldr	r2, [sp, #4]
   1c936:	2a00      	cmp	r2, #0
   1c938:	d03c      	beq.n	1c9b4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1c93a:	68e1      	ldr	r1, [r4, #12]
   1c93c:	b9c1      	cbnz	r1, 1c970 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   1c93e:	ab04      	add	r3, sp, #16
   1c940:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1c942:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1c946:	7923      	ldrb	r3, [r4, #4]
   1c948:	2b03      	cmp	r3, #3
   1c94a:	dd05      	ble.n	1c958 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c94c:	079a      	lsls	r2, r3, #30
   1c94e:	d509      	bpl.n	1c964 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   1c950:	68bb      	ldr	r3, [r7, #8]
   1c952:	f013 0f01 	tst.w	r3, #1
   1c956:	d11a      	bne.n	1c98e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1c958:	4628      	mov	r0, r5
   1c95a:	b009      	add	sp, #36	; 0x24
   1c95c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c960:	4652      	mov	r2, sl
   1c962:	e7d3      	b.n	1c90c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   1c964:	07db      	lsls	r3, r3, #31
   1c966:	d5f7      	bpl.n	1c958 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c968:	68bb      	ldr	r3, [r7, #8]
   1c96a:	f013 0f02 	tst.w	r3, #2
   1c96e:	e7f2      	b.n	1c956 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   1c970:	6823      	ldr	r3, [r4, #0]
   1c972:	9a04      	ldr	r2, [sp, #16]
   1c974:	4293      	cmp	r3, r2
   1c976:	d004      	beq.n	1c982 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   1c978:	2300      	movs	r3, #0
   1c97a:	6023      	str	r3, [r4, #0]
   1c97c:	2302      	movs	r3, #2
   1c97e:	7123      	strb	r3, [r4, #4]
   1c980:	e7ea      	b.n	1c958 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c982:	b143      	cbz	r3, 1c996 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   1c984:	7923      	ldrb	r3, [r4, #4]
   1c986:	f89d 2014 	ldrb.w	r2, [sp, #20]
   1c98a:	4313      	orrs	r3, r2
   1c98c:	7123      	strb	r3, [r4, #4]
   1c98e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   1c992:	3e08      	subs	r6, #8
   1c994:	e79a      	b.n	1c8cc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   1c996:	9807      	ldr	r0, [sp, #28]
   1c998:	2808      	cmp	r0, #8
   1c99a:	d0ef      	beq.n	1c97c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1c99c:	2908      	cmp	r1, #8
   1c99e:	d0ed      	beq.n	1c97c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1c9a0:	f7ff fdb6 	bl	1c510 <std::type_info::operator==(std::type_info const&) const>
   1c9a4:	2800      	cmp	r0, #0
   1c9a6:	d1ed      	bne.n	1c984 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   1c9a8:	e7e8      	b.n	1c97c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1c9aa:	7925      	ldrb	r5, [r4, #4]
   1c9ac:	3500      	adds	r5, #0
   1c9ae:	bf18      	it	ne
   1c9b0:	2501      	movne	r5, #1
   1c9b2:	e7d1      	b.n	1c958 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c9b4:	f023 0302 	bic.w	r3, r3, #2
   1c9b8:	f88d 3014 	strb.w	r3, [sp, #20]
   1c9bc:	e7bd      	b.n	1c93a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

0001c9be <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1c9be:	b508      	push	{r3, lr}
   1c9c0:	4780      	blx	r0
   1c9c2:	f001 f881 	bl	1dac8 <abort>
   1c9c6:	Address 0x000000000001c9c6 is out of bounds.


0001c9c8 <std::get_terminate()>:
_ZSt13get_terminatev():
   1c9c8:	4b02      	ldr	r3, [pc, #8]	; (1c9d4 <std::get_terminate()+0xc>)
   1c9ca:	6818      	ldr	r0, [r3, #0]
   1c9cc:	f3bf 8f5b 	dmb	ish
   1c9d0:	4770      	bx	lr
   1c9d2:	bf00      	nop
   1c9d4:	2007c0e0 	.word	0x2007c0e0

0001c9d8 <std::terminate()>:
_ZSt9terminatev():
   1c9d8:	b508      	push	{r3, lr}
   1c9da:	f7ff fff5 	bl	1c9c8 <std::get_terminate()>
   1c9de:	f7ff ffee 	bl	1c9be <__cxxabiv1::__terminate(void (*)())>
   1c9e2:	Address 0x000000000001c9e2 is out of bounds.


0001c9e4 <__aeabi_llsl>:
__aeabi_llsl():
   1c9e4:	4091      	lsls	r1, r2
   1c9e6:	1c03      	adds	r3, r0, #0
   1c9e8:	4090      	lsls	r0, r2
   1c9ea:	469c      	mov	ip, r3
   1c9ec:	3a20      	subs	r2, #32
   1c9ee:	4093      	lsls	r3, r2
   1c9f0:	4319      	orrs	r1, r3
   1c9f2:	4252      	negs	r2, r2
   1c9f4:	4663      	mov	r3, ip
   1c9f6:	40d3      	lsrs	r3, r2
   1c9f8:	4319      	orrs	r1, r3
   1c9fa:	4770      	bx	lr

0001c9fc <__aeabi_drsub>:
__aeabi_drsub():
   1c9fc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1ca00:	e002      	b.n	1ca08 <__adddf3>
   1ca02:	bf00      	nop

0001ca04 <__aeabi_dsub>:
__subdf3():
   1ca04:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001ca08 <__adddf3>:
__aeabi_dadd():
   1ca08:	b530      	push	{r4, r5, lr}
   1ca0a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1ca0e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1ca12:	ea94 0f05 	teq	r4, r5
   1ca16:	bf08      	it	eq
   1ca18:	ea90 0f02 	teqeq	r0, r2
   1ca1c:	bf1f      	itttt	ne
   1ca1e:	ea54 0c00 	orrsne.w	ip, r4, r0
   1ca22:	ea55 0c02 	orrsne.w	ip, r5, r2
   1ca26:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1ca2a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1ca2e:	f000 80e2 	beq.w	1cbf6 <__adddf3+0x1ee>
   1ca32:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1ca36:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1ca3a:	bfb8      	it	lt
   1ca3c:	426d      	neglt	r5, r5
   1ca3e:	dd0c      	ble.n	1ca5a <__adddf3+0x52>
   1ca40:	442c      	add	r4, r5
   1ca42:	ea80 0202 	eor.w	r2, r0, r2
   1ca46:	ea81 0303 	eor.w	r3, r1, r3
   1ca4a:	ea82 0000 	eor.w	r0, r2, r0
   1ca4e:	ea83 0101 	eor.w	r1, r3, r1
   1ca52:	ea80 0202 	eor.w	r2, r0, r2
   1ca56:	ea81 0303 	eor.w	r3, r1, r3
   1ca5a:	2d36      	cmp	r5, #54	; 0x36
   1ca5c:	bf88      	it	hi
   1ca5e:	bd30      	pophi	{r4, r5, pc}
   1ca60:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1ca64:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1ca68:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1ca6c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1ca70:	d002      	beq.n	1ca78 <__adddf3+0x70>
   1ca72:	4240      	negs	r0, r0
   1ca74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1ca78:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1ca7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1ca80:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1ca84:	d002      	beq.n	1ca8c <__adddf3+0x84>
   1ca86:	4252      	negs	r2, r2
   1ca88:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1ca8c:	ea94 0f05 	teq	r4, r5
   1ca90:	f000 80a7 	beq.w	1cbe2 <__adddf3+0x1da>
   1ca94:	f1a4 0401 	sub.w	r4, r4, #1
   1ca98:	f1d5 0e20 	rsbs	lr, r5, #32
   1ca9c:	db0d      	blt.n	1caba <__adddf3+0xb2>
   1ca9e:	fa02 fc0e 	lsl.w	ip, r2, lr
   1caa2:	fa22 f205 	lsr.w	r2, r2, r5
   1caa6:	1880      	adds	r0, r0, r2
   1caa8:	f141 0100 	adc.w	r1, r1, #0
   1caac:	fa03 f20e 	lsl.w	r2, r3, lr
   1cab0:	1880      	adds	r0, r0, r2
   1cab2:	fa43 f305 	asr.w	r3, r3, r5
   1cab6:	4159      	adcs	r1, r3
   1cab8:	e00e      	b.n	1cad8 <__adddf3+0xd0>
   1caba:	f1a5 0520 	sub.w	r5, r5, #32
   1cabe:	f10e 0e20 	add.w	lr, lr, #32
   1cac2:	2a01      	cmp	r2, #1
   1cac4:	fa03 fc0e 	lsl.w	ip, r3, lr
   1cac8:	bf28      	it	cs
   1caca:	f04c 0c02 	orrcs.w	ip, ip, #2
   1cace:	fa43 f305 	asr.w	r3, r3, r5
   1cad2:	18c0      	adds	r0, r0, r3
   1cad4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1cad8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cadc:	d507      	bpl.n	1caee <__adddf3+0xe6>
   1cade:	f04f 0e00 	mov.w	lr, #0
   1cae2:	f1dc 0c00 	rsbs	ip, ip, #0
   1cae6:	eb7e 0000 	sbcs.w	r0, lr, r0
   1caea:	eb6e 0101 	sbc.w	r1, lr, r1
   1caee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1caf2:	d31b      	bcc.n	1cb2c <__adddf3+0x124>
   1caf4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1caf8:	d30c      	bcc.n	1cb14 <__adddf3+0x10c>
   1cafa:	0849      	lsrs	r1, r1, #1
   1cafc:	ea5f 0030 	movs.w	r0, r0, rrx
   1cb00:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1cb04:	f104 0401 	add.w	r4, r4, #1
   1cb08:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1cb0c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1cb10:	f080 809a 	bcs.w	1cc48 <__adddf3+0x240>
   1cb14:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1cb18:	bf08      	it	eq
   1cb1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1cb1e:	f150 0000 	adcs.w	r0, r0, #0
   1cb22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1cb26:	ea41 0105 	orr.w	r1, r1, r5
   1cb2a:	bd30      	pop	{r4, r5, pc}
   1cb2c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1cb30:	4140      	adcs	r0, r0
   1cb32:	eb41 0101 	adc.w	r1, r1, r1
   1cb36:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1cb3a:	f1a4 0401 	sub.w	r4, r4, #1
   1cb3e:	d1e9      	bne.n	1cb14 <__adddf3+0x10c>
   1cb40:	f091 0f00 	teq	r1, #0
   1cb44:	bf04      	itt	eq
   1cb46:	4601      	moveq	r1, r0
   1cb48:	2000      	moveq	r0, #0
   1cb4a:	fab1 f381 	clz	r3, r1
   1cb4e:	bf08      	it	eq
   1cb50:	3320      	addeq	r3, #32
   1cb52:	f1a3 030b 	sub.w	r3, r3, #11
   1cb56:	f1b3 0220 	subs.w	r2, r3, #32
   1cb5a:	da0c      	bge.n	1cb76 <__adddf3+0x16e>
   1cb5c:	320c      	adds	r2, #12
   1cb5e:	dd08      	ble.n	1cb72 <__adddf3+0x16a>
   1cb60:	f102 0c14 	add.w	ip, r2, #20
   1cb64:	f1c2 020c 	rsb	r2, r2, #12
   1cb68:	fa01 f00c 	lsl.w	r0, r1, ip
   1cb6c:	fa21 f102 	lsr.w	r1, r1, r2
   1cb70:	e00c      	b.n	1cb8c <__adddf3+0x184>
   1cb72:	f102 0214 	add.w	r2, r2, #20
   1cb76:	bfd8      	it	le
   1cb78:	f1c2 0c20 	rsble	ip, r2, #32
   1cb7c:	fa01 f102 	lsl.w	r1, r1, r2
   1cb80:	fa20 fc0c 	lsr.w	ip, r0, ip
   1cb84:	bfdc      	itt	le
   1cb86:	ea41 010c 	orrle.w	r1, r1, ip
   1cb8a:	4090      	lslle	r0, r2
   1cb8c:	1ae4      	subs	r4, r4, r3
   1cb8e:	bfa2      	ittt	ge
   1cb90:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1cb94:	4329      	orrge	r1, r5
   1cb96:	bd30      	popge	{r4, r5, pc}
   1cb98:	ea6f 0404 	mvn.w	r4, r4
   1cb9c:	3c1f      	subs	r4, #31
   1cb9e:	da1c      	bge.n	1cbda <__adddf3+0x1d2>
   1cba0:	340c      	adds	r4, #12
   1cba2:	dc0e      	bgt.n	1cbc2 <__adddf3+0x1ba>
   1cba4:	f104 0414 	add.w	r4, r4, #20
   1cba8:	f1c4 0220 	rsb	r2, r4, #32
   1cbac:	fa20 f004 	lsr.w	r0, r0, r4
   1cbb0:	fa01 f302 	lsl.w	r3, r1, r2
   1cbb4:	ea40 0003 	orr.w	r0, r0, r3
   1cbb8:	fa21 f304 	lsr.w	r3, r1, r4
   1cbbc:	ea45 0103 	orr.w	r1, r5, r3
   1cbc0:	bd30      	pop	{r4, r5, pc}
   1cbc2:	f1c4 040c 	rsb	r4, r4, #12
   1cbc6:	f1c4 0220 	rsb	r2, r4, #32
   1cbca:	fa20 f002 	lsr.w	r0, r0, r2
   1cbce:	fa01 f304 	lsl.w	r3, r1, r4
   1cbd2:	ea40 0003 	orr.w	r0, r0, r3
   1cbd6:	4629      	mov	r1, r5
   1cbd8:	bd30      	pop	{r4, r5, pc}
   1cbda:	fa21 f004 	lsr.w	r0, r1, r4
   1cbde:	4629      	mov	r1, r5
   1cbe0:	bd30      	pop	{r4, r5, pc}
   1cbe2:	f094 0f00 	teq	r4, #0
   1cbe6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1cbea:	bf06      	itte	eq
   1cbec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1cbf0:	3401      	addeq	r4, #1
   1cbf2:	3d01      	subne	r5, #1
   1cbf4:	e74e      	b.n	1ca94 <__adddf3+0x8c>
   1cbf6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1cbfa:	bf18      	it	ne
   1cbfc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1cc00:	d029      	beq.n	1cc56 <__adddf3+0x24e>
   1cc02:	ea94 0f05 	teq	r4, r5
   1cc06:	bf08      	it	eq
   1cc08:	ea90 0f02 	teqeq	r0, r2
   1cc0c:	d005      	beq.n	1cc1a <__adddf3+0x212>
   1cc0e:	ea54 0c00 	orrs.w	ip, r4, r0
   1cc12:	bf04      	itt	eq
   1cc14:	4619      	moveq	r1, r3
   1cc16:	4610      	moveq	r0, r2
   1cc18:	bd30      	pop	{r4, r5, pc}
   1cc1a:	ea91 0f03 	teq	r1, r3
   1cc1e:	bf1e      	ittt	ne
   1cc20:	2100      	movne	r1, #0
   1cc22:	2000      	movne	r0, #0
   1cc24:	bd30      	popne	{r4, r5, pc}
   1cc26:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1cc2a:	d105      	bne.n	1cc38 <__adddf3+0x230>
   1cc2c:	0040      	lsls	r0, r0, #1
   1cc2e:	4149      	adcs	r1, r1
   1cc30:	bf28      	it	cs
   1cc32:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1cc36:	bd30      	pop	{r4, r5, pc}
   1cc38:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1cc3c:	bf3c      	itt	cc
   1cc3e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1cc42:	bd30      	popcc	{r4, r5, pc}
   1cc44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cc48:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1cc4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1cc50:	f04f 0000 	mov.w	r0, #0
   1cc54:	bd30      	pop	{r4, r5, pc}
   1cc56:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1cc5a:	bf1a      	itte	ne
   1cc5c:	4619      	movne	r1, r3
   1cc5e:	4610      	movne	r0, r2
   1cc60:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1cc64:	bf1c      	itt	ne
   1cc66:	460b      	movne	r3, r1
   1cc68:	4602      	movne	r2, r0
   1cc6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1cc6e:	bf06      	itte	eq
   1cc70:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1cc74:	ea91 0f03 	teqeq	r1, r3
   1cc78:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1cc7c:	bd30      	pop	{r4, r5, pc}
   1cc7e:	bf00      	nop

0001cc80 <__aeabi_ui2d>:
__floatunsidf():
   1cc80:	f090 0f00 	teq	r0, #0
   1cc84:	bf04      	itt	eq
   1cc86:	2100      	moveq	r1, #0
   1cc88:	4770      	bxeq	lr
   1cc8a:	b530      	push	{r4, r5, lr}
   1cc8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cc90:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cc94:	f04f 0500 	mov.w	r5, #0
   1cc98:	f04f 0100 	mov.w	r1, #0
   1cc9c:	e750      	b.n	1cb40 <__adddf3+0x138>
   1cc9e:	bf00      	nop

0001cca0 <__aeabi_i2d>:
__aeabi_i2d():
   1cca0:	f090 0f00 	teq	r0, #0
   1cca4:	bf04      	itt	eq
   1cca6:	2100      	moveq	r1, #0
   1cca8:	4770      	bxeq	lr
   1ccaa:	b530      	push	{r4, r5, lr}
   1ccac:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1ccb0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1ccb4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1ccb8:	bf48      	it	mi
   1ccba:	4240      	negmi	r0, r0
   1ccbc:	f04f 0100 	mov.w	r1, #0
   1ccc0:	e73e      	b.n	1cb40 <__adddf3+0x138>
   1ccc2:	bf00      	nop

0001ccc4 <__aeabi_f2d>:
__aeabi_f2d():
   1ccc4:	0042      	lsls	r2, r0, #1
   1ccc6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1ccca:	ea4f 0131 	mov.w	r1, r1, rrx
   1ccce:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1ccd2:	bf1f      	itttt	ne
   1ccd4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1ccd8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1ccdc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1cce0:	4770      	bxne	lr
   1cce2:	f092 0f00 	teq	r2, #0
   1cce6:	bf14      	ite	ne
   1cce8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1ccec:	4770      	bxeq	lr
   1ccee:	b530      	push	{r4, r5, lr}
   1ccf0:	f44f 7460 	mov.w	r4, #896	; 0x380
   1ccf4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1ccf8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1ccfc:	e720      	b.n	1cb40 <__adddf3+0x138>
   1ccfe:	bf00      	nop

0001cd00 <__aeabi_ul2d>:
__floatundidf():
   1cd00:	ea50 0201 	orrs.w	r2, r0, r1
   1cd04:	bf08      	it	eq
   1cd06:	4770      	bxeq	lr
   1cd08:	b530      	push	{r4, r5, lr}
   1cd0a:	f04f 0500 	mov.w	r5, #0
   1cd0e:	e00a      	b.n	1cd26 <__aeabi_l2d+0x16>

0001cd10 <__aeabi_l2d>:
__aeabi_l2d():
   1cd10:	ea50 0201 	orrs.w	r2, r0, r1
   1cd14:	bf08      	it	eq
   1cd16:	4770      	bxeq	lr
   1cd18:	b530      	push	{r4, r5, lr}
   1cd1a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1cd1e:	d502      	bpl.n	1cd26 <__aeabi_l2d+0x16>
   1cd20:	4240      	negs	r0, r0
   1cd22:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1cd26:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cd2a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cd2e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1cd32:	f43f aedc 	beq.w	1caee <__adddf3+0xe6>
   1cd36:	f04f 0203 	mov.w	r2, #3
   1cd3a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1cd3e:	bf18      	it	ne
   1cd40:	3203      	addne	r2, #3
   1cd42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1cd46:	bf18      	it	ne
   1cd48:	3203      	addne	r2, #3
   1cd4a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1cd4e:	f1c2 0320 	rsb	r3, r2, #32
   1cd52:	fa00 fc03 	lsl.w	ip, r0, r3
   1cd56:	fa20 f002 	lsr.w	r0, r0, r2
   1cd5a:	fa01 fe03 	lsl.w	lr, r1, r3
   1cd5e:	ea40 000e 	orr.w	r0, r0, lr
   1cd62:	fa21 f102 	lsr.w	r1, r1, r2
   1cd66:	4414      	add	r4, r2
   1cd68:	e6c1      	b.n	1caee <__adddf3+0xe6>
   1cd6a:	bf00      	nop

0001cd6c <__aeabi_dmul>:
__muldf3():
   1cd6c:	b570      	push	{r4, r5, r6, lr}
   1cd6e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1cd72:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1cd76:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1cd7a:	bf1d      	ittte	ne
   1cd7c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1cd80:	ea94 0f0c 	teqne	r4, ip
   1cd84:	ea95 0f0c 	teqne	r5, ip
   1cd88:	f000 f8de 	bleq	1cf48 <__aeabi_dmul+0x1dc>
   1cd8c:	442c      	add	r4, r5
   1cd8e:	ea81 0603 	eor.w	r6, r1, r3
   1cd92:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1cd96:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1cd9a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1cd9e:	bf18      	it	ne
   1cda0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1cda4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1cda8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1cdac:	d038      	beq.n	1ce20 <__aeabi_dmul+0xb4>
   1cdae:	fba0 ce02 	umull	ip, lr, r0, r2
   1cdb2:	f04f 0500 	mov.w	r5, #0
   1cdb6:	fbe1 e502 	umlal	lr, r5, r1, r2
   1cdba:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1cdbe:	fbe0 e503 	umlal	lr, r5, r0, r3
   1cdc2:	f04f 0600 	mov.w	r6, #0
   1cdc6:	fbe1 5603 	umlal	r5, r6, r1, r3
   1cdca:	f09c 0f00 	teq	ip, #0
   1cdce:	bf18      	it	ne
   1cdd0:	f04e 0e01 	orrne.w	lr, lr, #1
   1cdd4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1cdd8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1cddc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1cde0:	d204      	bcs.n	1cdec <__aeabi_dmul+0x80>
   1cde2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1cde6:	416d      	adcs	r5, r5
   1cde8:	eb46 0606 	adc.w	r6, r6, r6
   1cdec:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1cdf0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1cdf4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1cdf8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1cdfc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1ce00:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1ce04:	bf88      	it	hi
   1ce06:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1ce0a:	d81e      	bhi.n	1ce4a <__aeabi_dmul+0xde>
   1ce0c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1ce10:	bf08      	it	eq
   1ce12:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1ce16:	f150 0000 	adcs.w	r0, r0, #0
   1ce1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1ce1e:	bd70      	pop	{r4, r5, r6, pc}
   1ce20:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1ce24:	ea46 0101 	orr.w	r1, r6, r1
   1ce28:	ea40 0002 	orr.w	r0, r0, r2
   1ce2c:	ea81 0103 	eor.w	r1, r1, r3
   1ce30:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1ce34:	bfc2      	ittt	gt
   1ce36:	ebd4 050c 	rsbsgt	r5, r4, ip
   1ce3a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1ce3e:	bd70      	popgt	{r4, r5, r6, pc}
   1ce40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ce44:	f04f 0e00 	mov.w	lr, #0
   1ce48:	3c01      	subs	r4, #1
   1ce4a:	f300 80ab 	bgt.w	1cfa4 <__aeabi_dmul+0x238>
   1ce4e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1ce52:	bfde      	ittt	le
   1ce54:	2000      	movle	r0, #0
   1ce56:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1ce5a:	bd70      	pople	{r4, r5, r6, pc}
   1ce5c:	f1c4 0400 	rsb	r4, r4, #0
   1ce60:	3c20      	subs	r4, #32
   1ce62:	da35      	bge.n	1ced0 <__aeabi_dmul+0x164>
   1ce64:	340c      	adds	r4, #12
   1ce66:	dc1b      	bgt.n	1cea0 <__aeabi_dmul+0x134>
   1ce68:	f104 0414 	add.w	r4, r4, #20
   1ce6c:	f1c4 0520 	rsb	r5, r4, #32
   1ce70:	fa00 f305 	lsl.w	r3, r0, r5
   1ce74:	fa20 f004 	lsr.w	r0, r0, r4
   1ce78:	fa01 f205 	lsl.w	r2, r1, r5
   1ce7c:	ea40 0002 	orr.w	r0, r0, r2
   1ce80:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1ce84:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1ce88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1ce8c:	fa21 f604 	lsr.w	r6, r1, r4
   1ce90:	eb42 0106 	adc.w	r1, r2, r6
   1ce94:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1ce98:	bf08      	it	eq
   1ce9a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1ce9e:	bd70      	pop	{r4, r5, r6, pc}
   1cea0:	f1c4 040c 	rsb	r4, r4, #12
   1cea4:	f1c4 0520 	rsb	r5, r4, #32
   1cea8:	fa00 f304 	lsl.w	r3, r0, r4
   1ceac:	fa20 f005 	lsr.w	r0, r0, r5
   1ceb0:	fa01 f204 	lsl.w	r2, r1, r4
   1ceb4:	ea40 0002 	orr.w	r0, r0, r2
   1ceb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1cebc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1cec0:	f141 0100 	adc.w	r1, r1, #0
   1cec4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1cec8:	bf08      	it	eq
   1ceca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1cece:	bd70      	pop	{r4, r5, r6, pc}
   1ced0:	f1c4 0520 	rsb	r5, r4, #32
   1ced4:	fa00 f205 	lsl.w	r2, r0, r5
   1ced8:	ea4e 0e02 	orr.w	lr, lr, r2
   1cedc:	fa20 f304 	lsr.w	r3, r0, r4
   1cee0:	fa01 f205 	lsl.w	r2, r1, r5
   1cee4:	ea43 0302 	orr.w	r3, r3, r2
   1cee8:	fa21 f004 	lsr.w	r0, r1, r4
   1ceec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1cef0:	fa21 f204 	lsr.w	r2, r1, r4
   1cef4:	ea20 0002 	bic.w	r0, r0, r2
   1cef8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1cefc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1cf00:	bf08      	it	eq
   1cf02:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1cf06:	bd70      	pop	{r4, r5, r6, pc}
   1cf08:	f094 0f00 	teq	r4, #0
   1cf0c:	d10f      	bne.n	1cf2e <__aeabi_dmul+0x1c2>
   1cf0e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1cf12:	0040      	lsls	r0, r0, #1
   1cf14:	eb41 0101 	adc.w	r1, r1, r1
   1cf18:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1cf1c:	bf08      	it	eq
   1cf1e:	3c01      	subeq	r4, #1
   1cf20:	d0f7      	beq.n	1cf12 <__aeabi_dmul+0x1a6>
   1cf22:	ea41 0106 	orr.w	r1, r1, r6
   1cf26:	f095 0f00 	teq	r5, #0
   1cf2a:	bf18      	it	ne
   1cf2c:	4770      	bxne	lr
   1cf2e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1cf32:	0052      	lsls	r2, r2, #1
   1cf34:	eb43 0303 	adc.w	r3, r3, r3
   1cf38:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1cf3c:	bf08      	it	eq
   1cf3e:	3d01      	subeq	r5, #1
   1cf40:	d0f7      	beq.n	1cf32 <__aeabi_dmul+0x1c6>
   1cf42:	ea43 0306 	orr.w	r3, r3, r6
   1cf46:	4770      	bx	lr
   1cf48:	ea94 0f0c 	teq	r4, ip
   1cf4c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1cf50:	bf18      	it	ne
   1cf52:	ea95 0f0c 	teqne	r5, ip
   1cf56:	d00c      	beq.n	1cf72 <__aeabi_dmul+0x206>
   1cf58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1cf5c:	bf18      	it	ne
   1cf5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1cf62:	d1d1      	bne.n	1cf08 <__aeabi_dmul+0x19c>
   1cf64:	ea81 0103 	eor.w	r1, r1, r3
   1cf68:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1cf6c:	f04f 0000 	mov.w	r0, #0
   1cf70:	bd70      	pop	{r4, r5, r6, pc}
   1cf72:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1cf76:	bf06      	itte	eq
   1cf78:	4610      	moveq	r0, r2
   1cf7a:	4619      	moveq	r1, r3
   1cf7c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1cf80:	d019      	beq.n	1cfb6 <__aeabi_dmul+0x24a>
   1cf82:	ea94 0f0c 	teq	r4, ip
   1cf86:	d102      	bne.n	1cf8e <__aeabi_dmul+0x222>
   1cf88:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1cf8c:	d113      	bne.n	1cfb6 <__aeabi_dmul+0x24a>
   1cf8e:	ea95 0f0c 	teq	r5, ip
   1cf92:	d105      	bne.n	1cfa0 <__aeabi_dmul+0x234>
   1cf94:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1cf98:	bf1c      	itt	ne
   1cf9a:	4610      	movne	r0, r2
   1cf9c:	4619      	movne	r1, r3
   1cf9e:	d10a      	bne.n	1cfb6 <__aeabi_dmul+0x24a>
   1cfa0:	ea81 0103 	eor.w	r1, r1, r3
   1cfa4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1cfa8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1cfac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1cfb0:	f04f 0000 	mov.w	r0, #0
   1cfb4:	bd70      	pop	{r4, r5, r6, pc}
   1cfb6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1cfba:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1cfbe:	bd70      	pop	{r4, r5, r6, pc}

0001cfc0 <__aeabi_ddiv>:
__divdf3():
   1cfc0:	b570      	push	{r4, r5, r6, lr}
   1cfc2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1cfc6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1cfca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1cfce:	bf1d      	ittte	ne
   1cfd0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1cfd4:	ea94 0f0c 	teqne	r4, ip
   1cfd8:	ea95 0f0c 	teqne	r5, ip
   1cfdc:	f000 f8a7 	bleq	1d12e <__aeabi_ddiv+0x16e>
   1cfe0:	eba4 0405 	sub.w	r4, r4, r5
   1cfe4:	ea81 0e03 	eor.w	lr, r1, r3
   1cfe8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1cfec:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1cff0:	f000 8088 	beq.w	1d104 <__aeabi_ddiv+0x144>
   1cff4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1cff8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1cffc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1d000:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1d004:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1d008:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1d00c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1d010:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1d014:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1d018:	429d      	cmp	r5, r3
   1d01a:	bf08      	it	eq
   1d01c:	4296      	cmpeq	r6, r2
   1d01e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1d022:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1d026:	d202      	bcs.n	1d02e <__aeabi_ddiv+0x6e>
   1d028:	085b      	lsrs	r3, r3, #1
   1d02a:	ea4f 0232 	mov.w	r2, r2, rrx
   1d02e:	1ab6      	subs	r6, r6, r2
   1d030:	eb65 0503 	sbc.w	r5, r5, r3
   1d034:	085b      	lsrs	r3, r3, #1
   1d036:	ea4f 0232 	mov.w	r2, r2, rrx
   1d03a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1d03e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1d042:	ebb6 0e02 	subs.w	lr, r6, r2
   1d046:	eb75 0e03 	sbcs.w	lr, r5, r3
   1d04a:	bf22      	ittt	cs
   1d04c:	1ab6      	subcs	r6, r6, r2
   1d04e:	4675      	movcs	r5, lr
   1d050:	ea40 000c 	orrcs.w	r0, r0, ip
   1d054:	085b      	lsrs	r3, r3, #1
   1d056:	ea4f 0232 	mov.w	r2, r2, rrx
   1d05a:	ebb6 0e02 	subs.w	lr, r6, r2
   1d05e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1d062:	bf22      	ittt	cs
   1d064:	1ab6      	subcs	r6, r6, r2
   1d066:	4675      	movcs	r5, lr
   1d068:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1d06c:	085b      	lsrs	r3, r3, #1
   1d06e:	ea4f 0232 	mov.w	r2, r2, rrx
   1d072:	ebb6 0e02 	subs.w	lr, r6, r2
   1d076:	eb75 0e03 	sbcs.w	lr, r5, r3
   1d07a:	bf22      	ittt	cs
   1d07c:	1ab6      	subcs	r6, r6, r2
   1d07e:	4675      	movcs	r5, lr
   1d080:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1d084:	085b      	lsrs	r3, r3, #1
   1d086:	ea4f 0232 	mov.w	r2, r2, rrx
   1d08a:	ebb6 0e02 	subs.w	lr, r6, r2
   1d08e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1d092:	bf22      	ittt	cs
   1d094:	1ab6      	subcs	r6, r6, r2
   1d096:	4675      	movcs	r5, lr
   1d098:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1d09c:	ea55 0e06 	orrs.w	lr, r5, r6
   1d0a0:	d018      	beq.n	1d0d4 <__aeabi_ddiv+0x114>
   1d0a2:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1d0a6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1d0aa:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1d0ae:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1d0b2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1d0b6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1d0ba:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1d0be:	d1c0      	bne.n	1d042 <__aeabi_ddiv+0x82>
   1d0c0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1d0c4:	d10b      	bne.n	1d0de <__aeabi_ddiv+0x11e>
   1d0c6:	ea41 0100 	orr.w	r1, r1, r0
   1d0ca:	f04f 0000 	mov.w	r0, #0
   1d0ce:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1d0d2:	e7b6      	b.n	1d042 <__aeabi_ddiv+0x82>
   1d0d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1d0d8:	bf04      	itt	eq
   1d0da:	4301      	orreq	r1, r0
   1d0dc:	2000      	moveq	r0, #0
   1d0de:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1d0e2:	bf88      	it	hi
   1d0e4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1d0e8:	f63f aeaf 	bhi.w	1ce4a <__aeabi_dmul+0xde>
   1d0ec:	ebb5 0c03 	subs.w	ip, r5, r3
   1d0f0:	bf04      	itt	eq
   1d0f2:	ebb6 0c02 	subseq.w	ip, r6, r2
   1d0f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1d0fa:	f150 0000 	adcs.w	r0, r0, #0
   1d0fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1d102:	bd70      	pop	{r4, r5, r6, pc}
   1d104:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1d108:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1d10c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1d110:	bfc2      	ittt	gt
   1d112:	ebd4 050c 	rsbsgt	r5, r4, ip
   1d116:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1d11a:	bd70      	popgt	{r4, r5, r6, pc}
   1d11c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1d120:	f04f 0e00 	mov.w	lr, #0
   1d124:	3c01      	subs	r4, #1
   1d126:	e690      	b.n	1ce4a <__aeabi_dmul+0xde>
   1d128:	ea45 0e06 	orr.w	lr, r5, r6
   1d12c:	e68d      	b.n	1ce4a <__aeabi_dmul+0xde>
   1d12e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1d132:	ea94 0f0c 	teq	r4, ip
   1d136:	bf08      	it	eq
   1d138:	ea95 0f0c 	teqeq	r5, ip
   1d13c:	f43f af3b 	beq.w	1cfb6 <__aeabi_dmul+0x24a>
   1d140:	ea94 0f0c 	teq	r4, ip
   1d144:	d10a      	bne.n	1d15c <__aeabi_ddiv+0x19c>
   1d146:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1d14a:	f47f af34 	bne.w	1cfb6 <__aeabi_dmul+0x24a>
   1d14e:	ea95 0f0c 	teq	r5, ip
   1d152:	f47f af25 	bne.w	1cfa0 <__aeabi_dmul+0x234>
   1d156:	4610      	mov	r0, r2
   1d158:	4619      	mov	r1, r3
   1d15a:	e72c      	b.n	1cfb6 <__aeabi_dmul+0x24a>
   1d15c:	ea95 0f0c 	teq	r5, ip
   1d160:	d106      	bne.n	1d170 <__aeabi_ddiv+0x1b0>
   1d162:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1d166:	f43f aefd 	beq.w	1cf64 <__aeabi_dmul+0x1f8>
   1d16a:	4610      	mov	r0, r2
   1d16c:	4619      	mov	r1, r3
   1d16e:	e722      	b.n	1cfb6 <__aeabi_dmul+0x24a>
   1d170:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1d174:	bf18      	it	ne
   1d176:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1d17a:	f47f aec5 	bne.w	1cf08 <__aeabi_dmul+0x19c>
   1d17e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1d182:	f47f af0d 	bne.w	1cfa0 <__aeabi_dmul+0x234>
   1d186:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1d18a:	f47f aeeb 	bne.w	1cf64 <__aeabi_dmul+0x1f8>
   1d18e:	e712      	b.n	1cfb6 <__aeabi_dmul+0x24a>

0001d190 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   1d190:	004a      	lsls	r2, r1, #1
   1d192:	d211      	bcs.n	1d1b8 <__aeabi_d2uiz+0x28>
   1d194:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1d198:	d211      	bcs.n	1d1be <__aeabi_d2uiz+0x2e>
   1d19a:	d50d      	bpl.n	1d1b8 <__aeabi_d2uiz+0x28>
   1d19c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1d1a0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1d1a4:	d40e      	bmi.n	1d1c4 <__aeabi_d2uiz+0x34>
   1d1a6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1d1aa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d1ae:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1d1b2:	fa23 f002 	lsr.w	r0, r3, r2
   1d1b6:	4770      	bx	lr
   1d1b8:	f04f 0000 	mov.w	r0, #0
   1d1bc:	4770      	bx	lr
   1d1be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1d1c2:	d102      	bne.n	1d1ca <__aeabi_d2uiz+0x3a>
   1d1c4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d1c8:	4770      	bx	lr
   1d1ca:	f04f 0000 	mov.w	r0, #0
   1d1ce:	4770      	bx	lr

0001d1d0 <__aeabi_d2f>:
__truncdfsf2():
   1d1d0:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1d1d4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1d1d8:	bf24      	itt	cs
   1d1da:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1d1de:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1d1e2:	d90d      	bls.n	1d200 <__aeabi_d2f+0x30>
   1d1e4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d1e8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1d1ec:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1d1f0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1d1f4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1d1f8:	bf08      	it	eq
   1d1fa:	f020 0001 	biceq.w	r0, r0, #1
   1d1fe:	4770      	bx	lr
   1d200:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1d204:	d121      	bne.n	1d24a <__aeabi_d2f+0x7a>
   1d206:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1d20a:	bfbc      	itt	lt
   1d20c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1d210:	4770      	bxlt	lr
   1d212:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1d216:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1d21a:	f1c2 0218 	rsb	r2, r2, #24
   1d21e:	f1c2 0c20 	rsb	ip, r2, #32
   1d222:	fa10 f30c 	lsls.w	r3, r0, ip
   1d226:	fa20 f002 	lsr.w	r0, r0, r2
   1d22a:	bf18      	it	ne
   1d22c:	f040 0001 	orrne.w	r0, r0, #1
   1d230:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1d234:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1d238:	fa03 fc0c 	lsl.w	ip, r3, ip
   1d23c:	ea40 000c 	orr.w	r0, r0, ip
   1d240:	fa23 f302 	lsr.w	r3, r3, r2
   1d244:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1d248:	e7cc      	b.n	1d1e4 <__aeabi_d2f+0x14>
   1d24a:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1d24e:	d107      	bne.n	1d260 <__aeabi_d2f+0x90>
   1d250:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1d254:	bf1e      	ittt	ne
   1d256:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1d25a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1d25e:	4770      	bxne	lr
   1d260:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1d264:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d268:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d26c:	4770      	bx	lr
   1d26e:	bf00      	nop

0001d270 <__aeabi_frsub>:
__aeabi_frsub():
   1d270:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1d274:	e002      	b.n	1d27c <__addsf3>
   1d276:	bf00      	nop

0001d278 <__aeabi_fsub>:
__aeabi_fsub():
   1d278:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001d27c <__addsf3>:
__addsf3():
   1d27c:	0042      	lsls	r2, r0, #1
   1d27e:	bf1f      	itttt	ne
   1d280:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1d284:	ea92 0f03 	teqne	r2, r3
   1d288:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1d28c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d290:	d06a      	beq.n	1d368 <__addsf3+0xec>
   1d292:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1d296:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1d29a:	bfc1      	itttt	gt
   1d29c:	18d2      	addgt	r2, r2, r3
   1d29e:	4041      	eorgt	r1, r0
   1d2a0:	4048      	eorgt	r0, r1
   1d2a2:	4041      	eorgt	r1, r0
   1d2a4:	bfb8      	it	lt
   1d2a6:	425b      	neglt	r3, r3
   1d2a8:	2b19      	cmp	r3, #25
   1d2aa:	bf88      	it	hi
   1d2ac:	4770      	bxhi	lr
   1d2ae:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1d2b2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d2b6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1d2ba:	bf18      	it	ne
   1d2bc:	4240      	negne	r0, r0
   1d2be:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1d2c2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1d2c6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1d2ca:	bf18      	it	ne
   1d2cc:	4249      	negne	r1, r1
   1d2ce:	ea92 0f03 	teq	r2, r3
   1d2d2:	d03f      	beq.n	1d354 <__addsf3+0xd8>
   1d2d4:	f1a2 0201 	sub.w	r2, r2, #1
   1d2d8:	fa41 fc03 	asr.w	ip, r1, r3
   1d2dc:	eb10 000c 	adds.w	r0, r0, ip
   1d2e0:	f1c3 0320 	rsb	r3, r3, #32
   1d2e4:	fa01 f103 	lsl.w	r1, r1, r3
   1d2e8:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1d2ec:	d502      	bpl.n	1d2f4 <__addsf3+0x78>
   1d2ee:	4249      	negs	r1, r1
   1d2f0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1d2f4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1d2f8:	d313      	bcc.n	1d322 <__addsf3+0xa6>
   1d2fa:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1d2fe:	d306      	bcc.n	1d30e <__addsf3+0x92>
   1d300:	0840      	lsrs	r0, r0, #1
   1d302:	ea4f 0131 	mov.w	r1, r1, rrx
   1d306:	f102 0201 	add.w	r2, r2, #1
   1d30a:	2afe      	cmp	r2, #254	; 0xfe
   1d30c:	d251      	bcs.n	1d3b2 <__addsf3+0x136>
   1d30e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1d312:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d316:	bf08      	it	eq
   1d318:	f020 0001 	biceq.w	r0, r0, #1
   1d31c:	ea40 0003 	orr.w	r0, r0, r3
   1d320:	4770      	bx	lr
   1d322:	0049      	lsls	r1, r1, #1
   1d324:	eb40 0000 	adc.w	r0, r0, r0
   1d328:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1d32c:	f1a2 0201 	sub.w	r2, r2, #1
   1d330:	d1ed      	bne.n	1d30e <__addsf3+0x92>
   1d332:	fab0 fc80 	clz	ip, r0
   1d336:	f1ac 0c08 	sub.w	ip, ip, #8
   1d33a:	ebb2 020c 	subs.w	r2, r2, ip
   1d33e:	fa00 f00c 	lsl.w	r0, r0, ip
   1d342:	bfaa      	itet	ge
   1d344:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1d348:	4252      	neglt	r2, r2
   1d34a:	4318      	orrge	r0, r3
   1d34c:	bfbc      	itt	lt
   1d34e:	40d0      	lsrlt	r0, r2
   1d350:	4318      	orrlt	r0, r3
   1d352:	4770      	bx	lr
   1d354:	f092 0f00 	teq	r2, #0
   1d358:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1d35c:	bf06      	itte	eq
   1d35e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1d362:	3201      	addeq	r2, #1
   1d364:	3b01      	subne	r3, #1
   1d366:	e7b5      	b.n	1d2d4 <__addsf3+0x58>
   1d368:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1d36c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1d370:	bf18      	it	ne
   1d372:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d376:	d021      	beq.n	1d3bc <__addsf3+0x140>
   1d378:	ea92 0f03 	teq	r2, r3
   1d37c:	d004      	beq.n	1d388 <__addsf3+0x10c>
   1d37e:	f092 0f00 	teq	r2, #0
   1d382:	bf08      	it	eq
   1d384:	4608      	moveq	r0, r1
   1d386:	4770      	bx	lr
   1d388:	ea90 0f01 	teq	r0, r1
   1d38c:	bf1c      	itt	ne
   1d38e:	2000      	movne	r0, #0
   1d390:	4770      	bxne	lr
   1d392:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1d396:	d104      	bne.n	1d3a2 <__addsf3+0x126>
   1d398:	0040      	lsls	r0, r0, #1
   1d39a:	bf28      	it	cs
   1d39c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1d3a0:	4770      	bx	lr
   1d3a2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1d3a6:	bf3c      	itt	cc
   1d3a8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1d3ac:	4770      	bxcc	lr
   1d3ae:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1d3b2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1d3b6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d3ba:	4770      	bx	lr
   1d3bc:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1d3c0:	bf16      	itet	ne
   1d3c2:	4608      	movne	r0, r1
   1d3c4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1d3c8:	4601      	movne	r1, r0
   1d3ca:	0242      	lsls	r2, r0, #9
   1d3cc:	bf06      	itte	eq
   1d3ce:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1d3d2:	ea90 0f01 	teqeq	r0, r1
   1d3d6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1d3da:	4770      	bx	lr

0001d3dc <__aeabi_ui2f>:
__floatunsisf():
   1d3dc:	f04f 0300 	mov.w	r3, #0
   1d3e0:	e004      	b.n	1d3ec <__aeabi_i2f+0x8>
   1d3e2:	bf00      	nop

0001d3e4 <__aeabi_i2f>:
__floatsisf():
   1d3e4:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1d3e8:	bf48      	it	mi
   1d3ea:	4240      	negmi	r0, r0
   1d3ec:	ea5f 0c00 	movs.w	ip, r0
   1d3f0:	bf08      	it	eq
   1d3f2:	4770      	bxeq	lr
   1d3f4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1d3f8:	4601      	mov	r1, r0
   1d3fa:	f04f 0000 	mov.w	r0, #0
   1d3fe:	e01c      	b.n	1d43a <__aeabi_l2f+0x2a>

0001d400 <__aeabi_ul2f>:
__aeabi_ul2f():
   1d400:	ea50 0201 	orrs.w	r2, r0, r1
   1d404:	bf08      	it	eq
   1d406:	4770      	bxeq	lr
   1d408:	f04f 0300 	mov.w	r3, #0
   1d40c:	e00a      	b.n	1d424 <__aeabi_l2f+0x14>
   1d40e:	bf00      	nop

0001d410 <__aeabi_l2f>:
__aeabi_l2f():
   1d410:	ea50 0201 	orrs.w	r2, r0, r1
   1d414:	bf08      	it	eq
   1d416:	4770      	bxeq	lr
   1d418:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1d41c:	d502      	bpl.n	1d424 <__aeabi_l2f+0x14>
   1d41e:	4240      	negs	r0, r0
   1d420:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d424:	ea5f 0c01 	movs.w	ip, r1
   1d428:	bf02      	ittt	eq
   1d42a:	4684      	moveq	ip, r0
   1d42c:	4601      	moveq	r1, r0
   1d42e:	2000      	moveq	r0, #0
   1d430:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1d434:	bf08      	it	eq
   1d436:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1d43a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1d43e:	fabc f28c 	clz	r2, ip
   1d442:	3a08      	subs	r2, #8
   1d444:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1d448:	db10      	blt.n	1d46c <__aeabi_l2f+0x5c>
   1d44a:	fa01 fc02 	lsl.w	ip, r1, r2
   1d44e:	4463      	add	r3, ip
   1d450:	fa00 fc02 	lsl.w	ip, r0, r2
   1d454:	f1c2 0220 	rsb	r2, r2, #32
   1d458:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1d45c:	fa20 f202 	lsr.w	r2, r0, r2
   1d460:	eb43 0002 	adc.w	r0, r3, r2
   1d464:	bf08      	it	eq
   1d466:	f020 0001 	biceq.w	r0, r0, #1
   1d46a:	4770      	bx	lr
   1d46c:	f102 0220 	add.w	r2, r2, #32
   1d470:	fa01 fc02 	lsl.w	ip, r1, r2
   1d474:	f1c2 0220 	rsb	r2, r2, #32
   1d478:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1d47c:	fa21 f202 	lsr.w	r2, r1, r2
   1d480:	eb43 0002 	adc.w	r0, r3, r2
   1d484:	bf08      	it	eq
   1d486:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d48a:	4770      	bx	lr

0001d48c <__aeabi_fmul>:
__aeabi_fmul():
   1d48c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d490:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d494:	bf1e      	ittt	ne
   1d496:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d49a:	ea92 0f0c 	teqne	r2, ip
   1d49e:	ea93 0f0c 	teqne	r3, ip
   1d4a2:	d06f      	beq.n	1d584 <__aeabi_fmul+0xf8>
   1d4a4:	441a      	add	r2, r3
   1d4a6:	ea80 0c01 	eor.w	ip, r0, r1
   1d4aa:	0240      	lsls	r0, r0, #9
   1d4ac:	bf18      	it	ne
   1d4ae:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1d4b2:	d01e      	beq.n	1d4f2 <__aeabi_fmul+0x66>
   1d4b4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1d4b8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1d4bc:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1d4c0:	fba0 3101 	umull	r3, r1, r0, r1
   1d4c4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d4c8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1d4cc:	bf3e      	ittt	cc
   1d4ce:	0049      	lslcc	r1, r1, #1
   1d4d0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1d4d4:	005b      	lslcc	r3, r3, #1
   1d4d6:	ea40 0001 	orr.w	r0, r0, r1
   1d4da:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1d4de:	2afd      	cmp	r2, #253	; 0xfd
   1d4e0:	d81d      	bhi.n	1d51e <__aeabi_fmul+0x92>
   1d4e2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1d4e6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d4ea:	bf08      	it	eq
   1d4ec:	f020 0001 	biceq.w	r0, r0, #1
   1d4f0:	4770      	bx	lr
   1d4f2:	f090 0f00 	teq	r0, #0
   1d4f6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d4fa:	bf08      	it	eq
   1d4fc:	0249      	lsleq	r1, r1, #9
   1d4fe:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d502:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1d506:	3a7f      	subs	r2, #127	; 0x7f
   1d508:	bfc2      	ittt	gt
   1d50a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d50e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d512:	4770      	bxgt	lr
   1d514:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d518:	f04f 0300 	mov.w	r3, #0
   1d51c:	3a01      	subs	r2, #1
   1d51e:	dc5d      	bgt.n	1d5dc <__aeabi_fmul+0x150>
   1d520:	f112 0f19 	cmn.w	r2, #25
   1d524:	bfdc      	itt	le
   1d526:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1d52a:	4770      	bxle	lr
   1d52c:	f1c2 0200 	rsb	r2, r2, #0
   1d530:	0041      	lsls	r1, r0, #1
   1d532:	fa21 f102 	lsr.w	r1, r1, r2
   1d536:	f1c2 0220 	rsb	r2, r2, #32
   1d53a:	fa00 fc02 	lsl.w	ip, r0, r2
   1d53e:	ea5f 0031 	movs.w	r0, r1, rrx
   1d542:	f140 0000 	adc.w	r0, r0, #0
   1d546:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1d54a:	bf08      	it	eq
   1d54c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d550:	4770      	bx	lr
   1d552:	f092 0f00 	teq	r2, #0
   1d556:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d55a:	bf02      	ittt	eq
   1d55c:	0040      	lsleq	r0, r0, #1
   1d55e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d562:	3a01      	subeq	r2, #1
   1d564:	d0f9      	beq.n	1d55a <__aeabi_fmul+0xce>
   1d566:	ea40 000c 	orr.w	r0, r0, ip
   1d56a:	f093 0f00 	teq	r3, #0
   1d56e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d572:	bf02      	ittt	eq
   1d574:	0049      	lsleq	r1, r1, #1
   1d576:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d57a:	3b01      	subeq	r3, #1
   1d57c:	d0f9      	beq.n	1d572 <__aeabi_fmul+0xe6>
   1d57e:	ea41 010c 	orr.w	r1, r1, ip
   1d582:	e78f      	b.n	1d4a4 <__aeabi_fmul+0x18>
   1d584:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d588:	ea92 0f0c 	teq	r2, ip
   1d58c:	bf18      	it	ne
   1d58e:	ea93 0f0c 	teqne	r3, ip
   1d592:	d00a      	beq.n	1d5aa <__aeabi_fmul+0x11e>
   1d594:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d598:	bf18      	it	ne
   1d59a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d59e:	d1d8      	bne.n	1d552 <__aeabi_fmul+0xc6>
   1d5a0:	ea80 0001 	eor.w	r0, r0, r1
   1d5a4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d5a8:	4770      	bx	lr
   1d5aa:	f090 0f00 	teq	r0, #0
   1d5ae:	bf17      	itett	ne
   1d5b0:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1d5b4:	4608      	moveq	r0, r1
   1d5b6:	f091 0f00 	teqne	r1, #0
   1d5ba:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1d5be:	d014      	beq.n	1d5ea <__aeabi_fmul+0x15e>
   1d5c0:	ea92 0f0c 	teq	r2, ip
   1d5c4:	d101      	bne.n	1d5ca <__aeabi_fmul+0x13e>
   1d5c6:	0242      	lsls	r2, r0, #9
   1d5c8:	d10f      	bne.n	1d5ea <__aeabi_fmul+0x15e>
   1d5ca:	ea93 0f0c 	teq	r3, ip
   1d5ce:	d103      	bne.n	1d5d8 <__aeabi_fmul+0x14c>
   1d5d0:	024b      	lsls	r3, r1, #9
   1d5d2:	bf18      	it	ne
   1d5d4:	4608      	movne	r0, r1
   1d5d6:	d108      	bne.n	1d5ea <__aeabi_fmul+0x15e>
   1d5d8:	ea80 0001 	eor.w	r0, r0, r1
   1d5dc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d5e0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d5e4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d5e8:	4770      	bx	lr
   1d5ea:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d5ee:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1d5f2:	4770      	bx	lr

0001d5f4 <__aeabi_fdiv>:
__aeabi_fdiv():
   1d5f4:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d5f8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d5fc:	bf1e      	ittt	ne
   1d5fe:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d602:	ea92 0f0c 	teqne	r2, ip
   1d606:	ea93 0f0c 	teqne	r3, ip
   1d60a:	d069      	beq.n	1d6e0 <__aeabi_fdiv+0xec>
   1d60c:	eba2 0203 	sub.w	r2, r2, r3
   1d610:	ea80 0c01 	eor.w	ip, r0, r1
   1d614:	0249      	lsls	r1, r1, #9
   1d616:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1d61a:	d037      	beq.n	1d68c <__aeabi_fdiv+0x98>
   1d61c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1d620:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1d624:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1d628:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d62c:	428b      	cmp	r3, r1
   1d62e:	bf38      	it	cc
   1d630:	005b      	lslcc	r3, r3, #1
   1d632:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1d636:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1d63a:	428b      	cmp	r3, r1
   1d63c:	bf24      	itt	cs
   1d63e:	1a5b      	subcs	r3, r3, r1
   1d640:	ea40 000c 	orrcs.w	r0, r0, ip
   1d644:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1d648:	bf24      	itt	cs
   1d64a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1d64e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1d652:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1d656:	bf24      	itt	cs
   1d658:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1d65c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1d660:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1d664:	bf24      	itt	cs
   1d666:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1d66a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1d66e:	011b      	lsls	r3, r3, #4
   1d670:	bf18      	it	ne
   1d672:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1d676:	d1e0      	bne.n	1d63a <__aeabi_fdiv+0x46>
   1d678:	2afd      	cmp	r2, #253	; 0xfd
   1d67a:	f63f af50 	bhi.w	1d51e <__aeabi_fmul+0x92>
   1d67e:	428b      	cmp	r3, r1
   1d680:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d684:	bf08      	it	eq
   1d686:	f020 0001 	biceq.w	r0, r0, #1
   1d68a:	4770      	bx	lr
   1d68c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d690:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d694:	327f      	adds	r2, #127	; 0x7f
   1d696:	bfc2      	ittt	gt
   1d698:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d69c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d6a0:	4770      	bxgt	lr
   1d6a2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d6a6:	f04f 0300 	mov.w	r3, #0
   1d6aa:	3a01      	subs	r2, #1
   1d6ac:	e737      	b.n	1d51e <__aeabi_fmul+0x92>
   1d6ae:	f092 0f00 	teq	r2, #0
   1d6b2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d6b6:	bf02      	ittt	eq
   1d6b8:	0040      	lsleq	r0, r0, #1
   1d6ba:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d6be:	3a01      	subeq	r2, #1
   1d6c0:	d0f9      	beq.n	1d6b6 <__aeabi_fdiv+0xc2>
   1d6c2:	ea40 000c 	orr.w	r0, r0, ip
   1d6c6:	f093 0f00 	teq	r3, #0
   1d6ca:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d6ce:	bf02      	ittt	eq
   1d6d0:	0049      	lsleq	r1, r1, #1
   1d6d2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d6d6:	3b01      	subeq	r3, #1
   1d6d8:	d0f9      	beq.n	1d6ce <__aeabi_fdiv+0xda>
   1d6da:	ea41 010c 	orr.w	r1, r1, ip
   1d6de:	e795      	b.n	1d60c <__aeabi_fdiv+0x18>
   1d6e0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d6e4:	ea92 0f0c 	teq	r2, ip
   1d6e8:	d108      	bne.n	1d6fc <__aeabi_fdiv+0x108>
   1d6ea:	0242      	lsls	r2, r0, #9
   1d6ec:	f47f af7d 	bne.w	1d5ea <__aeabi_fmul+0x15e>
   1d6f0:	ea93 0f0c 	teq	r3, ip
   1d6f4:	f47f af70 	bne.w	1d5d8 <__aeabi_fmul+0x14c>
   1d6f8:	4608      	mov	r0, r1
   1d6fa:	e776      	b.n	1d5ea <__aeabi_fmul+0x15e>
   1d6fc:	ea93 0f0c 	teq	r3, ip
   1d700:	d104      	bne.n	1d70c <__aeabi_fdiv+0x118>
   1d702:	024b      	lsls	r3, r1, #9
   1d704:	f43f af4c 	beq.w	1d5a0 <__aeabi_fmul+0x114>
   1d708:	4608      	mov	r0, r1
   1d70a:	e76e      	b.n	1d5ea <__aeabi_fmul+0x15e>
   1d70c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d710:	bf18      	it	ne
   1d712:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d716:	d1ca      	bne.n	1d6ae <__aeabi_fdiv+0xba>
   1d718:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1d71c:	f47f af5c 	bne.w	1d5d8 <__aeabi_fmul+0x14c>
   1d720:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1d724:	f47f af3c 	bne.w	1d5a0 <__aeabi_fmul+0x114>
   1d728:	e75f      	b.n	1d5ea <__aeabi_fmul+0x15e>
   1d72a:	bf00      	nop

0001d72c <__aeabi_f2iz>:
__aeabi_f2iz():
   1d72c:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1d730:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d734:	d30f      	bcc.n	1d756 <__aeabi_f2iz+0x2a>
   1d736:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d73a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d73e:	d90d      	bls.n	1d75c <__aeabi_f2iz+0x30>
   1d740:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d744:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d748:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1d74c:	fa23 f002 	lsr.w	r0, r3, r2
   1d750:	bf18      	it	ne
   1d752:	4240      	negne	r0, r0
   1d754:	4770      	bx	lr
   1d756:	f04f 0000 	mov.w	r0, #0
   1d75a:	4770      	bx	lr
   1d75c:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d760:	d101      	bne.n	1d766 <__aeabi_f2iz+0x3a>
   1d762:	0242      	lsls	r2, r0, #9
   1d764:	d105      	bne.n	1d772 <__aeabi_f2iz+0x46>
   1d766:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1d76a:	bf08      	it	eq
   1d76c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1d770:	4770      	bx	lr
   1d772:	f04f 0000 	mov.w	r0, #0
   1d776:	4770      	bx	lr

0001d778 <__aeabi_f2uiz>:
__fixunssfsi():
   1d778:	0042      	lsls	r2, r0, #1
   1d77a:	d20e      	bcs.n	1d79a <__aeabi_f2uiz+0x22>
   1d77c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d780:	d30b      	bcc.n	1d79a <__aeabi_f2uiz+0x22>
   1d782:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d786:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d78a:	d409      	bmi.n	1d7a0 <__aeabi_f2uiz+0x28>
   1d78c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d790:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d794:	fa23 f002 	lsr.w	r0, r3, r2
   1d798:	4770      	bx	lr
   1d79a:	f04f 0000 	mov.w	r0, #0
   1d79e:	4770      	bx	lr
   1d7a0:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d7a4:	d101      	bne.n	1d7aa <__aeabi_f2uiz+0x32>
   1d7a6:	0242      	lsls	r2, r0, #9
   1d7a8:	d102      	bne.n	1d7b0 <__aeabi_f2uiz+0x38>
   1d7aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d7ae:	4770      	bx	lr
   1d7b0:	f04f 0000 	mov.w	r0, #0
   1d7b4:	4770      	bx	lr
   1d7b6:	bf00      	nop

0001d7b8 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   1d7b8:	b953      	cbnz	r3, 1d7d0 <__aeabi_uldivmod+0x18>
   1d7ba:	b94a      	cbnz	r2, 1d7d0 <__aeabi_uldivmod+0x18>
   1d7bc:	2900      	cmp	r1, #0
   1d7be:	bf08      	it	eq
   1d7c0:	2800      	cmpeq	r0, #0
   1d7c2:	bf1c      	itt	ne
   1d7c4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1d7c8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1d7cc:	f000 b97a 	b.w	1dac4 <__aeabi_idiv0>
   1d7d0:	f1ad 0c08 	sub.w	ip, sp, #8
   1d7d4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1d7d8:	f000 f806 	bl	1d7e8 <__udivmoddi4>
   1d7dc:	f8dd e004 	ldr.w	lr, [sp, #4]
   1d7e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d7e4:	b004      	add	sp, #16
   1d7e6:	4770      	bx	lr

0001d7e8 <__udivmoddi4>:
__udivmoddi4():
   1d7e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d7ec:	468c      	mov	ip, r1
   1d7ee:	460e      	mov	r6, r1
   1d7f0:	4604      	mov	r4, r0
   1d7f2:	9d08      	ldr	r5, [sp, #32]
   1d7f4:	2b00      	cmp	r3, #0
   1d7f6:	d150      	bne.n	1d89a <__udivmoddi4+0xb2>
   1d7f8:	428a      	cmp	r2, r1
   1d7fa:	4617      	mov	r7, r2
   1d7fc:	d96c      	bls.n	1d8d8 <__udivmoddi4+0xf0>
   1d7fe:	fab2 fe82 	clz	lr, r2
   1d802:	f1be 0f00 	cmp.w	lr, #0
   1d806:	d00b      	beq.n	1d820 <__udivmoddi4+0x38>
   1d808:	f1ce 0c20 	rsb	ip, lr, #32
   1d80c:	fa01 f60e 	lsl.w	r6, r1, lr
   1d810:	fa20 fc0c 	lsr.w	ip, r0, ip
   1d814:	fa02 f70e 	lsl.w	r7, r2, lr
   1d818:	ea4c 0c06 	orr.w	ip, ip, r6
   1d81c:	fa00 f40e 	lsl.w	r4, r0, lr
   1d820:	0c3a      	lsrs	r2, r7, #16
   1d822:	fbbc f9f2 	udiv	r9, ip, r2
   1d826:	b2bb      	uxth	r3, r7
   1d828:	fb02 cc19 	mls	ip, r2, r9, ip
   1d82c:	fb09 fa03 	mul.w	sl, r9, r3
   1d830:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1d834:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   1d838:	45b2      	cmp	sl, r6
   1d83a:	d90a      	bls.n	1d852 <__udivmoddi4+0x6a>
   1d83c:	19f6      	adds	r6, r6, r7
   1d83e:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   1d842:	f080 8125 	bcs.w	1da90 <__udivmoddi4+0x2a8>
   1d846:	45b2      	cmp	sl, r6
   1d848:	f240 8122 	bls.w	1da90 <__udivmoddi4+0x2a8>
   1d84c:	f1a9 0902 	sub.w	r9, r9, #2
   1d850:	443e      	add	r6, r7
   1d852:	eba6 060a 	sub.w	r6, r6, sl
   1d856:	fbb6 f0f2 	udiv	r0, r6, r2
   1d85a:	fb02 6610 	mls	r6, r2, r0, r6
   1d85e:	fb00 f303 	mul.w	r3, r0, r3
   1d862:	b2a4      	uxth	r4, r4
   1d864:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   1d868:	42a3      	cmp	r3, r4
   1d86a:	d909      	bls.n	1d880 <__udivmoddi4+0x98>
   1d86c:	19e4      	adds	r4, r4, r7
   1d86e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1d872:	f080 810b 	bcs.w	1da8c <__udivmoddi4+0x2a4>
   1d876:	42a3      	cmp	r3, r4
   1d878:	f240 8108 	bls.w	1da8c <__udivmoddi4+0x2a4>
   1d87c:	3802      	subs	r0, #2
   1d87e:	443c      	add	r4, r7
   1d880:	2100      	movs	r1, #0
   1d882:	1ae4      	subs	r4, r4, r3
   1d884:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1d888:	2d00      	cmp	r5, #0
   1d88a:	d062      	beq.n	1d952 <__udivmoddi4+0x16a>
   1d88c:	2300      	movs	r3, #0
   1d88e:	fa24 f40e 	lsr.w	r4, r4, lr
   1d892:	602c      	str	r4, [r5, #0]
   1d894:	606b      	str	r3, [r5, #4]
   1d896:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d89a:	428b      	cmp	r3, r1
   1d89c:	d907      	bls.n	1d8ae <__udivmoddi4+0xc6>
   1d89e:	2d00      	cmp	r5, #0
   1d8a0:	d055      	beq.n	1d94e <__udivmoddi4+0x166>
   1d8a2:	2100      	movs	r1, #0
   1d8a4:	e885 0041 	stmia.w	r5, {r0, r6}
   1d8a8:	4608      	mov	r0, r1
   1d8aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d8ae:	fab3 f183 	clz	r1, r3
   1d8b2:	2900      	cmp	r1, #0
   1d8b4:	f040 808f 	bne.w	1d9d6 <__udivmoddi4+0x1ee>
   1d8b8:	42b3      	cmp	r3, r6
   1d8ba:	d302      	bcc.n	1d8c2 <__udivmoddi4+0xda>
   1d8bc:	4282      	cmp	r2, r0
   1d8be:	f200 80fc 	bhi.w	1daba <__udivmoddi4+0x2d2>
   1d8c2:	1a84      	subs	r4, r0, r2
   1d8c4:	eb66 0603 	sbc.w	r6, r6, r3
   1d8c8:	2001      	movs	r0, #1
   1d8ca:	46b4      	mov	ip, r6
   1d8cc:	2d00      	cmp	r5, #0
   1d8ce:	d040      	beq.n	1d952 <__udivmoddi4+0x16a>
   1d8d0:	e885 1010 	stmia.w	r5, {r4, ip}
   1d8d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d8d8:	b912      	cbnz	r2, 1d8e0 <__udivmoddi4+0xf8>
   1d8da:	2701      	movs	r7, #1
   1d8dc:	fbb7 f7f2 	udiv	r7, r7, r2
   1d8e0:	fab7 fe87 	clz	lr, r7
   1d8e4:	f1be 0f00 	cmp.w	lr, #0
   1d8e8:	d135      	bne.n	1d956 <__udivmoddi4+0x16e>
   1d8ea:	2101      	movs	r1, #1
   1d8ec:	1bf6      	subs	r6, r6, r7
   1d8ee:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1d8f2:	fa1f f887 	uxth.w	r8, r7
   1d8f6:	fbb6 f2fc 	udiv	r2, r6, ip
   1d8fa:	fb0c 6612 	mls	r6, ip, r2, r6
   1d8fe:	fb08 f002 	mul.w	r0, r8, r2
   1d902:	0c23      	lsrs	r3, r4, #16
   1d904:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   1d908:	42b0      	cmp	r0, r6
   1d90a:	d907      	bls.n	1d91c <__udivmoddi4+0x134>
   1d90c:	19f6      	adds	r6, r6, r7
   1d90e:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1d912:	d202      	bcs.n	1d91a <__udivmoddi4+0x132>
   1d914:	42b0      	cmp	r0, r6
   1d916:	f200 80d2 	bhi.w	1dabe <__udivmoddi4+0x2d6>
   1d91a:	461a      	mov	r2, r3
   1d91c:	1a36      	subs	r6, r6, r0
   1d91e:	fbb6 f0fc 	udiv	r0, r6, ip
   1d922:	fb0c 6610 	mls	r6, ip, r0, r6
   1d926:	fb08 f800 	mul.w	r8, r8, r0
   1d92a:	b2a3      	uxth	r3, r4
   1d92c:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   1d930:	45a0      	cmp	r8, r4
   1d932:	d907      	bls.n	1d944 <__udivmoddi4+0x15c>
   1d934:	19e4      	adds	r4, r4, r7
   1d936:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1d93a:	d202      	bcs.n	1d942 <__udivmoddi4+0x15a>
   1d93c:	45a0      	cmp	r8, r4
   1d93e:	f200 80b9 	bhi.w	1dab4 <__udivmoddi4+0x2cc>
   1d942:	4618      	mov	r0, r3
   1d944:	eba4 0408 	sub.w	r4, r4, r8
   1d948:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   1d94c:	e79c      	b.n	1d888 <__udivmoddi4+0xa0>
   1d94e:	4629      	mov	r1, r5
   1d950:	4628      	mov	r0, r5
   1d952:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d956:	fa07 f70e 	lsl.w	r7, r7, lr
   1d95a:	f1ce 0320 	rsb	r3, lr, #32
   1d95e:	fa26 f203 	lsr.w	r2, r6, r3
   1d962:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1d966:	fbb2 f1fc 	udiv	r1, r2, ip
   1d96a:	fa1f f887 	uxth.w	r8, r7
   1d96e:	fb0c 2211 	mls	r2, ip, r1, r2
   1d972:	fa06 f60e 	lsl.w	r6, r6, lr
   1d976:	fa20 f303 	lsr.w	r3, r0, r3
   1d97a:	fb01 f908 	mul.w	r9, r1, r8
   1d97e:	4333      	orrs	r3, r6
   1d980:	0c1e      	lsrs	r6, r3, #16
   1d982:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1d986:	45b1      	cmp	r9, r6
   1d988:	fa00 f40e 	lsl.w	r4, r0, lr
   1d98c:	d909      	bls.n	1d9a2 <__udivmoddi4+0x1ba>
   1d98e:	19f6      	adds	r6, r6, r7
   1d990:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   1d994:	f080 808c 	bcs.w	1dab0 <__udivmoddi4+0x2c8>
   1d998:	45b1      	cmp	r9, r6
   1d99a:	f240 8089 	bls.w	1dab0 <__udivmoddi4+0x2c8>
   1d99e:	3902      	subs	r1, #2
   1d9a0:	443e      	add	r6, r7
   1d9a2:	eba6 0609 	sub.w	r6, r6, r9
   1d9a6:	fbb6 f0fc 	udiv	r0, r6, ip
   1d9aa:	fb0c 6210 	mls	r2, ip, r0, r6
   1d9ae:	fb00 f908 	mul.w	r9, r0, r8
   1d9b2:	b29e      	uxth	r6, r3
   1d9b4:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1d9b8:	45b1      	cmp	r9, r6
   1d9ba:	d907      	bls.n	1d9cc <__udivmoddi4+0x1e4>
   1d9bc:	19f6      	adds	r6, r6, r7
   1d9be:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1d9c2:	d271      	bcs.n	1daa8 <__udivmoddi4+0x2c0>
   1d9c4:	45b1      	cmp	r9, r6
   1d9c6:	d96f      	bls.n	1daa8 <__udivmoddi4+0x2c0>
   1d9c8:	3802      	subs	r0, #2
   1d9ca:	443e      	add	r6, r7
   1d9cc:	eba6 0609 	sub.w	r6, r6, r9
   1d9d0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   1d9d4:	e78f      	b.n	1d8f6 <__udivmoddi4+0x10e>
   1d9d6:	f1c1 0720 	rsb	r7, r1, #32
   1d9da:	fa22 f807 	lsr.w	r8, r2, r7
   1d9de:	408b      	lsls	r3, r1
   1d9e0:	ea48 0303 	orr.w	r3, r8, r3
   1d9e4:	fa26 f407 	lsr.w	r4, r6, r7
   1d9e8:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   1d9ec:	fbb4 f9fe 	udiv	r9, r4, lr
   1d9f0:	fa1f fc83 	uxth.w	ip, r3
   1d9f4:	fb0e 4419 	mls	r4, lr, r9, r4
   1d9f8:	408e      	lsls	r6, r1
   1d9fa:	fa20 f807 	lsr.w	r8, r0, r7
   1d9fe:	fb09 fa0c 	mul.w	sl, r9, ip
   1da02:	ea48 0806 	orr.w	r8, r8, r6
   1da06:	ea4f 4618 	mov.w	r6, r8, lsr #16
   1da0a:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   1da0e:	45a2      	cmp	sl, r4
   1da10:	fa02 f201 	lsl.w	r2, r2, r1
   1da14:	fa00 f601 	lsl.w	r6, r0, r1
   1da18:	d908      	bls.n	1da2c <__udivmoddi4+0x244>
   1da1a:	18e4      	adds	r4, r4, r3
   1da1c:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   1da20:	d244      	bcs.n	1daac <__udivmoddi4+0x2c4>
   1da22:	45a2      	cmp	sl, r4
   1da24:	d942      	bls.n	1daac <__udivmoddi4+0x2c4>
   1da26:	f1a9 0902 	sub.w	r9, r9, #2
   1da2a:	441c      	add	r4, r3
   1da2c:	eba4 040a 	sub.w	r4, r4, sl
   1da30:	fbb4 f0fe 	udiv	r0, r4, lr
   1da34:	fb0e 4410 	mls	r4, lr, r0, r4
   1da38:	fb00 fc0c 	mul.w	ip, r0, ip
   1da3c:	fa1f f888 	uxth.w	r8, r8
   1da40:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   1da44:	45a4      	cmp	ip, r4
   1da46:	d907      	bls.n	1da58 <__udivmoddi4+0x270>
   1da48:	18e4      	adds	r4, r4, r3
   1da4a:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1da4e:	d229      	bcs.n	1daa4 <__udivmoddi4+0x2bc>
   1da50:	45a4      	cmp	ip, r4
   1da52:	d927      	bls.n	1daa4 <__udivmoddi4+0x2bc>
   1da54:	3802      	subs	r0, #2
   1da56:	441c      	add	r4, r3
   1da58:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1da5c:	fba0 8902 	umull	r8, r9, r0, r2
   1da60:	eba4 0c0c 	sub.w	ip, r4, ip
   1da64:	45cc      	cmp	ip, r9
   1da66:	46c2      	mov	sl, r8
   1da68:	46ce      	mov	lr, r9
   1da6a:	d315      	bcc.n	1da98 <__udivmoddi4+0x2b0>
   1da6c:	d012      	beq.n	1da94 <__udivmoddi4+0x2ac>
   1da6e:	b155      	cbz	r5, 1da86 <__udivmoddi4+0x29e>
   1da70:	ebb6 030a 	subs.w	r3, r6, sl
   1da74:	eb6c 060e 	sbc.w	r6, ip, lr
   1da78:	fa06 f707 	lsl.w	r7, r6, r7
   1da7c:	40cb      	lsrs	r3, r1
   1da7e:	431f      	orrs	r7, r3
   1da80:	40ce      	lsrs	r6, r1
   1da82:	602f      	str	r7, [r5, #0]
   1da84:	606e      	str	r6, [r5, #4]
   1da86:	2100      	movs	r1, #0
   1da88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1da8c:	4610      	mov	r0, r2
   1da8e:	e6f7      	b.n	1d880 <__udivmoddi4+0x98>
   1da90:	4689      	mov	r9, r1
   1da92:	e6de      	b.n	1d852 <__udivmoddi4+0x6a>
   1da94:	4546      	cmp	r6, r8
   1da96:	d2ea      	bcs.n	1da6e <__udivmoddi4+0x286>
   1da98:	ebb8 0a02 	subs.w	sl, r8, r2
   1da9c:	eb69 0e03 	sbc.w	lr, r9, r3
   1daa0:	3801      	subs	r0, #1
   1daa2:	e7e4      	b.n	1da6e <__udivmoddi4+0x286>
   1daa4:	4670      	mov	r0, lr
   1daa6:	e7d7      	b.n	1da58 <__udivmoddi4+0x270>
   1daa8:	4618      	mov	r0, r3
   1daaa:	e78f      	b.n	1d9cc <__udivmoddi4+0x1e4>
   1daac:	4681      	mov	r9, r0
   1daae:	e7bd      	b.n	1da2c <__udivmoddi4+0x244>
   1dab0:	4611      	mov	r1, r2
   1dab2:	e776      	b.n	1d9a2 <__udivmoddi4+0x1ba>
   1dab4:	3802      	subs	r0, #2
   1dab6:	443c      	add	r4, r7
   1dab8:	e744      	b.n	1d944 <__udivmoddi4+0x15c>
   1daba:	4608      	mov	r0, r1
   1dabc:	e706      	b.n	1d8cc <__udivmoddi4+0xe4>
   1dabe:	3a02      	subs	r2, #2
   1dac0:	443e      	add	r6, r7
   1dac2:	e72b      	b.n	1d91c <__udivmoddi4+0x134>

0001dac4 <__aeabi_idiv0>:
__aeabi_idiv0():
   1dac4:	4770      	bx	lr
   1dac6:	bf00      	nop

0001dac8 <abort>:
abort():
   1dac8:	b508      	push	{r3, lr}
   1daca:	2006      	movs	r0, #6
   1dacc:	f002 f978 	bl	1fdc0 <raise>
   1dad0:	2001      	movs	r0, #1
   1dad2:	f7f9 f823 	bl	16b1c <_exit>

0001dad6 <atoi>:
atoi():
   1dad6:	220a      	movs	r2, #10
   1dad8:	2100      	movs	r1, #0
   1dada:	f003 ba0f 	b.w	20efc <strtol>
   1dade:	Address 0x000000000001dade is out of bounds.


0001dae0 <calloc>:
calloc():
   1dae0:	4b02      	ldr	r3, [pc, #8]	; (1daec <calloc+0xc>)
   1dae2:	460a      	mov	r2, r1
   1dae4:	4601      	mov	r1, r0
   1dae6:	6818      	ldr	r0, [r3, #0]
   1dae8:	f000 bfae 	b.w	1ea48 <_calloc_r>
   1daec:	2007c0e4 	.word	0x2007c0e4

0001daf0 <ctime>:
ctime():
   1daf0:	b508      	push	{r3, lr}
   1daf2:	f000 fb6b 	bl	1e1cc <localtime>
   1daf6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1dafa:	f003 bdbd 	b.w	21678 <asctime>
   1dafe:	Address 0x000000000001dafe is out of bounds.


0001db00 <__errno>:
__errno():
   1db00:	4b01      	ldr	r3, [pc, #4]	; (1db08 <__errno+0x8>)
   1db02:	6818      	ldr	r0, [r3, #0]
   1db04:	4770      	bx	lr
   1db06:	bf00      	nop
   1db08:	2007c0e4 	.word	0x2007c0e4

0001db0c <_fclose_r>:
_fclose_r():
   1db0c:	b570      	push	{r4, r5, r6, lr}
   1db0e:	4605      	mov	r5, r0
   1db10:	460c      	mov	r4, r1
   1db12:	b911      	cbnz	r1, 1db1a <_fclose_r+0xe>
   1db14:	2600      	movs	r6, #0
   1db16:	4630      	mov	r0, r6
   1db18:	bd70      	pop	{r4, r5, r6, pc}
   1db1a:	b118      	cbz	r0, 1db24 <_fclose_r+0x18>
   1db1c:	6983      	ldr	r3, [r0, #24]
   1db1e:	b90b      	cbnz	r3, 1db24 <_fclose_r+0x18>
   1db20:	f000 f952 	bl	1ddc8 <__sinit>
   1db24:	4b1f      	ldr	r3, [pc, #124]	; (1dba4 <_fclose_r+0x98>)
   1db26:	429c      	cmp	r4, r3
   1db28:	d132      	bne.n	1db90 <_fclose_r+0x84>
   1db2a:	686c      	ldr	r4, [r5, #4]
   1db2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1db30:	2b00      	cmp	r3, #0
   1db32:	d0ef      	beq.n	1db14 <_fclose_r+0x8>
   1db34:	4621      	mov	r1, r4
   1db36:	4628      	mov	r0, r5
   1db38:	f000 f842 	bl	1dbc0 <__sflush_r>
   1db3c:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1db3e:	4606      	mov	r6, r0
   1db40:	b133      	cbz	r3, 1db50 <_fclose_r+0x44>
   1db42:	6a21      	ldr	r1, [r4, #32]
   1db44:	4628      	mov	r0, r5
   1db46:	4798      	blx	r3
   1db48:	2800      	cmp	r0, #0
   1db4a:	bfb8      	it	lt
   1db4c:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
   1db50:	89a3      	ldrh	r3, [r4, #12]
   1db52:	061b      	lsls	r3, r3, #24
   1db54:	d503      	bpl.n	1db5e <_fclose_r+0x52>
   1db56:	6921      	ldr	r1, [r4, #16]
   1db58:	4628      	mov	r0, r5
   1db5a:	f000 ff83 	bl	1ea64 <_free_r>
   1db5e:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1db60:	b141      	cbz	r1, 1db74 <_fclose_r+0x68>
   1db62:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1db66:	4299      	cmp	r1, r3
   1db68:	d002      	beq.n	1db70 <_fclose_r+0x64>
   1db6a:	4628      	mov	r0, r5
   1db6c:	f000 ff7a 	bl	1ea64 <_free_r>
   1db70:	2300      	movs	r3, #0
   1db72:	6363      	str	r3, [r4, #52]	; 0x34
   1db74:	6ca1      	ldr	r1, [r4, #72]	; 0x48
   1db76:	b121      	cbz	r1, 1db82 <_fclose_r+0x76>
   1db78:	4628      	mov	r0, r5
   1db7a:	f000 ff73 	bl	1ea64 <_free_r>
   1db7e:	2300      	movs	r3, #0
   1db80:	64a3      	str	r3, [r4, #72]	; 0x48
   1db82:	f000 f98d 	bl	1dea0 <__sfp_lock_acquire>
   1db86:	2300      	movs	r3, #0
   1db88:	81a3      	strh	r3, [r4, #12]
   1db8a:	f000 f98a 	bl	1dea2 <__sfp_lock_release>
   1db8e:	e7c2      	b.n	1db16 <_fclose_r+0xa>
   1db90:	4b05      	ldr	r3, [pc, #20]	; (1dba8 <_fclose_r+0x9c>)
   1db92:	429c      	cmp	r4, r3
   1db94:	d101      	bne.n	1db9a <_fclose_r+0x8e>
   1db96:	68ac      	ldr	r4, [r5, #8]
   1db98:	e7c8      	b.n	1db2c <_fclose_r+0x20>
   1db9a:	4b04      	ldr	r3, [pc, #16]	; (1dbac <_fclose_r+0xa0>)
   1db9c:	429c      	cmp	r4, r3
   1db9e:	bf08      	it	eq
   1dba0:	68ec      	ldreq	r4, [r5, #12]
   1dba2:	e7c3      	b.n	1db2c <_fclose_r+0x20>
   1dba4:	00027364 	.word	0x00027364
   1dba8:	00027384 	.word	0x00027384
   1dbac:	00027344 	.word	0x00027344

0001dbb0 <fclose>:
fclose():
   1dbb0:	4b02      	ldr	r3, [pc, #8]	; (1dbbc <fclose+0xc>)
   1dbb2:	4601      	mov	r1, r0
   1dbb4:	6818      	ldr	r0, [r3, #0]
   1dbb6:	f7ff bfa9 	b.w	1db0c <_fclose_r>
   1dbba:	bf00      	nop
   1dbbc:	2007c0e4 	.word	0x2007c0e4

0001dbc0 <__sflush_r>:
__sflush_r():
   1dbc0:	898a      	ldrh	r2, [r1, #12]
   1dbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1dbc6:	4605      	mov	r5, r0
   1dbc8:	0710      	lsls	r0, r2, #28
   1dbca:	460c      	mov	r4, r1
   1dbcc:	d45a      	bmi.n	1dc84 <__sflush_r+0xc4>
   1dbce:	684b      	ldr	r3, [r1, #4]
   1dbd0:	2b00      	cmp	r3, #0
   1dbd2:	dc05      	bgt.n	1dbe0 <__sflush_r+0x20>
   1dbd4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1dbd6:	2b00      	cmp	r3, #0
   1dbd8:	dc02      	bgt.n	1dbe0 <__sflush_r+0x20>
   1dbda:	2000      	movs	r0, #0
   1dbdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dbe0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1dbe2:	2e00      	cmp	r6, #0
   1dbe4:	d0f9      	beq.n	1dbda <__sflush_r+0x1a>
   1dbe6:	2300      	movs	r3, #0
   1dbe8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1dbec:	682f      	ldr	r7, [r5, #0]
   1dbee:	602b      	str	r3, [r5, #0]
   1dbf0:	d033      	beq.n	1dc5a <__sflush_r+0x9a>
   1dbf2:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1dbf4:	89a3      	ldrh	r3, [r4, #12]
   1dbf6:	075a      	lsls	r2, r3, #29
   1dbf8:	d505      	bpl.n	1dc06 <__sflush_r+0x46>
   1dbfa:	6863      	ldr	r3, [r4, #4]
   1dbfc:	1ac0      	subs	r0, r0, r3
   1dbfe:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1dc00:	b10b      	cbz	r3, 1dc06 <__sflush_r+0x46>
   1dc02:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1dc04:	1ac0      	subs	r0, r0, r3
   1dc06:	2300      	movs	r3, #0
   1dc08:	4602      	mov	r2, r0
   1dc0a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1dc0c:	6a21      	ldr	r1, [r4, #32]
   1dc0e:	4628      	mov	r0, r5
   1dc10:	47b0      	blx	r6
   1dc12:	1c43      	adds	r3, r0, #1
   1dc14:	89a3      	ldrh	r3, [r4, #12]
   1dc16:	d106      	bne.n	1dc26 <__sflush_r+0x66>
   1dc18:	6829      	ldr	r1, [r5, #0]
   1dc1a:	291d      	cmp	r1, #29
   1dc1c:	d84b      	bhi.n	1dcb6 <__sflush_r+0xf6>
   1dc1e:	4a2b      	ldr	r2, [pc, #172]	; (1dccc <__sflush_r+0x10c>)
   1dc20:	40ca      	lsrs	r2, r1
   1dc22:	07d6      	lsls	r6, r2, #31
   1dc24:	d547      	bpl.n	1dcb6 <__sflush_r+0xf6>
   1dc26:	2200      	movs	r2, #0
   1dc28:	6062      	str	r2, [r4, #4]
   1dc2a:	6922      	ldr	r2, [r4, #16]
   1dc2c:	04d9      	lsls	r1, r3, #19
   1dc2e:	6022      	str	r2, [r4, #0]
   1dc30:	d504      	bpl.n	1dc3c <__sflush_r+0x7c>
   1dc32:	1c42      	adds	r2, r0, #1
   1dc34:	d101      	bne.n	1dc3a <__sflush_r+0x7a>
   1dc36:	682b      	ldr	r3, [r5, #0]
   1dc38:	b903      	cbnz	r3, 1dc3c <__sflush_r+0x7c>
   1dc3a:	6560      	str	r0, [r4, #84]	; 0x54
   1dc3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1dc3e:	602f      	str	r7, [r5, #0]
   1dc40:	2900      	cmp	r1, #0
   1dc42:	d0ca      	beq.n	1dbda <__sflush_r+0x1a>
   1dc44:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1dc48:	4299      	cmp	r1, r3
   1dc4a:	d002      	beq.n	1dc52 <__sflush_r+0x92>
   1dc4c:	4628      	mov	r0, r5
   1dc4e:	f000 ff09 	bl	1ea64 <_free_r>
   1dc52:	2000      	movs	r0, #0
   1dc54:	6360      	str	r0, [r4, #52]	; 0x34
   1dc56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dc5a:	6a21      	ldr	r1, [r4, #32]
   1dc5c:	2301      	movs	r3, #1
   1dc5e:	4628      	mov	r0, r5
   1dc60:	47b0      	blx	r6
   1dc62:	1c41      	adds	r1, r0, #1
   1dc64:	d1c6      	bne.n	1dbf4 <__sflush_r+0x34>
   1dc66:	682b      	ldr	r3, [r5, #0]
   1dc68:	2b00      	cmp	r3, #0
   1dc6a:	d0c3      	beq.n	1dbf4 <__sflush_r+0x34>
   1dc6c:	2b1d      	cmp	r3, #29
   1dc6e:	d001      	beq.n	1dc74 <__sflush_r+0xb4>
   1dc70:	2b16      	cmp	r3, #22
   1dc72:	d101      	bne.n	1dc78 <__sflush_r+0xb8>
   1dc74:	602f      	str	r7, [r5, #0]
   1dc76:	e7b0      	b.n	1dbda <__sflush_r+0x1a>
   1dc78:	89a3      	ldrh	r3, [r4, #12]
   1dc7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1dc7e:	81a3      	strh	r3, [r4, #12]
   1dc80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dc84:	690f      	ldr	r7, [r1, #16]
   1dc86:	2f00      	cmp	r7, #0
   1dc88:	d0a7      	beq.n	1dbda <__sflush_r+0x1a>
   1dc8a:	0793      	lsls	r3, r2, #30
   1dc8c:	bf18      	it	ne
   1dc8e:	2300      	movne	r3, #0
   1dc90:	680e      	ldr	r6, [r1, #0]
   1dc92:	bf08      	it	eq
   1dc94:	694b      	ldreq	r3, [r1, #20]
   1dc96:	eba6 0807 	sub.w	r8, r6, r7
   1dc9a:	600f      	str	r7, [r1, #0]
   1dc9c:	608b      	str	r3, [r1, #8]
   1dc9e:	f1b8 0f00 	cmp.w	r8, #0
   1dca2:	dd9a      	ble.n	1dbda <__sflush_r+0x1a>
   1dca4:	4643      	mov	r3, r8
   1dca6:	463a      	mov	r2, r7
   1dca8:	6a21      	ldr	r1, [r4, #32]
   1dcaa:	4628      	mov	r0, r5
   1dcac:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1dcae:	47b0      	blx	r6
   1dcb0:	2800      	cmp	r0, #0
   1dcb2:	dc07      	bgt.n	1dcc4 <__sflush_r+0x104>
   1dcb4:	89a3      	ldrh	r3, [r4, #12]
   1dcb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1dcba:	81a3      	strh	r3, [r4, #12]
   1dcbc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dcc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dcc4:	4407      	add	r7, r0
   1dcc6:	eba8 0800 	sub.w	r8, r8, r0
   1dcca:	e7e8      	b.n	1dc9e <__sflush_r+0xde>
   1dccc:	20400001 	.word	0x20400001

0001dcd0 <_fflush_r>:
_fflush_r():
   1dcd0:	b538      	push	{r3, r4, r5, lr}
   1dcd2:	690b      	ldr	r3, [r1, #16]
   1dcd4:	4605      	mov	r5, r0
   1dcd6:	460c      	mov	r4, r1
   1dcd8:	b1db      	cbz	r3, 1dd12 <_fflush_r+0x42>
   1dcda:	b118      	cbz	r0, 1dce4 <_fflush_r+0x14>
   1dcdc:	6983      	ldr	r3, [r0, #24]
   1dcde:	b90b      	cbnz	r3, 1dce4 <_fflush_r+0x14>
   1dce0:	f000 f872 	bl	1ddc8 <__sinit>
   1dce4:	4b0c      	ldr	r3, [pc, #48]	; (1dd18 <_fflush_r+0x48>)
   1dce6:	429c      	cmp	r4, r3
   1dce8:	d109      	bne.n	1dcfe <_fflush_r+0x2e>
   1dcea:	686c      	ldr	r4, [r5, #4]
   1dcec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1dcf0:	b17b      	cbz	r3, 1dd12 <_fflush_r+0x42>
   1dcf2:	4621      	mov	r1, r4
   1dcf4:	4628      	mov	r0, r5
   1dcf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1dcfa:	f7ff bf61 	b.w	1dbc0 <__sflush_r>
   1dcfe:	4b07      	ldr	r3, [pc, #28]	; (1dd1c <_fflush_r+0x4c>)
   1dd00:	429c      	cmp	r4, r3
   1dd02:	d101      	bne.n	1dd08 <_fflush_r+0x38>
   1dd04:	68ac      	ldr	r4, [r5, #8]
   1dd06:	e7f1      	b.n	1dcec <_fflush_r+0x1c>
   1dd08:	4b05      	ldr	r3, [pc, #20]	; (1dd20 <_fflush_r+0x50>)
   1dd0a:	429c      	cmp	r4, r3
   1dd0c:	bf08      	it	eq
   1dd0e:	68ec      	ldreq	r4, [r5, #12]
   1dd10:	e7ec      	b.n	1dcec <_fflush_r+0x1c>
   1dd12:	2000      	movs	r0, #0
   1dd14:	bd38      	pop	{r3, r4, r5, pc}
   1dd16:	bf00      	nop
   1dd18:	00027364 	.word	0x00027364
   1dd1c:	00027384 	.word	0x00027384
   1dd20:	00027344 	.word	0x00027344

0001dd24 <fflush>:
fflush():
   1dd24:	4601      	mov	r1, r0
   1dd26:	b920      	cbnz	r0, 1dd32 <fflush+0xe>
   1dd28:	4b04      	ldr	r3, [pc, #16]	; (1dd3c <fflush+0x18>)
   1dd2a:	4905      	ldr	r1, [pc, #20]	; (1dd40 <fflush+0x1c>)
   1dd2c:	6818      	ldr	r0, [r3, #0]
   1dd2e:	f000 b9af 	b.w	1e090 <_fwalk_reent>
   1dd32:	4b04      	ldr	r3, [pc, #16]	; (1dd44 <fflush+0x20>)
   1dd34:	6818      	ldr	r0, [r3, #0]
   1dd36:	f7ff bfcb 	b.w	1dcd0 <_fflush_r>
   1dd3a:	bf00      	nop
   1dd3c:	000273a4 	.word	0x000273a4
   1dd40:	0001dcd1 	.word	0x0001dcd1
   1dd44:	2007c0e4 	.word	0x2007c0e4

0001dd48 <_cleanup_r>:
_cleanup_r():
   1dd48:	4901      	ldr	r1, [pc, #4]	; (1dd50 <_cleanup_r+0x8>)
   1dd4a:	f000 b9a1 	b.w	1e090 <_fwalk_reent>
   1dd4e:	bf00      	nop
   1dd50:	0001dcd1 	.word	0x0001dcd1

0001dd54 <std.isra.0>:
std.isra.0():
   1dd54:	2300      	movs	r3, #0
   1dd56:	b510      	push	{r4, lr}
   1dd58:	4604      	mov	r4, r0
   1dd5a:	6003      	str	r3, [r0, #0]
   1dd5c:	6043      	str	r3, [r0, #4]
   1dd5e:	6083      	str	r3, [r0, #8]
   1dd60:	8181      	strh	r1, [r0, #12]
   1dd62:	6643      	str	r3, [r0, #100]	; 0x64
   1dd64:	81c2      	strh	r2, [r0, #14]
   1dd66:	6103      	str	r3, [r0, #16]
   1dd68:	6143      	str	r3, [r0, #20]
   1dd6a:	6183      	str	r3, [r0, #24]
   1dd6c:	4619      	mov	r1, r3
   1dd6e:	2208      	movs	r2, #8
   1dd70:	305c      	adds	r0, #92	; 0x5c
   1dd72:	f000 fbfb 	bl	1e56c <memset>
   1dd76:	4b05      	ldr	r3, [pc, #20]	; (1dd8c <std.isra.0+0x38>)
   1dd78:	6224      	str	r4, [r4, #32]
   1dd7a:	6263      	str	r3, [r4, #36]	; 0x24
   1dd7c:	4b04      	ldr	r3, [pc, #16]	; (1dd90 <std.isra.0+0x3c>)
   1dd7e:	62a3      	str	r3, [r4, #40]	; 0x28
   1dd80:	4b04      	ldr	r3, [pc, #16]	; (1dd94 <std.isra.0+0x40>)
   1dd82:	62e3      	str	r3, [r4, #44]	; 0x2c
   1dd84:	4b04      	ldr	r3, [pc, #16]	; (1dd98 <std.isra.0+0x44>)
   1dd86:	6323      	str	r3, [r4, #48]	; 0x30
   1dd88:	bd10      	pop	{r4, pc}
   1dd8a:	bf00      	nop
   1dd8c:	0001fefd 	.word	0x0001fefd
   1dd90:	0001ff23 	.word	0x0001ff23
   1dd94:	0001ff5b 	.word	0x0001ff5b
   1dd98:	0001ff7f 	.word	0x0001ff7f

0001dd9c <__sfmoreglue>:
__sfmoreglue():
   1dd9c:	b570      	push	{r4, r5, r6, lr}
   1dd9e:	2568      	movs	r5, #104	; 0x68
   1dda0:	1e4a      	subs	r2, r1, #1
   1dda2:	4355      	muls	r5, r2
   1dda4:	460e      	mov	r6, r1
   1dda6:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1ddaa:	f000 fed9 	bl	1eb60 <_malloc_r>
   1ddae:	4604      	mov	r4, r0
   1ddb0:	b140      	cbz	r0, 1ddc4 <__sfmoreglue+0x28>
   1ddb2:	2100      	movs	r1, #0
   1ddb4:	e880 0042 	stmia.w	r0, {r1, r6}
   1ddb8:	300c      	adds	r0, #12
   1ddba:	60a0      	str	r0, [r4, #8]
   1ddbc:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1ddc0:	f000 fbd4 	bl	1e56c <memset>
   1ddc4:	4620      	mov	r0, r4
   1ddc6:	bd70      	pop	{r4, r5, r6, pc}

0001ddc8 <__sinit>:
__sinit():
   1ddc8:	6983      	ldr	r3, [r0, #24]
   1ddca:	b510      	push	{r4, lr}
   1ddcc:	4604      	mov	r4, r0
   1ddce:	bb33      	cbnz	r3, 1de1e <__sinit+0x56>
   1ddd0:	6483      	str	r3, [r0, #72]	; 0x48
   1ddd2:	64c3      	str	r3, [r0, #76]	; 0x4c
   1ddd4:	6503      	str	r3, [r0, #80]	; 0x50
   1ddd6:	4b12      	ldr	r3, [pc, #72]	; (1de20 <__sinit+0x58>)
   1ddd8:	4a12      	ldr	r2, [pc, #72]	; (1de24 <__sinit+0x5c>)
   1ddda:	681b      	ldr	r3, [r3, #0]
   1dddc:	6282      	str	r2, [r0, #40]	; 0x28
   1ddde:	4298      	cmp	r0, r3
   1dde0:	bf04      	itt	eq
   1dde2:	2301      	moveq	r3, #1
   1dde4:	6183      	streq	r3, [r0, #24]
   1dde6:	f000 f81f 	bl	1de28 <__sfp>
   1ddea:	6060      	str	r0, [r4, #4]
   1ddec:	4620      	mov	r0, r4
   1ddee:	f000 f81b 	bl	1de28 <__sfp>
   1ddf2:	60a0      	str	r0, [r4, #8]
   1ddf4:	4620      	mov	r0, r4
   1ddf6:	f000 f817 	bl	1de28 <__sfp>
   1ddfa:	2200      	movs	r2, #0
   1ddfc:	60e0      	str	r0, [r4, #12]
   1ddfe:	2104      	movs	r1, #4
   1de00:	6860      	ldr	r0, [r4, #4]
   1de02:	f7ff ffa7 	bl	1dd54 <std.isra.0>
   1de06:	2201      	movs	r2, #1
   1de08:	2109      	movs	r1, #9
   1de0a:	68a0      	ldr	r0, [r4, #8]
   1de0c:	f7ff ffa2 	bl	1dd54 <std.isra.0>
   1de10:	2202      	movs	r2, #2
   1de12:	2112      	movs	r1, #18
   1de14:	68e0      	ldr	r0, [r4, #12]
   1de16:	f7ff ff9d 	bl	1dd54 <std.isra.0>
   1de1a:	2301      	movs	r3, #1
   1de1c:	61a3      	str	r3, [r4, #24]
   1de1e:	bd10      	pop	{r4, pc}
   1de20:	000273a4 	.word	0x000273a4
   1de24:	0001dd49 	.word	0x0001dd49

0001de28 <__sfp>:
__sfp():
   1de28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1de2a:	4b1c      	ldr	r3, [pc, #112]	; (1de9c <__sfp+0x74>)
   1de2c:	4607      	mov	r7, r0
   1de2e:	681e      	ldr	r6, [r3, #0]
   1de30:	69b3      	ldr	r3, [r6, #24]
   1de32:	b913      	cbnz	r3, 1de3a <__sfp+0x12>
   1de34:	4630      	mov	r0, r6
   1de36:	f7ff ffc7 	bl	1ddc8 <__sinit>
   1de3a:	3648      	adds	r6, #72	; 0x48
   1de3c:	68b4      	ldr	r4, [r6, #8]
   1de3e:	6873      	ldr	r3, [r6, #4]
   1de40:	3b01      	subs	r3, #1
   1de42:	d503      	bpl.n	1de4c <__sfp+0x24>
   1de44:	6833      	ldr	r3, [r6, #0]
   1de46:	b133      	cbz	r3, 1de56 <__sfp+0x2e>
   1de48:	6836      	ldr	r6, [r6, #0]
   1de4a:	e7f7      	b.n	1de3c <__sfp+0x14>
   1de4c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1de50:	b16d      	cbz	r5, 1de6e <__sfp+0x46>
   1de52:	3468      	adds	r4, #104	; 0x68
   1de54:	e7f4      	b.n	1de40 <__sfp+0x18>
   1de56:	2104      	movs	r1, #4
   1de58:	4638      	mov	r0, r7
   1de5a:	f7ff ff9f 	bl	1dd9c <__sfmoreglue>
   1de5e:	6030      	str	r0, [r6, #0]
   1de60:	2800      	cmp	r0, #0
   1de62:	d1f1      	bne.n	1de48 <__sfp+0x20>
   1de64:	230c      	movs	r3, #12
   1de66:	4604      	mov	r4, r0
   1de68:	603b      	str	r3, [r7, #0]
   1de6a:	4620      	mov	r0, r4
   1de6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1de6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1de72:	81e3      	strh	r3, [r4, #14]
   1de74:	2301      	movs	r3, #1
   1de76:	6665      	str	r5, [r4, #100]	; 0x64
   1de78:	81a3      	strh	r3, [r4, #12]
   1de7a:	6025      	str	r5, [r4, #0]
   1de7c:	60a5      	str	r5, [r4, #8]
   1de7e:	6065      	str	r5, [r4, #4]
   1de80:	6125      	str	r5, [r4, #16]
   1de82:	6165      	str	r5, [r4, #20]
   1de84:	61a5      	str	r5, [r4, #24]
   1de86:	2208      	movs	r2, #8
   1de88:	4629      	mov	r1, r5
   1de8a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1de8e:	f000 fb6d 	bl	1e56c <memset>
   1de92:	6365      	str	r5, [r4, #52]	; 0x34
   1de94:	63a5      	str	r5, [r4, #56]	; 0x38
   1de96:	64a5      	str	r5, [r4, #72]	; 0x48
   1de98:	64e5      	str	r5, [r4, #76]	; 0x4c
   1de9a:	e7e6      	b.n	1de6a <__sfp+0x42>
   1de9c:	000273a4 	.word	0x000273a4

0001dea0 <__sfp_lock_acquire>:
__sfp_lock_acquire():
   1dea0:	4770      	bx	lr

0001dea2 <__sfp_lock_release>:
__sfp_lock_release():
   1dea2:	4770      	bx	lr

0001dea4 <_fopen_r>:
_fopen_r():
   1dea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1dea6:	460f      	mov	r7, r1
   1dea8:	4611      	mov	r1, r2
   1deaa:	aa01      	add	r2, sp, #4
   1deac:	4605      	mov	r5, r0
   1deae:	f004 faa3 	bl	223f8 <__sflags>
   1deb2:	4606      	mov	r6, r0
   1deb4:	b918      	cbnz	r0, 1debe <_fopen_r+0x1a>
   1deb6:	2400      	movs	r4, #0
   1deb8:	4620      	mov	r0, r4
   1deba:	b003      	add	sp, #12
   1debc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1debe:	4628      	mov	r0, r5
   1dec0:	f7ff ffb2 	bl	1de28 <__sfp>
   1dec4:	4604      	mov	r4, r0
   1dec6:	2800      	cmp	r0, #0
   1dec8:	d0f5      	beq.n	1deb6 <_fopen_r+0x12>
   1deca:	f44f 73db 	mov.w	r3, #438	; 0x1b6
   1dece:	9a01      	ldr	r2, [sp, #4]
   1ded0:	4639      	mov	r1, r7
   1ded2:	4628      	mov	r0, r5
   1ded4:	f001 fce4 	bl	1f8a0 <_open_r>
   1ded8:	2800      	cmp	r0, #0
   1deda:	da06      	bge.n	1deea <_fopen_r+0x46>
   1dedc:	2500      	movs	r5, #0
   1dede:	f7ff ffdf 	bl	1dea0 <__sfp_lock_acquire>
   1dee2:	81a5      	strh	r5, [r4, #12]
   1dee4:	f7ff ffdd 	bl	1dea2 <__sfp_lock_release>
   1dee8:	e7e5      	b.n	1deb6 <_fopen_r+0x12>
   1deea:	4b0a      	ldr	r3, [pc, #40]	; (1df14 <_fopen_r+0x70>)
   1deec:	81e0      	strh	r0, [r4, #14]
   1deee:	6263      	str	r3, [r4, #36]	; 0x24
   1def0:	4b09      	ldr	r3, [pc, #36]	; (1df18 <_fopen_r+0x74>)
   1def2:	81a6      	strh	r6, [r4, #12]
   1def4:	62a3      	str	r3, [r4, #40]	; 0x28
   1def6:	4b09      	ldr	r3, [pc, #36]	; (1df1c <_fopen_r+0x78>)
   1def8:	6224      	str	r4, [r4, #32]
   1defa:	62e3      	str	r3, [r4, #44]	; 0x2c
   1defc:	4b08      	ldr	r3, [pc, #32]	; (1df20 <_fopen_r+0x7c>)
   1defe:	6323      	str	r3, [r4, #48]	; 0x30
   1df00:	05f3      	lsls	r3, r6, #23
   1df02:	d5d9      	bpl.n	1deb8 <_fopen_r+0x14>
   1df04:	2302      	movs	r3, #2
   1df06:	2200      	movs	r2, #0
   1df08:	4621      	mov	r1, r4
   1df0a:	4628      	mov	r0, r5
   1df0c:	f000 f812 	bl	1df34 <_fseek_r>
   1df10:	e7d2      	b.n	1deb8 <_fopen_r+0x14>
   1df12:	bf00      	nop
   1df14:	0001fefd 	.word	0x0001fefd
   1df18:	0001ff23 	.word	0x0001ff23
   1df1c:	0001ff5b 	.word	0x0001ff5b
   1df20:	0001ff7f 	.word	0x0001ff7f

0001df24 <fopen>:
fopen():
   1df24:	4b02      	ldr	r3, [pc, #8]	; (1df30 <fopen+0xc>)
   1df26:	460a      	mov	r2, r1
   1df28:	4601      	mov	r1, r0
   1df2a:	6818      	ldr	r0, [r3, #0]
   1df2c:	f7ff bfba 	b.w	1dea4 <_fopen_r>
   1df30:	2007c0e4 	.word	0x2007c0e4

0001df34 <_fseek_r>:
_fseek_r():
   1df34:	f000 b800 	b.w	1df38 <_fseeko_r>

0001df38 <_fseeko_r>:
_fseeko_r():
   1df38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1df3c:	460c      	mov	r4, r1
   1df3e:	4691      	mov	r9, r2
   1df40:	461e      	mov	r6, r3
   1df42:	4605      	mov	r5, r0
   1df44:	b118      	cbz	r0, 1df4e <_fseeko_r+0x16>
   1df46:	6983      	ldr	r3, [r0, #24]
   1df48:	b90b      	cbnz	r3, 1df4e <_fseeko_r+0x16>
   1df4a:	f7ff ff3d 	bl	1ddc8 <__sinit>
   1df4e:	4b3f      	ldr	r3, [pc, #252]	; (1e04c <_fseeko_r+0x114>)
   1df50:	429c      	cmp	r4, r3
   1df52:	d112      	bne.n	1df7a <_fseeko_r+0x42>
   1df54:	686c      	ldr	r4, [r5, #4]
   1df56:	89a3      	ldrh	r3, [r4, #12]
   1df58:	f403 7384 	and.w	r3, r3, #264	; 0x108
   1df5c:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   1df60:	d103      	bne.n	1df6a <_fseeko_r+0x32>
   1df62:	4621      	mov	r1, r4
   1df64:	4628      	mov	r0, r5
   1df66:	f7ff feb3 	bl	1dcd0 <_fflush_r>
   1df6a:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
   1df6e:	f1b8 0f00 	cmp.w	r8, #0
   1df72:	d10c      	bne.n	1df8e <_fseeko_r+0x56>
   1df74:	231d      	movs	r3, #29
   1df76:	602b      	str	r3, [r5, #0]
   1df78:	e057      	b.n	1e02a <_fseeko_r+0xf2>
   1df7a:	4b35      	ldr	r3, [pc, #212]	; (1e050 <_fseeko_r+0x118>)
   1df7c:	429c      	cmp	r4, r3
   1df7e:	d101      	bne.n	1df84 <_fseeko_r+0x4c>
   1df80:	68ac      	ldr	r4, [r5, #8]
   1df82:	e7e8      	b.n	1df56 <_fseeko_r+0x1e>
   1df84:	4b33      	ldr	r3, [pc, #204]	; (1e054 <_fseeko_r+0x11c>)
   1df86:	429c      	cmp	r4, r3
   1df88:	bf08      	it	eq
   1df8a:	68ec      	ldreq	r4, [r5, #12]
   1df8c:	e7e3      	b.n	1df56 <_fseeko_r+0x1e>
   1df8e:	2e01      	cmp	r6, #1
   1df90:	d030      	beq.n	1dff4 <_fseeko_r+0xbc>
   1df92:	2e02      	cmp	r6, #2
   1df94:	d001      	beq.n	1df9a <_fseeko_r+0x62>
   1df96:	2e00      	cmp	r6, #0
   1df98:	d155      	bne.n	1e046 <_fseeko_r+0x10e>
   1df9a:	6923      	ldr	r3, [r4, #16]
   1df9c:	b91b      	cbnz	r3, 1dfa6 <_fseeko_r+0x6e>
   1df9e:	4621      	mov	r1, r4
   1dfa0:	4628      	mov	r0, r5
   1dfa2:	f000 fa3f 	bl	1e424 <__smakebuf_r>
   1dfa6:	4621      	mov	r1, r4
   1dfa8:	4628      	mov	r0, r5
   1dfaa:	f7ff fe91 	bl	1dcd0 <_fflush_r>
   1dfae:	4607      	mov	r7, r0
   1dfb0:	2800      	cmp	r0, #0
   1dfb2:	d13a      	bne.n	1e02a <_fseeko_r+0xf2>
   1dfb4:	4633      	mov	r3, r6
   1dfb6:	464a      	mov	r2, r9
   1dfb8:	6a21      	ldr	r1, [r4, #32]
   1dfba:	4628      	mov	r0, r5
   1dfbc:	47c0      	blx	r8
   1dfbe:	3001      	adds	r0, #1
   1dfc0:	d033      	beq.n	1e02a <_fseeko_r+0xf2>
   1dfc2:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1dfc4:	b141      	cbz	r1, 1dfd8 <_fseeko_r+0xa0>
   1dfc6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1dfca:	4299      	cmp	r1, r3
   1dfcc:	d002      	beq.n	1dfd4 <_fseeko_r+0x9c>
   1dfce:	4628      	mov	r0, r5
   1dfd0:	f000 fd48 	bl	1ea64 <_free_r>
   1dfd4:	2300      	movs	r3, #0
   1dfd6:	6363      	str	r3, [r4, #52]	; 0x34
   1dfd8:	2100      	movs	r1, #0
   1dfda:	6923      	ldr	r3, [r4, #16]
   1dfdc:	6061      	str	r1, [r4, #4]
   1dfde:	6023      	str	r3, [r4, #0]
   1dfe0:	89a3      	ldrh	r3, [r4, #12]
   1dfe2:	2208      	movs	r2, #8
   1dfe4:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
   1dfe8:	81a3      	strh	r3, [r4, #12]
   1dfea:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1dfee:	f000 fabd 	bl	1e56c <memset>
   1dff2:	e01c      	b.n	1e02e <_fseeko_r+0xf6>
   1dff4:	4621      	mov	r1, r4
   1dff6:	4628      	mov	r0, r5
   1dff8:	f7ff fe6a 	bl	1dcd0 <_fflush_r>
   1dffc:	89a2      	ldrh	r2, [r4, #12]
   1dffe:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1e002:	d00c      	beq.n	1e01e <_fseeko_r+0xe6>
   1e004:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1e006:	89a3      	ldrh	r3, [r4, #12]
   1e008:	075a      	lsls	r2, r3, #29
   1e00a:	d513      	bpl.n	1e034 <_fseeko_r+0xfc>
   1e00c:	6863      	ldr	r3, [r4, #4]
   1e00e:	1ac0      	subs	r0, r0, r3
   1e010:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1e012:	b10b      	cbz	r3, 1e018 <_fseeko_r+0xe0>
   1e014:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1e016:	1ac0      	subs	r0, r0, r3
   1e018:	4481      	add	r9, r0
   1e01a:	2600      	movs	r6, #0
   1e01c:	e7bd      	b.n	1df9a <_fseeko_r+0x62>
   1e01e:	6a21      	ldr	r1, [r4, #32]
   1e020:	4633      	mov	r3, r6
   1e022:	4628      	mov	r0, r5
   1e024:	47c0      	blx	r8
   1e026:	1c41      	adds	r1, r0, #1
   1e028:	d1ed      	bne.n	1e006 <_fseeko_r+0xce>
   1e02a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1e02e:	4638      	mov	r0, r7
   1e030:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e034:	071b      	lsls	r3, r3, #28
   1e036:	d5ef      	bpl.n	1e018 <_fseeko_r+0xe0>
   1e038:	6823      	ldr	r3, [r4, #0]
   1e03a:	2b00      	cmp	r3, #0
   1e03c:	d0ec      	beq.n	1e018 <_fseeko_r+0xe0>
   1e03e:	6922      	ldr	r2, [r4, #16]
   1e040:	1a9b      	subs	r3, r3, r2
   1e042:	4418      	add	r0, r3
   1e044:	e7e8      	b.n	1e018 <_fseeko_r+0xe0>
   1e046:	2316      	movs	r3, #22
   1e048:	e795      	b.n	1df76 <_fseeko_r+0x3e>
   1e04a:	bf00      	nop
   1e04c:	00027364 	.word	0x00027364
   1e050:	00027384 	.word	0x00027384
   1e054:	00027344 	.word	0x00027344

0001e058 <_fwalk>:
_fwalk():
   1e058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e05c:	4688      	mov	r8, r1
   1e05e:	2600      	movs	r6, #0
   1e060:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1e064:	b914      	cbnz	r4, 1e06c <_fwalk+0x14>
   1e066:	4630      	mov	r0, r6
   1e068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e06c:	68a5      	ldr	r5, [r4, #8]
   1e06e:	6867      	ldr	r7, [r4, #4]
   1e070:	3f01      	subs	r7, #1
   1e072:	d501      	bpl.n	1e078 <_fwalk+0x20>
   1e074:	6824      	ldr	r4, [r4, #0]
   1e076:	e7f5      	b.n	1e064 <_fwalk+0xc>
   1e078:	89ab      	ldrh	r3, [r5, #12]
   1e07a:	2b01      	cmp	r3, #1
   1e07c:	d906      	bls.n	1e08c <_fwalk+0x34>
   1e07e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1e082:	3301      	adds	r3, #1
   1e084:	d002      	beq.n	1e08c <_fwalk+0x34>
   1e086:	4628      	mov	r0, r5
   1e088:	47c0      	blx	r8
   1e08a:	4306      	orrs	r6, r0
   1e08c:	3568      	adds	r5, #104	; 0x68
   1e08e:	e7ef      	b.n	1e070 <_fwalk+0x18>

0001e090 <_fwalk_reent>:
_fwalk_reent():
   1e090:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e094:	4680      	mov	r8, r0
   1e096:	4689      	mov	r9, r1
   1e098:	2600      	movs	r6, #0
   1e09a:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1e09e:	b914      	cbnz	r4, 1e0a6 <_fwalk_reent+0x16>
   1e0a0:	4630      	mov	r0, r6
   1e0a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e0a6:	68a5      	ldr	r5, [r4, #8]
   1e0a8:	6867      	ldr	r7, [r4, #4]
   1e0aa:	3f01      	subs	r7, #1
   1e0ac:	d501      	bpl.n	1e0b2 <_fwalk_reent+0x22>
   1e0ae:	6824      	ldr	r4, [r4, #0]
   1e0b0:	e7f5      	b.n	1e09e <_fwalk_reent+0xe>
   1e0b2:	89ab      	ldrh	r3, [r5, #12]
   1e0b4:	2b01      	cmp	r3, #1
   1e0b6:	d907      	bls.n	1e0c8 <_fwalk_reent+0x38>
   1e0b8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1e0bc:	3301      	adds	r3, #1
   1e0be:	d003      	beq.n	1e0c8 <_fwalk_reent+0x38>
   1e0c0:	4629      	mov	r1, r5
   1e0c2:	4640      	mov	r0, r8
   1e0c4:	47c8      	blx	r9
   1e0c6:	4306      	orrs	r6, r0
   1e0c8:	3568      	adds	r5, #104	; 0x68
   1e0ca:	e7ee      	b.n	1e0aa <_fwalk_reent+0x1a>

0001e0cc <_fwrite_r>:
_fwrite_r():
   1e0cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e0d0:	9c08      	ldr	r4, [sp, #32]
   1e0d2:	4689      	mov	r9, r1
   1e0d4:	4617      	mov	r7, r2
   1e0d6:	fb02 f803 	mul.w	r8, r2, r3
   1e0da:	4606      	mov	r6, r0
   1e0dc:	b118      	cbz	r0, 1e0e6 <_fwrite_r+0x1a>
   1e0de:	6983      	ldr	r3, [r0, #24]
   1e0e0:	b90b      	cbnz	r3, 1e0e6 <_fwrite_r+0x1a>
   1e0e2:	f7ff fe71 	bl	1ddc8 <__sinit>
   1e0e6:	4b1d      	ldr	r3, [pc, #116]	; (1e15c <_fwrite_r+0x90>)
   1e0e8:	429c      	cmp	r4, r3
   1e0ea:	d11a      	bne.n	1e122 <_fwrite_r+0x56>
   1e0ec:	6874      	ldr	r4, [r6, #4]
   1e0ee:	89a3      	ldrh	r3, [r4, #12]
   1e0f0:	071b      	lsls	r3, r3, #28
   1e0f2:	d520      	bpl.n	1e136 <_fwrite_r+0x6a>
   1e0f4:	6923      	ldr	r3, [r4, #16]
   1e0f6:	b1f3      	cbz	r3, 1e136 <_fwrite_r+0x6a>
   1e0f8:	2500      	movs	r5, #0
   1e0fa:	4545      	cmp	r5, r8
   1e0fc:	d029      	beq.n	1e152 <_fwrite_r+0x86>
   1e0fe:	68a3      	ldr	r3, [r4, #8]
   1e100:	f819 1005 	ldrb.w	r1, [r9, r5]
   1e104:	3b01      	subs	r3, #1
   1e106:	2b00      	cmp	r3, #0
   1e108:	60a3      	str	r3, [r4, #8]
   1e10a:	da04      	bge.n	1e116 <_fwrite_r+0x4a>
   1e10c:	69a2      	ldr	r2, [r4, #24]
   1e10e:	4293      	cmp	r3, r2
   1e110:	db19      	blt.n	1e146 <_fwrite_r+0x7a>
   1e112:	290a      	cmp	r1, #10
   1e114:	d017      	beq.n	1e146 <_fwrite_r+0x7a>
   1e116:	6823      	ldr	r3, [r4, #0]
   1e118:	1c5a      	adds	r2, r3, #1
   1e11a:	6022      	str	r2, [r4, #0]
   1e11c:	7019      	strb	r1, [r3, #0]
   1e11e:	3501      	adds	r5, #1
   1e120:	e7eb      	b.n	1e0fa <_fwrite_r+0x2e>
   1e122:	4b0f      	ldr	r3, [pc, #60]	; (1e160 <_fwrite_r+0x94>)
   1e124:	429c      	cmp	r4, r3
   1e126:	d101      	bne.n	1e12c <_fwrite_r+0x60>
   1e128:	68b4      	ldr	r4, [r6, #8]
   1e12a:	e7e0      	b.n	1e0ee <_fwrite_r+0x22>
   1e12c:	4b0d      	ldr	r3, [pc, #52]	; (1e164 <_fwrite_r+0x98>)
   1e12e:	429c      	cmp	r4, r3
   1e130:	bf08      	it	eq
   1e132:	68f4      	ldreq	r4, [r6, #12]
   1e134:	e7db      	b.n	1e0ee <_fwrite_r+0x22>
   1e136:	4621      	mov	r1, r4
   1e138:	4630      	mov	r0, r6
   1e13a:	f003 fa2f 	bl	2159c <__swsetup_r>
   1e13e:	2800      	cmp	r0, #0
   1e140:	d0da      	beq.n	1e0f8 <_fwrite_r+0x2c>
   1e142:	2500      	movs	r5, #0
   1e144:	e005      	b.n	1e152 <_fwrite_r+0x86>
   1e146:	4622      	mov	r2, r4
   1e148:	4630      	mov	r0, r6
   1e14a:	f003 f9b5 	bl	214b8 <__swbuf_r>
   1e14e:	3001      	adds	r0, #1
   1e150:	d1e5      	bne.n	1e11e <_fwrite_r+0x52>
   1e152:	fbb5 f0f7 	udiv	r0, r5, r7
   1e156:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e15a:	bf00      	nop
   1e15c:	00027364 	.word	0x00027364
   1e160:	00027384 	.word	0x00027384
   1e164:	00027344 	.word	0x00027344

0001e168 <fwrite>:
fwrite():
   1e168:	b507      	push	{r0, r1, r2, lr}
   1e16a:	9300      	str	r3, [sp, #0]
   1e16c:	4613      	mov	r3, r2
   1e16e:	460a      	mov	r2, r1
   1e170:	4601      	mov	r1, r0
   1e172:	4803      	ldr	r0, [pc, #12]	; (1e180 <fwrite+0x18>)
   1e174:	6800      	ldr	r0, [r0, #0]
   1e176:	f7ff ffa9 	bl	1e0cc <_fwrite_r>
   1e17a:	b003      	add	sp, #12
   1e17c:	f85d fb04 	ldr.w	pc, [sp], #4
   1e180:	2007c0e4 	.word	0x2007c0e4

0001e184 <__libc_init_array>:
__libc_init_array():
   1e184:	b570      	push	{r4, r5, r6, lr}
   1e186:	2500      	movs	r5, #0
   1e188:	4e0c      	ldr	r6, [pc, #48]	; (1e1bc <__libc_init_array+0x38>)
   1e18a:	4c0d      	ldr	r4, [pc, #52]	; (1e1c0 <__libc_init_array+0x3c>)
   1e18c:	1ba4      	subs	r4, r4, r6
   1e18e:	10a4      	asrs	r4, r4, #2
   1e190:	42a5      	cmp	r5, r4
   1e192:	d109      	bne.n	1e1a8 <__libc_init_array+0x24>
   1e194:	f7f8 fccc 	bl	16b30 <_init>
   1e198:	2500      	movs	r5, #0
   1e19a:	4e0a      	ldr	r6, [pc, #40]	; (1e1c4 <__libc_init_array+0x40>)
   1e19c:	4c0a      	ldr	r4, [pc, #40]	; (1e1c8 <__libc_init_array+0x44>)
   1e19e:	1ba4      	subs	r4, r4, r6
   1e1a0:	10a4      	asrs	r4, r4, #2
   1e1a2:	42a5      	cmp	r5, r4
   1e1a4:	d105      	bne.n	1e1b2 <__libc_init_array+0x2e>
   1e1a6:	bd70      	pop	{r4, r5, r6, pc}
   1e1a8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1e1ac:	4798      	blx	r3
   1e1ae:	3501      	adds	r5, #1
   1e1b0:	e7ee      	b.n	1e190 <__libc_init_array+0xc>
   1e1b2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1e1b6:	4798      	blx	r3
   1e1b8:	3501      	adds	r5, #1
   1e1ba:	e7f2      	b.n	1e1a2 <__libc_init_array+0x1e>
   1e1bc:	000277d8 	.word	0x000277d8
   1e1c0:	000277d8 	.word	0x000277d8
   1e1c4:	000277d8 	.word	0x000277d8
   1e1c8:	000277dc 	.word	0x000277dc

0001e1cc <localtime>:
localtime():
   1e1cc:	b538      	push	{r3, r4, r5, lr}
   1e1ce:	4b07      	ldr	r3, [pc, #28]	; (1e1ec <localtime+0x20>)
   1e1d0:	4605      	mov	r5, r0
   1e1d2:	681c      	ldr	r4, [r3, #0]
   1e1d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1e1d6:	b91b      	cbnz	r3, 1e1e0 <localtime+0x14>
   1e1d8:	2024      	movs	r0, #36	; 0x24
   1e1da:	f000 f963 	bl	1e4a4 <malloc>
   1e1de:	63e0      	str	r0, [r4, #60]	; 0x3c
   1e1e0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1e1e2:	4628      	mov	r0, r5
   1e1e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1e1e8:	f000 b802 	b.w	1e1f0 <localtime_r>
   1e1ec:	2007c0e4 	.word	0x2007c0e4

0001e1f0 <localtime_r>:
localtime_r():
   1e1f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e1f4:	460c      	mov	r4, r1
   1e1f6:	4680      	mov	r8, r0
   1e1f8:	f004 fcbe 	bl	22b78 <__gettzinfo>
   1e1fc:	4621      	mov	r1, r4
   1e1fe:	4607      	mov	r7, r0
   1e200:	4640      	mov	r0, r8
   1e202:	f004 fcbd 	bl	22b80 <gmtime_r>
   1e206:	6946      	ldr	r6, [r0, #20]
   1e208:	4604      	mov	r4, r0
   1e20a:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1e20e:	07b3      	lsls	r3, r6, #30
   1e210:	d105      	bne.n	1e21e <localtime_r+0x2e>
   1e212:	2264      	movs	r2, #100	; 0x64
   1e214:	fb96 f3f2 	sdiv	r3, r6, r2
   1e218:	fb02 6313 	mls	r3, r2, r3, r6
   1e21c:	b9fb      	cbnz	r3, 1e25e <localtime_r+0x6e>
   1e21e:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e222:	fb96 f5f3 	sdiv	r5, r6, r3
   1e226:	fb03 6515 	mls	r5, r3, r5, r6
   1e22a:	fab5 f585 	clz	r5, r5
   1e22e:	096d      	lsrs	r5, r5, #5
   1e230:	2230      	movs	r2, #48	; 0x30
   1e232:	4b5f      	ldr	r3, [pc, #380]	; (1e3b0 <localtime_r+0x1c0>)
   1e234:	fb02 3505 	mla	r5, r2, r5, r3
   1e238:	f002 ff4c 	bl	210d4 <__tz_lock>
   1e23c:	f002 ff4c 	bl	210d8 <_tzset_unlocked>
   1e240:	4b5c      	ldr	r3, [pc, #368]	; (1e3b4 <localtime_r+0x1c4>)
   1e242:	681b      	ldr	r3, [r3, #0]
   1e244:	b1e3      	cbz	r3, 1e280 <localtime_r+0x90>
   1e246:	687b      	ldr	r3, [r7, #4]
   1e248:	429e      	cmp	r6, r3
   1e24a:	d10a      	bne.n	1e262 <localtime_r+0x72>
   1e24c:	6839      	ldr	r1, [r7, #0]
   1e24e:	f8d8 3000 	ldr.w	r3, [r8]
   1e252:	69fa      	ldr	r2, [r7, #28]
   1e254:	b969      	cbnz	r1, 1e272 <localtime_r+0x82>
   1e256:	4293      	cmp	r3, r2
   1e258:	db0d      	blt.n	1e276 <localtime_r+0x86>
   1e25a:	2301      	movs	r3, #1
   1e25c:	e010      	b.n	1e280 <localtime_r+0x90>
   1e25e:	2501      	movs	r5, #1
   1e260:	e7e6      	b.n	1e230 <localtime_r+0x40>
   1e262:	4630      	mov	r0, r6
   1e264:	f002 fe8e 	bl	20f84 <__tzcalc_limits>
   1e268:	2800      	cmp	r0, #0
   1e26a:	d1ef      	bne.n	1e24c <localtime_r+0x5c>
   1e26c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e270:	e006      	b.n	1e280 <localtime_r+0x90>
   1e272:	4293      	cmp	r3, r2
   1e274:	db54      	blt.n	1e320 <localtime_r+0x130>
   1e276:	6bba      	ldr	r2, [r7, #56]	; 0x38
   1e278:	4293      	cmp	r3, r2
   1e27a:	bfac      	ite	ge
   1e27c:	2300      	movge	r3, #0
   1e27e:	2301      	movlt	r3, #1
   1e280:	6223      	str	r3, [r4, #32]
   1e282:	6a23      	ldr	r3, [r4, #32]
   1e284:	203c      	movs	r0, #60	; 0x3c
   1e286:	2b01      	cmp	r3, #1
   1e288:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   1e28c:	bf0c      	ite	eq
   1e28e:	6bf9      	ldreq	r1, [r7, #60]	; 0x3c
   1e290:	6a39      	ldrne	r1, [r7, #32]
   1e292:	fb91 f6f3 	sdiv	r6, r1, r3
   1e296:	fb03 1316 	mls	r3, r3, r6, r1
   1e29a:	fb93 f2f0 	sdiv	r2, r3, r0
   1e29e:	fb00 3012 	mls	r0, r0, r2, r3
   1e2a2:	6861      	ldr	r1, [r4, #4]
   1e2a4:	6823      	ldr	r3, [r4, #0]
   1e2a6:	1a89      	subs	r1, r1, r2
   1e2a8:	68a2      	ldr	r2, [r4, #8]
   1e2aa:	1a1b      	subs	r3, r3, r0
   1e2ac:	1b92      	subs	r2, r2, r6
   1e2ae:	2b3b      	cmp	r3, #59	; 0x3b
   1e2b0:	6023      	str	r3, [r4, #0]
   1e2b2:	6061      	str	r1, [r4, #4]
   1e2b4:	60a2      	str	r2, [r4, #8]
   1e2b6:	dd35      	ble.n	1e324 <localtime_r+0x134>
   1e2b8:	3101      	adds	r1, #1
   1e2ba:	6061      	str	r1, [r4, #4]
   1e2bc:	3b3c      	subs	r3, #60	; 0x3c
   1e2be:	6023      	str	r3, [r4, #0]
   1e2c0:	6863      	ldr	r3, [r4, #4]
   1e2c2:	2b3b      	cmp	r3, #59	; 0x3b
   1e2c4:	dd34      	ble.n	1e330 <localtime_r+0x140>
   1e2c6:	3201      	adds	r2, #1
   1e2c8:	60a2      	str	r2, [r4, #8]
   1e2ca:	3b3c      	subs	r3, #60	; 0x3c
   1e2cc:	6063      	str	r3, [r4, #4]
   1e2ce:	68a3      	ldr	r3, [r4, #8]
   1e2d0:	2b17      	cmp	r3, #23
   1e2d2:	dd33      	ble.n	1e33c <localtime_r+0x14c>
   1e2d4:	69e2      	ldr	r2, [r4, #28]
   1e2d6:	3b18      	subs	r3, #24
   1e2d8:	3201      	adds	r2, #1
   1e2da:	61e2      	str	r2, [r4, #28]
   1e2dc:	69a2      	ldr	r2, [r4, #24]
   1e2de:	60a3      	str	r3, [r4, #8]
   1e2e0:	3201      	adds	r2, #1
   1e2e2:	2a06      	cmp	r2, #6
   1e2e4:	bfc8      	it	gt
   1e2e6:	2200      	movgt	r2, #0
   1e2e8:	61a2      	str	r2, [r4, #24]
   1e2ea:	68e2      	ldr	r2, [r4, #12]
   1e2ec:	6923      	ldr	r3, [r4, #16]
   1e2ee:	3201      	adds	r2, #1
   1e2f0:	60e2      	str	r2, [r4, #12]
   1e2f2:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   1e2f6:	428a      	cmp	r2, r1
   1e2f8:	dd0d      	ble.n	1e316 <localtime_r+0x126>
   1e2fa:	3301      	adds	r3, #1
   1e2fc:	2b0c      	cmp	r3, #12
   1e2fe:	eba2 0201 	sub.w	r2, r2, r1
   1e302:	60e2      	str	r2, [r4, #12]
   1e304:	bf05      	ittet	eq
   1e306:	2200      	moveq	r2, #0
   1e308:	6963      	ldreq	r3, [r4, #20]
   1e30a:	6123      	strne	r3, [r4, #16]
   1e30c:	3301      	addeq	r3, #1
   1e30e:	bf02      	ittt	eq
   1e310:	6122      	streq	r2, [r4, #16]
   1e312:	6163      	streq	r3, [r4, #20]
   1e314:	61e2      	streq	r2, [r4, #28]
   1e316:	f002 fede 	bl	210d6 <__tz_unlock>
   1e31a:	4620      	mov	r0, r4
   1e31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e320:	2300      	movs	r3, #0
   1e322:	e7ad      	b.n	1e280 <localtime_r+0x90>
   1e324:	2b00      	cmp	r3, #0
   1e326:	dacb      	bge.n	1e2c0 <localtime_r+0xd0>
   1e328:	3901      	subs	r1, #1
   1e32a:	6061      	str	r1, [r4, #4]
   1e32c:	333c      	adds	r3, #60	; 0x3c
   1e32e:	e7c6      	b.n	1e2be <localtime_r+0xce>
   1e330:	2b00      	cmp	r3, #0
   1e332:	dacc      	bge.n	1e2ce <localtime_r+0xde>
   1e334:	3a01      	subs	r2, #1
   1e336:	60a2      	str	r2, [r4, #8]
   1e338:	333c      	adds	r3, #60	; 0x3c
   1e33a:	e7c7      	b.n	1e2cc <localtime_r+0xdc>
   1e33c:	2b00      	cmp	r3, #0
   1e33e:	daea      	bge.n	1e316 <localtime_r+0x126>
   1e340:	69e2      	ldr	r2, [r4, #28]
   1e342:	3318      	adds	r3, #24
   1e344:	3a01      	subs	r2, #1
   1e346:	61e2      	str	r2, [r4, #28]
   1e348:	69a2      	ldr	r2, [r4, #24]
   1e34a:	60a3      	str	r3, [r4, #8]
   1e34c:	3a01      	subs	r2, #1
   1e34e:	bf48      	it	mi
   1e350:	2206      	movmi	r2, #6
   1e352:	61a2      	str	r2, [r4, #24]
   1e354:	68e2      	ldr	r2, [r4, #12]
   1e356:	3a01      	subs	r2, #1
   1e358:	60e2      	str	r2, [r4, #12]
   1e35a:	2a00      	cmp	r2, #0
   1e35c:	d1db      	bne.n	1e316 <localtime_r+0x126>
   1e35e:	6923      	ldr	r3, [r4, #16]
   1e360:	3b01      	subs	r3, #1
   1e362:	d405      	bmi.n	1e370 <localtime_r+0x180>
   1e364:	6123      	str	r3, [r4, #16]
   1e366:	6923      	ldr	r3, [r4, #16]
   1e368:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
   1e36c:	60e3      	str	r3, [r4, #12]
   1e36e:	e7d2      	b.n	1e316 <localtime_r+0x126>
   1e370:	230b      	movs	r3, #11
   1e372:	6123      	str	r3, [r4, #16]
   1e374:	6963      	ldr	r3, [r4, #20]
   1e376:	1e5a      	subs	r2, r3, #1
   1e378:	f012 0f03 	tst.w	r2, #3
   1e37c:	6162      	str	r2, [r4, #20]
   1e37e:	f203 726b 	addw	r2, r3, #1899	; 0x76b
   1e382:	d105      	bne.n	1e390 <localtime_r+0x1a0>
   1e384:	2164      	movs	r1, #100	; 0x64
   1e386:	fb92 f3f1 	sdiv	r3, r2, r1
   1e38a:	fb01 2313 	mls	r3, r1, r3, r2
   1e38e:	b963      	cbnz	r3, 1e3aa <localtime_r+0x1ba>
   1e390:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e394:	fb92 f3f1 	sdiv	r3, r2, r1
   1e398:	fb01 2313 	mls	r3, r1, r3, r2
   1e39c:	fab3 f383 	clz	r3, r3
   1e3a0:	095b      	lsrs	r3, r3, #5
   1e3a2:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1e3a6:	61e3      	str	r3, [r4, #28]
   1e3a8:	e7dd      	b.n	1e366 <localtime_r+0x176>
   1e3aa:	2301      	movs	r3, #1
   1e3ac:	e7f9      	b.n	1e3a2 <localtime_r+0x1b2>
   1e3ae:	bf00      	nop
   1e3b0:	00027410 	.word	0x00027410
   1e3b4:	2007c8f0 	.word	0x2007c8f0

0001e3b8 <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   1e3b8:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   1e3bc:	4770      	bx	lr
   1e3be:	Address 0x000000000001e3be is out of bounds.


0001e3c0 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   1e3c0:	4b04      	ldr	r3, [pc, #16]	; (1e3d4 <__locale_ctype_ptr+0x14>)
   1e3c2:	4a05      	ldr	r2, [pc, #20]	; (1e3d8 <__locale_ctype_ptr+0x18>)
   1e3c4:	681b      	ldr	r3, [r3, #0]
   1e3c6:	6a1b      	ldr	r3, [r3, #32]
   1e3c8:	2b00      	cmp	r3, #0
   1e3ca:	bf08      	it	eq
   1e3cc:	4613      	moveq	r3, r2
   1e3ce:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   1e3d2:	4770      	bx	lr
   1e3d4:	2007c0e4 	.word	0x2007c0e4
   1e3d8:	2007c148 	.word	0x2007c148

0001e3dc <__swhatbuf_r>:
__swhatbuf_r():
   1e3dc:	b570      	push	{r4, r5, r6, lr}
   1e3de:	460e      	mov	r6, r1
   1e3e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1e3e4:	b090      	sub	sp, #64	; 0x40
   1e3e6:	2900      	cmp	r1, #0
   1e3e8:	4614      	mov	r4, r2
   1e3ea:	461d      	mov	r5, r3
   1e3ec:	da07      	bge.n	1e3fe <__swhatbuf_r+0x22>
   1e3ee:	2300      	movs	r3, #0
   1e3f0:	602b      	str	r3, [r5, #0]
   1e3f2:	89b3      	ldrh	r3, [r6, #12]
   1e3f4:	061a      	lsls	r2, r3, #24
   1e3f6:	d410      	bmi.n	1e41a <__swhatbuf_r+0x3e>
   1e3f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1e3fc:	e00e      	b.n	1e41c <__swhatbuf_r+0x40>
   1e3fe:	aa01      	add	r2, sp, #4
   1e400:	f004 f830 	bl	22464 <_fstat_r>
   1e404:	2800      	cmp	r0, #0
   1e406:	dbf2      	blt.n	1e3ee <__swhatbuf_r+0x12>
   1e408:	9a02      	ldr	r2, [sp, #8]
   1e40a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   1e40e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   1e412:	425a      	negs	r2, r3
   1e414:	415a      	adcs	r2, r3
   1e416:	602a      	str	r2, [r5, #0]
   1e418:	e7ee      	b.n	1e3f8 <__swhatbuf_r+0x1c>
   1e41a:	2340      	movs	r3, #64	; 0x40
   1e41c:	2000      	movs	r0, #0
   1e41e:	6023      	str	r3, [r4, #0]
   1e420:	b010      	add	sp, #64	; 0x40
   1e422:	bd70      	pop	{r4, r5, r6, pc}

0001e424 <__smakebuf_r>:
__smakebuf_r():
   1e424:	898b      	ldrh	r3, [r1, #12]
   1e426:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1e428:	079d      	lsls	r5, r3, #30
   1e42a:	4606      	mov	r6, r0
   1e42c:	460c      	mov	r4, r1
   1e42e:	d507      	bpl.n	1e440 <__smakebuf_r+0x1c>
   1e430:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1e434:	6023      	str	r3, [r4, #0]
   1e436:	6123      	str	r3, [r4, #16]
   1e438:	2301      	movs	r3, #1
   1e43a:	6163      	str	r3, [r4, #20]
   1e43c:	b002      	add	sp, #8
   1e43e:	bd70      	pop	{r4, r5, r6, pc}
   1e440:	ab01      	add	r3, sp, #4
   1e442:	466a      	mov	r2, sp
   1e444:	f7ff ffca 	bl	1e3dc <__swhatbuf_r>
   1e448:	9900      	ldr	r1, [sp, #0]
   1e44a:	4605      	mov	r5, r0
   1e44c:	4630      	mov	r0, r6
   1e44e:	f000 fb87 	bl	1eb60 <_malloc_r>
   1e452:	b948      	cbnz	r0, 1e468 <__smakebuf_r+0x44>
   1e454:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1e458:	059a      	lsls	r2, r3, #22
   1e45a:	d4ef      	bmi.n	1e43c <__smakebuf_r+0x18>
   1e45c:	f023 0303 	bic.w	r3, r3, #3
   1e460:	f043 0302 	orr.w	r3, r3, #2
   1e464:	81a3      	strh	r3, [r4, #12]
   1e466:	e7e3      	b.n	1e430 <__smakebuf_r+0xc>
   1e468:	4b0d      	ldr	r3, [pc, #52]	; (1e4a0 <__smakebuf_r+0x7c>)
   1e46a:	62b3      	str	r3, [r6, #40]	; 0x28
   1e46c:	89a3      	ldrh	r3, [r4, #12]
   1e46e:	6020      	str	r0, [r4, #0]
   1e470:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1e474:	81a3      	strh	r3, [r4, #12]
   1e476:	9b00      	ldr	r3, [sp, #0]
   1e478:	6120      	str	r0, [r4, #16]
   1e47a:	6163      	str	r3, [r4, #20]
   1e47c:	9b01      	ldr	r3, [sp, #4]
   1e47e:	b15b      	cbz	r3, 1e498 <__smakebuf_r+0x74>
   1e480:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1e484:	4630      	mov	r0, r6
   1e486:	f004 fc13 	bl	22cb0 <_isatty_r>
   1e48a:	b128      	cbz	r0, 1e498 <__smakebuf_r+0x74>
   1e48c:	89a3      	ldrh	r3, [r4, #12]
   1e48e:	f023 0303 	bic.w	r3, r3, #3
   1e492:	f043 0301 	orr.w	r3, r3, #1
   1e496:	81a3      	strh	r3, [r4, #12]
   1e498:	89a3      	ldrh	r3, [r4, #12]
   1e49a:	431d      	orrs	r5, r3
   1e49c:	81a5      	strh	r5, [r4, #12]
   1e49e:	e7cd      	b.n	1e43c <__smakebuf_r+0x18>
   1e4a0:	0001dd49 	.word	0x0001dd49

0001e4a4 <malloc>:
malloc():
   1e4a4:	4b02      	ldr	r3, [pc, #8]	; (1e4b0 <malloc+0xc>)
   1e4a6:	4601      	mov	r1, r0
   1e4a8:	6818      	ldr	r0, [r3, #0]
   1e4aa:	f000 bb59 	b.w	1eb60 <_malloc_r>
   1e4ae:	bf00      	nop
   1e4b0:	2007c0e4 	.word	0x2007c0e4

0001e4b4 <free>:
free():
   1e4b4:	4b02      	ldr	r3, [pc, #8]	; (1e4c0 <free+0xc>)
   1e4b6:	4601      	mov	r1, r0
   1e4b8:	6818      	ldr	r0, [r3, #0]
   1e4ba:	f000 bad3 	b.w	1ea64 <_free_r>
   1e4be:	bf00      	nop
   1e4c0:	2007c0e4 	.word	0x2007c0e4

0001e4c4 <__ascii_mbtowc>:
__ascii_mbtowc():
   1e4c4:	b082      	sub	sp, #8
   1e4c6:	b901      	cbnz	r1, 1e4ca <__ascii_mbtowc+0x6>
   1e4c8:	a901      	add	r1, sp, #4
   1e4ca:	b142      	cbz	r2, 1e4de <__ascii_mbtowc+0x1a>
   1e4cc:	b14b      	cbz	r3, 1e4e2 <__ascii_mbtowc+0x1e>
   1e4ce:	7813      	ldrb	r3, [r2, #0]
   1e4d0:	600b      	str	r3, [r1, #0]
   1e4d2:	7812      	ldrb	r2, [r2, #0]
   1e4d4:	1c10      	adds	r0, r2, #0
   1e4d6:	bf18      	it	ne
   1e4d8:	2001      	movne	r0, #1
   1e4da:	b002      	add	sp, #8
   1e4dc:	4770      	bx	lr
   1e4de:	4610      	mov	r0, r2
   1e4e0:	e7fb      	b.n	1e4da <__ascii_mbtowc+0x16>
   1e4e2:	f06f 0001 	mvn.w	r0, #1
   1e4e6:	e7f8      	b.n	1e4da <__ascii_mbtowc+0x16>

0001e4e8 <memchr>:
memchr():
   1e4e8:	b510      	push	{r4, lr}
   1e4ea:	b2c9      	uxtb	r1, r1
   1e4ec:	4402      	add	r2, r0
   1e4ee:	4290      	cmp	r0, r2
   1e4f0:	4603      	mov	r3, r0
   1e4f2:	d101      	bne.n	1e4f8 <memchr+0x10>
   1e4f4:	2000      	movs	r0, #0
   1e4f6:	bd10      	pop	{r4, pc}
   1e4f8:	781c      	ldrb	r4, [r3, #0]
   1e4fa:	3001      	adds	r0, #1
   1e4fc:	428c      	cmp	r4, r1
   1e4fe:	d1f6      	bne.n	1e4ee <memchr+0x6>
   1e500:	4618      	mov	r0, r3
   1e502:	bd10      	pop	{r4, pc}

0001e504 <memcmp>:
memcmp():
   1e504:	b510      	push	{r4, lr}
   1e506:	3901      	subs	r1, #1
   1e508:	4402      	add	r2, r0
   1e50a:	4290      	cmp	r0, r2
   1e50c:	d101      	bne.n	1e512 <memcmp+0xe>
   1e50e:	2000      	movs	r0, #0
   1e510:	bd10      	pop	{r4, pc}
   1e512:	f810 3b01 	ldrb.w	r3, [r0], #1
   1e516:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1e51a:	42a3      	cmp	r3, r4
   1e51c:	d0f5      	beq.n	1e50a <memcmp+0x6>
   1e51e:	1b18      	subs	r0, r3, r4
   1e520:	bd10      	pop	{r4, pc}

0001e522 <memcpy>:
memcpy():
   1e522:	b510      	push	{r4, lr}
   1e524:	1e43      	subs	r3, r0, #1
   1e526:	440a      	add	r2, r1
   1e528:	4291      	cmp	r1, r2
   1e52a:	d100      	bne.n	1e52e <memcpy+0xc>
   1e52c:	bd10      	pop	{r4, pc}
   1e52e:	f811 4b01 	ldrb.w	r4, [r1], #1
   1e532:	f803 4f01 	strb.w	r4, [r3, #1]!
   1e536:	e7f7      	b.n	1e528 <memcpy+0x6>

0001e538 <memmove>:
memmove():
   1e538:	4288      	cmp	r0, r1
   1e53a:	b510      	push	{r4, lr}
   1e53c:	eb01 0302 	add.w	r3, r1, r2
   1e540:	d803      	bhi.n	1e54a <memmove+0x12>
   1e542:	1e42      	subs	r2, r0, #1
   1e544:	4299      	cmp	r1, r3
   1e546:	d10c      	bne.n	1e562 <memmove+0x2a>
   1e548:	bd10      	pop	{r4, pc}
   1e54a:	4298      	cmp	r0, r3
   1e54c:	d2f9      	bcs.n	1e542 <memmove+0xa>
   1e54e:	1881      	adds	r1, r0, r2
   1e550:	1ad2      	subs	r2, r2, r3
   1e552:	42d3      	cmn	r3, r2
   1e554:	d100      	bne.n	1e558 <memmove+0x20>
   1e556:	bd10      	pop	{r4, pc}
   1e558:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   1e55c:	f801 4d01 	strb.w	r4, [r1, #-1]!
   1e560:	e7f7      	b.n	1e552 <memmove+0x1a>
   1e562:	f811 4b01 	ldrb.w	r4, [r1], #1
   1e566:	f802 4f01 	strb.w	r4, [r2, #1]!
   1e56a:	e7eb      	b.n	1e544 <memmove+0xc>

0001e56c <memset>:
memset():
   1e56c:	4603      	mov	r3, r0
   1e56e:	4402      	add	r2, r0
   1e570:	4293      	cmp	r3, r2
   1e572:	d100      	bne.n	1e576 <memset+0xa>
   1e574:	4770      	bx	lr
   1e576:	f803 1b01 	strb.w	r1, [r3], #1
   1e57a:	e7f9      	b.n	1e570 <memset+0x4>

0001e57c <validate_structure>:
validate_structure():
   1e57c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1e57e:	6801      	ldr	r1, [r0, #0]
   1e580:	4604      	mov	r4, r0
   1e582:	293b      	cmp	r1, #59	; 0x3b
   1e584:	d911      	bls.n	1e5aa <validate_structure+0x2e>
   1e586:	223c      	movs	r2, #60	; 0x3c
   1e588:	4668      	mov	r0, sp
   1e58a:	f003 f8c1 	bl	21710 <div>
   1e58e:	9a01      	ldr	r2, [sp, #4]
   1e590:	6863      	ldr	r3, [r4, #4]
   1e592:	9900      	ldr	r1, [sp, #0]
   1e594:	2a00      	cmp	r2, #0
   1e596:	440b      	add	r3, r1
   1e598:	6063      	str	r3, [r4, #4]
   1e59a:	bfbb      	ittet	lt
   1e59c:	323c      	addlt	r2, #60	; 0x3c
   1e59e:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5a2:	6022      	strge	r2, [r4, #0]
   1e5a4:	6022      	strlt	r2, [r4, #0]
   1e5a6:	bfb8      	it	lt
   1e5a8:	6063      	strlt	r3, [r4, #4]
   1e5aa:	6861      	ldr	r1, [r4, #4]
   1e5ac:	293b      	cmp	r1, #59	; 0x3b
   1e5ae:	d911      	bls.n	1e5d4 <validate_structure+0x58>
   1e5b0:	223c      	movs	r2, #60	; 0x3c
   1e5b2:	4668      	mov	r0, sp
   1e5b4:	f003 f8ac 	bl	21710 <div>
   1e5b8:	9a01      	ldr	r2, [sp, #4]
   1e5ba:	68a3      	ldr	r3, [r4, #8]
   1e5bc:	9900      	ldr	r1, [sp, #0]
   1e5be:	2a00      	cmp	r2, #0
   1e5c0:	440b      	add	r3, r1
   1e5c2:	60a3      	str	r3, [r4, #8]
   1e5c4:	bfbb      	ittet	lt
   1e5c6:	323c      	addlt	r2, #60	; 0x3c
   1e5c8:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5cc:	6062      	strge	r2, [r4, #4]
   1e5ce:	6062      	strlt	r2, [r4, #4]
   1e5d0:	bfb8      	it	lt
   1e5d2:	60a3      	strlt	r3, [r4, #8]
   1e5d4:	68a1      	ldr	r1, [r4, #8]
   1e5d6:	2917      	cmp	r1, #23
   1e5d8:	d911      	bls.n	1e5fe <validate_structure+0x82>
   1e5da:	2218      	movs	r2, #24
   1e5dc:	4668      	mov	r0, sp
   1e5de:	f003 f897 	bl	21710 <div>
   1e5e2:	9a01      	ldr	r2, [sp, #4]
   1e5e4:	68e3      	ldr	r3, [r4, #12]
   1e5e6:	9900      	ldr	r1, [sp, #0]
   1e5e8:	2a00      	cmp	r2, #0
   1e5ea:	440b      	add	r3, r1
   1e5ec:	60e3      	str	r3, [r4, #12]
   1e5ee:	bfbb      	ittet	lt
   1e5f0:	3218      	addlt	r2, #24
   1e5f2:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5f6:	60a2      	strge	r2, [r4, #8]
   1e5f8:	60a2      	strlt	r2, [r4, #8]
   1e5fa:	bfb8      	it	lt
   1e5fc:	60e3      	strlt	r3, [r4, #12]
   1e5fe:	6921      	ldr	r1, [r4, #16]
   1e600:	290b      	cmp	r1, #11
   1e602:	d911      	bls.n	1e628 <validate_structure+0xac>
   1e604:	220c      	movs	r2, #12
   1e606:	4668      	mov	r0, sp
   1e608:	f003 f882 	bl	21710 <div>
   1e60c:	9a01      	ldr	r2, [sp, #4]
   1e60e:	6963      	ldr	r3, [r4, #20]
   1e610:	9900      	ldr	r1, [sp, #0]
   1e612:	2a00      	cmp	r2, #0
   1e614:	440b      	add	r3, r1
   1e616:	6163      	str	r3, [r4, #20]
   1e618:	bfbb      	ittet	lt
   1e61a:	320c      	addlt	r2, #12
   1e61c:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e620:	6122      	strge	r2, [r4, #16]
   1e622:	6122      	strlt	r2, [r4, #16]
   1e624:	bfb8      	it	lt
   1e626:	6163      	strlt	r3, [r4, #20]
   1e628:	6963      	ldr	r3, [r4, #20]
   1e62a:	0799      	lsls	r1, r3, #30
   1e62c:	d143      	bne.n	1e6b6 <validate_structure+0x13a>
   1e62e:	2164      	movs	r1, #100	; 0x64
   1e630:	fb93 f2f1 	sdiv	r2, r3, r1
   1e634:	fb01 3212 	mls	r2, r1, r2, r3
   1e638:	2a00      	cmp	r2, #0
   1e63a:	d13e      	bne.n	1e6ba <validate_structure+0x13e>
   1e63c:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e640:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1e644:	fb93 f2f1 	sdiv	r2, r3, r1
   1e648:	fb01 3312 	mls	r3, r1, r2, r3
   1e64c:	2b00      	cmp	r3, #0
   1e64e:	bf14      	ite	ne
   1e650:	231c      	movne	r3, #28
   1e652:	231d      	moveq	r3, #29
   1e654:	68e2      	ldr	r2, [r4, #12]
   1e656:	2a00      	cmp	r2, #0
   1e658:	dd31      	ble.n	1e6be <validate_structure+0x142>
   1e65a:	2602      	movs	r6, #2
   1e65c:	f04f 0e00 	mov.w	lr, #0
   1e660:	2064      	movs	r0, #100	; 0x64
   1e662:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1e666:	4f34      	ldr	r7, [pc, #208]	; (1e738 <validate_structure+0x1bc>)
   1e668:	6921      	ldr	r1, [r4, #16]
   1e66a:	68e2      	ldr	r2, [r4, #12]
   1e66c:	2901      	cmp	r1, #1
   1e66e:	d05d      	beq.n	1e72c <validate_structure+0x1b0>
   1e670:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   1e674:	4562      	cmp	r2, ip
   1e676:	dd2c      	ble.n	1e6d2 <validate_structure+0x156>
   1e678:	3101      	adds	r1, #1
   1e67a:	eba2 020c 	sub.w	r2, r2, ip
   1e67e:	290c      	cmp	r1, #12
   1e680:	60e2      	str	r2, [r4, #12]
   1e682:	6121      	str	r1, [r4, #16]
   1e684:	d1f0      	bne.n	1e668 <validate_structure+0xec>
   1e686:	6963      	ldr	r3, [r4, #20]
   1e688:	f8c4 e010 	str.w	lr, [r4, #16]
   1e68c:	1c5a      	adds	r2, r3, #1
   1e68e:	0791      	lsls	r1, r2, #30
   1e690:	6162      	str	r2, [r4, #20]
   1e692:	d147      	bne.n	1e724 <validate_structure+0x1a8>
   1e694:	fb92 f1f0 	sdiv	r1, r2, r0
   1e698:	fb00 2211 	mls	r2, r0, r1, r2
   1e69c:	2a00      	cmp	r2, #0
   1e69e:	d143      	bne.n	1e728 <validate_structure+0x1ac>
   1e6a0:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1e6a4:	fb93 f2f5 	sdiv	r2, r3, r5
   1e6a8:	fb05 3312 	mls	r3, r5, r2, r3
   1e6ac:	2b00      	cmp	r3, #0
   1e6ae:	bf14      	ite	ne
   1e6b0:	231c      	movne	r3, #28
   1e6b2:	231d      	moveq	r3, #29
   1e6b4:	e7d8      	b.n	1e668 <validate_structure+0xec>
   1e6b6:	231c      	movs	r3, #28
   1e6b8:	e7cc      	b.n	1e654 <validate_structure+0xd8>
   1e6ba:	231d      	movs	r3, #29
   1e6bc:	e7ca      	b.n	1e654 <validate_structure+0xd8>
   1e6be:	260b      	movs	r6, #11
   1e6c0:	2064      	movs	r0, #100	; 0x64
   1e6c2:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1e6c6:	4f1c      	ldr	r7, [pc, #112]	; (1e738 <validate_structure+0x1bc>)
   1e6c8:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1e6cc:	f1be 0f00 	cmp.w	lr, #0
   1e6d0:	dd01      	ble.n	1e6d6 <validate_structure+0x15a>
   1e6d2:	b003      	add	sp, #12
   1e6d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1e6d6:	6921      	ldr	r1, [r4, #16]
   1e6d8:	3901      	subs	r1, #1
   1e6da:	6121      	str	r1, [r4, #16]
   1e6dc:	3101      	adds	r1, #1
   1e6de:	d114      	bne.n	1e70a <validate_structure+0x18e>
   1e6e0:	6963      	ldr	r3, [r4, #20]
   1e6e2:	6126      	str	r6, [r4, #16]
   1e6e4:	1e59      	subs	r1, r3, #1
   1e6e6:	078a      	lsls	r2, r1, #30
   1e6e8:	6161      	str	r1, [r4, #20]
   1e6ea:	d117      	bne.n	1e71c <validate_structure+0x1a0>
   1e6ec:	fb91 f2f0 	sdiv	r2, r1, r0
   1e6f0:	fb00 1112 	mls	r1, r0, r2, r1
   1e6f4:	b9a1      	cbnz	r1, 1e720 <validate_structure+0x1a4>
   1e6f6:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1e6fa:	fb93 f2f5 	sdiv	r2, r3, r5
   1e6fe:	fb05 3312 	mls	r3, r5, r2, r3
   1e702:	2b00      	cmp	r3, #0
   1e704:	bf14      	ite	ne
   1e706:	231c      	movne	r3, #28
   1e708:	231d      	moveq	r3, #29
   1e70a:	6922      	ldr	r2, [r4, #16]
   1e70c:	2a01      	cmp	r2, #1
   1e70e:	bf0c      	ite	eq
   1e710:	461a      	moveq	r2, r3
   1e712:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1e716:	4472      	add	r2, lr
   1e718:	60e2      	str	r2, [r4, #12]
   1e71a:	e7d5      	b.n	1e6c8 <validate_structure+0x14c>
   1e71c:	231c      	movs	r3, #28
   1e71e:	e7f4      	b.n	1e70a <validate_structure+0x18e>
   1e720:	231d      	movs	r3, #29
   1e722:	e7f2      	b.n	1e70a <validate_structure+0x18e>
   1e724:	231c      	movs	r3, #28
   1e726:	e79f      	b.n	1e668 <validate_structure+0xec>
   1e728:	231d      	movs	r3, #29
   1e72a:	e79d      	b.n	1e668 <validate_structure+0xec>
   1e72c:	4293      	cmp	r3, r2
   1e72e:	dad0      	bge.n	1e6d2 <validate_structure+0x156>
   1e730:	1ad2      	subs	r2, r2, r3
   1e732:	60e2      	str	r2, [r4, #12]
   1e734:	6126      	str	r6, [r4, #16]
   1e736:	e797      	b.n	1e668 <validate_structure+0xec>
   1e738:	000273b0 	.word	0x000273b0

0001e73c <mktime>:
mktime():
   1e73c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e740:	4681      	mov	r9, r0
   1e742:	f004 fa19 	bl	22b78 <__gettzinfo>
   1e746:	253c      	movs	r5, #60	; 0x3c
   1e748:	4680      	mov	r8, r0
   1e74a:	4648      	mov	r0, r9
   1e74c:	f7ff ff16 	bl	1e57c <validate_structure>
   1e750:	e899 0081 	ldmia.w	r9, {r0, r7}
   1e754:	fb05 0707 	mla	r7, r5, r7, r0
   1e758:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   1e75c:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1e760:	4ab1      	ldr	r2, [pc, #708]	; (1ea28 <mktime+0x2ec>)
   1e762:	f8d9 400c 	ldr.w	r4, [r9, #12]
   1e766:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1e76a:	f8d9 0008 	ldr.w	r0, [r9, #8]
   1e76e:	3c01      	subs	r4, #1
   1e770:	2b01      	cmp	r3, #1
   1e772:	fb05 7000 	mla	r0, r5, r0, r7
   1e776:	4414      	add	r4, r2
   1e778:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1e77c:	dd11      	ble.n	1e7a2 <mktime+0x66>
   1e77e:	0799      	lsls	r1, r3, #30
   1e780:	d10f      	bne.n	1e7a2 <mktime+0x66>
   1e782:	2164      	movs	r1, #100	; 0x64
   1e784:	fb93 f2f1 	sdiv	r2, r3, r1
   1e788:	fb01 3212 	mls	r2, r1, r2, r3
   1e78c:	b942      	cbnz	r2, 1e7a0 <mktime+0x64>
   1e78e:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e792:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1e796:	fb95 f2f1 	sdiv	r2, r5, r1
   1e79a:	fb01 5212 	mls	r2, r1, r2, r5
   1e79e:	b902      	cbnz	r2, 1e7a2 <mktime+0x66>
   1e7a0:	3401      	adds	r4, #1
   1e7a2:	f644 6120 	movw	r1, #20000	; 0x4e20
   1e7a6:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1e7aa:	3210      	adds	r2, #16
   1e7ac:	428a      	cmp	r2, r1
   1e7ae:	f8c9 401c 	str.w	r4, [r9, #28]
   1e7b2:	f200 812d 	bhi.w	1ea10 <mktime+0x2d4>
   1e7b6:	2b46      	cmp	r3, #70	; 0x46
   1e7b8:	dd70      	ble.n	1e89c <mktime+0x160>
   1e7ba:	2546      	movs	r5, #70	; 0x46
   1e7bc:	f240 176d 	movw	r7, #365	; 0x16d
   1e7c0:	2164      	movs	r1, #100	; 0x64
   1e7c2:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1e7c6:	07aa      	lsls	r2, r5, #30
   1e7c8:	d162      	bne.n	1e890 <mktime+0x154>
   1e7ca:	fb95 f2f1 	sdiv	r2, r5, r1
   1e7ce:	fb01 5212 	mls	r2, r1, r2, r5
   1e7d2:	2a00      	cmp	r2, #0
   1e7d4:	d15f      	bne.n	1e896 <mktime+0x15a>
   1e7d6:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   1e7da:	fb9e f2f6 	sdiv	r2, lr, r6
   1e7de:	fb06 e212 	mls	r2, r6, r2, lr
   1e7e2:	2a00      	cmp	r2, #0
   1e7e4:	bf14      	ite	ne
   1e7e6:	463a      	movne	r2, r7
   1e7e8:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e7ec:	3501      	adds	r5, #1
   1e7ee:	42ab      	cmp	r3, r5
   1e7f0:	4414      	add	r4, r2
   1e7f2:	d1e8      	bne.n	1e7c6 <mktime+0x8a>
   1e7f4:	4f8d      	ldr	r7, [pc, #564]	; (1ea2c <mktime+0x2f0>)
   1e7f6:	fb07 0704 	mla	r7, r7, r4, r0
   1e7fa:	f002 fc6b 	bl	210d4 <__tz_lock>
   1e7fe:	f002 fc6b 	bl	210d8 <_tzset_unlocked>
   1e802:	4b8b      	ldr	r3, [pc, #556]	; (1ea30 <mktime+0x2f4>)
   1e804:	681e      	ldr	r6, [r3, #0]
   1e806:	2e00      	cmp	r6, #0
   1e808:	f000 810a 	beq.w	1ea20 <mktime+0x2e4>
   1e80c:	f8d9 3020 	ldr.w	r3, [r9, #32]
   1e810:	f8d9 0014 	ldr.w	r0, [r9, #20]
   1e814:	2b01      	cmp	r3, #1
   1e816:	bfa8      	it	ge
   1e818:	2301      	movge	r3, #1
   1e81a:	469a      	mov	sl, r3
   1e81c:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1e820:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1e824:	4298      	cmp	r0, r3
   1e826:	d17c      	bne.n	1e922 <mktime+0x1e6>
   1e828:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   1e82c:	f8d8 3020 	ldr.w	r3, [r8, #32]
   1e830:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   1e834:	f8d8 101c 	ldr.w	r1, [r8, #28]
   1e838:	1ad6      	subs	r6, r2, r3
   1e83a:	42b7      	cmp	r7, r6
   1e83c:	eba1 0100 	sub.w	r1, r1, r0
   1e840:	da76      	bge.n	1e930 <mktime+0x1f4>
   1e842:	f8d8 2000 	ldr.w	r2, [r8]
   1e846:	2a00      	cmp	r2, #0
   1e848:	d076      	beq.n	1e938 <mktime+0x1fc>
   1e84a:	428f      	cmp	r7, r1
   1e84c:	f2c0 80e3 	blt.w	1ea16 <mktime+0x2da>
   1e850:	42b7      	cmp	r7, r6
   1e852:	bfac      	ite	ge
   1e854:	2600      	movge	r6, #0
   1e856:	2601      	movlt	r6, #1
   1e858:	f1ba 0f00 	cmp.w	sl, #0
   1e85c:	da72      	bge.n	1e944 <mktime+0x208>
   1e85e:	2e01      	cmp	r6, #1
   1e860:	f040 80de 	bne.w	1ea20 <mktime+0x2e4>
   1e864:	2601      	movs	r6, #1
   1e866:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1e86a:	443d      	add	r5, r7
   1e86c:	f002 fc33 	bl	210d6 <__tz_unlock>
   1e870:	2307      	movs	r3, #7
   1e872:	3404      	adds	r4, #4
   1e874:	fb94 f3f3 	sdiv	r3, r4, r3
   1e878:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1e87c:	1ae4      	subs	r4, r4, r3
   1e87e:	bf48      	it	mi
   1e880:	3407      	addmi	r4, #7
   1e882:	f8c9 6020 	str.w	r6, [r9, #32]
   1e886:	f8c9 4018 	str.w	r4, [r9, #24]
   1e88a:	4628      	mov	r0, r5
   1e88c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e890:	f240 126d 	movw	r2, #365	; 0x16d
   1e894:	e7aa      	b.n	1e7ec <mktime+0xb0>
   1e896:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1e89a:	e7a7      	b.n	1e7ec <mktime+0xb0>
   1e89c:	d01e      	beq.n	1e8dc <mktime+0x1a0>
   1e89e:	2245      	movs	r2, #69	; 0x45
   1e8a0:	f240 176d 	movw	r7, #365	; 0x16d
   1e8a4:	2564      	movs	r5, #100	; 0x64
   1e8a6:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1e8aa:	429a      	cmp	r2, r3
   1e8ac:	dc18      	bgt.n	1e8e0 <mktime+0x1a4>
   1e8ae:	079d      	lsls	r5, r3, #30
   1e8b0:	d131      	bne.n	1e916 <mktime+0x1da>
   1e8b2:	2164      	movs	r1, #100	; 0x64
   1e8b4:	fb93 f2f1 	sdiv	r2, r3, r1
   1e8b8:	fb01 3212 	mls	r2, r1, r2, r3
   1e8bc:	bb72      	cbnz	r2, 1e91c <mktime+0x1e0>
   1e8be:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e8c2:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1e8c6:	fb95 f2f1 	sdiv	r2, r5, r1
   1e8ca:	fb01 5212 	mls	r2, r1, r2, r5
   1e8ce:	2a00      	cmp	r2, #0
   1e8d0:	f240 126d 	movw	r2, #365	; 0x16d
   1e8d4:	bf08      	it	eq
   1e8d6:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e8da:	1aa4      	subs	r4, r4, r2
   1e8dc:	461d      	mov	r5, r3
   1e8de:	e789      	b.n	1e7f4 <mktime+0xb8>
   1e8e0:	0791      	lsls	r1, r2, #30
   1e8e2:	d112      	bne.n	1e90a <mktime+0x1ce>
   1e8e4:	fb92 f1f5 	sdiv	r1, r2, r5
   1e8e8:	fb05 2111 	mls	r1, r5, r1, r2
   1e8ec:	b981      	cbnz	r1, 1e910 <mktime+0x1d4>
   1e8ee:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1e8f2:	fb9e f1f6 	sdiv	r1, lr, r6
   1e8f6:	fb06 e111 	mls	r1, r6, r1, lr
   1e8fa:	2900      	cmp	r1, #0
   1e8fc:	bf14      	ite	ne
   1e8fe:	4639      	movne	r1, r7
   1e900:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1e904:	1a64      	subs	r4, r4, r1
   1e906:	3a01      	subs	r2, #1
   1e908:	e7cf      	b.n	1e8aa <mktime+0x16e>
   1e90a:	f240 116d 	movw	r1, #365	; 0x16d
   1e90e:	e7f9      	b.n	1e904 <mktime+0x1c8>
   1e910:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1e914:	e7f6      	b.n	1e904 <mktime+0x1c8>
   1e916:	f240 126d 	movw	r2, #365	; 0x16d
   1e91a:	e7de      	b.n	1e8da <mktime+0x19e>
   1e91c:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1e920:	e7db      	b.n	1e8da <mktime+0x19e>
   1e922:	f002 fb2f 	bl	20f84 <__tzcalc_limits>
   1e926:	2800      	cmp	r0, #0
   1e928:	f47f af7e 	bne.w	1e828 <mktime+0xec>
   1e92c:	4656      	mov	r6, sl
   1e92e:	e796      	b.n	1e85e <mktime+0x122>
   1e930:	1a12      	subs	r2, r2, r0
   1e932:	4297      	cmp	r7, r2
   1e934:	dbfa      	blt.n	1e92c <mktime+0x1f0>
   1e936:	e784      	b.n	1e842 <mktime+0x106>
   1e938:	428f      	cmp	r7, r1
   1e93a:	db89      	blt.n	1e850 <mktime+0x114>
   1e93c:	f1ba 0f00 	cmp.w	sl, #0
   1e940:	db90      	blt.n	1e864 <mktime+0x128>
   1e942:	2601      	movs	r6, #1
   1e944:	ea8a 0a06 	eor.w	sl, sl, r6
   1e948:	f1ba 0f01 	cmp.w	sl, #1
   1e94c:	d187      	bne.n	1e85e <mktime+0x122>
   1e94e:	1a1b      	subs	r3, r3, r0
   1e950:	b906      	cbnz	r6, 1e954 <mktime+0x218>
   1e952:	425b      	negs	r3, r3
   1e954:	f8d9 2000 	ldr.w	r2, [r9]
   1e958:	4648      	mov	r0, r9
   1e95a:	441a      	add	r2, r3
   1e95c:	f8c9 2000 	str.w	r2, [r9]
   1e960:	441f      	add	r7, r3
   1e962:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   1e966:	f7ff fe09 	bl	1e57c <validate_structure>
   1e96a:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1e96e:	ebb3 030a 	subs.w	r3, r3, sl
   1e972:	f43f af74 	beq.w	1e85e <mktime+0x122>
   1e976:	2b01      	cmp	r3, #1
   1e978:	dc21      	bgt.n	1e9be <mktime+0x282>
   1e97a:	1c98      	adds	r0, r3, #2
   1e97c:	bfd8      	it	le
   1e97e:	2301      	movle	r3, #1
   1e980:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1e984:	441c      	add	r4, r3
   1e986:	189b      	adds	r3, r3, r2
   1e988:	d522      	bpl.n	1e9d0 <mktime+0x294>
   1e98a:	1e6a      	subs	r2, r5, #1
   1e98c:	0791      	lsls	r1, r2, #30
   1e98e:	d119      	bne.n	1e9c4 <mktime+0x288>
   1e990:	2164      	movs	r1, #100	; 0x64
   1e992:	fb92 f3f1 	sdiv	r3, r2, r1
   1e996:	fb01 2313 	mls	r3, r1, r3, r2
   1e99a:	b9b3      	cbnz	r3, 1e9ca <mktime+0x28e>
   1e99c:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e9a0:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1e9a4:	fb95 f3f2 	sdiv	r3, r5, r2
   1e9a8:	fb02 5513 	mls	r5, r2, r3, r5
   1e9ac:	2d00      	cmp	r5, #0
   1e9ae:	f240 136d 	movw	r3, #365	; 0x16d
   1e9b2:	bf18      	it	ne
   1e9b4:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1e9b8:	f8c9 301c 	str.w	r3, [r9, #28]
   1e9bc:	e74f      	b.n	1e85e <mktime+0x122>
   1e9be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e9c2:	e7dd      	b.n	1e980 <mktime+0x244>
   1e9c4:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1e9c8:	e7f6      	b.n	1e9b8 <mktime+0x27c>
   1e9ca:	f240 136d 	movw	r3, #365	; 0x16d
   1e9ce:	e7f3      	b.n	1e9b8 <mktime+0x27c>
   1e9d0:	07aa      	lsls	r2, r5, #30
   1e9d2:	d117      	bne.n	1ea04 <mktime+0x2c8>
   1e9d4:	2164      	movs	r1, #100	; 0x64
   1e9d6:	fb95 f2f1 	sdiv	r2, r5, r1
   1e9da:	fb01 5212 	mls	r2, r1, r2, r5
   1e9de:	b9a2      	cbnz	r2, 1ea0a <mktime+0x2ce>
   1e9e0:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e9e4:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   1e9e8:	fb95 f2f1 	sdiv	r2, r5, r1
   1e9ec:	fb01 5512 	mls	r5, r1, r2, r5
   1e9f0:	2d00      	cmp	r5, #0
   1e9f2:	f240 126d 	movw	r2, #365	; 0x16d
   1e9f6:	bf08      	it	eq
   1e9f8:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e9fc:	429a      	cmp	r2, r3
   1e9fe:	bfd8      	it	le
   1ea00:	1a9b      	suble	r3, r3, r2
   1ea02:	e7d9      	b.n	1e9b8 <mktime+0x27c>
   1ea04:	f240 126d 	movw	r2, #365	; 0x16d
   1ea08:	e7f8      	b.n	1e9fc <mktime+0x2c0>
   1ea0a:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1ea0e:	e7f5      	b.n	1e9fc <mktime+0x2c0>
   1ea10:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1ea14:	e739      	b.n	1e88a <mktime+0x14e>
   1ea16:	f1ba 0f00 	cmp.w	sl, #0
   1ea1a:	f04f 0600 	mov.w	r6, #0
   1ea1e:	da91      	bge.n	1e944 <mktime+0x208>
   1ea20:	f8d8 5020 	ldr.w	r5, [r8, #32]
   1ea24:	443d      	add	r5, r7
   1ea26:	e721      	b.n	1e86c <mktime+0x130>
   1ea28:	000273e0 	.word	0x000273e0
   1ea2c:	00015180 	.word	0x00015180
   1ea30:	2007c8f0 	.word	0x2007c8f0

0001ea34 <mallinfo>:
mallinfo():
   1ea34:	b510      	push	{r4, lr}
   1ea36:	4604      	mov	r4, r0
   1ea38:	4b02      	ldr	r3, [pc, #8]	; (1ea44 <mallinfo+0x10>)
   1ea3a:	6819      	ldr	r1, [r3, #0]
   1ea3c:	f000 f85e 	bl	1eafc <_mallinfo_r>
   1ea40:	4620      	mov	r0, r4
   1ea42:	bd10      	pop	{r4, pc}
   1ea44:	2007c0e4 	.word	0x2007c0e4

0001ea48 <_calloc_r>:
_calloc_r():
   1ea48:	b538      	push	{r3, r4, r5, lr}
   1ea4a:	fb02 f401 	mul.w	r4, r2, r1
   1ea4e:	4621      	mov	r1, r4
   1ea50:	f000 f886 	bl	1eb60 <_malloc_r>
   1ea54:	4605      	mov	r5, r0
   1ea56:	b118      	cbz	r0, 1ea60 <_calloc_r+0x18>
   1ea58:	4622      	mov	r2, r4
   1ea5a:	2100      	movs	r1, #0
   1ea5c:	f7ff fd86 	bl	1e56c <memset>
   1ea60:	4628      	mov	r0, r5
   1ea62:	bd38      	pop	{r3, r4, r5, pc}

0001ea64 <_free_r>:
_free_r():
   1ea64:	b538      	push	{r3, r4, r5, lr}
   1ea66:	4605      	mov	r5, r0
   1ea68:	2900      	cmp	r1, #0
   1ea6a:	d043      	beq.n	1eaf4 <_free_r+0x90>
   1ea6c:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1ea70:	1f0c      	subs	r4, r1, #4
   1ea72:	2b00      	cmp	r3, #0
   1ea74:	bfb8      	it	lt
   1ea76:	18e4      	addlt	r4, r4, r3
   1ea78:	f7f7 ff96 	bl	169a8 <__malloc_lock>
   1ea7c:	4a1e      	ldr	r2, [pc, #120]	; (1eaf8 <_free_r+0x94>)
   1ea7e:	6813      	ldr	r3, [r2, #0]
   1ea80:	4610      	mov	r0, r2
   1ea82:	b933      	cbnz	r3, 1ea92 <_free_r+0x2e>
   1ea84:	6063      	str	r3, [r4, #4]
   1ea86:	6014      	str	r4, [r2, #0]
   1ea88:	4628      	mov	r0, r5
   1ea8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ea8e:	f7f7 bf8d 	b.w	169ac <__malloc_unlock>
   1ea92:	42a3      	cmp	r3, r4
   1ea94:	d90b      	bls.n	1eaae <_free_r+0x4a>
   1ea96:	6821      	ldr	r1, [r4, #0]
   1ea98:	1862      	adds	r2, r4, r1
   1ea9a:	4293      	cmp	r3, r2
   1ea9c:	bf01      	itttt	eq
   1ea9e:	681a      	ldreq	r2, [r3, #0]
   1eaa0:	685b      	ldreq	r3, [r3, #4]
   1eaa2:	1852      	addeq	r2, r2, r1
   1eaa4:	6022      	streq	r2, [r4, #0]
   1eaa6:	6063      	str	r3, [r4, #4]
   1eaa8:	6004      	str	r4, [r0, #0]
   1eaaa:	e7ed      	b.n	1ea88 <_free_r+0x24>
   1eaac:	4613      	mov	r3, r2
   1eaae:	685a      	ldr	r2, [r3, #4]
   1eab0:	b10a      	cbz	r2, 1eab6 <_free_r+0x52>
   1eab2:	42a2      	cmp	r2, r4
   1eab4:	d9fa      	bls.n	1eaac <_free_r+0x48>
   1eab6:	6819      	ldr	r1, [r3, #0]
   1eab8:	1858      	adds	r0, r3, r1
   1eaba:	42a0      	cmp	r0, r4
   1eabc:	d10b      	bne.n	1ead6 <_free_r+0x72>
   1eabe:	6820      	ldr	r0, [r4, #0]
   1eac0:	4401      	add	r1, r0
   1eac2:	1858      	adds	r0, r3, r1
   1eac4:	4282      	cmp	r2, r0
   1eac6:	6019      	str	r1, [r3, #0]
   1eac8:	d1de      	bne.n	1ea88 <_free_r+0x24>
   1eaca:	6810      	ldr	r0, [r2, #0]
   1eacc:	6852      	ldr	r2, [r2, #4]
   1eace:	4401      	add	r1, r0
   1ead0:	6019      	str	r1, [r3, #0]
   1ead2:	605a      	str	r2, [r3, #4]
   1ead4:	e7d8      	b.n	1ea88 <_free_r+0x24>
   1ead6:	d902      	bls.n	1eade <_free_r+0x7a>
   1ead8:	230c      	movs	r3, #12
   1eada:	602b      	str	r3, [r5, #0]
   1eadc:	e7d4      	b.n	1ea88 <_free_r+0x24>
   1eade:	6820      	ldr	r0, [r4, #0]
   1eae0:	1821      	adds	r1, r4, r0
   1eae2:	428a      	cmp	r2, r1
   1eae4:	bf01      	itttt	eq
   1eae6:	6811      	ldreq	r1, [r2, #0]
   1eae8:	6852      	ldreq	r2, [r2, #4]
   1eaea:	1809      	addeq	r1, r1, r0
   1eaec:	6021      	streq	r1, [r4, #0]
   1eaee:	6062      	str	r2, [r4, #4]
   1eaf0:	605c      	str	r4, [r3, #4]
   1eaf2:	e7c9      	b.n	1ea88 <_free_r+0x24>
   1eaf4:	bd38      	pop	{r3, r4, r5, pc}
   1eaf6:	bf00      	nop
   1eaf8:	2007c8cc 	.word	0x2007c8cc

0001eafc <_mallinfo_r>:
_mallinfo_r():
   1eafc:	b570      	push	{r4, r5, r6, lr}
   1eafe:	4c15      	ldr	r4, [pc, #84]	; (1eb54 <_mallinfo_r+0x58>)
   1eb00:	4606      	mov	r6, r0
   1eb02:	4608      	mov	r0, r1
   1eb04:	460d      	mov	r5, r1
   1eb06:	f7f7 ff4f 	bl	169a8 <__malloc_lock>
   1eb0a:	6820      	ldr	r0, [r4, #0]
   1eb0c:	b138      	cbz	r0, 1eb1e <_mallinfo_r+0x22>
   1eb0e:	2100      	movs	r1, #0
   1eb10:	4628      	mov	r0, r5
   1eb12:	f001 f853 	bl	1fbbc <_sbrk_r>
   1eb16:	1c43      	adds	r3, r0, #1
   1eb18:	bf1c      	itt	ne
   1eb1a:	6823      	ldrne	r3, [r4, #0]
   1eb1c:	1ac0      	subne	r0, r0, r3
   1eb1e:	4b0e      	ldr	r3, [pc, #56]	; (1eb58 <_mallinfo_r+0x5c>)
   1eb20:	681a      	ldr	r2, [r3, #0]
   1eb22:	2300      	movs	r3, #0
   1eb24:	b992      	cbnz	r2, 1eb4c <_mallinfo_r+0x50>
   1eb26:	4c0d      	ldr	r4, [pc, #52]	; (1eb5c <_mallinfo_r+0x60>)
   1eb28:	6020      	str	r0, [r4, #0]
   1eb2a:	1ac0      	subs	r0, r0, r3
   1eb2c:	61e0      	str	r0, [r4, #28]
   1eb2e:	4628      	mov	r0, r5
   1eb30:	4635      	mov	r5, r6
   1eb32:	6223      	str	r3, [r4, #32]
   1eb34:	f7f7 ff3a 	bl	169ac <__malloc_unlock>
   1eb38:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1eb3a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1eb3c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1eb3e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1eb40:	e894 0003 	ldmia.w	r4, {r0, r1}
   1eb44:	e885 0003 	stmia.w	r5, {r0, r1}
   1eb48:	4630      	mov	r0, r6
   1eb4a:	bd70      	pop	{r4, r5, r6, pc}
   1eb4c:	6811      	ldr	r1, [r2, #0]
   1eb4e:	6852      	ldr	r2, [r2, #4]
   1eb50:	440b      	add	r3, r1
   1eb52:	e7e7      	b.n	1eb24 <_mallinfo_r+0x28>
   1eb54:	2007c8d0 	.word	0x2007c8d0
   1eb58:	2007c8cc 	.word	0x2007c8cc
   1eb5c:	2007c8a4 	.word	0x2007c8a4

0001eb60 <_malloc_r>:
_malloc_r():
   1eb60:	b570      	push	{r4, r5, r6, lr}
   1eb62:	1ccd      	adds	r5, r1, #3
   1eb64:	f025 0503 	bic.w	r5, r5, #3
   1eb68:	3508      	adds	r5, #8
   1eb6a:	2d0c      	cmp	r5, #12
   1eb6c:	bf38      	it	cc
   1eb6e:	250c      	movcc	r5, #12
   1eb70:	2d00      	cmp	r5, #0
   1eb72:	4606      	mov	r6, r0
   1eb74:	db01      	blt.n	1eb7a <_malloc_r+0x1a>
   1eb76:	42a9      	cmp	r1, r5
   1eb78:	d903      	bls.n	1eb82 <_malloc_r+0x22>
   1eb7a:	230c      	movs	r3, #12
   1eb7c:	6033      	str	r3, [r6, #0]
   1eb7e:	2000      	movs	r0, #0
   1eb80:	bd70      	pop	{r4, r5, r6, pc}
   1eb82:	f7f7 ff11 	bl	169a8 <__malloc_lock>
   1eb86:	4a23      	ldr	r2, [pc, #140]	; (1ec14 <_malloc_r+0xb4>)
   1eb88:	6814      	ldr	r4, [r2, #0]
   1eb8a:	4621      	mov	r1, r4
   1eb8c:	b991      	cbnz	r1, 1ebb4 <_malloc_r+0x54>
   1eb8e:	4c22      	ldr	r4, [pc, #136]	; (1ec18 <_malloc_r+0xb8>)
   1eb90:	6823      	ldr	r3, [r4, #0]
   1eb92:	b91b      	cbnz	r3, 1eb9c <_malloc_r+0x3c>
   1eb94:	4630      	mov	r0, r6
   1eb96:	f001 f811 	bl	1fbbc <_sbrk_r>
   1eb9a:	6020      	str	r0, [r4, #0]
   1eb9c:	4629      	mov	r1, r5
   1eb9e:	4630      	mov	r0, r6
   1eba0:	f001 f80c 	bl	1fbbc <_sbrk_r>
   1eba4:	1c43      	adds	r3, r0, #1
   1eba6:	d126      	bne.n	1ebf6 <_malloc_r+0x96>
   1eba8:	230c      	movs	r3, #12
   1ebaa:	4630      	mov	r0, r6
   1ebac:	6033      	str	r3, [r6, #0]
   1ebae:	f7f7 fefd 	bl	169ac <__malloc_unlock>
   1ebb2:	e7e4      	b.n	1eb7e <_malloc_r+0x1e>
   1ebb4:	680b      	ldr	r3, [r1, #0]
   1ebb6:	1b5b      	subs	r3, r3, r5
   1ebb8:	d41a      	bmi.n	1ebf0 <_malloc_r+0x90>
   1ebba:	2b0b      	cmp	r3, #11
   1ebbc:	d90f      	bls.n	1ebde <_malloc_r+0x7e>
   1ebbe:	600b      	str	r3, [r1, #0]
   1ebc0:	18cc      	adds	r4, r1, r3
   1ebc2:	50cd      	str	r5, [r1, r3]
   1ebc4:	4630      	mov	r0, r6
   1ebc6:	f7f7 fef1 	bl	169ac <__malloc_unlock>
   1ebca:	f104 000b 	add.w	r0, r4, #11
   1ebce:	1d23      	adds	r3, r4, #4
   1ebd0:	f020 0007 	bic.w	r0, r0, #7
   1ebd4:	1ac3      	subs	r3, r0, r3
   1ebd6:	d01b      	beq.n	1ec10 <_malloc_r+0xb0>
   1ebd8:	425a      	negs	r2, r3
   1ebda:	50e2      	str	r2, [r4, r3]
   1ebdc:	bd70      	pop	{r4, r5, r6, pc}
   1ebde:	428c      	cmp	r4, r1
   1ebe0:	bf0b      	itete	eq
   1ebe2:	6863      	ldreq	r3, [r4, #4]
   1ebe4:	684b      	ldrne	r3, [r1, #4]
   1ebe6:	6013      	streq	r3, [r2, #0]
   1ebe8:	6063      	strne	r3, [r4, #4]
   1ebea:	bf18      	it	ne
   1ebec:	460c      	movne	r4, r1
   1ebee:	e7e9      	b.n	1ebc4 <_malloc_r+0x64>
   1ebf0:	460c      	mov	r4, r1
   1ebf2:	6849      	ldr	r1, [r1, #4]
   1ebf4:	e7ca      	b.n	1eb8c <_malloc_r+0x2c>
   1ebf6:	1cc4      	adds	r4, r0, #3
   1ebf8:	f024 0403 	bic.w	r4, r4, #3
   1ebfc:	42a0      	cmp	r0, r4
   1ebfe:	d005      	beq.n	1ec0c <_malloc_r+0xac>
   1ec00:	1a21      	subs	r1, r4, r0
   1ec02:	4630      	mov	r0, r6
   1ec04:	f000 ffda 	bl	1fbbc <_sbrk_r>
   1ec08:	3001      	adds	r0, #1
   1ec0a:	d0cd      	beq.n	1eba8 <_malloc_r+0x48>
   1ec0c:	6025      	str	r5, [r4, #0]
   1ec0e:	e7d9      	b.n	1ebc4 <_malloc_r+0x64>
   1ec10:	bd70      	pop	{r4, r5, r6, pc}
   1ec12:	bf00      	nop
   1ec14:	2007c8cc 	.word	0x2007c8cc
   1ec18:	2007c8d0 	.word	0x2007c8d0

0001ec1c <__cvt>:
__cvt():
   1ec1c:	2b00      	cmp	r3, #0
   1ec1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ec22:	461e      	mov	r6, r3
   1ec24:	bfbb      	ittet	lt
   1ec26:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1ec2a:	461e      	movlt	r6, r3
   1ec2c:	2300      	movge	r3, #0
   1ec2e:	232d      	movlt	r3, #45	; 0x2d
   1ec30:	b088      	sub	sp, #32
   1ec32:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1ec34:	9912      	ldr	r1, [sp, #72]	; 0x48
   1ec36:	f027 0720 	bic.w	r7, r7, #32
   1ec3a:	2f46      	cmp	r7, #70	; 0x46
   1ec3c:	4614      	mov	r4, r2
   1ec3e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1ec40:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1ec44:	700b      	strb	r3, [r1, #0]
   1ec46:	d004      	beq.n	1ec52 <__cvt+0x36>
   1ec48:	2f45      	cmp	r7, #69	; 0x45
   1ec4a:	d100      	bne.n	1ec4e <__cvt+0x32>
   1ec4c:	3501      	adds	r5, #1
   1ec4e:	2302      	movs	r3, #2
   1ec50:	e000      	b.n	1ec54 <__cvt+0x38>
   1ec52:	2303      	movs	r3, #3
   1ec54:	aa07      	add	r2, sp, #28
   1ec56:	9204      	str	r2, [sp, #16]
   1ec58:	aa06      	add	r2, sp, #24
   1ec5a:	9203      	str	r2, [sp, #12]
   1ec5c:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1ec60:	4622      	mov	r2, r4
   1ec62:	4633      	mov	r3, r6
   1ec64:	f002 fdf4 	bl	21850 <_dtoa_r>
   1ec68:	2f47      	cmp	r7, #71	; 0x47
   1ec6a:	4680      	mov	r8, r0
   1ec6c:	d102      	bne.n	1ec74 <__cvt+0x58>
   1ec6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1ec70:	07db      	lsls	r3, r3, #31
   1ec72:	d526      	bpl.n	1ecc2 <__cvt+0xa6>
   1ec74:	2f46      	cmp	r7, #70	; 0x46
   1ec76:	eb08 0905 	add.w	r9, r8, r5
   1ec7a:	d111      	bne.n	1eca0 <__cvt+0x84>
   1ec7c:	f898 3000 	ldrb.w	r3, [r8]
   1ec80:	2b30      	cmp	r3, #48	; 0x30
   1ec82:	d10a      	bne.n	1ec9a <__cvt+0x7e>
   1ec84:	2200      	movs	r2, #0
   1ec86:	2300      	movs	r3, #0
   1ec88:	4620      	mov	r0, r4
   1ec8a:	4631      	mov	r1, r6
   1ec8c:	f005 fd56 	bl	2473c <__aeabi_dcmpeq>
   1ec90:	b918      	cbnz	r0, 1ec9a <__cvt+0x7e>
   1ec92:	f1c5 0501 	rsb	r5, r5, #1
   1ec96:	f8ca 5000 	str.w	r5, [sl]
   1ec9a:	f8da 3000 	ldr.w	r3, [sl]
   1ec9e:	4499      	add	r9, r3
   1eca0:	2200      	movs	r2, #0
   1eca2:	2300      	movs	r3, #0
   1eca4:	4620      	mov	r0, r4
   1eca6:	4631      	mov	r1, r6
   1eca8:	f005 fd48 	bl	2473c <__aeabi_dcmpeq>
   1ecac:	b938      	cbnz	r0, 1ecbe <__cvt+0xa2>
   1ecae:	2230      	movs	r2, #48	; 0x30
   1ecb0:	9b07      	ldr	r3, [sp, #28]
   1ecb2:	4599      	cmp	r9, r3
   1ecb4:	d905      	bls.n	1ecc2 <__cvt+0xa6>
   1ecb6:	1c59      	adds	r1, r3, #1
   1ecb8:	9107      	str	r1, [sp, #28]
   1ecba:	701a      	strb	r2, [r3, #0]
   1ecbc:	e7f8      	b.n	1ecb0 <__cvt+0x94>
   1ecbe:	f8cd 901c 	str.w	r9, [sp, #28]
   1ecc2:	4640      	mov	r0, r8
   1ecc4:	9b07      	ldr	r3, [sp, #28]
   1ecc6:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1ecc8:	eba3 0308 	sub.w	r3, r3, r8
   1eccc:	6013      	str	r3, [r2, #0]
   1ecce:	b008      	add	sp, #32
   1ecd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001ecd4 <__exponent>:
__exponent():
   1ecd4:	4603      	mov	r3, r0
   1ecd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ecd8:	2900      	cmp	r1, #0
   1ecda:	f803 2b02 	strb.w	r2, [r3], #2
   1ecde:	bfb6      	itet	lt
   1ece0:	222d      	movlt	r2, #45	; 0x2d
   1ece2:	222b      	movge	r2, #43	; 0x2b
   1ece4:	4249      	neglt	r1, r1
   1ece6:	2909      	cmp	r1, #9
   1ece8:	7042      	strb	r2, [r0, #1]
   1ecea:	dd21      	ble.n	1ed30 <__exponent+0x5c>
   1ecec:	f10d 0207 	add.w	r2, sp, #7
   1ecf0:	4617      	mov	r7, r2
   1ecf2:	260a      	movs	r6, #10
   1ecf4:	fb91 f5f6 	sdiv	r5, r1, r6
   1ecf8:	fb06 1115 	mls	r1, r6, r5, r1
   1ecfc:	2d09      	cmp	r5, #9
   1ecfe:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1ed02:	f802 1c01 	strb.w	r1, [r2, #-1]
   1ed06:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   1ed0a:	4629      	mov	r1, r5
   1ed0c:	dc09      	bgt.n	1ed22 <__exponent+0x4e>
   1ed0e:	3130      	adds	r1, #48	; 0x30
   1ed10:	3a02      	subs	r2, #2
   1ed12:	f804 1c01 	strb.w	r1, [r4, #-1]
   1ed16:	42ba      	cmp	r2, r7
   1ed18:	461c      	mov	r4, r3
   1ed1a:	d304      	bcc.n	1ed26 <__exponent+0x52>
   1ed1c:	1a20      	subs	r0, r4, r0
   1ed1e:	b003      	add	sp, #12
   1ed20:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ed22:	4622      	mov	r2, r4
   1ed24:	e7e6      	b.n	1ecf4 <__exponent+0x20>
   1ed26:	f812 1b01 	ldrb.w	r1, [r2], #1
   1ed2a:	f803 1b01 	strb.w	r1, [r3], #1
   1ed2e:	e7f2      	b.n	1ed16 <__exponent+0x42>
   1ed30:	2230      	movs	r2, #48	; 0x30
   1ed32:	461c      	mov	r4, r3
   1ed34:	4411      	add	r1, r2
   1ed36:	f804 2b02 	strb.w	r2, [r4], #2
   1ed3a:	7059      	strb	r1, [r3, #1]
   1ed3c:	e7ee      	b.n	1ed1c <__exponent+0x48>
   1ed3e:	Address 0x000000000001ed3e is out of bounds.


0001ed40 <_printf_float>:
_printf_float():
   1ed40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed44:	b091      	sub	sp, #68	; 0x44
   1ed46:	460c      	mov	r4, r1
   1ed48:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   1ed4a:	4693      	mov	fp, r2
   1ed4c:	461e      	mov	r6, r3
   1ed4e:	4605      	mov	r5, r0
   1ed50:	f003 ffc0 	bl	22cd4 <_localeconv_r>
   1ed54:	6803      	ldr	r3, [r0, #0]
   1ed56:	4618      	mov	r0, r3
   1ed58:	9309      	str	r3, [sp, #36]	; 0x24
   1ed5a:	f001 f961 	bl	20020 <strlen>
   1ed5e:	2300      	movs	r3, #0
   1ed60:	930e      	str	r3, [sp, #56]	; 0x38
   1ed62:	683b      	ldr	r3, [r7, #0]
   1ed64:	900a      	str	r0, [sp, #40]	; 0x28
   1ed66:	3307      	adds	r3, #7
   1ed68:	f023 0307 	bic.w	r3, r3, #7
   1ed6c:	f103 0208 	add.w	r2, r3, #8
   1ed70:	f894 8018 	ldrb.w	r8, [r4, #24]
   1ed74:	f8d4 a000 	ldr.w	sl, [r4]
   1ed78:	603a      	str	r2, [r7, #0]
   1ed7a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1ed7e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1ed82:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   1ed86:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   1ed88:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1ed8c:	930b      	str	r3, [sp, #44]	; 0x2c
   1ed8e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ed92:	4ba6      	ldr	r3, [pc, #664]	; (1f02c <_printf_float+0x2ec>)
   1ed94:	4638      	mov	r0, r7
   1ed96:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1ed98:	f005 fd02 	bl	247a0 <__aeabi_dcmpun>
   1ed9c:	2800      	cmp	r0, #0
   1ed9e:	f040 81f7 	bne.w	1f190 <_printf_float+0x450>
   1eda2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1eda6:	4ba1      	ldr	r3, [pc, #644]	; (1f02c <_printf_float+0x2ec>)
   1eda8:	4638      	mov	r0, r7
   1edaa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1edac:	f005 fcda 	bl	24764 <__aeabi_dcmple>
   1edb0:	2800      	cmp	r0, #0
   1edb2:	f040 81ed 	bne.w	1f190 <_printf_float+0x450>
   1edb6:	2200      	movs	r2, #0
   1edb8:	2300      	movs	r3, #0
   1edba:	4638      	mov	r0, r7
   1edbc:	4649      	mov	r1, r9
   1edbe:	f005 fcc7 	bl	24750 <__aeabi_dcmplt>
   1edc2:	b110      	cbz	r0, 1edca <_printf_float+0x8a>
   1edc4:	232d      	movs	r3, #45	; 0x2d
   1edc6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1edca:	4b99      	ldr	r3, [pc, #612]	; (1f030 <_printf_float+0x2f0>)
   1edcc:	4f99      	ldr	r7, [pc, #612]	; (1f034 <_printf_float+0x2f4>)
   1edce:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1edd2:	bf98      	it	ls
   1edd4:	461f      	movls	r7, r3
   1edd6:	2303      	movs	r3, #3
   1edd8:	f04f 0900 	mov.w	r9, #0
   1eddc:	6123      	str	r3, [r4, #16]
   1edde:	f02a 0304 	bic.w	r3, sl, #4
   1ede2:	6023      	str	r3, [r4, #0]
   1ede4:	9600      	str	r6, [sp, #0]
   1ede6:	465b      	mov	r3, fp
   1ede8:	aa0f      	add	r2, sp, #60	; 0x3c
   1edea:	4621      	mov	r1, r4
   1edec:	4628      	mov	r0, r5
   1edee:	f000 f9df 	bl	1f1b0 <_printf_common>
   1edf2:	3001      	adds	r0, #1
   1edf4:	f040 809a 	bne.w	1ef2c <_printf_float+0x1ec>
   1edf8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1edfc:	b011      	add	sp, #68	; 0x44
   1edfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee02:	6862      	ldr	r2, [r4, #4]
   1ee04:	a80e      	add	r0, sp, #56	; 0x38
   1ee06:	1c53      	adds	r3, r2, #1
   1ee08:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1ee0c:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   1ee10:	d141      	bne.n	1ee96 <_printf_float+0x156>
   1ee12:	2206      	movs	r2, #6
   1ee14:	6062      	str	r2, [r4, #4]
   1ee16:	2100      	movs	r1, #0
   1ee18:	6023      	str	r3, [r4, #0]
   1ee1a:	9301      	str	r3, [sp, #4]
   1ee1c:	6863      	ldr	r3, [r4, #4]
   1ee1e:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1ee22:	9005      	str	r0, [sp, #20]
   1ee24:	9202      	str	r2, [sp, #8]
   1ee26:	9300      	str	r3, [sp, #0]
   1ee28:	463a      	mov	r2, r7
   1ee2a:	464b      	mov	r3, r9
   1ee2c:	9106      	str	r1, [sp, #24]
   1ee2e:	f8cd 8010 	str.w	r8, [sp, #16]
   1ee32:	f8cd e00c 	str.w	lr, [sp, #12]
   1ee36:	4628      	mov	r0, r5
   1ee38:	f7ff fef0 	bl	1ec1c <__cvt>
   1ee3c:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   1ee40:	2b47      	cmp	r3, #71	; 0x47
   1ee42:	4607      	mov	r7, r0
   1ee44:	d109      	bne.n	1ee5a <_printf_float+0x11a>
   1ee46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ee48:	1cd8      	adds	r0, r3, #3
   1ee4a:	db02      	blt.n	1ee52 <_printf_float+0x112>
   1ee4c:	6862      	ldr	r2, [r4, #4]
   1ee4e:	4293      	cmp	r3, r2
   1ee50:	dd59      	ble.n	1ef06 <_printf_float+0x1c6>
   1ee52:	f1a8 0802 	sub.w	r8, r8, #2
   1ee56:	fa5f f888 	uxtb.w	r8, r8
   1ee5a:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1ee5e:	990d      	ldr	r1, [sp, #52]	; 0x34
   1ee60:	d836      	bhi.n	1eed0 <_printf_float+0x190>
   1ee62:	3901      	subs	r1, #1
   1ee64:	4642      	mov	r2, r8
   1ee66:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1ee6a:	910d      	str	r1, [sp, #52]	; 0x34
   1ee6c:	f7ff ff32 	bl	1ecd4 <__exponent>
   1ee70:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ee72:	4681      	mov	r9, r0
   1ee74:	1883      	adds	r3, r0, r2
   1ee76:	2a01      	cmp	r2, #1
   1ee78:	6123      	str	r3, [r4, #16]
   1ee7a:	dc02      	bgt.n	1ee82 <_printf_float+0x142>
   1ee7c:	6822      	ldr	r2, [r4, #0]
   1ee7e:	07d1      	lsls	r1, r2, #31
   1ee80:	d501      	bpl.n	1ee86 <_printf_float+0x146>
   1ee82:	3301      	adds	r3, #1
   1ee84:	6123      	str	r3, [r4, #16]
   1ee86:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1ee8a:	2b00      	cmp	r3, #0
   1ee8c:	d0aa      	beq.n	1ede4 <_printf_float+0xa4>
   1ee8e:	232d      	movs	r3, #45	; 0x2d
   1ee90:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1ee94:	e7a6      	b.n	1ede4 <_printf_float+0xa4>
   1ee96:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1ee9a:	d002      	beq.n	1eea2 <_printf_float+0x162>
   1ee9c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1eea0:	d1b9      	bne.n	1ee16 <_printf_float+0xd6>
   1eea2:	b19a      	cbz	r2, 1eecc <_printf_float+0x18c>
   1eea4:	2100      	movs	r1, #0
   1eea6:	9106      	str	r1, [sp, #24]
   1eea8:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1eeac:	e88d 000c 	stmia.w	sp, {r2, r3}
   1eeb0:	6023      	str	r3, [r4, #0]
   1eeb2:	9005      	str	r0, [sp, #20]
   1eeb4:	463a      	mov	r2, r7
   1eeb6:	f8cd 8010 	str.w	r8, [sp, #16]
   1eeba:	f8cd e00c 	str.w	lr, [sp, #12]
   1eebe:	9102      	str	r1, [sp, #8]
   1eec0:	464b      	mov	r3, r9
   1eec2:	4628      	mov	r0, r5
   1eec4:	f7ff feaa 	bl	1ec1c <__cvt>
   1eec8:	4607      	mov	r7, r0
   1eeca:	e7bc      	b.n	1ee46 <_printf_float+0x106>
   1eecc:	2201      	movs	r2, #1
   1eece:	e7a1      	b.n	1ee14 <_printf_float+0xd4>
   1eed0:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   1eed4:	d119      	bne.n	1ef0a <_printf_float+0x1ca>
   1eed6:	2900      	cmp	r1, #0
   1eed8:	6863      	ldr	r3, [r4, #4]
   1eeda:	dd0c      	ble.n	1eef6 <_printf_float+0x1b6>
   1eedc:	6121      	str	r1, [r4, #16]
   1eede:	b913      	cbnz	r3, 1eee6 <_printf_float+0x1a6>
   1eee0:	6822      	ldr	r2, [r4, #0]
   1eee2:	07d2      	lsls	r2, r2, #31
   1eee4:	d502      	bpl.n	1eeec <_printf_float+0x1ac>
   1eee6:	3301      	adds	r3, #1
   1eee8:	440b      	add	r3, r1
   1eeea:	6123      	str	r3, [r4, #16]
   1eeec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1eeee:	f04f 0900 	mov.w	r9, #0
   1eef2:	65a3      	str	r3, [r4, #88]	; 0x58
   1eef4:	e7c7      	b.n	1ee86 <_printf_float+0x146>
   1eef6:	b913      	cbnz	r3, 1eefe <_printf_float+0x1be>
   1eef8:	6822      	ldr	r2, [r4, #0]
   1eefa:	07d0      	lsls	r0, r2, #31
   1eefc:	d501      	bpl.n	1ef02 <_printf_float+0x1c2>
   1eefe:	3302      	adds	r3, #2
   1ef00:	e7f3      	b.n	1eeea <_printf_float+0x1aa>
   1ef02:	2301      	movs	r3, #1
   1ef04:	e7f1      	b.n	1eeea <_printf_float+0x1aa>
   1ef06:	f04f 0867 	mov.w	r8, #103	; 0x67
   1ef0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ef0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ef0e:	4293      	cmp	r3, r2
   1ef10:	db05      	blt.n	1ef1e <_printf_float+0x1de>
   1ef12:	6822      	ldr	r2, [r4, #0]
   1ef14:	6123      	str	r3, [r4, #16]
   1ef16:	07d1      	lsls	r1, r2, #31
   1ef18:	d5e8      	bpl.n	1eeec <_printf_float+0x1ac>
   1ef1a:	3301      	adds	r3, #1
   1ef1c:	e7e5      	b.n	1eeea <_printf_float+0x1aa>
   1ef1e:	2b00      	cmp	r3, #0
   1ef20:	bfcc      	ite	gt
   1ef22:	2301      	movgt	r3, #1
   1ef24:	f1c3 0302 	rsble	r3, r3, #2
   1ef28:	4413      	add	r3, r2
   1ef2a:	e7de      	b.n	1eeea <_printf_float+0x1aa>
   1ef2c:	6823      	ldr	r3, [r4, #0]
   1ef2e:	055a      	lsls	r2, r3, #21
   1ef30:	d407      	bmi.n	1ef42 <_printf_float+0x202>
   1ef32:	6923      	ldr	r3, [r4, #16]
   1ef34:	463a      	mov	r2, r7
   1ef36:	4659      	mov	r1, fp
   1ef38:	4628      	mov	r0, r5
   1ef3a:	47b0      	blx	r6
   1ef3c:	3001      	adds	r0, #1
   1ef3e:	d12a      	bne.n	1ef96 <_printf_float+0x256>
   1ef40:	e75a      	b.n	1edf8 <_printf_float+0xb8>
   1ef42:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1ef46:	f240 80dc 	bls.w	1f102 <_printf_float+0x3c2>
   1ef4a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1ef4e:	2200      	movs	r2, #0
   1ef50:	2300      	movs	r3, #0
   1ef52:	f005 fbf3 	bl	2473c <__aeabi_dcmpeq>
   1ef56:	2800      	cmp	r0, #0
   1ef58:	d039      	beq.n	1efce <_printf_float+0x28e>
   1ef5a:	2301      	movs	r3, #1
   1ef5c:	4a36      	ldr	r2, [pc, #216]	; (1f038 <_printf_float+0x2f8>)
   1ef5e:	4659      	mov	r1, fp
   1ef60:	4628      	mov	r0, r5
   1ef62:	47b0      	blx	r6
   1ef64:	3001      	adds	r0, #1
   1ef66:	f43f af47 	beq.w	1edf8 <_printf_float+0xb8>
   1ef6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ef6c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1ef6e:	429a      	cmp	r2, r3
   1ef70:	db02      	blt.n	1ef78 <_printf_float+0x238>
   1ef72:	6823      	ldr	r3, [r4, #0]
   1ef74:	07d8      	lsls	r0, r3, #31
   1ef76:	d50e      	bpl.n	1ef96 <_printf_float+0x256>
   1ef78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ef7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ef7c:	4659      	mov	r1, fp
   1ef7e:	4628      	mov	r0, r5
   1ef80:	47b0      	blx	r6
   1ef82:	3001      	adds	r0, #1
   1ef84:	f43f af38 	beq.w	1edf8 <_printf_float+0xb8>
   1ef88:	2700      	movs	r7, #0
   1ef8a:	f104 081a 	add.w	r8, r4, #26
   1ef8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ef90:	3b01      	subs	r3, #1
   1ef92:	429f      	cmp	r7, r3
   1ef94:	db11      	blt.n	1efba <_printf_float+0x27a>
   1ef96:	6823      	ldr	r3, [r4, #0]
   1ef98:	079f      	lsls	r7, r3, #30
   1ef9a:	d508      	bpl.n	1efae <_printf_float+0x26e>
   1ef9c:	2700      	movs	r7, #0
   1ef9e:	f104 0819 	add.w	r8, r4, #25
   1efa2:	68e3      	ldr	r3, [r4, #12]
   1efa4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1efa6:	1a9b      	subs	r3, r3, r2
   1efa8:	429f      	cmp	r7, r3
   1efaa:	f2c0 80e7 	blt.w	1f17c <_printf_float+0x43c>
   1efae:	68e0      	ldr	r0, [r4, #12]
   1efb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1efb2:	4298      	cmp	r0, r3
   1efb4:	bfb8      	it	lt
   1efb6:	4618      	movlt	r0, r3
   1efb8:	e720      	b.n	1edfc <_printf_float+0xbc>
   1efba:	2301      	movs	r3, #1
   1efbc:	4642      	mov	r2, r8
   1efbe:	4659      	mov	r1, fp
   1efc0:	4628      	mov	r0, r5
   1efc2:	47b0      	blx	r6
   1efc4:	3001      	adds	r0, #1
   1efc6:	f43f af17 	beq.w	1edf8 <_printf_float+0xb8>
   1efca:	3701      	adds	r7, #1
   1efcc:	e7df      	b.n	1ef8e <_printf_float+0x24e>
   1efce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1efd0:	2b00      	cmp	r3, #0
   1efd2:	dc33      	bgt.n	1f03c <_printf_float+0x2fc>
   1efd4:	2301      	movs	r3, #1
   1efd6:	4a18      	ldr	r2, [pc, #96]	; (1f038 <_printf_float+0x2f8>)
   1efd8:	4659      	mov	r1, fp
   1efda:	4628      	mov	r0, r5
   1efdc:	47b0      	blx	r6
   1efde:	3001      	adds	r0, #1
   1efe0:	f43f af0a 	beq.w	1edf8 <_printf_float+0xb8>
   1efe4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1efe6:	b923      	cbnz	r3, 1eff2 <_printf_float+0x2b2>
   1efe8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1efea:	b913      	cbnz	r3, 1eff2 <_printf_float+0x2b2>
   1efec:	6823      	ldr	r3, [r4, #0]
   1efee:	07d9      	lsls	r1, r3, #31
   1eff0:	d5d1      	bpl.n	1ef96 <_printf_float+0x256>
   1eff2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1eff4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1eff6:	4659      	mov	r1, fp
   1eff8:	4628      	mov	r0, r5
   1effa:	47b0      	blx	r6
   1effc:	3001      	adds	r0, #1
   1effe:	f43f aefb 	beq.w	1edf8 <_printf_float+0xb8>
   1f002:	f04f 0800 	mov.w	r8, #0
   1f006:	f104 091a 	add.w	r9, r4, #26
   1f00a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1f00c:	425b      	negs	r3, r3
   1f00e:	4598      	cmp	r8, r3
   1f010:	db01      	blt.n	1f016 <_printf_float+0x2d6>
   1f012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f014:	e78e      	b.n	1ef34 <_printf_float+0x1f4>
   1f016:	2301      	movs	r3, #1
   1f018:	464a      	mov	r2, r9
   1f01a:	4659      	mov	r1, fp
   1f01c:	4628      	mov	r0, r5
   1f01e:	47b0      	blx	r6
   1f020:	3001      	adds	r0, #1
   1f022:	f43f aee9 	beq.w	1edf8 <_printf_float+0xb8>
   1f026:	f108 0801 	add.w	r8, r8, #1
   1f02a:	e7ee      	b.n	1f00a <_printf_float+0x2ca>
   1f02c:	7fefffff 	.word	0x7fefffff
   1f030:	00027470 	.word	0x00027470
   1f034:	00027474 	.word	0x00027474
   1f038:	00024ace 	.word	0x00024ace
   1f03c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1f03e:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1f040:	429a      	cmp	r2, r3
   1f042:	bfa8      	it	ge
   1f044:	461a      	movge	r2, r3
   1f046:	2a00      	cmp	r2, #0
   1f048:	4690      	mov	r8, r2
   1f04a:	dc36      	bgt.n	1f0ba <_printf_float+0x37a>
   1f04c:	f04f 0a00 	mov.w	sl, #0
   1f050:	f104 031a 	add.w	r3, r4, #26
   1f054:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1f058:	930b      	str	r3, [sp, #44]	; 0x2c
   1f05a:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   1f05e:	eba9 0308 	sub.w	r3, r9, r8
   1f062:	459a      	cmp	sl, r3
   1f064:	db31      	blt.n	1f0ca <_printf_float+0x38a>
   1f066:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f068:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1f06a:	429a      	cmp	r2, r3
   1f06c:	db38      	blt.n	1f0e0 <_printf_float+0x3a0>
   1f06e:	6823      	ldr	r3, [r4, #0]
   1f070:	07da      	lsls	r2, r3, #31
   1f072:	d435      	bmi.n	1f0e0 <_printf_float+0x3a0>
   1f074:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f076:	990d      	ldr	r1, [sp, #52]	; 0x34
   1f078:	eba3 0209 	sub.w	r2, r3, r9
   1f07c:	eba3 0801 	sub.w	r8, r3, r1
   1f080:	4590      	cmp	r8, r2
   1f082:	bfa8      	it	ge
   1f084:	4690      	movge	r8, r2
   1f086:	f1b8 0f00 	cmp.w	r8, #0
   1f08a:	dc31      	bgt.n	1f0f0 <_printf_float+0x3b0>
   1f08c:	2700      	movs	r7, #0
   1f08e:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1f092:	f104 091a 	add.w	r9, r4, #26
   1f096:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1f098:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f09a:	1a9b      	subs	r3, r3, r2
   1f09c:	eba3 0308 	sub.w	r3, r3, r8
   1f0a0:	429f      	cmp	r7, r3
   1f0a2:	f6bf af78 	bge.w	1ef96 <_printf_float+0x256>
   1f0a6:	2301      	movs	r3, #1
   1f0a8:	464a      	mov	r2, r9
   1f0aa:	4659      	mov	r1, fp
   1f0ac:	4628      	mov	r0, r5
   1f0ae:	47b0      	blx	r6
   1f0b0:	3001      	adds	r0, #1
   1f0b2:	f43f aea1 	beq.w	1edf8 <_printf_float+0xb8>
   1f0b6:	3701      	adds	r7, #1
   1f0b8:	e7ed      	b.n	1f096 <_printf_float+0x356>
   1f0ba:	4613      	mov	r3, r2
   1f0bc:	4659      	mov	r1, fp
   1f0be:	463a      	mov	r2, r7
   1f0c0:	4628      	mov	r0, r5
   1f0c2:	47b0      	blx	r6
   1f0c4:	3001      	adds	r0, #1
   1f0c6:	d1c1      	bne.n	1f04c <_printf_float+0x30c>
   1f0c8:	e696      	b.n	1edf8 <_printf_float+0xb8>
   1f0ca:	2301      	movs	r3, #1
   1f0cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1f0ce:	4659      	mov	r1, fp
   1f0d0:	4628      	mov	r0, r5
   1f0d2:	47b0      	blx	r6
   1f0d4:	3001      	adds	r0, #1
   1f0d6:	f43f ae8f 	beq.w	1edf8 <_printf_float+0xb8>
   1f0da:	f10a 0a01 	add.w	sl, sl, #1
   1f0de:	e7bc      	b.n	1f05a <_printf_float+0x31a>
   1f0e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1f0e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1f0e4:	4659      	mov	r1, fp
   1f0e6:	4628      	mov	r0, r5
   1f0e8:	47b0      	blx	r6
   1f0ea:	3001      	adds	r0, #1
   1f0ec:	d1c2      	bne.n	1f074 <_printf_float+0x334>
   1f0ee:	e683      	b.n	1edf8 <_printf_float+0xb8>
   1f0f0:	4643      	mov	r3, r8
   1f0f2:	eb07 0209 	add.w	r2, r7, r9
   1f0f6:	4659      	mov	r1, fp
   1f0f8:	4628      	mov	r0, r5
   1f0fa:	47b0      	blx	r6
   1f0fc:	3001      	adds	r0, #1
   1f0fe:	d1c5      	bne.n	1f08c <_printf_float+0x34c>
   1f100:	e67a      	b.n	1edf8 <_printf_float+0xb8>
   1f102:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1f104:	2a01      	cmp	r2, #1
   1f106:	dc01      	bgt.n	1f10c <_printf_float+0x3cc>
   1f108:	07db      	lsls	r3, r3, #31
   1f10a:	d534      	bpl.n	1f176 <_printf_float+0x436>
   1f10c:	2301      	movs	r3, #1
   1f10e:	463a      	mov	r2, r7
   1f110:	4659      	mov	r1, fp
   1f112:	4628      	mov	r0, r5
   1f114:	47b0      	blx	r6
   1f116:	3001      	adds	r0, #1
   1f118:	f43f ae6e 	beq.w	1edf8 <_printf_float+0xb8>
   1f11c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1f11e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1f120:	4659      	mov	r1, fp
   1f122:	4628      	mov	r0, r5
   1f124:	47b0      	blx	r6
   1f126:	3001      	adds	r0, #1
   1f128:	f43f ae66 	beq.w	1edf8 <_printf_float+0xb8>
   1f12c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1f130:	2200      	movs	r2, #0
   1f132:	2300      	movs	r3, #0
   1f134:	f005 fb02 	bl	2473c <__aeabi_dcmpeq>
   1f138:	b150      	cbz	r0, 1f150 <_printf_float+0x410>
   1f13a:	2700      	movs	r7, #0
   1f13c:	f104 081a 	add.w	r8, r4, #26
   1f140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f142:	3b01      	subs	r3, #1
   1f144:	429f      	cmp	r7, r3
   1f146:	db0c      	blt.n	1f162 <_printf_float+0x422>
   1f148:	464b      	mov	r3, r9
   1f14a:	f104 0250 	add.w	r2, r4, #80	; 0x50
   1f14e:	e6f2      	b.n	1ef36 <_printf_float+0x1f6>
   1f150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f152:	1c7a      	adds	r2, r7, #1
   1f154:	3b01      	subs	r3, #1
   1f156:	4659      	mov	r1, fp
   1f158:	4628      	mov	r0, r5
   1f15a:	47b0      	blx	r6
   1f15c:	3001      	adds	r0, #1
   1f15e:	d1f3      	bne.n	1f148 <_printf_float+0x408>
   1f160:	e64a      	b.n	1edf8 <_printf_float+0xb8>
   1f162:	2301      	movs	r3, #1
   1f164:	4642      	mov	r2, r8
   1f166:	4659      	mov	r1, fp
   1f168:	4628      	mov	r0, r5
   1f16a:	47b0      	blx	r6
   1f16c:	3001      	adds	r0, #1
   1f16e:	f43f ae43 	beq.w	1edf8 <_printf_float+0xb8>
   1f172:	3701      	adds	r7, #1
   1f174:	e7e4      	b.n	1f140 <_printf_float+0x400>
   1f176:	2301      	movs	r3, #1
   1f178:	463a      	mov	r2, r7
   1f17a:	e7ec      	b.n	1f156 <_printf_float+0x416>
   1f17c:	2301      	movs	r3, #1
   1f17e:	4642      	mov	r2, r8
   1f180:	4659      	mov	r1, fp
   1f182:	4628      	mov	r0, r5
   1f184:	47b0      	blx	r6
   1f186:	3001      	adds	r0, #1
   1f188:	f43f ae36 	beq.w	1edf8 <_printf_float+0xb8>
   1f18c:	3701      	adds	r7, #1
   1f18e:	e708      	b.n	1efa2 <_printf_float+0x262>
   1f190:	463a      	mov	r2, r7
   1f192:	464b      	mov	r3, r9
   1f194:	4638      	mov	r0, r7
   1f196:	4649      	mov	r1, r9
   1f198:	f005 fb02 	bl	247a0 <__aeabi_dcmpun>
   1f19c:	2800      	cmp	r0, #0
   1f19e:	f43f ae30 	beq.w	1ee02 <_printf_float+0xc2>
   1f1a2:	4b01      	ldr	r3, [pc, #4]	; (1f1a8 <_printf_float+0x468>)
   1f1a4:	4f01      	ldr	r7, [pc, #4]	; (1f1ac <_printf_float+0x46c>)
   1f1a6:	e612      	b.n	1edce <_printf_float+0x8e>
   1f1a8:	00027478 	.word	0x00027478
   1f1ac:	0002747c 	.word	0x0002747c

0001f1b0 <_printf_common>:
_printf_common():
   1f1b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f1b4:	4691      	mov	r9, r2
   1f1b6:	461f      	mov	r7, r3
   1f1b8:	688a      	ldr	r2, [r1, #8]
   1f1ba:	690b      	ldr	r3, [r1, #16]
   1f1bc:	4606      	mov	r6, r0
   1f1be:	4293      	cmp	r3, r2
   1f1c0:	bfb8      	it	lt
   1f1c2:	4613      	movlt	r3, r2
   1f1c4:	f8c9 3000 	str.w	r3, [r9]
   1f1c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   1f1cc:	460c      	mov	r4, r1
   1f1ce:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1f1d2:	b112      	cbz	r2, 1f1da <_printf_common+0x2a>
   1f1d4:	3301      	adds	r3, #1
   1f1d6:	f8c9 3000 	str.w	r3, [r9]
   1f1da:	6823      	ldr	r3, [r4, #0]
   1f1dc:	0699      	lsls	r1, r3, #26
   1f1de:	bf42      	ittt	mi
   1f1e0:	f8d9 3000 	ldrmi.w	r3, [r9]
   1f1e4:	3302      	addmi	r3, #2
   1f1e6:	f8c9 3000 	strmi.w	r3, [r9]
   1f1ea:	6825      	ldr	r5, [r4, #0]
   1f1ec:	f015 0506 	ands.w	r5, r5, #6
   1f1f0:	d107      	bne.n	1f202 <_printf_common+0x52>
   1f1f2:	f104 0a19 	add.w	sl, r4, #25
   1f1f6:	68e3      	ldr	r3, [r4, #12]
   1f1f8:	f8d9 2000 	ldr.w	r2, [r9]
   1f1fc:	1a9b      	subs	r3, r3, r2
   1f1fe:	429d      	cmp	r5, r3
   1f200:	db2a      	blt.n	1f258 <_printf_common+0xa8>
   1f202:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   1f206:	6822      	ldr	r2, [r4, #0]
   1f208:	3300      	adds	r3, #0
   1f20a:	bf18      	it	ne
   1f20c:	2301      	movne	r3, #1
   1f20e:	0692      	lsls	r2, r2, #26
   1f210:	d42f      	bmi.n	1f272 <_printf_common+0xc2>
   1f212:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1f216:	4639      	mov	r1, r7
   1f218:	4630      	mov	r0, r6
   1f21a:	47c0      	blx	r8
   1f21c:	3001      	adds	r0, #1
   1f21e:	d022      	beq.n	1f266 <_printf_common+0xb6>
   1f220:	6823      	ldr	r3, [r4, #0]
   1f222:	68e5      	ldr	r5, [r4, #12]
   1f224:	f003 0306 	and.w	r3, r3, #6
   1f228:	2b04      	cmp	r3, #4
   1f22a:	bf18      	it	ne
   1f22c:	2500      	movne	r5, #0
   1f22e:	f8d9 2000 	ldr.w	r2, [r9]
   1f232:	f04f 0900 	mov.w	r9, #0
   1f236:	bf08      	it	eq
   1f238:	1aad      	subeq	r5, r5, r2
   1f23a:	68a3      	ldr	r3, [r4, #8]
   1f23c:	6922      	ldr	r2, [r4, #16]
   1f23e:	bf08      	it	eq
   1f240:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   1f244:	4293      	cmp	r3, r2
   1f246:	bfc4      	itt	gt
   1f248:	1a9b      	subgt	r3, r3, r2
   1f24a:	18ed      	addgt	r5, r5, r3
   1f24c:	341a      	adds	r4, #26
   1f24e:	454d      	cmp	r5, r9
   1f250:	d11b      	bne.n	1f28a <_printf_common+0xda>
   1f252:	2000      	movs	r0, #0
   1f254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f258:	2301      	movs	r3, #1
   1f25a:	4652      	mov	r2, sl
   1f25c:	4639      	mov	r1, r7
   1f25e:	4630      	mov	r0, r6
   1f260:	47c0      	blx	r8
   1f262:	3001      	adds	r0, #1
   1f264:	d103      	bne.n	1f26e <_printf_common+0xbe>
   1f266:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f26a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f26e:	3501      	adds	r5, #1
   1f270:	e7c1      	b.n	1f1f6 <_printf_common+0x46>
   1f272:	2030      	movs	r0, #48	; 0x30
   1f274:	18e1      	adds	r1, r4, r3
   1f276:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   1f27a:	1c5a      	adds	r2, r3, #1
   1f27c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   1f280:	4422      	add	r2, r4
   1f282:	3302      	adds	r3, #2
   1f284:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   1f288:	e7c3      	b.n	1f212 <_printf_common+0x62>
   1f28a:	2301      	movs	r3, #1
   1f28c:	4622      	mov	r2, r4
   1f28e:	4639      	mov	r1, r7
   1f290:	4630      	mov	r0, r6
   1f292:	47c0      	blx	r8
   1f294:	3001      	adds	r0, #1
   1f296:	d0e6      	beq.n	1f266 <_printf_common+0xb6>
   1f298:	f109 0901 	add.w	r9, r9, #1
   1f29c:	e7d7      	b.n	1f24e <_printf_common+0x9e>
   1f29e:	Address 0x000000000001f29e is out of bounds.


0001f2a0 <_printf_i>:
_printf_i():
   1f2a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1f2a4:	4617      	mov	r7, r2
   1f2a6:	7e0a      	ldrb	r2, [r1, #24]
   1f2a8:	b085      	sub	sp, #20
   1f2aa:	2a6e      	cmp	r2, #110	; 0x6e
   1f2ac:	4698      	mov	r8, r3
   1f2ae:	4606      	mov	r6, r0
   1f2b0:	460c      	mov	r4, r1
   1f2b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1f2b4:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   1f2b8:	f000 80bc 	beq.w	1f434 <_printf_i+0x194>
   1f2bc:	d81a      	bhi.n	1f2f4 <_printf_i+0x54>
   1f2be:	2a63      	cmp	r2, #99	; 0x63
   1f2c0:	d02e      	beq.n	1f320 <_printf_i+0x80>
   1f2c2:	d80a      	bhi.n	1f2da <_printf_i+0x3a>
   1f2c4:	2a00      	cmp	r2, #0
   1f2c6:	f000 80c8 	beq.w	1f45a <_printf_i+0x1ba>
   1f2ca:	2a58      	cmp	r2, #88	; 0x58
   1f2cc:	f000 808a 	beq.w	1f3e4 <_printf_i+0x144>
   1f2d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1f2d4:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   1f2d8:	e02a      	b.n	1f330 <_printf_i+0x90>
   1f2da:	2a64      	cmp	r2, #100	; 0x64
   1f2dc:	d001      	beq.n	1f2e2 <_printf_i+0x42>
   1f2de:	2a69      	cmp	r2, #105	; 0x69
   1f2e0:	d1f6      	bne.n	1f2d0 <_printf_i+0x30>
   1f2e2:	6821      	ldr	r1, [r4, #0]
   1f2e4:	681a      	ldr	r2, [r3, #0]
   1f2e6:	f011 0f80 	tst.w	r1, #128	; 0x80
   1f2ea:	d023      	beq.n	1f334 <_printf_i+0x94>
   1f2ec:	1d11      	adds	r1, r2, #4
   1f2ee:	6019      	str	r1, [r3, #0]
   1f2f0:	6813      	ldr	r3, [r2, #0]
   1f2f2:	e027      	b.n	1f344 <_printf_i+0xa4>
   1f2f4:	2a73      	cmp	r2, #115	; 0x73
   1f2f6:	f000 80b4 	beq.w	1f462 <_printf_i+0x1c2>
   1f2fa:	d808      	bhi.n	1f30e <_printf_i+0x6e>
   1f2fc:	2a6f      	cmp	r2, #111	; 0x6f
   1f2fe:	d02a      	beq.n	1f356 <_printf_i+0xb6>
   1f300:	2a70      	cmp	r2, #112	; 0x70
   1f302:	d1e5      	bne.n	1f2d0 <_printf_i+0x30>
   1f304:	680a      	ldr	r2, [r1, #0]
   1f306:	f042 0220 	orr.w	r2, r2, #32
   1f30a:	600a      	str	r2, [r1, #0]
   1f30c:	e003      	b.n	1f316 <_printf_i+0x76>
   1f30e:	2a75      	cmp	r2, #117	; 0x75
   1f310:	d021      	beq.n	1f356 <_printf_i+0xb6>
   1f312:	2a78      	cmp	r2, #120	; 0x78
   1f314:	d1dc      	bne.n	1f2d0 <_printf_i+0x30>
   1f316:	2278      	movs	r2, #120	; 0x78
   1f318:	496f      	ldr	r1, [pc, #444]	; (1f4d8 <_printf_i+0x238>)
   1f31a:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   1f31e:	e064      	b.n	1f3ea <_printf_i+0x14a>
   1f320:	681a      	ldr	r2, [r3, #0]
   1f322:	f101 0542 	add.w	r5, r1, #66	; 0x42
   1f326:	1d11      	adds	r1, r2, #4
   1f328:	6019      	str	r1, [r3, #0]
   1f32a:	6813      	ldr	r3, [r2, #0]
   1f32c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1f330:	2301      	movs	r3, #1
   1f332:	e0a3      	b.n	1f47c <_printf_i+0x1dc>
   1f334:	f011 0f40 	tst.w	r1, #64	; 0x40
   1f338:	f102 0104 	add.w	r1, r2, #4
   1f33c:	6019      	str	r1, [r3, #0]
   1f33e:	d0d7      	beq.n	1f2f0 <_printf_i+0x50>
   1f340:	f9b2 3000 	ldrsh.w	r3, [r2]
   1f344:	2b00      	cmp	r3, #0
   1f346:	da03      	bge.n	1f350 <_printf_i+0xb0>
   1f348:	222d      	movs	r2, #45	; 0x2d
   1f34a:	425b      	negs	r3, r3
   1f34c:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   1f350:	4962      	ldr	r1, [pc, #392]	; (1f4dc <_printf_i+0x23c>)
   1f352:	220a      	movs	r2, #10
   1f354:	e017      	b.n	1f386 <_printf_i+0xe6>
   1f356:	6820      	ldr	r0, [r4, #0]
   1f358:	6819      	ldr	r1, [r3, #0]
   1f35a:	f010 0f80 	tst.w	r0, #128	; 0x80
   1f35e:	d003      	beq.n	1f368 <_printf_i+0xc8>
   1f360:	1d08      	adds	r0, r1, #4
   1f362:	6018      	str	r0, [r3, #0]
   1f364:	680b      	ldr	r3, [r1, #0]
   1f366:	e006      	b.n	1f376 <_printf_i+0xd6>
   1f368:	f010 0f40 	tst.w	r0, #64	; 0x40
   1f36c:	f101 0004 	add.w	r0, r1, #4
   1f370:	6018      	str	r0, [r3, #0]
   1f372:	d0f7      	beq.n	1f364 <_printf_i+0xc4>
   1f374:	880b      	ldrh	r3, [r1, #0]
   1f376:	2a6f      	cmp	r2, #111	; 0x6f
   1f378:	bf14      	ite	ne
   1f37a:	220a      	movne	r2, #10
   1f37c:	2208      	moveq	r2, #8
   1f37e:	4957      	ldr	r1, [pc, #348]	; (1f4dc <_printf_i+0x23c>)
   1f380:	2000      	movs	r0, #0
   1f382:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1f386:	6865      	ldr	r5, [r4, #4]
   1f388:	2d00      	cmp	r5, #0
   1f38a:	60a5      	str	r5, [r4, #8]
   1f38c:	f2c0 809c 	blt.w	1f4c8 <_printf_i+0x228>
   1f390:	6820      	ldr	r0, [r4, #0]
   1f392:	f020 0004 	bic.w	r0, r0, #4
   1f396:	6020      	str	r0, [r4, #0]
   1f398:	2b00      	cmp	r3, #0
   1f39a:	d13f      	bne.n	1f41c <_printf_i+0x17c>
   1f39c:	2d00      	cmp	r5, #0
   1f39e:	f040 8095 	bne.w	1f4cc <_printf_i+0x22c>
   1f3a2:	4675      	mov	r5, lr
   1f3a4:	2a08      	cmp	r2, #8
   1f3a6:	d10b      	bne.n	1f3c0 <_printf_i+0x120>
   1f3a8:	6823      	ldr	r3, [r4, #0]
   1f3aa:	07da      	lsls	r2, r3, #31
   1f3ac:	d508      	bpl.n	1f3c0 <_printf_i+0x120>
   1f3ae:	6923      	ldr	r3, [r4, #16]
   1f3b0:	6862      	ldr	r2, [r4, #4]
   1f3b2:	429a      	cmp	r2, r3
   1f3b4:	bfde      	ittt	le
   1f3b6:	2330      	movle	r3, #48	; 0x30
   1f3b8:	f805 3c01 	strble.w	r3, [r5, #-1]
   1f3bc:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1f3c0:	ebae 0305 	sub.w	r3, lr, r5
   1f3c4:	6123      	str	r3, [r4, #16]
   1f3c6:	f8cd 8000 	str.w	r8, [sp]
   1f3ca:	463b      	mov	r3, r7
   1f3cc:	aa03      	add	r2, sp, #12
   1f3ce:	4621      	mov	r1, r4
   1f3d0:	4630      	mov	r0, r6
   1f3d2:	f7ff feed 	bl	1f1b0 <_printf_common>
   1f3d6:	3001      	adds	r0, #1
   1f3d8:	d155      	bne.n	1f486 <_printf_i+0x1e6>
   1f3da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f3de:	b005      	add	sp, #20
   1f3e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1f3e4:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1f3e8:	493c      	ldr	r1, [pc, #240]	; (1f4dc <_printf_i+0x23c>)
   1f3ea:	6822      	ldr	r2, [r4, #0]
   1f3ec:	6818      	ldr	r0, [r3, #0]
   1f3ee:	f012 0f80 	tst.w	r2, #128	; 0x80
   1f3f2:	f100 0504 	add.w	r5, r0, #4
   1f3f6:	601d      	str	r5, [r3, #0]
   1f3f8:	d001      	beq.n	1f3fe <_printf_i+0x15e>
   1f3fa:	6803      	ldr	r3, [r0, #0]
   1f3fc:	e002      	b.n	1f404 <_printf_i+0x164>
   1f3fe:	0655      	lsls	r5, r2, #25
   1f400:	d5fb      	bpl.n	1f3fa <_printf_i+0x15a>
   1f402:	8803      	ldrh	r3, [r0, #0]
   1f404:	07d0      	lsls	r0, r2, #31
   1f406:	bf44      	itt	mi
   1f408:	f042 0220 	orrmi.w	r2, r2, #32
   1f40c:	6022      	strmi	r2, [r4, #0]
   1f40e:	b91b      	cbnz	r3, 1f418 <_printf_i+0x178>
   1f410:	6822      	ldr	r2, [r4, #0]
   1f412:	f022 0220 	bic.w	r2, r2, #32
   1f416:	6022      	str	r2, [r4, #0]
   1f418:	2210      	movs	r2, #16
   1f41a:	e7b1      	b.n	1f380 <_printf_i+0xe0>
   1f41c:	4675      	mov	r5, lr
   1f41e:	fbb3 f0f2 	udiv	r0, r3, r2
   1f422:	fb02 3310 	mls	r3, r2, r0, r3
   1f426:	5ccb      	ldrb	r3, [r1, r3]
   1f428:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1f42c:	4603      	mov	r3, r0
   1f42e:	2800      	cmp	r0, #0
   1f430:	d1f5      	bne.n	1f41e <_printf_i+0x17e>
   1f432:	e7b7      	b.n	1f3a4 <_printf_i+0x104>
   1f434:	6808      	ldr	r0, [r1, #0]
   1f436:	681a      	ldr	r2, [r3, #0]
   1f438:	f010 0f80 	tst.w	r0, #128	; 0x80
   1f43c:	6949      	ldr	r1, [r1, #20]
   1f43e:	d004      	beq.n	1f44a <_printf_i+0x1aa>
   1f440:	1d10      	adds	r0, r2, #4
   1f442:	6018      	str	r0, [r3, #0]
   1f444:	6813      	ldr	r3, [r2, #0]
   1f446:	6019      	str	r1, [r3, #0]
   1f448:	e007      	b.n	1f45a <_printf_i+0x1ba>
   1f44a:	f010 0f40 	tst.w	r0, #64	; 0x40
   1f44e:	f102 0004 	add.w	r0, r2, #4
   1f452:	6018      	str	r0, [r3, #0]
   1f454:	6813      	ldr	r3, [r2, #0]
   1f456:	d0f6      	beq.n	1f446 <_printf_i+0x1a6>
   1f458:	8019      	strh	r1, [r3, #0]
   1f45a:	2300      	movs	r3, #0
   1f45c:	4675      	mov	r5, lr
   1f45e:	6123      	str	r3, [r4, #16]
   1f460:	e7b1      	b.n	1f3c6 <_printf_i+0x126>
   1f462:	681a      	ldr	r2, [r3, #0]
   1f464:	1d11      	adds	r1, r2, #4
   1f466:	6019      	str	r1, [r3, #0]
   1f468:	6815      	ldr	r5, [r2, #0]
   1f46a:	2100      	movs	r1, #0
   1f46c:	6862      	ldr	r2, [r4, #4]
   1f46e:	4628      	mov	r0, r5
   1f470:	f7ff f83a 	bl	1e4e8 <memchr>
   1f474:	b108      	cbz	r0, 1f47a <_printf_i+0x1da>
   1f476:	1b40      	subs	r0, r0, r5
   1f478:	6060      	str	r0, [r4, #4]
   1f47a:	6863      	ldr	r3, [r4, #4]
   1f47c:	6123      	str	r3, [r4, #16]
   1f47e:	2300      	movs	r3, #0
   1f480:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1f484:	e79f      	b.n	1f3c6 <_printf_i+0x126>
   1f486:	6923      	ldr	r3, [r4, #16]
   1f488:	462a      	mov	r2, r5
   1f48a:	4639      	mov	r1, r7
   1f48c:	4630      	mov	r0, r6
   1f48e:	47c0      	blx	r8
   1f490:	3001      	adds	r0, #1
   1f492:	d0a2      	beq.n	1f3da <_printf_i+0x13a>
   1f494:	6823      	ldr	r3, [r4, #0]
   1f496:	079b      	lsls	r3, r3, #30
   1f498:	d507      	bpl.n	1f4aa <_printf_i+0x20a>
   1f49a:	2500      	movs	r5, #0
   1f49c:	f104 0919 	add.w	r9, r4, #25
   1f4a0:	68e3      	ldr	r3, [r4, #12]
   1f4a2:	9a03      	ldr	r2, [sp, #12]
   1f4a4:	1a9b      	subs	r3, r3, r2
   1f4a6:	429d      	cmp	r5, r3
   1f4a8:	db05      	blt.n	1f4b6 <_printf_i+0x216>
   1f4aa:	68e0      	ldr	r0, [r4, #12]
   1f4ac:	9b03      	ldr	r3, [sp, #12]
   1f4ae:	4298      	cmp	r0, r3
   1f4b0:	bfb8      	it	lt
   1f4b2:	4618      	movlt	r0, r3
   1f4b4:	e793      	b.n	1f3de <_printf_i+0x13e>
   1f4b6:	2301      	movs	r3, #1
   1f4b8:	464a      	mov	r2, r9
   1f4ba:	4639      	mov	r1, r7
   1f4bc:	4630      	mov	r0, r6
   1f4be:	47c0      	blx	r8
   1f4c0:	3001      	adds	r0, #1
   1f4c2:	d08a      	beq.n	1f3da <_printf_i+0x13a>
   1f4c4:	3501      	adds	r5, #1
   1f4c6:	e7eb      	b.n	1f4a0 <_printf_i+0x200>
   1f4c8:	2b00      	cmp	r3, #0
   1f4ca:	d1a7      	bne.n	1f41c <_printf_i+0x17c>
   1f4cc:	780b      	ldrb	r3, [r1, #0]
   1f4ce:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1f4d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1f4d6:	e765      	b.n	1f3a4 <_printf_i+0x104>
   1f4d8:	00027491 	.word	0x00027491
   1f4dc:	00027480 	.word	0x00027480

0001f4e0 <_scanf_float>:
_scanf_float():
   1f4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f4e4:	469a      	mov	sl, r3
   1f4e6:	688b      	ldr	r3, [r1, #8]
   1f4e8:	4616      	mov	r6, r2
   1f4ea:	1e5a      	subs	r2, r3, #1
   1f4ec:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1f4f0:	bf88      	it	hi
   1f4f2:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1f4f6:	b087      	sub	sp, #28
   1f4f8:	bf85      	ittet	hi
   1f4fa:	189b      	addhi	r3, r3, r2
   1f4fc:	9301      	strhi	r3, [sp, #4]
   1f4fe:	2300      	movls	r3, #0
   1f500:	f240 135d 	movwhi	r3, #349	; 0x15d
   1f504:	4688      	mov	r8, r1
   1f506:	f04f 0b00 	mov.w	fp, #0
   1f50a:	bf8c      	ite	hi
   1f50c:	608b      	strhi	r3, [r1, #8]
   1f50e:	9301      	strls	r3, [sp, #4]
   1f510:	680b      	ldr	r3, [r1, #0]
   1f512:	4607      	mov	r7, r0
   1f514:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1f518:	f848 3b1c 	str.w	r3, [r8], #28
   1f51c:	460c      	mov	r4, r1
   1f51e:	4645      	mov	r5, r8
   1f520:	465a      	mov	r2, fp
   1f522:	46d9      	mov	r9, fp
   1f524:	f8cd b010 	str.w	fp, [sp, #16]
   1f528:	f8cd b00c 	str.w	fp, [sp, #12]
   1f52c:	f8cd b008 	str.w	fp, [sp, #8]
   1f530:	68a1      	ldr	r1, [r4, #8]
   1f532:	b181      	cbz	r1, 1f556 <_scanf_float+0x76>
   1f534:	6833      	ldr	r3, [r6, #0]
   1f536:	781b      	ldrb	r3, [r3, #0]
   1f538:	2b49      	cmp	r3, #73	; 0x49
   1f53a:	d071      	beq.n	1f620 <_scanf_float+0x140>
   1f53c:	d84d      	bhi.n	1f5da <_scanf_float+0xfa>
   1f53e:	2b39      	cmp	r3, #57	; 0x39
   1f540:	d840      	bhi.n	1f5c4 <_scanf_float+0xe4>
   1f542:	2b31      	cmp	r3, #49	; 0x31
   1f544:	f080 8088 	bcs.w	1f658 <_scanf_float+0x178>
   1f548:	2b2d      	cmp	r3, #45	; 0x2d
   1f54a:	f000 8090 	beq.w	1f66e <_scanf_float+0x18e>
   1f54e:	d815      	bhi.n	1f57c <_scanf_float+0x9c>
   1f550:	2b2b      	cmp	r3, #43	; 0x2b
   1f552:	f000 808c 	beq.w	1f66e <_scanf_float+0x18e>
   1f556:	f1b9 0f00 	cmp.w	r9, #0
   1f55a:	d003      	beq.n	1f564 <_scanf_float+0x84>
   1f55c:	6823      	ldr	r3, [r4, #0]
   1f55e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1f562:	6023      	str	r3, [r4, #0]
   1f564:	3a01      	subs	r2, #1
   1f566:	2a01      	cmp	r2, #1
   1f568:	f200 80ea 	bhi.w	1f740 <_scanf_float+0x260>
   1f56c:	4545      	cmp	r5, r8
   1f56e:	f200 80dc 	bhi.w	1f72a <_scanf_float+0x24a>
   1f572:	2601      	movs	r6, #1
   1f574:	4630      	mov	r0, r6
   1f576:	b007      	add	sp, #28
   1f578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f57c:	2b2e      	cmp	r3, #46	; 0x2e
   1f57e:	f000 809f 	beq.w	1f6c0 <_scanf_float+0x1e0>
   1f582:	2b30      	cmp	r3, #48	; 0x30
   1f584:	d1e7      	bne.n	1f556 <_scanf_float+0x76>
   1f586:	6820      	ldr	r0, [r4, #0]
   1f588:	f410 7f80 	tst.w	r0, #256	; 0x100
   1f58c:	d064      	beq.n	1f658 <_scanf_float+0x178>
   1f58e:	9b01      	ldr	r3, [sp, #4]
   1f590:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1f594:	6020      	str	r0, [r4, #0]
   1f596:	f109 0901 	add.w	r9, r9, #1
   1f59a:	b11b      	cbz	r3, 1f5a4 <_scanf_float+0xc4>
   1f59c:	3b01      	subs	r3, #1
   1f59e:	3101      	adds	r1, #1
   1f5a0:	9301      	str	r3, [sp, #4]
   1f5a2:	60a1      	str	r1, [r4, #8]
   1f5a4:	68a3      	ldr	r3, [r4, #8]
   1f5a6:	3b01      	subs	r3, #1
   1f5a8:	60a3      	str	r3, [r4, #8]
   1f5aa:	6923      	ldr	r3, [r4, #16]
   1f5ac:	3301      	adds	r3, #1
   1f5ae:	6123      	str	r3, [r4, #16]
   1f5b0:	6873      	ldr	r3, [r6, #4]
   1f5b2:	3b01      	subs	r3, #1
   1f5b4:	2b00      	cmp	r3, #0
   1f5b6:	6073      	str	r3, [r6, #4]
   1f5b8:	f340 80ac 	ble.w	1f714 <_scanf_float+0x234>
   1f5bc:	6833      	ldr	r3, [r6, #0]
   1f5be:	3301      	adds	r3, #1
   1f5c0:	6033      	str	r3, [r6, #0]
   1f5c2:	e7b5      	b.n	1f530 <_scanf_float+0x50>
   1f5c4:	2b45      	cmp	r3, #69	; 0x45
   1f5c6:	f000 8085 	beq.w	1f6d4 <_scanf_float+0x1f4>
   1f5ca:	2b46      	cmp	r3, #70	; 0x46
   1f5cc:	d06a      	beq.n	1f6a4 <_scanf_float+0x1c4>
   1f5ce:	2b41      	cmp	r3, #65	; 0x41
   1f5d0:	d1c1      	bne.n	1f556 <_scanf_float+0x76>
   1f5d2:	2a01      	cmp	r2, #1
   1f5d4:	d1bf      	bne.n	1f556 <_scanf_float+0x76>
   1f5d6:	2202      	movs	r2, #2
   1f5d8:	e046      	b.n	1f668 <_scanf_float+0x188>
   1f5da:	2b65      	cmp	r3, #101	; 0x65
   1f5dc:	d07a      	beq.n	1f6d4 <_scanf_float+0x1f4>
   1f5de:	d818      	bhi.n	1f612 <_scanf_float+0x132>
   1f5e0:	2b54      	cmp	r3, #84	; 0x54
   1f5e2:	d066      	beq.n	1f6b2 <_scanf_float+0x1d2>
   1f5e4:	d811      	bhi.n	1f60a <_scanf_float+0x12a>
   1f5e6:	2b4e      	cmp	r3, #78	; 0x4e
   1f5e8:	d1b5      	bne.n	1f556 <_scanf_float+0x76>
   1f5ea:	2a00      	cmp	r2, #0
   1f5ec:	d146      	bne.n	1f67c <_scanf_float+0x19c>
   1f5ee:	f1b9 0f00 	cmp.w	r9, #0
   1f5f2:	d145      	bne.n	1f680 <_scanf_float+0x1a0>
   1f5f4:	6821      	ldr	r1, [r4, #0]
   1f5f6:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1f5fa:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1f5fe:	d13f      	bne.n	1f680 <_scanf_float+0x1a0>
   1f600:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f604:	6021      	str	r1, [r4, #0]
   1f606:	2201      	movs	r2, #1
   1f608:	e02e      	b.n	1f668 <_scanf_float+0x188>
   1f60a:	2b59      	cmp	r3, #89	; 0x59
   1f60c:	d01e      	beq.n	1f64c <_scanf_float+0x16c>
   1f60e:	2b61      	cmp	r3, #97	; 0x61
   1f610:	e7de      	b.n	1f5d0 <_scanf_float+0xf0>
   1f612:	2b6e      	cmp	r3, #110	; 0x6e
   1f614:	d0e9      	beq.n	1f5ea <_scanf_float+0x10a>
   1f616:	d815      	bhi.n	1f644 <_scanf_float+0x164>
   1f618:	2b66      	cmp	r3, #102	; 0x66
   1f61a:	d043      	beq.n	1f6a4 <_scanf_float+0x1c4>
   1f61c:	2b69      	cmp	r3, #105	; 0x69
   1f61e:	d19a      	bne.n	1f556 <_scanf_float+0x76>
   1f620:	f1bb 0f00 	cmp.w	fp, #0
   1f624:	d138      	bne.n	1f698 <_scanf_float+0x1b8>
   1f626:	f1b9 0f00 	cmp.w	r9, #0
   1f62a:	d197      	bne.n	1f55c <_scanf_float+0x7c>
   1f62c:	6821      	ldr	r1, [r4, #0]
   1f62e:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1f632:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1f636:	d195      	bne.n	1f564 <_scanf_float+0x84>
   1f638:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f63c:	6021      	str	r1, [r4, #0]
   1f63e:	f04f 0b01 	mov.w	fp, #1
   1f642:	e011      	b.n	1f668 <_scanf_float+0x188>
   1f644:	2b74      	cmp	r3, #116	; 0x74
   1f646:	d034      	beq.n	1f6b2 <_scanf_float+0x1d2>
   1f648:	2b79      	cmp	r3, #121	; 0x79
   1f64a:	d184      	bne.n	1f556 <_scanf_float+0x76>
   1f64c:	f1bb 0f07 	cmp.w	fp, #7
   1f650:	d181      	bne.n	1f556 <_scanf_float+0x76>
   1f652:	f04f 0b08 	mov.w	fp, #8
   1f656:	e007      	b.n	1f668 <_scanf_float+0x188>
   1f658:	eb12 0f0b 	cmn.w	r2, fp
   1f65c:	f47f af7b 	bne.w	1f556 <_scanf_float+0x76>
   1f660:	6821      	ldr	r1, [r4, #0]
   1f662:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1f666:	6021      	str	r1, [r4, #0]
   1f668:	702b      	strb	r3, [r5, #0]
   1f66a:	3501      	adds	r5, #1
   1f66c:	e79a      	b.n	1f5a4 <_scanf_float+0xc4>
   1f66e:	6821      	ldr	r1, [r4, #0]
   1f670:	0608      	lsls	r0, r1, #24
   1f672:	f57f af70 	bpl.w	1f556 <_scanf_float+0x76>
   1f676:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1f67a:	e7f4      	b.n	1f666 <_scanf_float+0x186>
   1f67c:	2a02      	cmp	r2, #2
   1f67e:	d047      	beq.n	1f710 <_scanf_float+0x230>
   1f680:	f1bb 0f01 	cmp.w	fp, #1
   1f684:	d003      	beq.n	1f68e <_scanf_float+0x1ae>
   1f686:	f1bb 0f04 	cmp.w	fp, #4
   1f68a:	f47f af64 	bne.w	1f556 <_scanf_float+0x76>
   1f68e:	f10b 0b01 	add.w	fp, fp, #1
   1f692:	fa5f fb8b 	uxtb.w	fp, fp
   1f696:	e7e7      	b.n	1f668 <_scanf_float+0x188>
   1f698:	f1bb 0f03 	cmp.w	fp, #3
   1f69c:	d0f7      	beq.n	1f68e <_scanf_float+0x1ae>
   1f69e:	f1bb 0f05 	cmp.w	fp, #5
   1f6a2:	e7f2      	b.n	1f68a <_scanf_float+0x1aa>
   1f6a4:	f1bb 0f02 	cmp.w	fp, #2
   1f6a8:	f47f af55 	bne.w	1f556 <_scanf_float+0x76>
   1f6ac:	f04f 0b03 	mov.w	fp, #3
   1f6b0:	e7da      	b.n	1f668 <_scanf_float+0x188>
   1f6b2:	f1bb 0f06 	cmp.w	fp, #6
   1f6b6:	f47f af4e 	bne.w	1f556 <_scanf_float+0x76>
   1f6ba:	f04f 0b07 	mov.w	fp, #7
   1f6be:	e7d3      	b.n	1f668 <_scanf_float+0x188>
   1f6c0:	6821      	ldr	r1, [r4, #0]
   1f6c2:	0588      	lsls	r0, r1, #22
   1f6c4:	f57f af47 	bpl.w	1f556 <_scanf_float+0x76>
   1f6c8:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1f6cc:	6021      	str	r1, [r4, #0]
   1f6ce:	f8cd 9008 	str.w	r9, [sp, #8]
   1f6d2:	e7c9      	b.n	1f668 <_scanf_float+0x188>
   1f6d4:	6821      	ldr	r1, [r4, #0]
   1f6d6:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1f6da:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1f6de:	d006      	beq.n	1f6ee <_scanf_float+0x20e>
   1f6e0:	0548      	lsls	r0, r1, #21
   1f6e2:	f57f af38 	bpl.w	1f556 <_scanf_float+0x76>
   1f6e6:	f1b9 0f00 	cmp.w	r9, #0
   1f6ea:	f43f af3b 	beq.w	1f564 <_scanf_float+0x84>
   1f6ee:	0588      	lsls	r0, r1, #22
   1f6f0:	bf58      	it	pl
   1f6f2:	9802      	ldrpl	r0, [sp, #8]
   1f6f4:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f6f8:	bf58      	it	pl
   1f6fa:	eba9 0000 	subpl.w	r0, r9, r0
   1f6fe:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1f702:	bf5c      	itt	pl
   1f704:	9003      	strpl	r0, [sp, #12]
   1f706:	9504      	strpl	r5, [sp, #16]
   1f708:	6021      	str	r1, [r4, #0]
   1f70a:	f04f 0900 	mov.w	r9, #0
   1f70e:	e7ab      	b.n	1f668 <_scanf_float+0x188>
   1f710:	2203      	movs	r2, #3
   1f712:	e7a9      	b.n	1f668 <_scanf_float+0x188>
   1f714:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1f718:	4631      	mov	r1, r6
   1f71a:	4638      	mov	r0, r7
   1f71c:	9205      	str	r2, [sp, #20]
   1f71e:	4798      	blx	r3
   1f720:	9a05      	ldr	r2, [sp, #20]
   1f722:	2800      	cmp	r0, #0
   1f724:	f43f af04 	beq.w	1f530 <_scanf_float+0x50>
   1f728:	e715      	b.n	1f556 <_scanf_float+0x76>
   1f72a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f72e:	4632      	mov	r2, r6
   1f730:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f734:	4638      	mov	r0, r7
   1f736:	4798      	blx	r3
   1f738:	6923      	ldr	r3, [r4, #16]
   1f73a:	3b01      	subs	r3, #1
   1f73c:	6123      	str	r3, [r4, #16]
   1f73e:	e715      	b.n	1f56c <_scanf_float+0x8c>
   1f740:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1f744:	2b06      	cmp	r3, #6
   1f746:	d80a      	bhi.n	1f75e <_scanf_float+0x27e>
   1f748:	f1bb 0f02 	cmp.w	fp, #2
   1f74c:	d92f      	bls.n	1f7ae <_scanf_float+0x2ce>
   1f74e:	f1ab 0b03 	sub.w	fp, fp, #3
   1f752:	fa5f fb8b 	uxtb.w	fp, fp
   1f756:	eba5 0b0b 	sub.w	fp, r5, fp
   1f75a:	455d      	cmp	r5, fp
   1f75c:	d112      	bne.n	1f784 <_scanf_float+0x2a4>
   1f75e:	6823      	ldr	r3, [r4, #0]
   1f760:	05da      	lsls	r2, r3, #23
   1f762:	d545      	bpl.n	1f7f0 <_scanf_float+0x310>
   1f764:	055b      	lsls	r3, r3, #21
   1f766:	d525      	bpl.n	1f7b4 <_scanf_float+0x2d4>
   1f768:	4545      	cmp	r5, r8
   1f76a:	f67f af02 	bls.w	1f572 <_scanf_float+0x92>
   1f76e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f772:	4632      	mov	r2, r6
   1f774:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f778:	4638      	mov	r0, r7
   1f77a:	4798      	blx	r3
   1f77c:	6923      	ldr	r3, [r4, #16]
   1f77e:	3b01      	subs	r3, #1
   1f780:	6123      	str	r3, [r4, #16]
   1f782:	e7f1      	b.n	1f768 <_scanf_float+0x288>
   1f784:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f788:	4632      	mov	r2, r6
   1f78a:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f78e:	4638      	mov	r0, r7
   1f790:	4798      	blx	r3
   1f792:	6923      	ldr	r3, [r4, #16]
   1f794:	3b01      	subs	r3, #1
   1f796:	6123      	str	r3, [r4, #16]
   1f798:	e7df      	b.n	1f75a <_scanf_float+0x27a>
   1f79a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f79e:	4632      	mov	r2, r6
   1f7a0:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f7a4:	4638      	mov	r0, r7
   1f7a6:	4798      	blx	r3
   1f7a8:	6923      	ldr	r3, [r4, #16]
   1f7aa:	3b01      	subs	r3, #1
   1f7ac:	6123      	str	r3, [r4, #16]
   1f7ae:	4545      	cmp	r5, r8
   1f7b0:	d8f3      	bhi.n	1f79a <_scanf_float+0x2ba>
   1f7b2:	e6de      	b.n	1f572 <_scanf_float+0x92>
   1f7b4:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1f7b8:	6923      	ldr	r3, [r4, #16]
   1f7ba:	2965      	cmp	r1, #101	; 0x65
   1f7bc:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1f7c0:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1f7c4:	6123      	str	r3, [r4, #16]
   1f7c6:	d00d      	beq.n	1f7e4 <_scanf_float+0x304>
   1f7c8:	2945      	cmp	r1, #69	; 0x45
   1f7ca:	d00b      	beq.n	1f7e4 <_scanf_float+0x304>
   1f7cc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f7d0:	4632      	mov	r2, r6
   1f7d2:	4638      	mov	r0, r7
   1f7d4:	4798      	blx	r3
   1f7d6:	6923      	ldr	r3, [r4, #16]
   1f7d8:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1f7dc:	3b01      	subs	r3, #1
   1f7de:	f1a5 0b02 	sub.w	fp, r5, #2
   1f7e2:	6123      	str	r3, [r4, #16]
   1f7e4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f7e8:	4632      	mov	r2, r6
   1f7ea:	4638      	mov	r0, r7
   1f7ec:	4798      	blx	r3
   1f7ee:	465d      	mov	r5, fp
   1f7f0:	6826      	ldr	r6, [r4, #0]
   1f7f2:	f016 0610 	ands.w	r6, r6, #16
   1f7f6:	d14e      	bne.n	1f896 <_scanf_float+0x3b6>
   1f7f8:	702e      	strb	r6, [r5, #0]
   1f7fa:	6823      	ldr	r3, [r4, #0]
   1f7fc:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1f800:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1f804:	d11c      	bne.n	1f840 <_scanf_float+0x360>
   1f806:	9b02      	ldr	r3, [sp, #8]
   1f808:	eba9 0303 	sub.w	r3, r9, r3
   1f80c:	425a      	negs	r2, r3
   1f80e:	bb23      	cbnz	r3, 1f85a <_scanf_float+0x37a>
   1f810:	2200      	movs	r2, #0
   1f812:	4641      	mov	r1, r8
   1f814:	4638      	mov	r0, r7
   1f816:	f001 faa3 	bl	20d60 <_strtod_r>
   1f81a:	6825      	ldr	r5, [r4, #0]
   1f81c:	f8da 3000 	ldr.w	r3, [sl]
   1f820:	f015 0f02 	tst.w	r5, #2
   1f824:	f103 0204 	add.w	r2, r3, #4
   1f828:	4680      	mov	r8, r0
   1f82a:	4689      	mov	r9, r1
   1f82c:	f8ca 2000 	str.w	r2, [sl]
   1f830:	d01e      	beq.n	1f870 <_scanf_float+0x390>
   1f832:	681b      	ldr	r3, [r3, #0]
   1f834:	e9c3 8900 	strd	r8, r9, [r3]
   1f838:	68e3      	ldr	r3, [r4, #12]
   1f83a:	3301      	adds	r3, #1
   1f83c:	60e3      	str	r3, [r4, #12]
   1f83e:	e699      	b.n	1f574 <_scanf_float+0x94>
   1f840:	9b03      	ldr	r3, [sp, #12]
   1f842:	2b00      	cmp	r3, #0
   1f844:	d0e4      	beq.n	1f810 <_scanf_float+0x330>
   1f846:	9904      	ldr	r1, [sp, #16]
   1f848:	230a      	movs	r3, #10
   1f84a:	4632      	mov	r2, r6
   1f84c:	3101      	adds	r1, #1
   1f84e:	4638      	mov	r0, r7
   1f850:	f001 fb42 	bl	20ed8 <_strtol_r>
   1f854:	9b03      	ldr	r3, [sp, #12]
   1f856:	9d04      	ldr	r5, [sp, #16]
   1f858:	1ac2      	subs	r2, r0, r3
   1f85a:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1f85e:	429d      	cmp	r5, r3
   1f860:	bf28      	it	cs
   1f862:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1f866:	490d      	ldr	r1, [pc, #52]	; (1f89c <_scanf_float+0x3bc>)
   1f868:	4628      	mov	r0, r5
   1f86a:	f000 faf9 	bl	1fe60 <siprintf>
   1f86e:	e7cf      	b.n	1f810 <_scanf_float+0x330>
   1f870:	f015 0504 	ands.w	r5, r5, #4
   1f874:	d1dd      	bne.n	1f832 <_scanf_float+0x352>
   1f876:	681f      	ldr	r7, [r3, #0]
   1f878:	4602      	mov	r2, r0
   1f87a:	460b      	mov	r3, r1
   1f87c:	f004 ff90 	bl	247a0 <__aeabi_dcmpun>
   1f880:	b120      	cbz	r0, 1f88c <_scanf_float+0x3ac>
   1f882:	4628      	mov	r0, r5
   1f884:	f000 fa70 	bl	1fd68 <nanf>
   1f888:	6038      	str	r0, [r7, #0]
   1f88a:	e7d5      	b.n	1f838 <_scanf_float+0x358>
   1f88c:	4640      	mov	r0, r8
   1f88e:	4649      	mov	r1, r9
   1f890:	f7fd fc9e 	bl	1d1d0 <__aeabi_d2f>
   1f894:	e7f8      	b.n	1f888 <_scanf_float+0x3a8>
   1f896:	2600      	movs	r6, #0
   1f898:	e66c      	b.n	1f574 <_scanf_float+0x94>
   1f89a:	bf00      	nop
   1f89c:	000274a2 	.word	0x000274a2

0001f8a0 <_open_r>:
_open_r():
   1f8a0:	b538      	push	{r3, r4, r5, lr}
   1f8a2:	4605      	mov	r5, r0
   1f8a4:	4608      	mov	r0, r1
   1f8a6:	4611      	mov	r1, r2
   1f8a8:	2200      	movs	r2, #0
   1f8aa:	4c05      	ldr	r4, [pc, #20]	; (1f8c0 <_open_r+0x20>)
   1f8ac:	6022      	str	r2, [r4, #0]
   1f8ae:	461a      	mov	r2, r3
   1f8b0:	f7f7 fa2a 	bl	16d08 <_open>
   1f8b4:	1c43      	adds	r3, r0, #1
   1f8b6:	d102      	bne.n	1f8be <_open_r+0x1e>
   1f8b8:	6823      	ldr	r3, [r4, #0]
   1f8ba:	b103      	cbz	r3, 1f8be <_open_r+0x1e>
   1f8bc:	602b      	str	r3, [r5, #0]
   1f8be:	bd38      	pop	{r3, r4, r5, pc}
   1f8c0:	2007c8fc 	.word	0x2007c8fc

0001f8c4 <iprintf>:
iprintf():
   1f8c4:	b40f      	push	{r0, r1, r2, r3}
   1f8c6:	4b0a      	ldr	r3, [pc, #40]	; (1f8f0 <iprintf+0x2c>)
   1f8c8:	b513      	push	{r0, r1, r4, lr}
   1f8ca:	681c      	ldr	r4, [r3, #0]
   1f8cc:	b124      	cbz	r4, 1f8d8 <iprintf+0x14>
   1f8ce:	69a3      	ldr	r3, [r4, #24]
   1f8d0:	b913      	cbnz	r3, 1f8d8 <iprintf+0x14>
   1f8d2:	4620      	mov	r0, r4
   1f8d4:	f7fe fa78 	bl	1ddc8 <__sinit>
   1f8d8:	ab05      	add	r3, sp, #20
   1f8da:	9a04      	ldr	r2, [sp, #16]
   1f8dc:	68a1      	ldr	r1, [r4, #8]
   1f8de:	4620      	mov	r0, r4
   1f8e0:	9301      	str	r3, [sp, #4]
   1f8e2:	f004 f94b 	bl	23b7c <_vfiprintf_r>
   1f8e6:	b002      	add	sp, #8
   1f8e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1f8ec:	b004      	add	sp, #16
   1f8ee:	4770      	bx	lr
   1f8f0:	2007c0e4 	.word	0x2007c0e4

0001f8f4 <_puts_r>:
_puts_r():
   1f8f4:	b570      	push	{r4, r5, r6, lr}
   1f8f6:	460e      	mov	r6, r1
   1f8f8:	4605      	mov	r5, r0
   1f8fa:	b118      	cbz	r0, 1f904 <_puts_r+0x10>
   1f8fc:	6983      	ldr	r3, [r0, #24]
   1f8fe:	b90b      	cbnz	r3, 1f904 <_puts_r+0x10>
   1f900:	f7fe fa62 	bl	1ddc8 <__sinit>
   1f904:	69ab      	ldr	r3, [r5, #24]
   1f906:	68ac      	ldr	r4, [r5, #8]
   1f908:	b913      	cbnz	r3, 1f910 <_puts_r+0x1c>
   1f90a:	4628      	mov	r0, r5
   1f90c:	f7fe fa5c 	bl	1ddc8 <__sinit>
   1f910:	4b23      	ldr	r3, [pc, #140]	; (1f9a0 <_puts_r+0xac>)
   1f912:	429c      	cmp	r4, r3
   1f914:	d117      	bne.n	1f946 <_puts_r+0x52>
   1f916:	686c      	ldr	r4, [r5, #4]
   1f918:	89a3      	ldrh	r3, [r4, #12]
   1f91a:	071b      	lsls	r3, r3, #28
   1f91c:	d51d      	bpl.n	1f95a <_puts_r+0x66>
   1f91e:	6923      	ldr	r3, [r4, #16]
   1f920:	b1db      	cbz	r3, 1f95a <_puts_r+0x66>
   1f922:	3e01      	subs	r6, #1
   1f924:	68a3      	ldr	r3, [r4, #8]
   1f926:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1f92a:	3b01      	subs	r3, #1
   1f92c:	60a3      	str	r3, [r4, #8]
   1f92e:	b9e9      	cbnz	r1, 1f96c <_puts_r+0x78>
   1f930:	2b00      	cmp	r3, #0
   1f932:	da2e      	bge.n	1f992 <_puts_r+0x9e>
   1f934:	4622      	mov	r2, r4
   1f936:	210a      	movs	r1, #10
   1f938:	4628      	mov	r0, r5
   1f93a:	f001 fdbd 	bl	214b8 <__swbuf_r>
   1f93e:	3001      	adds	r0, #1
   1f940:	d011      	beq.n	1f966 <_puts_r+0x72>
   1f942:	200a      	movs	r0, #10
   1f944:	bd70      	pop	{r4, r5, r6, pc}
   1f946:	4b17      	ldr	r3, [pc, #92]	; (1f9a4 <_puts_r+0xb0>)
   1f948:	429c      	cmp	r4, r3
   1f94a:	d101      	bne.n	1f950 <_puts_r+0x5c>
   1f94c:	68ac      	ldr	r4, [r5, #8]
   1f94e:	e7e3      	b.n	1f918 <_puts_r+0x24>
   1f950:	4b15      	ldr	r3, [pc, #84]	; (1f9a8 <_puts_r+0xb4>)
   1f952:	429c      	cmp	r4, r3
   1f954:	bf08      	it	eq
   1f956:	68ec      	ldreq	r4, [r5, #12]
   1f958:	e7de      	b.n	1f918 <_puts_r+0x24>
   1f95a:	4621      	mov	r1, r4
   1f95c:	4628      	mov	r0, r5
   1f95e:	f001 fe1d 	bl	2159c <__swsetup_r>
   1f962:	2800      	cmp	r0, #0
   1f964:	d0dd      	beq.n	1f922 <_puts_r+0x2e>
   1f966:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f96a:	bd70      	pop	{r4, r5, r6, pc}
   1f96c:	2b00      	cmp	r3, #0
   1f96e:	da04      	bge.n	1f97a <_puts_r+0x86>
   1f970:	69a2      	ldr	r2, [r4, #24]
   1f972:	4293      	cmp	r3, r2
   1f974:	db06      	blt.n	1f984 <_puts_r+0x90>
   1f976:	290a      	cmp	r1, #10
   1f978:	d004      	beq.n	1f984 <_puts_r+0x90>
   1f97a:	6823      	ldr	r3, [r4, #0]
   1f97c:	1c5a      	adds	r2, r3, #1
   1f97e:	6022      	str	r2, [r4, #0]
   1f980:	7019      	strb	r1, [r3, #0]
   1f982:	e7cf      	b.n	1f924 <_puts_r+0x30>
   1f984:	4622      	mov	r2, r4
   1f986:	4628      	mov	r0, r5
   1f988:	f001 fd96 	bl	214b8 <__swbuf_r>
   1f98c:	3001      	adds	r0, #1
   1f98e:	d1c9      	bne.n	1f924 <_puts_r+0x30>
   1f990:	e7e9      	b.n	1f966 <_puts_r+0x72>
   1f992:	200a      	movs	r0, #10
   1f994:	6823      	ldr	r3, [r4, #0]
   1f996:	1c5a      	adds	r2, r3, #1
   1f998:	6022      	str	r2, [r4, #0]
   1f99a:	7018      	strb	r0, [r3, #0]
   1f99c:	bd70      	pop	{r4, r5, r6, pc}
   1f99e:	bf00      	nop
   1f9a0:	00027364 	.word	0x00027364
   1f9a4:	00027384 	.word	0x00027384
   1f9a8:	00027344 	.word	0x00027344

0001f9ac <puts>:
puts():
   1f9ac:	4b02      	ldr	r3, [pc, #8]	; (1f9b8 <puts+0xc>)
   1f9ae:	4601      	mov	r1, r0
   1f9b0:	6818      	ldr	r0, [r3, #0]
   1f9b2:	f7ff bf9f 	b.w	1f8f4 <_puts_r>
   1f9b6:	bf00      	nop
   1f9b8:	2007c0e4 	.word	0x2007c0e4

0001f9bc <srand>:
srand():
   1f9bc:	b538      	push	{r3, r4, r5, lr}
   1f9be:	4b12      	ldr	r3, [pc, #72]	; (1fa08 <srand+0x4c>)
   1f9c0:	4605      	mov	r5, r0
   1f9c2:	681c      	ldr	r4, [r3, #0]
   1f9c4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f9c6:	b9d3      	cbnz	r3, 1f9fe <srand+0x42>
   1f9c8:	2018      	movs	r0, #24
   1f9ca:	f7fe fd6b 	bl	1e4a4 <malloc>
   1f9ce:	f243 330e 	movw	r3, #13070	; 0x330e
   1f9d2:	63a0      	str	r0, [r4, #56]	; 0x38
   1f9d4:	8003      	strh	r3, [r0, #0]
   1f9d6:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1f9da:	8043      	strh	r3, [r0, #2]
   1f9dc:	f241 2334 	movw	r3, #4660	; 0x1234
   1f9e0:	8083      	strh	r3, [r0, #4]
   1f9e2:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1f9e6:	80c3      	strh	r3, [r0, #6]
   1f9e8:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1f9ec:	8103      	strh	r3, [r0, #8]
   1f9ee:	2305      	movs	r3, #5
   1f9f0:	8143      	strh	r3, [r0, #10]
   1f9f2:	230b      	movs	r3, #11
   1f9f4:	2201      	movs	r2, #1
   1f9f6:	8183      	strh	r3, [r0, #12]
   1f9f8:	2300      	movs	r3, #0
   1f9fa:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1f9fe:	2200      	movs	r2, #0
   1fa00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1fa02:	611d      	str	r5, [r3, #16]
   1fa04:	615a      	str	r2, [r3, #20]
   1fa06:	bd38      	pop	{r3, r4, r5, pc}
   1fa08:	2007c0e4 	.word	0x2007c0e4

0001fa0c <rand>:
rand():
   1fa0c:	4b19      	ldr	r3, [pc, #100]	; (1fa74 <rand+0x68>)
   1fa0e:	b510      	push	{r4, lr}
   1fa10:	681c      	ldr	r4, [r3, #0]
   1fa12:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1fa14:	b9d3      	cbnz	r3, 1fa4c <rand+0x40>
   1fa16:	2018      	movs	r0, #24
   1fa18:	f7fe fd44 	bl	1e4a4 <malloc>
   1fa1c:	f243 330e 	movw	r3, #13070	; 0x330e
   1fa20:	63a0      	str	r0, [r4, #56]	; 0x38
   1fa22:	8003      	strh	r3, [r0, #0]
   1fa24:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1fa28:	8043      	strh	r3, [r0, #2]
   1fa2a:	f241 2334 	movw	r3, #4660	; 0x1234
   1fa2e:	8083      	strh	r3, [r0, #4]
   1fa30:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1fa34:	80c3      	strh	r3, [r0, #6]
   1fa36:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1fa3a:	8103      	strh	r3, [r0, #8]
   1fa3c:	2305      	movs	r3, #5
   1fa3e:	8143      	strh	r3, [r0, #10]
   1fa40:	230b      	movs	r3, #11
   1fa42:	2201      	movs	r2, #1
   1fa44:	8183      	strh	r3, [r0, #12]
   1fa46:	2300      	movs	r3, #0
   1fa48:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1fa4c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1fa4e:	480a      	ldr	r0, [pc, #40]	; (1fa78 <rand+0x6c>)
   1fa50:	690a      	ldr	r2, [r1, #16]
   1fa52:	694b      	ldr	r3, [r1, #20]
   1fa54:	4350      	muls	r0, r2
   1fa56:	4c09      	ldr	r4, [pc, #36]	; (1fa7c <rand+0x70>)
   1fa58:	fb04 0003 	mla	r0, r4, r3, r0
   1fa5c:	fba2 2304 	umull	r2, r3, r2, r4
   1fa60:	3201      	adds	r2, #1
   1fa62:	4403      	add	r3, r0
   1fa64:	f143 0300 	adc.w	r3, r3, #0
   1fa68:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1fa6c:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1fa70:	bd10      	pop	{r4, pc}
   1fa72:	bf00      	nop
   1fa74:	2007c0e4 	.word	0x2007c0e4
   1fa78:	5851f42d 	.word	0x5851f42d
   1fa7c:	4c957f2d 	.word	0x4c957f2d

0001fa80 <realloc>:
realloc():
   1fa80:	4b02      	ldr	r3, [pc, #8]	; (1fa8c <realloc+0xc>)
   1fa82:	460a      	mov	r2, r1
   1fa84:	4601      	mov	r1, r0
   1fa86:	6818      	ldr	r0, [r3, #0]
   1fa88:	f003 bd2c 	b.w	234e4 <_realloc_r>
   1fa8c:	2007c0e4 	.word	0x2007c0e4

0001fa90 <lflush>:
lflush():
   1fa90:	8983      	ldrh	r3, [r0, #12]
   1fa92:	f003 0309 	and.w	r3, r3, #9
   1fa96:	2b09      	cmp	r3, #9
   1fa98:	d101      	bne.n	1fa9e <lflush+0xe>
   1fa9a:	f7fe b943 	b.w	1dd24 <fflush>
   1fa9e:	2000      	movs	r0, #0
   1faa0:	4770      	bx	lr
   1faa2:	Address 0x000000000001faa2 is out of bounds.


0001faa4 <__srefill_r>:
__srefill_r():
   1faa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1faa6:	460c      	mov	r4, r1
   1faa8:	4605      	mov	r5, r0
   1faaa:	b118      	cbz	r0, 1fab4 <__srefill_r+0x10>
   1faac:	6983      	ldr	r3, [r0, #24]
   1faae:	b90b      	cbnz	r3, 1fab4 <__srefill_r+0x10>
   1fab0:	f7fe f98a 	bl	1ddc8 <__sinit>
   1fab4:	4b3c      	ldr	r3, [pc, #240]	; (1fba8 <__srefill_r+0x104>)
   1fab6:	429c      	cmp	r4, r3
   1fab8:	d10a      	bne.n	1fad0 <__srefill_r+0x2c>
   1faba:	686c      	ldr	r4, [r5, #4]
   1fabc:	2300      	movs	r3, #0
   1fabe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1fac2:	6063      	str	r3, [r4, #4]
   1fac4:	b293      	uxth	r3, r2
   1fac6:	069e      	lsls	r6, r3, #26
   1fac8:	d50c      	bpl.n	1fae4 <__srefill_r+0x40>
   1faca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1face:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fad0:	4b36      	ldr	r3, [pc, #216]	; (1fbac <__srefill_r+0x108>)
   1fad2:	429c      	cmp	r4, r3
   1fad4:	d101      	bne.n	1fada <__srefill_r+0x36>
   1fad6:	68ac      	ldr	r4, [r5, #8]
   1fad8:	e7f0      	b.n	1fabc <__srefill_r+0x18>
   1fada:	4b35      	ldr	r3, [pc, #212]	; (1fbb0 <__srefill_r+0x10c>)
   1fadc:	429c      	cmp	r4, r3
   1fade:	bf08      	it	eq
   1fae0:	68ec      	ldreq	r4, [r5, #12]
   1fae2:	e7eb      	b.n	1fabc <__srefill_r+0x18>
   1fae4:	0758      	lsls	r0, r3, #29
   1fae6:	d449      	bmi.n	1fb7c <__srefill_r+0xd8>
   1fae8:	06d9      	lsls	r1, r3, #27
   1faea:	d405      	bmi.n	1faf8 <__srefill_r+0x54>
   1faec:	2309      	movs	r3, #9
   1faee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1faf2:	602b      	str	r3, [r5, #0]
   1faf4:	81a2      	strh	r2, [r4, #12]
   1faf6:	e7e8      	b.n	1faca <__srefill_r+0x26>
   1faf8:	071a      	lsls	r2, r3, #28
   1fafa:	d50b      	bpl.n	1fb14 <__srefill_r+0x70>
   1fafc:	4621      	mov	r1, r4
   1fafe:	4628      	mov	r0, r5
   1fb00:	f7fe f8e6 	bl	1dcd0 <_fflush_r>
   1fb04:	2800      	cmp	r0, #0
   1fb06:	d1e0      	bne.n	1faca <__srefill_r+0x26>
   1fb08:	89a3      	ldrh	r3, [r4, #12]
   1fb0a:	60a0      	str	r0, [r4, #8]
   1fb0c:	f023 0308 	bic.w	r3, r3, #8
   1fb10:	81a3      	strh	r3, [r4, #12]
   1fb12:	61a0      	str	r0, [r4, #24]
   1fb14:	89a3      	ldrh	r3, [r4, #12]
   1fb16:	f043 0304 	orr.w	r3, r3, #4
   1fb1a:	81a3      	strh	r3, [r4, #12]
   1fb1c:	6923      	ldr	r3, [r4, #16]
   1fb1e:	b91b      	cbnz	r3, 1fb28 <__srefill_r+0x84>
   1fb20:	4621      	mov	r1, r4
   1fb22:	4628      	mov	r0, r5
   1fb24:	f7fe fc7e 	bl	1e424 <__smakebuf_r>
   1fb28:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1fb2c:	b2be      	uxth	r6, r7
   1fb2e:	07b3      	lsls	r3, r6, #30
   1fb30:	d00f      	beq.n	1fb52 <__srefill_r+0xae>
   1fb32:	2301      	movs	r3, #1
   1fb34:	81a3      	strh	r3, [r4, #12]
   1fb36:	4b1f      	ldr	r3, [pc, #124]	; (1fbb4 <__srefill_r+0x110>)
   1fb38:	491f      	ldr	r1, [pc, #124]	; (1fbb8 <__srefill_r+0x114>)
   1fb3a:	6818      	ldr	r0, [r3, #0]
   1fb3c:	f006 0609 	and.w	r6, r6, #9
   1fb40:	f7fe fa8a 	bl	1e058 <_fwalk>
   1fb44:	2e09      	cmp	r6, #9
   1fb46:	81a7      	strh	r7, [r4, #12]
   1fb48:	d103      	bne.n	1fb52 <__srefill_r+0xae>
   1fb4a:	4621      	mov	r1, r4
   1fb4c:	4628      	mov	r0, r5
   1fb4e:	f7fe f837 	bl	1dbc0 <__sflush_r>
   1fb52:	6922      	ldr	r2, [r4, #16]
   1fb54:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1fb56:	6022      	str	r2, [r4, #0]
   1fb58:	6963      	ldr	r3, [r4, #20]
   1fb5a:	6a21      	ldr	r1, [r4, #32]
   1fb5c:	4628      	mov	r0, r5
   1fb5e:	47b0      	blx	r6
   1fb60:	2800      	cmp	r0, #0
   1fb62:	6060      	str	r0, [r4, #4]
   1fb64:	dc1d      	bgt.n	1fba2 <__srefill_r+0xfe>
   1fb66:	bf18      	it	ne
   1fb68:	2200      	movne	r2, #0
   1fb6a:	89a3      	ldrh	r3, [r4, #12]
   1fb6c:	bf16      	itet	ne
   1fb6e:	6062      	strne	r2, [r4, #4]
   1fb70:	f043 0320 	orreq.w	r3, r3, #32
   1fb74:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1fb78:	81a3      	strh	r3, [r4, #12]
   1fb7a:	e7a6      	b.n	1faca <__srefill_r+0x26>
   1fb7c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1fb7e:	2900      	cmp	r1, #0
   1fb80:	d0cc      	beq.n	1fb1c <__srefill_r+0x78>
   1fb82:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fb86:	4299      	cmp	r1, r3
   1fb88:	d002      	beq.n	1fb90 <__srefill_r+0xec>
   1fb8a:	4628      	mov	r0, r5
   1fb8c:	f7fe ff6a 	bl	1ea64 <_free_r>
   1fb90:	2000      	movs	r0, #0
   1fb92:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1fb94:	6360      	str	r0, [r4, #52]	; 0x34
   1fb96:	6063      	str	r3, [r4, #4]
   1fb98:	2b00      	cmp	r3, #0
   1fb9a:	d0bf      	beq.n	1fb1c <__srefill_r+0x78>
   1fb9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1fb9e:	6023      	str	r3, [r4, #0]
   1fba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fba2:	2000      	movs	r0, #0
   1fba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fba6:	bf00      	nop
   1fba8:	00027364 	.word	0x00027364
   1fbac:	00027384 	.word	0x00027384
   1fbb0:	00027344 	.word	0x00027344
   1fbb4:	000273a4 	.word	0x000273a4
   1fbb8:	0001fa91 	.word	0x0001fa91

0001fbbc <_sbrk_r>:
_sbrk_r():
   1fbbc:	b538      	push	{r3, r4, r5, lr}
   1fbbe:	2300      	movs	r3, #0
   1fbc0:	4c05      	ldr	r4, [pc, #20]	; (1fbd8 <_sbrk_r+0x1c>)
   1fbc2:	4605      	mov	r5, r0
   1fbc4:	4608      	mov	r0, r1
   1fbc6:	6023      	str	r3, [r4, #0]
   1fbc8:	f7f6 fe56 	bl	16878 <_sbrk>
   1fbcc:	1c43      	adds	r3, r0, #1
   1fbce:	d102      	bne.n	1fbd6 <_sbrk_r+0x1a>
   1fbd0:	6823      	ldr	r3, [r4, #0]
   1fbd2:	b103      	cbz	r3, 1fbd6 <_sbrk_r+0x1a>
   1fbd4:	602b      	str	r3, [r5, #0]
   1fbd6:	bd38      	pop	{r3, r4, r5, pc}
   1fbd8:	2007c8fc 	.word	0x2007c8fc

0001fbdc <iscanf>:
scanf():
   1fbdc:	b40f      	push	{r0, r1, r2, r3}
   1fbde:	4b0a      	ldr	r3, [pc, #40]	; (1fc08 <iscanf+0x2c>)
   1fbe0:	b513      	push	{r0, r1, r4, lr}
   1fbe2:	681c      	ldr	r4, [r3, #0]
   1fbe4:	b124      	cbz	r4, 1fbf0 <iscanf+0x14>
   1fbe6:	69a3      	ldr	r3, [r4, #24]
   1fbe8:	b913      	cbnz	r3, 1fbf0 <iscanf+0x14>
   1fbea:	4620      	mov	r0, r4
   1fbec:	f7fe f8ec 	bl	1ddc8 <__sinit>
   1fbf0:	ab05      	add	r3, sp, #20
   1fbf2:	9a04      	ldr	r2, [sp, #16]
   1fbf4:	6861      	ldr	r1, [r4, #4]
   1fbf6:	4620      	mov	r0, r4
   1fbf8:	9301      	str	r3, [sp, #4]
   1fbfa:	f004 fa29 	bl	24050 <_vfiscanf_r>
   1fbfe:	b002      	add	sp, #8
   1fc00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1fc04:	b004      	add	sp, #16
   1fc06:	4770      	bx	lr
   1fc08:	2007c0e4 	.word	0x2007c0e4

0001fc0c <setvbuf>:
setvbuf():
   1fc0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1fc10:	461d      	mov	r5, r3
   1fc12:	4b51      	ldr	r3, [pc, #324]	; (1fd58 <setvbuf+0x14c>)
   1fc14:	4604      	mov	r4, r0
   1fc16:	681e      	ldr	r6, [r3, #0]
   1fc18:	460f      	mov	r7, r1
   1fc1a:	4690      	mov	r8, r2
   1fc1c:	b126      	cbz	r6, 1fc28 <setvbuf+0x1c>
   1fc1e:	69b3      	ldr	r3, [r6, #24]
   1fc20:	b913      	cbnz	r3, 1fc28 <setvbuf+0x1c>
   1fc22:	4630      	mov	r0, r6
   1fc24:	f7fe f8d0 	bl	1ddc8 <__sinit>
   1fc28:	4b4c      	ldr	r3, [pc, #304]	; (1fd5c <setvbuf+0x150>)
   1fc2a:	429c      	cmp	r4, r3
   1fc2c:	d152      	bne.n	1fcd4 <setvbuf+0xc8>
   1fc2e:	6874      	ldr	r4, [r6, #4]
   1fc30:	f1b8 0f02 	cmp.w	r8, #2
   1fc34:	d006      	beq.n	1fc44 <setvbuf+0x38>
   1fc36:	f1b8 0f01 	cmp.w	r8, #1
   1fc3a:	f200 8089 	bhi.w	1fd50 <setvbuf+0x144>
   1fc3e:	2d00      	cmp	r5, #0
   1fc40:	f2c0 8086 	blt.w	1fd50 <setvbuf+0x144>
   1fc44:	4621      	mov	r1, r4
   1fc46:	4630      	mov	r0, r6
   1fc48:	f7fe f842 	bl	1dcd0 <_fflush_r>
   1fc4c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1fc4e:	b141      	cbz	r1, 1fc62 <setvbuf+0x56>
   1fc50:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fc54:	4299      	cmp	r1, r3
   1fc56:	d002      	beq.n	1fc5e <setvbuf+0x52>
   1fc58:	4630      	mov	r0, r6
   1fc5a:	f7fe ff03 	bl	1ea64 <_free_r>
   1fc5e:	2300      	movs	r3, #0
   1fc60:	6363      	str	r3, [r4, #52]	; 0x34
   1fc62:	2300      	movs	r3, #0
   1fc64:	61a3      	str	r3, [r4, #24]
   1fc66:	6063      	str	r3, [r4, #4]
   1fc68:	89a3      	ldrh	r3, [r4, #12]
   1fc6a:	061b      	lsls	r3, r3, #24
   1fc6c:	d503      	bpl.n	1fc76 <setvbuf+0x6a>
   1fc6e:	6921      	ldr	r1, [r4, #16]
   1fc70:	4630      	mov	r0, r6
   1fc72:	f7fe fef7 	bl	1ea64 <_free_r>
   1fc76:	89a3      	ldrh	r3, [r4, #12]
   1fc78:	f1b8 0f02 	cmp.w	r8, #2
   1fc7c:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1fc80:	f023 0303 	bic.w	r3, r3, #3
   1fc84:	81a3      	strh	r3, [r4, #12]
   1fc86:	d05d      	beq.n	1fd44 <setvbuf+0x138>
   1fc88:	ab01      	add	r3, sp, #4
   1fc8a:	466a      	mov	r2, sp
   1fc8c:	4621      	mov	r1, r4
   1fc8e:	4630      	mov	r0, r6
   1fc90:	f7fe fba4 	bl	1e3dc <__swhatbuf_r>
   1fc94:	89a3      	ldrh	r3, [r4, #12]
   1fc96:	4318      	orrs	r0, r3
   1fc98:	81a0      	strh	r0, [r4, #12]
   1fc9a:	bb2d      	cbnz	r5, 1fce8 <setvbuf+0xdc>
   1fc9c:	9d00      	ldr	r5, [sp, #0]
   1fc9e:	4628      	mov	r0, r5
   1fca0:	f7fe fc00 	bl	1e4a4 <malloc>
   1fca4:	4607      	mov	r7, r0
   1fca6:	2800      	cmp	r0, #0
   1fca8:	d14e      	bne.n	1fd48 <setvbuf+0x13c>
   1fcaa:	f8dd 9000 	ldr.w	r9, [sp]
   1fcae:	45a9      	cmp	r9, r5
   1fcb0:	d13c      	bne.n	1fd2c <setvbuf+0x120>
   1fcb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fcb6:	89a3      	ldrh	r3, [r4, #12]
   1fcb8:	f043 0302 	orr.w	r3, r3, #2
   1fcbc:	81a3      	strh	r3, [r4, #12]
   1fcbe:	2300      	movs	r3, #0
   1fcc0:	60a3      	str	r3, [r4, #8]
   1fcc2:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1fcc6:	6023      	str	r3, [r4, #0]
   1fcc8:	6123      	str	r3, [r4, #16]
   1fcca:	2301      	movs	r3, #1
   1fccc:	6163      	str	r3, [r4, #20]
   1fcce:	b003      	add	sp, #12
   1fcd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1fcd4:	4b22      	ldr	r3, [pc, #136]	; (1fd60 <setvbuf+0x154>)
   1fcd6:	429c      	cmp	r4, r3
   1fcd8:	d101      	bne.n	1fcde <setvbuf+0xd2>
   1fcda:	68b4      	ldr	r4, [r6, #8]
   1fcdc:	e7a8      	b.n	1fc30 <setvbuf+0x24>
   1fcde:	4b21      	ldr	r3, [pc, #132]	; (1fd64 <setvbuf+0x158>)
   1fce0:	429c      	cmp	r4, r3
   1fce2:	bf08      	it	eq
   1fce4:	68f4      	ldreq	r4, [r6, #12]
   1fce6:	e7a3      	b.n	1fc30 <setvbuf+0x24>
   1fce8:	2f00      	cmp	r7, #0
   1fcea:	d0d8      	beq.n	1fc9e <setvbuf+0x92>
   1fcec:	69b3      	ldr	r3, [r6, #24]
   1fcee:	b913      	cbnz	r3, 1fcf6 <setvbuf+0xea>
   1fcf0:	4630      	mov	r0, r6
   1fcf2:	f7fe f869 	bl	1ddc8 <__sinit>
   1fcf6:	f1b8 0f01 	cmp.w	r8, #1
   1fcfa:	bf08      	it	eq
   1fcfc:	89a3      	ldrheq	r3, [r4, #12]
   1fcfe:	6027      	str	r7, [r4, #0]
   1fd00:	bf04      	itt	eq
   1fd02:	f043 0301 	orreq.w	r3, r3, #1
   1fd06:	81a3      	strheq	r3, [r4, #12]
   1fd08:	89a3      	ldrh	r3, [r4, #12]
   1fd0a:	6127      	str	r7, [r4, #16]
   1fd0c:	f013 0008 	ands.w	r0, r3, #8
   1fd10:	6165      	str	r5, [r4, #20]
   1fd12:	d01b      	beq.n	1fd4c <setvbuf+0x140>
   1fd14:	f013 0001 	ands.w	r0, r3, #1
   1fd18:	f04f 0300 	mov.w	r3, #0
   1fd1c:	bf1f      	itttt	ne
   1fd1e:	426d      	negne	r5, r5
   1fd20:	60a3      	strne	r3, [r4, #8]
   1fd22:	61a5      	strne	r5, [r4, #24]
   1fd24:	4618      	movne	r0, r3
   1fd26:	bf08      	it	eq
   1fd28:	60a5      	streq	r5, [r4, #8]
   1fd2a:	e7d0      	b.n	1fcce <setvbuf+0xc2>
   1fd2c:	4648      	mov	r0, r9
   1fd2e:	f7fe fbb9 	bl	1e4a4 <malloc>
   1fd32:	4607      	mov	r7, r0
   1fd34:	2800      	cmp	r0, #0
   1fd36:	d0bc      	beq.n	1fcb2 <setvbuf+0xa6>
   1fd38:	89a3      	ldrh	r3, [r4, #12]
   1fd3a:	464d      	mov	r5, r9
   1fd3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1fd40:	81a3      	strh	r3, [r4, #12]
   1fd42:	e7d3      	b.n	1fcec <setvbuf+0xe0>
   1fd44:	2000      	movs	r0, #0
   1fd46:	e7b6      	b.n	1fcb6 <setvbuf+0xaa>
   1fd48:	46a9      	mov	r9, r5
   1fd4a:	e7f5      	b.n	1fd38 <setvbuf+0x12c>
   1fd4c:	60a0      	str	r0, [r4, #8]
   1fd4e:	e7be      	b.n	1fcce <setvbuf+0xc2>
   1fd50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fd54:	e7bb      	b.n	1fcce <setvbuf+0xc2>
   1fd56:	bf00      	nop
   1fd58:	2007c0e4 	.word	0x2007c0e4
   1fd5c:	00027364 	.word	0x00027364
   1fd60:	00027384 	.word	0x00027384
   1fd64:	00027344 	.word	0x00027344

0001fd68 <nanf>:
nanf():
   1fd68:	4800      	ldr	r0, [pc, #0]	; (1fd6c <nanf+0x4>)
   1fd6a:	4770      	bx	lr
   1fd6c:	7fc00000 	.word	0x7fc00000

0001fd70 <_raise_r>:
_raise_r():
   1fd70:	291f      	cmp	r1, #31
   1fd72:	b538      	push	{r3, r4, r5, lr}
   1fd74:	4604      	mov	r4, r0
   1fd76:	460d      	mov	r5, r1
   1fd78:	d904      	bls.n	1fd84 <_raise_r+0x14>
   1fd7a:	2316      	movs	r3, #22
   1fd7c:	6003      	str	r3, [r0, #0]
   1fd7e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fd82:	bd38      	pop	{r3, r4, r5, pc}
   1fd84:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1fd86:	b112      	cbz	r2, 1fd8e <_raise_r+0x1e>
   1fd88:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1fd8c:	b94b      	cbnz	r3, 1fda2 <_raise_r+0x32>
   1fd8e:	4620      	mov	r0, r4
   1fd90:	f000 f830 	bl	1fdf4 <_getpid_r>
   1fd94:	462a      	mov	r2, r5
   1fd96:	4601      	mov	r1, r0
   1fd98:	4620      	mov	r0, r4
   1fd9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1fd9e:	f000 b817 	b.w	1fdd0 <_kill_r>
   1fda2:	2b01      	cmp	r3, #1
   1fda4:	d00a      	beq.n	1fdbc <_raise_r+0x4c>
   1fda6:	1c59      	adds	r1, r3, #1
   1fda8:	d103      	bne.n	1fdb2 <_raise_r+0x42>
   1fdaa:	2316      	movs	r3, #22
   1fdac:	6003      	str	r3, [r0, #0]
   1fdae:	2001      	movs	r0, #1
   1fdb0:	bd38      	pop	{r3, r4, r5, pc}
   1fdb2:	2400      	movs	r4, #0
   1fdb4:	4628      	mov	r0, r5
   1fdb6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1fdba:	4798      	blx	r3
   1fdbc:	2000      	movs	r0, #0
   1fdbe:	bd38      	pop	{r3, r4, r5, pc}

0001fdc0 <raise>:
raise():
   1fdc0:	4b02      	ldr	r3, [pc, #8]	; (1fdcc <raise+0xc>)
   1fdc2:	4601      	mov	r1, r0
   1fdc4:	6818      	ldr	r0, [r3, #0]
   1fdc6:	f7ff bfd3 	b.w	1fd70 <_raise_r>
   1fdca:	bf00      	nop
   1fdcc:	2007c0e4 	.word	0x2007c0e4

0001fdd0 <_kill_r>:
_kill_r():
   1fdd0:	b538      	push	{r3, r4, r5, lr}
   1fdd2:	2300      	movs	r3, #0
   1fdd4:	4c06      	ldr	r4, [pc, #24]	; (1fdf0 <_kill_r+0x20>)
   1fdd6:	4605      	mov	r5, r0
   1fdd8:	4608      	mov	r0, r1
   1fdda:	4611      	mov	r1, r2
   1fddc:	6023      	str	r3, [r4, #0]
   1fdde:	f7f6 fe95 	bl	16b0c <_kill>
   1fde2:	1c43      	adds	r3, r0, #1
   1fde4:	d102      	bne.n	1fdec <_kill_r+0x1c>
   1fde6:	6823      	ldr	r3, [r4, #0]
   1fde8:	b103      	cbz	r3, 1fdec <_kill_r+0x1c>
   1fdea:	602b      	str	r3, [r5, #0]
   1fdec:	bd38      	pop	{r3, r4, r5, pc}
   1fdee:	bf00      	nop
   1fdf0:	2007c8fc 	.word	0x2007c8fc

0001fdf4 <_getpid_r>:
_getpid_r():
   1fdf4:	f7f6 be9a 	b.w	16b2c <_getpid>

0001fdf8 <sniprintf>:
sniprintf():
   1fdf8:	b40c      	push	{r2, r3}
   1fdfa:	b530      	push	{r4, r5, lr}
   1fdfc:	4b17      	ldr	r3, [pc, #92]	; (1fe5c <sniprintf+0x64>)
   1fdfe:	1e0c      	subs	r4, r1, #0
   1fe00:	b09d      	sub	sp, #116	; 0x74
   1fe02:	681d      	ldr	r5, [r3, #0]
   1fe04:	da08      	bge.n	1fe18 <sniprintf+0x20>
   1fe06:	238b      	movs	r3, #139	; 0x8b
   1fe08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fe0c:	602b      	str	r3, [r5, #0]
   1fe0e:	b01d      	add	sp, #116	; 0x74
   1fe10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1fe14:	b002      	add	sp, #8
   1fe16:	4770      	bx	lr
   1fe18:	f44f 7302 	mov.w	r3, #520	; 0x208
   1fe1c:	f8ad 3014 	strh.w	r3, [sp, #20]
   1fe20:	bf0c      	ite	eq
   1fe22:	4623      	moveq	r3, r4
   1fe24:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1fe28:	9304      	str	r3, [sp, #16]
   1fe2a:	9307      	str	r3, [sp, #28]
   1fe2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1fe30:	9002      	str	r0, [sp, #8]
   1fe32:	9006      	str	r0, [sp, #24]
   1fe34:	f8ad 3016 	strh.w	r3, [sp, #22]
   1fe38:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1fe3a:	ab21      	add	r3, sp, #132	; 0x84
   1fe3c:	a902      	add	r1, sp, #8
   1fe3e:	4628      	mov	r0, r5
   1fe40:	9301      	str	r3, [sp, #4]
   1fe42:	f003 fbd1 	bl	235e8 <_svfiprintf_r>
   1fe46:	1c43      	adds	r3, r0, #1
   1fe48:	bfbc      	itt	lt
   1fe4a:	238b      	movlt	r3, #139	; 0x8b
   1fe4c:	602b      	strlt	r3, [r5, #0]
   1fe4e:	2c00      	cmp	r4, #0
   1fe50:	d0dd      	beq.n	1fe0e <sniprintf+0x16>
   1fe52:	2200      	movs	r2, #0
   1fe54:	9b02      	ldr	r3, [sp, #8]
   1fe56:	701a      	strb	r2, [r3, #0]
   1fe58:	e7d9      	b.n	1fe0e <sniprintf+0x16>
   1fe5a:	bf00      	nop
   1fe5c:	2007c0e4 	.word	0x2007c0e4

0001fe60 <siprintf>:
siprintf():
   1fe60:	b40e      	push	{r1, r2, r3}
   1fe62:	f44f 7102 	mov.w	r1, #520	; 0x208
   1fe66:	b500      	push	{lr}
   1fe68:	b09c      	sub	sp, #112	; 0x70
   1fe6a:	f8ad 1014 	strh.w	r1, [sp, #20]
   1fe6e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1fe72:	9104      	str	r1, [sp, #16]
   1fe74:	9107      	str	r1, [sp, #28]
   1fe76:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1fe7a:	ab1d      	add	r3, sp, #116	; 0x74
   1fe7c:	9002      	str	r0, [sp, #8]
   1fe7e:	9006      	str	r0, [sp, #24]
   1fe80:	4808      	ldr	r0, [pc, #32]	; (1fea4 <siprintf+0x44>)
   1fe82:	f853 2b04 	ldr.w	r2, [r3], #4
   1fe86:	f8ad 1016 	strh.w	r1, [sp, #22]
   1fe8a:	6800      	ldr	r0, [r0, #0]
   1fe8c:	a902      	add	r1, sp, #8
   1fe8e:	9301      	str	r3, [sp, #4]
   1fe90:	f003 fbaa 	bl	235e8 <_svfiprintf_r>
   1fe94:	2200      	movs	r2, #0
   1fe96:	9b02      	ldr	r3, [sp, #8]
   1fe98:	701a      	strb	r2, [r3, #0]
   1fe9a:	b01c      	add	sp, #112	; 0x70
   1fe9c:	f85d eb04 	ldr.w	lr, [sp], #4
   1fea0:	b003      	add	sp, #12
   1fea2:	4770      	bx	lr
   1fea4:	2007c0e4 	.word	0x2007c0e4

0001fea8 <siscanf>:
siscanf():
   1fea8:	b40e      	push	{r1, r2, r3}
   1feaa:	f44f 7201 	mov.w	r2, #516	; 0x204
   1feae:	b530      	push	{r4, r5, lr}
   1feb0:	b09c      	sub	sp, #112	; 0x70
   1feb2:	ac1f      	add	r4, sp, #124	; 0x7c
   1feb4:	f854 5b04 	ldr.w	r5, [r4], #4
   1feb8:	f8ad 2014 	strh.w	r2, [sp, #20]
   1febc:	9002      	str	r0, [sp, #8]
   1febe:	9006      	str	r0, [sp, #24]
   1fec0:	f000 f8ae 	bl	20020 <strlen>
   1fec4:	4b0b      	ldr	r3, [pc, #44]	; (1fef4 <siscanf+0x4c>)
   1fec6:	9003      	str	r0, [sp, #12]
   1fec8:	930b      	str	r3, [sp, #44]	; 0x2c
   1feca:	2300      	movs	r3, #0
   1fecc:	930f      	str	r3, [sp, #60]	; 0x3c
   1fece:	9314      	str	r3, [sp, #80]	; 0x50
   1fed0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1fed4:	9007      	str	r0, [sp, #28]
   1fed6:	4808      	ldr	r0, [pc, #32]	; (1fef8 <siscanf+0x50>)
   1fed8:	f8ad 3016 	strh.w	r3, [sp, #22]
   1fedc:	462a      	mov	r2, r5
   1fede:	4623      	mov	r3, r4
   1fee0:	a902      	add	r1, sp, #8
   1fee2:	6800      	ldr	r0, [r0, #0]
   1fee4:	9401      	str	r4, [sp, #4]
   1fee6:	f003 fccd 	bl	23884 <__ssvfiscanf_r>
   1feea:	b01c      	add	sp, #112	; 0x70
   1feec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1fef0:	b003      	add	sp, #12
   1fef2:	4770      	bx	lr
   1fef4:	0001ff1f 	.word	0x0001ff1f
   1fef8:	2007c0e4 	.word	0x2007c0e4

0001fefc <__sread>:
__sread():
   1fefc:	b510      	push	{r4, lr}
   1fefe:	460c      	mov	r4, r1
   1ff00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff04:	f004 fa26 	bl	24354 <_read_r>
   1ff08:	2800      	cmp	r0, #0
   1ff0a:	bfab      	itete	ge
   1ff0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1ff0e:	89a3      	ldrhlt	r3, [r4, #12]
   1ff10:	181b      	addge	r3, r3, r0
   1ff12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1ff16:	bfac      	ite	ge
   1ff18:	6563      	strge	r3, [r4, #84]	; 0x54
   1ff1a:	81a3      	strhlt	r3, [r4, #12]
   1ff1c:	bd10      	pop	{r4, pc}

0001ff1e <__seofread>:
__seofread():
   1ff1e:	2000      	movs	r0, #0
   1ff20:	4770      	bx	lr

0001ff22 <__swrite>:
__swrite():
   1ff22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ff26:	461f      	mov	r7, r3
   1ff28:	898b      	ldrh	r3, [r1, #12]
   1ff2a:	4605      	mov	r5, r0
   1ff2c:	05db      	lsls	r3, r3, #23
   1ff2e:	460c      	mov	r4, r1
   1ff30:	4616      	mov	r6, r2
   1ff32:	d505      	bpl.n	1ff40 <__swrite+0x1e>
   1ff34:	2302      	movs	r3, #2
   1ff36:	2200      	movs	r2, #0
   1ff38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff3c:	f002 fed8 	bl	22cf0 <_lseek_r>
   1ff40:	89a3      	ldrh	r3, [r4, #12]
   1ff42:	4632      	mov	r2, r6
   1ff44:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1ff48:	81a3      	strh	r3, [r4, #12]
   1ff4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1ff4e:	463b      	mov	r3, r7
   1ff50:	4628      	mov	r0, r5
   1ff52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1ff56:	f001 bb0f 	b.w	21578 <_write_r>

0001ff5a <__sseek>:
__sseek():
   1ff5a:	b510      	push	{r4, lr}
   1ff5c:	460c      	mov	r4, r1
   1ff5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff62:	f002 fec5 	bl	22cf0 <_lseek_r>
   1ff66:	1c43      	adds	r3, r0, #1
   1ff68:	89a3      	ldrh	r3, [r4, #12]
   1ff6a:	bf15      	itete	ne
   1ff6c:	6560      	strne	r0, [r4, #84]	; 0x54
   1ff6e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1ff72:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1ff76:	81a3      	strheq	r3, [r4, #12]
   1ff78:	bf18      	it	ne
   1ff7a:	81a3      	strhne	r3, [r4, #12]
   1ff7c:	bd10      	pop	{r4, pc}

0001ff7e <__sclose>:
__sclose():
   1ff7e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff82:	f001 bbb5 	b.w	216f0 <_close_r>

0001ff86 <strcasecmp>:
strcasecmp():
   1ff86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ff88:	4606      	mov	r6, r0
   1ff8a:	460f      	mov	r7, r1
   1ff8c:	f816 4b01 	ldrb.w	r4, [r6], #1
   1ff90:	f7fe fa16 	bl	1e3c0 <__locale_ctype_ptr>
   1ff94:	4420      	add	r0, r4
   1ff96:	7843      	ldrb	r3, [r0, #1]
   1ff98:	f817 5b01 	ldrb.w	r5, [r7], #1
   1ff9c:	f003 0303 	and.w	r3, r3, #3
   1ffa0:	2b01      	cmp	r3, #1
   1ffa2:	bf08      	it	eq
   1ffa4:	3420      	addeq	r4, #32
   1ffa6:	f7fe fa0b 	bl	1e3c0 <__locale_ctype_ptr>
   1ffaa:	4428      	add	r0, r5
   1ffac:	7843      	ldrb	r3, [r0, #1]
   1ffae:	f003 0303 	and.w	r3, r3, #3
   1ffb2:	2b01      	cmp	r3, #1
   1ffb4:	bf08      	it	eq
   1ffb6:	3520      	addeq	r5, #32
   1ffb8:	1b60      	subs	r0, r4, r5
   1ffba:	d101      	bne.n	1ffc0 <strcasecmp+0x3a>
   1ffbc:	2d00      	cmp	r5, #0
   1ffbe:	d1e5      	bne.n	1ff8c <strcasecmp+0x6>
   1ffc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001ffc2 <strcat>:
strcat():
   1ffc2:	4602      	mov	r2, r0
   1ffc4:	b510      	push	{r4, lr}
   1ffc6:	4613      	mov	r3, r2
   1ffc8:	781c      	ldrb	r4, [r3, #0]
   1ffca:	3201      	adds	r2, #1
   1ffcc:	2c00      	cmp	r4, #0
   1ffce:	d1fa      	bne.n	1ffc6 <strcat+0x4>
   1ffd0:	3b01      	subs	r3, #1
   1ffd2:	f811 2b01 	ldrb.w	r2, [r1], #1
   1ffd6:	f803 2f01 	strb.w	r2, [r3, #1]!
   1ffda:	2a00      	cmp	r2, #0
   1ffdc:	d1f9      	bne.n	1ffd2 <strcat+0x10>
   1ffde:	bd10      	pop	{r4, pc}

0001ffe0 <strchr>:
strchr():
   1ffe0:	b2c9      	uxtb	r1, r1
   1ffe2:	4603      	mov	r3, r0
   1ffe4:	f810 2b01 	ldrb.w	r2, [r0], #1
   1ffe8:	b11a      	cbz	r2, 1fff2 <strchr+0x12>
   1ffea:	4291      	cmp	r1, r2
   1ffec:	d1f9      	bne.n	1ffe2 <strchr+0x2>
   1ffee:	4618      	mov	r0, r3
   1fff0:	4770      	bx	lr
   1fff2:	2900      	cmp	r1, #0
   1fff4:	bf0c      	ite	eq
   1fff6:	4618      	moveq	r0, r3
   1fff8:	2000      	movne	r0, #0
   1fffa:	4770      	bx	lr

0001fffc <strcmp>:
strcmp():
   1fffc:	f810 2b01 	ldrb.w	r2, [r0], #1
   20000:	f811 3b01 	ldrb.w	r3, [r1], #1
   20004:	2a01      	cmp	r2, #1
   20006:	bf28      	it	cs
   20008:	429a      	cmpcs	r2, r3
   2000a:	d0f7      	beq.n	1fffc <strcmp>
   2000c:	1ad0      	subs	r0, r2, r3
   2000e:	4770      	bx	lr

00020010 <strcpy>:
strcpy():
   20010:	4603      	mov	r3, r0
   20012:	f811 2b01 	ldrb.w	r2, [r1], #1
   20016:	f803 2b01 	strb.w	r2, [r3], #1
   2001a:	2a00      	cmp	r2, #0
   2001c:	d1f9      	bne.n	20012 <strcpy+0x2>
   2001e:	4770      	bx	lr

00020020 <strlen>:
strlen():
   20020:	4603      	mov	r3, r0
   20022:	f813 2b01 	ldrb.w	r2, [r3], #1
   20026:	2a00      	cmp	r2, #0
   20028:	d1fb      	bne.n	20022 <strlen+0x2>
   2002a:	1a18      	subs	r0, r3, r0
   2002c:	3801      	subs	r0, #1
   2002e:	4770      	bx	lr

00020030 <strncasecmp>:
strncasecmp():
   20030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20034:	4606      	mov	r6, r0
   20036:	460f      	mov	r7, r1
   20038:	eb00 0802 	add.w	r8, r0, r2
   2003c:	4546      	cmp	r6, r8
   2003e:	d019      	beq.n	20074 <strncasecmp+0x44>
   20040:	f816 4b01 	ldrb.w	r4, [r6], #1
   20044:	f7fe f9bc 	bl	1e3c0 <__locale_ctype_ptr>
   20048:	4420      	add	r0, r4
   2004a:	7843      	ldrb	r3, [r0, #1]
   2004c:	f817 5b01 	ldrb.w	r5, [r7], #1
   20050:	f003 0303 	and.w	r3, r3, #3
   20054:	2b01      	cmp	r3, #1
   20056:	bf08      	it	eq
   20058:	3420      	addeq	r4, #32
   2005a:	f7fe f9b1 	bl	1e3c0 <__locale_ctype_ptr>
   2005e:	4428      	add	r0, r5
   20060:	7843      	ldrb	r3, [r0, #1]
   20062:	f003 0303 	and.w	r3, r3, #3
   20066:	2b01      	cmp	r3, #1
   20068:	bf08      	it	eq
   2006a:	3520      	addeq	r5, #32
   2006c:	1b60      	subs	r0, r4, r5
   2006e:	d104      	bne.n	2007a <strncasecmp+0x4a>
   20070:	2d00      	cmp	r5, #0
   20072:	d1e3      	bne.n	2003c <strncasecmp+0xc>
   20074:	2000      	movs	r0, #0
   20076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2007a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0002007e <strncmp>:
strncmp():
   2007e:	b510      	push	{r4, lr}
   20080:	b16a      	cbz	r2, 2009e <strncmp+0x20>
   20082:	3901      	subs	r1, #1
   20084:	1884      	adds	r4, r0, r2
   20086:	f810 3b01 	ldrb.w	r3, [r0], #1
   2008a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   2008e:	4293      	cmp	r3, r2
   20090:	d103      	bne.n	2009a <strncmp+0x1c>
   20092:	42a0      	cmp	r0, r4
   20094:	d001      	beq.n	2009a <strncmp+0x1c>
   20096:	2b00      	cmp	r3, #0
   20098:	d1f5      	bne.n	20086 <strncmp+0x8>
   2009a:	1a98      	subs	r0, r3, r2
   2009c:	bd10      	pop	{r4, pc}
   2009e:	4610      	mov	r0, r2
   200a0:	bd10      	pop	{r4, pc}

000200a2 <strncpy>:
strncpy():
   200a2:	b570      	push	{r4, r5, r6, lr}
   200a4:	4604      	mov	r4, r0
   200a6:	b902      	cbnz	r2, 200aa <strncpy+0x8>
   200a8:	bd70      	pop	{r4, r5, r6, pc}
   200aa:	4623      	mov	r3, r4
   200ac:	f811 5b01 	ldrb.w	r5, [r1], #1
   200b0:	1e56      	subs	r6, r2, #1
   200b2:	f803 5b01 	strb.w	r5, [r3], #1
   200b6:	b91d      	cbnz	r5, 200c0 <strncpy+0x1e>
   200b8:	4414      	add	r4, r2
   200ba:	42a3      	cmp	r3, r4
   200bc:	d103      	bne.n	200c6 <strncpy+0x24>
   200be:	bd70      	pop	{r4, r5, r6, pc}
   200c0:	461c      	mov	r4, r3
   200c2:	4632      	mov	r2, r6
   200c4:	e7ef      	b.n	200a6 <strncpy+0x4>
   200c6:	f803 5b01 	strb.w	r5, [r3], #1
   200ca:	e7f6      	b.n	200ba <strncpy+0x18>

000200cc <strrchr>:
strrchr():
   200cc:	b538      	push	{r3, r4, r5, lr}
   200ce:	4603      	mov	r3, r0
   200d0:	460d      	mov	r5, r1
   200d2:	b151      	cbz	r1, 200ea <strrchr+0x1e>
   200d4:	2400      	movs	r4, #0
   200d6:	4629      	mov	r1, r5
   200d8:	4618      	mov	r0, r3
   200da:	f7ff ff81 	bl	1ffe0 <strchr>
   200de:	b908      	cbnz	r0, 200e4 <strrchr+0x18>
   200e0:	4620      	mov	r0, r4
   200e2:	bd38      	pop	{r3, r4, r5, pc}
   200e4:	1c43      	adds	r3, r0, #1
   200e6:	4604      	mov	r4, r0
   200e8:	e7f5      	b.n	200d6 <strrchr+0xa>
   200ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   200ee:	f7ff bf77 	b.w	1ffe0 <strchr>

000200f2 <strstr>:
strstr():
   200f2:	b5f0      	push	{r4, r5, r6, r7, lr}
   200f4:	7803      	ldrb	r3, [r0, #0]
   200f6:	b133      	cbz	r3, 20106 <strstr+0x14>
   200f8:	4603      	mov	r3, r0
   200fa:	4618      	mov	r0, r3
   200fc:	1c5e      	adds	r6, r3, #1
   200fe:	781b      	ldrb	r3, [r3, #0]
   20100:	b933      	cbnz	r3, 20110 <strstr+0x1e>
   20102:	4618      	mov	r0, r3
   20104:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20106:	780b      	ldrb	r3, [r1, #0]
   20108:	2b00      	cmp	r3, #0
   2010a:	bf18      	it	ne
   2010c:	2000      	movne	r0, #0
   2010e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20110:	1e4d      	subs	r5, r1, #1
   20112:	1e44      	subs	r4, r0, #1
   20114:	f815 2f01 	ldrb.w	r2, [r5, #1]!
   20118:	2a00      	cmp	r2, #0
   2011a:	d0f3      	beq.n	20104 <strstr+0x12>
   2011c:	f814 7f01 	ldrb.w	r7, [r4, #1]!
   20120:	4633      	mov	r3, r6
   20122:	4297      	cmp	r7, r2
   20124:	d0f6      	beq.n	20114 <strstr+0x22>
   20126:	e7e8      	b.n	200fa <strstr+0x8>

00020128 <sulp>:
sulp():
   20128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2012c:	460f      	mov	r7, r1
   2012e:	4690      	mov	r8, r2
   20130:	f003 f8b0 	bl	23294 <__ulp>
   20134:	4604      	mov	r4, r0
   20136:	460d      	mov	r5, r1
   20138:	f1b8 0f00 	cmp.w	r8, #0
   2013c:	d011      	beq.n	20162 <sulp+0x3a>
   2013e:	f3c7 530a 	ubfx	r3, r7, #20, #11
   20142:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   20146:	2b00      	cmp	r3, #0
   20148:	dd0b      	ble.n	20162 <sulp+0x3a>
   2014a:	2400      	movs	r4, #0
   2014c:	051b      	lsls	r3, r3, #20
   2014e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   20152:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   20156:	4622      	mov	r2, r4
   20158:	462b      	mov	r3, r5
   2015a:	f7fc fe07 	bl	1cd6c <__aeabi_dmul>
   2015e:	4604      	mov	r4, r0
   20160:	460d      	mov	r5, r1
   20162:	4620      	mov	r0, r4
   20164:	4629      	mov	r1, r5
   20166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2016a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
   2016e:	Address 0x000000000002016e is out of bounds.


00020170 <_strtod_l>:
_strtod_l():
   20170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20174:	4699      	mov	r9, r3
   20176:	2300      	movs	r3, #0
   20178:	b09f      	sub	sp, #124	; 0x7c
   2017a:	4680      	mov	r8, r0
   2017c:	4648      	mov	r0, r9
   2017e:	460c      	mov	r4, r1
   20180:	9215      	str	r2, [sp, #84]	; 0x54
   20182:	931a      	str	r3, [sp, #104]	; 0x68
   20184:	f002 fda4 	bl	22cd0 <__localeconv_l>
   20188:	4607      	mov	r7, r0
   2018a:	6800      	ldr	r0, [r0, #0]
   2018c:	f7ff ff48 	bl	20020 <strlen>
   20190:	f04f 0a00 	mov.w	sl, #0
   20194:	4605      	mov	r5, r0
   20196:	f04f 0b00 	mov.w	fp, #0
   2019a:	9419      	str	r4, [sp, #100]	; 0x64
   2019c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2019e:	781a      	ldrb	r2, [r3, #0]
   201a0:	2a0d      	cmp	r2, #13
   201a2:	d833      	bhi.n	2020c <_strtod_l+0x9c>
   201a4:	2a09      	cmp	r2, #9
   201a6:	d237      	bcs.n	20218 <_strtod_l+0xa8>
   201a8:	2a00      	cmp	r2, #0
   201aa:	d03f      	beq.n	2022c <_strtod_l+0xbc>
   201ac:	2300      	movs	r3, #0
   201ae:	9309      	str	r3, [sp, #36]	; 0x24
   201b0:	9e19      	ldr	r6, [sp, #100]	; 0x64
   201b2:	7833      	ldrb	r3, [r6, #0]
   201b4:	2b30      	cmp	r3, #48	; 0x30
   201b6:	f040 8101 	bne.w	203bc <_strtod_l+0x24c>
   201ba:	7873      	ldrb	r3, [r6, #1]
   201bc:	2b58      	cmp	r3, #88	; 0x58
   201be:	d001      	beq.n	201c4 <_strtod_l+0x54>
   201c0:	2b78      	cmp	r3, #120	; 0x78
   201c2:	d16b      	bne.n	2029c <_strtod_l+0x12c>
   201c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   201c6:	f8cd 9008 	str.w	r9, [sp, #8]
   201ca:	9301      	str	r3, [sp, #4]
   201cc:	ab1a      	add	r3, sp, #104	; 0x68
   201ce:	9300      	str	r3, [sp, #0]
   201d0:	4aaa      	ldr	r2, [pc, #680]	; (2047c <_strtod_l+0x30c>)
   201d2:	ab1b      	add	r3, sp, #108	; 0x6c
   201d4:	a919      	add	r1, sp, #100	; 0x64
   201d6:	4640      	mov	r0, r8
   201d8:	f002 f9a0 	bl	2251c <__gethex>
   201dc:	f010 0407 	ands.w	r4, r0, #7
   201e0:	4605      	mov	r5, r0
   201e2:	d005      	beq.n	201f0 <_strtod_l+0x80>
   201e4:	2c06      	cmp	r4, #6
   201e6:	d12b      	bne.n	20240 <_strtod_l+0xd0>
   201e8:	2300      	movs	r3, #0
   201ea:	3601      	adds	r6, #1
   201ec:	9619      	str	r6, [sp, #100]	; 0x64
   201ee:	9309      	str	r3, [sp, #36]	; 0x24
   201f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   201f2:	2b00      	cmp	r3, #0
   201f4:	f040 859d 	bne.w	20d32 <_strtod_l+0xbc2>
   201f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   201fa:	b1e3      	cbz	r3, 20236 <_strtod_l+0xc6>
   201fc:	4652      	mov	r2, sl
   201fe:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   20202:	4610      	mov	r0, r2
   20204:	4619      	mov	r1, r3
   20206:	b01f      	add	sp, #124	; 0x7c
   20208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2020c:	2a2b      	cmp	r2, #43	; 0x2b
   2020e:	d006      	beq.n	2021e <_strtod_l+0xae>
   20210:	2a2d      	cmp	r2, #45	; 0x2d
   20212:	d013      	beq.n	2023c <_strtod_l+0xcc>
   20214:	2a20      	cmp	r2, #32
   20216:	d1c9      	bne.n	201ac <_strtod_l+0x3c>
   20218:	3301      	adds	r3, #1
   2021a:	9319      	str	r3, [sp, #100]	; 0x64
   2021c:	e7be      	b.n	2019c <_strtod_l+0x2c>
   2021e:	2200      	movs	r2, #0
   20220:	9209      	str	r2, [sp, #36]	; 0x24
   20222:	1c5a      	adds	r2, r3, #1
   20224:	9219      	str	r2, [sp, #100]	; 0x64
   20226:	785b      	ldrb	r3, [r3, #1]
   20228:	2b00      	cmp	r3, #0
   2022a:	d1c1      	bne.n	201b0 <_strtod_l+0x40>
   2022c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2022e:	9419      	str	r4, [sp, #100]	; 0x64
   20230:	2b00      	cmp	r3, #0
   20232:	f040 857c 	bne.w	20d2e <_strtod_l+0xbbe>
   20236:	4652      	mov	r2, sl
   20238:	465b      	mov	r3, fp
   2023a:	e7e2      	b.n	20202 <_strtod_l+0x92>
   2023c:	2201      	movs	r2, #1
   2023e:	e7ef      	b.n	20220 <_strtod_l+0xb0>
   20240:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   20242:	b13a      	cbz	r2, 20254 <_strtod_l+0xe4>
   20244:	2135      	movs	r1, #53	; 0x35
   20246:	a81c      	add	r0, sp, #112	; 0x70
   20248:	f003 f911 	bl	2346e <__copybits>
   2024c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2024e:	4640      	mov	r0, r8
   20250:	f002 fd94 	bl	22d7c <_Bfree>
   20254:	3c01      	subs	r4, #1
   20256:	2c04      	cmp	r4, #4
   20258:	d808      	bhi.n	2026c <_strtod_l+0xfc>
   2025a:	e8df f004 	tbb	[pc, r4]
   2025e:	030c      	.short	0x030c
   20260:	1a17      	.short	0x1a17
   20262:	0c          	.byte	0x0c
   20263:	00          	.byte	0x00
   20264:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   20268:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   2026c:	0729      	lsls	r1, r5, #28
   2026e:	d5bf      	bpl.n	201f0 <_strtod_l+0x80>
   20270:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   20274:	e7bc      	b.n	201f0 <_strtod_l+0x80>
   20276:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   20278:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   2027a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   2027e:	f202 4233 	addw	r2, r2, #1075	; 0x433
   20282:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   20286:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   2028a:	e7ef      	b.n	2026c <_strtod_l+0xfc>
   2028c:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 20488 <_strtod_l+0x318>
   20290:	e7ec      	b.n	2026c <_strtod_l+0xfc>
   20292:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   20296:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   2029a:	e7e7      	b.n	2026c <_strtod_l+0xfc>
   2029c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2029e:	1c5a      	adds	r2, r3, #1
   202a0:	9219      	str	r2, [sp, #100]	; 0x64
   202a2:	785b      	ldrb	r3, [r3, #1]
   202a4:	2b30      	cmp	r3, #48	; 0x30
   202a6:	d0f9      	beq.n	2029c <_strtod_l+0x12c>
   202a8:	2b00      	cmp	r3, #0
   202aa:	d0a1      	beq.n	201f0 <_strtod_l+0x80>
   202ac:	2301      	movs	r3, #1
   202ae:	9308      	str	r3, [sp, #32]
   202b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
   202b2:	220a      	movs	r2, #10
   202b4:	930a      	str	r3, [sp, #40]	; 0x28
   202b6:	2300      	movs	r3, #0
   202b8:	9305      	str	r3, [sp, #20]
   202ba:	9306      	str	r3, [sp, #24]
   202bc:	9304      	str	r3, [sp, #16]
   202be:	9819      	ldr	r0, [sp, #100]	; 0x64
   202c0:	7806      	ldrb	r6, [r0, #0]
   202c2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   202c6:	b2d9      	uxtb	r1, r3
   202c8:	2909      	cmp	r1, #9
   202ca:	d979      	bls.n	203c0 <_strtod_l+0x250>
   202cc:	462a      	mov	r2, r5
   202ce:	6839      	ldr	r1, [r7, #0]
   202d0:	f7ff fed5 	bl	2007e <strncmp>
   202d4:	2800      	cmp	r0, #0
   202d6:	f000 8085 	beq.w	203e4 <_strtod_l+0x274>
   202da:	2000      	movs	r0, #0
   202dc:	4633      	mov	r3, r6
   202de:	4602      	mov	r2, r0
   202e0:	4601      	mov	r1, r0
   202e2:	9d04      	ldr	r5, [sp, #16]
   202e4:	2b65      	cmp	r3, #101	; 0x65
   202e6:	d002      	beq.n	202ee <_strtod_l+0x17e>
   202e8:	2b45      	cmp	r3, #69	; 0x45
   202ea:	f040 80ef 	bne.w	204cc <_strtod_l+0x35c>
   202ee:	b925      	cbnz	r5, 202fa <_strtod_l+0x18a>
   202f0:	b910      	cbnz	r0, 202f8 <_strtod_l+0x188>
   202f2:	9b08      	ldr	r3, [sp, #32]
   202f4:	2b00      	cmp	r3, #0
   202f6:	d099      	beq.n	2022c <_strtod_l+0xbc>
   202f8:	2500      	movs	r5, #0
   202fa:	9c19      	ldr	r4, [sp, #100]	; 0x64
   202fc:	1c63      	adds	r3, r4, #1
   202fe:	9319      	str	r3, [sp, #100]	; 0x64
   20300:	7863      	ldrb	r3, [r4, #1]
   20302:	2b2b      	cmp	r3, #43	; 0x2b
   20304:	f000 80cf 	beq.w	204a6 <_strtod_l+0x336>
   20308:	2b2d      	cmp	r3, #45	; 0x2d
   2030a:	f000 80d2 	beq.w	204b2 <_strtod_l+0x342>
   2030e:	2600      	movs	r6, #0
   20310:	9607      	str	r6, [sp, #28]
   20312:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   20316:	2e09      	cmp	r6, #9
   20318:	f200 80d7 	bhi.w	204ca <_strtod_l+0x35a>
   2031c:	2b30      	cmp	r3, #48	; 0x30
   2031e:	f000 80ca 	beq.w	204b6 <_strtod_l+0x346>
   20322:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   20326:	2e08      	cmp	r6, #8
   20328:	f200 80d0 	bhi.w	204cc <_strtod_l+0x35c>
   2032c:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   20330:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20332:	f04f 0c0a 	mov.w	ip, #10
   20336:	461f      	mov	r7, r3
   20338:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2033a:	1c5e      	adds	r6, r3, #1
   2033c:	9619      	str	r6, [sp, #100]	; 0x64
   2033e:	785b      	ldrb	r3, [r3, #1]
   20340:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   20344:	f1b9 0f09 	cmp.w	r9, #9
   20348:	f240 80ba 	bls.w	204c0 <_strtod_l+0x350>
   2034c:	1bf6      	subs	r6, r6, r7
   2034e:	2e08      	cmp	r6, #8
   20350:	f644 691f 	movw	r9, #19999	; 0x4e1f
   20354:	dc02      	bgt.n	2035c <_strtod_l+0x1ec>
   20356:	45f1      	cmp	r9, lr
   20358:	bfa8      	it	ge
   2035a:	46f1      	movge	r9, lr
   2035c:	9e07      	ldr	r6, [sp, #28]
   2035e:	b10e      	cbz	r6, 20364 <_strtod_l+0x1f4>
   20360:	f1c9 0900 	rsb	r9, r9, #0
   20364:	2d00      	cmp	r5, #0
   20366:	f040 80d7 	bne.w	20518 <_strtod_l+0x3a8>
   2036a:	2800      	cmp	r0, #0
   2036c:	f47f af40 	bne.w	201f0 <_strtod_l+0x80>
   20370:	9a08      	ldr	r2, [sp, #32]
   20372:	2a00      	cmp	r2, #0
   20374:	f47f af3c 	bne.w	201f0 <_strtod_l+0x80>
   20378:	2900      	cmp	r1, #0
   2037a:	f47f af57 	bne.w	2022c <_strtod_l+0xbc>
   2037e:	2b4e      	cmp	r3, #78	; 0x4e
   20380:	f000 80ad 	beq.w	204de <_strtod_l+0x36e>
   20384:	f300 80a5 	bgt.w	204d2 <_strtod_l+0x362>
   20388:	2b49      	cmp	r3, #73	; 0x49
   2038a:	f47f af4f 	bne.w	2022c <_strtod_l+0xbc>
   2038e:	493c      	ldr	r1, [pc, #240]	; (20480 <_strtod_l+0x310>)
   20390:	a819      	add	r0, sp, #100	; 0x64
   20392:	f002 faf4 	bl	2297e <__match>
   20396:	2800      	cmp	r0, #0
   20398:	f43f af48 	beq.w	2022c <_strtod_l+0xbc>
   2039c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2039e:	4939      	ldr	r1, [pc, #228]	; (20484 <_strtod_l+0x314>)
   203a0:	3b01      	subs	r3, #1
   203a2:	a819      	add	r0, sp, #100	; 0x64
   203a4:	9319      	str	r3, [sp, #100]	; 0x64
   203a6:	f002 faea 	bl	2297e <__match>
   203aa:	b910      	cbnz	r0, 203b2 <_strtod_l+0x242>
   203ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
   203ae:	3301      	adds	r3, #1
   203b0:	9319      	str	r3, [sp, #100]	; 0x64
   203b2:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 20488 <_strtod_l+0x318>
   203b6:	f04f 0a00 	mov.w	sl, #0
   203ba:	e719      	b.n	201f0 <_strtod_l+0x80>
   203bc:	2300      	movs	r3, #0
   203be:	e776      	b.n	202ae <_strtod_l+0x13e>
   203c0:	9904      	ldr	r1, [sp, #16]
   203c2:	3001      	adds	r0, #1
   203c4:	2908      	cmp	r1, #8
   203c6:	bfd5      	itete	le
   203c8:	9906      	ldrle	r1, [sp, #24]
   203ca:	9905      	ldrgt	r1, [sp, #20]
   203cc:	fb02 3301 	mlale	r3, r2, r1, r3
   203d0:	fb02 3301 	mlagt	r3, r2, r1, r3
   203d4:	bfd4      	ite	le
   203d6:	9306      	strle	r3, [sp, #24]
   203d8:	9305      	strgt	r3, [sp, #20]
   203da:	9b04      	ldr	r3, [sp, #16]
   203dc:	9019      	str	r0, [sp, #100]	; 0x64
   203de:	3301      	adds	r3, #1
   203e0:	9304      	str	r3, [sp, #16]
   203e2:	e76c      	b.n	202be <_strtod_l+0x14e>
   203e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   203e6:	195a      	adds	r2, r3, r5
   203e8:	9219      	str	r2, [sp, #100]	; 0x64
   203ea:	9a04      	ldr	r2, [sp, #16]
   203ec:	5d5b      	ldrb	r3, [r3, r5]
   203ee:	2a00      	cmp	r2, #0
   203f0:	d154      	bne.n	2049c <_strtod_l+0x32c>
   203f2:	4610      	mov	r0, r2
   203f4:	2b30      	cmp	r3, #48	; 0x30
   203f6:	d02a      	beq.n	2044e <_strtod_l+0x2de>
   203f8:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   203fc:	2a08      	cmp	r2, #8
   203fe:	f200 849d 	bhi.w	20d3c <_strtod_l+0xbcc>
   20402:	9a19      	ldr	r2, [sp, #100]	; 0x64
   20404:	920a      	str	r2, [sp, #40]	; 0x28
   20406:	4602      	mov	r2, r0
   20408:	2000      	movs	r0, #0
   2040a:	4605      	mov	r5, r0
   2040c:	3b30      	subs	r3, #48	; 0x30
   2040e:	f100 0101 	add.w	r1, r0, #1
   20412:	d011      	beq.n	20438 <_strtod_l+0x2c8>
   20414:	440a      	add	r2, r1
   20416:	260a      	movs	r6, #10
   20418:	4629      	mov	r1, r5
   2041a:	eb00 0c05 	add.w	ip, r0, r5
   2041e:	4561      	cmp	r1, ip
   20420:	d11b      	bne.n	2045a <_strtod_l+0x2ea>
   20422:	4428      	add	r0, r5
   20424:	2808      	cmp	r0, #8
   20426:	f100 0501 	add.w	r5, r0, #1
   2042a:	dc2f      	bgt.n	2048c <_strtod_l+0x31c>
   2042c:	210a      	movs	r1, #10
   2042e:	9806      	ldr	r0, [sp, #24]
   20430:	fb01 3300 	mla	r3, r1, r0, r3
   20434:	9306      	str	r3, [sp, #24]
   20436:	2100      	movs	r1, #0
   20438:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2043a:	1c58      	adds	r0, r3, #1
   2043c:	9019      	str	r0, [sp, #100]	; 0x64
   2043e:	4608      	mov	r0, r1
   20440:	785b      	ldrb	r3, [r3, #1]
   20442:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   20446:	2909      	cmp	r1, #9
   20448:	d9e0      	bls.n	2040c <_strtod_l+0x29c>
   2044a:	2101      	movs	r1, #1
   2044c:	e74a      	b.n	202e4 <_strtod_l+0x174>
   2044e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20450:	3001      	adds	r0, #1
   20452:	1c5a      	adds	r2, r3, #1
   20454:	9219      	str	r2, [sp, #100]	; 0x64
   20456:	785b      	ldrb	r3, [r3, #1]
   20458:	e7cc      	b.n	203f4 <_strtod_l+0x284>
   2045a:	3101      	adds	r1, #1
   2045c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   20460:	f1be 0f08 	cmp.w	lr, #8
   20464:	dc03      	bgt.n	2046e <_strtod_l+0x2fe>
   20466:	9f06      	ldr	r7, [sp, #24]
   20468:	4377      	muls	r7, r6
   2046a:	9706      	str	r7, [sp, #24]
   2046c:	e7d7      	b.n	2041e <_strtod_l+0x2ae>
   2046e:	2910      	cmp	r1, #16
   20470:	bfde      	ittt	le
   20472:	9f05      	ldrle	r7, [sp, #20]
   20474:	4377      	mulle	r7, r6
   20476:	9705      	strle	r7, [sp, #20]
   20478:	e7d1      	b.n	2041e <_strtod_l+0x2ae>
   2047a:	bf00      	nop
   2047c:	000274a8 	.word	0x000274a8
   20480:	00027475 	.word	0x00027475
   20484:	00027691 	.word	0x00027691
   20488:	7ff00000 	.word	0x7ff00000
   2048c:	2d10      	cmp	r5, #16
   2048e:	bfdf      	itttt	le
   20490:	210a      	movle	r1, #10
   20492:	9805      	ldrle	r0, [sp, #20]
   20494:	fb01 3300 	mlale	r3, r1, r0, r3
   20498:	9305      	strle	r3, [sp, #20]
   2049a:	e7cc      	b.n	20436 <_strtod_l+0x2c6>
   2049c:	4602      	mov	r2, r0
   2049e:	9d04      	ldr	r5, [sp, #16]
   204a0:	e7cf      	b.n	20442 <_strtod_l+0x2d2>
   204a2:	2101      	movs	r1, #1
   204a4:	e724      	b.n	202f0 <_strtod_l+0x180>
   204a6:	2300      	movs	r3, #0
   204a8:	9307      	str	r3, [sp, #28]
   204aa:	1ca3      	adds	r3, r4, #2
   204ac:	9319      	str	r3, [sp, #100]	; 0x64
   204ae:	78a3      	ldrb	r3, [r4, #2]
   204b0:	e72f      	b.n	20312 <_strtod_l+0x1a2>
   204b2:	2301      	movs	r3, #1
   204b4:	e7f8      	b.n	204a8 <_strtod_l+0x338>
   204b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   204b8:	1c5e      	adds	r6, r3, #1
   204ba:	9619      	str	r6, [sp, #100]	; 0x64
   204bc:	785b      	ldrb	r3, [r3, #1]
   204be:	e72d      	b.n	2031c <_strtod_l+0x1ac>
   204c0:	fb0c 3e0e 	mla	lr, ip, lr, r3
   204c4:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   204c8:	e736      	b.n	20338 <_strtod_l+0x1c8>
   204ca:	9419      	str	r4, [sp, #100]	; 0x64
   204cc:	f04f 0900 	mov.w	r9, #0
   204d0:	e748      	b.n	20364 <_strtod_l+0x1f4>
   204d2:	2b69      	cmp	r3, #105	; 0x69
   204d4:	f43f af5b 	beq.w	2038e <_strtod_l+0x21e>
   204d8:	2b6e      	cmp	r3, #110	; 0x6e
   204da:	f47f aea7 	bne.w	2022c <_strtod_l+0xbc>
   204de:	498c      	ldr	r1, [pc, #560]	; (20710 <_strtod_l+0x5a0>)
   204e0:	a819      	add	r0, sp, #100	; 0x64
   204e2:	f002 fa4c 	bl	2297e <__match>
   204e6:	2800      	cmp	r0, #0
   204e8:	f43f aea0 	beq.w	2022c <_strtod_l+0xbc>
   204ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
   204ee:	781b      	ldrb	r3, [r3, #0]
   204f0:	2b28      	cmp	r3, #40	; 0x28
   204f2:	d10e      	bne.n	20512 <_strtod_l+0x3a2>
   204f4:	aa1c      	add	r2, sp, #112	; 0x70
   204f6:	4987      	ldr	r1, [pc, #540]	; (20714 <_strtod_l+0x5a4>)
   204f8:	a819      	add	r0, sp, #100	; 0x64
   204fa:	f002 fa53 	bl	229a4 <__hexnan>
   204fe:	2805      	cmp	r0, #5
   20500:	d107      	bne.n	20512 <_strtod_l+0x3a2>
   20502:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   20504:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   20508:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   2050c:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   20510:	e66e      	b.n	201f0 <_strtod_l+0x80>
   20512:	f8df b210 	ldr.w	fp, [pc, #528]	; 20724 <_strtod_l+0x5b4>
   20516:	e74e      	b.n	203b6 <_strtod_l+0x246>
   20518:	9b04      	ldr	r3, [sp, #16]
   2051a:	462c      	mov	r4, r5
   2051c:	2b00      	cmp	r3, #0
   2051e:	bf08      	it	eq
   20520:	462b      	moveq	r3, r5
   20522:	2d10      	cmp	r5, #16
   20524:	bfa8      	it	ge
   20526:	2410      	movge	r4, #16
   20528:	9806      	ldr	r0, [sp, #24]
   2052a:	eba9 0902 	sub.w	r9, r9, r2
   2052e:	9304      	str	r3, [sp, #16]
   20530:	f7fc fba6 	bl	1cc80 <__aeabi_ui2d>
   20534:	2c09      	cmp	r4, #9
   20536:	4682      	mov	sl, r0
   20538:	468b      	mov	fp, r1
   2053a:	dd13      	ble.n	20564 <_strtod_l+0x3f4>
   2053c:	4b76      	ldr	r3, [pc, #472]	; (20718 <_strtod_l+0x5a8>)
   2053e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   20542:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   20546:	f7fc fc11 	bl	1cd6c <__aeabi_dmul>
   2054a:	4606      	mov	r6, r0
   2054c:	9805      	ldr	r0, [sp, #20]
   2054e:	460f      	mov	r7, r1
   20550:	f7fc fb96 	bl	1cc80 <__aeabi_ui2d>
   20554:	4602      	mov	r2, r0
   20556:	460b      	mov	r3, r1
   20558:	4630      	mov	r0, r6
   2055a:	4639      	mov	r1, r7
   2055c:	f7fc fa54 	bl	1ca08 <__adddf3>
   20560:	4682      	mov	sl, r0
   20562:	468b      	mov	fp, r1
   20564:	2d0f      	cmp	r5, #15
   20566:	dc36      	bgt.n	205d6 <_strtod_l+0x466>
   20568:	f1b9 0f00 	cmp.w	r9, #0
   2056c:	f43f ae40 	beq.w	201f0 <_strtod_l+0x80>
   20570:	dd24      	ble.n	205bc <_strtod_l+0x44c>
   20572:	f1b9 0f16 	cmp.w	r9, #22
   20576:	dc0b      	bgt.n	20590 <_strtod_l+0x420>
   20578:	4652      	mov	r2, sl
   2057a:	465b      	mov	r3, fp
   2057c:	4d66      	ldr	r5, [pc, #408]	; (20718 <_strtod_l+0x5a8>)
   2057e:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   20582:	e9d9 0100 	ldrd	r0, r1, [r9]
   20586:	f7fc fbf1 	bl	1cd6c <__aeabi_dmul>
   2058a:	4682      	mov	sl, r0
   2058c:	468b      	mov	fp, r1
   2058e:	e62f      	b.n	201f0 <_strtod_l+0x80>
   20590:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   20594:	4599      	cmp	r9, r3
   20596:	dc1e      	bgt.n	205d6 <_strtod_l+0x466>
   20598:	4c5f      	ldr	r4, [pc, #380]	; (20718 <_strtod_l+0x5a8>)
   2059a:	f1c5 050f 	rsb	r5, r5, #15
   2059e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   205a2:	eba9 0505 	sub.w	r5, r9, r5
   205a6:	4652      	mov	r2, sl
   205a8:	e9d1 0100 	ldrd	r0, r1, [r1]
   205ac:	465b      	mov	r3, fp
   205ae:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   205b2:	f7fc fbdb 	bl	1cd6c <__aeabi_dmul>
   205b6:	e9d4 2300 	ldrd	r2, r3, [r4]
   205ba:	e7e4      	b.n	20586 <_strtod_l+0x416>
   205bc:	f119 0f16 	cmn.w	r9, #22
   205c0:	db09      	blt.n	205d6 <_strtod_l+0x466>
   205c2:	4d55      	ldr	r5, [pc, #340]	; (20718 <_strtod_l+0x5a8>)
   205c4:	4650      	mov	r0, sl
   205c6:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   205ca:	e9d9 2300 	ldrd	r2, r3, [r9]
   205ce:	4659      	mov	r1, fp
   205d0:	f7fc fcf6 	bl	1cfc0 <__aeabi_ddiv>
   205d4:	e7d9      	b.n	2058a <_strtod_l+0x41a>
   205d6:	1b2c      	subs	r4, r5, r4
   205d8:	444c      	add	r4, r9
   205da:	2c00      	cmp	r4, #0
   205dc:	dd73      	ble.n	206c6 <_strtod_l+0x556>
   205de:	f014 030f 	ands.w	r3, r4, #15
   205e2:	d00a      	beq.n	205fa <_strtod_l+0x48a>
   205e4:	494c      	ldr	r1, [pc, #304]	; (20718 <_strtod_l+0x5a8>)
   205e6:	4652      	mov	r2, sl
   205e8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   205ec:	e9d1 0100 	ldrd	r0, r1, [r1]
   205f0:	465b      	mov	r3, fp
   205f2:	f7fc fbbb 	bl	1cd6c <__aeabi_dmul>
   205f6:	4682      	mov	sl, r0
   205f8:	468b      	mov	fp, r1
   205fa:	f034 040f 	bics.w	r4, r4, #15
   205fe:	d054      	beq.n	206aa <_strtod_l+0x53a>
   20600:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   20604:	dd27      	ble.n	20656 <_strtod_l+0x4e6>
   20606:	f04f 0900 	mov.w	r9, #0
   2060a:	f8cd 9010 	str.w	r9, [sp, #16]
   2060e:	f8cd 901c 	str.w	r9, [sp, #28]
   20612:	f8cd 9018 	str.w	r9, [sp, #24]
   20616:	2322      	movs	r3, #34	; 0x22
   20618:	f04f 0a00 	mov.w	sl, #0
   2061c:	f8df b108 	ldr.w	fp, [pc, #264]	; 20728 <_strtod_l+0x5b8>
   20620:	f8c8 3000 	str.w	r3, [r8]
   20624:	9b07      	ldr	r3, [sp, #28]
   20626:	2b00      	cmp	r3, #0
   20628:	f43f ade2 	beq.w	201f0 <_strtod_l+0x80>
   2062c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2062e:	4640      	mov	r0, r8
   20630:	f002 fba4 	bl	22d7c <_Bfree>
   20634:	9906      	ldr	r1, [sp, #24]
   20636:	4640      	mov	r0, r8
   20638:	f002 fba0 	bl	22d7c <_Bfree>
   2063c:	9904      	ldr	r1, [sp, #16]
   2063e:	4640      	mov	r0, r8
   20640:	f002 fb9c 	bl	22d7c <_Bfree>
   20644:	9907      	ldr	r1, [sp, #28]
   20646:	4640      	mov	r0, r8
   20648:	f002 fb98 	bl	22d7c <_Bfree>
   2064c:	4649      	mov	r1, r9
   2064e:	4640      	mov	r0, r8
   20650:	f002 fb94 	bl	22d7c <_Bfree>
   20654:	e5cc      	b.n	201f0 <_strtod_l+0x80>
   20656:	2300      	movs	r3, #0
   20658:	4650      	mov	r0, sl
   2065a:	4659      	mov	r1, fp
   2065c:	461f      	mov	r7, r3
   2065e:	4e2f      	ldr	r6, [pc, #188]	; (2071c <_strtod_l+0x5ac>)
   20660:	1124      	asrs	r4, r4, #4
   20662:	2c01      	cmp	r4, #1
   20664:	dc24      	bgt.n	206b0 <_strtod_l+0x540>
   20666:	b10b      	cbz	r3, 2066c <_strtod_l+0x4fc>
   20668:	4682      	mov	sl, r0
   2066a:	468b      	mov	fp, r1
   2066c:	4b2b      	ldr	r3, [pc, #172]	; (2071c <_strtod_l+0x5ac>)
   2066e:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   20672:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   20676:	4652      	mov	r2, sl
   20678:	e9d7 0100 	ldrd	r0, r1, [r7]
   2067c:	465b      	mov	r3, fp
   2067e:	f7fc fb75 	bl	1cd6c <__aeabi_dmul>
   20682:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   20686:	468b      	mov	fp, r1
   20688:	460a      	mov	r2, r1
   2068a:	0d1b      	lsrs	r3, r3, #20
   2068c:	4924      	ldr	r1, [pc, #144]	; (20720 <_strtod_l+0x5b0>)
   2068e:	051b      	lsls	r3, r3, #20
   20690:	428b      	cmp	r3, r1
   20692:	4682      	mov	sl, r0
   20694:	d8b7      	bhi.n	20606 <_strtod_l+0x496>
   20696:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   2069a:	428b      	cmp	r3, r1
   2069c:	bf86      	itte	hi
   2069e:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   206a2:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 2072c <_strtod_l+0x5bc>
   206a6:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   206aa:	2300      	movs	r3, #0
   206ac:	9305      	str	r3, [sp, #20]
   206ae:	e070      	b.n	20792 <_strtod_l+0x622>
   206b0:	07e2      	lsls	r2, r4, #31
   206b2:	d504      	bpl.n	206be <_strtod_l+0x54e>
   206b4:	e9d6 2300 	ldrd	r2, r3, [r6]
   206b8:	f7fc fb58 	bl	1cd6c <__aeabi_dmul>
   206bc:	2301      	movs	r3, #1
   206be:	3701      	adds	r7, #1
   206c0:	1064      	asrs	r4, r4, #1
   206c2:	3608      	adds	r6, #8
   206c4:	e7cd      	b.n	20662 <_strtod_l+0x4f2>
   206c6:	d0f0      	beq.n	206aa <_strtod_l+0x53a>
   206c8:	4264      	negs	r4, r4
   206ca:	f014 020f 	ands.w	r2, r4, #15
   206ce:	d00a      	beq.n	206e6 <_strtod_l+0x576>
   206d0:	4b11      	ldr	r3, [pc, #68]	; (20718 <_strtod_l+0x5a8>)
   206d2:	4650      	mov	r0, sl
   206d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   206d8:	4659      	mov	r1, fp
   206da:	e9d3 2300 	ldrd	r2, r3, [r3]
   206de:	f7fc fc6f 	bl	1cfc0 <__aeabi_ddiv>
   206e2:	4682      	mov	sl, r0
   206e4:	468b      	mov	fp, r1
   206e6:	1124      	asrs	r4, r4, #4
   206e8:	d0df      	beq.n	206aa <_strtod_l+0x53a>
   206ea:	2c1f      	cmp	r4, #31
   206ec:	dd20      	ble.n	20730 <_strtod_l+0x5c0>
   206ee:	f04f 0900 	mov.w	r9, #0
   206f2:	f8cd 9010 	str.w	r9, [sp, #16]
   206f6:	f8cd 901c 	str.w	r9, [sp, #28]
   206fa:	f8cd 9018 	str.w	r9, [sp, #24]
   206fe:	2322      	movs	r3, #34	; 0x22
   20700:	f04f 0a00 	mov.w	sl, #0
   20704:	f04f 0b00 	mov.w	fp, #0
   20708:	f8c8 3000 	str.w	r3, [r8]
   2070c:	e78a      	b.n	20624 <_strtod_l+0x4b4>
   2070e:	bf00      	nop
   20710:	0002747d 	.word	0x0002747d
   20714:	000274bc 	.word	0x000274bc
   20718:	000276c8 	.word	0x000276c8
   2071c:	000276a0 	.word	0x000276a0
   20720:	7ca00000 	.word	0x7ca00000
   20724:	fff80000 	.word	0xfff80000
   20728:	7ff00000 	.word	0x7ff00000
   2072c:	7fefffff 	.word	0x7fefffff
   20730:	f014 0310 	ands.w	r3, r4, #16
   20734:	bf18      	it	ne
   20736:	236a      	movne	r3, #106	; 0x6a
   20738:	4650      	mov	r0, sl
   2073a:	9305      	str	r3, [sp, #20]
   2073c:	4659      	mov	r1, fp
   2073e:	2300      	movs	r3, #0
   20740:	4e9f      	ldr	r6, [pc, #636]	; (209c0 <_strtod_l+0x850>)
   20742:	2c00      	cmp	r4, #0
   20744:	f300 8109 	bgt.w	2095a <_strtod_l+0x7ea>
   20748:	b10b      	cbz	r3, 2074e <_strtod_l+0x5de>
   2074a:	4682      	mov	sl, r0
   2074c:	468b      	mov	fp, r1
   2074e:	9b05      	ldr	r3, [sp, #20]
   20750:	b1bb      	cbz	r3, 20782 <_strtod_l+0x612>
   20752:	f3cb 530a 	ubfx	r3, fp, #20, #11
   20756:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   2075a:	2b00      	cmp	r3, #0
   2075c:	4659      	mov	r1, fp
   2075e:	dd10      	ble.n	20782 <_strtod_l+0x612>
   20760:	2b1f      	cmp	r3, #31
   20762:	f340 8104 	ble.w	2096e <_strtod_l+0x7fe>
   20766:	2b34      	cmp	r3, #52	; 0x34
   20768:	bfd8      	it	le
   2076a:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   2076e:	f04f 0a00 	mov.w	sl, #0
   20772:	bfcf      	iteee	gt
   20774:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   20778:	3b20      	suble	r3, #32
   2077a:	fa02 f303 	lslle.w	r3, r2, r3
   2077e:	ea03 0b01 	andle.w	fp, r3, r1
   20782:	2200      	movs	r2, #0
   20784:	2300      	movs	r3, #0
   20786:	4650      	mov	r0, sl
   20788:	4659      	mov	r1, fp
   2078a:	f003 ffd7 	bl	2473c <__aeabi_dcmpeq>
   2078e:	2800      	cmp	r0, #0
   20790:	d1ad      	bne.n	206ee <_strtod_l+0x57e>
   20792:	9b06      	ldr	r3, [sp, #24]
   20794:	9a04      	ldr	r2, [sp, #16]
   20796:	9300      	str	r3, [sp, #0]
   20798:	990a      	ldr	r1, [sp, #40]	; 0x28
   2079a:	462b      	mov	r3, r5
   2079c:	4640      	mov	r0, r8
   2079e:	f002 fb3f 	bl	22e20 <__s2b>
   207a2:	9007      	str	r0, [sp, #28]
   207a4:	2800      	cmp	r0, #0
   207a6:	f43f af2e 	beq.w	20606 <_strtod_l+0x496>
   207aa:	f1b9 0f00 	cmp.w	r9, #0
   207ae:	f1c9 0300 	rsb	r3, r9, #0
   207b2:	bfa8      	it	ge
   207b4:	2300      	movge	r3, #0
   207b6:	930e      	str	r3, [sp, #56]	; 0x38
   207b8:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   207bc:	f04f 0900 	mov.w	r9, #0
   207c0:	930f      	str	r3, [sp, #60]	; 0x3c
   207c2:	f8cd 9010 	str.w	r9, [sp, #16]
   207c6:	9b07      	ldr	r3, [sp, #28]
   207c8:	4640      	mov	r0, r8
   207ca:	6859      	ldr	r1, [r3, #4]
   207cc:	f002 faa2 	bl	22d14 <_Balloc>
   207d0:	9006      	str	r0, [sp, #24]
   207d2:	2800      	cmp	r0, #0
   207d4:	f43f af1f 	beq.w	20616 <_strtod_l+0x4a6>
   207d8:	9b07      	ldr	r3, [sp, #28]
   207da:	300c      	adds	r0, #12
   207dc:	691a      	ldr	r2, [r3, #16]
   207de:	f103 010c 	add.w	r1, r3, #12
   207e2:	3202      	adds	r2, #2
   207e4:	0092      	lsls	r2, r2, #2
   207e6:	f7fd fe9c 	bl	1e522 <memcpy>
   207ea:	ab1c      	add	r3, sp, #112	; 0x70
   207ec:	9301      	str	r3, [sp, #4]
   207ee:	ab1b      	add	r3, sp, #108	; 0x6c
   207f0:	9300      	str	r3, [sp, #0]
   207f2:	4652      	mov	r2, sl
   207f4:	465b      	mov	r3, fp
   207f6:	4640      	mov	r0, r8
   207f8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   207fc:	f002 fdc0 	bl	23380 <__d2b>
   20800:	901a      	str	r0, [sp, #104]	; 0x68
   20802:	2800      	cmp	r0, #0
   20804:	f43f af07 	beq.w	20616 <_strtod_l+0x4a6>
   20808:	2101      	movs	r1, #1
   2080a:	4640      	mov	r0, r8
   2080c:	f002 fb94 	bl	22f38 <__i2b>
   20810:	9004      	str	r0, [sp, #16]
   20812:	4603      	mov	r3, r0
   20814:	2800      	cmp	r0, #0
   20816:	f43f aefe 	beq.w	20616 <_strtod_l+0x4a6>
   2081a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   2081c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   2081e:	2d00      	cmp	r5, #0
   20820:	bfab      	itete	ge
   20822:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   20824:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   20826:	195e      	addge	r6, r3, r5
   20828:	1b5c      	sublt	r4, r3, r5
   2082a:	9b05      	ldr	r3, [sp, #20]
   2082c:	bfa8      	it	ge
   2082e:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   20830:	eba5 0503 	sub.w	r5, r5, r3
   20834:	4415      	add	r5, r2
   20836:	4b63      	ldr	r3, [pc, #396]	; (209c4 <_strtod_l+0x854>)
   20838:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   2083c:	bfb8      	it	lt
   2083e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   20840:	429d      	cmp	r5, r3
   20842:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   20846:	f280 80a4 	bge.w	20992 <_strtod_l+0x822>
   2084a:	1b5b      	subs	r3, r3, r5
   2084c:	2b1f      	cmp	r3, #31
   2084e:	eba2 0203 	sub.w	r2, r2, r3
   20852:	f04f 0701 	mov.w	r7, #1
   20856:	f300 8091 	bgt.w	2097c <_strtod_l+0x80c>
   2085a:	2500      	movs	r5, #0
   2085c:	fa07 f303 	lsl.w	r3, r7, r3
   20860:	9314      	str	r3, [sp, #80]	; 0x50
   20862:	18b7      	adds	r7, r6, r2
   20864:	9b05      	ldr	r3, [sp, #20]
   20866:	42be      	cmp	r6, r7
   20868:	4414      	add	r4, r2
   2086a:	441c      	add	r4, r3
   2086c:	4633      	mov	r3, r6
   2086e:	bfa8      	it	ge
   20870:	463b      	movge	r3, r7
   20872:	42a3      	cmp	r3, r4
   20874:	bfa8      	it	ge
   20876:	4623      	movge	r3, r4
   20878:	2b00      	cmp	r3, #0
   2087a:	bfc2      	ittt	gt
   2087c:	1aff      	subgt	r7, r7, r3
   2087e:	1ae4      	subgt	r4, r4, r3
   20880:	1af6      	subgt	r6, r6, r3
   20882:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   20884:	b1bb      	cbz	r3, 208b6 <_strtod_l+0x746>
   20886:	461a      	mov	r2, r3
   20888:	9904      	ldr	r1, [sp, #16]
   2088a:	4640      	mov	r0, r8
   2088c:	f002 fbea 	bl	23064 <__pow5mult>
   20890:	9004      	str	r0, [sp, #16]
   20892:	2800      	cmp	r0, #0
   20894:	f43f aebf 	beq.w	20616 <_strtod_l+0x4a6>
   20898:	4601      	mov	r1, r0
   2089a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   2089c:	4640      	mov	r0, r8
   2089e:	f002 fb54 	bl	22f4a <__multiply>
   208a2:	9008      	str	r0, [sp, #32]
   208a4:	2800      	cmp	r0, #0
   208a6:	f43f aeb6 	beq.w	20616 <_strtod_l+0x4a6>
   208aa:	991a      	ldr	r1, [sp, #104]	; 0x68
   208ac:	4640      	mov	r0, r8
   208ae:	f002 fa65 	bl	22d7c <_Bfree>
   208b2:	9b08      	ldr	r3, [sp, #32]
   208b4:	931a      	str	r3, [sp, #104]	; 0x68
   208b6:	2f00      	cmp	r7, #0
   208b8:	dc6f      	bgt.n	2099a <_strtod_l+0x82a>
   208ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   208bc:	2b00      	cmp	r3, #0
   208be:	d175      	bne.n	209ac <_strtod_l+0x83c>
   208c0:	2c00      	cmp	r4, #0
   208c2:	dd08      	ble.n	208d6 <_strtod_l+0x766>
   208c4:	4622      	mov	r2, r4
   208c6:	9906      	ldr	r1, [sp, #24]
   208c8:	4640      	mov	r0, r8
   208ca:	f002 fc19 	bl	23100 <__lshift>
   208ce:	9006      	str	r0, [sp, #24]
   208d0:	2800      	cmp	r0, #0
   208d2:	f43f aea0 	beq.w	20616 <_strtod_l+0x4a6>
   208d6:	2e00      	cmp	r6, #0
   208d8:	dd08      	ble.n	208ec <_strtod_l+0x77c>
   208da:	4632      	mov	r2, r6
   208dc:	9904      	ldr	r1, [sp, #16]
   208de:	4640      	mov	r0, r8
   208e0:	f002 fc0e 	bl	23100 <__lshift>
   208e4:	9004      	str	r0, [sp, #16]
   208e6:	2800      	cmp	r0, #0
   208e8:	f43f ae95 	beq.w	20616 <_strtod_l+0x4a6>
   208ec:	9a06      	ldr	r2, [sp, #24]
   208ee:	991a      	ldr	r1, [sp, #104]	; 0x68
   208f0:	4640      	mov	r0, r8
   208f2:	f002 fc70 	bl	231d6 <__mdiff>
   208f6:	4681      	mov	r9, r0
   208f8:	2800      	cmp	r0, #0
   208fa:	f43f ae8c 	beq.w	20616 <_strtod_l+0x4a6>
   208fe:	2400      	movs	r4, #0
   20900:	68c3      	ldr	r3, [r0, #12]
   20902:	9904      	ldr	r1, [sp, #16]
   20904:	60c4      	str	r4, [r0, #12]
   20906:	9308      	str	r3, [sp, #32]
   20908:	f002 fc4b 	bl	231a2 <__mcmp>
   2090c:	42a0      	cmp	r0, r4
   2090e:	da5b      	bge.n	209c8 <_strtod_l+0x858>
   20910:	9b08      	ldr	r3, [sp, #32]
   20912:	b9f3      	cbnz	r3, 20952 <_strtod_l+0x7e2>
   20914:	f1ba 0f00 	cmp.w	sl, #0
   20918:	d11b      	bne.n	20952 <_strtod_l+0x7e2>
   2091a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   2091e:	b9c3      	cbnz	r3, 20952 <_strtod_l+0x7e2>
   20920:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20924:	0d1b      	lsrs	r3, r3, #20
   20926:	051b      	lsls	r3, r3, #20
   20928:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   2092c:	d911      	bls.n	20952 <_strtod_l+0x7e2>
   2092e:	f8d9 3014 	ldr.w	r3, [r9, #20]
   20932:	b91b      	cbnz	r3, 2093c <_strtod_l+0x7cc>
   20934:	f8d9 3010 	ldr.w	r3, [r9, #16]
   20938:	2b01      	cmp	r3, #1
   2093a:	dd0a      	ble.n	20952 <_strtod_l+0x7e2>
   2093c:	4649      	mov	r1, r9
   2093e:	2201      	movs	r2, #1
   20940:	4640      	mov	r0, r8
   20942:	f002 fbdd 	bl	23100 <__lshift>
   20946:	9904      	ldr	r1, [sp, #16]
   20948:	4681      	mov	r9, r0
   2094a:	f002 fc2a 	bl	231a2 <__mcmp>
   2094e:	2800      	cmp	r0, #0
   20950:	dc6b      	bgt.n	20a2a <_strtod_l+0x8ba>
   20952:	9b05      	ldr	r3, [sp, #20]
   20954:	2b00      	cmp	r3, #0
   20956:	d175      	bne.n	20a44 <_strtod_l+0x8d4>
   20958:	e668      	b.n	2062c <_strtod_l+0x4bc>
   2095a:	07e2      	lsls	r2, r4, #31
   2095c:	d504      	bpl.n	20968 <_strtod_l+0x7f8>
   2095e:	e9d6 2300 	ldrd	r2, r3, [r6]
   20962:	f7fc fa03 	bl	1cd6c <__aeabi_dmul>
   20966:	2301      	movs	r3, #1
   20968:	1064      	asrs	r4, r4, #1
   2096a:	3608      	adds	r6, #8
   2096c:	e6e9      	b.n	20742 <_strtod_l+0x5d2>
   2096e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   20972:	fa02 f303 	lsl.w	r3, r2, r3
   20976:	ea03 0a0a 	and.w	sl, r3, sl
   2097a:	e702      	b.n	20782 <_strtod_l+0x612>
   2097c:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   20980:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   20984:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   20988:	35e2      	adds	r5, #226	; 0xe2
   2098a:	fa07 f505 	lsl.w	r5, r7, r5
   2098e:	9714      	str	r7, [sp, #80]	; 0x50
   20990:	e767      	b.n	20862 <_strtod_l+0x6f2>
   20992:	2301      	movs	r3, #1
   20994:	2500      	movs	r5, #0
   20996:	9314      	str	r3, [sp, #80]	; 0x50
   20998:	e763      	b.n	20862 <_strtod_l+0x6f2>
   2099a:	463a      	mov	r2, r7
   2099c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2099e:	4640      	mov	r0, r8
   209a0:	f002 fbae 	bl	23100 <__lshift>
   209a4:	901a      	str	r0, [sp, #104]	; 0x68
   209a6:	2800      	cmp	r0, #0
   209a8:	d187      	bne.n	208ba <_strtod_l+0x74a>
   209aa:	e634      	b.n	20616 <_strtod_l+0x4a6>
   209ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   209ae:	9906      	ldr	r1, [sp, #24]
   209b0:	4640      	mov	r0, r8
   209b2:	f002 fb57 	bl	23064 <__pow5mult>
   209b6:	9006      	str	r0, [sp, #24]
   209b8:	2800      	cmp	r0, #0
   209ba:	d181      	bne.n	208c0 <_strtod_l+0x750>
   209bc:	e62b      	b.n	20616 <_strtod_l+0x4a6>
   209be:	bf00      	nop
   209c0:	000274d0 	.word	0x000274d0
   209c4:	fffffc02 	.word	0xfffffc02
   209c8:	f040 8086 	bne.w	20ad8 <_strtod_l+0x968>
   209cc:	9a08      	ldr	r2, [sp, #32]
   209ce:	f3cb 0313 	ubfx	r3, fp, #0, #20
   209d2:	b332      	cbz	r2, 20a22 <_strtod_l+0x8b2>
   209d4:	4aac      	ldr	r2, [pc, #688]	; (20c88 <_strtod_l+0xb18>)
   209d6:	4659      	mov	r1, fp
   209d8:	4293      	cmp	r3, r2
   209da:	d152      	bne.n	20a82 <_strtod_l+0x912>
   209dc:	9b05      	ldr	r3, [sp, #20]
   209de:	4650      	mov	r0, sl
   209e0:	b1d3      	cbz	r3, 20a18 <_strtod_l+0x8a8>
   209e2:	4aaa      	ldr	r2, [pc, #680]	; (20c8c <_strtod_l+0xb1c>)
   209e4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   209e8:	400a      	ands	r2, r1
   209ea:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   209ee:	d816      	bhi.n	20a1e <_strtod_l+0x8ae>
   209f0:	0d12      	lsrs	r2, r2, #20
   209f2:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   209f6:	fa04 f303 	lsl.w	r3, r4, r3
   209fa:	4283      	cmp	r3, r0
   209fc:	d141      	bne.n	20a82 <_strtod_l+0x912>
   209fe:	4aa4      	ldr	r2, [pc, #656]	; (20c90 <_strtod_l+0xb20>)
   20a00:	4291      	cmp	r1, r2
   20a02:	d102      	bne.n	20a0a <_strtod_l+0x89a>
   20a04:	3301      	adds	r3, #1
   20a06:	f43f ae06 	beq.w	20616 <_strtod_l+0x4a6>
   20a0a:	4ba0      	ldr	r3, [pc, #640]	; (20c8c <_strtod_l+0xb1c>)
   20a0c:	f04f 0a00 	mov.w	sl, #0
   20a10:	400b      	ands	r3, r1
   20a12:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   20a16:	e79c      	b.n	20952 <_strtod_l+0x7e2>
   20a18:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   20a1c:	e7ed      	b.n	209fa <_strtod_l+0x88a>
   20a1e:	4623      	mov	r3, r4
   20a20:	e7eb      	b.n	209fa <_strtod_l+0x88a>
   20a22:	bb73      	cbnz	r3, 20a82 <_strtod_l+0x912>
   20a24:	f1ba 0f00 	cmp.w	sl, #0
   20a28:	d12b      	bne.n	20a82 <_strtod_l+0x912>
   20a2a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20a2e:	9a05      	ldr	r2, [sp, #20]
   20a30:	0d1b      	lsrs	r3, r3, #20
   20a32:	051b      	lsls	r3, r3, #20
   20a34:	b1e2      	cbz	r2, 20a70 <_strtod_l+0x900>
   20a36:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   20a3a:	dc19      	bgt.n	20a70 <_strtod_l+0x900>
   20a3c:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   20a40:	f77f ae5d 	ble.w	206fe <_strtod_l+0x58e>
   20a44:	4b93      	ldr	r3, [pc, #588]	; (20c94 <_strtod_l+0xb24>)
   20a46:	4650      	mov	r0, sl
   20a48:	930d      	str	r3, [sp, #52]	; 0x34
   20a4a:	2300      	movs	r3, #0
   20a4c:	930c      	str	r3, [sp, #48]	; 0x30
   20a4e:	4659      	mov	r1, fp
   20a50:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   20a54:	f7fc f98a 	bl	1cd6c <__aeabi_dmul>
   20a58:	4682      	mov	sl, r0
   20a5a:	468b      	mov	fp, r1
   20a5c:	2900      	cmp	r1, #0
   20a5e:	f47f ade5 	bne.w	2062c <_strtod_l+0x4bc>
   20a62:	2800      	cmp	r0, #0
   20a64:	f47f ade2 	bne.w	2062c <_strtod_l+0x4bc>
   20a68:	2322      	movs	r3, #34	; 0x22
   20a6a:	f8c8 3000 	str.w	r3, [r8]
   20a6e:	e5dd      	b.n	2062c <_strtod_l+0x4bc>
   20a70:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   20a74:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   20a78:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   20a7c:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   20a80:	e767      	b.n	20952 <_strtod_l+0x7e2>
   20a82:	b19d      	cbz	r5, 20aac <_strtod_l+0x93c>
   20a84:	ea15 0f0b 	tst.w	r5, fp
   20a88:	f43f af63 	beq.w	20952 <_strtod_l+0x7e2>
   20a8c:	9b08      	ldr	r3, [sp, #32]
   20a8e:	9a05      	ldr	r2, [sp, #20]
   20a90:	4650      	mov	r0, sl
   20a92:	4659      	mov	r1, fp
   20a94:	b173      	cbz	r3, 20ab4 <_strtod_l+0x944>
   20a96:	f7ff fb47 	bl	20128 <sulp>
   20a9a:	4602      	mov	r2, r0
   20a9c:	460b      	mov	r3, r1
   20a9e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20aa2:	f7fb ffb1 	bl	1ca08 <__adddf3>
   20aa6:	4682      	mov	sl, r0
   20aa8:	468b      	mov	fp, r1
   20aaa:	e752      	b.n	20952 <_strtod_l+0x7e2>
   20aac:	9b14      	ldr	r3, [sp, #80]	; 0x50
   20aae:	ea13 0f0a 	tst.w	r3, sl
   20ab2:	e7e9      	b.n	20a88 <_strtod_l+0x918>
   20ab4:	f7ff fb38 	bl	20128 <sulp>
   20ab8:	4602      	mov	r2, r0
   20aba:	460b      	mov	r3, r1
   20abc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20ac0:	f7fb ffa0 	bl	1ca04 <__aeabi_dsub>
   20ac4:	2200      	movs	r2, #0
   20ac6:	2300      	movs	r3, #0
   20ac8:	4682      	mov	sl, r0
   20aca:	468b      	mov	fp, r1
   20acc:	f003 fe36 	bl	2473c <__aeabi_dcmpeq>
   20ad0:	2800      	cmp	r0, #0
   20ad2:	f47f ae14 	bne.w	206fe <_strtod_l+0x58e>
   20ad6:	e73c      	b.n	20952 <_strtod_l+0x7e2>
   20ad8:	9904      	ldr	r1, [sp, #16]
   20ada:	4648      	mov	r0, r9
   20adc:	f002 fc9f 	bl	2341e <__ratio>
   20ae0:	2200      	movs	r2, #0
   20ae2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   20ae6:	4606      	mov	r6, r0
   20ae8:	460f      	mov	r7, r1
   20aea:	f003 fe3b 	bl	24764 <__aeabi_dcmple>
   20aee:	2800      	cmp	r0, #0
   20af0:	d070      	beq.n	20bd4 <_strtod_l+0xa64>
   20af2:	9b08      	ldr	r3, [sp, #32]
   20af4:	2b00      	cmp	r3, #0
   20af6:	d043      	beq.n	20b80 <_strtod_l+0xa10>
   20af8:	2600      	movs	r6, #0
   20afa:	4f67      	ldr	r7, [pc, #412]	; (20c98 <_strtod_l+0xb28>)
   20afc:	4d66      	ldr	r5, [pc, #408]	; (20c98 <_strtod_l+0xb28>)
   20afe:	4b63      	ldr	r3, [pc, #396]	; (20c8c <_strtod_l+0xb1c>)
   20b00:	ea0b 0303 	and.w	r3, fp, r3
   20b04:	9314      	str	r3, [sp, #80]	; 0x50
   20b06:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20b08:	4b64      	ldr	r3, [pc, #400]	; (20c9c <_strtod_l+0xb2c>)
   20b0a:	429a      	cmp	r2, r3
   20b0c:	f040 80ce 	bne.w	20cac <_strtod_l+0xb3c>
   20b10:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   20b14:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   20b18:	4650      	mov	r0, sl
   20b1a:	4659      	mov	r1, fp
   20b1c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   20b20:	f002 fbb8 	bl	23294 <__ulp>
   20b24:	4602      	mov	r2, r0
   20b26:	460b      	mov	r3, r1
   20b28:	4630      	mov	r0, r6
   20b2a:	4639      	mov	r1, r7
   20b2c:	f7fc f91e 	bl	1cd6c <__aeabi_dmul>
   20b30:	4652      	mov	r2, sl
   20b32:	465b      	mov	r3, fp
   20b34:	f7fb ff68 	bl	1ca08 <__adddf3>
   20b38:	4a54      	ldr	r2, [pc, #336]	; (20c8c <_strtod_l+0xb1c>)
   20b3a:	4b59      	ldr	r3, [pc, #356]	; (20ca0 <_strtod_l+0xb30>)
   20b3c:	400a      	ands	r2, r1
   20b3e:	429a      	cmp	r2, r3
   20b40:	4682      	mov	sl, r0
   20b42:	d95d      	bls.n	20c00 <_strtod_l+0xa90>
   20b44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   20b46:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   20b4a:	429a      	cmp	r2, r3
   20b4c:	d103      	bne.n	20b56 <_strtod_l+0x9e6>
   20b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20b50:	3301      	adds	r3, #1
   20b52:	f43f ad60 	beq.w	20616 <_strtod_l+0x4a6>
   20b56:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   20b5a:	f8df b134 	ldr.w	fp, [pc, #308]	; 20c90 <_strtod_l+0xb20>
   20b5e:	991a      	ldr	r1, [sp, #104]	; 0x68
   20b60:	4640      	mov	r0, r8
   20b62:	f002 f90b 	bl	22d7c <_Bfree>
   20b66:	9906      	ldr	r1, [sp, #24]
   20b68:	4640      	mov	r0, r8
   20b6a:	f002 f907 	bl	22d7c <_Bfree>
   20b6e:	9904      	ldr	r1, [sp, #16]
   20b70:	4640      	mov	r0, r8
   20b72:	f002 f903 	bl	22d7c <_Bfree>
   20b76:	4649      	mov	r1, r9
   20b78:	4640      	mov	r0, r8
   20b7a:	f002 f8ff 	bl	22d7c <_Bfree>
   20b7e:	e622      	b.n	207c6 <_strtod_l+0x656>
   20b80:	f1ba 0f00 	cmp.w	sl, #0
   20b84:	d118      	bne.n	20bb8 <_strtod_l+0xa48>
   20b86:	f3cb 0313 	ubfx	r3, fp, #0, #20
   20b8a:	b9e3      	cbnz	r3, 20bc6 <_strtod_l+0xa56>
   20b8c:	2200      	movs	r2, #0
   20b8e:	4b42      	ldr	r3, [pc, #264]	; (20c98 <_strtod_l+0xb28>)
   20b90:	4630      	mov	r0, r6
   20b92:	4639      	mov	r1, r7
   20b94:	f003 fddc 	bl	24750 <__aeabi_dcmplt>
   20b98:	b9c8      	cbnz	r0, 20bce <_strtod_l+0xa5e>
   20b9a:	2200      	movs	r2, #0
   20b9c:	4b41      	ldr	r3, [pc, #260]	; (20ca4 <_strtod_l+0xb34>)
   20b9e:	4630      	mov	r0, r6
   20ba0:	4639      	mov	r1, r7
   20ba2:	f7fc f8e3 	bl	1cd6c <__aeabi_dmul>
   20ba6:	4604      	mov	r4, r0
   20ba8:	460d      	mov	r5, r1
   20baa:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   20bae:	9416      	str	r4, [sp, #88]	; 0x58
   20bb0:	9317      	str	r3, [sp, #92]	; 0x5c
   20bb2:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   20bb6:	e7a2      	b.n	20afe <_strtod_l+0x98e>
   20bb8:	f1ba 0f01 	cmp.w	sl, #1
   20bbc:	d103      	bne.n	20bc6 <_strtod_l+0xa56>
   20bbe:	f1bb 0f00 	cmp.w	fp, #0
   20bc2:	f43f ad9c 	beq.w	206fe <_strtod_l+0x58e>
   20bc6:	2600      	movs	r6, #0
   20bc8:	4f37      	ldr	r7, [pc, #220]	; (20ca8 <_strtod_l+0xb38>)
   20bca:	2400      	movs	r4, #0
   20bcc:	e796      	b.n	20afc <_strtod_l+0x98c>
   20bce:	9c08      	ldr	r4, [sp, #32]
   20bd0:	4d34      	ldr	r5, [pc, #208]	; (20ca4 <_strtod_l+0xb34>)
   20bd2:	e7ea      	b.n	20baa <_strtod_l+0xa3a>
   20bd4:	4b33      	ldr	r3, [pc, #204]	; (20ca4 <_strtod_l+0xb34>)
   20bd6:	2200      	movs	r2, #0
   20bd8:	4630      	mov	r0, r6
   20bda:	4639      	mov	r1, r7
   20bdc:	f7fc f8c6 	bl	1cd6c <__aeabi_dmul>
   20be0:	9b08      	ldr	r3, [sp, #32]
   20be2:	4604      	mov	r4, r0
   20be4:	460d      	mov	r5, r1
   20be6:	b933      	cbnz	r3, 20bf6 <_strtod_l+0xa86>
   20be8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   20bec:	9010      	str	r0, [sp, #64]	; 0x40
   20bee:	9311      	str	r3, [sp, #68]	; 0x44
   20bf0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   20bf4:	e783      	b.n	20afe <_strtod_l+0x98e>
   20bf6:	4602      	mov	r2, r0
   20bf8:	460b      	mov	r3, r1
   20bfa:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   20bfe:	e7f7      	b.n	20bf0 <_strtod_l+0xa80>
   20c00:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   20c04:	9b05      	ldr	r3, [sp, #20]
   20c06:	2b00      	cmp	r3, #0
   20c08:	d1a9      	bne.n	20b5e <_strtod_l+0x9ee>
   20c0a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20c0e:	0d1b      	lsrs	r3, r3, #20
   20c10:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20c12:	051b      	lsls	r3, r3, #20
   20c14:	429a      	cmp	r2, r3
   20c16:	465e      	mov	r6, fp
   20c18:	d1a1      	bne.n	20b5e <_strtod_l+0x9ee>
   20c1a:	4629      	mov	r1, r5
   20c1c:	4620      	mov	r0, r4
   20c1e:	f003 fdd5 	bl	247cc <__aeabi_d2iz>
   20c22:	f7fc f83d 	bl	1cca0 <__aeabi_i2d>
   20c26:	460b      	mov	r3, r1
   20c28:	4602      	mov	r2, r0
   20c2a:	4629      	mov	r1, r5
   20c2c:	4620      	mov	r0, r4
   20c2e:	f7fb fee9 	bl	1ca04 <__aeabi_dsub>
   20c32:	9b08      	ldr	r3, [sp, #32]
   20c34:	4604      	mov	r4, r0
   20c36:	460d      	mov	r5, r1
   20c38:	b933      	cbnz	r3, 20c48 <_strtod_l+0xad8>
   20c3a:	f1ba 0f00 	cmp.w	sl, #0
   20c3e:	d103      	bne.n	20c48 <_strtod_l+0xad8>
   20c40:	f3cb 0613 	ubfx	r6, fp, #0, #20
   20c44:	2e00      	cmp	r6, #0
   20c46:	d06c      	beq.n	20d22 <_strtod_l+0xbb2>
   20c48:	a30b      	add	r3, pc, #44	; (adr r3, 20c78 <_strtod_l+0xb08>)
   20c4a:	e9d3 2300 	ldrd	r2, r3, [r3]
   20c4e:	4620      	mov	r0, r4
   20c50:	4629      	mov	r1, r5
   20c52:	f003 fd7d 	bl	24750 <__aeabi_dcmplt>
   20c56:	2800      	cmp	r0, #0
   20c58:	f47f ace8 	bne.w	2062c <_strtod_l+0x4bc>
   20c5c:	a308      	add	r3, pc, #32	; (adr r3, 20c80 <_strtod_l+0xb10>)
   20c5e:	e9d3 2300 	ldrd	r2, r3, [r3]
   20c62:	4620      	mov	r0, r4
   20c64:	4629      	mov	r1, r5
   20c66:	f003 fd91 	bl	2478c <__aeabi_dcmpgt>
   20c6a:	2800      	cmp	r0, #0
   20c6c:	f43f af77 	beq.w	20b5e <_strtod_l+0x9ee>
   20c70:	e4dc      	b.n	2062c <_strtod_l+0x4bc>
   20c72:	bf00      	nop
   20c74:	f3af 8000 	nop.w
   20c78:	94a03595 	.word	0x94a03595
   20c7c:	3fdfffff 	.word	0x3fdfffff
   20c80:	35afe535 	.word	0x35afe535
   20c84:	3fe00000 	.word	0x3fe00000
   20c88:	000fffff 	.word	0x000fffff
   20c8c:	7ff00000 	.word	0x7ff00000
   20c90:	7fefffff 	.word	0x7fefffff
   20c94:	39500000 	.word	0x39500000
   20c98:	3ff00000 	.word	0x3ff00000
   20c9c:	7fe00000 	.word	0x7fe00000
   20ca0:	7c9fffff 	.word	0x7c9fffff
   20ca4:	3fe00000 	.word	0x3fe00000
   20ca8:	bff00000 	.word	0xbff00000
   20cac:	9b05      	ldr	r3, [sp, #20]
   20cae:	b313      	cbz	r3, 20cf6 <_strtod_l+0xb86>
   20cb0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   20cb2:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   20cb6:	d81e      	bhi.n	20cf6 <_strtod_l+0xb86>
   20cb8:	a325      	add	r3, pc, #148	; (adr r3, 20d50 <_strtod_l+0xbe0>)
   20cba:	e9d3 2300 	ldrd	r2, r3, [r3]
   20cbe:	4620      	mov	r0, r4
   20cc0:	4629      	mov	r1, r5
   20cc2:	f003 fd4f 	bl	24764 <__aeabi_dcmple>
   20cc6:	b190      	cbz	r0, 20cee <_strtod_l+0xb7e>
   20cc8:	4629      	mov	r1, r5
   20cca:	4620      	mov	r0, r4
   20ccc:	f7fc fa60 	bl	1d190 <__aeabi_d2uiz>
   20cd0:	2800      	cmp	r0, #0
   20cd2:	bf08      	it	eq
   20cd4:	2001      	moveq	r0, #1
   20cd6:	f7fb ffd3 	bl	1cc80 <__aeabi_ui2d>
   20cda:	9b08      	ldr	r3, [sp, #32]
   20cdc:	4604      	mov	r4, r0
   20cde:	460d      	mov	r5, r1
   20ce0:	b9d3      	cbnz	r3, 20d18 <_strtod_l+0xba8>
   20ce2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   20ce6:	9012      	str	r0, [sp, #72]	; 0x48
   20ce8:	9313      	str	r3, [sp, #76]	; 0x4c
   20cea:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   20cee:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20cf0:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   20cf4:	1a9f      	subs	r7, r3, r2
   20cf6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20cfa:	f002 facb 	bl	23294 <__ulp>
   20cfe:	4602      	mov	r2, r0
   20d00:	460b      	mov	r3, r1
   20d02:	4630      	mov	r0, r6
   20d04:	4639      	mov	r1, r7
   20d06:	f7fc f831 	bl	1cd6c <__aeabi_dmul>
   20d0a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   20d0e:	f7fb fe7b 	bl	1ca08 <__adddf3>
   20d12:	4682      	mov	sl, r0
   20d14:	468b      	mov	fp, r1
   20d16:	e775      	b.n	20c04 <_strtod_l+0xa94>
   20d18:	4602      	mov	r2, r0
   20d1a:	460b      	mov	r3, r1
   20d1c:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   20d20:	e7e3      	b.n	20cea <_strtod_l+0xb7a>
   20d22:	a30d      	add	r3, pc, #52	; (adr r3, 20d58 <_strtod_l+0xbe8>)
   20d24:	e9d3 2300 	ldrd	r2, r3, [r3]
   20d28:	f003 fd12 	bl	24750 <__aeabi_dcmplt>
   20d2c:	e79d      	b.n	20c6a <_strtod_l+0xafa>
   20d2e:	2300      	movs	r3, #0
   20d30:	9309      	str	r3, [sp, #36]	; 0x24
   20d32:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20d34:	9a15      	ldr	r2, [sp, #84]	; 0x54
   20d36:	6013      	str	r3, [r2, #0]
   20d38:	f7ff ba5e 	b.w	201f8 <_strtod_l+0x88>
   20d3c:	2b65      	cmp	r3, #101	; 0x65
   20d3e:	f04f 0200 	mov.w	r2, #0
   20d42:	f43f abae 	beq.w	204a2 <_strtod_l+0x332>
   20d46:	4615      	mov	r5, r2
   20d48:	2101      	movs	r1, #1
   20d4a:	f7ff bacd 	b.w	202e8 <_strtod_l+0x178>
   20d4e:	bf00      	nop
   20d50:	ffc00000 	.word	0xffc00000
   20d54:	41dfffff 	.word	0x41dfffff
   20d58:	94a03595 	.word	0x94a03595
   20d5c:	3fcfffff 	.word	0x3fcfffff

00020d60 <_strtod_r>:
_strtod_r():
   20d60:	4b05      	ldr	r3, [pc, #20]	; (20d78 <_strtod_r+0x18>)
   20d62:	b410      	push	{r4}
   20d64:	681b      	ldr	r3, [r3, #0]
   20d66:	4c05      	ldr	r4, [pc, #20]	; (20d7c <_strtod_r+0x1c>)
   20d68:	6a1b      	ldr	r3, [r3, #32]
   20d6a:	2b00      	cmp	r3, #0
   20d6c:	bf08      	it	eq
   20d6e:	4623      	moveq	r3, r4
   20d70:	bc10      	pop	{r4}
   20d72:	f7ff b9fd 	b.w	20170 <_strtod_l>
   20d76:	bf00      	nop
   20d78:	2007c0e4 	.word	0x2007c0e4
   20d7c:	2007c148 	.word	0x2007c148

00020d80 <__strtok_r>:
__strtok_r():
   20d80:	b5f0      	push	{r4, r5, r6, r7, lr}
   20d82:	b918      	cbnz	r0, 20d8c <__strtok_r+0xc>
   20d84:	6810      	ldr	r0, [r2, #0]
   20d86:	b908      	cbnz	r0, 20d8c <__strtok_r+0xc>
   20d88:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20d8a:	4620      	mov	r0, r4
   20d8c:	4604      	mov	r4, r0
   20d8e:	460f      	mov	r7, r1
   20d90:	f814 5b01 	ldrb.w	r5, [r4], #1
   20d94:	f817 6b01 	ldrb.w	r6, [r7], #1
   20d98:	b91e      	cbnz	r6, 20da2 <__strtok_r+0x22>
   20d9a:	b965      	cbnz	r5, 20db6 <__strtok_r+0x36>
   20d9c:	6015      	str	r5, [r2, #0]
   20d9e:	4628      	mov	r0, r5
   20da0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20da2:	42b5      	cmp	r5, r6
   20da4:	d1f6      	bne.n	20d94 <__strtok_r+0x14>
   20da6:	2b00      	cmp	r3, #0
   20da8:	d1ef      	bne.n	20d8a <__strtok_r+0xa>
   20daa:	6014      	str	r4, [r2, #0]
   20dac:	7003      	strb	r3, [r0, #0]
   20dae:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20db0:	461c      	mov	r4, r3
   20db2:	e00c      	b.n	20dce <__strtok_r+0x4e>
   20db4:	b915      	cbnz	r5, 20dbc <__strtok_r+0x3c>
   20db6:	460e      	mov	r6, r1
   20db8:	f814 3b01 	ldrb.w	r3, [r4], #1
   20dbc:	f816 5b01 	ldrb.w	r5, [r6], #1
   20dc0:	42ab      	cmp	r3, r5
   20dc2:	d1f7      	bne.n	20db4 <__strtok_r+0x34>
   20dc4:	2b00      	cmp	r3, #0
   20dc6:	d0f3      	beq.n	20db0 <__strtok_r+0x30>
   20dc8:	2300      	movs	r3, #0
   20dca:	f804 3c01 	strb.w	r3, [r4, #-1]
   20dce:	6014      	str	r4, [r2, #0]
   20dd0:	bdf0      	pop	{r4, r5, r6, r7, pc}

00020dd2 <strtok_r>:
strtok_r():
   20dd2:	2301      	movs	r3, #1
   20dd4:	f7ff bfd4 	b.w	20d80 <__strtok_r>

00020dd8 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   20dd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ddc:	4680      	mov	r8, r0
   20dde:	4689      	mov	r9, r1
   20de0:	4692      	mov	sl, r2
   20de2:	461f      	mov	r7, r3
   20de4:	468b      	mov	fp, r1
   20de6:	465d      	mov	r5, fp
   20de8:	980a      	ldr	r0, [sp, #40]	; 0x28
   20dea:	f815 4b01 	ldrb.w	r4, [r5], #1
   20dee:	f7fd fae3 	bl	1e3b8 <__locale_ctype_ptr_l>
   20df2:	4420      	add	r0, r4
   20df4:	7846      	ldrb	r6, [r0, #1]
   20df6:	f016 0608 	ands.w	r6, r6, #8
   20dfa:	d10b      	bne.n	20e14 <_strtol_l.isra.0+0x3c>
   20dfc:	2c2d      	cmp	r4, #45	; 0x2d
   20dfe:	d10b      	bne.n	20e18 <_strtol_l.isra.0+0x40>
   20e00:	2601      	movs	r6, #1
   20e02:	782c      	ldrb	r4, [r5, #0]
   20e04:	f10b 0502 	add.w	r5, fp, #2
   20e08:	b167      	cbz	r7, 20e24 <_strtol_l.isra.0+0x4c>
   20e0a:	2f10      	cmp	r7, #16
   20e0c:	d114      	bne.n	20e38 <_strtol_l.isra.0+0x60>
   20e0e:	2c30      	cmp	r4, #48	; 0x30
   20e10:	d00a      	beq.n	20e28 <_strtol_l.isra.0+0x50>
   20e12:	e011      	b.n	20e38 <_strtol_l.isra.0+0x60>
   20e14:	46ab      	mov	fp, r5
   20e16:	e7e6      	b.n	20de6 <_strtol_l.isra.0+0xe>
   20e18:	2c2b      	cmp	r4, #43	; 0x2b
   20e1a:	bf04      	itt	eq
   20e1c:	782c      	ldrbeq	r4, [r5, #0]
   20e1e:	f10b 0502 	addeq.w	r5, fp, #2
   20e22:	e7f1      	b.n	20e08 <_strtol_l.isra.0+0x30>
   20e24:	2c30      	cmp	r4, #48	; 0x30
   20e26:	d127      	bne.n	20e78 <_strtol_l.isra.0+0xa0>
   20e28:	782b      	ldrb	r3, [r5, #0]
   20e2a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   20e2e:	2b58      	cmp	r3, #88	; 0x58
   20e30:	d14b      	bne.n	20eca <_strtol_l.isra.0+0xf2>
   20e32:	2710      	movs	r7, #16
   20e34:	786c      	ldrb	r4, [r5, #1]
   20e36:	3502      	adds	r5, #2
   20e38:	2e00      	cmp	r6, #0
   20e3a:	bf0c      	ite	eq
   20e3c:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   20e40:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   20e44:	2200      	movs	r2, #0
   20e46:	fbb1 fef7 	udiv	lr, r1, r7
   20e4a:	4610      	mov	r0, r2
   20e4c:	fb07 1c1e 	mls	ip, r7, lr, r1
   20e50:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   20e54:	2b09      	cmp	r3, #9
   20e56:	d811      	bhi.n	20e7c <_strtol_l.isra.0+0xa4>
   20e58:	461c      	mov	r4, r3
   20e5a:	42a7      	cmp	r7, r4
   20e5c:	dd1d      	ble.n	20e9a <_strtol_l.isra.0+0xc2>
   20e5e:	1c53      	adds	r3, r2, #1
   20e60:	d007      	beq.n	20e72 <_strtol_l.isra.0+0x9a>
   20e62:	4586      	cmp	lr, r0
   20e64:	d316      	bcc.n	20e94 <_strtol_l.isra.0+0xbc>
   20e66:	d101      	bne.n	20e6c <_strtol_l.isra.0+0x94>
   20e68:	45a4      	cmp	ip, r4
   20e6a:	db13      	blt.n	20e94 <_strtol_l.isra.0+0xbc>
   20e6c:	2201      	movs	r2, #1
   20e6e:	fb00 4007 	mla	r0, r0, r7, r4
   20e72:	f815 4b01 	ldrb.w	r4, [r5], #1
   20e76:	e7eb      	b.n	20e50 <_strtol_l.isra.0+0x78>
   20e78:	270a      	movs	r7, #10
   20e7a:	e7dd      	b.n	20e38 <_strtol_l.isra.0+0x60>
   20e7c:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   20e80:	2b19      	cmp	r3, #25
   20e82:	d801      	bhi.n	20e88 <_strtol_l.isra.0+0xb0>
   20e84:	3c37      	subs	r4, #55	; 0x37
   20e86:	e7e8      	b.n	20e5a <_strtol_l.isra.0+0x82>
   20e88:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   20e8c:	2b19      	cmp	r3, #25
   20e8e:	d804      	bhi.n	20e9a <_strtol_l.isra.0+0xc2>
   20e90:	3c57      	subs	r4, #87	; 0x57
   20e92:	e7e2      	b.n	20e5a <_strtol_l.isra.0+0x82>
   20e94:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   20e98:	e7eb      	b.n	20e72 <_strtol_l.isra.0+0x9a>
   20e9a:	1c53      	adds	r3, r2, #1
   20e9c:	d108      	bne.n	20eb0 <_strtol_l.isra.0+0xd8>
   20e9e:	2322      	movs	r3, #34	; 0x22
   20ea0:	4608      	mov	r0, r1
   20ea2:	f8c8 3000 	str.w	r3, [r8]
   20ea6:	f1ba 0f00 	cmp.w	sl, #0
   20eaa:	d107      	bne.n	20ebc <_strtol_l.isra.0+0xe4>
   20eac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20eb0:	b106      	cbz	r6, 20eb4 <_strtol_l.isra.0+0xdc>
   20eb2:	4240      	negs	r0, r0
   20eb4:	f1ba 0f00 	cmp.w	sl, #0
   20eb8:	d00c      	beq.n	20ed4 <_strtol_l.isra.0+0xfc>
   20eba:	b122      	cbz	r2, 20ec6 <_strtol_l.isra.0+0xee>
   20ebc:	3d01      	subs	r5, #1
   20ebe:	f8ca 5000 	str.w	r5, [sl]
   20ec2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ec6:	464d      	mov	r5, r9
   20ec8:	e7f9      	b.n	20ebe <_strtol_l.isra.0+0xe6>
   20eca:	2430      	movs	r4, #48	; 0x30
   20ecc:	2f00      	cmp	r7, #0
   20ece:	d1b3      	bne.n	20e38 <_strtol_l.isra.0+0x60>
   20ed0:	2708      	movs	r7, #8
   20ed2:	e7b1      	b.n	20e38 <_strtol_l.isra.0+0x60>
   20ed4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020ed8 <_strtol_r>:
_strtol_r():
   20ed8:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20eda:	4c06      	ldr	r4, [pc, #24]	; (20ef4 <_strtol_r+0x1c>)
   20edc:	4d06      	ldr	r5, [pc, #24]	; (20ef8 <_strtol_r+0x20>)
   20ede:	6824      	ldr	r4, [r4, #0]
   20ee0:	6a24      	ldr	r4, [r4, #32]
   20ee2:	2c00      	cmp	r4, #0
   20ee4:	bf08      	it	eq
   20ee6:	462c      	moveq	r4, r5
   20ee8:	9400      	str	r4, [sp, #0]
   20eea:	f7ff ff75 	bl	20dd8 <_strtol_l.isra.0>
   20eee:	b003      	add	sp, #12
   20ef0:	bd30      	pop	{r4, r5, pc}
   20ef2:	bf00      	nop
   20ef4:	2007c0e4 	.word	0x2007c0e4
   20ef8:	2007c148 	.word	0x2007c148

00020efc <strtol>:
strtol():
   20efc:	4b08      	ldr	r3, [pc, #32]	; (20f20 <strtol+0x24>)
   20efe:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20f00:	681c      	ldr	r4, [r3, #0]
   20f02:	4d08      	ldr	r5, [pc, #32]	; (20f24 <strtol+0x28>)
   20f04:	6a23      	ldr	r3, [r4, #32]
   20f06:	2b00      	cmp	r3, #0
   20f08:	bf08      	it	eq
   20f0a:	462b      	moveq	r3, r5
   20f0c:	9300      	str	r3, [sp, #0]
   20f0e:	4613      	mov	r3, r2
   20f10:	460a      	mov	r2, r1
   20f12:	4601      	mov	r1, r0
   20f14:	4620      	mov	r0, r4
   20f16:	f7ff ff5f 	bl	20dd8 <_strtol_l.isra.0>
   20f1a:	b003      	add	sp, #12
   20f1c:	bd30      	pop	{r4, r5, pc}
   20f1e:	bf00      	nop
   20f20:	2007c0e4 	.word	0x2007c0e4
   20f24:	2007c148 	.word	0x2007c148

00020f28 <time>:
time():
   20f28:	b513      	push	{r0, r1, r4, lr}
   20f2a:	4b08      	ldr	r3, [pc, #32]	; (20f4c <time+0x24>)
   20f2c:	4604      	mov	r4, r0
   20f2e:	2200      	movs	r2, #0
   20f30:	6818      	ldr	r0, [r3, #0]
   20f32:	4669      	mov	r1, sp
   20f34:	f001 fe0e 	bl	22b54 <_gettimeofday_r>
   20f38:	2800      	cmp	r0, #0
   20f3a:	bfbc      	itt	lt
   20f3c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   20f40:	9300      	strlt	r3, [sp, #0]
   20f42:	9800      	ldr	r0, [sp, #0]
   20f44:	b104      	cbz	r4, 20f48 <time+0x20>
   20f46:	6020      	str	r0, [r4, #0]
   20f48:	b002      	add	sp, #8
   20f4a:	bd10      	pop	{r4, pc}
   20f4c:	2007c0e4 	.word	0x2007c0e4

00020f50 <tolower>:
tolower():
   20f50:	b510      	push	{r4, lr}
   20f52:	4604      	mov	r4, r0
   20f54:	f7fd fa34 	bl	1e3c0 <__locale_ctype_ptr>
   20f58:	4420      	add	r0, r4
   20f5a:	7843      	ldrb	r3, [r0, #1]
   20f5c:	f003 0303 	and.w	r3, r3, #3
   20f60:	2b01      	cmp	r3, #1
   20f62:	bf08      	it	eq
   20f64:	3420      	addeq	r4, #32
   20f66:	4620      	mov	r0, r4
   20f68:	bd10      	pop	{r4, pc}

00020f6a <toupper>:
toupper():
   20f6a:	b510      	push	{r4, lr}
   20f6c:	4604      	mov	r4, r0
   20f6e:	f7fd fa27 	bl	1e3c0 <__locale_ctype_ptr>
   20f72:	4420      	add	r0, r4
   20f74:	7843      	ldrb	r3, [r0, #1]
   20f76:	f003 0303 	and.w	r3, r3, #3
   20f7a:	2b02      	cmp	r3, #2
   20f7c:	bf08      	it	eq
   20f7e:	3c20      	subeq	r4, #32
   20f80:	4620      	mov	r0, r4
   20f82:	bd10      	pop	{r4, pc}

00020f84 <__tzcalc_limits>:
__tzcalc_limits():
   20f84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f88:	4604      	mov	r4, r0
   20f8a:	f001 fdf5 	bl	22b78 <__gettzinfo>
   20f8e:	f240 73b1 	movw	r3, #1969	; 0x7b1
   20f92:	429c      	cmp	r4, r3
   20f94:	f340 8098 	ble.w	210c8 <__tzcalc_limits+0x144>
   20f98:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   20f9c:	f240 126d 	movw	r2, #365	; 0x16d
   20fa0:	18e3      	adds	r3, r4, r3
   20fa2:	109b      	asrs	r3, r3, #2
   20fa4:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   20fa8:	fb02 3505 	mla	r5, r2, r5, r3
   20fac:	f06f 0263 	mvn.w	r2, #99	; 0x63
   20fb0:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   20fb4:	fb93 f3f2 	sdiv	r3, r3, r2
   20fb8:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   20fbc:	441d      	add	r5, r3
   20fbe:	f44f 73c8 	mov.w	r3, #400	; 0x190
   20fc2:	18a2      	adds	r2, r4, r2
   20fc4:	fb92 f2f3 	sdiv	r2, r2, r3
   20fc8:	fb94 f7f3 	sdiv	r7, r4, r3
   20fcc:	4415      	add	r5, r2
   20fce:	2264      	movs	r2, #100	; 0x64
   20fd0:	fb03 4717 	mls	r7, r3, r7, r4
   20fd4:	fb94 f6f2 	sdiv	r6, r4, r2
   20fd8:	fab7 fe87 	clz	lr, r7
   20fdc:	4601      	mov	r1, r0
   20fde:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   20fe2:	fb02 4616 	mls	r6, r2, r6, r4
   20fe6:	f100 0338 	add.w	r3, r0, #56	; 0x38
   20fea:	9301      	str	r3, [sp, #4]
   20fec:	f004 0303 	and.w	r3, r4, #3
   20ff0:	6044      	str	r4, [r0, #4]
   20ff2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   20ff6:	9300      	str	r3, [sp, #0]
   20ff8:	7a0b      	ldrb	r3, [r1, #8]
   20ffa:	2b4a      	cmp	r3, #74	; 0x4a
   20ffc:	d123      	bne.n	21046 <__tzcalc_limits+0xc2>
   20ffe:	694c      	ldr	r4, [r1, #20]
   21000:	9a00      	ldr	r2, [sp, #0]
   21002:	192b      	adds	r3, r5, r4
   21004:	b902      	cbnz	r2, 21008 <__tzcalc_limits+0x84>
   21006:	b906      	cbnz	r6, 2100a <__tzcalc_limits+0x86>
   21008:	b9df      	cbnz	r7, 21042 <__tzcalc_limits+0xbe>
   2100a:	2c3b      	cmp	r4, #59	; 0x3b
   2100c:	bfd4      	ite	le
   2100e:	2400      	movle	r4, #0
   21010:	2401      	movgt	r4, #1
   21012:	441c      	add	r4, r3
   21014:	3c01      	subs	r4, #1
   21016:	4b2d      	ldr	r3, [pc, #180]	; (210cc <__tzcalc_limits+0x148>)
   21018:	698a      	ldr	r2, [r1, #24]
   2101a:	fb03 2404 	mla	r4, r3, r4, r2
   2101e:	6a0b      	ldr	r3, [r1, #32]
   21020:	441c      	add	r4, r3
   21022:	9b01      	ldr	r3, [sp, #4]
   21024:	f841 4f1c 	str.w	r4, [r1, #28]!
   21028:	428b      	cmp	r3, r1
   2102a:	d1e5      	bne.n	20ff8 <__tzcalc_limits+0x74>
   2102c:	69c3      	ldr	r3, [r0, #28]
   2102e:	6b82      	ldr	r2, [r0, #56]	; 0x38
   21030:	4293      	cmp	r3, r2
   21032:	bfac      	ite	ge
   21034:	2300      	movge	r3, #0
   21036:	2301      	movlt	r3, #1
   21038:	6003      	str	r3, [r0, #0]
   2103a:	2001      	movs	r0, #1
   2103c:	b003      	add	sp, #12
   2103e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21042:	2400      	movs	r4, #0
   21044:	e7e5      	b.n	21012 <__tzcalc_limits+0x8e>
   21046:	2b44      	cmp	r3, #68	; 0x44
   21048:	d102      	bne.n	21050 <__tzcalc_limits+0xcc>
   2104a:	694b      	ldr	r3, [r1, #20]
   2104c:	18ec      	adds	r4, r5, r3
   2104e:	e7e2      	b.n	21016 <__tzcalc_limits+0x92>
   21050:	9b00      	ldr	r3, [sp, #0]
   21052:	bb7b      	cbnz	r3, 210b4 <__tzcalc_limits+0x130>
   21054:	2e00      	cmp	r6, #0
   21056:	bf0c      	ite	eq
   21058:	46f0      	moveq	r8, lr
   2105a:	f04f 0801 	movne.w	r8, #1
   2105e:	2230      	movs	r2, #48	; 0x30
   21060:	4b1b      	ldr	r3, [pc, #108]	; (210d0 <__tzcalc_limits+0x14c>)
   21062:	f04f 0901 	mov.w	r9, #1
   21066:	fb02 3808 	mla	r8, r2, r8, r3
   2106a:	462b      	mov	r3, r5
   2106c:	68cc      	ldr	r4, [r1, #12]
   2106e:	f1a8 0a04 	sub.w	sl, r8, #4
   21072:	45a1      	cmp	r9, r4
   21074:	db20      	blt.n	210b8 <__tzcalc_limits+0x134>
   21076:	2207      	movs	r2, #7
   21078:	2c01      	cmp	r4, #1
   2107a:	bfb8      	it	lt
   2107c:	2401      	movlt	r4, #1
   2107e:	f103 0b04 	add.w	fp, r3, #4
   21082:	fb9b faf2 	sdiv	sl, fp, r2
   21086:	46a1      	mov	r9, r4
   21088:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   2108c:	694c      	ldr	r4, [r1, #20]
   2108e:	ebab 0a0a 	sub.w	sl, fp, sl
   21092:	ebb4 0a0a 	subs.w	sl, r4, sl
   21096:	690c      	ldr	r4, [r1, #16]
   21098:	44e1      	add	r9, ip
   2109a:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   2109e:	bf48      	it	mi
   210a0:	4492      	addmi	sl, r2
   210a2:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   210a6:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   210aa:	4454      	add	r4, sl
   210ac:	4544      	cmp	r4, r8
   210ae:	da09      	bge.n	210c4 <__tzcalc_limits+0x140>
   210b0:	441c      	add	r4, r3
   210b2:	e7b0      	b.n	21016 <__tzcalc_limits+0x92>
   210b4:	46f0      	mov	r8, lr
   210b6:	e7d2      	b.n	2105e <__tzcalc_limits+0xda>
   210b8:	f85a bf04 	ldr.w	fp, [sl, #4]!
   210bc:	f109 0901 	add.w	r9, r9, #1
   210c0:	445b      	add	r3, fp
   210c2:	e7d6      	b.n	21072 <__tzcalc_limits+0xee>
   210c4:	3c07      	subs	r4, #7
   210c6:	e7f1      	b.n	210ac <__tzcalc_limits+0x128>
   210c8:	2000      	movs	r0, #0
   210ca:	e7b7      	b.n	2103c <__tzcalc_limits+0xb8>
   210cc:	00015180 	.word	0x00015180
   210d0:	00027410 	.word	0x00027410

000210d4 <__tz_lock>:
__tz_lock():
   210d4:	4770      	bx	lr

000210d6 <__tz_unlock>:
__tz_unlock():
   210d6:	4770      	bx	lr

000210d8 <_tzset_unlocked>:
_tzset_unlocked():
   210d8:	4b01      	ldr	r3, [pc, #4]	; (210e0 <_tzset_unlocked+0x8>)
   210da:	6818      	ldr	r0, [r3, #0]
   210dc:	f000 b802 	b.w	210e4 <_tzset_unlocked_r>
   210e0:	2007c0e4 	.word	0x2007c0e4

000210e4 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   210e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210e8:	b08d      	sub	sp, #52	; 0x34
   210ea:	4607      	mov	r7, r0
   210ec:	f001 fd44 	bl	22b78 <__gettzinfo>
   210f0:	49b1      	ldr	r1, [pc, #708]	; (213b8 <_tzset_unlocked_r+0x2d4>)
   210f2:	4605      	mov	r5, r0
   210f4:	4638      	mov	r0, r7
   210f6:	f001 fd25 	bl	22b44 <_getenv_r>
   210fa:	4eb0      	ldr	r6, [pc, #704]	; (213bc <_tzset_unlocked_r+0x2d8>)
   210fc:	4604      	mov	r4, r0
   210fe:	b970      	cbnz	r0, 2111e <_tzset_unlocked_r+0x3a>
   21100:	4baf      	ldr	r3, [pc, #700]	; (213c0 <_tzset_unlocked_r+0x2dc>)
   21102:	4ab0      	ldr	r2, [pc, #704]	; (213c4 <_tzset_unlocked_r+0x2e0>)
   21104:	6018      	str	r0, [r3, #0]
   21106:	4bb0      	ldr	r3, [pc, #704]	; (213c8 <_tzset_unlocked_r+0x2e4>)
   21108:	6018      	str	r0, [r3, #0]
   2110a:	4bb0      	ldr	r3, [pc, #704]	; (213cc <_tzset_unlocked_r+0x2e8>)
   2110c:	6830      	ldr	r0, [r6, #0]
   2110e:	601a      	str	r2, [r3, #0]
   21110:	605a      	str	r2, [r3, #4]
   21112:	f7fd f9cf 	bl	1e4b4 <free>
   21116:	6034      	str	r4, [r6, #0]
   21118:	b00d      	add	sp, #52	; 0x34
   2111a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2111e:	6831      	ldr	r1, [r6, #0]
   21120:	2900      	cmp	r1, #0
   21122:	d160      	bne.n	211e6 <_tzset_unlocked_r+0x102>
   21124:	6830      	ldr	r0, [r6, #0]
   21126:	f7fd f9c5 	bl	1e4b4 <free>
   2112a:	4620      	mov	r0, r4
   2112c:	f7fe ff78 	bl	20020 <strlen>
   21130:	1c41      	adds	r1, r0, #1
   21132:	4638      	mov	r0, r7
   21134:	f7fd fd14 	bl	1eb60 <_malloc_r>
   21138:	6030      	str	r0, [r6, #0]
   2113a:	2800      	cmp	r0, #0
   2113c:	d158      	bne.n	211f0 <_tzset_unlocked_r+0x10c>
   2113e:	7823      	ldrb	r3, [r4, #0]
   21140:	ae0a      	add	r6, sp, #40	; 0x28
   21142:	2b3a      	cmp	r3, #58	; 0x3a
   21144:	bf08      	it	eq
   21146:	3401      	addeq	r4, #1
   21148:	4633      	mov	r3, r6
   2114a:	4aa1      	ldr	r2, [pc, #644]	; (213d0 <_tzset_unlocked_r+0x2ec>)
   2114c:	49a1      	ldr	r1, [pc, #644]	; (213d4 <_tzset_unlocked_r+0x2f0>)
   2114e:	4620      	mov	r0, r4
   21150:	f7fe feaa 	bl	1fea8 <siscanf>
   21154:	2800      	cmp	r0, #0
   21156:	dddf      	ble.n	21118 <_tzset_unlocked_r+0x34>
   21158:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2115a:	18e7      	adds	r7, r4, r3
   2115c:	5ce3      	ldrb	r3, [r4, r3]
   2115e:	2b2d      	cmp	r3, #45	; 0x2d
   21160:	d14a      	bne.n	211f8 <_tzset_unlocked_r+0x114>
   21162:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   21166:	3701      	adds	r7, #1
   21168:	f04f 0800 	mov.w	r8, #0
   2116c:	f10d 0a20 	add.w	sl, sp, #32
   21170:	f10d 0b1e 	add.w	fp, sp, #30
   21174:	9603      	str	r6, [sp, #12]
   21176:	f8cd a008 	str.w	sl, [sp, #8]
   2117a:	9601      	str	r6, [sp, #4]
   2117c:	f8cd b000 	str.w	fp, [sp]
   21180:	4633      	mov	r3, r6
   21182:	aa07      	add	r2, sp, #28
   21184:	4994      	ldr	r1, [pc, #592]	; (213d8 <_tzset_unlocked_r+0x2f4>)
   21186:	4638      	mov	r0, r7
   21188:	f8ad 801e 	strh.w	r8, [sp, #30]
   2118c:	f8ad 8020 	strh.w	r8, [sp, #32]
   21190:	f7fe fe8a 	bl	1fea8 <siscanf>
   21194:	4540      	cmp	r0, r8
   21196:	ddbf      	ble.n	21118 <_tzset_unlocked_r+0x34>
   21198:	213c      	movs	r1, #60	; 0x3c
   2119a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   2119e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   211a2:	f8df 9240 	ldr.w	r9, [pc, #576]	; 213e4 <_tzset_unlocked_r+0x300>
   211a6:	fb01 2203 	mla	r2, r1, r3, r2
   211aa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   211ae:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   211b2:	fb01 2303 	mla	r3, r1, r3, r2
   211b6:	435c      	muls	r4, r3
   211b8:	4b85      	ldr	r3, [pc, #532]	; (213d0 <_tzset_unlocked_r+0x2ec>)
   211ba:	622c      	str	r4, [r5, #32]
   211bc:	4c83      	ldr	r4, [pc, #524]	; (213cc <_tzset_unlocked_r+0x2e8>)
   211be:	464a      	mov	r2, r9
   211c0:	6023      	str	r3, [r4, #0]
   211c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   211c4:	4983      	ldr	r1, [pc, #524]	; (213d4 <_tzset_unlocked_r+0x2f0>)
   211c6:	441f      	add	r7, r3
   211c8:	4638      	mov	r0, r7
   211ca:	4633      	mov	r3, r6
   211cc:	f7fe fe6c 	bl	1fea8 <siscanf>
   211d0:	4540      	cmp	r0, r8
   211d2:	dc16      	bgt.n	21202 <_tzset_unlocked_r+0x11e>
   211d4:	6823      	ldr	r3, [r4, #0]
   211d6:	6a2a      	ldr	r2, [r5, #32]
   211d8:	6063      	str	r3, [r4, #4]
   211da:	4b79      	ldr	r3, [pc, #484]	; (213c0 <_tzset_unlocked_r+0x2dc>)
   211dc:	601a      	str	r2, [r3, #0]
   211de:	4b7a      	ldr	r3, [pc, #488]	; (213c8 <_tzset_unlocked_r+0x2e4>)
   211e0:	f8c3 8000 	str.w	r8, [r3]
   211e4:	e798      	b.n	21118 <_tzset_unlocked_r+0x34>
   211e6:	f7fe ff09 	bl	1fffc <strcmp>
   211ea:	2800      	cmp	r0, #0
   211ec:	d094      	beq.n	21118 <_tzset_unlocked_r+0x34>
   211ee:	e799      	b.n	21124 <_tzset_unlocked_r+0x40>
   211f0:	4621      	mov	r1, r4
   211f2:	f7fe ff0d 	bl	20010 <strcpy>
   211f6:	e7a2      	b.n	2113e <_tzset_unlocked_r+0x5a>
   211f8:	2b2b      	cmp	r3, #43	; 0x2b
   211fa:	bf08      	it	eq
   211fc:	3701      	addeq	r7, #1
   211fe:	2401      	movs	r4, #1
   21200:	e7b2      	b.n	21168 <_tzset_unlocked_r+0x84>
   21202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   21204:	f8c4 9004 	str.w	r9, [r4, #4]
   21208:	18fc      	adds	r4, r7, r3
   2120a:	5cfb      	ldrb	r3, [r7, r3]
   2120c:	2b2d      	cmp	r3, #45	; 0x2d
   2120e:	f040 8092 	bne.w	21336 <_tzset_unlocked_r+0x252>
   21212:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   21216:	3401      	adds	r4, #1
   21218:	2300      	movs	r3, #0
   2121a:	9603      	str	r6, [sp, #12]
   2121c:	f8ad 301c 	strh.w	r3, [sp, #28]
   21220:	f8ad 301e 	strh.w	r3, [sp, #30]
   21224:	f8ad 3020 	strh.w	r3, [sp, #32]
   21228:	930a      	str	r3, [sp, #40]	; 0x28
   2122a:	f8cd a008 	str.w	sl, [sp, #8]
   2122e:	9601      	str	r6, [sp, #4]
   21230:	f8cd b000 	str.w	fp, [sp]
   21234:	4633      	mov	r3, r6
   21236:	aa07      	add	r2, sp, #28
   21238:	4967      	ldr	r1, [pc, #412]	; (213d8 <_tzset_unlocked_r+0x2f4>)
   2123a:	4620      	mov	r0, r4
   2123c:	f7fe fe34 	bl	1fea8 <siscanf>
   21240:	2800      	cmp	r0, #0
   21242:	dc7d      	bgt.n	21340 <_tzset_unlocked_r+0x25c>
   21244:	6a2b      	ldr	r3, [r5, #32]
   21246:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   2124a:	63eb      	str	r3, [r5, #60]	; 0x3c
   2124c:	462f      	mov	r7, r5
   2124e:	f04f 0900 	mov.w	r9, #0
   21252:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   21254:	441c      	add	r4, r3
   21256:	7823      	ldrb	r3, [r4, #0]
   21258:	2b2c      	cmp	r3, #44	; 0x2c
   2125a:	bf08      	it	eq
   2125c:	3401      	addeq	r4, #1
   2125e:	f894 8000 	ldrb.w	r8, [r4]
   21262:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   21266:	d17b      	bne.n	21360 <_tzset_unlocked_r+0x27c>
   21268:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   2126c:	9302      	str	r3, [sp, #8]
   2126e:	ab09      	add	r3, sp, #36	; 0x24
   21270:	9300      	str	r3, [sp, #0]
   21272:	9603      	str	r6, [sp, #12]
   21274:	9601      	str	r6, [sp, #4]
   21276:	4633      	mov	r3, r6
   21278:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   2127c:	4957      	ldr	r1, [pc, #348]	; (213dc <_tzset_unlocked_r+0x2f8>)
   2127e:	4620      	mov	r0, r4
   21280:	f7fe fe12 	bl	1fea8 <siscanf>
   21284:	2803      	cmp	r0, #3
   21286:	f47f af47 	bne.w	21118 <_tzset_unlocked_r+0x34>
   2128a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   2128e:	1e4b      	subs	r3, r1, #1
   21290:	2b0b      	cmp	r3, #11
   21292:	f63f af41 	bhi.w	21118 <_tzset_unlocked_r+0x34>
   21296:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   2129a:	1e53      	subs	r3, r2, #1
   2129c:	2b04      	cmp	r3, #4
   2129e:	f63f af3b 	bhi.w	21118 <_tzset_unlocked_r+0x34>
   212a2:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   212a6:	2b06      	cmp	r3, #6
   212a8:	f63f af36 	bhi.w	21118 <_tzset_unlocked_r+0x34>
   212ac:	f887 8008 	strb.w	r8, [r7, #8]
   212b0:	60f9      	str	r1, [r7, #12]
   212b2:	613a      	str	r2, [r7, #16]
   212b4:	617b      	str	r3, [r7, #20]
   212b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   212b8:	eb04 0803 	add.w	r8, r4, r3
   212bc:	2302      	movs	r3, #2
   212be:	f8ad 301c 	strh.w	r3, [sp, #28]
   212c2:	2300      	movs	r3, #0
   212c4:	f8ad 301e 	strh.w	r3, [sp, #30]
   212c8:	f8ad 3020 	strh.w	r3, [sp, #32]
   212cc:	930a      	str	r3, [sp, #40]	; 0x28
   212ce:	f898 3000 	ldrb.w	r3, [r8]
   212d2:	2b2f      	cmp	r3, #47	; 0x2f
   212d4:	d10b      	bne.n	212ee <_tzset_unlocked_r+0x20a>
   212d6:	9603      	str	r6, [sp, #12]
   212d8:	f8cd a008 	str.w	sl, [sp, #8]
   212dc:	9601      	str	r6, [sp, #4]
   212de:	f8cd b000 	str.w	fp, [sp]
   212e2:	4633      	mov	r3, r6
   212e4:	aa07      	add	r2, sp, #28
   212e6:	493e      	ldr	r1, [pc, #248]	; (213e0 <_tzset_unlocked_r+0x2fc>)
   212e8:	4640      	mov	r0, r8
   212ea:	f7fe fddd 	bl	1fea8 <siscanf>
   212ee:	213c      	movs	r1, #60	; 0x3c
   212f0:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   212f4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   212f8:	f109 0901 	add.w	r9, r9, #1
   212fc:	fb01 2203 	mla	r2, r1, r3, r2
   21300:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   21304:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   21308:	f1b9 0f02 	cmp.w	r9, #2
   2130c:	fb01 2303 	mla	r3, r1, r3, r2
   21310:	61bb      	str	r3, [r7, #24]
   21312:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   21314:	f107 071c 	add.w	r7, r7, #28
   21318:	4444      	add	r4, r8
   2131a:	d19c      	bne.n	21256 <_tzset_unlocked_r+0x172>
   2131c:	6868      	ldr	r0, [r5, #4]
   2131e:	f7ff fe31 	bl	20f84 <__tzcalc_limits>
   21322:	6a2a      	ldr	r2, [r5, #32]
   21324:	4b26      	ldr	r3, [pc, #152]	; (213c0 <_tzset_unlocked_r+0x2dc>)
   21326:	601a      	str	r2, [r3, #0]
   21328:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   2132a:	1a9b      	subs	r3, r3, r2
   2132c:	bf18      	it	ne
   2132e:	2301      	movne	r3, #1
   21330:	4a25      	ldr	r2, [pc, #148]	; (213c8 <_tzset_unlocked_r+0x2e4>)
   21332:	6013      	str	r3, [r2, #0]
   21334:	e6f0      	b.n	21118 <_tzset_unlocked_r+0x34>
   21336:	2b2b      	cmp	r3, #43	; 0x2b
   21338:	bf08      	it	eq
   2133a:	3401      	addeq	r4, #1
   2133c:	2701      	movs	r7, #1
   2133e:	e76b      	b.n	21218 <_tzset_unlocked_r+0x134>
   21340:	213c      	movs	r1, #60	; 0x3c
   21342:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   21346:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   2134a:	fb01 2203 	mla	r2, r1, r3, r2
   2134e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   21352:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   21356:	fb01 2303 	mla	r3, r1, r3, r2
   2135a:	435f      	muls	r7, r3
   2135c:	63ef      	str	r7, [r5, #60]	; 0x3c
   2135e:	e775      	b.n	2124c <_tzset_unlocked_r+0x168>
   21360:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   21364:	bf0a      	itet	eq
   21366:	4643      	moveq	r3, r8
   21368:	2344      	movne	r3, #68	; 0x44
   2136a:	3401      	addeq	r4, #1
   2136c:	220a      	movs	r2, #10
   2136e:	a90b      	add	r1, sp, #44	; 0x2c
   21370:	4620      	mov	r0, r4
   21372:	9305      	str	r3, [sp, #20]
   21374:	f003 f8be 	bl	244f4 <strtoul>
   21378:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   2137c:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   21380:	4544      	cmp	r4, r8
   21382:	9b05      	ldr	r3, [sp, #20]
   21384:	d114      	bne.n	213b0 <_tzset_unlocked_r+0x2cc>
   21386:	234d      	movs	r3, #77	; 0x4d
   21388:	f1b9 0f00 	cmp.w	r9, #0
   2138c:	d107      	bne.n	2139e <_tzset_unlocked_r+0x2ba>
   2138e:	722b      	strb	r3, [r5, #8]
   21390:	2303      	movs	r3, #3
   21392:	60eb      	str	r3, [r5, #12]
   21394:	2302      	movs	r3, #2
   21396:	f8c5 9014 	str.w	r9, [r5, #20]
   2139a:	612b      	str	r3, [r5, #16]
   2139c:	e78e      	b.n	212bc <_tzset_unlocked_r+0x1d8>
   2139e:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   213a2:	230b      	movs	r3, #11
   213a4:	62ab      	str	r3, [r5, #40]	; 0x28
   213a6:	2301      	movs	r3, #1
   213a8:	62eb      	str	r3, [r5, #44]	; 0x2c
   213aa:	2300      	movs	r3, #0
   213ac:	632b      	str	r3, [r5, #48]	; 0x30
   213ae:	e785      	b.n	212bc <_tzset_unlocked_r+0x1d8>
   213b0:	b280      	uxth	r0, r0
   213b2:	723b      	strb	r3, [r7, #8]
   213b4:	6178      	str	r0, [r7, #20]
   213b6:	e781      	b.n	212bc <_tzset_unlocked_r+0x1d8>
   213b8:	000274f8 	.word	0x000274f8
   213bc:	2007c8ec 	.word	0x2007c8ec
   213c0:	2007c8f4 	.word	0x2007c8f4
   213c4:	000274fb 	.word	0x000274fb
   213c8:	2007c8f0 	.word	0x2007c8f0
   213cc:	2007c2b4 	.word	0x2007c2b4
   213d0:	2007c8df 	.word	0x2007c8df
   213d4:	000274ff 	.word	0x000274ff
   213d8:	00027522 	.word	0x00027522
   213dc:	0002750e 	.word	0x0002750e
   213e0:	00027521 	.word	0x00027521
   213e4:	2007c8d4 	.word	0x2007c8d4

000213e8 <_vsniprintf_r>:
_vsniprintf_r():
   213e8:	b530      	push	{r4, r5, lr}
   213ea:	1e14      	subs	r4, r2, #0
   213ec:	4605      	mov	r5, r0
   213ee:	b09b      	sub	sp, #108	; 0x6c
   213f0:	4618      	mov	r0, r3
   213f2:	da05      	bge.n	21400 <_vsniprintf_r+0x18>
   213f4:	238b      	movs	r3, #139	; 0x8b
   213f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   213fa:	602b      	str	r3, [r5, #0]
   213fc:	b01b      	add	sp, #108	; 0x6c
   213fe:	bd30      	pop	{r4, r5, pc}
   21400:	f44f 7302 	mov.w	r3, #520	; 0x208
   21404:	f8ad 300c 	strh.w	r3, [sp, #12]
   21408:	bf0c      	ite	eq
   2140a:	4623      	moveq	r3, r4
   2140c:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   21410:	9302      	str	r3, [sp, #8]
   21412:	9305      	str	r3, [sp, #20]
   21414:	f64f 73ff 	movw	r3, #65535	; 0xffff
   21418:	9100      	str	r1, [sp, #0]
   2141a:	9104      	str	r1, [sp, #16]
   2141c:	f8ad 300e 	strh.w	r3, [sp, #14]
   21420:	4602      	mov	r2, r0
   21422:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21424:	4669      	mov	r1, sp
   21426:	4628      	mov	r0, r5
   21428:	f002 f8de 	bl	235e8 <_svfiprintf_r>
   2142c:	1c43      	adds	r3, r0, #1
   2142e:	bfbc      	itt	lt
   21430:	238b      	movlt	r3, #139	; 0x8b
   21432:	602b      	strlt	r3, [r5, #0]
   21434:	2c00      	cmp	r4, #0
   21436:	d0e1      	beq.n	213fc <_vsniprintf_r+0x14>
   21438:	2200      	movs	r2, #0
   2143a:	9b00      	ldr	r3, [sp, #0]
   2143c:	701a      	strb	r2, [r3, #0]
   2143e:	e7dd      	b.n	213fc <_vsniprintf_r+0x14>

00021440 <vsniprintf>:
vsniprintf():
   21440:	b507      	push	{r0, r1, r2, lr}
   21442:	9300      	str	r3, [sp, #0]
   21444:	4613      	mov	r3, r2
   21446:	460a      	mov	r2, r1
   21448:	4601      	mov	r1, r0
   2144a:	4803      	ldr	r0, [pc, #12]	; (21458 <vsniprintf+0x18>)
   2144c:	6800      	ldr	r0, [r0, #0]
   2144e:	f7ff ffcb 	bl	213e8 <_vsniprintf_r>
   21452:	b003      	add	sp, #12
   21454:	f85d fb04 	ldr.w	pc, [sp], #4
   21458:	2007c0e4 	.word	0x2007c0e4

0002145c <_vsiscanf_r>:
_vsscanf_r():
   2145c:	b570      	push	{r4, r5, r6, lr}
   2145e:	461e      	mov	r6, r3
   21460:	f44f 7301 	mov.w	r3, #516	; 0x204
   21464:	b09a      	sub	sp, #104	; 0x68
   21466:	4604      	mov	r4, r0
   21468:	4608      	mov	r0, r1
   2146a:	4615      	mov	r5, r2
   2146c:	f8ad 300c 	strh.w	r3, [sp, #12]
   21470:	9100      	str	r1, [sp, #0]
   21472:	9104      	str	r1, [sp, #16]
   21474:	f7fe fdd4 	bl	20020 <strlen>
   21478:	4b09      	ldr	r3, [pc, #36]	; (214a0 <_vsiscanf_r+0x44>)
   2147a:	2100      	movs	r1, #0
   2147c:	9309      	str	r3, [sp, #36]	; 0x24
   2147e:	f64f 73ff 	movw	r3, #65535	; 0xffff
   21482:	9001      	str	r0, [sp, #4]
   21484:	9005      	str	r0, [sp, #20]
   21486:	910d      	str	r1, [sp, #52]	; 0x34
   21488:	9112      	str	r1, [sp, #72]	; 0x48
   2148a:	f8ad 300e 	strh.w	r3, [sp, #14]
   2148e:	462a      	mov	r2, r5
   21490:	4633      	mov	r3, r6
   21492:	4669      	mov	r1, sp
   21494:	4620      	mov	r0, r4
   21496:	f002 f9f5 	bl	23884 <__ssvfiscanf_r>
   2149a:	b01a      	add	sp, #104	; 0x68
   2149c:	bd70      	pop	{r4, r5, r6, pc}
   2149e:	bf00      	nop
   214a0:	0001ff1f 	.word	0x0001ff1f

000214a4 <vsiscanf>:
vsiscanf():
   214a4:	4613      	mov	r3, r2
   214a6:	460a      	mov	r2, r1
   214a8:	4601      	mov	r1, r0
   214aa:	4802      	ldr	r0, [pc, #8]	; (214b4 <vsiscanf+0x10>)
   214ac:	6800      	ldr	r0, [r0, #0]
   214ae:	f7ff bfd5 	b.w	2145c <_vsiscanf_r>
   214b2:	bf00      	nop
   214b4:	2007c0e4 	.word	0x2007c0e4

000214b8 <__swbuf_r>:
__swbuf_r():
   214b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   214ba:	460e      	mov	r6, r1
   214bc:	4614      	mov	r4, r2
   214be:	4605      	mov	r5, r0
   214c0:	b118      	cbz	r0, 214ca <__swbuf_r+0x12>
   214c2:	6983      	ldr	r3, [r0, #24]
   214c4:	b90b      	cbnz	r3, 214ca <__swbuf_r+0x12>
   214c6:	f7fc fc7f 	bl	1ddc8 <__sinit>
   214ca:	4b21      	ldr	r3, [pc, #132]	; (21550 <__swbuf_r+0x98>)
   214cc:	429c      	cmp	r4, r3
   214ce:	d12a      	bne.n	21526 <__swbuf_r+0x6e>
   214d0:	686c      	ldr	r4, [r5, #4]
   214d2:	69a3      	ldr	r3, [r4, #24]
   214d4:	60a3      	str	r3, [r4, #8]
   214d6:	89a3      	ldrh	r3, [r4, #12]
   214d8:	071a      	lsls	r2, r3, #28
   214da:	d52e      	bpl.n	2153a <__swbuf_r+0x82>
   214dc:	6923      	ldr	r3, [r4, #16]
   214de:	b363      	cbz	r3, 2153a <__swbuf_r+0x82>
   214e0:	6923      	ldr	r3, [r4, #16]
   214e2:	6820      	ldr	r0, [r4, #0]
   214e4:	b2f6      	uxtb	r6, r6
   214e6:	1ac0      	subs	r0, r0, r3
   214e8:	6963      	ldr	r3, [r4, #20]
   214ea:	4637      	mov	r7, r6
   214ec:	4298      	cmp	r0, r3
   214ee:	db04      	blt.n	214fa <__swbuf_r+0x42>
   214f0:	4621      	mov	r1, r4
   214f2:	4628      	mov	r0, r5
   214f4:	f7fc fbec 	bl	1dcd0 <_fflush_r>
   214f8:	bb28      	cbnz	r0, 21546 <__swbuf_r+0x8e>
   214fa:	68a3      	ldr	r3, [r4, #8]
   214fc:	3001      	adds	r0, #1
   214fe:	3b01      	subs	r3, #1
   21500:	60a3      	str	r3, [r4, #8]
   21502:	6823      	ldr	r3, [r4, #0]
   21504:	1c5a      	adds	r2, r3, #1
   21506:	6022      	str	r2, [r4, #0]
   21508:	701e      	strb	r6, [r3, #0]
   2150a:	6963      	ldr	r3, [r4, #20]
   2150c:	4298      	cmp	r0, r3
   2150e:	d004      	beq.n	2151a <__swbuf_r+0x62>
   21510:	89a3      	ldrh	r3, [r4, #12]
   21512:	07db      	lsls	r3, r3, #31
   21514:	d519      	bpl.n	2154a <__swbuf_r+0x92>
   21516:	2e0a      	cmp	r6, #10
   21518:	d117      	bne.n	2154a <__swbuf_r+0x92>
   2151a:	4621      	mov	r1, r4
   2151c:	4628      	mov	r0, r5
   2151e:	f7fc fbd7 	bl	1dcd0 <_fflush_r>
   21522:	b190      	cbz	r0, 2154a <__swbuf_r+0x92>
   21524:	e00f      	b.n	21546 <__swbuf_r+0x8e>
   21526:	4b0b      	ldr	r3, [pc, #44]	; (21554 <__swbuf_r+0x9c>)
   21528:	429c      	cmp	r4, r3
   2152a:	d101      	bne.n	21530 <__swbuf_r+0x78>
   2152c:	68ac      	ldr	r4, [r5, #8]
   2152e:	e7d0      	b.n	214d2 <__swbuf_r+0x1a>
   21530:	4b09      	ldr	r3, [pc, #36]	; (21558 <__swbuf_r+0xa0>)
   21532:	429c      	cmp	r4, r3
   21534:	bf08      	it	eq
   21536:	68ec      	ldreq	r4, [r5, #12]
   21538:	e7cb      	b.n	214d2 <__swbuf_r+0x1a>
   2153a:	4621      	mov	r1, r4
   2153c:	4628      	mov	r0, r5
   2153e:	f000 f82d 	bl	2159c <__swsetup_r>
   21542:	2800      	cmp	r0, #0
   21544:	d0cc      	beq.n	214e0 <__swbuf_r+0x28>
   21546:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   2154a:	4638      	mov	r0, r7
   2154c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2154e:	bf00      	nop
   21550:	00027364 	.word	0x00027364
   21554:	00027384 	.word	0x00027384
   21558:	00027344 	.word	0x00027344

0002155c <__ascii_wctomb>:
__ascii_wctomb():
   2155c:	b149      	cbz	r1, 21572 <__ascii_wctomb+0x16>
   2155e:	2aff      	cmp	r2, #255	; 0xff
   21560:	bf8b      	itete	hi
   21562:	238a      	movhi	r3, #138	; 0x8a
   21564:	700a      	strbls	r2, [r1, #0]
   21566:	6003      	strhi	r3, [r0, #0]
   21568:	2001      	movls	r0, #1
   2156a:	bf88      	it	hi
   2156c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   21570:	4770      	bx	lr
   21572:	4608      	mov	r0, r1
   21574:	4770      	bx	lr
   21576:	Address 0x0000000000021576 is out of bounds.


00021578 <_write_r>:
_write_r():
   21578:	b538      	push	{r3, r4, r5, lr}
   2157a:	4605      	mov	r5, r0
   2157c:	4608      	mov	r0, r1
   2157e:	4611      	mov	r1, r2
   21580:	2200      	movs	r2, #0
   21582:	4c05      	ldr	r4, [pc, #20]	; (21598 <_write_r+0x20>)
   21584:	6022      	str	r2, [r4, #0]
   21586:	461a      	mov	r2, r3
   21588:	f7f5 fb6c 	bl	16c64 <_write>
   2158c:	1c43      	adds	r3, r0, #1
   2158e:	d102      	bne.n	21596 <_write_r+0x1e>
   21590:	6823      	ldr	r3, [r4, #0]
   21592:	b103      	cbz	r3, 21596 <_write_r+0x1e>
   21594:	602b      	str	r3, [r5, #0]
   21596:	bd38      	pop	{r3, r4, r5, pc}
   21598:	2007c8fc 	.word	0x2007c8fc

0002159c <__swsetup_r>:
__swsetup_r():
   2159c:	4b32      	ldr	r3, [pc, #200]	; (21668 <__swsetup_r+0xcc>)
   2159e:	b570      	push	{r4, r5, r6, lr}
   215a0:	681d      	ldr	r5, [r3, #0]
   215a2:	4606      	mov	r6, r0
   215a4:	460c      	mov	r4, r1
   215a6:	b125      	cbz	r5, 215b2 <__swsetup_r+0x16>
   215a8:	69ab      	ldr	r3, [r5, #24]
   215aa:	b913      	cbnz	r3, 215b2 <__swsetup_r+0x16>
   215ac:	4628      	mov	r0, r5
   215ae:	f7fc fc0b 	bl	1ddc8 <__sinit>
   215b2:	4b2e      	ldr	r3, [pc, #184]	; (2166c <__swsetup_r+0xd0>)
   215b4:	429c      	cmp	r4, r3
   215b6:	d10f      	bne.n	215d8 <__swsetup_r+0x3c>
   215b8:	686c      	ldr	r4, [r5, #4]
   215ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   215be:	b29a      	uxth	r2, r3
   215c0:	0715      	lsls	r5, r2, #28
   215c2:	d42c      	bmi.n	2161e <__swsetup_r+0x82>
   215c4:	06d0      	lsls	r0, r2, #27
   215c6:	d411      	bmi.n	215ec <__swsetup_r+0x50>
   215c8:	2209      	movs	r2, #9
   215ca:	6032      	str	r2, [r6, #0]
   215cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   215d0:	81a3      	strh	r3, [r4, #12]
   215d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   215d6:	bd70      	pop	{r4, r5, r6, pc}
   215d8:	4b25      	ldr	r3, [pc, #148]	; (21670 <__swsetup_r+0xd4>)
   215da:	429c      	cmp	r4, r3
   215dc:	d101      	bne.n	215e2 <__swsetup_r+0x46>
   215de:	68ac      	ldr	r4, [r5, #8]
   215e0:	e7eb      	b.n	215ba <__swsetup_r+0x1e>
   215e2:	4b24      	ldr	r3, [pc, #144]	; (21674 <__swsetup_r+0xd8>)
   215e4:	429c      	cmp	r4, r3
   215e6:	bf08      	it	eq
   215e8:	68ec      	ldreq	r4, [r5, #12]
   215ea:	e7e6      	b.n	215ba <__swsetup_r+0x1e>
   215ec:	0751      	lsls	r1, r2, #29
   215ee:	d512      	bpl.n	21616 <__swsetup_r+0x7a>
   215f0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   215f2:	b141      	cbz	r1, 21606 <__swsetup_r+0x6a>
   215f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   215f8:	4299      	cmp	r1, r3
   215fa:	d002      	beq.n	21602 <__swsetup_r+0x66>
   215fc:	4630      	mov	r0, r6
   215fe:	f7fd fa31 	bl	1ea64 <_free_r>
   21602:	2300      	movs	r3, #0
   21604:	6363      	str	r3, [r4, #52]	; 0x34
   21606:	89a3      	ldrh	r3, [r4, #12]
   21608:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   2160c:	81a3      	strh	r3, [r4, #12]
   2160e:	2300      	movs	r3, #0
   21610:	6063      	str	r3, [r4, #4]
   21612:	6923      	ldr	r3, [r4, #16]
   21614:	6023      	str	r3, [r4, #0]
   21616:	89a3      	ldrh	r3, [r4, #12]
   21618:	f043 0308 	orr.w	r3, r3, #8
   2161c:	81a3      	strh	r3, [r4, #12]
   2161e:	6923      	ldr	r3, [r4, #16]
   21620:	b94b      	cbnz	r3, 21636 <__swsetup_r+0x9a>
   21622:	89a3      	ldrh	r3, [r4, #12]
   21624:	f403 7320 	and.w	r3, r3, #640	; 0x280
   21628:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   2162c:	d003      	beq.n	21636 <__swsetup_r+0x9a>
   2162e:	4621      	mov	r1, r4
   21630:	4630      	mov	r0, r6
   21632:	f7fc fef7 	bl	1e424 <__smakebuf_r>
   21636:	89a2      	ldrh	r2, [r4, #12]
   21638:	f012 0301 	ands.w	r3, r2, #1
   2163c:	d00c      	beq.n	21658 <__swsetup_r+0xbc>
   2163e:	2300      	movs	r3, #0
   21640:	60a3      	str	r3, [r4, #8]
   21642:	6963      	ldr	r3, [r4, #20]
   21644:	425b      	negs	r3, r3
   21646:	61a3      	str	r3, [r4, #24]
   21648:	6923      	ldr	r3, [r4, #16]
   2164a:	b953      	cbnz	r3, 21662 <__swsetup_r+0xc6>
   2164c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   21650:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   21654:	d1ba      	bne.n	215cc <__swsetup_r+0x30>
   21656:	bd70      	pop	{r4, r5, r6, pc}
   21658:	0792      	lsls	r2, r2, #30
   2165a:	bf58      	it	pl
   2165c:	6963      	ldrpl	r3, [r4, #20]
   2165e:	60a3      	str	r3, [r4, #8]
   21660:	e7f2      	b.n	21648 <__swsetup_r+0xac>
   21662:	2000      	movs	r0, #0
   21664:	e7f7      	b.n	21656 <__swsetup_r+0xba>
   21666:	bf00      	nop
   21668:	2007c0e4 	.word	0x2007c0e4
   2166c:	00027364 	.word	0x00027364
   21670:	00027384 	.word	0x00027384
   21674:	00027344 	.word	0x00027344

00021678 <asctime>:
asctime():
   21678:	4b09      	ldr	r3, [pc, #36]	; (216a0 <asctime+0x28>)
   2167a:	b570      	push	{r4, r5, r6, lr}
   2167c:	681c      	ldr	r4, [r3, #0]
   2167e:	4606      	mov	r6, r0
   21680:	6c25      	ldr	r5, [r4, #64]	; 0x40
   21682:	b93d      	cbnz	r5, 21694 <asctime+0x1c>
   21684:	201a      	movs	r0, #26
   21686:	f7fc ff0d 	bl	1e4a4 <malloc>
   2168a:	221a      	movs	r2, #26
   2168c:	6420      	str	r0, [r4, #64]	; 0x40
   2168e:	4629      	mov	r1, r5
   21690:	f7fc ff6c 	bl	1e56c <memset>
   21694:	6c21      	ldr	r1, [r4, #64]	; 0x40
   21696:	4630      	mov	r0, r6
   21698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   2169c:	f000 b802 	b.w	216a4 <asctime_r>
   216a0:	2007c0e4 	.word	0x2007c0e4

000216a4 <asctime_r>:
asctime_r():
   216a4:	b510      	push	{r4, lr}
   216a6:	460c      	mov	r4, r1
   216a8:	6941      	ldr	r1, [r0, #20]
   216aa:	b086      	sub	sp, #24
   216ac:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   216b0:	6903      	ldr	r3, [r0, #16]
   216b2:	6982      	ldr	r2, [r0, #24]
   216b4:	9104      	str	r1, [sp, #16]
   216b6:	6801      	ldr	r1, [r0, #0]
   216b8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   216bc:	9103      	str	r1, [sp, #12]
   216be:	6841      	ldr	r1, [r0, #4]
   216c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   216c4:	9102      	str	r1, [sp, #8]
   216c6:	6881      	ldr	r1, [r0, #8]
   216c8:	9101      	str	r1, [sp, #4]
   216ca:	68c1      	ldr	r1, [r0, #12]
   216cc:	4620      	mov	r0, r4
   216ce:	9100      	str	r1, [sp, #0]
   216d0:	4904      	ldr	r1, [pc, #16]	; (216e4 <asctime_r+0x40>)
   216d2:	440b      	add	r3, r1
   216d4:	4904      	ldr	r1, [pc, #16]	; (216e8 <asctime_r+0x44>)
   216d6:	440a      	add	r2, r1
   216d8:	4904      	ldr	r1, [pc, #16]	; (216ec <asctime_r+0x48>)
   216da:	f7fe fbc1 	bl	1fe60 <siprintf>
   216de:	4620      	mov	r0, r4
   216e0:	b006      	add	sp, #24
   216e2:	bd10      	pop	{r4, pc}
   216e4:	00027569 	.word	0x00027569
   216e8:	00027554 	.word	0x00027554
   216ec:	00027534 	.word	0x00027534

000216f0 <_close_r>:
_close_r():
   216f0:	b538      	push	{r3, r4, r5, lr}
   216f2:	2300      	movs	r3, #0
   216f4:	4c05      	ldr	r4, [pc, #20]	; (2170c <_close_r+0x1c>)
   216f6:	4605      	mov	r5, r0
   216f8:	4608      	mov	r0, r1
   216fa:	6023      	str	r3, [r4, #0]
   216fc:	f7f5 fbaa 	bl	16e54 <_close>
   21700:	1c43      	adds	r3, r0, #1
   21702:	d102      	bne.n	2170a <_close_r+0x1a>
   21704:	6823      	ldr	r3, [r4, #0]
   21706:	b103      	cbz	r3, 2170a <_close_r+0x1a>
   21708:	602b      	str	r3, [r5, #0]
   2170a:	bd38      	pop	{r3, r4, r5, pc}
   2170c:	2007c8fc 	.word	0x2007c8fc

00021710 <div>:
div():
   21710:	b510      	push	{r4, lr}
   21712:	fb91 f4f2 	sdiv	r4, r1, r2
   21716:	2900      	cmp	r1, #0
   21718:	fb02 1314 	mls	r3, r2, r4, r1
   2171c:	db06      	blt.n	2172c <div+0x1c>
   2171e:	2b00      	cmp	r3, #0
   21720:	da01      	bge.n	21726 <div+0x16>
   21722:	3401      	adds	r4, #1
   21724:	1a9b      	subs	r3, r3, r2
   21726:	6004      	str	r4, [r0, #0]
   21728:	6043      	str	r3, [r0, #4]
   2172a:	bd10      	pop	{r4, pc}
   2172c:	2b00      	cmp	r3, #0
   2172e:	bfc4      	itt	gt
   21730:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   21734:	189b      	addgt	r3, r3, r2
   21736:	e7f6      	b.n	21726 <div+0x16>

00021738 <quorem>:
quorem():
   21738:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2173c:	6903      	ldr	r3, [r0, #16]
   2173e:	690c      	ldr	r4, [r1, #16]
   21740:	4680      	mov	r8, r0
   21742:	429c      	cmp	r4, r3
   21744:	f300 8082 	bgt.w	2184c <quorem+0x114>
   21748:	3c01      	subs	r4, #1
   2174a:	f101 0714 	add.w	r7, r1, #20
   2174e:	f100 0614 	add.w	r6, r0, #20
   21752:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   21756:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   2175a:	3501      	adds	r5, #1
   2175c:	fbb0 f5f5 	udiv	r5, r0, r5
   21760:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   21764:	eb06 030e 	add.w	r3, r6, lr
   21768:	eb07 090e 	add.w	r9, r7, lr
   2176c:	9301      	str	r3, [sp, #4]
   2176e:	b38d      	cbz	r5, 217d4 <quorem+0x9c>
   21770:	f04f 0a00 	mov.w	sl, #0
   21774:	4638      	mov	r0, r7
   21776:	46b4      	mov	ip, r6
   21778:	46d3      	mov	fp, sl
   2177a:	f850 2b04 	ldr.w	r2, [r0], #4
   2177e:	b293      	uxth	r3, r2
   21780:	fb05 a303 	mla	r3, r5, r3, sl
   21784:	0c12      	lsrs	r2, r2, #16
   21786:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   2178a:	fb05 a202 	mla	r2, r5, r2, sl
   2178e:	b29b      	uxth	r3, r3
   21790:	ebab 0303 	sub.w	r3, fp, r3
   21794:	f8bc b000 	ldrh.w	fp, [ip]
   21798:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   2179c:	445b      	add	r3, fp
   2179e:	fa1f fb82 	uxth.w	fp, r2
   217a2:	f8dc 2000 	ldr.w	r2, [ip]
   217a6:	4581      	cmp	r9, r0
   217a8:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   217ac:	eb02 4223 	add.w	r2, r2, r3, asr #16
   217b0:	b29b      	uxth	r3, r3
   217b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   217b6:	ea4f 4b22 	mov.w	fp, r2, asr #16
   217ba:	f84c 3b04 	str.w	r3, [ip], #4
   217be:	d2dc      	bcs.n	2177a <quorem+0x42>
   217c0:	f856 300e 	ldr.w	r3, [r6, lr]
   217c4:	b933      	cbnz	r3, 217d4 <quorem+0x9c>
   217c6:	9b01      	ldr	r3, [sp, #4]
   217c8:	3b04      	subs	r3, #4
   217ca:	429e      	cmp	r6, r3
   217cc:	461a      	mov	r2, r3
   217ce:	d331      	bcc.n	21834 <quorem+0xfc>
   217d0:	f8c8 4010 	str.w	r4, [r8, #16]
   217d4:	4640      	mov	r0, r8
   217d6:	f001 fce4 	bl	231a2 <__mcmp>
   217da:	2800      	cmp	r0, #0
   217dc:	db26      	blt.n	2182c <quorem+0xf4>
   217de:	4630      	mov	r0, r6
   217e0:	f04f 0e00 	mov.w	lr, #0
   217e4:	3501      	adds	r5, #1
   217e6:	f857 1b04 	ldr.w	r1, [r7], #4
   217ea:	f8d0 c000 	ldr.w	ip, [r0]
   217ee:	b28b      	uxth	r3, r1
   217f0:	ebae 0303 	sub.w	r3, lr, r3
   217f4:	fa1f f28c 	uxth.w	r2, ip
   217f8:	4413      	add	r3, r2
   217fa:	0c0a      	lsrs	r2, r1, #16
   217fc:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   21800:	eb02 4223 	add.w	r2, r2, r3, asr #16
   21804:	b29b      	uxth	r3, r3
   21806:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   2180a:	45b9      	cmp	r9, r7
   2180c:	ea4f 4e22 	mov.w	lr, r2, asr #16
   21810:	f840 3b04 	str.w	r3, [r0], #4
   21814:	d2e7      	bcs.n	217e6 <quorem+0xae>
   21816:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   2181a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   2181e:	b92a      	cbnz	r2, 2182c <quorem+0xf4>
   21820:	3b04      	subs	r3, #4
   21822:	429e      	cmp	r6, r3
   21824:	461a      	mov	r2, r3
   21826:	d30b      	bcc.n	21840 <quorem+0x108>
   21828:	f8c8 4010 	str.w	r4, [r8, #16]
   2182c:	4628      	mov	r0, r5
   2182e:	b003      	add	sp, #12
   21830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21834:	6812      	ldr	r2, [r2, #0]
   21836:	3b04      	subs	r3, #4
   21838:	2a00      	cmp	r2, #0
   2183a:	d1c9      	bne.n	217d0 <quorem+0x98>
   2183c:	3c01      	subs	r4, #1
   2183e:	e7c4      	b.n	217ca <quorem+0x92>
   21840:	6812      	ldr	r2, [r2, #0]
   21842:	3b04      	subs	r3, #4
   21844:	2a00      	cmp	r2, #0
   21846:	d1ef      	bne.n	21828 <quorem+0xf0>
   21848:	3c01      	subs	r4, #1
   2184a:	e7ea      	b.n	21822 <quorem+0xea>
   2184c:	2000      	movs	r0, #0
   2184e:	e7ee      	b.n	2182e <quorem+0xf6>

00021850 <_dtoa_r>:
_dtoa_r():
   21850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21854:	6a46      	ldr	r6, [r0, #36]	; 0x24
   21856:	b095      	sub	sp, #84	; 0x54
   21858:	4604      	mov	r4, r0
   2185a:	9d21      	ldr	r5, [sp, #132]	; 0x84
   2185c:	e9cd 2302 	strd	r2, r3, [sp, #8]
   21860:	b93e      	cbnz	r6, 21872 <_dtoa_r+0x22>
   21862:	2010      	movs	r0, #16
   21864:	f7fc fe1e 	bl	1e4a4 <malloc>
   21868:	6260      	str	r0, [r4, #36]	; 0x24
   2186a:	6046      	str	r6, [r0, #4]
   2186c:	6086      	str	r6, [r0, #8]
   2186e:	6006      	str	r6, [r0, #0]
   21870:	60c6      	str	r6, [r0, #12]
   21872:	6a63      	ldr	r3, [r4, #36]	; 0x24
   21874:	6819      	ldr	r1, [r3, #0]
   21876:	b151      	cbz	r1, 2188e <_dtoa_r+0x3e>
   21878:	685a      	ldr	r2, [r3, #4]
   2187a:	2301      	movs	r3, #1
   2187c:	4093      	lsls	r3, r2
   2187e:	604a      	str	r2, [r1, #4]
   21880:	608b      	str	r3, [r1, #8]
   21882:	4620      	mov	r0, r4
   21884:	f001 fa7a 	bl	22d7c <_Bfree>
   21888:	2200      	movs	r2, #0
   2188a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   2188c:	601a      	str	r2, [r3, #0]
   2188e:	9b03      	ldr	r3, [sp, #12]
   21890:	2b00      	cmp	r3, #0
   21892:	bfb7      	itett	lt
   21894:	2301      	movlt	r3, #1
   21896:	2300      	movge	r3, #0
   21898:	602b      	strlt	r3, [r5, #0]
   2189a:	9b03      	ldrlt	r3, [sp, #12]
   2189c:	bfae      	itee	ge
   2189e:	602b      	strge	r3, [r5, #0]
   218a0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   218a4:	9303      	strlt	r3, [sp, #12]
   218a6:	f8dd 900c 	ldr.w	r9, [sp, #12]
   218aa:	4bab      	ldr	r3, [pc, #684]	; (21b58 <_dtoa_r+0x308>)
   218ac:	ea33 0309 	bics.w	r3, r3, r9
   218b0:	d11b      	bne.n	218ea <_dtoa_r+0x9a>
   218b2:	f242 730f 	movw	r3, #9999	; 0x270f
   218b6:	9a20      	ldr	r2, [sp, #128]	; 0x80
   218b8:	6013      	str	r3, [r2, #0]
   218ba:	9b02      	ldr	r3, [sp, #8]
   218bc:	b923      	cbnz	r3, 218c8 <_dtoa_r+0x78>
   218be:	f3c9 0013 	ubfx	r0, r9, #0, #20
   218c2:	2800      	cmp	r0, #0
   218c4:	f000 8583 	beq.w	223ce <_dtoa_r+0xb7e>
   218c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   218ca:	b953      	cbnz	r3, 218e2 <_dtoa_r+0x92>
   218cc:	4ba3      	ldr	r3, [pc, #652]	; (21b5c <_dtoa_r+0x30c>)
   218ce:	e021      	b.n	21914 <_dtoa_r+0xc4>
   218d0:	4ba3      	ldr	r3, [pc, #652]	; (21b60 <_dtoa_r+0x310>)
   218d2:	9306      	str	r3, [sp, #24]
   218d4:	3308      	adds	r3, #8
   218d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
   218d8:	6013      	str	r3, [r2, #0]
   218da:	9806      	ldr	r0, [sp, #24]
   218dc:	b015      	add	sp, #84	; 0x54
   218de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   218e2:	4b9e      	ldr	r3, [pc, #632]	; (21b5c <_dtoa_r+0x30c>)
   218e4:	9306      	str	r3, [sp, #24]
   218e6:	3303      	adds	r3, #3
   218e8:	e7f5      	b.n	218d6 <_dtoa_r+0x86>
   218ea:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   218ee:	2200      	movs	r2, #0
   218f0:	2300      	movs	r3, #0
   218f2:	4630      	mov	r0, r6
   218f4:	4639      	mov	r1, r7
   218f6:	f002 ff21 	bl	2473c <__aeabi_dcmpeq>
   218fa:	4680      	mov	r8, r0
   218fc:	b160      	cbz	r0, 21918 <_dtoa_r+0xc8>
   218fe:	2301      	movs	r3, #1
   21900:	9a20      	ldr	r2, [sp, #128]	; 0x80
   21902:	6013      	str	r3, [r2, #0]
   21904:	9b22      	ldr	r3, [sp, #136]	; 0x88
   21906:	2b00      	cmp	r3, #0
   21908:	f000 855e 	beq.w	223c8 <_dtoa_r+0xb78>
   2190c:	4b95      	ldr	r3, [pc, #596]	; (21b64 <_dtoa_r+0x314>)
   2190e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   21910:	6013      	str	r3, [r2, #0]
   21912:	3b01      	subs	r3, #1
   21914:	9306      	str	r3, [sp, #24]
   21916:	e7e0      	b.n	218da <_dtoa_r+0x8a>
   21918:	ab12      	add	r3, sp, #72	; 0x48
   2191a:	9301      	str	r3, [sp, #4]
   2191c:	ab13      	add	r3, sp, #76	; 0x4c
   2191e:	9300      	str	r3, [sp, #0]
   21920:	4632      	mov	r2, r6
   21922:	463b      	mov	r3, r7
   21924:	4620      	mov	r0, r4
   21926:	f001 fd2b 	bl	23380 <__d2b>
   2192a:	f3c9 550a 	ubfx	r5, r9, #20, #11
   2192e:	4682      	mov	sl, r0
   21930:	2d00      	cmp	r5, #0
   21932:	d07d      	beq.n	21a30 <_dtoa_r+0x1e0>
   21934:	4630      	mov	r0, r6
   21936:	f3c7 0313 	ubfx	r3, r7, #0, #20
   2193a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   2193e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   21942:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   21946:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   2194a:	2200      	movs	r2, #0
   2194c:	4b86      	ldr	r3, [pc, #536]	; (21b68 <_dtoa_r+0x318>)
   2194e:	f7fb f859 	bl	1ca04 <__aeabi_dsub>
   21952:	a37b      	add	r3, pc, #492	; (adr r3, 21b40 <_dtoa_r+0x2f0>)
   21954:	e9d3 2300 	ldrd	r2, r3, [r3]
   21958:	f7fb fa08 	bl	1cd6c <__aeabi_dmul>
   2195c:	a37a      	add	r3, pc, #488	; (adr r3, 21b48 <_dtoa_r+0x2f8>)
   2195e:	e9d3 2300 	ldrd	r2, r3, [r3]
   21962:	f7fb f851 	bl	1ca08 <__adddf3>
   21966:	4606      	mov	r6, r0
   21968:	4628      	mov	r0, r5
   2196a:	460f      	mov	r7, r1
   2196c:	f7fb f998 	bl	1cca0 <__aeabi_i2d>
   21970:	a377      	add	r3, pc, #476	; (adr r3, 21b50 <_dtoa_r+0x300>)
   21972:	e9d3 2300 	ldrd	r2, r3, [r3]
   21976:	f7fb f9f9 	bl	1cd6c <__aeabi_dmul>
   2197a:	4602      	mov	r2, r0
   2197c:	460b      	mov	r3, r1
   2197e:	4630      	mov	r0, r6
   21980:	4639      	mov	r1, r7
   21982:	f7fb f841 	bl	1ca08 <__adddf3>
   21986:	4606      	mov	r6, r0
   21988:	460f      	mov	r7, r1
   2198a:	f002 ff1f 	bl	247cc <__aeabi_d2iz>
   2198e:	2200      	movs	r2, #0
   21990:	4683      	mov	fp, r0
   21992:	2300      	movs	r3, #0
   21994:	4630      	mov	r0, r6
   21996:	4639      	mov	r1, r7
   21998:	f002 feda 	bl	24750 <__aeabi_dcmplt>
   2199c:	b158      	cbz	r0, 219b6 <_dtoa_r+0x166>
   2199e:	4658      	mov	r0, fp
   219a0:	f7fb f97e 	bl	1cca0 <__aeabi_i2d>
   219a4:	4602      	mov	r2, r0
   219a6:	460b      	mov	r3, r1
   219a8:	4630      	mov	r0, r6
   219aa:	4639      	mov	r1, r7
   219ac:	f002 fec6 	bl	2473c <__aeabi_dcmpeq>
   219b0:	b908      	cbnz	r0, 219b6 <_dtoa_r+0x166>
   219b2:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   219b6:	f1bb 0f16 	cmp.w	fp, #22
   219ba:	d858      	bhi.n	21a6e <_dtoa_r+0x21e>
   219bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   219c0:	496a      	ldr	r1, [pc, #424]	; (21b6c <_dtoa_r+0x31c>)
   219c2:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   219c6:	e9d1 0100 	ldrd	r0, r1, [r1]
   219ca:	f002 fedf 	bl	2478c <__aeabi_dcmpgt>
   219ce:	2800      	cmp	r0, #0
   219d0:	d04f      	beq.n	21a72 <_dtoa_r+0x222>
   219d2:	2300      	movs	r3, #0
   219d4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   219d8:	930d      	str	r3, [sp, #52]	; 0x34
   219da:	9b12      	ldr	r3, [sp, #72]	; 0x48
   219dc:	1b5d      	subs	r5, r3, r5
   219de:	1e6b      	subs	r3, r5, #1
   219e0:	9307      	str	r3, [sp, #28]
   219e2:	bf43      	ittte	mi
   219e4:	2300      	movmi	r3, #0
   219e6:	f1c5 0801 	rsbmi	r8, r5, #1
   219ea:	9307      	strmi	r3, [sp, #28]
   219ec:	f04f 0800 	movpl.w	r8, #0
   219f0:	f1bb 0f00 	cmp.w	fp, #0
   219f4:	db3f      	blt.n	21a76 <_dtoa_r+0x226>
   219f6:	9b07      	ldr	r3, [sp, #28]
   219f8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   219fc:	445b      	add	r3, fp
   219fe:	9307      	str	r3, [sp, #28]
   21a00:	2300      	movs	r3, #0
   21a02:	9308      	str	r3, [sp, #32]
   21a04:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21a06:	2b09      	cmp	r3, #9
   21a08:	f200 80b4 	bhi.w	21b74 <_dtoa_r+0x324>
   21a0c:	2b05      	cmp	r3, #5
   21a0e:	bfc4      	itt	gt
   21a10:	3b04      	subgt	r3, #4
   21a12:	931e      	strgt	r3, [sp, #120]	; 0x78
   21a14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21a16:	bfc8      	it	gt
   21a18:	2600      	movgt	r6, #0
   21a1a:	f1a3 0302 	sub.w	r3, r3, #2
   21a1e:	bfd8      	it	le
   21a20:	2601      	movle	r6, #1
   21a22:	2b03      	cmp	r3, #3
   21a24:	f200 80b2 	bhi.w	21b8c <_dtoa_r+0x33c>
   21a28:	e8df f003 	tbb	[pc, r3]
   21a2c:	782d8684 	.word	0x782d8684
   21a30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   21a32:	9d12      	ldr	r5, [sp, #72]	; 0x48
   21a34:	441d      	add	r5, r3
   21a36:	f205 4332 	addw	r3, r5, #1074	; 0x432
   21a3a:	2b20      	cmp	r3, #32
   21a3c:	dd11      	ble.n	21a62 <_dtoa_r+0x212>
   21a3e:	9a02      	ldr	r2, [sp, #8]
   21a40:	f205 4012 	addw	r0, r5, #1042	; 0x412
   21a44:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   21a48:	fa22 f000 	lsr.w	r0, r2, r0
   21a4c:	fa09 f303 	lsl.w	r3, r9, r3
   21a50:	4318      	orrs	r0, r3
   21a52:	f7fb f915 	bl	1cc80 <__aeabi_ui2d>
   21a56:	2301      	movs	r3, #1
   21a58:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   21a5c:	3d01      	subs	r5, #1
   21a5e:	9310      	str	r3, [sp, #64]	; 0x40
   21a60:	e773      	b.n	2194a <_dtoa_r+0xfa>
   21a62:	f1c3 0020 	rsb	r0, r3, #32
   21a66:	9b02      	ldr	r3, [sp, #8]
   21a68:	fa03 f000 	lsl.w	r0, r3, r0
   21a6c:	e7f1      	b.n	21a52 <_dtoa_r+0x202>
   21a6e:	2301      	movs	r3, #1
   21a70:	e7b2      	b.n	219d8 <_dtoa_r+0x188>
   21a72:	900d      	str	r0, [sp, #52]	; 0x34
   21a74:	e7b1      	b.n	219da <_dtoa_r+0x18a>
   21a76:	f1cb 0300 	rsb	r3, fp, #0
   21a7a:	9308      	str	r3, [sp, #32]
   21a7c:	2300      	movs	r3, #0
   21a7e:	eba8 080b 	sub.w	r8, r8, fp
   21a82:	930c      	str	r3, [sp, #48]	; 0x30
   21a84:	e7be      	b.n	21a04 <_dtoa_r+0x1b4>
   21a86:	2301      	movs	r3, #1
   21a88:	9309      	str	r3, [sp, #36]	; 0x24
   21a8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21a8c:	2b00      	cmp	r3, #0
   21a8e:	f340 8080 	ble.w	21b92 <_dtoa_r+0x342>
   21a92:	4699      	mov	r9, r3
   21a94:	9304      	str	r3, [sp, #16]
   21a96:	2200      	movs	r2, #0
   21a98:	2104      	movs	r1, #4
   21a9a:	6a65      	ldr	r5, [r4, #36]	; 0x24
   21a9c:	606a      	str	r2, [r5, #4]
   21a9e:	f101 0214 	add.w	r2, r1, #20
   21aa2:	429a      	cmp	r2, r3
   21aa4:	d97a      	bls.n	21b9c <_dtoa_r+0x34c>
   21aa6:	6869      	ldr	r1, [r5, #4]
   21aa8:	4620      	mov	r0, r4
   21aaa:	f001 f933 	bl	22d14 <_Balloc>
   21aae:	6a63      	ldr	r3, [r4, #36]	; 0x24
   21ab0:	6028      	str	r0, [r5, #0]
   21ab2:	681b      	ldr	r3, [r3, #0]
   21ab4:	f1b9 0f0e 	cmp.w	r9, #14
   21ab8:	9306      	str	r3, [sp, #24]
   21aba:	f200 80f0 	bhi.w	21c9e <_dtoa_r+0x44e>
   21abe:	2e00      	cmp	r6, #0
   21ac0:	f000 80ed 	beq.w	21c9e <_dtoa_r+0x44e>
   21ac4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21ac8:	f1bb 0f00 	cmp.w	fp, #0
   21acc:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   21ad0:	dd79      	ble.n	21bc6 <_dtoa_r+0x376>
   21ad2:	4a26      	ldr	r2, [pc, #152]	; (21b6c <_dtoa_r+0x31c>)
   21ad4:	f00b 030f 	and.w	r3, fp, #15
   21ad8:	ea4f 162b 	mov.w	r6, fp, asr #4
   21adc:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   21ae0:	06f0      	lsls	r0, r6, #27
   21ae2:	e9d3 2300 	ldrd	r2, r3, [r3]
   21ae6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   21aea:	d55c      	bpl.n	21ba6 <_dtoa_r+0x356>
   21aec:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   21af0:	4b1f      	ldr	r3, [pc, #124]	; (21b70 <_dtoa_r+0x320>)
   21af2:	2503      	movs	r5, #3
   21af4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   21af8:	f7fb fa62 	bl	1cfc0 <__aeabi_ddiv>
   21afc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21b00:	f006 060f 	and.w	r6, r6, #15
   21b04:	4f1a      	ldr	r7, [pc, #104]	; (21b70 <_dtoa_r+0x320>)
   21b06:	2e00      	cmp	r6, #0
   21b08:	d14f      	bne.n	21baa <_dtoa_r+0x35a>
   21b0a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21b0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21b12:	f7fb fa55 	bl	1cfc0 <__aeabi_ddiv>
   21b16:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21b1a:	e06e      	b.n	21bfa <_dtoa_r+0x3aa>
   21b1c:	2301      	movs	r3, #1
   21b1e:	9309      	str	r3, [sp, #36]	; 0x24
   21b20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21b22:	445b      	add	r3, fp
   21b24:	f103 0901 	add.w	r9, r3, #1
   21b28:	9304      	str	r3, [sp, #16]
   21b2a:	464b      	mov	r3, r9
   21b2c:	2b01      	cmp	r3, #1
   21b2e:	bfb8      	it	lt
   21b30:	2301      	movlt	r3, #1
   21b32:	e7b0      	b.n	21a96 <_dtoa_r+0x246>
   21b34:	2300      	movs	r3, #0
   21b36:	e7a7      	b.n	21a88 <_dtoa_r+0x238>
   21b38:	2300      	movs	r3, #0
   21b3a:	e7f0      	b.n	21b1e <_dtoa_r+0x2ce>
   21b3c:	f3af 8000 	nop.w
   21b40:	636f4361 	.word	0x636f4361
   21b44:	3fd287a7 	.word	0x3fd287a7
   21b48:	8b60c8b3 	.word	0x8b60c8b3
   21b4c:	3fc68a28 	.word	0x3fc68a28
   21b50:	509f79fb 	.word	0x509f79fb
   21b54:	3fd34413 	.word	0x3fd34413
   21b58:	7ff00000 	.word	0x7ff00000
   21b5c:	00027697 	.word	0x00027697
   21b60:	0002768e 	.word	0x0002768e
   21b64:	00024acf 	.word	0x00024acf
   21b68:	3ff80000 	.word	0x3ff80000
   21b6c:	000276c8 	.word	0x000276c8
   21b70:	000276a0 	.word	0x000276a0
   21b74:	2601      	movs	r6, #1
   21b76:	2300      	movs	r3, #0
   21b78:	9609      	str	r6, [sp, #36]	; 0x24
   21b7a:	931e      	str	r3, [sp, #120]	; 0x78
   21b7c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   21b80:	2200      	movs	r2, #0
   21b82:	9304      	str	r3, [sp, #16]
   21b84:	4699      	mov	r9, r3
   21b86:	2312      	movs	r3, #18
   21b88:	921f      	str	r2, [sp, #124]	; 0x7c
   21b8a:	e784      	b.n	21a96 <_dtoa_r+0x246>
   21b8c:	2301      	movs	r3, #1
   21b8e:	9309      	str	r3, [sp, #36]	; 0x24
   21b90:	e7f4      	b.n	21b7c <_dtoa_r+0x32c>
   21b92:	2301      	movs	r3, #1
   21b94:	9304      	str	r3, [sp, #16]
   21b96:	4699      	mov	r9, r3
   21b98:	461a      	mov	r2, r3
   21b9a:	e7f5      	b.n	21b88 <_dtoa_r+0x338>
   21b9c:	686a      	ldr	r2, [r5, #4]
   21b9e:	0049      	lsls	r1, r1, #1
   21ba0:	3201      	adds	r2, #1
   21ba2:	606a      	str	r2, [r5, #4]
   21ba4:	e77b      	b.n	21a9e <_dtoa_r+0x24e>
   21ba6:	2502      	movs	r5, #2
   21ba8:	e7ac      	b.n	21b04 <_dtoa_r+0x2b4>
   21baa:	07f1      	lsls	r1, r6, #31
   21bac:	d508      	bpl.n	21bc0 <_dtoa_r+0x370>
   21bae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21bb2:	e9d7 2300 	ldrd	r2, r3, [r7]
   21bb6:	f7fb f8d9 	bl	1cd6c <__aeabi_dmul>
   21bba:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21bbe:	3501      	adds	r5, #1
   21bc0:	1076      	asrs	r6, r6, #1
   21bc2:	3708      	adds	r7, #8
   21bc4:	e79f      	b.n	21b06 <_dtoa_r+0x2b6>
   21bc6:	f000 80a5 	beq.w	21d14 <_dtoa_r+0x4c4>
   21bca:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   21bce:	f1cb 0600 	rsb	r6, fp, #0
   21bd2:	4ba2      	ldr	r3, [pc, #648]	; (21e5c <_dtoa_r+0x60c>)
   21bd4:	f006 020f 	and.w	r2, r6, #15
   21bd8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   21bdc:	e9d3 2300 	ldrd	r2, r3, [r3]
   21be0:	f7fb f8c4 	bl	1cd6c <__aeabi_dmul>
   21be4:	2502      	movs	r5, #2
   21be6:	2300      	movs	r3, #0
   21be8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21bec:	4f9c      	ldr	r7, [pc, #624]	; (21e60 <_dtoa_r+0x610>)
   21bee:	1136      	asrs	r6, r6, #4
   21bf0:	2e00      	cmp	r6, #0
   21bf2:	f040 8084 	bne.w	21cfe <_dtoa_r+0x4ae>
   21bf6:	2b00      	cmp	r3, #0
   21bf8:	d18d      	bne.n	21b16 <_dtoa_r+0x2c6>
   21bfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   21bfc:	2b00      	cmp	r3, #0
   21bfe:	f000 808b 	beq.w	21d18 <_dtoa_r+0x4c8>
   21c02:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21c06:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   21c0a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21c0e:	2200      	movs	r2, #0
   21c10:	4b94      	ldr	r3, [pc, #592]	; (21e64 <_dtoa_r+0x614>)
   21c12:	f002 fd9d 	bl	24750 <__aeabi_dcmplt>
   21c16:	2800      	cmp	r0, #0
   21c18:	d07e      	beq.n	21d18 <_dtoa_r+0x4c8>
   21c1a:	f1b9 0f00 	cmp.w	r9, #0
   21c1e:	d07b      	beq.n	21d18 <_dtoa_r+0x4c8>
   21c20:	9b04      	ldr	r3, [sp, #16]
   21c22:	2b00      	cmp	r3, #0
   21c24:	dd37      	ble.n	21c96 <_dtoa_r+0x446>
   21c26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21c2a:	2200      	movs	r2, #0
   21c2c:	4b8e      	ldr	r3, [pc, #568]	; (21e68 <_dtoa_r+0x618>)
   21c2e:	f7fb f89d 	bl	1cd6c <__aeabi_dmul>
   21c32:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21c36:	9e04      	ldr	r6, [sp, #16]
   21c38:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   21c3c:	3501      	adds	r5, #1
   21c3e:	4628      	mov	r0, r5
   21c40:	f7fb f82e 	bl	1cca0 <__aeabi_i2d>
   21c44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21c48:	f7fb f890 	bl	1cd6c <__aeabi_dmul>
   21c4c:	4b87      	ldr	r3, [pc, #540]	; (21e6c <_dtoa_r+0x61c>)
   21c4e:	2200      	movs	r2, #0
   21c50:	f7fa feda 	bl	1ca08 <__adddf3>
   21c54:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21c58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   21c5a:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   21c5e:	950b      	str	r5, [sp, #44]	; 0x2c
   21c60:	2e00      	cmp	r6, #0
   21c62:	d15c      	bne.n	21d1e <_dtoa_r+0x4ce>
   21c64:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21c68:	2200      	movs	r2, #0
   21c6a:	4b81      	ldr	r3, [pc, #516]	; (21e70 <_dtoa_r+0x620>)
   21c6c:	f7fa feca 	bl	1ca04 <__aeabi_dsub>
   21c70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   21c72:	462b      	mov	r3, r5
   21c74:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21c78:	f002 fd88 	bl	2478c <__aeabi_dcmpgt>
   21c7c:	2800      	cmp	r0, #0
   21c7e:	f040 82f7 	bne.w	22270 <_dtoa_r+0xa20>
   21c82:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21c86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   21c88:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   21c8c:	f002 fd60 	bl	24750 <__aeabi_dcmplt>
   21c90:	2800      	cmp	r0, #0
   21c92:	f040 82eb 	bne.w	2226c <_dtoa_r+0xa1c>
   21c96:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   21c9a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   21c9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   21ca0:	2b00      	cmp	r3, #0
   21ca2:	f2c0 8150 	blt.w	21f46 <_dtoa_r+0x6f6>
   21ca6:	f1bb 0f0e 	cmp.w	fp, #14
   21caa:	f300 814c 	bgt.w	21f46 <_dtoa_r+0x6f6>
   21cae:	4b6b      	ldr	r3, [pc, #428]	; (21e5c <_dtoa_r+0x60c>)
   21cb0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   21cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
   21cb8:	e9cd 2304 	strd	r2, r3, [sp, #16]
   21cbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21cbe:	2b00      	cmp	r3, #0
   21cc0:	f280 80da 	bge.w	21e78 <_dtoa_r+0x628>
   21cc4:	f1b9 0f00 	cmp.w	r9, #0
   21cc8:	f300 80d6 	bgt.w	21e78 <_dtoa_r+0x628>
   21ccc:	f040 82cd 	bne.w	2226a <_dtoa_r+0xa1a>
   21cd0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21cd4:	2200      	movs	r2, #0
   21cd6:	4b66      	ldr	r3, [pc, #408]	; (21e70 <_dtoa_r+0x620>)
   21cd8:	f7fb f848 	bl	1cd6c <__aeabi_dmul>
   21cdc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21ce0:	f002 fd4a 	bl	24778 <__aeabi_dcmpge>
   21ce4:	464e      	mov	r6, r9
   21ce6:	464f      	mov	r7, r9
   21ce8:	2800      	cmp	r0, #0
   21cea:	f040 82a4 	bne.w	22236 <_dtoa_r+0x9e6>
   21cee:	9b06      	ldr	r3, [sp, #24]
   21cf0:	9a06      	ldr	r2, [sp, #24]
   21cf2:	1c5d      	adds	r5, r3, #1
   21cf4:	2331      	movs	r3, #49	; 0x31
   21cf6:	f10b 0b01 	add.w	fp, fp, #1
   21cfa:	7013      	strb	r3, [r2, #0]
   21cfc:	e29f      	b.n	2223e <_dtoa_r+0x9ee>
   21cfe:	07f2      	lsls	r2, r6, #31
   21d00:	d505      	bpl.n	21d0e <_dtoa_r+0x4be>
   21d02:	e9d7 2300 	ldrd	r2, r3, [r7]
   21d06:	f7fb f831 	bl	1cd6c <__aeabi_dmul>
   21d0a:	2301      	movs	r3, #1
   21d0c:	3501      	adds	r5, #1
   21d0e:	1076      	asrs	r6, r6, #1
   21d10:	3708      	adds	r7, #8
   21d12:	e76d      	b.n	21bf0 <_dtoa_r+0x3a0>
   21d14:	2502      	movs	r5, #2
   21d16:	e770      	b.n	21bfa <_dtoa_r+0x3aa>
   21d18:	465f      	mov	r7, fp
   21d1a:	464e      	mov	r6, r9
   21d1c:	e78f      	b.n	21c3e <_dtoa_r+0x3ee>
   21d1e:	9a06      	ldr	r2, [sp, #24]
   21d20:	4b4e      	ldr	r3, [pc, #312]	; (21e5c <_dtoa_r+0x60c>)
   21d22:	4432      	add	r2, r6
   21d24:	9211      	str	r2, [sp, #68]	; 0x44
   21d26:	9a09      	ldr	r2, [sp, #36]	; 0x24
   21d28:	1e71      	subs	r1, r6, #1
   21d2a:	2a00      	cmp	r2, #0
   21d2c:	d048      	beq.n	21dc0 <_dtoa_r+0x570>
   21d2e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   21d32:	e9d3 2300 	ldrd	r2, r3, [r3]
   21d36:	2000      	movs	r0, #0
   21d38:	494e      	ldr	r1, [pc, #312]	; (21e74 <_dtoa_r+0x624>)
   21d3a:	f7fb f941 	bl	1cfc0 <__aeabi_ddiv>
   21d3e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21d42:	f7fa fe5f 	bl	1ca04 <__aeabi_dsub>
   21d46:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21d4a:	9d06      	ldr	r5, [sp, #24]
   21d4c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21d50:	f002 fd3c 	bl	247cc <__aeabi_d2iz>
   21d54:	4606      	mov	r6, r0
   21d56:	f7fa ffa3 	bl	1cca0 <__aeabi_i2d>
   21d5a:	4602      	mov	r2, r0
   21d5c:	460b      	mov	r3, r1
   21d5e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21d62:	f7fa fe4f 	bl	1ca04 <__aeabi_dsub>
   21d66:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21d6a:	3630      	adds	r6, #48	; 0x30
   21d6c:	f805 6b01 	strb.w	r6, [r5], #1
   21d70:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21d74:	f002 fcec 	bl	24750 <__aeabi_dcmplt>
   21d78:	2800      	cmp	r0, #0
   21d7a:	d164      	bne.n	21e46 <_dtoa_r+0x5f6>
   21d7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21d80:	2000      	movs	r0, #0
   21d82:	4938      	ldr	r1, [pc, #224]	; (21e64 <_dtoa_r+0x614>)
   21d84:	f7fa fe3e 	bl	1ca04 <__aeabi_dsub>
   21d88:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21d8c:	f002 fce0 	bl	24750 <__aeabi_dcmplt>
   21d90:	2800      	cmp	r0, #0
   21d92:	f040 80b9 	bne.w	21f08 <_dtoa_r+0x6b8>
   21d96:	9b11      	ldr	r3, [sp, #68]	; 0x44
   21d98:	429d      	cmp	r5, r3
   21d9a:	f43f af7c 	beq.w	21c96 <_dtoa_r+0x446>
   21d9e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21da2:	2200      	movs	r2, #0
   21da4:	4b30      	ldr	r3, [pc, #192]	; (21e68 <_dtoa_r+0x618>)
   21da6:	f7fa ffe1 	bl	1cd6c <__aeabi_dmul>
   21daa:	2200      	movs	r2, #0
   21dac:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21db0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21db4:	4b2c      	ldr	r3, [pc, #176]	; (21e68 <_dtoa_r+0x618>)
   21db6:	f7fa ffd9 	bl	1cd6c <__aeabi_dmul>
   21dba:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21dbe:	e7c5      	b.n	21d4c <_dtoa_r+0x4fc>
   21dc0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   21dc4:	e9d1 0100 	ldrd	r0, r1, [r1]
   21dc8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21dcc:	f7fa ffce 	bl	1cd6c <__aeabi_dmul>
   21dd0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21dd4:	9d06      	ldr	r5, [sp, #24]
   21dd6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21dda:	f002 fcf7 	bl	247cc <__aeabi_d2iz>
   21dde:	4606      	mov	r6, r0
   21de0:	f7fa ff5e 	bl	1cca0 <__aeabi_i2d>
   21de4:	4602      	mov	r2, r0
   21de6:	460b      	mov	r3, r1
   21de8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21dec:	f7fa fe0a 	bl	1ca04 <__aeabi_dsub>
   21df0:	3630      	adds	r6, #48	; 0x30
   21df2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   21df4:	f805 6b01 	strb.w	r6, [r5], #1
   21df8:	42ab      	cmp	r3, r5
   21dfa:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21dfe:	f04f 0200 	mov.w	r2, #0
   21e02:	d124      	bne.n	21e4e <_dtoa_r+0x5fe>
   21e04:	4b1b      	ldr	r3, [pc, #108]	; (21e74 <_dtoa_r+0x624>)
   21e06:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21e0a:	f7fa fdfd 	bl	1ca08 <__adddf3>
   21e0e:	4602      	mov	r2, r0
   21e10:	460b      	mov	r3, r1
   21e12:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e16:	f002 fcb9 	bl	2478c <__aeabi_dcmpgt>
   21e1a:	2800      	cmp	r0, #0
   21e1c:	d174      	bne.n	21f08 <_dtoa_r+0x6b8>
   21e1e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21e22:	2000      	movs	r0, #0
   21e24:	4913      	ldr	r1, [pc, #76]	; (21e74 <_dtoa_r+0x624>)
   21e26:	f7fa fded 	bl	1ca04 <__aeabi_dsub>
   21e2a:	4602      	mov	r2, r0
   21e2c:	460b      	mov	r3, r1
   21e2e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e32:	f002 fc8d 	bl	24750 <__aeabi_dcmplt>
   21e36:	2800      	cmp	r0, #0
   21e38:	f43f af2d 	beq.w	21c96 <_dtoa_r+0x446>
   21e3c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   21e40:	1e6a      	subs	r2, r5, #1
   21e42:	2b30      	cmp	r3, #48	; 0x30
   21e44:	d001      	beq.n	21e4a <_dtoa_r+0x5fa>
   21e46:	46bb      	mov	fp, r7
   21e48:	e04d      	b.n	21ee6 <_dtoa_r+0x696>
   21e4a:	4615      	mov	r5, r2
   21e4c:	e7f6      	b.n	21e3c <_dtoa_r+0x5ec>
   21e4e:	4b06      	ldr	r3, [pc, #24]	; (21e68 <_dtoa_r+0x618>)
   21e50:	f7fa ff8c 	bl	1cd6c <__aeabi_dmul>
   21e54:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21e58:	e7bd      	b.n	21dd6 <_dtoa_r+0x586>
   21e5a:	bf00      	nop
   21e5c:	000276c8 	.word	0x000276c8
   21e60:	000276a0 	.word	0x000276a0
   21e64:	3ff00000 	.word	0x3ff00000
   21e68:	40240000 	.word	0x40240000
   21e6c:	401c0000 	.word	0x401c0000
   21e70:	40140000 	.word	0x40140000
   21e74:	3fe00000 	.word	0x3fe00000
   21e78:	9d06      	ldr	r5, [sp, #24]
   21e7a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   21e7e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   21e82:	4630      	mov	r0, r6
   21e84:	4639      	mov	r1, r7
   21e86:	f7fb f89b 	bl	1cfc0 <__aeabi_ddiv>
   21e8a:	f002 fc9f 	bl	247cc <__aeabi_d2iz>
   21e8e:	4680      	mov	r8, r0
   21e90:	f7fa ff06 	bl	1cca0 <__aeabi_i2d>
   21e94:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   21e98:	f7fa ff68 	bl	1cd6c <__aeabi_dmul>
   21e9c:	4602      	mov	r2, r0
   21e9e:	460b      	mov	r3, r1
   21ea0:	4630      	mov	r0, r6
   21ea2:	4639      	mov	r1, r7
   21ea4:	f7fa fdae 	bl	1ca04 <__aeabi_dsub>
   21ea8:	f108 0630 	add.w	r6, r8, #48	; 0x30
   21eac:	f805 6b01 	strb.w	r6, [r5], #1
   21eb0:	9e06      	ldr	r6, [sp, #24]
   21eb2:	4602      	mov	r2, r0
   21eb4:	1bae      	subs	r6, r5, r6
   21eb6:	45b1      	cmp	r9, r6
   21eb8:	460b      	mov	r3, r1
   21eba:	d137      	bne.n	21f2c <_dtoa_r+0x6dc>
   21ebc:	f7fa fda4 	bl	1ca08 <__adddf3>
   21ec0:	4606      	mov	r6, r0
   21ec2:	460f      	mov	r7, r1
   21ec4:	4602      	mov	r2, r0
   21ec6:	460b      	mov	r3, r1
   21ec8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21ecc:	f002 fc40 	bl	24750 <__aeabi_dcmplt>
   21ed0:	b9c8      	cbnz	r0, 21f06 <_dtoa_r+0x6b6>
   21ed2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21ed6:	4632      	mov	r2, r6
   21ed8:	463b      	mov	r3, r7
   21eda:	f002 fc2f 	bl	2473c <__aeabi_dcmpeq>
   21ede:	b110      	cbz	r0, 21ee6 <_dtoa_r+0x696>
   21ee0:	f018 0f01 	tst.w	r8, #1
   21ee4:	d10f      	bne.n	21f06 <_dtoa_r+0x6b6>
   21ee6:	4651      	mov	r1, sl
   21ee8:	4620      	mov	r0, r4
   21eea:	f000 ff47 	bl	22d7c <_Bfree>
   21eee:	2300      	movs	r3, #0
   21ef0:	9a20      	ldr	r2, [sp, #128]	; 0x80
   21ef2:	702b      	strb	r3, [r5, #0]
   21ef4:	f10b 0301 	add.w	r3, fp, #1
   21ef8:	6013      	str	r3, [r2, #0]
   21efa:	9b22      	ldr	r3, [sp, #136]	; 0x88
   21efc:	2b00      	cmp	r3, #0
   21efe:	f43f acec 	beq.w	218da <_dtoa_r+0x8a>
   21f02:	601d      	str	r5, [r3, #0]
   21f04:	e4e9      	b.n	218da <_dtoa_r+0x8a>
   21f06:	465f      	mov	r7, fp
   21f08:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   21f0c:	1e6b      	subs	r3, r5, #1
   21f0e:	2a39      	cmp	r2, #57	; 0x39
   21f10:	d106      	bne.n	21f20 <_dtoa_r+0x6d0>
   21f12:	9a06      	ldr	r2, [sp, #24]
   21f14:	429a      	cmp	r2, r3
   21f16:	d107      	bne.n	21f28 <_dtoa_r+0x6d8>
   21f18:	2330      	movs	r3, #48	; 0x30
   21f1a:	7013      	strb	r3, [r2, #0]
   21f1c:	4613      	mov	r3, r2
   21f1e:	3701      	adds	r7, #1
   21f20:	781a      	ldrb	r2, [r3, #0]
   21f22:	3201      	adds	r2, #1
   21f24:	701a      	strb	r2, [r3, #0]
   21f26:	e78e      	b.n	21e46 <_dtoa_r+0x5f6>
   21f28:	461d      	mov	r5, r3
   21f2a:	e7ed      	b.n	21f08 <_dtoa_r+0x6b8>
   21f2c:	2200      	movs	r2, #0
   21f2e:	4bb5      	ldr	r3, [pc, #724]	; (22204 <_dtoa_r+0x9b4>)
   21f30:	f7fa ff1c 	bl	1cd6c <__aeabi_dmul>
   21f34:	2200      	movs	r2, #0
   21f36:	2300      	movs	r3, #0
   21f38:	4606      	mov	r6, r0
   21f3a:	460f      	mov	r7, r1
   21f3c:	f002 fbfe 	bl	2473c <__aeabi_dcmpeq>
   21f40:	2800      	cmp	r0, #0
   21f42:	d09c      	beq.n	21e7e <_dtoa_r+0x62e>
   21f44:	e7cf      	b.n	21ee6 <_dtoa_r+0x696>
   21f46:	9a09      	ldr	r2, [sp, #36]	; 0x24
   21f48:	2a00      	cmp	r2, #0
   21f4a:	f000 8129 	beq.w	221a0 <_dtoa_r+0x950>
   21f4e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   21f50:	2a01      	cmp	r2, #1
   21f52:	f300 810e 	bgt.w	22172 <_dtoa_r+0x922>
   21f56:	9a10      	ldr	r2, [sp, #64]	; 0x40
   21f58:	2a00      	cmp	r2, #0
   21f5a:	f000 8106 	beq.w	2216a <_dtoa_r+0x91a>
   21f5e:	f203 4333 	addw	r3, r3, #1075	; 0x433
   21f62:	4645      	mov	r5, r8
   21f64:	9e08      	ldr	r6, [sp, #32]
   21f66:	9a07      	ldr	r2, [sp, #28]
   21f68:	2101      	movs	r1, #1
   21f6a:	441a      	add	r2, r3
   21f6c:	4620      	mov	r0, r4
   21f6e:	4498      	add	r8, r3
   21f70:	9207      	str	r2, [sp, #28]
   21f72:	f000 ffe1 	bl	22f38 <__i2b>
   21f76:	4607      	mov	r7, r0
   21f78:	2d00      	cmp	r5, #0
   21f7a:	dd0b      	ble.n	21f94 <_dtoa_r+0x744>
   21f7c:	9b07      	ldr	r3, [sp, #28]
   21f7e:	2b00      	cmp	r3, #0
   21f80:	dd08      	ble.n	21f94 <_dtoa_r+0x744>
   21f82:	42ab      	cmp	r3, r5
   21f84:	bfa8      	it	ge
   21f86:	462b      	movge	r3, r5
   21f88:	9a07      	ldr	r2, [sp, #28]
   21f8a:	eba8 0803 	sub.w	r8, r8, r3
   21f8e:	1aed      	subs	r5, r5, r3
   21f90:	1ad3      	subs	r3, r2, r3
   21f92:	9307      	str	r3, [sp, #28]
   21f94:	9b08      	ldr	r3, [sp, #32]
   21f96:	b1fb      	cbz	r3, 21fd8 <_dtoa_r+0x788>
   21f98:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21f9a:	2b00      	cmp	r3, #0
   21f9c:	f000 8104 	beq.w	221a8 <_dtoa_r+0x958>
   21fa0:	2e00      	cmp	r6, #0
   21fa2:	dd11      	ble.n	21fc8 <_dtoa_r+0x778>
   21fa4:	4639      	mov	r1, r7
   21fa6:	4632      	mov	r2, r6
   21fa8:	4620      	mov	r0, r4
   21faa:	f001 f85b 	bl	23064 <__pow5mult>
   21fae:	4652      	mov	r2, sl
   21fb0:	4601      	mov	r1, r0
   21fb2:	4607      	mov	r7, r0
   21fb4:	4620      	mov	r0, r4
   21fb6:	f000 ffc8 	bl	22f4a <__multiply>
   21fba:	4651      	mov	r1, sl
   21fbc:	900a      	str	r0, [sp, #40]	; 0x28
   21fbe:	4620      	mov	r0, r4
   21fc0:	f000 fedc 	bl	22d7c <_Bfree>
   21fc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   21fc6:	469a      	mov	sl, r3
   21fc8:	9b08      	ldr	r3, [sp, #32]
   21fca:	1b9a      	subs	r2, r3, r6
   21fcc:	d004      	beq.n	21fd8 <_dtoa_r+0x788>
   21fce:	4651      	mov	r1, sl
   21fd0:	4620      	mov	r0, r4
   21fd2:	f001 f847 	bl	23064 <__pow5mult>
   21fd6:	4682      	mov	sl, r0
   21fd8:	2101      	movs	r1, #1
   21fda:	4620      	mov	r0, r4
   21fdc:	f000 ffac 	bl	22f38 <__i2b>
   21fe0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   21fe2:	4606      	mov	r6, r0
   21fe4:	2b00      	cmp	r3, #0
   21fe6:	f340 80e1 	ble.w	221ac <_dtoa_r+0x95c>
   21fea:	461a      	mov	r2, r3
   21fec:	4601      	mov	r1, r0
   21fee:	4620      	mov	r0, r4
   21ff0:	f001 f838 	bl	23064 <__pow5mult>
   21ff4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21ff6:	4606      	mov	r6, r0
   21ff8:	2b01      	cmp	r3, #1
   21ffa:	f340 80da 	ble.w	221b2 <_dtoa_r+0x962>
   21ffe:	2300      	movs	r3, #0
   22000:	9308      	str	r3, [sp, #32]
   22002:	6933      	ldr	r3, [r6, #16]
   22004:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   22008:	6918      	ldr	r0, [r3, #16]
   2200a:	f000 ff47 	bl	22e9c <__hi0bits>
   2200e:	f1c0 0020 	rsb	r0, r0, #32
   22012:	9b07      	ldr	r3, [sp, #28]
   22014:	4418      	add	r0, r3
   22016:	f010 001f 	ands.w	r0, r0, #31
   2201a:	f000 80f0 	beq.w	221fe <_dtoa_r+0x9ae>
   2201e:	f1c0 0320 	rsb	r3, r0, #32
   22022:	2b04      	cmp	r3, #4
   22024:	f340 80e2 	ble.w	221ec <_dtoa_r+0x99c>
   22028:	9b07      	ldr	r3, [sp, #28]
   2202a:	f1c0 001c 	rsb	r0, r0, #28
   2202e:	4480      	add	r8, r0
   22030:	4405      	add	r5, r0
   22032:	4403      	add	r3, r0
   22034:	9307      	str	r3, [sp, #28]
   22036:	f1b8 0f00 	cmp.w	r8, #0
   2203a:	dd05      	ble.n	22048 <_dtoa_r+0x7f8>
   2203c:	4651      	mov	r1, sl
   2203e:	4642      	mov	r2, r8
   22040:	4620      	mov	r0, r4
   22042:	f001 f85d 	bl	23100 <__lshift>
   22046:	4682      	mov	sl, r0
   22048:	9b07      	ldr	r3, [sp, #28]
   2204a:	2b00      	cmp	r3, #0
   2204c:	dd05      	ble.n	2205a <_dtoa_r+0x80a>
   2204e:	4631      	mov	r1, r6
   22050:	461a      	mov	r2, r3
   22052:	4620      	mov	r0, r4
   22054:	f001 f854 	bl	23100 <__lshift>
   22058:	4606      	mov	r6, r0
   2205a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   2205c:	2b00      	cmp	r3, #0
   2205e:	f000 80d3 	beq.w	22208 <_dtoa_r+0x9b8>
   22062:	4631      	mov	r1, r6
   22064:	4650      	mov	r0, sl
   22066:	f001 f89c 	bl	231a2 <__mcmp>
   2206a:	2800      	cmp	r0, #0
   2206c:	f280 80cc 	bge.w	22208 <_dtoa_r+0x9b8>
   22070:	2300      	movs	r3, #0
   22072:	4651      	mov	r1, sl
   22074:	220a      	movs	r2, #10
   22076:	4620      	mov	r0, r4
   22078:	f000 fe97 	bl	22daa <__multadd>
   2207c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2207e:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   22082:	4682      	mov	sl, r0
   22084:	2b00      	cmp	r3, #0
   22086:	f000 81a9 	beq.w	223dc <_dtoa_r+0xb8c>
   2208a:	2300      	movs	r3, #0
   2208c:	4639      	mov	r1, r7
   2208e:	220a      	movs	r2, #10
   22090:	4620      	mov	r0, r4
   22092:	f000 fe8a 	bl	22daa <__multadd>
   22096:	9b04      	ldr	r3, [sp, #16]
   22098:	4607      	mov	r7, r0
   2209a:	2b00      	cmp	r3, #0
   2209c:	dc03      	bgt.n	220a6 <_dtoa_r+0x856>
   2209e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   220a0:	2b02      	cmp	r3, #2
   220a2:	f300 80b9 	bgt.w	22218 <_dtoa_r+0x9c8>
   220a6:	2d00      	cmp	r5, #0
   220a8:	dd05      	ble.n	220b6 <_dtoa_r+0x866>
   220aa:	4639      	mov	r1, r7
   220ac:	462a      	mov	r2, r5
   220ae:	4620      	mov	r0, r4
   220b0:	f001 f826 	bl	23100 <__lshift>
   220b4:	4607      	mov	r7, r0
   220b6:	9b08      	ldr	r3, [sp, #32]
   220b8:	2b00      	cmp	r3, #0
   220ba:	f000 8110 	beq.w	222de <_dtoa_r+0xa8e>
   220be:	6879      	ldr	r1, [r7, #4]
   220c0:	4620      	mov	r0, r4
   220c2:	f000 fe27 	bl	22d14 <_Balloc>
   220c6:	4605      	mov	r5, r0
   220c8:	693a      	ldr	r2, [r7, #16]
   220ca:	f107 010c 	add.w	r1, r7, #12
   220ce:	3202      	adds	r2, #2
   220d0:	0092      	lsls	r2, r2, #2
   220d2:	300c      	adds	r0, #12
   220d4:	f7fc fa25 	bl	1e522 <memcpy>
   220d8:	2201      	movs	r2, #1
   220da:	4629      	mov	r1, r5
   220dc:	4620      	mov	r0, r4
   220de:	f001 f80f 	bl	23100 <__lshift>
   220e2:	9707      	str	r7, [sp, #28]
   220e4:	4607      	mov	r7, r0
   220e6:	9b02      	ldr	r3, [sp, #8]
   220e8:	f8dd 8018 	ldr.w	r8, [sp, #24]
   220ec:	f003 0301 	and.w	r3, r3, #1
   220f0:	9308      	str	r3, [sp, #32]
   220f2:	4631      	mov	r1, r6
   220f4:	4650      	mov	r0, sl
   220f6:	f7ff fb1f 	bl	21738 <quorem>
   220fa:	9907      	ldr	r1, [sp, #28]
   220fc:	4605      	mov	r5, r0
   220fe:	f100 0930 	add.w	r9, r0, #48	; 0x30
   22102:	4650      	mov	r0, sl
   22104:	f001 f84d 	bl	231a2 <__mcmp>
   22108:	463a      	mov	r2, r7
   2210a:	9002      	str	r0, [sp, #8]
   2210c:	4631      	mov	r1, r6
   2210e:	4620      	mov	r0, r4
   22110:	f001 f861 	bl	231d6 <__mdiff>
   22114:	68c3      	ldr	r3, [r0, #12]
   22116:	4602      	mov	r2, r0
   22118:	2b00      	cmp	r3, #0
   2211a:	f040 80e2 	bne.w	222e2 <_dtoa_r+0xa92>
   2211e:	4601      	mov	r1, r0
   22120:	9009      	str	r0, [sp, #36]	; 0x24
   22122:	4650      	mov	r0, sl
   22124:	f001 f83d 	bl	231a2 <__mcmp>
   22128:	4603      	mov	r3, r0
   2212a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   2212c:	4611      	mov	r1, r2
   2212e:	4620      	mov	r0, r4
   22130:	9309      	str	r3, [sp, #36]	; 0x24
   22132:	f000 fe23 	bl	22d7c <_Bfree>
   22136:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22138:	2b00      	cmp	r3, #0
   2213a:	f040 80d4 	bne.w	222e6 <_dtoa_r+0xa96>
   2213e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   22140:	2a00      	cmp	r2, #0
   22142:	f040 80d0 	bne.w	222e6 <_dtoa_r+0xa96>
   22146:	9a08      	ldr	r2, [sp, #32]
   22148:	2a00      	cmp	r2, #0
   2214a:	f040 80cc 	bne.w	222e6 <_dtoa_r+0xa96>
   2214e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   22152:	f000 80e8 	beq.w	22326 <_dtoa_r+0xad6>
   22156:	9b02      	ldr	r3, [sp, #8]
   22158:	2b00      	cmp	r3, #0
   2215a:	dd01      	ble.n	22160 <_dtoa_r+0x910>
   2215c:	f105 0931 	add.w	r9, r5, #49	; 0x31
   22160:	f108 0501 	add.w	r5, r8, #1
   22164:	f888 9000 	strb.w	r9, [r8]
   22168:	e06b      	b.n	22242 <_dtoa_r+0x9f2>
   2216a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   2216c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   22170:	e6f7      	b.n	21f62 <_dtoa_r+0x712>
   22172:	9b08      	ldr	r3, [sp, #32]
   22174:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   22178:	42b3      	cmp	r3, r6
   2217a:	bfb7      	itett	lt
   2217c:	9b08      	ldrlt	r3, [sp, #32]
   2217e:	1b9e      	subge	r6, r3, r6
   22180:	1af2      	sublt	r2, r6, r3
   22182:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   22184:	bfbf      	itttt	lt
   22186:	9608      	strlt	r6, [sp, #32]
   22188:	189b      	addlt	r3, r3, r2
   2218a:	930c      	strlt	r3, [sp, #48]	; 0x30
   2218c:	2600      	movlt	r6, #0
   2218e:	f1b9 0f00 	cmp.w	r9, #0
   22192:	bfb9      	ittee	lt
   22194:	eba8 0509 	sublt.w	r5, r8, r9
   22198:	2300      	movlt	r3, #0
   2219a:	4645      	movge	r5, r8
   2219c:	464b      	movge	r3, r9
   2219e:	e6e2      	b.n	21f66 <_dtoa_r+0x716>
   221a0:	9e08      	ldr	r6, [sp, #32]
   221a2:	4645      	mov	r5, r8
   221a4:	9f09      	ldr	r7, [sp, #36]	; 0x24
   221a6:	e6e7      	b.n	21f78 <_dtoa_r+0x728>
   221a8:	9a08      	ldr	r2, [sp, #32]
   221aa:	e710      	b.n	21fce <_dtoa_r+0x77e>
   221ac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   221ae:	2b01      	cmp	r3, #1
   221b0:	dc18      	bgt.n	221e4 <_dtoa_r+0x994>
   221b2:	9b02      	ldr	r3, [sp, #8]
   221b4:	b9b3      	cbnz	r3, 221e4 <_dtoa_r+0x994>
   221b6:	9b03      	ldr	r3, [sp, #12]
   221b8:	f3c3 0313 	ubfx	r3, r3, #0, #20
   221bc:	b9a3      	cbnz	r3, 221e8 <_dtoa_r+0x998>
   221be:	9b03      	ldr	r3, [sp, #12]
   221c0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   221c4:	0d1b      	lsrs	r3, r3, #20
   221c6:	051b      	lsls	r3, r3, #20
   221c8:	b12b      	cbz	r3, 221d6 <_dtoa_r+0x986>
   221ca:	9b07      	ldr	r3, [sp, #28]
   221cc:	f108 0801 	add.w	r8, r8, #1
   221d0:	3301      	adds	r3, #1
   221d2:	9307      	str	r3, [sp, #28]
   221d4:	2301      	movs	r3, #1
   221d6:	9308      	str	r3, [sp, #32]
   221d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   221da:	2b00      	cmp	r3, #0
   221dc:	f47f af11 	bne.w	22002 <_dtoa_r+0x7b2>
   221e0:	2001      	movs	r0, #1
   221e2:	e716      	b.n	22012 <_dtoa_r+0x7c2>
   221e4:	2300      	movs	r3, #0
   221e6:	e7f6      	b.n	221d6 <_dtoa_r+0x986>
   221e8:	9b02      	ldr	r3, [sp, #8]
   221ea:	e7f4      	b.n	221d6 <_dtoa_r+0x986>
   221ec:	f43f af23 	beq.w	22036 <_dtoa_r+0x7e6>
   221f0:	9a07      	ldr	r2, [sp, #28]
   221f2:	331c      	adds	r3, #28
   221f4:	441a      	add	r2, r3
   221f6:	4498      	add	r8, r3
   221f8:	441d      	add	r5, r3
   221fa:	4613      	mov	r3, r2
   221fc:	e71a      	b.n	22034 <_dtoa_r+0x7e4>
   221fe:	4603      	mov	r3, r0
   22200:	e7f6      	b.n	221f0 <_dtoa_r+0x9a0>
   22202:	bf00      	nop
   22204:	40240000 	.word	0x40240000
   22208:	f1b9 0f00 	cmp.w	r9, #0
   2220c:	dc33      	bgt.n	22276 <_dtoa_r+0xa26>
   2220e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   22210:	2b02      	cmp	r3, #2
   22212:	dd30      	ble.n	22276 <_dtoa_r+0xa26>
   22214:	f8cd 9010 	str.w	r9, [sp, #16]
   22218:	9b04      	ldr	r3, [sp, #16]
   2221a:	b963      	cbnz	r3, 22236 <_dtoa_r+0x9e6>
   2221c:	4631      	mov	r1, r6
   2221e:	2205      	movs	r2, #5
   22220:	4620      	mov	r0, r4
   22222:	f000 fdc2 	bl	22daa <__multadd>
   22226:	4601      	mov	r1, r0
   22228:	4606      	mov	r6, r0
   2222a:	4650      	mov	r0, sl
   2222c:	f000 ffb9 	bl	231a2 <__mcmp>
   22230:	2800      	cmp	r0, #0
   22232:	f73f ad5c 	bgt.w	21cee <_dtoa_r+0x49e>
   22236:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   22238:	9d06      	ldr	r5, [sp, #24]
   2223a:	ea6f 0b03 	mvn.w	fp, r3
   2223e:	2300      	movs	r3, #0
   22240:	9307      	str	r3, [sp, #28]
   22242:	4631      	mov	r1, r6
   22244:	4620      	mov	r0, r4
   22246:	f000 fd99 	bl	22d7c <_Bfree>
   2224a:	2f00      	cmp	r7, #0
   2224c:	f43f ae4b 	beq.w	21ee6 <_dtoa_r+0x696>
   22250:	9b07      	ldr	r3, [sp, #28]
   22252:	b12b      	cbz	r3, 22260 <_dtoa_r+0xa10>
   22254:	42bb      	cmp	r3, r7
   22256:	d003      	beq.n	22260 <_dtoa_r+0xa10>
   22258:	4619      	mov	r1, r3
   2225a:	4620      	mov	r0, r4
   2225c:	f000 fd8e 	bl	22d7c <_Bfree>
   22260:	4639      	mov	r1, r7
   22262:	4620      	mov	r0, r4
   22264:	f000 fd8a 	bl	22d7c <_Bfree>
   22268:	e63d      	b.n	21ee6 <_dtoa_r+0x696>
   2226a:	2600      	movs	r6, #0
   2226c:	4637      	mov	r7, r6
   2226e:	e7e2      	b.n	22236 <_dtoa_r+0x9e6>
   22270:	46bb      	mov	fp, r7
   22272:	4637      	mov	r7, r6
   22274:	e53b      	b.n	21cee <_dtoa_r+0x49e>
   22276:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22278:	f8cd 9010 	str.w	r9, [sp, #16]
   2227c:	2b00      	cmp	r3, #0
   2227e:	f47f af12 	bne.w	220a6 <_dtoa_r+0x856>
   22282:	9d06      	ldr	r5, [sp, #24]
   22284:	4631      	mov	r1, r6
   22286:	4650      	mov	r0, sl
   22288:	f7ff fa56 	bl	21738 <quorem>
   2228c:	9b06      	ldr	r3, [sp, #24]
   2228e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   22292:	f805 9b01 	strb.w	r9, [r5], #1
   22296:	9a04      	ldr	r2, [sp, #16]
   22298:	1aeb      	subs	r3, r5, r3
   2229a:	429a      	cmp	r2, r3
   2229c:	f300 8081 	bgt.w	223a2 <_dtoa_r+0xb52>
   222a0:	9b06      	ldr	r3, [sp, #24]
   222a2:	2a01      	cmp	r2, #1
   222a4:	bfac      	ite	ge
   222a6:	189b      	addge	r3, r3, r2
   222a8:	3301      	addlt	r3, #1
   222aa:	4698      	mov	r8, r3
   222ac:	2300      	movs	r3, #0
   222ae:	9307      	str	r3, [sp, #28]
   222b0:	4651      	mov	r1, sl
   222b2:	2201      	movs	r2, #1
   222b4:	4620      	mov	r0, r4
   222b6:	f000 ff23 	bl	23100 <__lshift>
   222ba:	4631      	mov	r1, r6
   222bc:	4682      	mov	sl, r0
   222be:	f000 ff70 	bl	231a2 <__mcmp>
   222c2:	2800      	cmp	r0, #0
   222c4:	dc34      	bgt.n	22330 <_dtoa_r+0xae0>
   222c6:	d102      	bne.n	222ce <_dtoa_r+0xa7e>
   222c8:	f019 0f01 	tst.w	r9, #1
   222cc:	d130      	bne.n	22330 <_dtoa_r+0xae0>
   222ce:	4645      	mov	r5, r8
   222d0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   222d4:	1e6a      	subs	r2, r5, #1
   222d6:	2b30      	cmp	r3, #48	; 0x30
   222d8:	d1b3      	bne.n	22242 <_dtoa_r+0x9f2>
   222da:	4615      	mov	r5, r2
   222dc:	e7f8      	b.n	222d0 <_dtoa_r+0xa80>
   222de:	4638      	mov	r0, r7
   222e0:	e6ff      	b.n	220e2 <_dtoa_r+0x892>
   222e2:	2301      	movs	r3, #1
   222e4:	e722      	b.n	2212c <_dtoa_r+0x8dc>
   222e6:	9a02      	ldr	r2, [sp, #8]
   222e8:	2a00      	cmp	r2, #0
   222ea:	db04      	blt.n	222f6 <_dtoa_r+0xaa6>
   222ec:	d128      	bne.n	22340 <_dtoa_r+0xaf0>
   222ee:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   222f0:	bb32      	cbnz	r2, 22340 <_dtoa_r+0xaf0>
   222f2:	9a08      	ldr	r2, [sp, #32]
   222f4:	bb22      	cbnz	r2, 22340 <_dtoa_r+0xaf0>
   222f6:	2b00      	cmp	r3, #0
   222f8:	f77f af32 	ble.w	22160 <_dtoa_r+0x910>
   222fc:	4651      	mov	r1, sl
   222fe:	2201      	movs	r2, #1
   22300:	4620      	mov	r0, r4
   22302:	f000 fefd 	bl	23100 <__lshift>
   22306:	4631      	mov	r1, r6
   22308:	4682      	mov	sl, r0
   2230a:	f000 ff4a 	bl	231a2 <__mcmp>
   2230e:	2800      	cmp	r0, #0
   22310:	dc05      	bgt.n	2231e <_dtoa_r+0xace>
   22312:	f47f af25 	bne.w	22160 <_dtoa_r+0x910>
   22316:	f019 0f01 	tst.w	r9, #1
   2231a:	f43f af21 	beq.w	22160 <_dtoa_r+0x910>
   2231e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   22322:	f47f af1b 	bne.w	2215c <_dtoa_r+0x90c>
   22326:	2339      	movs	r3, #57	; 0x39
   22328:	f108 0801 	add.w	r8, r8, #1
   2232c:	f808 3c01 	strb.w	r3, [r8, #-1]
   22330:	4645      	mov	r5, r8
   22332:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   22336:	1e6a      	subs	r2, r5, #1
   22338:	2b39      	cmp	r3, #57	; 0x39
   2233a:	d03a      	beq.n	223b2 <_dtoa_r+0xb62>
   2233c:	3301      	adds	r3, #1
   2233e:	e03f      	b.n	223c0 <_dtoa_r+0xb70>
   22340:	2b00      	cmp	r3, #0
   22342:	f108 0501 	add.w	r5, r8, #1
   22346:	dd05      	ble.n	22354 <_dtoa_r+0xb04>
   22348:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   2234c:	d0eb      	beq.n	22326 <_dtoa_r+0xad6>
   2234e:	f109 0901 	add.w	r9, r9, #1
   22352:	e707      	b.n	22164 <_dtoa_r+0x914>
   22354:	9b06      	ldr	r3, [sp, #24]
   22356:	9a04      	ldr	r2, [sp, #16]
   22358:	1aeb      	subs	r3, r5, r3
   2235a:	4293      	cmp	r3, r2
   2235c:	46a8      	mov	r8, r5
   2235e:	f805 9c01 	strb.w	r9, [r5, #-1]
   22362:	d0a5      	beq.n	222b0 <_dtoa_r+0xa60>
   22364:	4651      	mov	r1, sl
   22366:	2300      	movs	r3, #0
   22368:	220a      	movs	r2, #10
   2236a:	4620      	mov	r0, r4
   2236c:	f000 fd1d 	bl	22daa <__multadd>
   22370:	9b07      	ldr	r3, [sp, #28]
   22372:	4682      	mov	sl, r0
   22374:	42bb      	cmp	r3, r7
   22376:	f04f 020a 	mov.w	r2, #10
   2237a:	f04f 0300 	mov.w	r3, #0
   2237e:	9907      	ldr	r1, [sp, #28]
   22380:	4620      	mov	r0, r4
   22382:	d104      	bne.n	2238e <_dtoa_r+0xb3e>
   22384:	f000 fd11 	bl	22daa <__multadd>
   22388:	9007      	str	r0, [sp, #28]
   2238a:	4607      	mov	r7, r0
   2238c:	e6b1      	b.n	220f2 <_dtoa_r+0x8a2>
   2238e:	f000 fd0c 	bl	22daa <__multadd>
   22392:	2300      	movs	r3, #0
   22394:	9007      	str	r0, [sp, #28]
   22396:	220a      	movs	r2, #10
   22398:	4639      	mov	r1, r7
   2239a:	4620      	mov	r0, r4
   2239c:	f000 fd05 	bl	22daa <__multadd>
   223a0:	e7f3      	b.n	2238a <_dtoa_r+0xb3a>
   223a2:	4651      	mov	r1, sl
   223a4:	2300      	movs	r3, #0
   223a6:	220a      	movs	r2, #10
   223a8:	4620      	mov	r0, r4
   223aa:	f000 fcfe 	bl	22daa <__multadd>
   223ae:	4682      	mov	sl, r0
   223b0:	e768      	b.n	22284 <_dtoa_r+0xa34>
   223b2:	9b06      	ldr	r3, [sp, #24]
   223b4:	4293      	cmp	r3, r2
   223b6:	d105      	bne.n	223c4 <_dtoa_r+0xb74>
   223b8:	2331      	movs	r3, #49	; 0x31
   223ba:	9a06      	ldr	r2, [sp, #24]
   223bc:	f10b 0b01 	add.w	fp, fp, #1
   223c0:	7013      	strb	r3, [r2, #0]
   223c2:	e73e      	b.n	22242 <_dtoa_r+0x9f2>
   223c4:	4615      	mov	r5, r2
   223c6:	e7b4      	b.n	22332 <_dtoa_r+0xae2>
   223c8:	4b09      	ldr	r3, [pc, #36]	; (223f0 <_dtoa_r+0xba0>)
   223ca:	f7ff baa3 	b.w	21914 <_dtoa_r+0xc4>
   223ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
   223d0:	2b00      	cmp	r3, #0
   223d2:	f47f aa7d 	bne.w	218d0 <_dtoa_r+0x80>
   223d6:	4b07      	ldr	r3, [pc, #28]	; (223f4 <_dtoa_r+0xba4>)
   223d8:	f7ff ba9c 	b.w	21914 <_dtoa_r+0xc4>
   223dc:	9b04      	ldr	r3, [sp, #16]
   223de:	2b00      	cmp	r3, #0
   223e0:	f73f af4f 	bgt.w	22282 <_dtoa_r+0xa32>
   223e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   223e6:	2b02      	cmp	r3, #2
   223e8:	f77f af4b 	ble.w	22282 <_dtoa_r+0xa32>
   223ec:	e714      	b.n	22218 <_dtoa_r+0x9c8>
   223ee:	bf00      	nop
   223f0:	00024ace 	.word	0x00024ace
   223f4:	0002768e 	.word	0x0002768e

000223f8 <__sflags>:
__sflags():
   223f8:	780b      	ldrb	r3, [r1, #0]
   223fa:	b530      	push	{r4, r5, lr}
   223fc:	2b72      	cmp	r3, #114	; 0x72
   223fe:	d013      	beq.n	22428 <__sflags+0x30>
   22400:	2b77      	cmp	r3, #119	; 0x77
   22402:	d007      	beq.n	22414 <__sflags+0x1c>
   22404:	2b61      	cmp	r3, #97	; 0x61
   22406:	d113      	bne.n	22430 <__sflags+0x38>
   22408:	f44f 7402 	mov.w	r4, #520	; 0x208
   2240c:	2301      	movs	r3, #1
   2240e:	f44f 7084 	mov.w	r0, #264	; 0x108
   22412:	e003      	b.n	2241c <__sflags+0x24>
   22414:	f44f 64c0 	mov.w	r4, #1536	; 0x600
   22418:	2301      	movs	r3, #1
   2241a:	2008      	movs	r0, #8
   2241c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
   22420:	b955      	cbnz	r5, 22438 <__sflags+0x40>
   22422:	4323      	orrs	r3, r4
   22424:	6013      	str	r3, [r2, #0]
   22426:	bd30      	pop	{r4, r5, pc}
   22428:	2400      	movs	r4, #0
   2242a:	2004      	movs	r0, #4
   2242c:	4623      	mov	r3, r4
   2242e:	e7f5      	b.n	2241c <__sflags+0x24>
   22430:	2316      	movs	r3, #22
   22432:	6003      	str	r3, [r0, #0]
   22434:	2000      	movs	r0, #0
   22436:	bd30      	pop	{r4, r5, pc}
   22438:	2d62      	cmp	r5, #98	; 0x62
   2243a:	d00c      	beq.n	22456 <__sflags+0x5e>
   2243c:	2d78      	cmp	r5, #120	; 0x78
   2243e:	d00d      	beq.n	2245c <__sflags+0x64>
   22440:	2d2b      	cmp	r5, #43	; 0x2b
   22442:	d1eb      	bne.n	2241c <__sflags+0x24>
   22444:	f020 001c 	bic.w	r0, r0, #28
   22448:	f023 0303 	bic.w	r3, r3, #3
   2244c:	f040 0010 	orr.w	r0, r0, #16
   22450:	f043 0302 	orr.w	r3, r3, #2
   22454:	e7e2      	b.n	2241c <__sflags+0x24>
   22456:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   2245a:	e7df      	b.n	2241c <__sflags+0x24>
   2245c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   22460:	e7dc      	b.n	2241c <__sflags+0x24>
   22462:	Address 0x0000000000022462 is out of bounds.


00022464 <_fstat_r>:
_fstat_r():
   22464:	b538      	push	{r3, r4, r5, lr}
   22466:	2300      	movs	r3, #0
   22468:	4c06      	ldr	r4, [pc, #24]	; (22484 <_fstat_r+0x20>)
   2246a:	4605      	mov	r5, r0
   2246c:	4608      	mov	r0, r1
   2246e:	4611      	mov	r1, r2
   22470:	6023      	str	r3, [r4, #0]
   22472:	f7f4 fd19 	bl	16ea8 <_fstat>
   22476:	1c43      	adds	r3, r0, #1
   22478:	d102      	bne.n	22480 <_fstat_r+0x1c>
   2247a:	6823      	ldr	r3, [r4, #0]
   2247c:	b103      	cbz	r3, 22480 <_fstat_r+0x1c>
   2247e:	602b      	str	r3, [r5, #0]
   22480:	bd38      	pop	{r3, r4, r5, pc}
   22482:	bf00      	nop
   22484:	2007c8fc 	.word	0x2007c8fc

00022488 <rshift>:
rshift():
   22488:	b5f0      	push	{r4, r5, r6, r7, lr}
   2248a:	6906      	ldr	r6, [r0, #16]
   2248c:	114b      	asrs	r3, r1, #5
   2248e:	42b3      	cmp	r3, r6
   22490:	f100 0514 	add.w	r5, r0, #20
   22494:	da2b      	bge.n	224ee <rshift+0x66>
   22496:	f011 011f 	ands.w	r1, r1, #31
   2249a:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   2249e:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   224a2:	d108      	bne.n	224b6 <rshift+0x2e>
   224a4:	4629      	mov	r1, r5
   224a6:	42b2      	cmp	r2, r6
   224a8:	460b      	mov	r3, r1
   224aa:	d210      	bcs.n	224ce <rshift+0x46>
   224ac:	f852 3b04 	ldr.w	r3, [r2], #4
   224b0:	f841 3b04 	str.w	r3, [r1], #4
   224b4:	e7f7      	b.n	224a6 <rshift+0x1e>
   224b6:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   224ba:	462b      	mov	r3, r5
   224bc:	f1c1 0e20 	rsb	lr, r1, #32
   224c0:	3204      	adds	r2, #4
   224c2:	40cc      	lsrs	r4, r1
   224c4:	42b2      	cmp	r2, r6
   224c6:	d308      	bcc.n	224da <rshift+0x52>
   224c8:	601c      	str	r4, [r3, #0]
   224ca:	b104      	cbz	r4, 224ce <rshift+0x46>
   224cc:	3304      	adds	r3, #4
   224ce:	1b5b      	subs	r3, r3, r5
   224d0:	109b      	asrs	r3, r3, #2
   224d2:	6103      	str	r3, [r0, #16]
   224d4:	b903      	cbnz	r3, 224d8 <rshift+0x50>
   224d6:	6143      	str	r3, [r0, #20]
   224d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   224da:	6817      	ldr	r7, [r2, #0]
   224dc:	fa07 f70e 	lsl.w	r7, r7, lr
   224e0:	433c      	orrs	r4, r7
   224e2:	f843 4b04 	str.w	r4, [r3], #4
   224e6:	f852 4b04 	ldr.w	r4, [r2], #4
   224ea:	40cc      	lsrs	r4, r1
   224ec:	e7ea      	b.n	224c4 <rshift+0x3c>
   224ee:	462b      	mov	r3, r5
   224f0:	e7ed      	b.n	224ce <rshift+0x46>

000224f2 <__hexdig_fun>:
__hexdig_fun():
   224f2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   224f6:	2b09      	cmp	r3, #9
   224f8:	d802      	bhi.n	22500 <__hexdig_fun+0xe>
   224fa:	3820      	subs	r0, #32
   224fc:	b2c0      	uxtb	r0, r0
   224fe:	4770      	bx	lr
   22500:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   22504:	2b05      	cmp	r3, #5
   22506:	d801      	bhi.n	2250c <__hexdig_fun+0x1a>
   22508:	3847      	subs	r0, #71	; 0x47
   2250a:	e7f7      	b.n	224fc <__hexdig_fun+0xa>
   2250c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   22510:	2b05      	cmp	r3, #5
   22512:	d801      	bhi.n	22518 <__hexdig_fun+0x26>
   22514:	3827      	subs	r0, #39	; 0x27
   22516:	e7f1      	b.n	224fc <__hexdig_fun+0xa>
   22518:	2000      	movs	r0, #0
   2251a:	4770      	bx	lr

0002251c <__gethex>:
__gethex():
   2251c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22520:	b08b      	sub	sp, #44	; 0x2c
   22522:	9002      	str	r0, [sp, #8]
   22524:	9816      	ldr	r0, [sp, #88]	; 0x58
   22526:	468a      	mov	sl, r1
   22528:	4690      	mov	r8, r2
   2252a:	9306      	str	r3, [sp, #24]
   2252c:	f000 fbd0 	bl	22cd0 <__localeconv_l>
   22530:	6803      	ldr	r3, [r0, #0]
   22532:	f04f 0b00 	mov.w	fp, #0
   22536:	4618      	mov	r0, r3
   22538:	9303      	str	r3, [sp, #12]
   2253a:	f7fd fd71 	bl	20020 <strlen>
   2253e:	9b03      	ldr	r3, [sp, #12]
   22540:	9001      	str	r0, [sp, #4]
   22542:	4403      	add	r3, r0
   22544:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   22548:	9307      	str	r3, [sp, #28]
   2254a:	f8da 3000 	ldr.w	r3, [sl]
   2254e:	3302      	adds	r3, #2
   22550:	461f      	mov	r7, r3
   22552:	f813 0b01 	ldrb.w	r0, [r3], #1
   22556:	2830      	cmp	r0, #48	; 0x30
   22558:	d06c      	beq.n	22634 <__gethex+0x118>
   2255a:	f7ff ffca 	bl	224f2 <__hexdig_fun>
   2255e:	4604      	mov	r4, r0
   22560:	2800      	cmp	r0, #0
   22562:	d16a      	bne.n	2263a <__gethex+0x11e>
   22564:	9a01      	ldr	r2, [sp, #4]
   22566:	9903      	ldr	r1, [sp, #12]
   22568:	4638      	mov	r0, r7
   2256a:	f7fd fd88 	bl	2007e <strncmp>
   2256e:	2800      	cmp	r0, #0
   22570:	d166      	bne.n	22640 <__gethex+0x124>
   22572:	9b01      	ldr	r3, [sp, #4]
   22574:	5cf8      	ldrb	r0, [r7, r3]
   22576:	18fe      	adds	r6, r7, r3
   22578:	f7ff ffbb 	bl	224f2 <__hexdig_fun>
   2257c:	2800      	cmp	r0, #0
   2257e:	d062      	beq.n	22646 <__gethex+0x12a>
   22580:	4633      	mov	r3, r6
   22582:	7818      	ldrb	r0, [r3, #0]
   22584:	461f      	mov	r7, r3
   22586:	2830      	cmp	r0, #48	; 0x30
   22588:	f103 0301 	add.w	r3, r3, #1
   2258c:	d0f9      	beq.n	22582 <__gethex+0x66>
   2258e:	f7ff ffb0 	bl	224f2 <__hexdig_fun>
   22592:	fab0 f580 	clz	r5, r0
   22596:	4634      	mov	r4, r6
   22598:	f04f 0b01 	mov.w	fp, #1
   2259c:	096d      	lsrs	r5, r5, #5
   2259e:	463a      	mov	r2, r7
   225a0:	4616      	mov	r6, r2
   225a2:	7830      	ldrb	r0, [r6, #0]
   225a4:	3201      	adds	r2, #1
   225a6:	f7ff ffa4 	bl	224f2 <__hexdig_fun>
   225aa:	2800      	cmp	r0, #0
   225ac:	d1f8      	bne.n	225a0 <__gethex+0x84>
   225ae:	9a01      	ldr	r2, [sp, #4]
   225b0:	9903      	ldr	r1, [sp, #12]
   225b2:	4630      	mov	r0, r6
   225b4:	f7fd fd63 	bl	2007e <strncmp>
   225b8:	b950      	cbnz	r0, 225d0 <__gethex+0xb4>
   225ba:	b954      	cbnz	r4, 225d2 <__gethex+0xb6>
   225bc:	9b01      	ldr	r3, [sp, #4]
   225be:	18f4      	adds	r4, r6, r3
   225c0:	4622      	mov	r2, r4
   225c2:	4616      	mov	r6, r2
   225c4:	7830      	ldrb	r0, [r6, #0]
   225c6:	3201      	adds	r2, #1
   225c8:	f7ff ff93 	bl	224f2 <__hexdig_fun>
   225cc:	2800      	cmp	r0, #0
   225ce:	d1f8      	bne.n	225c2 <__gethex+0xa6>
   225d0:	b10c      	cbz	r4, 225d6 <__gethex+0xba>
   225d2:	1ba4      	subs	r4, r4, r6
   225d4:	00a4      	lsls	r4, r4, #2
   225d6:	7833      	ldrb	r3, [r6, #0]
   225d8:	2b50      	cmp	r3, #80	; 0x50
   225da:	d001      	beq.n	225e0 <__gethex+0xc4>
   225dc:	2b70      	cmp	r3, #112	; 0x70
   225de:	d140      	bne.n	22662 <__gethex+0x146>
   225e0:	7873      	ldrb	r3, [r6, #1]
   225e2:	2b2b      	cmp	r3, #43	; 0x2b
   225e4:	d035      	beq.n	22652 <__gethex+0x136>
   225e6:	2b2d      	cmp	r3, #45	; 0x2d
   225e8:	d02f      	beq.n	2264a <__gethex+0x12e>
   225ea:	f04f 0900 	mov.w	r9, #0
   225ee:	1c71      	adds	r1, r6, #1
   225f0:	7808      	ldrb	r0, [r1, #0]
   225f2:	f7ff ff7e 	bl	224f2 <__hexdig_fun>
   225f6:	1e43      	subs	r3, r0, #1
   225f8:	b2db      	uxtb	r3, r3
   225fa:	2b18      	cmp	r3, #24
   225fc:	d831      	bhi.n	22662 <__gethex+0x146>
   225fe:	f1a0 0210 	sub.w	r2, r0, #16
   22602:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   22606:	f7ff ff74 	bl	224f2 <__hexdig_fun>
   2260a:	1e43      	subs	r3, r0, #1
   2260c:	b2db      	uxtb	r3, r3
   2260e:	2b18      	cmp	r3, #24
   22610:	d922      	bls.n	22658 <__gethex+0x13c>
   22612:	f1b9 0f00 	cmp.w	r9, #0
   22616:	d000      	beq.n	2261a <__gethex+0xfe>
   22618:	4252      	negs	r2, r2
   2261a:	4414      	add	r4, r2
   2261c:	f8ca 1000 	str.w	r1, [sl]
   22620:	b30d      	cbz	r5, 22666 <__gethex+0x14a>
   22622:	f1bb 0f00 	cmp.w	fp, #0
   22626:	bf14      	ite	ne
   22628:	2700      	movne	r7, #0
   2262a:	2706      	moveq	r7, #6
   2262c:	4638      	mov	r0, r7
   2262e:	b00b      	add	sp, #44	; 0x2c
   22630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22634:	f10b 0b01 	add.w	fp, fp, #1
   22638:	e78a      	b.n	22550 <__gethex+0x34>
   2263a:	2500      	movs	r5, #0
   2263c:	462c      	mov	r4, r5
   2263e:	e7ae      	b.n	2259e <__gethex+0x82>
   22640:	463e      	mov	r6, r7
   22642:	2501      	movs	r5, #1
   22644:	e7c7      	b.n	225d6 <__gethex+0xba>
   22646:	4604      	mov	r4, r0
   22648:	e7fb      	b.n	22642 <__gethex+0x126>
   2264a:	f04f 0901 	mov.w	r9, #1
   2264e:	1cb1      	adds	r1, r6, #2
   22650:	e7ce      	b.n	225f0 <__gethex+0xd4>
   22652:	f04f 0900 	mov.w	r9, #0
   22656:	e7fa      	b.n	2264e <__gethex+0x132>
   22658:	230a      	movs	r3, #10
   2265a:	fb03 0202 	mla	r2, r3, r2, r0
   2265e:	3a10      	subs	r2, #16
   22660:	e7cf      	b.n	22602 <__gethex+0xe6>
   22662:	4631      	mov	r1, r6
   22664:	e7da      	b.n	2261c <__gethex+0x100>
   22666:	4629      	mov	r1, r5
   22668:	1bf3      	subs	r3, r6, r7
   2266a:	3b01      	subs	r3, #1
   2266c:	2b07      	cmp	r3, #7
   2266e:	dc49      	bgt.n	22704 <__gethex+0x1e8>
   22670:	9802      	ldr	r0, [sp, #8]
   22672:	f000 fb4f 	bl	22d14 <_Balloc>
   22676:	f04f 0b00 	mov.w	fp, #0
   2267a:	4605      	mov	r5, r0
   2267c:	46da      	mov	sl, fp
   2267e:	9b01      	ldr	r3, [sp, #4]
   22680:	f100 0914 	add.w	r9, r0, #20
   22684:	f1c3 0301 	rsb	r3, r3, #1
   22688:	f8cd 9010 	str.w	r9, [sp, #16]
   2268c:	9308      	str	r3, [sp, #32]
   2268e:	42b7      	cmp	r7, r6
   22690:	d33b      	bcc.n	2270a <__gethex+0x1ee>
   22692:	9804      	ldr	r0, [sp, #16]
   22694:	f840 ab04 	str.w	sl, [r0], #4
   22698:	eba0 0009 	sub.w	r0, r0, r9
   2269c:	1080      	asrs	r0, r0, #2
   2269e:	6128      	str	r0, [r5, #16]
   226a0:	0147      	lsls	r7, r0, #5
   226a2:	4650      	mov	r0, sl
   226a4:	f000 fbfa 	bl	22e9c <__hi0bits>
   226a8:	f8d8 6000 	ldr.w	r6, [r8]
   226ac:	1a3f      	subs	r7, r7, r0
   226ae:	42b7      	cmp	r7, r6
   226b0:	dd64      	ble.n	2277c <__gethex+0x260>
   226b2:	1bbf      	subs	r7, r7, r6
   226b4:	4639      	mov	r1, r7
   226b6:	4628      	mov	r0, r5
   226b8:	f000 fef3 	bl	234a2 <__any_on>
   226bc:	4682      	mov	sl, r0
   226be:	b178      	cbz	r0, 226e0 <__gethex+0x1c4>
   226c0:	f04f 0a01 	mov.w	sl, #1
   226c4:	1e7b      	subs	r3, r7, #1
   226c6:	1159      	asrs	r1, r3, #5
   226c8:	f003 021f 	and.w	r2, r3, #31
   226cc:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   226d0:	fa0a f202 	lsl.w	r2, sl, r2
   226d4:	420a      	tst	r2, r1
   226d6:	d003      	beq.n	226e0 <__gethex+0x1c4>
   226d8:	4553      	cmp	r3, sl
   226da:	dc46      	bgt.n	2276a <__gethex+0x24e>
   226dc:	f04f 0a02 	mov.w	sl, #2
   226e0:	4639      	mov	r1, r7
   226e2:	4628      	mov	r0, r5
   226e4:	f7ff fed0 	bl	22488 <rshift>
   226e8:	443c      	add	r4, r7
   226ea:	f8d8 3008 	ldr.w	r3, [r8, #8]
   226ee:	429c      	cmp	r4, r3
   226f0:	dd52      	ble.n	22798 <__gethex+0x27c>
   226f2:	4629      	mov	r1, r5
   226f4:	9802      	ldr	r0, [sp, #8]
   226f6:	f000 fb41 	bl	22d7c <_Bfree>
   226fa:	2300      	movs	r3, #0
   226fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
   226fe:	27a3      	movs	r7, #163	; 0xa3
   22700:	6013      	str	r3, [r2, #0]
   22702:	e793      	b.n	2262c <__gethex+0x110>
   22704:	3101      	adds	r1, #1
   22706:	105b      	asrs	r3, r3, #1
   22708:	e7b0      	b.n	2266c <__gethex+0x150>
   2270a:	1e73      	subs	r3, r6, #1
   2270c:	9305      	str	r3, [sp, #20]
   2270e:	9a07      	ldr	r2, [sp, #28]
   22710:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   22714:	4293      	cmp	r3, r2
   22716:	d018      	beq.n	2274a <__gethex+0x22e>
   22718:	f1bb 0f20 	cmp.w	fp, #32
   2271c:	d107      	bne.n	2272e <__gethex+0x212>
   2271e:	9b04      	ldr	r3, [sp, #16]
   22720:	f8c3 a000 	str.w	sl, [r3]
   22724:	f04f 0a00 	mov.w	sl, #0
   22728:	46d3      	mov	fp, sl
   2272a:	3304      	adds	r3, #4
   2272c:	9304      	str	r3, [sp, #16]
   2272e:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   22732:	f7ff fede 	bl	224f2 <__hexdig_fun>
   22736:	f000 000f 	and.w	r0, r0, #15
   2273a:	fa00 f00b 	lsl.w	r0, r0, fp
   2273e:	ea4a 0a00 	orr.w	sl, sl, r0
   22742:	f10b 0b04 	add.w	fp, fp, #4
   22746:	9b05      	ldr	r3, [sp, #20]
   22748:	e00d      	b.n	22766 <__gethex+0x24a>
   2274a:	9b05      	ldr	r3, [sp, #20]
   2274c:	9a08      	ldr	r2, [sp, #32]
   2274e:	4413      	add	r3, r2
   22750:	429f      	cmp	r7, r3
   22752:	d8e1      	bhi.n	22718 <__gethex+0x1fc>
   22754:	4618      	mov	r0, r3
   22756:	9a01      	ldr	r2, [sp, #4]
   22758:	9903      	ldr	r1, [sp, #12]
   2275a:	9309      	str	r3, [sp, #36]	; 0x24
   2275c:	f7fd fc8f 	bl	2007e <strncmp>
   22760:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22762:	2800      	cmp	r0, #0
   22764:	d1d8      	bne.n	22718 <__gethex+0x1fc>
   22766:	461e      	mov	r6, r3
   22768:	e791      	b.n	2268e <__gethex+0x172>
   2276a:	1eb9      	subs	r1, r7, #2
   2276c:	4628      	mov	r0, r5
   2276e:	f000 fe98 	bl	234a2 <__any_on>
   22772:	2800      	cmp	r0, #0
   22774:	d0b2      	beq.n	226dc <__gethex+0x1c0>
   22776:	f04f 0a03 	mov.w	sl, #3
   2277a:	e7b1      	b.n	226e0 <__gethex+0x1c4>
   2277c:	da09      	bge.n	22792 <__gethex+0x276>
   2277e:	1bf7      	subs	r7, r6, r7
   22780:	4629      	mov	r1, r5
   22782:	463a      	mov	r2, r7
   22784:	9802      	ldr	r0, [sp, #8]
   22786:	f000 fcbb 	bl	23100 <__lshift>
   2278a:	4605      	mov	r5, r0
   2278c:	1be4      	subs	r4, r4, r7
   2278e:	f100 0914 	add.w	r9, r0, #20
   22792:	f04f 0a00 	mov.w	sl, #0
   22796:	e7a8      	b.n	226ea <__gethex+0x1ce>
   22798:	f8d8 0004 	ldr.w	r0, [r8, #4]
   2279c:	4284      	cmp	r4, r0
   2279e:	da6b      	bge.n	22878 <__gethex+0x35c>
   227a0:	1b04      	subs	r4, r0, r4
   227a2:	42a6      	cmp	r6, r4
   227a4:	dc2e      	bgt.n	22804 <__gethex+0x2e8>
   227a6:	f8d8 300c 	ldr.w	r3, [r8, #12]
   227aa:	2b02      	cmp	r3, #2
   227ac:	d022      	beq.n	227f4 <__gethex+0x2d8>
   227ae:	2b03      	cmp	r3, #3
   227b0:	d024      	beq.n	227fc <__gethex+0x2e0>
   227b2:	2b01      	cmp	r3, #1
   227b4:	d115      	bne.n	227e2 <__gethex+0x2c6>
   227b6:	42a6      	cmp	r6, r4
   227b8:	d113      	bne.n	227e2 <__gethex+0x2c6>
   227ba:	2e01      	cmp	r6, #1
   227bc:	dc0b      	bgt.n	227d6 <__gethex+0x2ba>
   227be:	f8d8 3004 	ldr.w	r3, [r8, #4]
   227c2:	9a06      	ldr	r2, [sp, #24]
   227c4:	2762      	movs	r7, #98	; 0x62
   227c6:	6013      	str	r3, [r2, #0]
   227c8:	2301      	movs	r3, #1
   227ca:	612b      	str	r3, [r5, #16]
   227cc:	f8c9 3000 	str.w	r3, [r9]
   227d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   227d2:	601d      	str	r5, [r3, #0]
   227d4:	e72a      	b.n	2262c <__gethex+0x110>
   227d6:	1e71      	subs	r1, r6, #1
   227d8:	4628      	mov	r0, r5
   227da:	f000 fe62 	bl	234a2 <__any_on>
   227de:	2800      	cmp	r0, #0
   227e0:	d1ed      	bne.n	227be <__gethex+0x2a2>
   227e2:	4629      	mov	r1, r5
   227e4:	9802      	ldr	r0, [sp, #8]
   227e6:	f000 fac9 	bl	22d7c <_Bfree>
   227ea:	2300      	movs	r3, #0
   227ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
   227ee:	2750      	movs	r7, #80	; 0x50
   227f0:	6013      	str	r3, [r2, #0]
   227f2:	e71b      	b.n	2262c <__gethex+0x110>
   227f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   227f6:	2b00      	cmp	r3, #0
   227f8:	d0e1      	beq.n	227be <__gethex+0x2a2>
   227fa:	e7f2      	b.n	227e2 <__gethex+0x2c6>
   227fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   227fe:	2b00      	cmp	r3, #0
   22800:	d1dd      	bne.n	227be <__gethex+0x2a2>
   22802:	e7ee      	b.n	227e2 <__gethex+0x2c6>
   22804:	1e67      	subs	r7, r4, #1
   22806:	f1ba 0f00 	cmp.w	sl, #0
   2280a:	d132      	bne.n	22872 <__gethex+0x356>
   2280c:	b127      	cbz	r7, 22818 <__gethex+0x2fc>
   2280e:	4639      	mov	r1, r7
   22810:	4628      	mov	r0, r5
   22812:	f000 fe46 	bl	234a2 <__any_on>
   22816:	4682      	mov	sl, r0
   22818:	2301      	movs	r3, #1
   2281a:	117a      	asrs	r2, r7, #5
   2281c:	f007 071f 	and.w	r7, r7, #31
   22820:	fa03 f707 	lsl.w	r7, r3, r7
   22824:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   22828:	4621      	mov	r1, r4
   2282a:	421f      	tst	r7, r3
   2282c:	f04f 0702 	mov.w	r7, #2
   22830:	4628      	mov	r0, r5
   22832:	bf18      	it	ne
   22834:	f04a 0a02 	orrne.w	sl, sl, #2
   22838:	1b36      	subs	r6, r6, r4
   2283a:	f7ff fe25 	bl	22488 <rshift>
   2283e:	f8d8 4004 	ldr.w	r4, [r8, #4]
   22842:	f1ba 0f00 	cmp.w	sl, #0
   22846:	d045      	beq.n	228d4 <__gethex+0x3b8>
   22848:	f8d8 300c 	ldr.w	r3, [r8, #12]
   2284c:	2b02      	cmp	r3, #2
   2284e:	d015      	beq.n	2287c <__gethex+0x360>
   22850:	2b03      	cmp	r3, #3
   22852:	d017      	beq.n	22884 <__gethex+0x368>
   22854:	2b01      	cmp	r3, #1
   22856:	d109      	bne.n	2286c <__gethex+0x350>
   22858:	f01a 0f02 	tst.w	sl, #2
   2285c:	d006      	beq.n	2286c <__gethex+0x350>
   2285e:	f8d9 3000 	ldr.w	r3, [r9]
   22862:	ea4a 0a03 	orr.w	sl, sl, r3
   22866:	f01a 0f01 	tst.w	sl, #1
   2286a:	d10e      	bne.n	2288a <__gethex+0x36e>
   2286c:	f047 0710 	orr.w	r7, r7, #16
   22870:	e030      	b.n	228d4 <__gethex+0x3b8>
   22872:	f04f 0a01 	mov.w	sl, #1
   22876:	e7cf      	b.n	22818 <__gethex+0x2fc>
   22878:	2701      	movs	r7, #1
   2287a:	e7e2      	b.n	22842 <__gethex+0x326>
   2287c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2287e:	f1c3 0301 	rsb	r3, r3, #1
   22882:	9315      	str	r3, [sp, #84]	; 0x54
   22884:	9b15      	ldr	r3, [sp, #84]	; 0x54
   22886:	2b00      	cmp	r3, #0
   22888:	d0f0      	beq.n	2286c <__gethex+0x350>
   2288a:	2000      	movs	r0, #0
   2288c:	f8d5 9010 	ldr.w	r9, [r5, #16]
   22890:	f105 0314 	add.w	r3, r5, #20
   22894:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   22898:	eb03 010a 	add.w	r1, r3, sl
   2289c:	681a      	ldr	r2, [r3, #0]
   2289e:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   228a2:	d01c      	beq.n	228de <__gethex+0x3c2>
   228a4:	3201      	adds	r2, #1
   228a6:	601a      	str	r2, [r3, #0]
   228a8:	2f02      	cmp	r7, #2
   228aa:	f105 0314 	add.w	r3, r5, #20
   228ae:	d138      	bne.n	22922 <__gethex+0x406>
   228b0:	f8d8 2000 	ldr.w	r2, [r8]
   228b4:	3a01      	subs	r2, #1
   228b6:	4296      	cmp	r6, r2
   228b8:	d10a      	bne.n	228d0 <__gethex+0x3b4>
   228ba:	2201      	movs	r2, #1
   228bc:	1171      	asrs	r1, r6, #5
   228be:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   228c2:	f006 061f 	and.w	r6, r6, #31
   228c6:	fa02 f606 	lsl.w	r6, r2, r6
   228ca:	421e      	tst	r6, r3
   228cc:	bf18      	it	ne
   228ce:	4617      	movne	r7, r2
   228d0:	f047 0720 	orr.w	r7, r7, #32
   228d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   228d6:	601d      	str	r5, [r3, #0]
   228d8:	9b06      	ldr	r3, [sp, #24]
   228da:	601c      	str	r4, [r3, #0]
   228dc:	e6a6      	b.n	2262c <__gethex+0x110>
   228de:	f843 0b04 	str.w	r0, [r3], #4
   228e2:	4299      	cmp	r1, r3
   228e4:	d8da      	bhi.n	2289c <__gethex+0x380>
   228e6:	68ab      	ldr	r3, [r5, #8]
   228e8:	4599      	cmp	r9, r3
   228ea:	db12      	blt.n	22912 <__gethex+0x3f6>
   228ec:	6869      	ldr	r1, [r5, #4]
   228ee:	9802      	ldr	r0, [sp, #8]
   228f0:	3101      	adds	r1, #1
   228f2:	f000 fa0f 	bl	22d14 <_Balloc>
   228f6:	4683      	mov	fp, r0
   228f8:	692a      	ldr	r2, [r5, #16]
   228fa:	f105 010c 	add.w	r1, r5, #12
   228fe:	3202      	adds	r2, #2
   22900:	0092      	lsls	r2, r2, #2
   22902:	300c      	adds	r0, #12
   22904:	f7fb fe0d 	bl	1e522 <memcpy>
   22908:	4629      	mov	r1, r5
   2290a:	9802      	ldr	r0, [sp, #8]
   2290c:	f000 fa36 	bl	22d7c <_Bfree>
   22910:	465d      	mov	r5, fp
   22912:	692b      	ldr	r3, [r5, #16]
   22914:	1c5a      	adds	r2, r3, #1
   22916:	612a      	str	r2, [r5, #16]
   22918:	2201      	movs	r2, #1
   2291a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   2291e:	615a      	str	r2, [r3, #20]
   22920:	e7c2      	b.n	228a8 <__gethex+0x38c>
   22922:	692a      	ldr	r2, [r5, #16]
   22924:	4591      	cmp	r9, r2
   22926:	da0b      	bge.n	22940 <__gethex+0x424>
   22928:	2101      	movs	r1, #1
   2292a:	4628      	mov	r0, r5
   2292c:	f7ff fdac 	bl	22488 <rshift>
   22930:	f8d8 3008 	ldr.w	r3, [r8, #8]
   22934:	3401      	adds	r4, #1
   22936:	429c      	cmp	r4, r3
   22938:	f73f aedb 	bgt.w	226f2 <__gethex+0x1d6>
   2293c:	2701      	movs	r7, #1
   2293e:	e7c7      	b.n	228d0 <__gethex+0x3b4>
   22940:	f016 061f 	ands.w	r6, r6, #31
   22944:	d0fa      	beq.n	2293c <__gethex+0x420>
   22946:	449a      	add	sl, r3
   22948:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   2294c:	f000 faa6 	bl	22e9c <__hi0bits>
   22950:	f1c6 0620 	rsb	r6, r6, #32
   22954:	42b0      	cmp	r0, r6
   22956:	dbe7      	blt.n	22928 <__gethex+0x40c>
   22958:	e7f0      	b.n	2293c <__gethex+0x420>

0002295a <L_shift>:
L_shift():
   2295a:	f1c2 0208 	rsb	r2, r2, #8
   2295e:	0092      	lsls	r2, r2, #2
   22960:	b570      	push	{r4, r5, r6, lr}
   22962:	f1c2 0620 	rsb	r6, r2, #32
   22966:	6843      	ldr	r3, [r0, #4]
   22968:	6804      	ldr	r4, [r0, #0]
   2296a:	fa03 f506 	lsl.w	r5, r3, r6
   2296e:	432c      	orrs	r4, r5
   22970:	40d3      	lsrs	r3, r2
   22972:	6004      	str	r4, [r0, #0]
   22974:	f840 3f04 	str.w	r3, [r0, #4]!
   22978:	4288      	cmp	r0, r1
   2297a:	d3f4      	bcc.n	22966 <L_shift+0xc>
   2297c:	bd70      	pop	{r4, r5, r6, pc}

0002297e <__match>:
__match():
   2297e:	b530      	push	{r4, r5, lr}
   22980:	6803      	ldr	r3, [r0, #0]
   22982:	f811 4b01 	ldrb.w	r4, [r1], #1
   22986:	3301      	adds	r3, #1
   22988:	b914      	cbnz	r4, 22990 <__match+0x12>
   2298a:	6003      	str	r3, [r0, #0]
   2298c:	2001      	movs	r0, #1
   2298e:	bd30      	pop	{r4, r5, pc}
   22990:	781a      	ldrb	r2, [r3, #0]
   22992:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   22996:	2d19      	cmp	r5, #25
   22998:	bf98      	it	ls
   2299a:	3220      	addls	r2, #32
   2299c:	42a2      	cmp	r2, r4
   2299e:	d0f0      	beq.n	22982 <__match+0x4>
   229a0:	2000      	movs	r0, #0
   229a2:	bd30      	pop	{r4, r5, pc}

000229a4 <__hexnan>:
__hexnan():
   229a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229a8:	2500      	movs	r5, #0
   229aa:	680b      	ldr	r3, [r1, #0]
   229ac:	4682      	mov	sl, r0
   229ae:	115f      	asrs	r7, r3, #5
   229b0:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   229b4:	f013 031f 	ands.w	r3, r3, #31
   229b8:	bf18      	it	ne
   229ba:	3704      	addne	r7, #4
   229bc:	1f3e      	subs	r6, r7, #4
   229be:	4690      	mov	r8, r2
   229c0:	46b1      	mov	r9, r6
   229c2:	4634      	mov	r4, r6
   229c4:	46ab      	mov	fp, r5
   229c6:	b087      	sub	sp, #28
   229c8:	6801      	ldr	r1, [r0, #0]
   229ca:	9302      	str	r3, [sp, #8]
   229cc:	f847 5c04 	str.w	r5, [r7, #-4]
   229d0:	9501      	str	r5, [sp, #4]
   229d2:	784a      	ldrb	r2, [r1, #1]
   229d4:	1c4b      	adds	r3, r1, #1
   229d6:	9303      	str	r3, [sp, #12]
   229d8:	b342      	cbz	r2, 22a2c <__hexnan+0x88>
   229da:	4610      	mov	r0, r2
   229dc:	9105      	str	r1, [sp, #20]
   229de:	9204      	str	r2, [sp, #16]
   229e0:	f7ff fd87 	bl	224f2 <__hexdig_fun>
   229e4:	2800      	cmp	r0, #0
   229e6:	d143      	bne.n	22a70 <__hexnan+0xcc>
   229e8:	9a04      	ldr	r2, [sp, #16]
   229ea:	9905      	ldr	r1, [sp, #20]
   229ec:	2a20      	cmp	r2, #32
   229ee:	d818      	bhi.n	22a22 <__hexnan+0x7e>
   229f0:	9b01      	ldr	r3, [sp, #4]
   229f2:	459b      	cmp	fp, r3
   229f4:	dd13      	ble.n	22a1e <__hexnan+0x7a>
   229f6:	454c      	cmp	r4, r9
   229f8:	d206      	bcs.n	22a08 <__hexnan+0x64>
   229fa:	2d07      	cmp	r5, #7
   229fc:	dc04      	bgt.n	22a08 <__hexnan+0x64>
   229fe:	462a      	mov	r2, r5
   22a00:	4649      	mov	r1, r9
   22a02:	4620      	mov	r0, r4
   22a04:	f7ff ffa9 	bl	2295a <L_shift>
   22a08:	4544      	cmp	r4, r8
   22a0a:	d944      	bls.n	22a96 <__hexnan+0xf2>
   22a0c:	2300      	movs	r3, #0
   22a0e:	f1a4 0904 	sub.w	r9, r4, #4
   22a12:	f844 3c04 	str.w	r3, [r4, #-4]
   22a16:	461d      	mov	r5, r3
   22a18:	464c      	mov	r4, r9
   22a1a:	f8cd b004 	str.w	fp, [sp, #4]
   22a1e:	9903      	ldr	r1, [sp, #12]
   22a20:	e7d7      	b.n	229d2 <__hexnan+0x2e>
   22a22:	2a29      	cmp	r2, #41	; 0x29
   22a24:	d14a      	bne.n	22abc <__hexnan+0x118>
   22a26:	3102      	adds	r1, #2
   22a28:	f8ca 1000 	str.w	r1, [sl]
   22a2c:	f1bb 0f00 	cmp.w	fp, #0
   22a30:	d044      	beq.n	22abc <__hexnan+0x118>
   22a32:	454c      	cmp	r4, r9
   22a34:	d206      	bcs.n	22a44 <__hexnan+0xa0>
   22a36:	2d07      	cmp	r5, #7
   22a38:	dc04      	bgt.n	22a44 <__hexnan+0xa0>
   22a3a:	462a      	mov	r2, r5
   22a3c:	4649      	mov	r1, r9
   22a3e:	4620      	mov	r0, r4
   22a40:	f7ff ff8b 	bl	2295a <L_shift>
   22a44:	4544      	cmp	r4, r8
   22a46:	d928      	bls.n	22a9a <__hexnan+0xf6>
   22a48:	4643      	mov	r3, r8
   22a4a:	f854 2b04 	ldr.w	r2, [r4], #4
   22a4e:	42a6      	cmp	r6, r4
   22a50:	f843 2b04 	str.w	r2, [r3], #4
   22a54:	d2f9      	bcs.n	22a4a <__hexnan+0xa6>
   22a56:	2200      	movs	r2, #0
   22a58:	f843 2b04 	str.w	r2, [r3], #4
   22a5c:	429e      	cmp	r6, r3
   22a5e:	d2fb      	bcs.n	22a58 <__hexnan+0xb4>
   22a60:	6833      	ldr	r3, [r6, #0]
   22a62:	b91b      	cbnz	r3, 22a6c <__hexnan+0xc8>
   22a64:	4546      	cmp	r6, r8
   22a66:	d127      	bne.n	22ab8 <__hexnan+0x114>
   22a68:	2301      	movs	r3, #1
   22a6a:	6033      	str	r3, [r6, #0]
   22a6c:	2005      	movs	r0, #5
   22a6e:	e026      	b.n	22abe <__hexnan+0x11a>
   22a70:	3501      	adds	r5, #1
   22a72:	2d08      	cmp	r5, #8
   22a74:	f10b 0b01 	add.w	fp, fp, #1
   22a78:	dd06      	ble.n	22a88 <__hexnan+0xe4>
   22a7a:	4544      	cmp	r4, r8
   22a7c:	d9cf      	bls.n	22a1e <__hexnan+0x7a>
   22a7e:	2300      	movs	r3, #0
   22a80:	2501      	movs	r5, #1
   22a82:	f844 3c04 	str.w	r3, [r4, #-4]
   22a86:	3c04      	subs	r4, #4
   22a88:	6822      	ldr	r2, [r4, #0]
   22a8a:	f000 000f 	and.w	r0, r0, #15
   22a8e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   22a92:	6020      	str	r0, [r4, #0]
   22a94:	e7c3      	b.n	22a1e <__hexnan+0x7a>
   22a96:	2508      	movs	r5, #8
   22a98:	e7c1      	b.n	22a1e <__hexnan+0x7a>
   22a9a:	9b02      	ldr	r3, [sp, #8]
   22a9c:	2b00      	cmp	r3, #0
   22a9e:	d0df      	beq.n	22a60 <__hexnan+0xbc>
   22aa0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   22aa4:	f1c3 0320 	rsb	r3, r3, #32
   22aa8:	fa22 f303 	lsr.w	r3, r2, r3
   22aac:	f857 2c04 	ldr.w	r2, [r7, #-4]
   22ab0:	401a      	ands	r2, r3
   22ab2:	f847 2c04 	str.w	r2, [r7, #-4]
   22ab6:	e7d3      	b.n	22a60 <__hexnan+0xbc>
   22ab8:	3e04      	subs	r6, #4
   22aba:	e7d1      	b.n	22a60 <__hexnan+0xbc>
   22abc:	2004      	movs	r0, #4
   22abe:	b007      	add	sp, #28
   22ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022ac4 <_findenv_r>:
_findenv_r():
   22ac4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   22ac8:	4606      	mov	r6, r0
   22aca:	468a      	mov	sl, r1
   22acc:	4617      	mov	r7, r2
   22ace:	f001 fdd3 	bl	24678 <__env_lock>
   22ad2:	4b1b      	ldr	r3, [pc, #108]	; (22b40 <_findenv_r+0x7c>)
   22ad4:	f8d3 8000 	ldr.w	r8, [r3]
   22ad8:	4699      	mov	r9, r3
   22ada:	f1b8 0f00 	cmp.w	r8, #0
   22ade:	d007      	beq.n	22af0 <_findenv_r+0x2c>
   22ae0:	4654      	mov	r4, sl
   22ae2:	4623      	mov	r3, r4
   22ae4:	f813 2b01 	ldrb.w	r2, [r3], #1
   22ae8:	b332      	cbz	r2, 22b38 <_findenv_r+0x74>
   22aea:	2a3d      	cmp	r2, #61	; 0x3d
   22aec:	461c      	mov	r4, r3
   22aee:	d1f8      	bne.n	22ae2 <_findenv_r+0x1e>
   22af0:	4630      	mov	r0, r6
   22af2:	f001 fdc2 	bl	2467a <__env_unlock>
   22af6:	2000      	movs	r0, #0
   22af8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   22afc:	f108 0804 	add.w	r8, r8, #4
   22b00:	f8d8 0000 	ldr.w	r0, [r8]
   22b04:	2800      	cmp	r0, #0
   22b06:	d0f3      	beq.n	22af0 <_findenv_r+0x2c>
   22b08:	4622      	mov	r2, r4
   22b0a:	4651      	mov	r1, sl
   22b0c:	f7fd fab7 	bl	2007e <strncmp>
   22b10:	2800      	cmp	r0, #0
   22b12:	d1f3      	bne.n	22afc <_findenv_r+0x38>
   22b14:	f8d8 3000 	ldr.w	r3, [r8]
   22b18:	191d      	adds	r5, r3, r4
   22b1a:	5d1b      	ldrb	r3, [r3, r4]
   22b1c:	2b3d      	cmp	r3, #61	; 0x3d
   22b1e:	d1ed      	bne.n	22afc <_findenv_r+0x38>
   22b20:	f8d9 3000 	ldr.w	r3, [r9]
   22b24:	4630      	mov	r0, r6
   22b26:	eba8 0303 	sub.w	r3, r8, r3
   22b2a:	109b      	asrs	r3, r3, #2
   22b2c:	603b      	str	r3, [r7, #0]
   22b2e:	f001 fda4 	bl	2467a <__env_unlock>
   22b32:	1c68      	adds	r0, r5, #1
   22b34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   22b38:	eba4 040a 	sub.w	r4, r4, sl
   22b3c:	e7e0      	b.n	22b00 <_findenv_r+0x3c>
   22b3e:	bf00      	nop
   22b40:	2007c2fc 	.word	0x2007c2fc

00022b44 <_getenv_r>:
_getenv_r():
   22b44:	b507      	push	{r0, r1, r2, lr}
   22b46:	aa01      	add	r2, sp, #4
   22b48:	f7ff ffbc 	bl	22ac4 <_findenv_r>
   22b4c:	b003      	add	sp, #12
   22b4e:	f85d fb04 	ldr.w	pc, [sp], #4
   22b52:	Address 0x0000000000022b52 is out of bounds.


00022b54 <_gettimeofday_r>:
_gettimeofday_r():
   22b54:	b538      	push	{r3, r4, r5, lr}
   22b56:	2300      	movs	r3, #0
   22b58:	4c06      	ldr	r4, [pc, #24]	; (22b74 <_gettimeofday_r+0x20>)
   22b5a:	4605      	mov	r5, r0
   22b5c:	4608      	mov	r0, r1
   22b5e:	4611      	mov	r1, r2
   22b60:	6023      	str	r3, [r4, #0]
   22b62:	f7f3 ff25 	bl	169b0 <_gettimeofday>
   22b66:	1c43      	adds	r3, r0, #1
   22b68:	d102      	bne.n	22b70 <_gettimeofday_r+0x1c>
   22b6a:	6823      	ldr	r3, [r4, #0]
   22b6c:	b103      	cbz	r3, 22b70 <_gettimeofday_r+0x1c>
   22b6e:	602b      	str	r3, [r5, #0]
   22b70:	bd38      	pop	{r3, r4, r5, pc}
   22b72:	bf00      	nop
   22b74:	2007c8fc 	.word	0x2007c8fc

00022b78 <__gettzinfo>:
__gettzinfo():
   22b78:	4800      	ldr	r0, [pc, #0]	; (22b7c <__gettzinfo+0x4>)
   22b7a:	4770      	bx	lr
   22b7c:	2007c2bc 	.word	0x2007c2bc

00022b80 <gmtime_r>:
gmtime_r():
   22b80:	6802      	ldr	r2, [r0, #0]
   22b82:	4847      	ldr	r0, [pc, #284]	; (22ca0 <gmtime_r+0x120>)
   22b84:	b5f0      	push	{r4, r5, r6, r7, lr}
   22b86:	fb92 f3f0 	sdiv	r3, r2, r0
   22b8a:	f44f 6461 	mov.w	r4, #3600	; 0xe10
   22b8e:	fb00 2013 	mls	r0, r0, r3, r2
   22b92:	2800      	cmp	r0, #0
   22b94:	bfbc      	itt	lt
   22b96:	f500 30a8 	addlt.w	r0, r0, #86016	; 0x15000
   22b9a:	f500 70c0 	addlt.w	r0, r0, #384	; 0x180
   22b9e:	fb90 f2f4 	sdiv	r2, r0, r4
   22ba2:	fb04 0012 	mls	r0, r4, r2, r0
   22ba6:	f04f 043c 	mov.w	r4, #60	; 0x3c
   22baa:	608a      	str	r2, [r1, #8]
   22bac:	fb90 f2f4 	sdiv	r2, r0, r4
   22bb0:	fb04 0012 	mls	r0, r4, r2, r0
   22bb4:	604a      	str	r2, [r1, #4]
   22bb6:	f04f 0207 	mov.w	r2, #7
   22bba:	f503 232f 	add.w	r3, r3, #716800	; 0xaf000
   22bbe:	bfac      	ite	ge
   22bc0:	f603 236c 	addwge	r3, r3, #2668	; 0xa6c
   22bc4:	f603 236b 	addwlt	r3, r3, #2667	; 0xa6b
   22bc8:	6008      	str	r0, [r1, #0]
   22bca:	1cd8      	adds	r0, r3, #3
   22bcc:	fb90 f2f2 	sdiv	r2, r0, r2
   22bd0:	4c34      	ldr	r4, [pc, #208]	; (22ca4 <gmtime_r+0x124>)
   22bd2:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   22bd6:	fb93 f4f4 	sdiv	r4, r3, r4
   22bda:	1a82      	subs	r2, r0, r2
   22bdc:	f648 60ac 	movw	r0, #36524	; 0x8eac
   22be0:	f240 57b4 	movw	r7, #1460	; 0x5b4
   22be4:	618a      	str	r2, [r1, #24]
   22be6:	4a30      	ldr	r2, [pc, #192]	; (22ca8 <gmtime_r+0x128>)
   22be8:	f240 166d 	movw	r6, #365	; 0x16d
   22bec:	fb02 3304 	mla	r3, r2, r4, r3
   22bf0:	fbb3 f0f0 	udiv	r0, r3, r0
   22bf4:	fbb3 f2f7 	udiv	r2, r3, r7
   22bf8:	4418      	add	r0, r3
   22bfa:	1a80      	subs	r0, r0, r2
   22bfc:	4a2b      	ldr	r2, [pc, #172]	; (22cac <gmtime_r+0x12c>)
   22bfe:	fbb3 f2f2 	udiv	r2, r3, r2
   22c02:	1a82      	subs	r2, r0, r2
   22c04:	f648 6094 	movw	r0, #36500	; 0x8e94
   22c08:	fbb2 f0f0 	udiv	r0, r2, r0
   22c0c:	fbb2 f5f6 	udiv	r5, r2, r6
   22c10:	fbb2 f2f7 	udiv	r2, r2, r7
   22c14:	4403      	add	r3, r0
   22c16:	2099      	movs	r0, #153	; 0x99
   22c18:	1a9a      	subs	r2, r3, r2
   22c1a:	fb06 2315 	mls	r3, r6, r5, r2
   22c1e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
   22c22:	3202      	adds	r2, #2
   22c24:	fbb2 f2f0 	udiv	r2, r2, r0
   22c28:	2705      	movs	r7, #5
   22c2a:	4350      	muls	r0, r2
   22c2c:	3002      	adds	r0, #2
   22c2e:	fbb0 f0f7 	udiv	r0, r0, r7
   22c32:	2a0a      	cmp	r2, #10
   22c34:	f103 0601 	add.w	r6, r3, #1
   22c38:	eba6 0000 	sub.w	r0, r6, r0
   22c3c:	bf34      	ite	cc
   22c3e:	2602      	movcc	r6, #2
   22c40:	f06f 0609 	mvncs.w	r6, #9
   22c44:	4416      	add	r6, r2
   22c46:	f44f 72c8 	mov.w	r2, #400	; 0x190
   22c4a:	fb02 5404 	mla	r4, r2, r4, r5
   22c4e:	2e01      	cmp	r6, #1
   22c50:	bf98      	it	ls
   22c52:	3401      	addls	r4, #1
   22c54:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
   22c58:	d30b      	bcc.n	22c72 <gmtime_r+0xf2>
   22c5a:	f5a3 7399 	sub.w	r3, r3, #306	; 0x132
   22c5e:	61cb      	str	r3, [r1, #28]
   22c60:	2300      	movs	r3, #0
   22c62:	f2a4 746c 	subw	r4, r4, #1900	; 0x76c
   22c66:	60c8      	str	r0, [r1, #12]
   22c68:	614c      	str	r4, [r1, #20]
   22c6a:	610e      	str	r6, [r1, #16]
   22c6c:	620b      	str	r3, [r1, #32]
   22c6e:	4608      	mov	r0, r1
   22c70:	bdf0      	pop	{r4, r5, r6, r7, pc}
   22c72:	07aa      	lsls	r2, r5, #30
   22c74:	d105      	bne.n	22c82 <gmtime_r+0x102>
   22c76:	2764      	movs	r7, #100	; 0x64
   22c78:	fbb5 f2f7 	udiv	r2, r5, r7
   22c7c:	fb07 5212 	mls	r2, r7, r2, r5
   22c80:	b95a      	cbnz	r2, 22c9a <gmtime_r+0x11a>
   22c82:	f44f 77c8 	mov.w	r7, #400	; 0x190
   22c86:	fbb5 f2f7 	udiv	r2, r5, r7
   22c8a:	fb07 5212 	mls	r2, r7, r2, r5
   22c8e:	fab2 f282 	clz	r2, r2
   22c92:	0952      	lsrs	r2, r2, #5
   22c94:	333b      	adds	r3, #59	; 0x3b
   22c96:	4413      	add	r3, r2
   22c98:	e7e1      	b.n	22c5e <gmtime_r+0xde>
   22c9a:	2201      	movs	r2, #1
   22c9c:	e7fa      	b.n	22c94 <gmtime_r+0x114>
   22c9e:	bf00      	nop
   22ca0:	00015180 	.word	0x00015180
   22ca4:	00023ab1 	.word	0x00023ab1
   22ca8:	fffdc54f 	.word	0xfffdc54f
   22cac:	00023ab0 	.word	0x00023ab0

00022cb0 <_isatty_r>:
_isatty_r():
   22cb0:	b538      	push	{r3, r4, r5, lr}
   22cb2:	2300      	movs	r3, #0
   22cb4:	4c05      	ldr	r4, [pc, #20]	; (22ccc <_isatty_r+0x1c>)
   22cb6:	4605      	mov	r5, r0
   22cb8:	4608      	mov	r0, r1
   22cba:	6023      	str	r3, [r4, #0]
   22cbc:	f7f4 f8fc 	bl	16eb8 <_isatty>
   22cc0:	1c43      	adds	r3, r0, #1
   22cc2:	d102      	bne.n	22cca <_isatty_r+0x1a>
   22cc4:	6823      	ldr	r3, [r4, #0]
   22cc6:	b103      	cbz	r3, 22cca <_isatty_r+0x1a>
   22cc8:	602b      	str	r3, [r5, #0]
   22cca:	bd38      	pop	{r3, r4, r5, pc}
   22ccc:	2007c8fc 	.word	0x2007c8fc

00022cd0 <__localeconv_l>:
__localeconv_l():
   22cd0:	30f0      	adds	r0, #240	; 0xf0
   22cd2:	4770      	bx	lr

00022cd4 <_localeconv_r>:
_localeconv_r():
   22cd4:	4b04      	ldr	r3, [pc, #16]	; (22ce8 <_localeconv_r+0x14>)
   22cd6:	681b      	ldr	r3, [r3, #0]
   22cd8:	6a18      	ldr	r0, [r3, #32]
   22cda:	4b04      	ldr	r3, [pc, #16]	; (22cec <_localeconv_r+0x18>)
   22cdc:	2800      	cmp	r0, #0
   22cde:	bf08      	it	eq
   22ce0:	4618      	moveq	r0, r3
   22ce2:	30f0      	adds	r0, #240	; 0xf0
   22ce4:	4770      	bx	lr
   22ce6:	bf00      	nop
   22ce8:	2007c0e4 	.word	0x2007c0e4
   22cec:	2007c148 	.word	0x2007c148

00022cf0 <_lseek_r>:
_lseek_r():
   22cf0:	b538      	push	{r3, r4, r5, lr}
   22cf2:	4605      	mov	r5, r0
   22cf4:	4608      	mov	r0, r1
   22cf6:	4611      	mov	r1, r2
   22cf8:	2200      	movs	r2, #0
   22cfa:	4c05      	ldr	r4, [pc, #20]	; (22d10 <_lseek_r+0x20>)
   22cfc:	6022      	str	r2, [r4, #0]
   22cfe:	461a      	mov	r2, r3
   22d00:	f7f3 ff80 	bl	16c04 <_lseek>
   22d04:	1c43      	adds	r3, r0, #1
   22d06:	d102      	bne.n	22d0e <_lseek_r+0x1e>
   22d08:	6823      	ldr	r3, [r4, #0]
   22d0a:	b103      	cbz	r3, 22d0e <_lseek_r+0x1e>
   22d0c:	602b      	str	r3, [r5, #0]
   22d0e:	bd38      	pop	{r3, r4, r5, pc}
   22d10:	2007c8fc 	.word	0x2007c8fc

00022d14 <_Balloc>:
_Balloc():
   22d14:	b570      	push	{r4, r5, r6, lr}
   22d16:	6a45      	ldr	r5, [r0, #36]	; 0x24
   22d18:	4604      	mov	r4, r0
   22d1a:	460e      	mov	r6, r1
   22d1c:	b93d      	cbnz	r5, 22d2e <_Balloc+0x1a>
   22d1e:	2010      	movs	r0, #16
   22d20:	f7fb fbc0 	bl	1e4a4 <malloc>
   22d24:	6260      	str	r0, [r4, #36]	; 0x24
   22d26:	6045      	str	r5, [r0, #4]
   22d28:	6085      	str	r5, [r0, #8]
   22d2a:	6005      	str	r5, [r0, #0]
   22d2c:	60c5      	str	r5, [r0, #12]
   22d2e:	6a65      	ldr	r5, [r4, #36]	; 0x24
   22d30:	68eb      	ldr	r3, [r5, #12]
   22d32:	b183      	cbz	r3, 22d56 <_Balloc+0x42>
   22d34:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22d36:	68db      	ldr	r3, [r3, #12]
   22d38:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   22d3c:	b9b8      	cbnz	r0, 22d6e <_Balloc+0x5a>
   22d3e:	2101      	movs	r1, #1
   22d40:	fa01 f506 	lsl.w	r5, r1, r6
   22d44:	1d6a      	adds	r2, r5, #5
   22d46:	0092      	lsls	r2, r2, #2
   22d48:	4620      	mov	r0, r4
   22d4a:	f7fb fe7d 	bl	1ea48 <_calloc_r>
   22d4e:	b160      	cbz	r0, 22d6a <_Balloc+0x56>
   22d50:	6046      	str	r6, [r0, #4]
   22d52:	6085      	str	r5, [r0, #8]
   22d54:	e00e      	b.n	22d74 <_Balloc+0x60>
   22d56:	2221      	movs	r2, #33	; 0x21
   22d58:	2104      	movs	r1, #4
   22d5a:	4620      	mov	r0, r4
   22d5c:	f7fb fe74 	bl	1ea48 <_calloc_r>
   22d60:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22d62:	60e8      	str	r0, [r5, #12]
   22d64:	68db      	ldr	r3, [r3, #12]
   22d66:	2b00      	cmp	r3, #0
   22d68:	d1e4      	bne.n	22d34 <_Balloc+0x20>
   22d6a:	2000      	movs	r0, #0
   22d6c:	bd70      	pop	{r4, r5, r6, pc}
   22d6e:	6802      	ldr	r2, [r0, #0]
   22d70:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   22d74:	2300      	movs	r3, #0
   22d76:	6103      	str	r3, [r0, #16]
   22d78:	60c3      	str	r3, [r0, #12]
   22d7a:	bd70      	pop	{r4, r5, r6, pc}

00022d7c <_Bfree>:
_Bfree():
   22d7c:	b570      	push	{r4, r5, r6, lr}
   22d7e:	6a44      	ldr	r4, [r0, #36]	; 0x24
   22d80:	4606      	mov	r6, r0
   22d82:	460d      	mov	r5, r1
   22d84:	b93c      	cbnz	r4, 22d96 <_Bfree+0x1a>
   22d86:	2010      	movs	r0, #16
   22d88:	f7fb fb8c 	bl	1e4a4 <malloc>
   22d8c:	6270      	str	r0, [r6, #36]	; 0x24
   22d8e:	6044      	str	r4, [r0, #4]
   22d90:	6084      	str	r4, [r0, #8]
   22d92:	6004      	str	r4, [r0, #0]
   22d94:	60c4      	str	r4, [r0, #12]
   22d96:	b13d      	cbz	r5, 22da8 <_Bfree+0x2c>
   22d98:	6a73      	ldr	r3, [r6, #36]	; 0x24
   22d9a:	686a      	ldr	r2, [r5, #4]
   22d9c:	68db      	ldr	r3, [r3, #12]
   22d9e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   22da2:	6029      	str	r1, [r5, #0]
   22da4:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   22da8:	bd70      	pop	{r4, r5, r6, pc}

00022daa <__multadd>:
__multadd():
   22daa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22dae:	461f      	mov	r7, r3
   22db0:	4606      	mov	r6, r0
   22db2:	460c      	mov	r4, r1
   22db4:	2300      	movs	r3, #0
   22db6:	690d      	ldr	r5, [r1, #16]
   22db8:	f101 0e14 	add.w	lr, r1, #20
   22dbc:	f8de 0000 	ldr.w	r0, [lr]
   22dc0:	3301      	adds	r3, #1
   22dc2:	b281      	uxth	r1, r0
   22dc4:	fb02 7101 	mla	r1, r2, r1, r7
   22dc8:	0c00      	lsrs	r0, r0, #16
   22dca:	0c0f      	lsrs	r7, r1, #16
   22dcc:	fb02 7000 	mla	r0, r2, r0, r7
   22dd0:	b289      	uxth	r1, r1
   22dd2:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   22dd6:	429d      	cmp	r5, r3
   22dd8:	ea4f 4710 	mov.w	r7, r0, lsr #16
   22ddc:	f84e 1b04 	str.w	r1, [lr], #4
   22de0:	dcec      	bgt.n	22dbc <__multadd+0x12>
   22de2:	b1d7      	cbz	r7, 22e1a <__multadd+0x70>
   22de4:	68a3      	ldr	r3, [r4, #8]
   22de6:	429d      	cmp	r5, r3
   22de8:	db12      	blt.n	22e10 <__multadd+0x66>
   22dea:	6861      	ldr	r1, [r4, #4]
   22dec:	4630      	mov	r0, r6
   22dee:	3101      	adds	r1, #1
   22df0:	f7ff ff90 	bl	22d14 <_Balloc>
   22df4:	4680      	mov	r8, r0
   22df6:	6922      	ldr	r2, [r4, #16]
   22df8:	f104 010c 	add.w	r1, r4, #12
   22dfc:	3202      	adds	r2, #2
   22dfe:	0092      	lsls	r2, r2, #2
   22e00:	300c      	adds	r0, #12
   22e02:	f7fb fb8e 	bl	1e522 <memcpy>
   22e06:	4621      	mov	r1, r4
   22e08:	4630      	mov	r0, r6
   22e0a:	f7ff ffb7 	bl	22d7c <_Bfree>
   22e0e:	4644      	mov	r4, r8
   22e10:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   22e14:	3501      	adds	r5, #1
   22e16:	615f      	str	r7, [r3, #20]
   22e18:	6125      	str	r5, [r4, #16]
   22e1a:	4620      	mov	r0, r4
   22e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00022e20 <__s2b>:
__s2b():
   22e20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   22e24:	4615      	mov	r5, r2
   22e26:	2209      	movs	r2, #9
   22e28:	461f      	mov	r7, r3
   22e2a:	3308      	adds	r3, #8
   22e2c:	460c      	mov	r4, r1
   22e2e:	fb93 f3f2 	sdiv	r3, r3, r2
   22e32:	4606      	mov	r6, r0
   22e34:	2201      	movs	r2, #1
   22e36:	2100      	movs	r1, #0
   22e38:	429a      	cmp	r2, r3
   22e3a:	db20      	blt.n	22e7e <__s2b+0x5e>
   22e3c:	4630      	mov	r0, r6
   22e3e:	f7ff ff69 	bl	22d14 <_Balloc>
   22e42:	9b08      	ldr	r3, [sp, #32]
   22e44:	2d09      	cmp	r5, #9
   22e46:	6143      	str	r3, [r0, #20]
   22e48:	f04f 0301 	mov.w	r3, #1
   22e4c:	6103      	str	r3, [r0, #16]
   22e4e:	dd19      	ble.n	22e84 <__s2b+0x64>
   22e50:	f104 0909 	add.w	r9, r4, #9
   22e54:	46c8      	mov	r8, r9
   22e56:	442c      	add	r4, r5
   22e58:	f818 3b01 	ldrb.w	r3, [r8], #1
   22e5c:	4601      	mov	r1, r0
   22e5e:	3b30      	subs	r3, #48	; 0x30
   22e60:	220a      	movs	r2, #10
   22e62:	4630      	mov	r0, r6
   22e64:	f7ff ffa1 	bl	22daa <__multadd>
   22e68:	45a0      	cmp	r8, r4
   22e6a:	d1f5      	bne.n	22e58 <__s2b+0x38>
   22e6c:	f1a5 0408 	sub.w	r4, r5, #8
   22e70:	444c      	add	r4, r9
   22e72:	1b2d      	subs	r5, r5, r4
   22e74:	1963      	adds	r3, r4, r5
   22e76:	42bb      	cmp	r3, r7
   22e78:	db07      	blt.n	22e8a <__s2b+0x6a>
   22e7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   22e7e:	0052      	lsls	r2, r2, #1
   22e80:	3101      	adds	r1, #1
   22e82:	e7d9      	b.n	22e38 <__s2b+0x18>
   22e84:	340a      	adds	r4, #10
   22e86:	2509      	movs	r5, #9
   22e88:	e7f3      	b.n	22e72 <__s2b+0x52>
   22e8a:	f814 3b01 	ldrb.w	r3, [r4], #1
   22e8e:	4601      	mov	r1, r0
   22e90:	3b30      	subs	r3, #48	; 0x30
   22e92:	220a      	movs	r2, #10
   22e94:	4630      	mov	r0, r6
   22e96:	f7ff ff88 	bl	22daa <__multadd>
   22e9a:	e7eb      	b.n	22e74 <__s2b+0x54>

00022e9c <__hi0bits>:
__hi0bits():
   22e9c:	0c02      	lsrs	r2, r0, #16
   22e9e:	0412      	lsls	r2, r2, #16
   22ea0:	4603      	mov	r3, r0
   22ea2:	b9b2      	cbnz	r2, 22ed2 <__hi0bits+0x36>
   22ea4:	0403      	lsls	r3, r0, #16
   22ea6:	2010      	movs	r0, #16
   22ea8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   22eac:	bf04      	itt	eq
   22eae:	021b      	lsleq	r3, r3, #8
   22eb0:	3008      	addeq	r0, #8
   22eb2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   22eb6:	bf04      	itt	eq
   22eb8:	011b      	lsleq	r3, r3, #4
   22eba:	3004      	addeq	r0, #4
   22ebc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   22ec0:	bf04      	itt	eq
   22ec2:	009b      	lsleq	r3, r3, #2
   22ec4:	3002      	addeq	r0, #2
   22ec6:	2b00      	cmp	r3, #0
   22ec8:	db06      	blt.n	22ed8 <__hi0bits+0x3c>
   22eca:	005b      	lsls	r3, r3, #1
   22ecc:	d503      	bpl.n	22ed6 <__hi0bits+0x3a>
   22ece:	3001      	adds	r0, #1
   22ed0:	4770      	bx	lr
   22ed2:	2000      	movs	r0, #0
   22ed4:	e7e8      	b.n	22ea8 <__hi0bits+0xc>
   22ed6:	2020      	movs	r0, #32
   22ed8:	4770      	bx	lr

00022eda <__lo0bits>:
__lo0bits():
   22eda:	6803      	ldr	r3, [r0, #0]
   22edc:	4601      	mov	r1, r0
   22ede:	f013 0207 	ands.w	r2, r3, #7
   22ee2:	d00b      	beq.n	22efc <__lo0bits+0x22>
   22ee4:	07da      	lsls	r2, r3, #31
   22ee6:	d423      	bmi.n	22f30 <__lo0bits+0x56>
   22ee8:	0798      	lsls	r0, r3, #30
   22eea:	bf49      	itett	mi
   22eec:	085b      	lsrmi	r3, r3, #1
   22eee:	089b      	lsrpl	r3, r3, #2
   22ef0:	2001      	movmi	r0, #1
   22ef2:	600b      	strmi	r3, [r1, #0]
   22ef4:	bf5c      	itt	pl
   22ef6:	600b      	strpl	r3, [r1, #0]
   22ef8:	2002      	movpl	r0, #2
   22efa:	4770      	bx	lr
   22efc:	b298      	uxth	r0, r3
   22efe:	b9a8      	cbnz	r0, 22f2c <__lo0bits+0x52>
   22f00:	2010      	movs	r0, #16
   22f02:	0c1b      	lsrs	r3, r3, #16
   22f04:	f013 0fff 	tst.w	r3, #255	; 0xff
   22f08:	bf04      	itt	eq
   22f0a:	0a1b      	lsreq	r3, r3, #8
   22f0c:	3008      	addeq	r0, #8
   22f0e:	071a      	lsls	r2, r3, #28
   22f10:	bf04      	itt	eq
   22f12:	091b      	lsreq	r3, r3, #4
   22f14:	3004      	addeq	r0, #4
   22f16:	079a      	lsls	r2, r3, #30
   22f18:	bf04      	itt	eq
   22f1a:	089b      	lsreq	r3, r3, #2
   22f1c:	3002      	addeq	r0, #2
   22f1e:	07da      	lsls	r2, r3, #31
   22f20:	d402      	bmi.n	22f28 <__lo0bits+0x4e>
   22f22:	085b      	lsrs	r3, r3, #1
   22f24:	d006      	beq.n	22f34 <__lo0bits+0x5a>
   22f26:	3001      	adds	r0, #1
   22f28:	600b      	str	r3, [r1, #0]
   22f2a:	4770      	bx	lr
   22f2c:	4610      	mov	r0, r2
   22f2e:	e7e9      	b.n	22f04 <__lo0bits+0x2a>
   22f30:	2000      	movs	r0, #0
   22f32:	4770      	bx	lr
   22f34:	2020      	movs	r0, #32
   22f36:	4770      	bx	lr

00022f38 <__i2b>:
__i2b():
   22f38:	b510      	push	{r4, lr}
   22f3a:	460c      	mov	r4, r1
   22f3c:	2101      	movs	r1, #1
   22f3e:	f7ff fee9 	bl	22d14 <_Balloc>
   22f42:	2201      	movs	r2, #1
   22f44:	6144      	str	r4, [r0, #20]
   22f46:	6102      	str	r2, [r0, #16]
   22f48:	bd10      	pop	{r4, pc}

00022f4a <__multiply>:
__multiply():
   22f4a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f4e:	4614      	mov	r4, r2
   22f50:	690a      	ldr	r2, [r1, #16]
   22f52:	6923      	ldr	r3, [r4, #16]
   22f54:	4689      	mov	r9, r1
   22f56:	429a      	cmp	r2, r3
   22f58:	bfbe      	ittt	lt
   22f5a:	460b      	movlt	r3, r1
   22f5c:	46a1      	movlt	r9, r4
   22f5e:	461c      	movlt	r4, r3
   22f60:	f8d9 7010 	ldr.w	r7, [r9, #16]
   22f64:	f8d4 a010 	ldr.w	sl, [r4, #16]
   22f68:	f8d9 3008 	ldr.w	r3, [r9, #8]
   22f6c:	f8d9 1004 	ldr.w	r1, [r9, #4]
   22f70:	eb07 060a 	add.w	r6, r7, sl
   22f74:	429e      	cmp	r6, r3
   22f76:	bfc8      	it	gt
   22f78:	3101      	addgt	r1, #1
   22f7a:	f7ff fecb 	bl	22d14 <_Balloc>
   22f7e:	f100 0514 	add.w	r5, r0, #20
   22f82:	462b      	mov	r3, r5
   22f84:	2200      	movs	r2, #0
   22f86:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   22f8a:	4543      	cmp	r3, r8
   22f8c:	d316      	bcc.n	22fbc <__multiply+0x72>
   22f8e:	f104 0214 	add.w	r2, r4, #20
   22f92:	f109 0114 	add.w	r1, r9, #20
   22f96:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   22f9a:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   22f9e:	9301      	str	r3, [sp, #4]
   22fa0:	9c01      	ldr	r4, [sp, #4]
   22fa2:	4613      	mov	r3, r2
   22fa4:	4294      	cmp	r4, r2
   22fa6:	d80c      	bhi.n	22fc2 <__multiply+0x78>
   22fa8:	2e00      	cmp	r6, #0
   22faa:	dd03      	ble.n	22fb4 <__multiply+0x6a>
   22fac:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   22fb0:	2b00      	cmp	r3, #0
   22fb2:	d054      	beq.n	2305e <__multiply+0x114>
   22fb4:	6106      	str	r6, [r0, #16]
   22fb6:	b003      	add	sp, #12
   22fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22fbc:	f843 2b04 	str.w	r2, [r3], #4
   22fc0:	e7e3      	b.n	22f8a <__multiply+0x40>
   22fc2:	f8b3 a000 	ldrh.w	sl, [r3]
   22fc6:	3204      	adds	r2, #4
   22fc8:	f1ba 0f00 	cmp.w	sl, #0
   22fcc:	d020      	beq.n	23010 <__multiply+0xc6>
   22fce:	46ae      	mov	lr, r5
   22fd0:	4689      	mov	r9, r1
   22fd2:	f04f 0c00 	mov.w	ip, #0
   22fd6:	f859 4b04 	ldr.w	r4, [r9], #4
   22fda:	f8be b000 	ldrh.w	fp, [lr]
   22fde:	b2a3      	uxth	r3, r4
   22fe0:	fb0a b303 	mla	r3, sl, r3, fp
   22fe4:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   22fe8:	f8de 4000 	ldr.w	r4, [lr]
   22fec:	4463      	add	r3, ip
   22fee:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   22ff2:	fb0a c40b 	mla	r4, sl, fp, ip
   22ff6:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   22ffa:	b29b      	uxth	r3, r3
   22ffc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   23000:	454f      	cmp	r7, r9
   23002:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   23006:	f84e 3b04 	str.w	r3, [lr], #4
   2300a:	d8e4      	bhi.n	22fd6 <__multiply+0x8c>
   2300c:	f8ce c000 	str.w	ip, [lr]
   23010:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   23014:	f1b9 0f00 	cmp.w	r9, #0
   23018:	d01f      	beq.n	2305a <__multiply+0x110>
   2301a:	46ae      	mov	lr, r5
   2301c:	468c      	mov	ip, r1
   2301e:	f04f 0a00 	mov.w	sl, #0
   23022:	682b      	ldr	r3, [r5, #0]
   23024:	f8bc 4000 	ldrh.w	r4, [ip]
   23028:	f8be b002 	ldrh.w	fp, [lr, #2]
   2302c:	b29b      	uxth	r3, r3
   2302e:	fb09 b404 	mla	r4, r9, r4, fp
   23032:	44a2      	add	sl, r4
   23034:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   23038:	f84e 3b04 	str.w	r3, [lr], #4
   2303c:	f85c 3b04 	ldr.w	r3, [ip], #4
   23040:	f8be 4000 	ldrh.w	r4, [lr]
   23044:	0c1b      	lsrs	r3, r3, #16
   23046:	fb09 4303 	mla	r3, r9, r3, r4
   2304a:	4567      	cmp	r7, ip
   2304c:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   23050:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   23054:	d8e6      	bhi.n	23024 <__multiply+0xda>
   23056:	f8ce 3000 	str.w	r3, [lr]
   2305a:	3504      	adds	r5, #4
   2305c:	e7a0      	b.n	22fa0 <__multiply+0x56>
   2305e:	3e01      	subs	r6, #1
   23060:	e7a2      	b.n	22fa8 <__multiply+0x5e>
   23062:	Address 0x0000000000023062 is out of bounds.


00023064 <__pow5mult>:
__pow5mult():
   23064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   23068:	4615      	mov	r5, r2
   2306a:	f012 0203 	ands.w	r2, r2, #3
   2306e:	4606      	mov	r6, r0
   23070:	460f      	mov	r7, r1
   23072:	d007      	beq.n	23084 <__pow5mult+0x20>
   23074:	4c21      	ldr	r4, [pc, #132]	; (230fc <__pow5mult+0x98>)
   23076:	3a01      	subs	r2, #1
   23078:	2300      	movs	r3, #0
   2307a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   2307e:	f7ff fe94 	bl	22daa <__multadd>
   23082:	4607      	mov	r7, r0
   23084:	10ad      	asrs	r5, r5, #2
   23086:	d035      	beq.n	230f4 <__pow5mult+0x90>
   23088:	6a74      	ldr	r4, [r6, #36]	; 0x24
   2308a:	b93c      	cbnz	r4, 2309c <__pow5mult+0x38>
   2308c:	2010      	movs	r0, #16
   2308e:	f7fb fa09 	bl	1e4a4 <malloc>
   23092:	6270      	str	r0, [r6, #36]	; 0x24
   23094:	6044      	str	r4, [r0, #4]
   23096:	6084      	str	r4, [r0, #8]
   23098:	6004      	str	r4, [r0, #0]
   2309a:	60c4      	str	r4, [r0, #12]
   2309c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   230a0:	f8d8 4008 	ldr.w	r4, [r8, #8]
   230a4:	b94c      	cbnz	r4, 230ba <__pow5mult+0x56>
   230a6:	f240 2171 	movw	r1, #625	; 0x271
   230aa:	4630      	mov	r0, r6
   230ac:	f7ff ff44 	bl	22f38 <__i2b>
   230b0:	2300      	movs	r3, #0
   230b2:	4604      	mov	r4, r0
   230b4:	f8c8 0008 	str.w	r0, [r8, #8]
   230b8:	6003      	str	r3, [r0, #0]
   230ba:	f04f 0800 	mov.w	r8, #0
   230be:	07eb      	lsls	r3, r5, #31
   230c0:	d50a      	bpl.n	230d8 <__pow5mult+0x74>
   230c2:	4639      	mov	r1, r7
   230c4:	4622      	mov	r2, r4
   230c6:	4630      	mov	r0, r6
   230c8:	f7ff ff3f 	bl	22f4a <__multiply>
   230cc:	4681      	mov	r9, r0
   230ce:	4639      	mov	r1, r7
   230d0:	4630      	mov	r0, r6
   230d2:	f7ff fe53 	bl	22d7c <_Bfree>
   230d6:	464f      	mov	r7, r9
   230d8:	106d      	asrs	r5, r5, #1
   230da:	d00b      	beq.n	230f4 <__pow5mult+0x90>
   230dc:	6820      	ldr	r0, [r4, #0]
   230de:	b938      	cbnz	r0, 230f0 <__pow5mult+0x8c>
   230e0:	4622      	mov	r2, r4
   230e2:	4621      	mov	r1, r4
   230e4:	4630      	mov	r0, r6
   230e6:	f7ff ff30 	bl	22f4a <__multiply>
   230ea:	6020      	str	r0, [r4, #0]
   230ec:	f8c0 8000 	str.w	r8, [r0]
   230f0:	4604      	mov	r4, r0
   230f2:	e7e4      	b.n	230be <__pow5mult+0x5a>
   230f4:	4638      	mov	r0, r7
   230f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   230fa:	bf00      	nop
   230fc:	00027790 	.word	0x00027790

00023100 <__lshift>:
__lshift():
   23100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23104:	460c      	mov	r4, r1
   23106:	4607      	mov	r7, r0
   23108:	4616      	mov	r6, r2
   2310a:	6923      	ldr	r3, [r4, #16]
   2310c:	ea4f 1a62 	mov.w	sl, r2, asr #5
   23110:	eb0a 0903 	add.w	r9, sl, r3
   23114:	6849      	ldr	r1, [r1, #4]
   23116:	68a3      	ldr	r3, [r4, #8]
   23118:	f109 0501 	add.w	r5, r9, #1
   2311c:	42ab      	cmp	r3, r5
   2311e:	db31      	blt.n	23184 <__lshift+0x84>
   23120:	4638      	mov	r0, r7
   23122:	f7ff fdf7 	bl	22d14 <_Balloc>
   23126:	2200      	movs	r2, #0
   23128:	4680      	mov	r8, r0
   2312a:	4611      	mov	r1, r2
   2312c:	f100 0314 	add.w	r3, r0, #20
   23130:	4552      	cmp	r2, sl
   23132:	db2a      	blt.n	2318a <__lshift+0x8a>
   23134:	6920      	ldr	r0, [r4, #16]
   23136:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   2313a:	f104 0114 	add.w	r1, r4, #20
   2313e:	f016 021f 	ands.w	r2, r6, #31
   23142:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   23146:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   2314a:	d022      	beq.n	23192 <__lshift+0x92>
   2314c:	2000      	movs	r0, #0
   2314e:	f1c2 0c20 	rsb	ip, r2, #32
   23152:	680e      	ldr	r6, [r1, #0]
   23154:	4096      	lsls	r6, r2
   23156:	4330      	orrs	r0, r6
   23158:	f843 0b04 	str.w	r0, [r3], #4
   2315c:	f851 0b04 	ldr.w	r0, [r1], #4
   23160:	458e      	cmp	lr, r1
   23162:	fa20 f00c 	lsr.w	r0, r0, ip
   23166:	d8f4      	bhi.n	23152 <__lshift+0x52>
   23168:	6018      	str	r0, [r3, #0]
   2316a:	b108      	cbz	r0, 23170 <__lshift+0x70>
   2316c:	f109 0502 	add.w	r5, r9, #2
   23170:	3d01      	subs	r5, #1
   23172:	4638      	mov	r0, r7
   23174:	f8c8 5010 	str.w	r5, [r8, #16]
   23178:	4621      	mov	r1, r4
   2317a:	f7ff fdff 	bl	22d7c <_Bfree>
   2317e:	4640      	mov	r0, r8
   23180:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23184:	3101      	adds	r1, #1
   23186:	005b      	lsls	r3, r3, #1
   23188:	e7c8      	b.n	2311c <__lshift+0x1c>
   2318a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   2318e:	3201      	adds	r2, #1
   23190:	e7ce      	b.n	23130 <__lshift+0x30>
   23192:	3b04      	subs	r3, #4
   23194:	f851 2b04 	ldr.w	r2, [r1], #4
   23198:	458e      	cmp	lr, r1
   2319a:	f843 2f04 	str.w	r2, [r3, #4]!
   2319e:	d8f9      	bhi.n	23194 <__lshift+0x94>
   231a0:	e7e6      	b.n	23170 <__lshift+0x70>

000231a2 <__mcmp>:
__mcmp():
   231a2:	6903      	ldr	r3, [r0, #16]
   231a4:	690a      	ldr	r2, [r1, #16]
   231a6:	b530      	push	{r4, r5, lr}
   231a8:	1a9b      	subs	r3, r3, r2
   231aa:	d10c      	bne.n	231c6 <__mcmp+0x24>
   231ac:	0092      	lsls	r2, r2, #2
   231ae:	3014      	adds	r0, #20
   231b0:	3114      	adds	r1, #20
   231b2:	1884      	adds	r4, r0, r2
   231b4:	4411      	add	r1, r2
   231b6:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   231ba:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   231be:	4295      	cmp	r5, r2
   231c0:	d003      	beq.n	231ca <__mcmp+0x28>
   231c2:	d305      	bcc.n	231d0 <__mcmp+0x2e>
   231c4:	2301      	movs	r3, #1
   231c6:	4618      	mov	r0, r3
   231c8:	bd30      	pop	{r4, r5, pc}
   231ca:	42a0      	cmp	r0, r4
   231cc:	d3f3      	bcc.n	231b6 <__mcmp+0x14>
   231ce:	e7fa      	b.n	231c6 <__mcmp+0x24>
   231d0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   231d4:	e7f7      	b.n	231c6 <__mcmp+0x24>

000231d6 <__mdiff>:
__mdiff():
   231d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   231da:	460d      	mov	r5, r1
   231dc:	4607      	mov	r7, r0
   231de:	4611      	mov	r1, r2
   231e0:	4628      	mov	r0, r5
   231e2:	4614      	mov	r4, r2
   231e4:	f7ff ffdd 	bl	231a2 <__mcmp>
   231e8:	1e06      	subs	r6, r0, #0
   231ea:	d108      	bne.n	231fe <__mdiff+0x28>
   231ec:	4631      	mov	r1, r6
   231ee:	4638      	mov	r0, r7
   231f0:	f7ff fd90 	bl	22d14 <_Balloc>
   231f4:	2301      	movs	r3, #1
   231f6:	6146      	str	r6, [r0, #20]
   231f8:	6103      	str	r3, [r0, #16]
   231fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   231fe:	bfa4      	itt	ge
   23200:	4623      	movge	r3, r4
   23202:	462c      	movge	r4, r5
   23204:	4638      	mov	r0, r7
   23206:	6861      	ldr	r1, [r4, #4]
   23208:	bfa6      	itte	ge
   2320a:	461d      	movge	r5, r3
   2320c:	2600      	movge	r6, #0
   2320e:	2601      	movlt	r6, #1
   23210:	f7ff fd80 	bl	22d14 <_Balloc>
   23214:	f04f 0c00 	mov.w	ip, #0
   23218:	60c6      	str	r6, [r0, #12]
   2321a:	692b      	ldr	r3, [r5, #16]
   2321c:	6926      	ldr	r6, [r4, #16]
   2321e:	f104 0214 	add.w	r2, r4, #20
   23222:	f105 0914 	add.w	r9, r5, #20
   23226:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   2322a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   2322e:	f100 0114 	add.w	r1, r0, #20
   23232:	f852 ab04 	ldr.w	sl, [r2], #4
   23236:	f859 5b04 	ldr.w	r5, [r9], #4
   2323a:	fa1f f38a 	uxth.w	r3, sl
   2323e:	4463      	add	r3, ip
   23240:	b2ac      	uxth	r4, r5
   23242:	1b1b      	subs	r3, r3, r4
   23244:	0c2c      	lsrs	r4, r5, #16
   23246:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   2324a:	eb04 4423 	add.w	r4, r4, r3, asr #16
   2324e:	b29b      	uxth	r3, r3
   23250:	ea4f 4c24 	mov.w	ip, r4, asr #16
   23254:	45c8      	cmp	r8, r9
   23256:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   2325a:	4696      	mov	lr, r2
   2325c:	f841 4b04 	str.w	r4, [r1], #4
   23260:	d8e7      	bhi.n	23232 <__mdiff+0x5c>
   23262:	45be      	cmp	lr, r7
   23264:	d305      	bcc.n	23272 <__mdiff+0x9c>
   23266:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   2326a:	b18b      	cbz	r3, 23290 <__mdiff+0xba>
   2326c:	6106      	str	r6, [r0, #16]
   2326e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23272:	f85e 4b04 	ldr.w	r4, [lr], #4
   23276:	b2a2      	uxth	r2, r4
   23278:	4462      	add	r2, ip
   2327a:	1413      	asrs	r3, r2, #16
   2327c:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   23280:	b292      	uxth	r2, r2
   23282:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   23286:	ea4f 4c23 	mov.w	ip, r3, asr #16
   2328a:	f841 2b04 	str.w	r2, [r1], #4
   2328e:	e7e8      	b.n	23262 <__mdiff+0x8c>
   23290:	3e01      	subs	r6, #1
   23292:	e7e8      	b.n	23266 <__mdiff+0x90>

00023294 <__ulp>:
__ulp():
   23294:	4b10      	ldr	r3, [pc, #64]	; (232d8 <__ulp+0x44>)
   23296:	400b      	ands	r3, r1
   23298:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   2329c:	2b00      	cmp	r3, #0
   2329e:	dd02      	ble.n	232a6 <__ulp+0x12>
   232a0:	2000      	movs	r0, #0
   232a2:	4619      	mov	r1, r3
   232a4:	4770      	bx	lr
   232a6:	425b      	negs	r3, r3
   232a8:	151b      	asrs	r3, r3, #20
   232aa:	2b13      	cmp	r3, #19
   232ac:	f04f 0000 	mov.w	r0, #0
   232b0:	f04f 0100 	mov.w	r1, #0
   232b4:	dc04      	bgt.n	232c0 <__ulp+0x2c>
   232b6:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   232ba:	fa42 f103 	asr.w	r1, r2, r3
   232be:	4770      	bx	lr
   232c0:	2201      	movs	r2, #1
   232c2:	3b14      	subs	r3, #20
   232c4:	2b1e      	cmp	r3, #30
   232c6:	bfce      	itee	gt
   232c8:	4613      	movgt	r3, r2
   232ca:	f1c3 031f 	rsble	r3, r3, #31
   232ce:	fa02 f303 	lslle.w	r3, r2, r3
   232d2:	4618      	mov	r0, r3
   232d4:	4770      	bx	lr
   232d6:	bf00      	nop
   232d8:	7ff00000 	.word	0x7ff00000

000232dc <__b2d>:
__b2d():
   232dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   232e0:	6907      	ldr	r7, [r0, #16]
   232e2:	f100 0914 	add.w	r9, r0, #20
   232e6:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   232ea:	f857 6c04 	ldr.w	r6, [r7, #-4]
   232ee:	f1a7 0804 	sub.w	r8, r7, #4
   232f2:	4630      	mov	r0, r6
   232f4:	f7ff fdd2 	bl	22e9c <__hi0bits>
   232f8:	f1c0 0320 	rsb	r3, r0, #32
   232fc:	280a      	cmp	r0, #10
   232fe:	600b      	str	r3, [r1, #0]
   23300:	491e      	ldr	r1, [pc, #120]	; (2337c <__b2d+0xa0>)
   23302:	dc17      	bgt.n	23334 <__b2d+0x58>
   23304:	45c1      	cmp	r9, r8
   23306:	bf28      	it	cs
   23308:	2200      	movcs	r2, #0
   2330a:	f1c0 0e0b 	rsb	lr, r0, #11
   2330e:	fa26 f30e 	lsr.w	r3, r6, lr
   23312:	bf38      	it	cc
   23314:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   23318:	ea43 0501 	orr.w	r5, r3, r1
   2331c:	f100 0315 	add.w	r3, r0, #21
   23320:	fa06 f303 	lsl.w	r3, r6, r3
   23324:	fa22 f20e 	lsr.w	r2, r2, lr
   23328:	ea43 0402 	orr.w	r4, r3, r2
   2332c:	4620      	mov	r0, r4
   2332e:	4629      	mov	r1, r5
   23330:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   23334:	45c1      	cmp	r9, r8
   23336:	bf3a      	itte	cc
   23338:	f1a7 0808 	subcc.w	r8, r7, #8
   2333c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   23340:	2200      	movcs	r2, #0
   23342:	f1b0 030b 	subs.w	r3, r0, #11
   23346:	d015      	beq.n	23374 <__b2d+0x98>
   23348:	409e      	lsls	r6, r3
   2334a:	f1c3 0720 	rsb	r7, r3, #32
   2334e:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   23352:	fa22 f107 	lsr.w	r1, r2, r7
   23356:	45c8      	cmp	r8, r9
   23358:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   2335c:	ea46 0501 	orr.w	r5, r6, r1
   23360:	bf94      	ite	ls
   23362:	2100      	movls	r1, #0
   23364:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   23368:	fa02 f003 	lsl.w	r0, r2, r3
   2336c:	40f9      	lsrs	r1, r7
   2336e:	ea40 0401 	orr.w	r4, r0, r1
   23372:	e7db      	b.n	2332c <__b2d+0x50>
   23374:	ea46 0501 	orr.w	r5, r6, r1
   23378:	4614      	mov	r4, r2
   2337a:	e7d7      	b.n	2332c <__b2d+0x50>
   2337c:	3ff00000 	.word	0x3ff00000

00023380 <__d2b>:
__d2b():
   23380:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   23384:	461c      	mov	r4, r3
   23386:	2101      	movs	r1, #1
   23388:	4690      	mov	r8, r2
   2338a:	9e08      	ldr	r6, [sp, #32]
   2338c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   2338e:	f7ff fcc1 	bl	22d14 <_Balloc>
   23392:	f3c4 0213 	ubfx	r2, r4, #0, #20
   23396:	f3c4 540a 	ubfx	r4, r4, #20, #11
   2339a:	4607      	mov	r7, r0
   2339c:	bb34      	cbnz	r4, 233ec <__d2b+0x6c>
   2339e:	9201      	str	r2, [sp, #4]
   233a0:	f1b8 0f00 	cmp.w	r8, #0
   233a4:	d027      	beq.n	233f6 <__d2b+0x76>
   233a6:	a802      	add	r0, sp, #8
   233a8:	f840 8d08 	str.w	r8, [r0, #-8]!
   233ac:	f7ff fd95 	bl	22eda <__lo0bits>
   233b0:	9900      	ldr	r1, [sp, #0]
   233b2:	b1f0      	cbz	r0, 233f2 <__d2b+0x72>
   233b4:	9a01      	ldr	r2, [sp, #4]
   233b6:	f1c0 0320 	rsb	r3, r0, #32
   233ba:	fa02 f303 	lsl.w	r3, r2, r3
   233be:	430b      	orrs	r3, r1
   233c0:	40c2      	lsrs	r2, r0
   233c2:	617b      	str	r3, [r7, #20]
   233c4:	9201      	str	r2, [sp, #4]
   233c6:	9b01      	ldr	r3, [sp, #4]
   233c8:	2b00      	cmp	r3, #0
   233ca:	bf14      	ite	ne
   233cc:	2102      	movne	r1, #2
   233ce:	2101      	moveq	r1, #1
   233d0:	61bb      	str	r3, [r7, #24]
   233d2:	6139      	str	r1, [r7, #16]
   233d4:	b1c4      	cbz	r4, 23408 <__d2b+0x88>
   233d6:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   233da:	4404      	add	r4, r0
   233dc:	6034      	str	r4, [r6, #0]
   233de:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   233e2:	6028      	str	r0, [r5, #0]
   233e4:	4638      	mov	r0, r7
   233e6:	b002      	add	sp, #8
   233e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   233ec:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   233f0:	e7d5      	b.n	2339e <__d2b+0x1e>
   233f2:	6179      	str	r1, [r7, #20]
   233f4:	e7e7      	b.n	233c6 <__d2b+0x46>
   233f6:	a801      	add	r0, sp, #4
   233f8:	f7ff fd6f 	bl	22eda <__lo0bits>
   233fc:	2101      	movs	r1, #1
   233fe:	9b01      	ldr	r3, [sp, #4]
   23400:	6139      	str	r1, [r7, #16]
   23402:	617b      	str	r3, [r7, #20]
   23404:	3020      	adds	r0, #32
   23406:	e7e5      	b.n	233d4 <__d2b+0x54>
   23408:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   2340c:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   23410:	6030      	str	r0, [r6, #0]
   23412:	6918      	ldr	r0, [r3, #16]
   23414:	f7ff fd42 	bl	22e9c <__hi0bits>
   23418:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   2341c:	e7e1      	b.n	233e2 <__d2b+0x62>

0002341e <__ratio>:
__ratio():
   2341e:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   23422:	4688      	mov	r8, r1
   23424:	4669      	mov	r1, sp
   23426:	4681      	mov	r9, r0
   23428:	f7ff ff58 	bl	232dc <__b2d>
   2342c:	460d      	mov	r5, r1
   2342e:	4604      	mov	r4, r0
   23430:	a901      	add	r1, sp, #4
   23432:	4640      	mov	r0, r8
   23434:	f7ff ff52 	bl	232dc <__b2d>
   23438:	f8d9 3010 	ldr.w	r3, [r9, #16]
   2343c:	f8d8 2010 	ldr.w	r2, [r8, #16]
   23440:	9e00      	ldr	r6, [sp, #0]
   23442:	1a9a      	subs	r2, r3, r2
   23444:	9b01      	ldr	r3, [sp, #4]
   23446:	1af3      	subs	r3, r6, r3
   23448:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   2344c:	2b00      	cmp	r3, #0
   2344e:	bfd6      	itet	le
   23450:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   23454:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   23458:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   2345c:	4602      	mov	r2, r0
   2345e:	460b      	mov	r3, r1
   23460:	4620      	mov	r0, r4
   23462:	4629      	mov	r1, r5
   23464:	f7f9 fdac 	bl	1cfc0 <__aeabi_ddiv>
   23468:	b002      	add	sp, #8
   2346a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0002346e <__copybits>:
__copybits():
   2346e:	3901      	subs	r1, #1
   23470:	b510      	push	{r4, lr}
   23472:	1149      	asrs	r1, r1, #5
   23474:	6914      	ldr	r4, [r2, #16]
   23476:	3101      	adds	r1, #1
   23478:	f102 0314 	add.w	r3, r2, #20
   2347c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   23480:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   23484:	42a3      	cmp	r3, r4
   23486:	4602      	mov	r2, r0
   23488:	d303      	bcc.n	23492 <__copybits+0x24>
   2348a:	2300      	movs	r3, #0
   2348c:	428a      	cmp	r2, r1
   2348e:	d305      	bcc.n	2349c <__copybits+0x2e>
   23490:	bd10      	pop	{r4, pc}
   23492:	f853 2b04 	ldr.w	r2, [r3], #4
   23496:	f840 2b04 	str.w	r2, [r0], #4
   2349a:	e7f3      	b.n	23484 <__copybits+0x16>
   2349c:	f842 3b04 	str.w	r3, [r2], #4
   234a0:	e7f4      	b.n	2348c <__copybits+0x1e>

000234a2 <__any_on>:
__any_on():
   234a2:	f100 0214 	add.w	r2, r0, #20
   234a6:	6900      	ldr	r0, [r0, #16]
   234a8:	114b      	asrs	r3, r1, #5
   234aa:	4298      	cmp	r0, r3
   234ac:	b510      	push	{r4, lr}
   234ae:	db11      	blt.n	234d4 <__any_on+0x32>
   234b0:	dd0a      	ble.n	234c8 <__any_on+0x26>
   234b2:	f011 011f 	ands.w	r1, r1, #31
   234b6:	d007      	beq.n	234c8 <__any_on+0x26>
   234b8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   234bc:	fa24 f001 	lsr.w	r0, r4, r1
   234c0:	fa00 f101 	lsl.w	r1, r0, r1
   234c4:	428c      	cmp	r4, r1
   234c6:	d10b      	bne.n	234e0 <__any_on+0x3e>
   234c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   234cc:	4293      	cmp	r3, r2
   234ce:	d803      	bhi.n	234d8 <__any_on+0x36>
   234d0:	2000      	movs	r0, #0
   234d2:	bd10      	pop	{r4, pc}
   234d4:	4603      	mov	r3, r0
   234d6:	e7f7      	b.n	234c8 <__any_on+0x26>
   234d8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   234dc:	2900      	cmp	r1, #0
   234de:	d0f5      	beq.n	234cc <__any_on+0x2a>
   234e0:	2001      	movs	r0, #1
   234e2:	bd10      	pop	{r4, pc}

000234e4 <_realloc_r>:
_realloc_r():
   234e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   234e6:	4607      	mov	r7, r0
   234e8:	4614      	mov	r4, r2
   234ea:	460e      	mov	r6, r1
   234ec:	b921      	cbnz	r1, 234f8 <_realloc_r+0x14>
   234ee:	4611      	mov	r1, r2
   234f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   234f4:	f7fb bb34 	b.w	1eb60 <_malloc_r>
   234f8:	b922      	cbnz	r2, 23504 <_realloc_r+0x20>
   234fa:	f7fb fab3 	bl	1ea64 <_free_r>
   234fe:	4625      	mov	r5, r4
   23500:	4628      	mov	r0, r5
   23502:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   23504:	f001 f8ba 	bl	2467c <_malloc_usable_size_r>
   23508:	4284      	cmp	r4, r0
   2350a:	d90f      	bls.n	2352c <_realloc_r+0x48>
   2350c:	4621      	mov	r1, r4
   2350e:	4638      	mov	r0, r7
   23510:	f7fb fb26 	bl	1eb60 <_malloc_r>
   23514:	4605      	mov	r5, r0
   23516:	2800      	cmp	r0, #0
   23518:	d0f2      	beq.n	23500 <_realloc_r+0x1c>
   2351a:	4631      	mov	r1, r6
   2351c:	4622      	mov	r2, r4
   2351e:	f7fb f800 	bl	1e522 <memcpy>
   23522:	4631      	mov	r1, r6
   23524:	4638      	mov	r0, r7
   23526:	f7fb fa9d 	bl	1ea64 <_free_r>
   2352a:	e7e9      	b.n	23500 <_realloc_r+0x1c>
   2352c:	4635      	mov	r5, r6
   2352e:	e7e7      	b.n	23500 <_realloc_r+0x1c>

00023530 <__ssputs_r>:
__ssputs_r():
   23530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23534:	688e      	ldr	r6, [r1, #8]
   23536:	4682      	mov	sl, r0
   23538:	429e      	cmp	r6, r3
   2353a:	460c      	mov	r4, r1
   2353c:	4691      	mov	r9, r2
   2353e:	4698      	mov	r8, r3
   23540:	d835      	bhi.n	235ae <__ssputs_r+0x7e>
   23542:	898a      	ldrh	r2, [r1, #12]
   23544:	f412 6f90 	tst.w	r2, #1152	; 0x480
   23548:	d031      	beq.n	235ae <__ssputs_r+0x7e>
   2354a:	2302      	movs	r3, #2
   2354c:	6825      	ldr	r5, [r4, #0]
   2354e:	6909      	ldr	r1, [r1, #16]
   23550:	1a6f      	subs	r7, r5, r1
   23552:	6965      	ldr	r5, [r4, #20]
   23554:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   23558:	fb95 f5f3 	sdiv	r5, r5, r3
   2355c:	f108 0301 	add.w	r3, r8, #1
   23560:	443b      	add	r3, r7
   23562:	429d      	cmp	r5, r3
   23564:	bf38      	it	cc
   23566:	461d      	movcc	r5, r3
   23568:	0553      	lsls	r3, r2, #21
   2356a:	d531      	bpl.n	235d0 <__ssputs_r+0xa0>
   2356c:	4629      	mov	r1, r5
   2356e:	f7fb faf7 	bl	1eb60 <_malloc_r>
   23572:	4606      	mov	r6, r0
   23574:	b950      	cbnz	r0, 2358c <__ssputs_r+0x5c>
   23576:	230c      	movs	r3, #12
   23578:	f8ca 3000 	str.w	r3, [sl]
   2357c:	89a3      	ldrh	r3, [r4, #12]
   2357e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23582:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23586:	81a3      	strh	r3, [r4, #12]
   23588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2358c:	463a      	mov	r2, r7
   2358e:	6921      	ldr	r1, [r4, #16]
   23590:	f7fa ffc7 	bl	1e522 <memcpy>
   23594:	89a3      	ldrh	r3, [r4, #12]
   23596:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   2359a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   2359e:	81a3      	strh	r3, [r4, #12]
   235a0:	6126      	str	r6, [r4, #16]
   235a2:	443e      	add	r6, r7
   235a4:	6026      	str	r6, [r4, #0]
   235a6:	4646      	mov	r6, r8
   235a8:	6165      	str	r5, [r4, #20]
   235aa:	1bed      	subs	r5, r5, r7
   235ac:	60a5      	str	r5, [r4, #8]
   235ae:	4546      	cmp	r6, r8
   235b0:	bf28      	it	cs
   235b2:	4646      	movcs	r6, r8
   235b4:	4649      	mov	r1, r9
   235b6:	4632      	mov	r2, r6
   235b8:	6820      	ldr	r0, [r4, #0]
   235ba:	f7fa ffbd 	bl	1e538 <memmove>
   235be:	68a3      	ldr	r3, [r4, #8]
   235c0:	2000      	movs	r0, #0
   235c2:	1b9b      	subs	r3, r3, r6
   235c4:	60a3      	str	r3, [r4, #8]
   235c6:	6823      	ldr	r3, [r4, #0]
   235c8:	441e      	add	r6, r3
   235ca:	6026      	str	r6, [r4, #0]
   235cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   235d0:	462a      	mov	r2, r5
   235d2:	f7ff ff87 	bl	234e4 <_realloc_r>
   235d6:	4606      	mov	r6, r0
   235d8:	2800      	cmp	r0, #0
   235da:	d1e1      	bne.n	235a0 <__ssputs_r+0x70>
   235dc:	6921      	ldr	r1, [r4, #16]
   235de:	4650      	mov	r0, sl
   235e0:	f7fb fa40 	bl	1ea64 <_free_r>
   235e4:	e7c7      	b.n	23576 <__ssputs_r+0x46>
   235e6:	Address 0x00000000000235e6 is out of bounds.


000235e8 <_svfiprintf_r>:
_svfiprintf_r():
   235e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235ec:	b09d      	sub	sp, #116	; 0x74
   235ee:	9303      	str	r3, [sp, #12]
   235f0:	898b      	ldrh	r3, [r1, #12]
   235f2:	4680      	mov	r8, r0
   235f4:	061c      	lsls	r4, r3, #24
   235f6:	460d      	mov	r5, r1
   235f8:	4616      	mov	r6, r2
   235fa:	d50f      	bpl.n	2361c <_svfiprintf_r+0x34>
   235fc:	690b      	ldr	r3, [r1, #16]
   235fe:	b96b      	cbnz	r3, 2361c <_svfiprintf_r+0x34>
   23600:	2140      	movs	r1, #64	; 0x40
   23602:	f7fb faad 	bl	1eb60 <_malloc_r>
   23606:	6028      	str	r0, [r5, #0]
   23608:	6128      	str	r0, [r5, #16]
   2360a:	b928      	cbnz	r0, 23618 <_svfiprintf_r+0x30>
   2360c:	230c      	movs	r3, #12
   2360e:	f8c8 3000 	str.w	r3, [r8]
   23612:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23616:	e0c4      	b.n	237a2 <_svfiprintf_r+0x1ba>
   23618:	2340      	movs	r3, #64	; 0x40
   2361a:	616b      	str	r3, [r5, #20]
   2361c:	2300      	movs	r3, #0
   2361e:	9309      	str	r3, [sp, #36]	; 0x24
   23620:	2320      	movs	r3, #32
   23622:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   23626:	2330      	movs	r3, #48	; 0x30
   23628:	f04f 0b01 	mov.w	fp, #1
   2362c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   23630:	4637      	mov	r7, r6
   23632:	463c      	mov	r4, r7
   23634:	f814 3b01 	ldrb.w	r3, [r4], #1
   23638:	2b00      	cmp	r3, #0
   2363a:	d13c      	bne.n	236b6 <_svfiprintf_r+0xce>
   2363c:	ebb7 0a06 	subs.w	sl, r7, r6
   23640:	d00b      	beq.n	2365a <_svfiprintf_r+0x72>
   23642:	4653      	mov	r3, sl
   23644:	4632      	mov	r2, r6
   23646:	4629      	mov	r1, r5
   23648:	4640      	mov	r0, r8
   2364a:	f7ff ff71 	bl	23530 <__ssputs_r>
   2364e:	3001      	adds	r0, #1
   23650:	f000 80a2 	beq.w	23798 <_svfiprintf_r+0x1b0>
   23654:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23656:	4453      	add	r3, sl
   23658:	9309      	str	r3, [sp, #36]	; 0x24
   2365a:	783b      	ldrb	r3, [r7, #0]
   2365c:	2b00      	cmp	r3, #0
   2365e:	f000 809b 	beq.w	23798 <_svfiprintf_r+0x1b0>
   23662:	2300      	movs	r3, #0
   23664:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   23668:	9304      	str	r3, [sp, #16]
   2366a:	9307      	str	r3, [sp, #28]
   2366c:	9205      	str	r2, [sp, #20]
   2366e:	9306      	str	r3, [sp, #24]
   23670:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   23674:	931a      	str	r3, [sp, #104]	; 0x68
   23676:	2205      	movs	r2, #5
   23678:	7821      	ldrb	r1, [r4, #0]
   2367a:	4850      	ldr	r0, [pc, #320]	; (237bc <_svfiprintf_r+0x1d4>)
   2367c:	f7fa ff34 	bl	1e4e8 <memchr>
   23680:	1c67      	adds	r7, r4, #1
   23682:	9b04      	ldr	r3, [sp, #16]
   23684:	b9d8      	cbnz	r0, 236be <_svfiprintf_r+0xd6>
   23686:	06d9      	lsls	r1, r3, #27
   23688:	bf44      	itt	mi
   2368a:	2220      	movmi	r2, #32
   2368c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   23690:	071a      	lsls	r2, r3, #28
   23692:	bf44      	itt	mi
   23694:	222b      	movmi	r2, #43	; 0x2b
   23696:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2369a:	7822      	ldrb	r2, [r4, #0]
   2369c:	2a2a      	cmp	r2, #42	; 0x2a
   2369e:	d016      	beq.n	236ce <_svfiprintf_r+0xe6>
   236a0:	2100      	movs	r1, #0
   236a2:	200a      	movs	r0, #10
   236a4:	9a07      	ldr	r2, [sp, #28]
   236a6:	4627      	mov	r7, r4
   236a8:	783b      	ldrb	r3, [r7, #0]
   236aa:	3401      	adds	r4, #1
   236ac:	3b30      	subs	r3, #48	; 0x30
   236ae:	2b09      	cmp	r3, #9
   236b0:	d950      	bls.n	23754 <_svfiprintf_r+0x16c>
   236b2:	b1c9      	cbz	r1, 236e8 <_svfiprintf_r+0x100>
   236b4:	e011      	b.n	236da <_svfiprintf_r+0xf2>
   236b6:	2b25      	cmp	r3, #37	; 0x25
   236b8:	d0c0      	beq.n	2363c <_svfiprintf_r+0x54>
   236ba:	4627      	mov	r7, r4
   236bc:	e7b9      	b.n	23632 <_svfiprintf_r+0x4a>
   236be:	4a3f      	ldr	r2, [pc, #252]	; (237bc <_svfiprintf_r+0x1d4>)
   236c0:	463c      	mov	r4, r7
   236c2:	1a80      	subs	r0, r0, r2
   236c4:	fa0b f000 	lsl.w	r0, fp, r0
   236c8:	4318      	orrs	r0, r3
   236ca:	9004      	str	r0, [sp, #16]
   236cc:	e7d3      	b.n	23676 <_svfiprintf_r+0x8e>
   236ce:	9a03      	ldr	r2, [sp, #12]
   236d0:	1d11      	adds	r1, r2, #4
   236d2:	6812      	ldr	r2, [r2, #0]
   236d4:	9103      	str	r1, [sp, #12]
   236d6:	2a00      	cmp	r2, #0
   236d8:	db01      	blt.n	236de <_svfiprintf_r+0xf6>
   236da:	9207      	str	r2, [sp, #28]
   236dc:	e004      	b.n	236e8 <_svfiprintf_r+0x100>
   236de:	4252      	negs	r2, r2
   236e0:	f043 0302 	orr.w	r3, r3, #2
   236e4:	9207      	str	r2, [sp, #28]
   236e6:	9304      	str	r3, [sp, #16]
   236e8:	783b      	ldrb	r3, [r7, #0]
   236ea:	2b2e      	cmp	r3, #46	; 0x2e
   236ec:	d10d      	bne.n	2370a <_svfiprintf_r+0x122>
   236ee:	787b      	ldrb	r3, [r7, #1]
   236f0:	1c79      	adds	r1, r7, #1
   236f2:	2b2a      	cmp	r3, #42	; 0x2a
   236f4:	d132      	bne.n	2375c <_svfiprintf_r+0x174>
   236f6:	9b03      	ldr	r3, [sp, #12]
   236f8:	3702      	adds	r7, #2
   236fa:	1d1a      	adds	r2, r3, #4
   236fc:	681b      	ldr	r3, [r3, #0]
   236fe:	9203      	str	r2, [sp, #12]
   23700:	2b00      	cmp	r3, #0
   23702:	bfb8      	it	lt
   23704:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   23708:	9305      	str	r3, [sp, #20]
   2370a:	4c2d      	ldr	r4, [pc, #180]	; (237c0 <_svfiprintf_r+0x1d8>)
   2370c:	2203      	movs	r2, #3
   2370e:	7839      	ldrb	r1, [r7, #0]
   23710:	4620      	mov	r0, r4
   23712:	f7fa fee9 	bl	1e4e8 <memchr>
   23716:	b138      	cbz	r0, 23728 <_svfiprintf_r+0x140>
   23718:	2340      	movs	r3, #64	; 0x40
   2371a:	1b00      	subs	r0, r0, r4
   2371c:	fa03 f000 	lsl.w	r0, r3, r0
   23720:	9b04      	ldr	r3, [sp, #16]
   23722:	3701      	adds	r7, #1
   23724:	4303      	orrs	r3, r0
   23726:	9304      	str	r3, [sp, #16]
   23728:	7839      	ldrb	r1, [r7, #0]
   2372a:	2206      	movs	r2, #6
   2372c:	4825      	ldr	r0, [pc, #148]	; (237c4 <_svfiprintf_r+0x1dc>)
   2372e:	1c7e      	adds	r6, r7, #1
   23730:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   23734:	f7fa fed8 	bl	1e4e8 <memchr>
   23738:	2800      	cmp	r0, #0
   2373a:	d035      	beq.n	237a8 <_svfiprintf_r+0x1c0>
   2373c:	4b22      	ldr	r3, [pc, #136]	; (237c8 <_svfiprintf_r+0x1e0>)
   2373e:	b9fb      	cbnz	r3, 23780 <_svfiprintf_r+0x198>
   23740:	9b03      	ldr	r3, [sp, #12]
   23742:	3307      	adds	r3, #7
   23744:	f023 0307 	bic.w	r3, r3, #7
   23748:	3308      	adds	r3, #8
   2374a:	9303      	str	r3, [sp, #12]
   2374c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2374e:	444b      	add	r3, r9
   23750:	9309      	str	r3, [sp, #36]	; 0x24
   23752:	e76d      	b.n	23630 <_svfiprintf_r+0x48>
   23754:	fb00 3202 	mla	r2, r0, r2, r3
   23758:	2101      	movs	r1, #1
   2375a:	e7a4      	b.n	236a6 <_svfiprintf_r+0xbe>
   2375c:	2300      	movs	r3, #0
   2375e:	240a      	movs	r4, #10
   23760:	4618      	mov	r0, r3
   23762:	9305      	str	r3, [sp, #20]
   23764:	460f      	mov	r7, r1
   23766:	783a      	ldrb	r2, [r7, #0]
   23768:	3101      	adds	r1, #1
   2376a:	3a30      	subs	r2, #48	; 0x30
   2376c:	2a09      	cmp	r2, #9
   2376e:	d903      	bls.n	23778 <_svfiprintf_r+0x190>
   23770:	2b00      	cmp	r3, #0
   23772:	d0ca      	beq.n	2370a <_svfiprintf_r+0x122>
   23774:	9005      	str	r0, [sp, #20]
   23776:	e7c8      	b.n	2370a <_svfiprintf_r+0x122>
   23778:	fb04 2000 	mla	r0, r4, r0, r2
   2377c:	2301      	movs	r3, #1
   2377e:	e7f1      	b.n	23764 <_svfiprintf_r+0x17c>
   23780:	ab03      	add	r3, sp, #12
   23782:	9300      	str	r3, [sp, #0]
   23784:	462a      	mov	r2, r5
   23786:	4b11      	ldr	r3, [pc, #68]	; (237cc <_svfiprintf_r+0x1e4>)
   23788:	a904      	add	r1, sp, #16
   2378a:	4640      	mov	r0, r8
   2378c:	f7fb fad8 	bl	1ed40 <_printf_float>
   23790:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   23794:	4681      	mov	r9, r0
   23796:	d1d9      	bne.n	2374c <_svfiprintf_r+0x164>
   23798:	89ab      	ldrh	r3, [r5, #12]
   2379a:	065b      	lsls	r3, r3, #25
   2379c:	f53f af39 	bmi.w	23612 <_svfiprintf_r+0x2a>
   237a0:	9809      	ldr	r0, [sp, #36]	; 0x24
   237a2:	b01d      	add	sp, #116	; 0x74
   237a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237a8:	ab03      	add	r3, sp, #12
   237aa:	9300      	str	r3, [sp, #0]
   237ac:	462a      	mov	r2, r5
   237ae:	4b07      	ldr	r3, [pc, #28]	; (237cc <_svfiprintf_r+0x1e4>)
   237b0:	a904      	add	r1, sp, #16
   237b2:	4640      	mov	r0, r8
   237b4:	f7fb fd74 	bl	1f2a0 <_printf_i>
   237b8:	e7ea      	b.n	23790 <_svfiprintf_r+0x1a8>
   237ba:	bf00      	nop
   237bc:	0002779c 	.word	0x0002779c
   237c0:	000277a2 	.word	0x000277a2
   237c4:	000277a6 	.word	0x000277a6
   237c8:	0001ed41 	.word	0x0001ed41
   237cc:	00023531 	.word	0x00023531

000237d0 <_sungetc_r>:
_sungetc_r():
   237d0:	b538      	push	{r3, r4, r5, lr}
   237d2:	1c4b      	adds	r3, r1, #1
   237d4:	4614      	mov	r4, r2
   237d6:	d103      	bne.n	237e0 <_sungetc_r+0x10>
   237d8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   237dc:	4628      	mov	r0, r5
   237de:	bd38      	pop	{r3, r4, r5, pc}
   237e0:	8993      	ldrh	r3, [r2, #12]
   237e2:	b2cd      	uxtb	r5, r1
   237e4:	f023 0320 	bic.w	r3, r3, #32
   237e8:	8193      	strh	r3, [r2, #12]
   237ea:	6b53      	ldr	r3, [r2, #52]	; 0x34
   237ec:	6852      	ldr	r2, [r2, #4]
   237ee:	b18b      	cbz	r3, 23814 <_sungetc_r+0x44>
   237f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   237f2:	429a      	cmp	r2, r3
   237f4:	da08      	bge.n	23808 <_sungetc_r+0x38>
   237f6:	6823      	ldr	r3, [r4, #0]
   237f8:	1e5a      	subs	r2, r3, #1
   237fa:	6022      	str	r2, [r4, #0]
   237fc:	f803 5c01 	strb.w	r5, [r3, #-1]
   23800:	6863      	ldr	r3, [r4, #4]
   23802:	3301      	adds	r3, #1
   23804:	6063      	str	r3, [r4, #4]
   23806:	e7e9      	b.n	237dc <_sungetc_r+0xc>
   23808:	4621      	mov	r1, r4
   2380a:	f000 fe89 	bl	24520 <__submore>
   2380e:	2800      	cmp	r0, #0
   23810:	d0f1      	beq.n	237f6 <_sungetc_r+0x26>
   23812:	e7e1      	b.n	237d8 <_sungetc_r+0x8>
   23814:	6921      	ldr	r1, [r4, #16]
   23816:	6823      	ldr	r3, [r4, #0]
   23818:	b151      	cbz	r1, 23830 <_sungetc_r+0x60>
   2381a:	4299      	cmp	r1, r3
   2381c:	d208      	bcs.n	23830 <_sungetc_r+0x60>
   2381e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   23822:	428d      	cmp	r5, r1
   23824:	d104      	bne.n	23830 <_sungetc_r+0x60>
   23826:	3b01      	subs	r3, #1
   23828:	3201      	adds	r2, #1
   2382a:	6023      	str	r3, [r4, #0]
   2382c:	6062      	str	r2, [r4, #4]
   2382e:	e7d5      	b.n	237dc <_sungetc_r+0xc>
   23830:	63e3      	str	r3, [r4, #60]	; 0x3c
   23832:	f104 0344 	add.w	r3, r4, #68	; 0x44
   23836:	6363      	str	r3, [r4, #52]	; 0x34
   23838:	2303      	movs	r3, #3
   2383a:	63a3      	str	r3, [r4, #56]	; 0x38
   2383c:	4623      	mov	r3, r4
   2383e:	6422      	str	r2, [r4, #64]	; 0x40
   23840:	f803 5f46 	strb.w	r5, [r3, #70]!
   23844:	6023      	str	r3, [r4, #0]
   23846:	2301      	movs	r3, #1
   23848:	e7dc      	b.n	23804 <_sungetc_r+0x34>

0002384a <__ssrefill_r>:
__ssrefill_r():
   2384a:	b510      	push	{r4, lr}
   2384c:	460c      	mov	r4, r1
   2384e:	6b49      	ldr	r1, [r1, #52]	; 0x34
   23850:	b169      	cbz	r1, 2386e <__ssrefill_r+0x24>
   23852:	f104 0344 	add.w	r3, r4, #68	; 0x44
   23856:	4299      	cmp	r1, r3
   23858:	d001      	beq.n	2385e <__ssrefill_r+0x14>
   2385a:	f7fb f903 	bl	1ea64 <_free_r>
   2385e:	2000      	movs	r0, #0
   23860:	6c23      	ldr	r3, [r4, #64]	; 0x40
   23862:	6360      	str	r0, [r4, #52]	; 0x34
   23864:	6063      	str	r3, [r4, #4]
   23866:	b113      	cbz	r3, 2386e <__ssrefill_r+0x24>
   23868:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   2386a:	6023      	str	r3, [r4, #0]
   2386c:	bd10      	pop	{r4, pc}
   2386e:	6923      	ldr	r3, [r4, #16]
   23870:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23874:	6023      	str	r3, [r4, #0]
   23876:	2300      	movs	r3, #0
   23878:	6063      	str	r3, [r4, #4]
   2387a:	89a3      	ldrh	r3, [r4, #12]
   2387c:	f043 0320 	orr.w	r3, r3, #32
   23880:	81a3      	strh	r3, [r4, #12]
   23882:	bd10      	pop	{r4, pc}

00023884 <__ssvfiscanf_r>:
__ssvfiscanf_r():
   23884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23888:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   2388c:	9301      	str	r3, [sp, #4]
   2388e:	2300      	movs	r3, #0
   23890:	4606      	mov	r6, r0
   23892:	460c      	mov	r4, r1
   23894:	4692      	mov	sl, r2
   23896:	270a      	movs	r7, #10
   23898:	9346      	str	r3, [sp, #280]	; 0x118
   2389a:	9347      	str	r3, [sp, #284]	; 0x11c
   2389c:	4b9f      	ldr	r3, [pc, #636]	; (23b1c <__ssvfiscanf_r+0x298>)
   2389e:	f10d 080c 	add.w	r8, sp, #12
   238a2:	93a2      	str	r3, [sp, #648]	; 0x288
   238a4:	4b9e      	ldr	r3, [pc, #632]	; (23b20 <__ssvfiscanf_r+0x29c>)
   238a6:	f8df 927c 	ldr.w	r9, [pc, #636]	; 23b24 <__ssvfiscanf_r+0x2a0>
   238aa:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   238ae:	93a3      	str	r3, [sp, #652]	; 0x28c
   238b0:	f89a 3000 	ldrb.w	r3, [sl]
   238b4:	2b00      	cmp	r3, #0
   238b6:	f000 812f 	beq.w	23b18 <__ssvfiscanf_r+0x294>
   238ba:	f7fa fd81 	bl	1e3c0 <__locale_ctype_ptr>
   238be:	f89a b000 	ldrb.w	fp, [sl]
   238c2:	4458      	add	r0, fp
   238c4:	7843      	ldrb	r3, [r0, #1]
   238c6:	f013 0308 	ands.w	r3, r3, #8
   238ca:	d143      	bne.n	23954 <__ssvfiscanf_r+0xd0>
   238cc:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   238d0:	f10a 0501 	add.w	r5, sl, #1
   238d4:	f040 8099 	bne.w	23a0a <__ssvfiscanf_r+0x186>
   238d8:	9345      	str	r3, [sp, #276]	; 0x114
   238da:	9343      	str	r3, [sp, #268]	; 0x10c
   238dc:	f89a 3001 	ldrb.w	r3, [sl, #1]
   238e0:	2b2a      	cmp	r3, #42	; 0x2a
   238e2:	d103      	bne.n	238ec <__ssvfiscanf_r+0x68>
   238e4:	2310      	movs	r3, #16
   238e6:	f10a 0502 	add.w	r5, sl, #2
   238ea:	9343      	str	r3, [sp, #268]	; 0x10c
   238ec:	7829      	ldrb	r1, [r5, #0]
   238ee:	46aa      	mov	sl, r5
   238f0:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   238f4:	2a09      	cmp	r2, #9
   238f6:	f105 0501 	add.w	r5, r5, #1
   238fa:	d941      	bls.n	23980 <__ssvfiscanf_r+0xfc>
   238fc:	2203      	movs	r2, #3
   238fe:	4889      	ldr	r0, [pc, #548]	; (23b24 <__ssvfiscanf_r+0x2a0>)
   23900:	f7fa fdf2 	bl	1e4e8 <memchr>
   23904:	b138      	cbz	r0, 23916 <__ssvfiscanf_r+0x92>
   23906:	eba0 0309 	sub.w	r3, r0, r9
   2390a:	2001      	movs	r0, #1
   2390c:	46aa      	mov	sl, r5
   2390e:	4098      	lsls	r0, r3
   23910:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23912:	4318      	orrs	r0, r3
   23914:	9043      	str	r0, [sp, #268]	; 0x10c
   23916:	f89a 3000 	ldrb.w	r3, [sl]
   2391a:	f10a 0501 	add.w	r5, sl, #1
   2391e:	2b67      	cmp	r3, #103	; 0x67
   23920:	d84a      	bhi.n	239b8 <__ssvfiscanf_r+0x134>
   23922:	2b65      	cmp	r3, #101	; 0x65
   23924:	f080 80b7 	bcs.w	23a96 <__ssvfiscanf_r+0x212>
   23928:	2b47      	cmp	r3, #71	; 0x47
   2392a:	d82f      	bhi.n	2398c <__ssvfiscanf_r+0x108>
   2392c:	2b45      	cmp	r3, #69	; 0x45
   2392e:	f080 80b2 	bcs.w	23a96 <__ssvfiscanf_r+0x212>
   23932:	2b00      	cmp	r3, #0
   23934:	f000 8082 	beq.w	23a3c <__ssvfiscanf_r+0x1b8>
   23938:	2b25      	cmp	r3, #37	; 0x25
   2393a:	d066      	beq.n	23a0a <__ssvfiscanf_r+0x186>
   2393c:	2303      	movs	r3, #3
   2393e:	9744      	str	r7, [sp, #272]	; 0x110
   23940:	9349      	str	r3, [sp, #292]	; 0x124
   23942:	e045      	b.n	239d0 <__ssvfiscanf_r+0x14c>
   23944:	9947      	ldr	r1, [sp, #284]	; 0x11c
   23946:	3301      	adds	r3, #1
   23948:	3101      	adds	r1, #1
   2394a:	9147      	str	r1, [sp, #284]	; 0x11c
   2394c:	6861      	ldr	r1, [r4, #4]
   2394e:	6023      	str	r3, [r4, #0]
   23950:	3901      	subs	r1, #1
   23952:	6061      	str	r1, [r4, #4]
   23954:	6863      	ldr	r3, [r4, #4]
   23956:	2b00      	cmp	r3, #0
   23958:	dd0b      	ble.n	23972 <__ssvfiscanf_r+0xee>
   2395a:	f7fa fd31 	bl	1e3c0 <__locale_ctype_ptr>
   2395e:	6823      	ldr	r3, [r4, #0]
   23960:	7819      	ldrb	r1, [r3, #0]
   23962:	4408      	add	r0, r1
   23964:	7841      	ldrb	r1, [r0, #1]
   23966:	070d      	lsls	r5, r1, #28
   23968:	d4ec      	bmi.n	23944 <__ssvfiscanf_r+0xc0>
   2396a:	f10a 0501 	add.w	r5, sl, #1
   2396e:	46aa      	mov	sl, r5
   23970:	e79e      	b.n	238b0 <__ssvfiscanf_r+0x2c>
   23972:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23974:	4621      	mov	r1, r4
   23976:	4630      	mov	r0, r6
   23978:	4798      	blx	r3
   2397a:	2800      	cmp	r0, #0
   2397c:	d0ed      	beq.n	2395a <__ssvfiscanf_r+0xd6>
   2397e:	e7f4      	b.n	2396a <__ssvfiscanf_r+0xe6>
   23980:	9b45      	ldr	r3, [sp, #276]	; 0x114
   23982:	fb07 1303 	mla	r3, r7, r3, r1
   23986:	3b30      	subs	r3, #48	; 0x30
   23988:	9345      	str	r3, [sp, #276]	; 0x114
   2398a:	e7af      	b.n	238ec <__ssvfiscanf_r+0x68>
   2398c:	2b5b      	cmp	r3, #91	; 0x5b
   2398e:	d061      	beq.n	23a54 <__ssvfiscanf_r+0x1d0>
   23990:	d80c      	bhi.n	239ac <__ssvfiscanf_r+0x128>
   23992:	2b58      	cmp	r3, #88	; 0x58
   23994:	d1d2      	bne.n	2393c <__ssvfiscanf_r+0xb8>
   23996:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23998:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   2399c:	9243      	str	r2, [sp, #268]	; 0x10c
   2399e:	2210      	movs	r2, #16
   239a0:	9244      	str	r2, [sp, #272]	; 0x110
   239a2:	2b6f      	cmp	r3, #111	; 0x6f
   239a4:	bfb4      	ite	lt
   239a6:	2303      	movlt	r3, #3
   239a8:	2304      	movge	r3, #4
   239aa:	e010      	b.n	239ce <__ssvfiscanf_r+0x14a>
   239ac:	2b63      	cmp	r3, #99	; 0x63
   239ae:	d05c      	beq.n	23a6a <__ssvfiscanf_r+0x1e6>
   239b0:	2b64      	cmp	r3, #100	; 0x64
   239b2:	d1c3      	bne.n	2393c <__ssvfiscanf_r+0xb8>
   239b4:	9744      	str	r7, [sp, #272]	; 0x110
   239b6:	e7f4      	b.n	239a2 <__ssvfiscanf_r+0x11e>
   239b8:	2b70      	cmp	r3, #112	; 0x70
   239ba:	d042      	beq.n	23a42 <__ssvfiscanf_r+0x1be>
   239bc:	d81d      	bhi.n	239fa <__ssvfiscanf_r+0x176>
   239be:	2b6e      	cmp	r3, #110	; 0x6e
   239c0:	d059      	beq.n	23a76 <__ssvfiscanf_r+0x1f2>
   239c2:	d843      	bhi.n	23a4c <__ssvfiscanf_r+0x1c8>
   239c4:	2b69      	cmp	r3, #105	; 0x69
   239c6:	d1b9      	bne.n	2393c <__ssvfiscanf_r+0xb8>
   239c8:	2300      	movs	r3, #0
   239ca:	9344      	str	r3, [sp, #272]	; 0x110
   239cc:	2303      	movs	r3, #3
   239ce:	9349      	str	r3, [sp, #292]	; 0x124
   239d0:	6863      	ldr	r3, [r4, #4]
   239d2:	2b00      	cmp	r3, #0
   239d4:	dd61      	ble.n	23a9a <__ssvfiscanf_r+0x216>
   239d6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   239d8:	0659      	lsls	r1, r3, #25
   239da:	d56f      	bpl.n	23abc <__ssvfiscanf_r+0x238>
   239dc:	9b49      	ldr	r3, [sp, #292]	; 0x124
   239de:	2b02      	cmp	r3, #2
   239e0:	dc7c      	bgt.n	23adc <__ssvfiscanf_r+0x258>
   239e2:	ab01      	add	r3, sp, #4
   239e4:	4622      	mov	r2, r4
   239e6:	a943      	add	r1, sp, #268	; 0x10c
   239e8:	4630      	mov	r0, r6
   239ea:	f000 fb59 	bl	240a0 <_scanf_chars>
   239ee:	2801      	cmp	r0, #1
   239f0:	f000 8092 	beq.w	23b18 <__ssvfiscanf_r+0x294>
   239f4:	2802      	cmp	r0, #2
   239f6:	d1ba      	bne.n	2396e <__ssvfiscanf_r+0xea>
   239f8:	e01d      	b.n	23a36 <__ssvfiscanf_r+0x1b2>
   239fa:	2b75      	cmp	r3, #117	; 0x75
   239fc:	d0da      	beq.n	239b4 <__ssvfiscanf_r+0x130>
   239fe:	2b78      	cmp	r3, #120	; 0x78
   23a00:	d0c9      	beq.n	23996 <__ssvfiscanf_r+0x112>
   23a02:	2b73      	cmp	r3, #115	; 0x73
   23a04:	d19a      	bne.n	2393c <__ssvfiscanf_r+0xb8>
   23a06:	2302      	movs	r3, #2
   23a08:	e7e1      	b.n	239ce <__ssvfiscanf_r+0x14a>
   23a0a:	6863      	ldr	r3, [r4, #4]
   23a0c:	2b00      	cmp	r3, #0
   23a0e:	dd0c      	ble.n	23a2a <__ssvfiscanf_r+0x1a6>
   23a10:	6823      	ldr	r3, [r4, #0]
   23a12:	781a      	ldrb	r2, [r3, #0]
   23a14:	4593      	cmp	fp, r2
   23a16:	d17f      	bne.n	23b18 <__ssvfiscanf_r+0x294>
   23a18:	3301      	adds	r3, #1
   23a1a:	6862      	ldr	r2, [r4, #4]
   23a1c:	6023      	str	r3, [r4, #0]
   23a1e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23a20:	3a01      	subs	r2, #1
   23a22:	3301      	adds	r3, #1
   23a24:	6062      	str	r2, [r4, #4]
   23a26:	9347      	str	r3, [sp, #284]	; 0x11c
   23a28:	e7a1      	b.n	2396e <__ssvfiscanf_r+0xea>
   23a2a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23a2c:	4621      	mov	r1, r4
   23a2e:	4630      	mov	r0, r6
   23a30:	4798      	blx	r3
   23a32:	2800      	cmp	r0, #0
   23a34:	d0ec      	beq.n	23a10 <__ssvfiscanf_r+0x18c>
   23a36:	9846      	ldr	r0, [sp, #280]	; 0x118
   23a38:	2800      	cmp	r0, #0
   23a3a:	d163      	bne.n	23b04 <__ssvfiscanf_r+0x280>
   23a3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23a40:	e066      	b.n	23b10 <__ssvfiscanf_r+0x28c>
   23a42:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23a44:	f042 0220 	orr.w	r2, r2, #32
   23a48:	9243      	str	r2, [sp, #268]	; 0x10c
   23a4a:	e7a4      	b.n	23996 <__ssvfiscanf_r+0x112>
   23a4c:	2308      	movs	r3, #8
   23a4e:	9344      	str	r3, [sp, #272]	; 0x110
   23a50:	2304      	movs	r3, #4
   23a52:	e7bc      	b.n	239ce <__ssvfiscanf_r+0x14a>
   23a54:	4629      	mov	r1, r5
   23a56:	4640      	mov	r0, r8
   23a58:	f000 fc8e 	bl	24378 <__sccl>
   23a5c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23a5e:	4605      	mov	r5, r0
   23a60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23a64:	9343      	str	r3, [sp, #268]	; 0x10c
   23a66:	2301      	movs	r3, #1
   23a68:	e7b1      	b.n	239ce <__ssvfiscanf_r+0x14a>
   23a6a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23a6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23a70:	9343      	str	r3, [sp, #268]	; 0x10c
   23a72:	2300      	movs	r3, #0
   23a74:	e7ab      	b.n	239ce <__ssvfiscanf_r+0x14a>
   23a76:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23a78:	06d0      	lsls	r0, r2, #27
   23a7a:	f53f af78 	bmi.w	2396e <__ssvfiscanf_r+0xea>
   23a7e:	f012 0f01 	tst.w	r2, #1
   23a82:	9a01      	ldr	r2, [sp, #4]
   23a84:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23a86:	f102 0104 	add.w	r1, r2, #4
   23a8a:	9101      	str	r1, [sp, #4]
   23a8c:	6812      	ldr	r2, [r2, #0]
   23a8e:	bf14      	ite	ne
   23a90:	8013      	strhne	r3, [r2, #0]
   23a92:	6013      	streq	r3, [r2, #0]
   23a94:	e76b      	b.n	2396e <__ssvfiscanf_r+0xea>
   23a96:	2305      	movs	r3, #5
   23a98:	e799      	b.n	239ce <__ssvfiscanf_r+0x14a>
   23a9a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23a9c:	4621      	mov	r1, r4
   23a9e:	4630      	mov	r0, r6
   23aa0:	4798      	blx	r3
   23aa2:	2800      	cmp	r0, #0
   23aa4:	d097      	beq.n	239d6 <__ssvfiscanf_r+0x152>
   23aa6:	e7c6      	b.n	23a36 <__ssvfiscanf_r+0x1b2>
   23aa8:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   23aaa:	3201      	adds	r2, #1
   23aac:	9247      	str	r2, [sp, #284]	; 0x11c
   23aae:	6862      	ldr	r2, [r4, #4]
   23ab0:	3a01      	subs	r2, #1
   23ab2:	2a00      	cmp	r2, #0
   23ab4:	6062      	str	r2, [r4, #4]
   23ab6:	dd0a      	ble.n	23ace <__ssvfiscanf_r+0x24a>
   23ab8:	3301      	adds	r3, #1
   23aba:	6023      	str	r3, [r4, #0]
   23abc:	f7fa fc80 	bl	1e3c0 <__locale_ctype_ptr>
   23ac0:	6823      	ldr	r3, [r4, #0]
   23ac2:	781a      	ldrb	r2, [r3, #0]
   23ac4:	4410      	add	r0, r2
   23ac6:	7842      	ldrb	r2, [r0, #1]
   23ac8:	0712      	lsls	r2, r2, #28
   23aca:	d4ed      	bmi.n	23aa8 <__ssvfiscanf_r+0x224>
   23acc:	e786      	b.n	239dc <__ssvfiscanf_r+0x158>
   23ace:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23ad0:	4621      	mov	r1, r4
   23ad2:	4630      	mov	r0, r6
   23ad4:	4798      	blx	r3
   23ad6:	2800      	cmp	r0, #0
   23ad8:	d0f0      	beq.n	23abc <__ssvfiscanf_r+0x238>
   23ada:	e7ac      	b.n	23a36 <__ssvfiscanf_r+0x1b2>
   23adc:	2b04      	cmp	r3, #4
   23ade:	dc06      	bgt.n	23aee <__ssvfiscanf_r+0x26a>
   23ae0:	ab01      	add	r3, sp, #4
   23ae2:	4622      	mov	r2, r4
   23ae4:	a943      	add	r1, sp, #268	; 0x10c
   23ae6:	4630      	mov	r0, r6
   23ae8:	f000 fb3e 	bl	24168 <_scanf_i>
   23aec:	e77f      	b.n	239ee <__ssvfiscanf_r+0x16a>
   23aee:	4b0e      	ldr	r3, [pc, #56]	; (23b28 <__ssvfiscanf_r+0x2a4>)
   23af0:	2b00      	cmp	r3, #0
   23af2:	f43f af3c 	beq.w	2396e <__ssvfiscanf_r+0xea>
   23af6:	ab01      	add	r3, sp, #4
   23af8:	4622      	mov	r2, r4
   23afa:	a943      	add	r1, sp, #268	; 0x10c
   23afc:	4630      	mov	r0, r6
   23afe:	f7fb fcef 	bl	1f4e0 <_scanf_float>
   23b02:	e774      	b.n	239ee <__ssvfiscanf_r+0x16a>
   23b04:	89a3      	ldrh	r3, [r4, #12]
   23b06:	f013 0f40 	tst.w	r3, #64	; 0x40
   23b0a:	bf18      	it	ne
   23b0c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   23b10:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   23b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b18:	9846      	ldr	r0, [sp, #280]	; 0x118
   23b1a:	e7f9      	b.n	23b10 <__ssvfiscanf_r+0x28c>
   23b1c:	000237d1 	.word	0x000237d1
   23b20:	0002384b 	.word	0x0002384b
   23b24:	000277a2 	.word	0x000277a2
   23b28:	0001f4e1 	.word	0x0001f4e1

00023b2c <__sfputc_r>:
__sfputc_r():
   23b2c:	6893      	ldr	r3, [r2, #8]
   23b2e:	b410      	push	{r4}
   23b30:	3b01      	subs	r3, #1
   23b32:	2b00      	cmp	r3, #0
   23b34:	6093      	str	r3, [r2, #8]
   23b36:	da08      	bge.n	23b4a <__sfputc_r+0x1e>
   23b38:	6994      	ldr	r4, [r2, #24]
   23b3a:	42a3      	cmp	r3, r4
   23b3c:	db02      	blt.n	23b44 <__sfputc_r+0x18>
   23b3e:	b2cb      	uxtb	r3, r1
   23b40:	2b0a      	cmp	r3, #10
   23b42:	d102      	bne.n	23b4a <__sfputc_r+0x1e>
   23b44:	bc10      	pop	{r4}
   23b46:	f7fd bcb7 	b.w	214b8 <__swbuf_r>
   23b4a:	6813      	ldr	r3, [r2, #0]
   23b4c:	1c58      	adds	r0, r3, #1
   23b4e:	6010      	str	r0, [r2, #0]
   23b50:	7019      	strb	r1, [r3, #0]
   23b52:	b2c8      	uxtb	r0, r1
   23b54:	bc10      	pop	{r4}
   23b56:	4770      	bx	lr

00023b58 <__sfputs_r>:
__sfputs_r():
   23b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   23b5a:	4606      	mov	r6, r0
   23b5c:	460f      	mov	r7, r1
   23b5e:	4614      	mov	r4, r2
   23b60:	18d5      	adds	r5, r2, r3
   23b62:	42ac      	cmp	r4, r5
   23b64:	d101      	bne.n	23b6a <__sfputs_r+0x12>
   23b66:	2000      	movs	r0, #0
   23b68:	e007      	b.n	23b7a <__sfputs_r+0x22>
   23b6a:	463a      	mov	r2, r7
   23b6c:	f814 1b01 	ldrb.w	r1, [r4], #1
   23b70:	4630      	mov	r0, r6
   23b72:	f7ff ffdb 	bl	23b2c <__sfputc_r>
   23b76:	1c43      	adds	r3, r0, #1
   23b78:	d1f3      	bne.n	23b62 <__sfputs_r+0xa>
   23b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00023b7c <_vfiprintf_r>:
_vfprintf_r():
   23b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b80:	b09d      	sub	sp, #116	; 0x74
   23b82:	460c      	mov	r4, r1
   23b84:	4617      	mov	r7, r2
   23b86:	9303      	str	r3, [sp, #12]
   23b88:	4606      	mov	r6, r0
   23b8a:	b118      	cbz	r0, 23b94 <_vfiprintf_r+0x18>
   23b8c:	6983      	ldr	r3, [r0, #24]
   23b8e:	b90b      	cbnz	r3, 23b94 <_vfiprintf_r+0x18>
   23b90:	f7fa f91a 	bl	1ddc8 <__sinit>
   23b94:	4b7c      	ldr	r3, [pc, #496]	; (23d88 <_vfiprintf_r+0x20c>)
   23b96:	429c      	cmp	r4, r3
   23b98:	d157      	bne.n	23c4a <_vfiprintf_r+0xce>
   23b9a:	6874      	ldr	r4, [r6, #4]
   23b9c:	89a3      	ldrh	r3, [r4, #12]
   23b9e:	0718      	lsls	r0, r3, #28
   23ba0:	d55d      	bpl.n	23c5e <_vfiprintf_r+0xe2>
   23ba2:	6923      	ldr	r3, [r4, #16]
   23ba4:	2b00      	cmp	r3, #0
   23ba6:	d05a      	beq.n	23c5e <_vfiprintf_r+0xe2>
   23ba8:	2300      	movs	r3, #0
   23baa:	9309      	str	r3, [sp, #36]	; 0x24
   23bac:	2320      	movs	r3, #32
   23bae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   23bb2:	2330      	movs	r3, #48	; 0x30
   23bb4:	f04f 0b01 	mov.w	fp, #1
   23bb8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   23bbc:	46b8      	mov	r8, r7
   23bbe:	4645      	mov	r5, r8
   23bc0:	f815 3b01 	ldrb.w	r3, [r5], #1
   23bc4:	2b00      	cmp	r3, #0
   23bc6:	d155      	bne.n	23c74 <_vfiprintf_r+0xf8>
   23bc8:	ebb8 0a07 	subs.w	sl, r8, r7
   23bcc:	d00b      	beq.n	23be6 <_vfiprintf_r+0x6a>
   23bce:	4653      	mov	r3, sl
   23bd0:	463a      	mov	r2, r7
   23bd2:	4621      	mov	r1, r4
   23bd4:	4630      	mov	r0, r6
   23bd6:	f7ff ffbf 	bl	23b58 <__sfputs_r>
   23bda:	3001      	adds	r0, #1
   23bdc:	f000 80c4 	beq.w	23d68 <_vfiprintf_r+0x1ec>
   23be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23be2:	4453      	add	r3, sl
   23be4:	9309      	str	r3, [sp, #36]	; 0x24
   23be6:	f898 3000 	ldrb.w	r3, [r8]
   23bea:	2b00      	cmp	r3, #0
   23bec:	f000 80bc 	beq.w	23d68 <_vfiprintf_r+0x1ec>
   23bf0:	2300      	movs	r3, #0
   23bf2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   23bf6:	9304      	str	r3, [sp, #16]
   23bf8:	9307      	str	r3, [sp, #28]
   23bfa:	9205      	str	r2, [sp, #20]
   23bfc:	9306      	str	r3, [sp, #24]
   23bfe:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   23c02:	931a      	str	r3, [sp, #104]	; 0x68
   23c04:	2205      	movs	r2, #5
   23c06:	7829      	ldrb	r1, [r5, #0]
   23c08:	4860      	ldr	r0, [pc, #384]	; (23d8c <_vfiprintf_r+0x210>)
   23c0a:	f7fa fc6d 	bl	1e4e8 <memchr>
   23c0e:	f105 0801 	add.w	r8, r5, #1
   23c12:	9b04      	ldr	r3, [sp, #16]
   23c14:	2800      	cmp	r0, #0
   23c16:	d131      	bne.n	23c7c <_vfiprintf_r+0x100>
   23c18:	06d9      	lsls	r1, r3, #27
   23c1a:	bf44      	itt	mi
   23c1c:	2220      	movmi	r2, #32
   23c1e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   23c22:	071a      	lsls	r2, r3, #28
   23c24:	bf44      	itt	mi
   23c26:	222b      	movmi	r2, #43	; 0x2b
   23c28:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   23c2c:	782a      	ldrb	r2, [r5, #0]
   23c2e:	2a2a      	cmp	r2, #42	; 0x2a
   23c30:	d02c      	beq.n	23c8c <_vfiprintf_r+0x110>
   23c32:	2100      	movs	r1, #0
   23c34:	200a      	movs	r0, #10
   23c36:	9a07      	ldr	r2, [sp, #28]
   23c38:	46a8      	mov	r8, r5
   23c3a:	f898 3000 	ldrb.w	r3, [r8]
   23c3e:	3501      	adds	r5, #1
   23c40:	3b30      	subs	r3, #48	; 0x30
   23c42:	2b09      	cmp	r3, #9
   23c44:	d96d      	bls.n	23d22 <_vfiprintf_r+0x1a6>
   23c46:	b371      	cbz	r1, 23ca6 <_vfiprintf_r+0x12a>
   23c48:	e026      	b.n	23c98 <_vfiprintf_r+0x11c>
   23c4a:	4b51      	ldr	r3, [pc, #324]	; (23d90 <_vfiprintf_r+0x214>)
   23c4c:	429c      	cmp	r4, r3
   23c4e:	d101      	bne.n	23c54 <_vfiprintf_r+0xd8>
   23c50:	68b4      	ldr	r4, [r6, #8]
   23c52:	e7a3      	b.n	23b9c <_vfiprintf_r+0x20>
   23c54:	4b4f      	ldr	r3, [pc, #316]	; (23d94 <_vfiprintf_r+0x218>)
   23c56:	429c      	cmp	r4, r3
   23c58:	bf08      	it	eq
   23c5a:	68f4      	ldreq	r4, [r6, #12]
   23c5c:	e79e      	b.n	23b9c <_vfiprintf_r+0x20>
   23c5e:	4621      	mov	r1, r4
   23c60:	4630      	mov	r0, r6
   23c62:	f7fd fc9b 	bl	2159c <__swsetup_r>
   23c66:	2800      	cmp	r0, #0
   23c68:	d09e      	beq.n	23ba8 <_vfiprintf_r+0x2c>
   23c6a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23c6e:	b01d      	add	sp, #116	; 0x74
   23c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c74:	2b25      	cmp	r3, #37	; 0x25
   23c76:	d0a7      	beq.n	23bc8 <_vfiprintf_r+0x4c>
   23c78:	46a8      	mov	r8, r5
   23c7a:	e7a0      	b.n	23bbe <_vfiprintf_r+0x42>
   23c7c:	4a43      	ldr	r2, [pc, #268]	; (23d8c <_vfiprintf_r+0x210>)
   23c7e:	4645      	mov	r5, r8
   23c80:	1a80      	subs	r0, r0, r2
   23c82:	fa0b f000 	lsl.w	r0, fp, r0
   23c86:	4318      	orrs	r0, r3
   23c88:	9004      	str	r0, [sp, #16]
   23c8a:	e7bb      	b.n	23c04 <_vfiprintf_r+0x88>
   23c8c:	9a03      	ldr	r2, [sp, #12]
   23c8e:	1d11      	adds	r1, r2, #4
   23c90:	6812      	ldr	r2, [r2, #0]
   23c92:	9103      	str	r1, [sp, #12]
   23c94:	2a00      	cmp	r2, #0
   23c96:	db01      	blt.n	23c9c <_vfiprintf_r+0x120>
   23c98:	9207      	str	r2, [sp, #28]
   23c9a:	e004      	b.n	23ca6 <_vfiprintf_r+0x12a>
   23c9c:	4252      	negs	r2, r2
   23c9e:	f043 0302 	orr.w	r3, r3, #2
   23ca2:	9207      	str	r2, [sp, #28]
   23ca4:	9304      	str	r3, [sp, #16]
   23ca6:	f898 3000 	ldrb.w	r3, [r8]
   23caa:	2b2e      	cmp	r3, #46	; 0x2e
   23cac:	d110      	bne.n	23cd0 <_vfiprintf_r+0x154>
   23cae:	f898 3001 	ldrb.w	r3, [r8, #1]
   23cb2:	f108 0101 	add.w	r1, r8, #1
   23cb6:	2b2a      	cmp	r3, #42	; 0x2a
   23cb8:	d137      	bne.n	23d2a <_vfiprintf_r+0x1ae>
   23cba:	9b03      	ldr	r3, [sp, #12]
   23cbc:	f108 0802 	add.w	r8, r8, #2
   23cc0:	1d1a      	adds	r2, r3, #4
   23cc2:	681b      	ldr	r3, [r3, #0]
   23cc4:	9203      	str	r2, [sp, #12]
   23cc6:	2b00      	cmp	r3, #0
   23cc8:	bfb8      	it	lt
   23cca:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   23cce:	9305      	str	r3, [sp, #20]
   23cd0:	4d31      	ldr	r5, [pc, #196]	; (23d98 <_vfiprintf_r+0x21c>)
   23cd2:	2203      	movs	r2, #3
   23cd4:	f898 1000 	ldrb.w	r1, [r8]
   23cd8:	4628      	mov	r0, r5
   23cda:	f7fa fc05 	bl	1e4e8 <memchr>
   23cde:	b140      	cbz	r0, 23cf2 <_vfiprintf_r+0x176>
   23ce0:	2340      	movs	r3, #64	; 0x40
   23ce2:	1b40      	subs	r0, r0, r5
   23ce4:	fa03 f000 	lsl.w	r0, r3, r0
   23ce8:	9b04      	ldr	r3, [sp, #16]
   23cea:	f108 0801 	add.w	r8, r8, #1
   23cee:	4303      	orrs	r3, r0
   23cf0:	9304      	str	r3, [sp, #16]
   23cf2:	f898 1000 	ldrb.w	r1, [r8]
   23cf6:	2206      	movs	r2, #6
   23cf8:	4828      	ldr	r0, [pc, #160]	; (23d9c <_vfiprintf_r+0x220>)
   23cfa:	f108 0701 	add.w	r7, r8, #1
   23cfe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   23d02:	f7fa fbf1 	bl	1e4e8 <memchr>
   23d06:	2800      	cmp	r0, #0
   23d08:	d034      	beq.n	23d74 <_vfiprintf_r+0x1f8>
   23d0a:	4b25      	ldr	r3, [pc, #148]	; (23da0 <_vfiprintf_r+0x224>)
   23d0c:	bb03      	cbnz	r3, 23d50 <_vfiprintf_r+0x1d4>
   23d0e:	9b03      	ldr	r3, [sp, #12]
   23d10:	3307      	adds	r3, #7
   23d12:	f023 0307 	bic.w	r3, r3, #7
   23d16:	3308      	adds	r3, #8
   23d18:	9303      	str	r3, [sp, #12]
   23d1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23d1c:	444b      	add	r3, r9
   23d1e:	9309      	str	r3, [sp, #36]	; 0x24
   23d20:	e74c      	b.n	23bbc <_vfiprintf_r+0x40>
   23d22:	fb00 3202 	mla	r2, r0, r2, r3
   23d26:	2101      	movs	r1, #1
   23d28:	e786      	b.n	23c38 <_vfiprintf_r+0xbc>
   23d2a:	2300      	movs	r3, #0
   23d2c:	250a      	movs	r5, #10
   23d2e:	4618      	mov	r0, r3
   23d30:	9305      	str	r3, [sp, #20]
   23d32:	4688      	mov	r8, r1
   23d34:	f898 2000 	ldrb.w	r2, [r8]
   23d38:	3101      	adds	r1, #1
   23d3a:	3a30      	subs	r2, #48	; 0x30
   23d3c:	2a09      	cmp	r2, #9
   23d3e:	d903      	bls.n	23d48 <_vfiprintf_r+0x1cc>
   23d40:	2b00      	cmp	r3, #0
   23d42:	d0c5      	beq.n	23cd0 <_vfiprintf_r+0x154>
   23d44:	9005      	str	r0, [sp, #20]
   23d46:	e7c3      	b.n	23cd0 <_vfiprintf_r+0x154>
   23d48:	fb05 2000 	mla	r0, r5, r0, r2
   23d4c:	2301      	movs	r3, #1
   23d4e:	e7f0      	b.n	23d32 <_vfiprintf_r+0x1b6>
   23d50:	ab03      	add	r3, sp, #12
   23d52:	9300      	str	r3, [sp, #0]
   23d54:	4622      	mov	r2, r4
   23d56:	4b13      	ldr	r3, [pc, #76]	; (23da4 <_vfiprintf_r+0x228>)
   23d58:	a904      	add	r1, sp, #16
   23d5a:	4630      	mov	r0, r6
   23d5c:	f7fa fff0 	bl	1ed40 <_printf_float>
   23d60:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   23d64:	4681      	mov	r9, r0
   23d66:	d1d8      	bne.n	23d1a <_vfiprintf_r+0x19e>
   23d68:	89a3      	ldrh	r3, [r4, #12]
   23d6a:	065b      	lsls	r3, r3, #25
   23d6c:	f53f af7d 	bmi.w	23c6a <_vfiprintf_r+0xee>
   23d70:	9809      	ldr	r0, [sp, #36]	; 0x24
   23d72:	e77c      	b.n	23c6e <_vfiprintf_r+0xf2>
   23d74:	ab03      	add	r3, sp, #12
   23d76:	9300      	str	r3, [sp, #0]
   23d78:	4622      	mov	r2, r4
   23d7a:	4b0a      	ldr	r3, [pc, #40]	; (23da4 <_vfiprintf_r+0x228>)
   23d7c:	a904      	add	r1, sp, #16
   23d7e:	4630      	mov	r0, r6
   23d80:	f7fb fa8e 	bl	1f2a0 <_printf_i>
   23d84:	e7ec      	b.n	23d60 <_vfiprintf_r+0x1e4>
   23d86:	bf00      	nop
   23d88:	00027364 	.word	0x00027364
   23d8c:	0002779c 	.word	0x0002779c
   23d90:	00027384 	.word	0x00027384
   23d94:	00027344 	.word	0x00027344
   23d98:	000277a2 	.word	0x000277a2
   23d9c:	000277a6 	.word	0x000277a6
   23da0:	0001ed41 	.word	0x0001ed41
   23da4:	00023b59 	.word	0x00023b59

00023da8 <__svfiscanf_r>:
__svfscanf_r():
   23da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23dac:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   23db0:	9301      	str	r3, [sp, #4]
   23db2:	2300      	movs	r3, #0
   23db4:	4606      	mov	r6, r0
   23db6:	460c      	mov	r4, r1
   23db8:	4692      	mov	sl, r2
   23dba:	270a      	movs	r7, #10
   23dbc:	9346      	str	r3, [sp, #280]	; 0x118
   23dbe:	9347      	str	r3, [sp, #284]	; 0x11c
   23dc0:	4b9f      	ldr	r3, [pc, #636]	; (24040 <__svfiscanf_r+0x298>)
   23dc2:	f10d 080c 	add.w	r8, sp, #12
   23dc6:	93a2      	str	r3, [sp, #648]	; 0x288
   23dc8:	4b9e      	ldr	r3, [pc, #632]	; (24044 <__svfiscanf_r+0x29c>)
   23dca:	f8df 927c 	ldr.w	r9, [pc, #636]	; 24048 <__svfiscanf_r+0x2a0>
   23dce:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   23dd2:	93a3      	str	r3, [sp, #652]	; 0x28c
   23dd4:	f89a 3000 	ldrb.w	r3, [sl]
   23dd8:	2b00      	cmp	r3, #0
   23dda:	f000 812f 	beq.w	2403c <__svfiscanf_r+0x294>
   23dde:	f7fa faef 	bl	1e3c0 <__locale_ctype_ptr>
   23de2:	f89a b000 	ldrb.w	fp, [sl]
   23de6:	4458      	add	r0, fp
   23de8:	7843      	ldrb	r3, [r0, #1]
   23dea:	f013 0308 	ands.w	r3, r3, #8
   23dee:	d143      	bne.n	23e78 <__svfiscanf_r+0xd0>
   23df0:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   23df4:	f10a 0501 	add.w	r5, sl, #1
   23df8:	f040 8099 	bne.w	23f2e <__svfiscanf_r+0x186>
   23dfc:	9345      	str	r3, [sp, #276]	; 0x114
   23dfe:	9343      	str	r3, [sp, #268]	; 0x10c
   23e00:	f89a 3001 	ldrb.w	r3, [sl, #1]
   23e04:	2b2a      	cmp	r3, #42	; 0x2a
   23e06:	d103      	bne.n	23e10 <__svfiscanf_r+0x68>
   23e08:	2310      	movs	r3, #16
   23e0a:	f10a 0502 	add.w	r5, sl, #2
   23e0e:	9343      	str	r3, [sp, #268]	; 0x10c
   23e10:	7829      	ldrb	r1, [r5, #0]
   23e12:	46aa      	mov	sl, r5
   23e14:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   23e18:	2a09      	cmp	r2, #9
   23e1a:	f105 0501 	add.w	r5, r5, #1
   23e1e:	d941      	bls.n	23ea4 <__svfiscanf_r+0xfc>
   23e20:	2203      	movs	r2, #3
   23e22:	4889      	ldr	r0, [pc, #548]	; (24048 <__svfiscanf_r+0x2a0>)
   23e24:	f7fa fb60 	bl	1e4e8 <memchr>
   23e28:	b138      	cbz	r0, 23e3a <__svfiscanf_r+0x92>
   23e2a:	eba0 0309 	sub.w	r3, r0, r9
   23e2e:	2001      	movs	r0, #1
   23e30:	46aa      	mov	sl, r5
   23e32:	4098      	lsls	r0, r3
   23e34:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23e36:	4318      	orrs	r0, r3
   23e38:	9043      	str	r0, [sp, #268]	; 0x10c
   23e3a:	f89a 3000 	ldrb.w	r3, [sl]
   23e3e:	f10a 0501 	add.w	r5, sl, #1
   23e42:	2b67      	cmp	r3, #103	; 0x67
   23e44:	d84a      	bhi.n	23edc <__svfiscanf_r+0x134>
   23e46:	2b65      	cmp	r3, #101	; 0x65
   23e48:	f080 80b7 	bcs.w	23fba <__svfiscanf_r+0x212>
   23e4c:	2b47      	cmp	r3, #71	; 0x47
   23e4e:	d82f      	bhi.n	23eb0 <__svfiscanf_r+0x108>
   23e50:	2b45      	cmp	r3, #69	; 0x45
   23e52:	f080 80b2 	bcs.w	23fba <__svfiscanf_r+0x212>
   23e56:	2b00      	cmp	r3, #0
   23e58:	f000 8082 	beq.w	23f60 <__svfiscanf_r+0x1b8>
   23e5c:	2b25      	cmp	r3, #37	; 0x25
   23e5e:	d066      	beq.n	23f2e <__svfiscanf_r+0x186>
   23e60:	2303      	movs	r3, #3
   23e62:	9744      	str	r7, [sp, #272]	; 0x110
   23e64:	9349      	str	r3, [sp, #292]	; 0x124
   23e66:	e045      	b.n	23ef4 <__svfiscanf_r+0x14c>
   23e68:	9947      	ldr	r1, [sp, #284]	; 0x11c
   23e6a:	3301      	adds	r3, #1
   23e6c:	3101      	adds	r1, #1
   23e6e:	9147      	str	r1, [sp, #284]	; 0x11c
   23e70:	6861      	ldr	r1, [r4, #4]
   23e72:	6023      	str	r3, [r4, #0]
   23e74:	3901      	subs	r1, #1
   23e76:	6061      	str	r1, [r4, #4]
   23e78:	6863      	ldr	r3, [r4, #4]
   23e7a:	2b00      	cmp	r3, #0
   23e7c:	dd0b      	ble.n	23e96 <__svfiscanf_r+0xee>
   23e7e:	f7fa fa9f 	bl	1e3c0 <__locale_ctype_ptr>
   23e82:	6823      	ldr	r3, [r4, #0]
   23e84:	7819      	ldrb	r1, [r3, #0]
   23e86:	4408      	add	r0, r1
   23e88:	7841      	ldrb	r1, [r0, #1]
   23e8a:	070d      	lsls	r5, r1, #28
   23e8c:	d4ec      	bmi.n	23e68 <__svfiscanf_r+0xc0>
   23e8e:	f10a 0501 	add.w	r5, sl, #1
   23e92:	46aa      	mov	sl, r5
   23e94:	e79e      	b.n	23dd4 <__svfiscanf_r+0x2c>
   23e96:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23e98:	4621      	mov	r1, r4
   23e9a:	4630      	mov	r0, r6
   23e9c:	4798      	blx	r3
   23e9e:	2800      	cmp	r0, #0
   23ea0:	d0ed      	beq.n	23e7e <__svfiscanf_r+0xd6>
   23ea2:	e7f4      	b.n	23e8e <__svfiscanf_r+0xe6>
   23ea4:	9b45      	ldr	r3, [sp, #276]	; 0x114
   23ea6:	fb07 1303 	mla	r3, r7, r3, r1
   23eaa:	3b30      	subs	r3, #48	; 0x30
   23eac:	9345      	str	r3, [sp, #276]	; 0x114
   23eae:	e7af      	b.n	23e10 <__svfiscanf_r+0x68>
   23eb0:	2b5b      	cmp	r3, #91	; 0x5b
   23eb2:	d061      	beq.n	23f78 <__svfiscanf_r+0x1d0>
   23eb4:	d80c      	bhi.n	23ed0 <__svfiscanf_r+0x128>
   23eb6:	2b58      	cmp	r3, #88	; 0x58
   23eb8:	d1d2      	bne.n	23e60 <__svfiscanf_r+0xb8>
   23eba:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23ebc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   23ec0:	9243      	str	r2, [sp, #268]	; 0x10c
   23ec2:	2210      	movs	r2, #16
   23ec4:	9244      	str	r2, [sp, #272]	; 0x110
   23ec6:	2b6f      	cmp	r3, #111	; 0x6f
   23ec8:	bfb4      	ite	lt
   23eca:	2303      	movlt	r3, #3
   23ecc:	2304      	movge	r3, #4
   23ece:	e010      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23ed0:	2b63      	cmp	r3, #99	; 0x63
   23ed2:	d05c      	beq.n	23f8e <__svfiscanf_r+0x1e6>
   23ed4:	2b64      	cmp	r3, #100	; 0x64
   23ed6:	d1c3      	bne.n	23e60 <__svfiscanf_r+0xb8>
   23ed8:	9744      	str	r7, [sp, #272]	; 0x110
   23eda:	e7f4      	b.n	23ec6 <__svfiscanf_r+0x11e>
   23edc:	2b70      	cmp	r3, #112	; 0x70
   23ede:	d042      	beq.n	23f66 <__svfiscanf_r+0x1be>
   23ee0:	d81d      	bhi.n	23f1e <__svfiscanf_r+0x176>
   23ee2:	2b6e      	cmp	r3, #110	; 0x6e
   23ee4:	d059      	beq.n	23f9a <__svfiscanf_r+0x1f2>
   23ee6:	d843      	bhi.n	23f70 <__svfiscanf_r+0x1c8>
   23ee8:	2b69      	cmp	r3, #105	; 0x69
   23eea:	d1b9      	bne.n	23e60 <__svfiscanf_r+0xb8>
   23eec:	2300      	movs	r3, #0
   23eee:	9344      	str	r3, [sp, #272]	; 0x110
   23ef0:	2303      	movs	r3, #3
   23ef2:	9349      	str	r3, [sp, #292]	; 0x124
   23ef4:	6863      	ldr	r3, [r4, #4]
   23ef6:	2b00      	cmp	r3, #0
   23ef8:	dd61      	ble.n	23fbe <__svfiscanf_r+0x216>
   23efa:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23efc:	0659      	lsls	r1, r3, #25
   23efe:	d56f      	bpl.n	23fe0 <__svfiscanf_r+0x238>
   23f00:	9b49      	ldr	r3, [sp, #292]	; 0x124
   23f02:	2b02      	cmp	r3, #2
   23f04:	dc7c      	bgt.n	24000 <__svfiscanf_r+0x258>
   23f06:	ab01      	add	r3, sp, #4
   23f08:	4622      	mov	r2, r4
   23f0a:	a943      	add	r1, sp, #268	; 0x10c
   23f0c:	4630      	mov	r0, r6
   23f0e:	f000 f8c7 	bl	240a0 <_scanf_chars>
   23f12:	2801      	cmp	r0, #1
   23f14:	f000 8092 	beq.w	2403c <__svfiscanf_r+0x294>
   23f18:	2802      	cmp	r0, #2
   23f1a:	d1ba      	bne.n	23e92 <__svfiscanf_r+0xea>
   23f1c:	e01d      	b.n	23f5a <__svfiscanf_r+0x1b2>
   23f1e:	2b75      	cmp	r3, #117	; 0x75
   23f20:	d0da      	beq.n	23ed8 <__svfiscanf_r+0x130>
   23f22:	2b78      	cmp	r3, #120	; 0x78
   23f24:	d0c9      	beq.n	23eba <__svfiscanf_r+0x112>
   23f26:	2b73      	cmp	r3, #115	; 0x73
   23f28:	d19a      	bne.n	23e60 <__svfiscanf_r+0xb8>
   23f2a:	2302      	movs	r3, #2
   23f2c:	e7e1      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23f2e:	6863      	ldr	r3, [r4, #4]
   23f30:	2b00      	cmp	r3, #0
   23f32:	dd0c      	ble.n	23f4e <__svfiscanf_r+0x1a6>
   23f34:	6823      	ldr	r3, [r4, #0]
   23f36:	781a      	ldrb	r2, [r3, #0]
   23f38:	4593      	cmp	fp, r2
   23f3a:	d17f      	bne.n	2403c <__svfiscanf_r+0x294>
   23f3c:	3301      	adds	r3, #1
   23f3e:	6862      	ldr	r2, [r4, #4]
   23f40:	6023      	str	r3, [r4, #0]
   23f42:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23f44:	3a01      	subs	r2, #1
   23f46:	3301      	adds	r3, #1
   23f48:	6062      	str	r2, [r4, #4]
   23f4a:	9347      	str	r3, [sp, #284]	; 0x11c
   23f4c:	e7a1      	b.n	23e92 <__svfiscanf_r+0xea>
   23f4e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23f50:	4621      	mov	r1, r4
   23f52:	4630      	mov	r0, r6
   23f54:	4798      	blx	r3
   23f56:	2800      	cmp	r0, #0
   23f58:	d0ec      	beq.n	23f34 <__svfiscanf_r+0x18c>
   23f5a:	9846      	ldr	r0, [sp, #280]	; 0x118
   23f5c:	2800      	cmp	r0, #0
   23f5e:	d163      	bne.n	24028 <__svfiscanf_r+0x280>
   23f60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23f64:	e066      	b.n	24034 <__svfiscanf_r+0x28c>
   23f66:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23f68:	f042 0220 	orr.w	r2, r2, #32
   23f6c:	9243      	str	r2, [sp, #268]	; 0x10c
   23f6e:	e7a4      	b.n	23eba <__svfiscanf_r+0x112>
   23f70:	2308      	movs	r3, #8
   23f72:	9344      	str	r3, [sp, #272]	; 0x110
   23f74:	2304      	movs	r3, #4
   23f76:	e7bc      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23f78:	4629      	mov	r1, r5
   23f7a:	4640      	mov	r0, r8
   23f7c:	f000 f9fc 	bl	24378 <__sccl>
   23f80:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23f82:	4605      	mov	r5, r0
   23f84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23f88:	9343      	str	r3, [sp, #268]	; 0x10c
   23f8a:	2301      	movs	r3, #1
   23f8c:	e7b1      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23f8e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23f90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23f94:	9343      	str	r3, [sp, #268]	; 0x10c
   23f96:	2300      	movs	r3, #0
   23f98:	e7ab      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23f9a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23f9c:	06d0      	lsls	r0, r2, #27
   23f9e:	f53f af78 	bmi.w	23e92 <__svfiscanf_r+0xea>
   23fa2:	f012 0f01 	tst.w	r2, #1
   23fa6:	9a01      	ldr	r2, [sp, #4]
   23fa8:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23faa:	f102 0104 	add.w	r1, r2, #4
   23fae:	9101      	str	r1, [sp, #4]
   23fb0:	6812      	ldr	r2, [r2, #0]
   23fb2:	bf14      	ite	ne
   23fb4:	8013      	strhne	r3, [r2, #0]
   23fb6:	6013      	streq	r3, [r2, #0]
   23fb8:	e76b      	b.n	23e92 <__svfiscanf_r+0xea>
   23fba:	2305      	movs	r3, #5
   23fbc:	e799      	b.n	23ef2 <__svfiscanf_r+0x14a>
   23fbe:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23fc0:	4621      	mov	r1, r4
   23fc2:	4630      	mov	r0, r6
   23fc4:	4798      	blx	r3
   23fc6:	2800      	cmp	r0, #0
   23fc8:	d097      	beq.n	23efa <__svfiscanf_r+0x152>
   23fca:	e7c6      	b.n	23f5a <__svfiscanf_r+0x1b2>
   23fcc:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   23fce:	3201      	adds	r2, #1
   23fd0:	9247      	str	r2, [sp, #284]	; 0x11c
   23fd2:	6862      	ldr	r2, [r4, #4]
   23fd4:	3a01      	subs	r2, #1
   23fd6:	2a00      	cmp	r2, #0
   23fd8:	6062      	str	r2, [r4, #4]
   23fda:	dd0a      	ble.n	23ff2 <__svfiscanf_r+0x24a>
   23fdc:	3301      	adds	r3, #1
   23fde:	6023      	str	r3, [r4, #0]
   23fe0:	f7fa f9ee 	bl	1e3c0 <__locale_ctype_ptr>
   23fe4:	6823      	ldr	r3, [r4, #0]
   23fe6:	781a      	ldrb	r2, [r3, #0]
   23fe8:	4410      	add	r0, r2
   23fea:	7842      	ldrb	r2, [r0, #1]
   23fec:	0712      	lsls	r2, r2, #28
   23fee:	d4ed      	bmi.n	23fcc <__svfiscanf_r+0x224>
   23ff0:	e786      	b.n	23f00 <__svfiscanf_r+0x158>
   23ff2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23ff4:	4621      	mov	r1, r4
   23ff6:	4630      	mov	r0, r6
   23ff8:	4798      	blx	r3
   23ffa:	2800      	cmp	r0, #0
   23ffc:	d0f0      	beq.n	23fe0 <__svfiscanf_r+0x238>
   23ffe:	e7ac      	b.n	23f5a <__svfiscanf_r+0x1b2>
   24000:	2b04      	cmp	r3, #4
   24002:	dc06      	bgt.n	24012 <__svfiscanf_r+0x26a>
   24004:	ab01      	add	r3, sp, #4
   24006:	4622      	mov	r2, r4
   24008:	a943      	add	r1, sp, #268	; 0x10c
   2400a:	4630      	mov	r0, r6
   2400c:	f000 f8ac 	bl	24168 <_scanf_i>
   24010:	e77f      	b.n	23f12 <__svfiscanf_r+0x16a>
   24012:	4b0e      	ldr	r3, [pc, #56]	; (2404c <__svfiscanf_r+0x2a4>)
   24014:	2b00      	cmp	r3, #0
   24016:	f43f af3c 	beq.w	23e92 <__svfiscanf_r+0xea>
   2401a:	ab01      	add	r3, sp, #4
   2401c:	4622      	mov	r2, r4
   2401e:	a943      	add	r1, sp, #268	; 0x10c
   24020:	4630      	mov	r0, r6
   24022:	f7fb fa5d 	bl	1f4e0 <_scanf_float>
   24026:	e774      	b.n	23f12 <__svfiscanf_r+0x16a>
   24028:	89a3      	ldrh	r3, [r4, #12]
   2402a:	f013 0f40 	tst.w	r3, #64	; 0x40
   2402e:	bf18      	it	ne
   24030:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   24034:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   24038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2403c:	9846      	ldr	r0, [sp, #280]	; 0x118
   2403e:	e7f9      	b.n	24034 <__svfiscanf_r+0x28c>
   24040:	00024595 	.word	0x00024595
   24044:	0001faa5 	.word	0x0001faa5
   24048:	000277a2 	.word	0x000277a2
   2404c:	0001f4e1 	.word	0x0001f4e1

00024050 <_vfiscanf_r>:
_vfscanf_r():
   24050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24054:	460c      	mov	r4, r1
   24056:	4616      	mov	r6, r2
   24058:	461f      	mov	r7, r3
   2405a:	4605      	mov	r5, r0
   2405c:	b118      	cbz	r0, 24066 <_vfiscanf_r+0x16>
   2405e:	6983      	ldr	r3, [r0, #24]
   24060:	b90b      	cbnz	r3, 24066 <_vfiscanf_r+0x16>
   24062:	f7f9 feb1 	bl	1ddc8 <__sinit>
   24066:	4b0b      	ldr	r3, [pc, #44]	; (24094 <_vfiscanf_r+0x44>)
   24068:	429c      	cmp	r4, r3
   2406a:	d108      	bne.n	2407e <_vfiscanf_r+0x2e>
   2406c:	686c      	ldr	r4, [r5, #4]
   2406e:	463b      	mov	r3, r7
   24070:	4632      	mov	r2, r6
   24072:	4621      	mov	r1, r4
   24074:	4628      	mov	r0, r5
   24076:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   2407a:	f7ff be95 	b.w	23da8 <__svfiscanf_r>
   2407e:	4b06      	ldr	r3, [pc, #24]	; (24098 <_vfiscanf_r+0x48>)
   24080:	429c      	cmp	r4, r3
   24082:	d101      	bne.n	24088 <_vfiscanf_r+0x38>
   24084:	68ac      	ldr	r4, [r5, #8]
   24086:	e7f2      	b.n	2406e <_vfiscanf_r+0x1e>
   24088:	4b04      	ldr	r3, [pc, #16]	; (2409c <_vfiscanf_r+0x4c>)
   2408a:	429c      	cmp	r4, r3
   2408c:	bf08      	it	eq
   2408e:	68ec      	ldreq	r4, [r5, #12]
   24090:	e7ed      	b.n	2406e <_vfiscanf_r+0x1e>
   24092:	bf00      	nop
   24094:	00027364 	.word	0x00027364
   24098:	00027384 	.word	0x00027384
   2409c:	00027344 	.word	0x00027344

000240a0 <_scanf_chars>:
_scanf_chars():
   240a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   240a4:	4615      	mov	r5, r2
   240a6:	688a      	ldr	r2, [r1, #8]
   240a8:	4680      	mov	r8, r0
   240aa:	460c      	mov	r4, r1
   240ac:	b932      	cbnz	r2, 240bc <_scanf_chars+0x1c>
   240ae:	698a      	ldr	r2, [r1, #24]
   240b0:	2a00      	cmp	r2, #0
   240b2:	bf0c      	ite	eq
   240b4:	2201      	moveq	r2, #1
   240b6:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   240ba:	608a      	str	r2, [r1, #8]
   240bc:	2600      	movs	r6, #0
   240be:	6822      	ldr	r2, [r4, #0]
   240c0:	06d1      	lsls	r1, r2, #27
   240c2:	bf5f      	itttt	pl
   240c4:	681a      	ldrpl	r2, [r3, #0]
   240c6:	1d11      	addpl	r1, r2, #4
   240c8:	6019      	strpl	r1, [r3, #0]
   240ca:	6817      	ldrpl	r7, [r2, #0]
   240cc:	69a3      	ldr	r3, [r4, #24]
   240ce:	b1db      	cbz	r3, 24108 <_scanf_chars+0x68>
   240d0:	2b01      	cmp	r3, #1
   240d2:	d107      	bne.n	240e4 <_scanf_chars+0x44>
   240d4:	682b      	ldr	r3, [r5, #0]
   240d6:	6962      	ldr	r2, [r4, #20]
   240d8:	781b      	ldrb	r3, [r3, #0]
   240da:	5cd3      	ldrb	r3, [r2, r3]
   240dc:	b9a3      	cbnz	r3, 24108 <_scanf_chars+0x68>
   240de:	2e00      	cmp	r6, #0
   240e0:	d131      	bne.n	24146 <_scanf_chars+0xa6>
   240e2:	e006      	b.n	240f2 <_scanf_chars+0x52>
   240e4:	2b02      	cmp	r3, #2
   240e6:	d007      	beq.n	240f8 <_scanf_chars+0x58>
   240e8:	2e00      	cmp	r6, #0
   240ea:	d12c      	bne.n	24146 <_scanf_chars+0xa6>
   240ec:	69a3      	ldr	r3, [r4, #24]
   240ee:	2b01      	cmp	r3, #1
   240f0:	d129      	bne.n	24146 <_scanf_chars+0xa6>
   240f2:	2001      	movs	r0, #1
   240f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   240f8:	f7fa f962 	bl	1e3c0 <__locale_ctype_ptr>
   240fc:	682b      	ldr	r3, [r5, #0]
   240fe:	781b      	ldrb	r3, [r3, #0]
   24100:	4418      	add	r0, r3
   24102:	7843      	ldrb	r3, [r0, #1]
   24104:	071b      	lsls	r3, r3, #28
   24106:	d4ef      	bmi.n	240e8 <_scanf_chars+0x48>
   24108:	6823      	ldr	r3, [r4, #0]
   2410a:	3601      	adds	r6, #1
   2410c:	06da      	lsls	r2, r3, #27
   2410e:	bf5e      	ittt	pl
   24110:	682b      	ldrpl	r3, [r5, #0]
   24112:	781b      	ldrbpl	r3, [r3, #0]
   24114:	703b      	strbpl	r3, [r7, #0]
   24116:	682a      	ldr	r2, [r5, #0]
   24118:	686b      	ldr	r3, [r5, #4]
   2411a:	f102 0201 	add.w	r2, r2, #1
   2411e:	602a      	str	r2, [r5, #0]
   24120:	68a2      	ldr	r2, [r4, #8]
   24122:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   24126:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   2412a:	606b      	str	r3, [r5, #4]
   2412c:	bf58      	it	pl
   2412e:	3701      	addpl	r7, #1
   24130:	60a2      	str	r2, [r4, #8]
   24132:	b142      	cbz	r2, 24146 <_scanf_chars+0xa6>
   24134:	2b00      	cmp	r3, #0
   24136:	dcc9      	bgt.n	240cc <_scanf_chars+0x2c>
   24138:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2413c:	4629      	mov	r1, r5
   2413e:	4640      	mov	r0, r8
   24140:	4798      	blx	r3
   24142:	2800      	cmp	r0, #0
   24144:	d0c2      	beq.n	240cc <_scanf_chars+0x2c>
   24146:	6823      	ldr	r3, [r4, #0]
   24148:	f013 0310 	ands.w	r3, r3, #16
   2414c:	d105      	bne.n	2415a <_scanf_chars+0xba>
   2414e:	68e2      	ldr	r2, [r4, #12]
   24150:	3201      	adds	r2, #1
   24152:	60e2      	str	r2, [r4, #12]
   24154:	69a2      	ldr	r2, [r4, #24]
   24156:	b102      	cbz	r2, 2415a <_scanf_chars+0xba>
   24158:	703b      	strb	r3, [r7, #0]
   2415a:	6923      	ldr	r3, [r4, #16]
   2415c:	2000      	movs	r0, #0
   2415e:	441e      	add	r6, r3
   24160:	6126      	str	r6, [r4, #16]
   24162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   24166:	Address 0x0000000000024166 is out of bounds.


00024168 <_scanf_i>:
_scanf_i():
   24168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2416c:	460c      	mov	r4, r1
   2416e:	469a      	mov	sl, r3
   24170:	4b74      	ldr	r3, [pc, #464]	; (24344 <_scanf_i+0x1dc>)
   24172:	b087      	sub	sp, #28
   24174:	4683      	mov	fp, r0
   24176:	4616      	mov	r6, r2
   24178:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   2417c:	ab03      	add	r3, sp, #12
   2417e:	68a7      	ldr	r7, [r4, #8]
   24180:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   24184:	4b70      	ldr	r3, [pc, #448]	; (24348 <_scanf_i+0x1e0>)
   24186:	69a1      	ldr	r1, [r4, #24]
   24188:	4a70      	ldr	r2, [pc, #448]	; (2434c <_scanf_i+0x1e4>)
   2418a:	f104 091c 	add.w	r9, r4, #28
   2418e:	2903      	cmp	r1, #3
   24190:	bf18      	it	ne
   24192:	461a      	movne	r2, r3
   24194:	1e7b      	subs	r3, r7, #1
   24196:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   2419a:	bf84      	itt	hi
   2419c:	f240 135d 	movwhi	r3, #349	; 0x15d
   241a0:	60a3      	strhi	r3, [r4, #8]
   241a2:	6823      	ldr	r3, [r4, #0]
   241a4:	bf88      	it	hi
   241a6:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   241aa:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   241ae:	6023      	str	r3, [r4, #0]
   241b0:	bf98      	it	ls
   241b2:	2700      	movls	r7, #0
   241b4:	464b      	mov	r3, r9
   241b6:	f04f 0800 	mov.w	r8, #0
   241ba:	9200      	str	r2, [sp, #0]
   241bc:	bf88      	it	hi
   241be:	197f      	addhi	r7, r7, r5
   241c0:	6831      	ldr	r1, [r6, #0]
   241c2:	9301      	str	r3, [sp, #4]
   241c4:	ab03      	add	r3, sp, #12
   241c6:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   241ca:	2202      	movs	r2, #2
   241cc:	7809      	ldrb	r1, [r1, #0]
   241ce:	f7fa f98b 	bl	1e4e8 <memchr>
   241d2:	9b01      	ldr	r3, [sp, #4]
   241d4:	b328      	cbz	r0, 24222 <_scanf_i+0xba>
   241d6:	f1b8 0f01 	cmp.w	r8, #1
   241da:	d156      	bne.n	2428a <_scanf_i+0x122>
   241dc:	6862      	ldr	r2, [r4, #4]
   241de:	b92a      	cbnz	r2, 241ec <_scanf_i+0x84>
   241e0:	2208      	movs	r2, #8
   241e2:	6062      	str	r2, [r4, #4]
   241e4:	6822      	ldr	r2, [r4, #0]
   241e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   241ea:	6022      	str	r2, [r4, #0]
   241ec:	6822      	ldr	r2, [r4, #0]
   241ee:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   241f2:	6022      	str	r2, [r4, #0]
   241f4:	68a2      	ldr	r2, [r4, #8]
   241f6:	1e51      	subs	r1, r2, #1
   241f8:	60a1      	str	r1, [r4, #8]
   241fa:	b192      	cbz	r2, 24222 <_scanf_i+0xba>
   241fc:	6832      	ldr	r2, [r6, #0]
   241fe:	1c5d      	adds	r5, r3, #1
   24200:	1c51      	adds	r1, r2, #1
   24202:	6031      	str	r1, [r6, #0]
   24204:	7812      	ldrb	r2, [r2, #0]
   24206:	701a      	strb	r2, [r3, #0]
   24208:	6873      	ldr	r3, [r6, #4]
   2420a:	3b01      	subs	r3, #1
   2420c:	2b00      	cmp	r3, #0
   2420e:	6073      	str	r3, [r6, #4]
   24210:	dc06      	bgt.n	24220 <_scanf_i+0xb8>
   24212:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   24216:	4631      	mov	r1, r6
   24218:	4658      	mov	r0, fp
   2421a:	4798      	blx	r3
   2421c:	2800      	cmp	r0, #0
   2421e:	d177      	bne.n	24310 <_scanf_i+0x1a8>
   24220:	462b      	mov	r3, r5
   24222:	f108 0801 	add.w	r8, r8, #1
   24226:	f1b8 0f03 	cmp.w	r8, #3
   2422a:	d1c9      	bne.n	241c0 <_scanf_i+0x58>
   2422c:	6862      	ldr	r2, [r4, #4]
   2422e:	b90a      	cbnz	r2, 24234 <_scanf_i+0xcc>
   24230:	220a      	movs	r2, #10
   24232:	6062      	str	r2, [r4, #4]
   24234:	6862      	ldr	r2, [r4, #4]
   24236:	4946      	ldr	r1, [pc, #280]	; (24350 <_scanf_i+0x1e8>)
   24238:	6960      	ldr	r0, [r4, #20]
   2423a:	1a89      	subs	r1, r1, r2
   2423c:	9301      	str	r3, [sp, #4]
   2423e:	f000 f89b 	bl	24378 <__sccl>
   24242:	9b01      	ldr	r3, [sp, #4]
   24244:	f04f 0800 	mov.w	r8, #0
   24248:	461d      	mov	r5, r3
   2424a:	68a3      	ldr	r3, [r4, #8]
   2424c:	2b00      	cmp	r3, #0
   2424e:	d039      	beq.n	242c4 <_scanf_i+0x15c>
   24250:	6831      	ldr	r1, [r6, #0]
   24252:	6960      	ldr	r0, [r4, #20]
   24254:	780a      	ldrb	r2, [r1, #0]
   24256:	5c80      	ldrb	r0, [r0, r2]
   24258:	2800      	cmp	r0, #0
   2425a:	d033      	beq.n	242c4 <_scanf_i+0x15c>
   2425c:	2a30      	cmp	r2, #48	; 0x30
   2425e:	6822      	ldr	r2, [r4, #0]
   24260:	d121      	bne.n	242a6 <_scanf_i+0x13e>
   24262:	0510      	lsls	r0, r2, #20
   24264:	d51f      	bpl.n	242a6 <_scanf_i+0x13e>
   24266:	f108 0801 	add.w	r8, r8, #1
   2426a:	b117      	cbz	r7, 24272 <_scanf_i+0x10a>
   2426c:	3301      	adds	r3, #1
   2426e:	3f01      	subs	r7, #1
   24270:	60a3      	str	r3, [r4, #8]
   24272:	6873      	ldr	r3, [r6, #4]
   24274:	3b01      	subs	r3, #1
   24276:	2b00      	cmp	r3, #0
   24278:	6073      	str	r3, [r6, #4]
   2427a:	dd1c      	ble.n	242b6 <_scanf_i+0x14e>
   2427c:	6833      	ldr	r3, [r6, #0]
   2427e:	3301      	adds	r3, #1
   24280:	6033      	str	r3, [r6, #0]
   24282:	68a3      	ldr	r3, [r4, #8]
   24284:	3b01      	subs	r3, #1
   24286:	60a3      	str	r3, [r4, #8]
   24288:	e7df      	b.n	2424a <_scanf_i+0xe2>
   2428a:	f1b8 0f02 	cmp.w	r8, #2
   2428e:	d1b1      	bne.n	241f4 <_scanf_i+0x8c>
   24290:	6822      	ldr	r2, [r4, #0]
   24292:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   24296:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   2429a:	d1c2      	bne.n	24222 <_scanf_i+0xba>
   2429c:	2110      	movs	r1, #16
   2429e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   242a2:	6061      	str	r1, [r4, #4]
   242a4:	e7a5      	b.n	241f2 <_scanf_i+0x8a>
   242a6:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   242aa:	6022      	str	r2, [r4, #0]
   242ac:	780b      	ldrb	r3, [r1, #0]
   242ae:	3501      	adds	r5, #1
   242b0:	f805 3c01 	strb.w	r3, [r5, #-1]
   242b4:	e7dd      	b.n	24272 <_scanf_i+0x10a>
   242b6:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   242ba:	4631      	mov	r1, r6
   242bc:	4658      	mov	r0, fp
   242be:	4798      	blx	r3
   242c0:	2800      	cmp	r0, #0
   242c2:	d0de      	beq.n	24282 <_scanf_i+0x11a>
   242c4:	6823      	ldr	r3, [r4, #0]
   242c6:	05d9      	lsls	r1, r3, #23
   242c8:	d50c      	bpl.n	242e4 <_scanf_i+0x17c>
   242ca:	454d      	cmp	r5, r9
   242cc:	d908      	bls.n	242e0 <_scanf_i+0x178>
   242ce:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   242d2:	1e6f      	subs	r7, r5, #1
   242d4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   242d8:	4632      	mov	r2, r6
   242da:	4658      	mov	r0, fp
   242dc:	4798      	blx	r3
   242de:	463d      	mov	r5, r7
   242e0:	454d      	cmp	r5, r9
   242e2:	d02c      	beq.n	2433e <_scanf_i+0x1d6>
   242e4:	6822      	ldr	r2, [r4, #0]
   242e6:	f012 0210 	ands.w	r2, r2, #16
   242ea:	d11e      	bne.n	2432a <_scanf_i+0x1c2>
   242ec:	702a      	strb	r2, [r5, #0]
   242ee:	6863      	ldr	r3, [r4, #4]
   242f0:	4649      	mov	r1, r9
   242f2:	4658      	mov	r0, fp
   242f4:	9e00      	ldr	r6, [sp, #0]
   242f6:	47b0      	blx	r6
   242f8:	6822      	ldr	r2, [r4, #0]
   242fa:	f8da 3000 	ldr.w	r3, [sl]
   242fe:	f012 0f20 	tst.w	r2, #32
   24302:	d008      	beq.n	24316 <_scanf_i+0x1ae>
   24304:	1d1a      	adds	r2, r3, #4
   24306:	f8ca 2000 	str.w	r2, [sl]
   2430a:	681b      	ldr	r3, [r3, #0]
   2430c:	6018      	str	r0, [r3, #0]
   2430e:	e009      	b.n	24324 <_scanf_i+0x1bc>
   24310:	f04f 0800 	mov.w	r8, #0
   24314:	e7d6      	b.n	242c4 <_scanf_i+0x15c>
   24316:	07d2      	lsls	r2, r2, #31
   24318:	d5f4      	bpl.n	24304 <_scanf_i+0x19c>
   2431a:	1d1a      	adds	r2, r3, #4
   2431c:	f8ca 2000 	str.w	r2, [sl]
   24320:	681b      	ldr	r3, [r3, #0]
   24322:	8018      	strh	r0, [r3, #0]
   24324:	68e3      	ldr	r3, [r4, #12]
   24326:	3301      	adds	r3, #1
   24328:	60e3      	str	r3, [r4, #12]
   2432a:	2000      	movs	r0, #0
   2432c:	eba5 0509 	sub.w	r5, r5, r9
   24330:	44a8      	add	r8, r5
   24332:	6925      	ldr	r5, [r4, #16]
   24334:	4445      	add	r5, r8
   24336:	6125      	str	r5, [r4, #16]
   24338:	b007      	add	sp, #28
   2433a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2433e:	2001      	movs	r0, #1
   24340:	e7fa      	b.n	24338 <_scanf_i+0x1d0>
   24342:	bf00      	nop
   24344:	000277b0 	.word	0x000277b0
   24348:	000244d1 	.word	0x000244d1
   2434c:	00020ed9 	.word	0x00020ed9
   24350:	000277cc 	.word	0x000277cc

00024354 <_read_r>:
_read_r():
   24354:	b538      	push	{r3, r4, r5, lr}
   24356:	4605      	mov	r5, r0
   24358:	4608      	mov	r0, r1
   2435a:	4611      	mov	r1, r2
   2435c:	2200      	movs	r2, #0
   2435e:	4c05      	ldr	r4, [pc, #20]	; (24374 <_read_r+0x20>)
   24360:	6022      	str	r2, [r4, #0]
   24362:	461a      	mov	r2, r3
   24364:	f7f2 fc00 	bl	16b68 <_read>
   24368:	1c43      	adds	r3, r0, #1
   2436a:	d102      	bne.n	24372 <_read_r+0x1e>
   2436c:	6823      	ldr	r3, [r4, #0]
   2436e:	b103      	cbz	r3, 24372 <_read_r+0x1e>
   24370:	602b      	str	r3, [r5, #0]
   24372:	bd38      	pop	{r3, r4, r5, pc}
   24374:	2007c8fc 	.word	0x2007c8fc

00024378 <__sccl>:
__sccl():
   24378:	b570      	push	{r4, r5, r6, lr}
   2437a:	780b      	ldrb	r3, [r1, #0]
   2437c:	1e44      	subs	r4, r0, #1
   2437e:	2b5e      	cmp	r3, #94	; 0x5e
   24380:	bf13      	iteet	ne
   24382:	1c4a      	addne	r2, r1, #1
   24384:	1c8a      	addeq	r2, r1, #2
   24386:	784b      	ldrbeq	r3, [r1, #1]
   24388:	2100      	movne	r1, #0
   2438a:	bf08      	it	eq
   2438c:	2101      	moveq	r1, #1
   2438e:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   24392:	f804 1f01 	strb.w	r1, [r4, #1]!
   24396:	42a5      	cmp	r5, r4
   24398:	d1fb      	bne.n	24392 <__sccl+0x1a>
   2439a:	b913      	cbnz	r3, 243a2 <__sccl+0x2a>
   2439c:	3a01      	subs	r2, #1
   2439e:	4610      	mov	r0, r2
   243a0:	bd70      	pop	{r4, r5, r6, pc}
   243a2:	f081 0401 	eor.w	r4, r1, #1
   243a6:	4611      	mov	r1, r2
   243a8:	54c4      	strb	r4, [r0, r3]
   243aa:	780d      	ldrb	r5, [r1, #0]
   243ac:	1c4a      	adds	r2, r1, #1
   243ae:	2d2d      	cmp	r5, #45	; 0x2d
   243b0:	d006      	beq.n	243c0 <__sccl+0x48>
   243b2:	2d5d      	cmp	r5, #93	; 0x5d
   243b4:	d0f3      	beq.n	2439e <__sccl+0x26>
   243b6:	b90d      	cbnz	r5, 243bc <__sccl+0x44>
   243b8:	460a      	mov	r2, r1
   243ba:	e7f0      	b.n	2439e <__sccl+0x26>
   243bc:	462b      	mov	r3, r5
   243be:	e7f2      	b.n	243a6 <__sccl+0x2e>
   243c0:	784e      	ldrb	r6, [r1, #1]
   243c2:	2e5d      	cmp	r6, #93	; 0x5d
   243c4:	d0fa      	beq.n	243bc <__sccl+0x44>
   243c6:	42b3      	cmp	r3, r6
   243c8:	dcf8      	bgt.n	243bc <__sccl+0x44>
   243ca:	3102      	adds	r1, #2
   243cc:	3301      	adds	r3, #1
   243ce:	429e      	cmp	r6, r3
   243d0:	54c4      	strb	r4, [r0, r3]
   243d2:	dcfb      	bgt.n	243cc <__sccl+0x54>
   243d4:	e7e9      	b.n	243aa <__sccl+0x32>

000243d6 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   243d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   243da:	4680      	mov	r8, r0
   243dc:	4689      	mov	r9, r1
   243de:	4692      	mov	sl, r2
   243e0:	461e      	mov	r6, r3
   243e2:	460f      	mov	r7, r1
   243e4:	463d      	mov	r5, r7
   243e6:	9808      	ldr	r0, [sp, #32]
   243e8:	f815 4b01 	ldrb.w	r4, [r5], #1
   243ec:	f7f9 ffe4 	bl	1e3b8 <__locale_ctype_ptr_l>
   243f0:	4420      	add	r0, r4
   243f2:	7843      	ldrb	r3, [r0, #1]
   243f4:	f013 0308 	ands.w	r3, r3, #8
   243f8:	d10a      	bne.n	24410 <_strtoul_l.isra.0+0x3a>
   243fa:	2c2d      	cmp	r4, #45	; 0x2d
   243fc:	d10a      	bne.n	24414 <_strtoul_l.isra.0+0x3e>
   243fe:	2301      	movs	r3, #1
   24400:	782c      	ldrb	r4, [r5, #0]
   24402:	1cbd      	adds	r5, r7, #2
   24404:	b15e      	cbz	r6, 2441e <_strtoul_l.isra.0+0x48>
   24406:	2e10      	cmp	r6, #16
   24408:	d113      	bne.n	24432 <_strtoul_l.isra.0+0x5c>
   2440a:	2c30      	cmp	r4, #48	; 0x30
   2440c:	d009      	beq.n	24422 <_strtoul_l.isra.0+0x4c>
   2440e:	e010      	b.n	24432 <_strtoul_l.isra.0+0x5c>
   24410:	462f      	mov	r7, r5
   24412:	e7e7      	b.n	243e4 <_strtoul_l.isra.0+0xe>
   24414:	2c2b      	cmp	r4, #43	; 0x2b
   24416:	bf04      	itt	eq
   24418:	782c      	ldrbeq	r4, [r5, #0]
   2441a:	1cbd      	addeq	r5, r7, #2
   2441c:	e7f2      	b.n	24404 <_strtoul_l.isra.0+0x2e>
   2441e:	2c30      	cmp	r4, #48	; 0x30
   24420:	d125      	bne.n	2446e <_strtoul_l.isra.0+0x98>
   24422:	782a      	ldrb	r2, [r5, #0]
   24424:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   24428:	2a58      	cmp	r2, #88	; 0x58
   2442a:	d14a      	bne.n	244c2 <_strtoul_l.isra.0+0xec>
   2442c:	2610      	movs	r6, #16
   2442e:	786c      	ldrb	r4, [r5, #1]
   24430:	3502      	adds	r5, #2
   24432:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   24436:	fbb1 f1f6 	udiv	r1, r1, r6
   2443a:	2700      	movs	r7, #0
   2443c:	fb06 fe01 	mul.w	lr, r6, r1
   24440:	4638      	mov	r0, r7
   24442:	ea6f 0e0e 	mvn.w	lr, lr
   24446:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   2444a:	2a09      	cmp	r2, #9
   2444c:	d811      	bhi.n	24472 <_strtoul_l.isra.0+0x9c>
   2444e:	4614      	mov	r4, r2
   24450:	42a6      	cmp	r6, r4
   24452:	dd1d      	ble.n	24490 <_strtoul_l.isra.0+0xba>
   24454:	2f00      	cmp	r7, #0
   24456:	db18      	blt.n	2448a <_strtoul_l.isra.0+0xb4>
   24458:	4281      	cmp	r1, r0
   2445a:	d316      	bcc.n	2448a <_strtoul_l.isra.0+0xb4>
   2445c:	d101      	bne.n	24462 <_strtoul_l.isra.0+0x8c>
   2445e:	45a6      	cmp	lr, r4
   24460:	db13      	blt.n	2448a <_strtoul_l.isra.0+0xb4>
   24462:	2701      	movs	r7, #1
   24464:	fb00 4006 	mla	r0, r0, r6, r4
   24468:	f815 4b01 	ldrb.w	r4, [r5], #1
   2446c:	e7eb      	b.n	24446 <_strtoul_l.isra.0+0x70>
   2446e:	260a      	movs	r6, #10
   24470:	e7df      	b.n	24432 <_strtoul_l.isra.0+0x5c>
   24472:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   24476:	2a19      	cmp	r2, #25
   24478:	d801      	bhi.n	2447e <_strtoul_l.isra.0+0xa8>
   2447a:	3c37      	subs	r4, #55	; 0x37
   2447c:	e7e8      	b.n	24450 <_strtoul_l.isra.0+0x7a>
   2447e:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   24482:	2a19      	cmp	r2, #25
   24484:	d804      	bhi.n	24490 <_strtoul_l.isra.0+0xba>
   24486:	3c57      	subs	r4, #87	; 0x57
   24488:	e7e2      	b.n	24450 <_strtoul_l.isra.0+0x7a>
   2448a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   2448e:	e7eb      	b.n	24468 <_strtoul_l.isra.0+0x92>
   24490:	2f00      	cmp	r7, #0
   24492:	da09      	bge.n	244a8 <_strtoul_l.isra.0+0xd2>
   24494:	2322      	movs	r3, #34	; 0x22
   24496:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2449a:	f8c8 3000 	str.w	r3, [r8]
   2449e:	f1ba 0f00 	cmp.w	sl, #0
   244a2:	d107      	bne.n	244b4 <_strtoul_l.isra.0+0xde>
   244a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   244a8:	b103      	cbz	r3, 244ac <_strtoul_l.isra.0+0xd6>
   244aa:	4240      	negs	r0, r0
   244ac:	f1ba 0f00 	cmp.w	sl, #0
   244b0:	d00c      	beq.n	244cc <_strtoul_l.isra.0+0xf6>
   244b2:	b127      	cbz	r7, 244be <_strtoul_l.isra.0+0xe8>
   244b4:	3d01      	subs	r5, #1
   244b6:	f8ca 5000 	str.w	r5, [sl]
   244ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   244be:	464d      	mov	r5, r9
   244c0:	e7f9      	b.n	244b6 <_strtoul_l.isra.0+0xe0>
   244c2:	2430      	movs	r4, #48	; 0x30
   244c4:	2e00      	cmp	r6, #0
   244c6:	d1b4      	bne.n	24432 <_strtoul_l.isra.0+0x5c>
   244c8:	2608      	movs	r6, #8
   244ca:	e7b2      	b.n	24432 <_strtoul_l.isra.0+0x5c>
   244cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000244d0 <_strtoul_r>:
_strtoul_r():
   244d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   244d2:	4c06      	ldr	r4, [pc, #24]	; (244ec <_strtoul_r+0x1c>)
   244d4:	4d06      	ldr	r5, [pc, #24]	; (244f0 <_strtoul_r+0x20>)
   244d6:	6824      	ldr	r4, [r4, #0]
   244d8:	6a24      	ldr	r4, [r4, #32]
   244da:	2c00      	cmp	r4, #0
   244dc:	bf08      	it	eq
   244de:	462c      	moveq	r4, r5
   244e0:	9400      	str	r4, [sp, #0]
   244e2:	f7ff ff78 	bl	243d6 <_strtoul_l.isra.0>
   244e6:	b003      	add	sp, #12
   244e8:	bd30      	pop	{r4, r5, pc}
   244ea:	bf00      	nop
   244ec:	2007c0e4 	.word	0x2007c0e4
   244f0:	2007c148 	.word	0x2007c148

000244f4 <strtoul>:
strtoul():
   244f4:	4b08      	ldr	r3, [pc, #32]	; (24518 <strtoul+0x24>)
   244f6:	b537      	push	{r0, r1, r2, r4, r5, lr}
   244f8:	681c      	ldr	r4, [r3, #0]
   244fa:	4d08      	ldr	r5, [pc, #32]	; (2451c <strtoul+0x28>)
   244fc:	6a23      	ldr	r3, [r4, #32]
   244fe:	2b00      	cmp	r3, #0
   24500:	bf08      	it	eq
   24502:	462b      	moveq	r3, r5
   24504:	9300      	str	r3, [sp, #0]
   24506:	4613      	mov	r3, r2
   24508:	460a      	mov	r2, r1
   2450a:	4601      	mov	r1, r0
   2450c:	4620      	mov	r0, r4
   2450e:	f7ff ff62 	bl	243d6 <_strtoul_l.isra.0>
   24512:	b003      	add	sp, #12
   24514:	bd30      	pop	{r4, r5, pc}
   24516:	bf00      	nop
   24518:	2007c0e4 	.word	0x2007c0e4
   2451c:	2007c148 	.word	0x2007c148

00024520 <__submore>:
__submore():
   24520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24524:	460c      	mov	r4, r1
   24526:	6b49      	ldr	r1, [r1, #52]	; 0x34
   24528:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2452c:	4299      	cmp	r1, r3
   2452e:	d11c      	bne.n	2456a <__submore+0x4a>
   24530:	f44f 6180 	mov.w	r1, #1024	; 0x400
   24534:	f7fa fb14 	bl	1eb60 <_malloc_r>
   24538:	b918      	cbnz	r0, 24542 <__submore+0x22>
   2453a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2453e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   24542:	f44f 6380 	mov.w	r3, #1024	; 0x400
   24546:	63a3      	str	r3, [r4, #56]	; 0x38
   24548:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   2454c:	6360      	str	r0, [r4, #52]	; 0x34
   2454e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   24552:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   24556:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   2455a:	7043      	strb	r3, [r0, #1]
   2455c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   24560:	7003      	strb	r3, [r0, #0]
   24562:	6020      	str	r0, [r4, #0]
   24564:	2000      	movs	r0, #0
   24566:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2456a:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   2456c:	0077      	lsls	r7, r6, #1
   2456e:	463a      	mov	r2, r7
   24570:	f7fe ffb8 	bl	234e4 <_realloc_r>
   24574:	4605      	mov	r5, r0
   24576:	2800      	cmp	r0, #0
   24578:	d0df      	beq.n	2453a <__submore+0x1a>
   2457a:	eb00 0806 	add.w	r8, r0, r6
   2457e:	4601      	mov	r1, r0
   24580:	4632      	mov	r2, r6
   24582:	4640      	mov	r0, r8
   24584:	f7f9 ffcd 	bl	1e522 <memcpy>
   24588:	f8c4 8000 	str.w	r8, [r4]
   2458c:	6365      	str	r5, [r4, #52]	; 0x34
   2458e:	63a7      	str	r7, [r4, #56]	; 0x38
   24590:	e7e8      	b.n	24564 <__submore+0x44>
   24592:	Address 0x0000000000024592 is out of bounds.


00024594 <_ungetc_r>:
_ungetc_r():
   24594:	1c4b      	adds	r3, r1, #1
   24596:	b570      	push	{r4, r5, r6, lr}
   24598:	4606      	mov	r6, r0
   2459a:	460d      	mov	r5, r1
   2459c:	4614      	mov	r4, r2
   2459e:	d103      	bne.n	245a8 <_ungetc_r+0x14>
   245a0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   245a4:	4628      	mov	r0, r5
   245a6:	bd70      	pop	{r4, r5, r6, pc}
   245a8:	b118      	cbz	r0, 245b2 <_ungetc_r+0x1e>
   245aa:	6983      	ldr	r3, [r0, #24]
   245ac:	b90b      	cbnz	r3, 245b2 <_ungetc_r+0x1e>
   245ae:	f7f9 fc0b 	bl	1ddc8 <__sinit>
   245b2:	4b2e      	ldr	r3, [pc, #184]	; (2466c <_ungetc_r+0xd8>)
   245b4:	429c      	cmp	r4, r3
   245b6:	d12c      	bne.n	24612 <_ungetc_r+0x7e>
   245b8:	6874      	ldr	r4, [r6, #4]
   245ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   245be:	f023 0320 	bic.w	r3, r3, #32
   245c2:	81a3      	strh	r3, [r4, #12]
   245c4:	b29b      	uxth	r3, r3
   245c6:	0759      	lsls	r1, r3, #29
   245c8:	d413      	bmi.n	245f2 <_ungetc_r+0x5e>
   245ca:	06da      	lsls	r2, r3, #27
   245cc:	d5e8      	bpl.n	245a0 <_ungetc_r+0xc>
   245ce:	071b      	lsls	r3, r3, #28
   245d0:	d50b      	bpl.n	245ea <_ungetc_r+0x56>
   245d2:	4621      	mov	r1, r4
   245d4:	4630      	mov	r0, r6
   245d6:	f7f9 fb7b 	bl	1dcd0 <_fflush_r>
   245da:	2800      	cmp	r0, #0
   245dc:	d1e0      	bne.n	245a0 <_ungetc_r+0xc>
   245de:	89a3      	ldrh	r3, [r4, #12]
   245e0:	60a0      	str	r0, [r4, #8]
   245e2:	f023 0308 	bic.w	r3, r3, #8
   245e6:	81a3      	strh	r3, [r4, #12]
   245e8:	61a0      	str	r0, [r4, #24]
   245ea:	89a3      	ldrh	r3, [r4, #12]
   245ec:	f043 0304 	orr.w	r3, r3, #4
   245f0:	81a3      	strh	r3, [r4, #12]
   245f2:	6b63      	ldr	r3, [r4, #52]	; 0x34
   245f4:	b2ed      	uxtb	r5, r5
   245f6:	6862      	ldr	r2, [r4, #4]
   245f8:	b1e3      	cbz	r3, 24634 <_ungetc_r+0xa0>
   245fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   245fc:	429a      	cmp	r2, r3
   245fe:	da12      	bge.n	24626 <_ungetc_r+0x92>
   24600:	6823      	ldr	r3, [r4, #0]
   24602:	1e5a      	subs	r2, r3, #1
   24604:	6022      	str	r2, [r4, #0]
   24606:	f803 5c01 	strb.w	r5, [r3, #-1]
   2460a:	6863      	ldr	r3, [r4, #4]
   2460c:	3301      	adds	r3, #1
   2460e:	6063      	str	r3, [r4, #4]
   24610:	e7c8      	b.n	245a4 <_ungetc_r+0x10>
   24612:	4b17      	ldr	r3, [pc, #92]	; (24670 <_ungetc_r+0xdc>)
   24614:	429c      	cmp	r4, r3
   24616:	d101      	bne.n	2461c <_ungetc_r+0x88>
   24618:	68b4      	ldr	r4, [r6, #8]
   2461a:	e7ce      	b.n	245ba <_ungetc_r+0x26>
   2461c:	4b15      	ldr	r3, [pc, #84]	; (24674 <_ungetc_r+0xe0>)
   2461e:	429c      	cmp	r4, r3
   24620:	bf08      	it	eq
   24622:	68f4      	ldreq	r4, [r6, #12]
   24624:	e7c9      	b.n	245ba <_ungetc_r+0x26>
   24626:	4621      	mov	r1, r4
   24628:	4630      	mov	r0, r6
   2462a:	f7ff ff79 	bl	24520 <__submore>
   2462e:	2800      	cmp	r0, #0
   24630:	d0e6      	beq.n	24600 <_ungetc_r+0x6c>
   24632:	e7b5      	b.n	245a0 <_ungetc_r+0xc>
   24634:	6921      	ldr	r1, [r4, #16]
   24636:	6823      	ldr	r3, [r4, #0]
   24638:	b151      	cbz	r1, 24650 <_ungetc_r+0xbc>
   2463a:	4299      	cmp	r1, r3
   2463c:	d208      	bcs.n	24650 <_ungetc_r+0xbc>
   2463e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   24642:	428d      	cmp	r5, r1
   24644:	d104      	bne.n	24650 <_ungetc_r+0xbc>
   24646:	3b01      	subs	r3, #1
   24648:	3201      	adds	r2, #1
   2464a:	6023      	str	r3, [r4, #0]
   2464c:	6062      	str	r2, [r4, #4]
   2464e:	e7a9      	b.n	245a4 <_ungetc_r+0x10>
   24650:	63e3      	str	r3, [r4, #60]	; 0x3c
   24652:	f104 0344 	add.w	r3, r4, #68	; 0x44
   24656:	6363      	str	r3, [r4, #52]	; 0x34
   24658:	2303      	movs	r3, #3
   2465a:	63a3      	str	r3, [r4, #56]	; 0x38
   2465c:	4623      	mov	r3, r4
   2465e:	6422      	str	r2, [r4, #64]	; 0x40
   24660:	f803 5f46 	strb.w	r5, [r3, #70]!
   24664:	6023      	str	r3, [r4, #0]
   24666:	2301      	movs	r3, #1
   24668:	e7d1      	b.n	2460e <_ungetc_r+0x7a>
   2466a:	bf00      	nop
   2466c:	00027364 	.word	0x00027364
   24670:	00027384 	.word	0x00027384
   24674:	00027344 	.word	0x00027344

00024678 <__env_lock>:
__env_lock():
   24678:	4770      	bx	lr

0002467a <__env_unlock>:
__env_unlock():
   2467a:	4770      	bx	lr

0002467c <_malloc_usable_size_r>:
_malloc_usable_size_r():
   2467c:	f851 0c04 	ldr.w	r0, [r1, #-4]
   24680:	2800      	cmp	r0, #0
   24682:	f1a0 0004 	sub.w	r0, r0, #4
   24686:	bfbc      	itt	lt
   24688:	580b      	ldrlt	r3, [r1, r0]
   2468a:	18c0      	addlt	r0, r0, r3
   2468c:	4770      	bx	lr
   2468e:	Address 0x000000000002468e is out of bounds.


00024690 <__gedf2>:
__gedf2():
   24690:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   24694:	e006      	b.n	246a4 <__cmpdf2+0x4>
   24696:	bf00      	nop

00024698 <__ledf2>:
__ledf2():
   24698:	f04f 0c01 	mov.w	ip, #1
   2469c:	e002      	b.n	246a4 <__cmpdf2+0x4>
   2469e:	bf00      	nop

000246a0 <__cmpdf2>:
__nedf2():
   246a0:	f04f 0c01 	mov.w	ip, #1
   246a4:	f84d cd04 	str.w	ip, [sp, #-4]!
   246a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   246ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   246b0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   246b4:	bf18      	it	ne
   246b6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   246ba:	d01b      	beq.n	246f4 <__cmpdf2+0x54>
   246bc:	b001      	add	sp, #4
   246be:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   246c2:	bf0c      	ite	eq
   246c4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   246c8:	ea91 0f03 	teqne	r1, r3
   246cc:	bf02      	ittt	eq
   246ce:	ea90 0f02 	teqeq	r0, r2
   246d2:	2000      	moveq	r0, #0
   246d4:	4770      	bxeq	lr
   246d6:	f110 0f00 	cmn.w	r0, #0
   246da:	ea91 0f03 	teq	r1, r3
   246de:	bf58      	it	pl
   246e0:	4299      	cmppl	r1, r3
   246e2:	bf08      	it	eq
   246e4:	4290      	cmpeq	r0, r2
   246e6:	bf2c      	ite	cs
   246e8:	17d8      	asrcs	r0, r3, #31
   246ea:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   246ee:	f040 0001 	orr.w	r0, r0, #1
   246f2:	4770      	bx	lr
   246f4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   246f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   246fc:	d102      	bne.n	24704 <__cmpdf2+0x64>
   246fe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   24702:	d107      	bne.n	24714 <__cmpdf2+0x74>
   24704:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24708:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   2470c:	d1d6      	bne.n	246bc <__cmpdf2+0x1c>
   2470e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   24712:	d0d3      	beq.n	246bc <__cmpdf2+0x1c>
   24714:	f85d 0b04 	ldr.w	r0, [sp], #4
   24718:	4770      	bx	lr
   2471a:	bf00      	nop

0002471c <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   2471c:	4684      	mov	ip, r0
   2471e:	4610      	mov	r0, r2
   24720:	4662      	mov	r2, ip
   24722:	468c      	mov	ip, r1
   24724:	4619      	mov	r1, r3
   24726:	4663      	mov	r3, ip
   24728:	e000      	b.n	2472c <__aeabi_cdcmpeq>
   2472a:	bf00      	nop

0002472c <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   2472c:	b501      	push	{r0, lr}
   2472e:	f7ff ffb7 	bl	246a0 <__cmpdf2>
   24732:	2800      	cmp	r0, #0
   24734:	bf48      	it	mi
   24736:	f110 0f00 	cmnmi.w	r0, #0
   2473a:	bd01      	pop	{r0, pc}

0002473c <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   2473c:	f84d ed08 	str.w	lr, [sp, #-8]!
   24740:	f7ff fff4 	bl	2472c <__aeabi_cdcmpeq>
   24744:	bf0c      	ite	eq
   24746:	2001      	moveq	r0, #1
   24748:	2000      	movne	r0, #0
   2474a:	f85d fb08 	ldr.w	pc, [sp], #8
   2474e:	bf00      	nop

00024750 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   24750:	f84d ed08 	str.w	lr, [sp, #-8]!
   24754:	f7ff ffea 	bl	2472c <__aeabi_cdcmpeq>
   24758:	bf34      	ite	cc
   2475a:	2001      	movcc	r0, #1
   2475c:	2000      	movcs	r0, #0
   2475e:	f85d fb08 	ldr.w	pc, [sp], #8
   24762:	bf00      	nop

00024764 <__aeabi_dcmple>:
__aeabi_dcmple():
   24764:	f84d ed08 	str.w	lr, [sp, #-8]!
   24768:	f7ff ffe0 	bl	2472c <__aeabi_cdcmpeq>
   2476c:	bf94      	ite	ls
   2476e:	2001      	movls	r0, #1
   24770:	2000      	movhi	r0, #0
   24772:	f85d fb08 	ldr.w	pc, [sp], #8
   24776:	bf00      	nop

00024778 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   24778:	f84d ed08 	str.w	lr, [sp, #-8]!
   2477c:	f7ff ffce 	bl	2471c <__aeabi_cdrcmple>
   24780:	bf94      	ite	ls
   24782:	2001      	movls	r0, #1
   24784:	2000      	movhi	r0, #0
   24786:	f85d fb08 	ldr.w	pc, [sp], #8
   2478a:	bf00      	nop

0002478c <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   2478c:	f84d ed08 	str.w	lr, [sp, #-8]!
   24790:	f7ff ffc4 	bl	2471c <__aeabi_cdrcmple>
   24794:	bf34      	ite	cc
   24796:	2001      	movcc	r0, #1
   24798:	2000      	movcs	r0, #0
   2479a:	f85d fb08 	ldr.w	pc, [sp], #8
   2479e:	bf00      	nop

000247a0 <__aeabi_dcmpun>:
__unorddf2():
   247a0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   247a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   247a8:	d102      	bne.n	247b0 <__aeabi_dcmpun+0x10>
   247aa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   247ae:	d10a      	bne.n	247c6 <__aeabi_dcmpun+0x26>
   247b0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   247b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   247b8:	d102      	bne.n	247c0 <__aeabi_dcmpun+0x20>
   247ba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   247be:	d102      	bne.n	247c6 <__aeabi_dcmpun+0x26>
   247c0:	f04f 0000 	mov.w	r0, #0
   247c4:	4770      	bx	lr
   247c6:	f04f 0001 	mov.w	r0, #1
   247ca:	4770      	bx	lr

000247cc <__aeabi_d2iz>:
__aeabi_d2iz():
   247cc:	ea4f 0241 	mov.w	r2, r1, lsl #1
   247d0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   247d4:	d215      	bcs.n	24802 <__aeabi_d2iz+0x36>
   247d6:	d511      	bpl.n	247fc <__aeabi_d2iz+0x30>
   247d8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   247dc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   247e0:	d912      	bls.n	24808 <__aeabi_d2iz+0x3c>
   247e2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   247e6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   247ea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   247ee:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   247f2:	fa23 f002 	lsr.w	r0, r3, r2
   247f6:	bf18      	it	ne
   247f8:	4240      	negne	r0, r0
   247fa:	4770      	bx	lr
   247fc:	f04f 0000 	mov.w	r0, #0
   24800:	4770      	bx	lr
   24802:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   24806:	d105      	bne.n	24814 <__aeabi_d2iz+0x48>
   24808:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   2480c:	bf08      	it	eq
   2480e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   24812:	4770      	bx	lr
   24814:	f04f 0000 	mov.w	r0, #0
   24818:	4770      	bx	lr
   2481a:	bf00      	nop
   2481c:	74737953 	.word	0x74737953
   24820:	50206d65 	.word	0x50206d65
   24824:	7265776f 	.word	0x7265776f
   24828:	3a6e6f2d 	.word	0x3a6e6f2d
   2482c:	6f6f4220 	.word	0x6f6f4220
   24830:	676e6974 	.word	0x676e6974
   24834:	2e2e2e20 	.word	0x2e2e2e20
   24838:	73795300 	.word	0x73795300
   2483c:	206d6574 	.word	0x206d6574
   24840:	73617243 	.word	0x73617243
   24844:	52203a68 	.word	0x52203a68
   24848:	6f622d65 	.word	0x6f622d65
   2484c:	6e69746f 	.word	0x6e69746f
   24850:	2e2e2067 	.word	0x2e2e2067
   24854:	6157002e 	.word	0x6157002e
   24858:	64686374 	.word	0x64686374
   2485c:	5320676f 	.word	0x5320676f
   24860:	65747379 	.word	0x65747379
   24864:	6552206d 	.word	0x6552206d
   24868:	3a746573 	.word	0x3a746573
   2486c:	6f6f4220 	.word	0x6f6f4220
   24870:	676e6974 	.word	0x676e6974
   24874:	2e2e2e20 	.word	0x2e2e2e20
   24878:	00          	.byte	0x00
   24879:	55          	.byte	0x55
   2487a:	656e      	.short	0x656e
   2487c:	63657078 	.word	0x63657078
   24880:	20646574 	.word	0x20646574
   24884:	20525349 	.word	0x20525349
   24888:	6c6c6163 	.word	0x6c6c6163
   2488c:	20746120 	.word	0x20746120
   24890:	5f63706c 	.word	0x5f63706c
   24894:	2e737973 	.word	0x2e737973
   24898:	0063      	.short	0x0063
   2489a:	654d      	.short	0x654d
   2489c:	79726f6d 	.word	0x79726f6d
   248a0:	666e4920 	.word	0x666e4920
   248a4:	616d726f 	.word	0x616d726f
   248a8:	6e6f6974 	.word	0x6e6f6974
   248ac:	6c470a3a 	.word	0x6c470a3a
   248b0:	6c61626f 	.word	0x6c61626f
   248b4:	65735520 	.word	0x65735520
   248b8:	20202064 	.word	0x20202064
   248bc:	3525203a 	.word	0x3525203a
   248c0:	616d0a64 	.word	0x616d0a64
   248c4:	636f6c6c 	.word	0x636f6c6c
   248c8:	65735520 	.word	0x65735520
   248cc:	20202064 	.word	0x20202064
   248d0:	3525203a 	.word	0x3525203a
   248d4:	616d0a64 	.word	0x616d0a64
   248d8:	636f6c6c 	.word	0x636f6c6c
   248dc:	61764120 	.word	0x61764120
   248e0:	202e6c69 	.word	0x202e6c69
   248e4:	3525203a 	.word	0x3525203a
   248e8:	79530a64 	.word	0x79530a64
   248ec:	6d657473 	.word	0x6d657473
   248f0:	61764120 	.word	0x61764120
   248f4:	202e6c69 	.word	0x202e6c69
   248f8:	3525203a 	.word	0x3525203a
   248fc:	654e0a64 	.word	0x654e0a64
   24900:	48207478 	.word	0x48207478
   24904:	20706165 	.word	0x20706165
   24908:	20727470 	.word	0x20727470
   2490c:	3a202020 	.word	0x3a202020
   24910:	25783020 	.word	0x25783020
   24914:	0a583830 	.word	0x0a583830
   24918:	7473614c 	.word	0x7473614c
   2491c:	72627320 	.word	0x72627320
   24920:	2029286b 	.word	0x2029286b
   24924:	20727470 	.word	0x20727470
   24928:	30203a20 	.word	0x30203a20
   2492c:	38302578 	.word	0x38302578
   24930:	614c0a58 	.word	0x614c0a58
   24934:	73207473 	.word	0x73207473
   24938:	286b7262 	.word	0x286b7262
   2493c:	69732029 	.word	0x69732029
   24940:	3a20657a 	.word	0x3a20657a
   24944:	0a752520 	.word	0x0a752520
   24948:	206d754e 	.word	0x206d754e
   2494c:	72627320 	.word	0x72627320
   24950:	2029286b 	.word	0x2029286b
   24954:	6c6c6163 	.word	0x6c6c6163
   24958:	25203a73 	.word	0x25203a73
   2495c:	0a75      	.short	0x0a75
   2495e:	00          	.byte	0x00
   2495f:	25          	.byte	0x25
   24960:	52492075 	.word	0x52492075
   24964:	61772051 	.word	0x61772051
   24968:	72742073 	.word	0x72742073
   2496c:	65676769 	.word	0x65676769
   24970:	2c646572 	.word	0x2c646572
   24974:	74756220 	.word	0x74756220
   24978:	206f6e20 	.word	0x206f6e20
   2497c:	20515249 	.word	0x20515249
   24980:	76726573 	.word	0x76726573
   24984:	20656369 	.word	0x20656369
   24988:	20736177 	.word	0x20736177
   2498c:	69666564 	.word	0x69666564
   24990:	2164656e 	.word	0x2164656e
   24994:	000a      	.short	0x000a
   24996:	4d4e      	.short	0x4d4e
   24998:	61462049 	.word	0x61462049
   2499c:	0a746c75 	.word	0x0a746c75
   249a0:	6d654d00 	.word	0x6d654d00
   249a4:	75614620 	.word	0x75614620
   249a8:	000a746c 	.word	0x000a746c
   249ac:	20535542 	.word	0x20535542
   249b0:	6c756146 	.word	0x6c756146
   249b4:	55000a74 	.word	0x55000a74
   249b8:	65676173 	.word	0x65676173
   249bc:	75614620 	.word	0x75614620
   249c0:	000a746c 	.word	0x000a746c
   249c4:	4d474244 	.word	0x4d474244
   249c8:	46204e4f 	.word	0x46204e4f
   249cc:	746c7561 	.word	0x746c7561
   249d0:	5249000a 	.word	0x5249000a
   249d4:	6f6e2051 	.word	0x6f6e2051
   249d8:	65722074 	.word	0x65722074
   249dc:	74736967 	.word	0x74736967
   249e0:	64657265 	.word	0x64657265
   249e4:	616d0021 	.word	0x616d0021
   249e8:	29286e69 	.word	0x29286e69
   249ec:	6f687320 	.word	0x6f687320
   249f0:	20646c75 	.word	0x20646c75
   249f4:	6576656e 	.word	0x6576656e
   249f8:	78652072 	.word	0x78652072
   249fc:	6f207469 	.word	0x6f207469
   24a00:	6874206e 	.word	0x6874206e
   24a04:	73207369 	.word	0x73207369
   24a08:	65747379 	.word	0x65747379
   24a0c:	0a6d      	.short	0x0a6d
   24a0e:	00          	.byte	0x00
   24a0f:	e7          	.byte	0xe7
   24a10:	e7e7adde 	.word	0xe7e7adde
   24a14:	65646f6e 	.word	0x65646f6e
   24a18:	00          	.byte	0x00
   24a19:	48          	.byte	0x48
   24a1a:	4c45      	.short	0x4c45
   24a1c:	000a4f4c 	.word	0x000a4f4c

00024a20 <ExCvt>:
   24a20:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   24a30:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   24a40:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   24a50:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   24a60:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   24a70:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   24a80:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   24a90:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00024aa0 <LfnOfs>:
   24aa0:	07050301 12100e09 1c181614 8000ff1e              ..............

00024aae <cst.6348>:
   24aae:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   24abe:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   24ace:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   24ade:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   24aee:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   24afe:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

00024b08 <vst.6347>:
   24b08:	02000400 00800100 00200040 00080010     ........@. .....
   24b18:	00020004 00c70000                                ......

00024b1e <Tbl>:
   24b1e:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   24b2e:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   24b3e:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   24b4e:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   24b5e:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   24b6e:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   24b7e:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   24b8e:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   24b9e:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   24bae:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   24bbe:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   24bce:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   24bde:	00df03b1 03c00393 03c303a3 03c400b5     ................
   24bee:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   24bfe:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   24c0e:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

00024c1e <tbl_lower.5775>:
   24c1e:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   24c2e:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   24c3e:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   24c4e:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   24c5e:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   24c6e:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   24c7e:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   24c8e:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   24c9e:	01050103 01090107 010d010b 0111010f     ................
   24cae:	01150113 01190117 011d011b 0121011f     ..............!.
   24cbe:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   24cce:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   24cde:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   24cee:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   24cfe:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   24d0e:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   24d1e:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   24d2e:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   24d3e:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   24d4e:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   24d5e:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   24d6e:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   24d7e:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   24d8e:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   24d9e:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   24dae:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   24dbe:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   24dce:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   24dde:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   24dee:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

00024dfe <tbl_upper.5776>:
   24dfe:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   24e0e:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   24e1e:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   24e2e:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   24e3e:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   24e4e:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   24e5e:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   24e6e:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   24e7e:	01040102 01080106 010c010a 0110010e     ................
   24e8e:	01140112 01180116 011c011a 0120011e     .............. .
   24e9e:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   24eae:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   24ebe:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   24ece:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   24ede:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   24eee:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   24efe:	03940393 03960395 03980397 039a0399     ................
   24f0e:	039c039b 039e039d 03a0039f 03a303a1     ................
   24f1e:	03a503a4 03a703a6 03a903a8 041003aa     ................
   24f2e:	04120411 04140413 04160415 04180417     ................
   24f3e:	041a0419 041c041b 041e041d 0420041f     .............. .
   24f4e:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   24f5e:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   24f6e:	04030402 04050404 04070406 04090408     ................
   24f7e:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   24f8e:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   24f9e:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   24fae:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   24fbe:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   24fce:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   24fde:	c7ffff9f ff9a8094 0000ffff                       ..........

00024fe8 <CSWTCH.70>:
   24fe8:	00100000 00200000 00400000 00800000     ...... ...@.....

00024ff8 <LED_DISPLAY_CHARMAP>:
	...
   25018:	00008600 00000000 00000000 00804000     .............@..
   25028:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   25038:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   25048:	6d000073 00003f00 00000000 00000000     s..m.?..........
   25058:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   25068:	6d000073 00003f00 00000000 00000000     s..m.?..........
   25078:	3a696c25 3a692500 30252c00 53005832     %li:.%i:.,%02X.S
   25088:	54524154 4e45003a 66003a44 65736c61     TART:.END:.false
   25098:	746e6900 69253a38 69252c00 746e6900     .int8:%i.,%i.int
   250a8:	253a3631 6e690069 3a323374 00696c25     16:%i.int32:%li.
   250b8:	696c252c 746e6900 253a3436 00696c6c     ,%li.int64:%lli.
   250c8:	6c6c252c 69750069 3a38746e 2c007525     ,%lli.uint8:%u.,
   250d8:	75007525 31746e69 75253a36 6e697500     %u.uint16:%u.uin
   250e8:	3a323374 00756c25 756c252c 6e697500     t32:%lu.,%lu.uin
   250f8:	3a343674 756c6c25 6c252c00 6300756c     t64:%llu.,%llu.c
   25108:	3a726168 2c006325 62006325 72616e69     har:%c.,%c.binar
   25118:	63253a79 72747300 3a676e69 62007325     y:%c.string:%s.b
   25128:	3a6c6f6f 2c007325 66007325 74616f6c     ool:%s.,%s.float
   25138:	0066253a 0066252c 62756f64 253a656c     :%f.,%f.double:%
   25148:	72740066 48006575 20706c65 20746f6e     f.true.Help not 
   25158:	63657073 65696669 6f662064 68742072     specified for th
   25168:	63207369 616d6d6f 4300646e 616d6d6f     is command.Comma
   25178:	4920646e 6c61766e 202e6469 79725420     nd Invalid.  Try
   25188:	65682720 2027706c 6d6d6f63 00646e61      'help' command.
   25198:	68000a0d 00706c65 6d6d6f43 20646e61     ...help.Command 
   251a8:	6c696166 20216465 6d6f4320 646e616d     failed!  Command
   251b8:	68207327 20706c65 203a7369 73372500     's help is: .%7s
   251c8:	75530020 726f7070 20646574 6d6d6f43      .Supported Comm
   251d8:	73646e61 200a003a 73303125 25203a20     ands:.. %10s : %
   251e8:	7332332e 2e2e2e20 25200a00 20733031     .32s ..... %10s 
   251f8:	7325203a 27200a00 706c6568 6f633c20     : %s.. 'help <co
   25208:	6e616d6d 20273e64 67206f74 68207465     mmand>' to get h
   25218:	20706c65 6120666f 6d6f6320 646e616d     elp of a command
	...

00025229 <typeinfo name for scheduler_task>:
   25229:	63733431 75646568 5f72656c 6b736174     14scheduler_task
   25239:	48ffff00                                         ...

0002523c <typeinfo for scheduler_task>:
   2523c:	00027248 00025229                       Hr..)R..

00025244 <vtable for scheduler_task>:
   25244:	00000000 0002523c 00000000 00000000     ....<R..........
   25254:	00015c6d 00015c71 00015c75 0001c3fd     m\..q\..u\......
   25264:	00025318 000265fa 0002531e 00025323     .S...e...S..#S..
   25274:	67676f6c 45007265 524f5252 6f6c203a     logger.ERROR: lo
   25284:	72656767 696e6920 6c616974 74617a69     gger initializat
   25294:	206e6f69 6c696166 00657275 252f6425     ion failure.%d/%
   252a4:	30252c64 253a6432 3a643230 64323025     d,%02d:%02d:%02d
   252b4:	2c75252c 252c7325 73252c73 252c7325     ,%u,%s,%s,%s%s,%
   252c4:	30002c75 676f6c3a 7673632e 69614600     u,.0:log.csv.Fai
   252d4:	2064656c 656c6966 69727720 203a6574     led file write: 
   252e4:	72724500 2520726f 72772075 6e697469     .Error %u writin
   252f4:	6f6c2067 6c696667 25202e65 75252f75     g logfile. %u/%u
   25304:	69727720 6e657474 7046202e 203a7274      written. Fptr: 
   25314:	000a7525 75626564 61770067 65006e72     %u..debug.warn.e
   25324:	726f7272 656e5500 63657078 20646574     rror.Unexpected 
   25334:	6c6c6163 206f7420 74697865 55002928     call to exit().U
   25344:	7078656e 65746365 61632064 74206c6c     nexpected call t
   25354:	696b206f 29286c6c 65642f00 61752f76     o kill()./dev/ua
   25364:	00307472 7665642f 7261752f 2f003174     rt0./dev/uart1./
   25374:	2f766564 00627375                       dev/usb.

0002537c <typeinfo for UartDev>:
   2537c:	000272a8 00025388 000253b0              .r...S...S..

00025388 <typeinfo name for UartDev>:
   25388:	72615537 76654474 ffffff00              7UartDev....

00025394 <vtable for UartDev>:
   25394:	00000000 0002537c 0001738d 000172e9     ....|S...s...r..
   253a4:	0001736d 00017345 00017359              ms..Es..Ys..

000253b0 <typeinfo for CharDev>:
   253b0:	00027248 000253b8                       Hr...S..

000253b8 <typeinfo name for CharDev>:
   253b8:	61684337 76654472 ffffff00              7CharDev....

000253c4 <vtable for CharDev>:
   253c4:	00000000 000253b0 0001c3fd 0001c3fd     .....S..........
   253d4:	000175c1 00000000 00000000              .u..........

000253e0 <typeinfo name for SingletonTemplate<Uart3>>:
   253e0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   253f0:	49657461 72615535 00453374              ateI5Uart3E.

000253fc <typeinfo for SingletonTemplate<Uart3>>:
   253fc:	00027248 000253e0                       Hr...S..

00025404 <typeinfo name for Uart3>:
   25404:	72615535 ff003374                       5Uart3..

0002540c <typeinfo for Uart3>:
   2540c:	00027320 00025404 00000000 00000002      s...T..........
   2541c:	0002537c 00000002 000253fc 00000002     |S.......S......

0002542c <vtable for Uart3>:
   2542c:	00000000 0002540c 0001738d 000172e9     .....T...s...r..
   2543c:	0001736d 00017b21 00017b35              ms..!{..5{..

00025448 <typeinfo name for SingletonTemplate<Uart2>>:
   25448:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25458:	49657461 72615535 00453274              ateI5Uart2E.

00025464 <typeinfo for SingletonTemplate<Uart2>>:
   25464:	00027248 00025448                       Hr..HT..

0002546c <typeinfo name for Uart2>:
   2546c:	72615535 ff003274                       5Uart2..

00025474 <typeinfo for Uart2>:
   25474:	00027320 0002546c 00000000 00000002      s..lT..........
   25484:	0002537c 00000002 00025464 00000002     |S......dT......

00025494 <vtable for Uart2>:
   25494:	00000000 00025474 0001738d 000172e9     ....tT...s...r..
   254a4:	0001736d 00017b89 00017b9d              ms...{...{..

000254b0 <typeinfo name for SingletonTemplate<NordicStream>>:
   254b0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   254c0:	49657461 6f4e3231 63696472 65727453     ateI12NordicStre
   254d0:	00456d61                                amE.

000254d4 <typeinfo for SingletonTemplate<NordicStream>>:
   254d4:	00027248 000254b0                       Hr...T..

000254dc <typeinfo for NordicStream>:
   254dc:	00027320 000254fc 00000000 00000002      s...T..........
   254ec:	000253b0 00000002 000254d4 00000002     .S.......T......

000254fc <typeinfo name for NordicStream>:
   254fc:	6f4e3231 63696472 65727453 ff006d61     12NordicStream..

0002550c <vtable for NordicStream>:
   2550c:	00000000 000254dc 00017c97 00017c75     .....T...|..u|..
   2551c:	00017bf1 00017c4d 00017c61              .{..M|..a|..

00025528 <typeinfo name for SingletonTemplate<Uart0>>:
   25528:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25538:	49657461 72615535 00453074              ateI5Uart0E.

00025544 <typeinfo for SingletonTemplate<Uart0>>:
   25544:	00027248 00025528                       Hr..(U..

0002554c <typeinfo name for Uart0>:
   2554c:	72615535 ff003074                       5Uart0..

00025554 <typeinfo for Uart0>:
   25554:	00027320 0002554c 00000000 00000002      s..LU..........
   25564:	0002537c 00000002 00025544 00000002     |S......DU......

00025574 <vtable for Uart0>:
   25574:	00000000 00025554 0001738d 000172e9     ....TU...s...r..
   25584:	0001736d 00017d1d 00017d31 40004000     ms...}..1}...@.@
   25594:	40008000 40090000 40094000 544c4148     ...@...@.@.@HALT
   255a4:	20474e49 54535953 203a4d45 72756f59     ING SYSTEM: Your
   255b4:	73797320 206d6574 206e6172 2074756f      system ran out 
   255c4:	6d20666f 726f6d65 52282079 21294d41     of memory (RAM)!
   255d4:	4148000a 4e49544c 59532047 4d455453     ..HALTING SYSTEM
   255e4:	7453203a 206b6361 7265766f 776f6c66     : Stack overflow
   255f4:	20796220 6b736174 0a00203a 20797254      by task: ..Try 
   25604:	72636e69 69736165 7320676e 6b636174     increasing stack
   25614:	6d656d20 2079726f 7420666f 20736968      memory of this 
   25624:	6b736174 49000a2e 00454c44 00025e9d     task...IDLE..^..
   25634:	00025ea1 00025ea5 00025ea9 00025ead     .^...^...^...^..
   25644:	706f6e2d 746e6972 69614600 2064656c     -noprint.Failed 
   25654:	6f206f74 3a6e6570 0a732520 65520a00     to open: %s...Re
   25664:	25206461 79622064 20736574 64252040     ad %d bytes @ %d
   25674:	2f624b20 00636573 4f525245 47203a52      Kb/sec.ERROR: G
   25684:	20657669 7320656d 6372756f 6e612065     ive me source an
   25694:	65642064 6e697473 6f697461 6964206e     d destination di
   256a4:	74636572 2079726f 61706573 65746172     rectory separate
   256b4:	79622064 73206120 65636170 766e4900     d by a space.Inv
   256c4:	64696c61 73656420 616e6974 6e6f6974     alid destination
   256d4:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   256e4:	6e49000a 696c6176 6f732064 65637275     ..Invalid source
   256f4:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   25704:	7325000a 0073252f 79706f43 20732520     ..%s/%s.Copy %s 
   25714:	25203e2d 203a2073 42206425 73657479     -> %s : %d Bytes
   25724:	25203a20 45000a73 6c62616e 44006465      : %s..Enabled.D
   25734:	62617369 0064656c 73756c66 6f4c0068     isabled.flush.Lo
   25744:	29732867 76616820 65622065 66206e65     g(s) have been f
   25754:	6873756c 73006465 75746174 6c420073     lushed.status.Bl
   25764:	656b636f 61632064 20736c6c 25203a20     ocked calls  : %
   25774:	51000a75 65756575 74617720 616d7265     u..Queue waterma
   25784:	203a6b72 000a7525 68676948 20747365     rk: %u..Highest 
   25794:	656c6966 69727720 74206574 3a656d69     file write time:
   257a4:	6d752520 43000a73 206c6c61 6e756f63      %ums..Call coun
   257b4:	20207374 203a2020 64207525 25206267     ts    : %u dgb %
   257c4:	6e692075 25206f66 61772075 25206e72     u info %u warn %
   257d4:	72652075 72000a72 65007761 6c62616e     u err..raw.enabl
   257e4:	64002065 62617369 0020656c 6c207325     e .disable .%s l
   257f4:	6567676f 72702072 66746e69 726f6620     ogger printf for
   25804:	0a732520 73552f00 2f737265 73616b61      %s../Users/akas
   25814:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   25824:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   25834:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   25844:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   25854:	61685f64 656c646e 682f7372 6c646e61     d_handlers/handl
   25864:	2e737265 00707063 67676f4c 203a6465     ers.cpp.Logged: 
   25874:	7c73257c 6573000a 2a250074 75252073     |%s|..set.%*s %u
   25884:	20752520 25207525 75252075 20752520      %u %u %u %u %u 
   25894:	77007525 65746972 73696400 65766f63     %u.write.discove
   258a4:	2a250072 30252073 30252078 75252078     r.%*s %0x %0x %u
   258b4:	65654e00 65642064 65636976 646e6120     .Need device and
   258c4:	67657220 65747369 64612072 73657264      register addres
   258d4:	65520073 73206461 75746174 72662073     s.Read status fr
   258e4:	64206d6f 63697665 23252065 203a5832     om device %#2X: 
   258f4:	203a7325 2020000a 23252020 203a5832     %s: ..    %#2X: 
   25904:	58322325 2a25000a 30252073 30252078     %#2X..%*s %0x %0
   25914:	30252078 654e0078 64206465 63697665     x %0x.Need devic
   25924:	72202c65 73696765 20726574 72646461     e, register addr
   25934:	20737365 20646e61 61746164 6f725700     ess and data.Wro
   25944:	25206574 20583223 25206f74 3a583223     te %#2X to %#2X:
   25954:	3223253a 45000a58 726f7272 69727720     :%#2X..Error wri
   25964:	676e6974 206f7420 69766564 25206563     ting to device %
   25974:	000a7823 20433249 69766564 72206563     #x..I2C device r
   25984:	6f707365 6465646e 206f7420 72646461     esponded to addr
   25994:	20737365 78342325 7243000a 65746165     ess %#4x..Create
   259a4:	72696420 6f746365 27207972 20277325      directory '%s' 
   259b4:	7325203a 6c46000a 3a687361 2f752520     : %s..Flash: %u/
   259c4:	4c207525 3a656669 25692520 70282025     %u Life: %i%% (p
   259d4:	20656761 77207525 74746972 25206e65     age %u written %
   259e4:	69742075 2973656d 6c46000a 3a687361     u times)..Flash:
   259f4:	2f752520 000a7525 706d6554 25203a20      %u/%u..Temp : %
   25a04:	75252e75 67694c0a 203a7468 540a7525     u.%u.Light: %u.T
   25a14:	20656d69 7325203a 746f6f42 6d695420     ime : %sBoot Tim
   25a24:	25203a65 2f753230 75323025 7534252f     e: %02u/%02u/%4u
   25a34:	3230252c 30253a75 253a7532 0a753230     ,%02u:%02u:%02u.
   25a44:	74726155 61572030 6d726574 736b7261     Uart0 Watermarks
   25a54:	7525203a 2075252f 2f787228 0a297874     : %u/%u (rx/tx).
   25a64:	62655200 69746f6f 5320676e 65747379     .Rebooting Syste
   25a74:	654c006d 696e7261 6d20676e 2065646f     m.Learning mode 
   25a84:	62616e65 0064656c 4f525245 53203a52     enabled.ERROR: S
   25a94:	70616d65 65726f68 73617720 4c554e20     emaphore was NUL
   25aa4:	69202c4c 68742073 72272065 746f6d65     L, is the 'remot
   25ab4:	74202765 206b7361 6e6e7572 3f676e69     e' task running?
   25ac4:	616e5500 20656c62 6f206f74 206e6570     .Unable to open 
   25ad4:	27732527 206f7420 74697277 68742065     '%s' to write th
   25ae4:	69662065 000a656c 20646e45 20656874     e file..End the 
   25af4:	656c6966 20796220 6e697375 63252067     file by using %c
   25b04:	61686320 74636172 202e7265 20692520      character.  %i 
   25b14:	74207369 74206568 6f656d69 000a7475     is the timeout..
   25b24:	72726f53 6e202c79 6162206f 70736b63     Sorry, no backsp
   25b34:	20656361 70707573 2074726f 000a283a     ace support :(..
   25b44:	6f727245 636f2072 72727563 77206465     Error occurred w
   25b54:	656c6968 69727720 676e6974 65687420     hile writing the
   25b64:	6c696620 46000a65 616d726f 4b4f2074      file..Format OK
   25b74:	726f4600 2074616d 4f525245 44530052     .Format ERROR.SD
   25b84:	72614320 6f6d2064 65746e75 72450064      Card mounted.Er
   25b94:	20726f72 6e756f6d 676e6974 20445320     ror mounting SD 
   25ba4:	64726143 616c4600 6d206873 746e756f     Card.Flash mount
   25bb4:	45006465 726f7272 756f6d20 6e69746e     ed.Error mountin
   25bc4:	6c462067 20687361 6f6d654d 66007972     g Flash Memory.f
   25bd4:	616d726f 64732074 726f6600 2074616d     ormat sd.format 
   25be4:	73616c66 6f6d0068 20746e75 6d006473     flash.mount sd.m
   25bf4:	746e756f 616c6620 4e006873 00656d61     ount flash.Name.
   25c04:	73303125 61745320 20725020 63617453     %10s Sta Pr Stac
   25c14:	5043206b 20252555 20202020 20202020     k CPU%%         
   25c24:	6d695420 25000a65 20733031 25207325      Time..%10s %s %
   25c34:	25207532 25207535 25207534 20753031     2u %5u %4u %10u 
   25c44:	000a7375 65766f28 61656872 25002964     us..(overhead).%
   25c54:	20733031 202d2d2d 2d202d2d 2d2d2d2d     10s --- -- -----
   25c64:	75342520 30312520 53752075 2a2a000a      %4u %10u uS..**
   25c74:	52415720 474e494e 6e4f203a 7220796c      WARNING: Only r
   25c84:	726f7065 20646574 73726966 75252074     eported first %u
   25c94:	73617420 000a736b 69637361 61730069      tasks..ascii.sa
   25ca4:	54006576 6d656c65 79727465 73617720     ve.Telemetry was
   25cb4:	76617320 74206465 6964206f 67006b73      saved to disk.g
   25cc4:	45007465 726f7272 636f6c20 6e697461     et.Error locatin
   25cd4:	726f2067 69727020 6e69746e 61762067     g or printing va
   25ce4:	62616972 7620656c 65756c61 71655200     riable value.Req
   25cf4:	65726975 61702064 656d6172 73726574     uired parameters
   25d04:	6727203a 3c207465 706d6f63 6d616e20     : 'get <comp nam
   25d14:	3c203e65 20726176 656d616e 5245003e     e> <var name>.ER
   25d24:	3a524f52 65655320 65682720 7420706c     ROR: See 'help t
   25d34:	6d656c65 79727465 73250027 2073253a     elemetry'.%s:%s 
   25d44:	20746573 25206f74 46000a73 656c6961     set to %s..Faile
   25d54:	6f742064 74657320 3a732520 74207325     d to set %s:%s t
   25d64:	7325206f 7245000a 20726f72 63207525     o %s..Error %u c
   25d74:	6979706f 7c20676e 207c7325 7c203e2d     opying |%s| -> |
   25d84:	0a7c7325 6e694600 65687369 20202164     %s|..Finished!  
   25d94:	64616552 7525203a 2f624b20 2c636573     Read: %u Kb/sec,
   25da4:	69725720 203a6574 4b207525 65732f62      Write: %u Kb/se
   25db4:	30000a63 6e49003a 696c6176 69642064     c..0:.Invalid di
   25dc4:	74636572 3a79726f 73257c20 4528207c     rectory: |%s| (E
   25dd4:	726f7272 29692520 6944000a 74636572     rror %i)..Direct
   25de4:	2079726f 7473696c 20676e69 203a666f     ory listing of: 
   25df4:	0a0a7325 25632500 25632563 20632563     %s...%c%c%c%c%c 
   25e04:	252f7525 2f753230 75323025 32302520     %u/%02u/%02u %02
   25e14:	30253a75 25207532 756c3031 33312520     u:%02u %10lu %13
   25e24:	2d200073 250a0020 46207534 28656c69     s. - ..%4u File(
   25e34:	202c2973 64303125 74796220 74207365     s), %10d bytes t
   25e44:	6c61746f 6434250a 72694420 00297328     otal.%4d Dir(s).
   25e54:	3125202c 204b6430 65747962 72662073     , %10dK bytes fr
   25e64:	000a6565 65766f4d 73252720 3e2d2027     ee..Move '%s' ->
   25e74:	73252720 203a2027 000a7325 656c6544      '%s' : %s..Dele
   25e84:	27206574 20277325 7325203a 6f6c000a              te '%s' : %s..

00025e92 <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   25e92:	48676f6c 6c646e61 52007265 52004e55     logHandler.RUN.R
   25ea2:	42005944 53004b4c 44005355 03004c45     DY.BLK.SUS.DEL..
   25eb2:	2d040403 2d2d2d2d 2d2d2d2d 2d2d2d2d     ...-------------
   25ec2:	2d2d2d2d 2d2d2d2d 2d2d2d2d 6f52000a     ------------..Ro
   25ed2:	6e697475 61742067 20656c62 657a6973     uting table size
   25ee2:	20736920 000a6925 5344207c 207c2054      is %i..| DST | 
   25ef2:	7478654e 504f4820 48207c20 2053504f     Next HOP | HOPS 
   25f02:	7c000a7c 69332520 20207c20 69332520     |..| %3i |   %3i
   25f12:	20202020 3325207c 7c202069 7327000a         | %3i  |..'s
   25f22:	61657274 613c206d 3e726464 736d3c20     tream <addr> <ms
   25f32:	20273e67 7453203a 6d616572 63206120     g>' : Stream a c
   25f42:	616d6d6f 7420646e 6e61206f 6568746f     ommand to anothe
   25f52:	6f622072 00647261 65727473 27006d61     r board.stream.'
   25f62:	6e617274 72656673 72733c20 69662063     transfer <src fi
   25f72:	616e656c 203e656d 7473643c 6c696620     lename> <dst fil
   25f82:	6d616e65 3c203e65 6464616e 20273e72     ename> <naddr>' 
   25f92:	7254203a 66736e61 61207265 6c696620     : Transfer a fil
   25fa2:	6f742065 6f6e6120 72656874 616f6220     e to another boa
   25fb2:	74006472 736e6172 00726566 20787227     rd.transfer.'rx 
   25fc2:	6d69743c 736d5f65 3a20273e 6c6f5020     <time_ms>' : Pol
   25fd2:	6f66206c 20612072 6b636170 72007465     l for a packet.r
   25fe2:	61270078 20726464 6464613c 20203e72     x.'addr <addr>  
   25ff2:	53203a20 74207465 77206568 6c657269      : Set the wirel
   26002:	20737365 72646461 00737365 756f7227     ess address.'rou
   26012:	27736574 53203a20 74206565 77206568     tes' : See the w
   26022:	6c657269 20737365 74756f72 27007365     ireless routes.'
   26032:	206b6361 6464613c 3c203e72 61746164     ack <addr> <data
   26042:	2020273e 6553203a 6120646e 63617020     >'  : Send a pac
   26052:	2074656b 20646e61 74696177 726f6620     ket and wait for
   26062:	6b636120 6c776f6e 6d676465 00746e65      acknowledgment.
   26072:	63616e27 613c206b 3e726464 61643c20     'nack <addr> <da
   26082:	273e6174 53203a20 20646e65 61702061     ta>' : Send a pa
   26092:	74656b63 63616e00 7327006b 73746174     cket.nack.'stats
   260a2:	203a2027 20656553 20656874 65726977     ' : See the wire
   260b2:	7373656c 61747320 52007374 69656365     less stats.Recei
   260c2:	20646576 61746164 6f726620 6925206d     ved data from %i
   260d2:	6f4e000a 74616420 65722061 76696563     ..No data receiv
   260e2:	44006465 61637369 64656472 73206120     ed.Discarded a s
   260f2:	656c6174 72697720 73656c65 61702073     tale wireless pa
   26102:	74656b63 72724500 7320726f 69646e65     cket.Error sendi
   26112:	7020676e 656b6361 63202c74 6b636568     ng packet, check
   26122:	72617020 74656d61 21737265 6d655200      parameters!.Rem
   26132:	2065746f 65646f6e 6d616e20 27203a65     ote node name: '
   26142:	63655200 65766965 68742064 63612065     .Received the ac
   26152:	776f6e6b 6764656c 746e656d 61500021     knowledgment!.Pa
   26162:	74656b63 6e657320 6f742074 20732520     cket sent to %s 
   26172:	20747562 41206f6e 72204b43 69656365     but no ACK recei
   26182:	00646576 4c494146 53004445 61207465     ved.FAILED.Set a
   26192:	65726464 74207373 6925206f 7325203a     ddress to %i: %s
   261a2:	3125000a 20733832 38323125 69252073     ..%128s %128s %i
   261b2:	61725400 6566736e 73252072 3e2d2d20     .Transfer %s -->
   261c2:	3a692520 000a7325 656c6966 66756220      %i:%s..file buf
   261d2:	20726566 69252030 5245000a 3a524f52     fer 0 %i..ERROR:
   261e2:	65684320 75736b63 7845206d 74636570      Checksum Expect
   261f2:	25206465 63412069 6c617574 0a692520     ed %i Actual %i.
   26202:	6c696600 6f632065 74696d6d 20732520     .file commit %s 
   26212:	25206925 6f000a69 5245006b 3a524f52     %i %i..ok.ERROR:
   26222:	6d655220 2065746f 65646f6e 64696420      Remote node did
   26232:	746f6e20 6b636120 6c776f6e 65676465      not acknowledge
   26242:	6c696620 72772065 20657469 29732528      file write (%s)
   26252:	6553000a 2520746e 69252f69 2020000a     ..Sent %i/%i..  
   26262:	65522020 76696563 25206465 79622069       Received %i by
   26272:	20736574 7265766f 20692520 6b636170     tes over %i pack
   26282:	0a737465 73552f00 2f737265 73616b61     ets../Users/akas
   26292:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   262a2:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   262b2:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   262c2:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   262d2:	61685f64 656c646e 772f7372 6c657269     d_handlers/wirel
   262e2:	5f737365 646e6168 7372656c 7070632e     ess_handlers.cpp
   262f2:	6f685700 2173706f 70412020 786f7270     .Whoops!  Approx
   26302:	74616d69 20796c65 62206925 73657479     imately %i bytes
   26312:	756f6320 6e20646c 6220746f 72702065      could not be pr
   26322:	65746e69 65622064 73756163 68742065     inted because th
   26332:	756f2065 74757074 61686320 6c656e6e     e output channel
   26342:	20736920 206f6f74 776f6c73 5020202e      is too slow.  P
   26352:	7361656c 6f662065 776f6c6c 65687420     lease follow the
   26362:	67757320 74736567 736e6f69 20746120      suggestions at 
   26372:	656c6966 7325203a 6c206120 6c747469     file: %s a littl
   26382:	69622065 62612074 2065766f 6c696877     e bit above whil
   26392:	6f6c2065 6120706f 696c2074 6e20656e     e loop at line n
   263a2:	65626d75 69252072 6150000a 20657372     umber %i..Parse 
   263b2:	6f727265 74203a72 203a7972 72747327     error: try: 'str
   263c2:	206d6165 6464613c 3c203e72 6d6d6f63     eam <addr> <comm
   263d2:	3e646e61 254e0027 52203a75 78542f78     and>'.N%u: Rx/Tx
   263e2:	7452202c 764f2f65 52202c74 69727465     , Rte/Ovt, Retri
   263f2:	4d2f6465 20687365 72746552 2f646569     ed/Mesh Retried/
   26402:	65706552 64657461 000a203a 20202020     Repeated: ..    
   26412:	2f753325 75332d25 2f752520 202c7525     %3u/%-3u %u/%u, 
   26422:	252f7525 75252f75 4b4f000a 6946000a     %u/%u/%u..OK..Fi
   26432:	7720656c 65746972 72726520 000a726f     le write error..
   26442:	6d6d6f63 25007469 2520732a 73383231     commit.%*s %128s
   26452:	20692520 62006925 65666675 2a250072      %i %i.buffer.%*
   26462:	69252073 00692520 4f525245 4d203a52     s %i %i.ERROR: M
   26472:	62207861 65666675 69732072 6920657a     ax buffer size i
   26482:	69252073 74796220 000a7365 4f525245     s %i bytes..ERRO
   26492:	54203a52 4f454d49 000a5455 63656843     R: TIMEOUT..Chec
   264a2:	6d75736b 0a692520 6c694600 6d616e65     ksum %i..Filenam
   264b2:	68732065 646c756f 20656220 7373656c     e should be less
   264c2:	61687420 6925206e 61686320 000a7372      than %i chars..
   264d2:	28207325 62207525 73657479 69772029     %s (%u bytes) wi
   264e2:	62206c6c 72702065 6172676f 64656d6d     ll be programmed
   264f2:	65520a2e 746f6f62 20676e69 20776f6e     ..Rebooting now 
   26502:	75206f74 61726770 66206564 776d7269     to upgrade firmw
   26512:	21657261 55000a0a 6c62616e 6f742065     are!...Unable to
   26522:	65706f20 2527206e 000a2773 6b736944      open '%s'..Disk
   26532:	72617620 6c626169 63207365 676e6168      variables chang
   26542:	2e2e6465 6843002e 65676e61 61732073     ed....Changes sa
   26552:	20646576 64206f74 2e6b7369 44002e2e     ved to disk....D
   26562:	206b7369 69726176 656c6261 61732073     isk variables sa
   26572:	20646576 64206f74 006b7369 4c002008     ved to disk.. .L
   26582:	203a4350 20202000 696e6946 64656873     PC: .   Finished
   26592:	206e6920 75207525 6d000a73 6d6d6f43      in %u us..mComm
   265a2:	43646e61 746e756f 69446d00 6c546b73     andCount.mDiskTl
   265b2:	7a69536d 61540065 432f6b73 49205550     mSize.Task/CPU I
   265c2:	2e6f666e 73552020 69272065 206f666e     nfo.  Use 'info 
   265d2:	27303032 206f7420 20746567 20555043     200' to get CPU 
   265e2:	69727564 3220676e 736d3030 65655300     during 200ms.See
   265f2:	6d656d20 2079726f 6f666e69 6d656d00      memory info.mem
   26602:	6f666e69 74754f00 20747570 74737973     info.Output syst
   26612:	68206d65 746c6165 74270068 27656d69     em health.'time'
   26622:	206f7420 77656976 6d697420 20202e65      to view time.  
   26632:	6d697427 65732065 4d4d2074 20444420     'time set MM DD 
   26642:	59595959 20484820 53204d4d 64572053     YYYY HH MM SS Wd
   26652:	20277961 73206f74 74207465 00656d69     ay' to set time.
   26662:	64616552 66206120 2e656c69 78452020     Read a file.  Ex
   26672:	6327203a 30207461 6c69663a 78742e65     : 'cat 0:file.tx
   26682:	6f202774 63272072 30207461 6c69663a     t' or 'cat 0:fil
   26692:	78742e65 6e2d2074 6972706f 2027746e     e.txt -noprint' 
   266a2:	74206f74 20747365 66206669 20656c69     to test if file 
   266b2:	206e6163 72206562 00646165 00746163     can be read.cat.
   266c2:	79706f43 6c696620 66207365 2f6d6f72     Copy files from/
   266d2:	46206f74 6873616c 2044532f 64726143     to Flash/SD Card
   266e2:	4520202e 27203a78 30207063 6c69663a     .  Ex: 'cp 0:fil
   266f2:	78742e65 3a312074 656c6966 7478742e     e.txt 1:file.txt
   26702:	6f430027 61207970 66206c6c 73656c69     '.Copy all files
   26712:	20666f20 69642061 74636572 2079726f      of a directory 
   26722:	61206f74 68746f6e 64207265 63657269     to another direc
   26732:	79726f74 4520202e 27203a78 20706364     tory.  Ex: 'dcp 
   26742:	72733a30 3a312063 27747364 70636400     0:src 1:dst'.dcp
   26752:	65735500 736c2720 273a3020 726f6620     .Use 'ls 0:' for
   26762:	616c4620 202c6873 2720726f 3120736c      Flash, or 'ls 1
   26772:	6620273a 5320726f 61432044 6c006472     :' for SD Card.l
   26782:	72430073 65746165 64206120 63657269     s.Create a direc
   26792:	79726f74 7845202e 6d27203a 7269646b     tory. Ex: 'mkdir
   267a2:	73657420 6d002774 7269646b 6e655200      test'.mkdir.Ren
   267b2:	20656d61 69662061 202e656c 203a7845     ame a file. Ex: 
   267c2:	206d7227 69663a30 742e656c 30207478     'rm 0:file.txt 0
   267d2:	77656e3a 7478742e 766d0027 69725700     :new.txt'.mv.Wri
   267e2:	61206574 77656e20 6c696620 45202e65     te a new file. E
   267f2:	27203a78 3c20666e 656c6966 7478742e     x: 'nf <file.txt
   26802:	6552003e 65766f6d 66206120 2e656c69     >.Remove a file.
   26812:	3a784520 6d722720 663a3020 2e656c69      Ex: 'rm 0:file.
   26822:	27747874 006d7200 63326927 61657220     txt'.rm.'i2c rea
   26832:	78302064 30203130 20323078 756f633c     d 0x01 0x02 <cou
   26842:	273e746e 52203a20 73646165 6f633c20     nt>' : Reads <co
   26852:	3e746e75 67657220 65747369 6f207372     unt> registers o
   26862:	65642066 65636976 30783020 74732031     f device 0x01 st
   26872:	69747261 6620676e 206d6f72 32307830     arting from 0x02
   26882:	3269270a 72772063 20657469 31307830     .'i2c write 0x01
   26892:	30783020 78302032 20273330 203a2020      0x02 0x03'   : 
   268a2:	74697257 30207365 20333078 64206f74     Writes 0x03 to d
   268b2:	63697665 78302065 202c3130 20676572     evice 0x01, reg 
   268c2:	32307830 3269270a 69642063 766f6373     0x02.'i2c discov
   268d2:	20277265 6944203a 766f6373 20737265     er' : Discovers 
   268e2:	206c6c61 20433249 69766564 20736563     all I2C devices 
   268f2:	74206e6f 42206568 69005355 50006332     on the BUS.i2c.P
   26902:	6d617261 72657465 27203a73 6d726f66     arameters: 'form
   26912:	73207461 202c2764 726f6627 2074616d     at sd', 'format 
   26922:	73616c66 202c2768 756f6d27 7320746e     flash', 'mount s
   26932:	202c2764 756f6d27 6620746e 6873616c     d', 'mount flash
   26942:	74730027 6761726f 65520065 746f6f62     '.storage.Reboot
   26952:	68742073 79732065 6d657473 62657200     s the system.reb
   26962:	00746f6f 676f6c27 65683c20 3e6f6c6c     oot.'log <hello>
   26972:	6c203a27 6120676f 6e69206e 6d206f66     ': log an info m
   26982:	61737365 270a6567 20676f6c 73756c66     essage.'log flus
   26992:	20202768 6c66203a 20687375 20656874     h'  : flush the 
   269a2:	73676f6c 6f6c270a 74732067 73757461     logs.'log status
   269b2:	203a2027 20746567 74617473 6f207375     ' : get status o
   269c2:	68742066 6f6c2065 72656767 6f6c270a     f the logger.'lo
   269d2:	6e652067 656c6261 69727020 6420746e     g enable print d
   269e2:	67756265 666e692f 61772f6f 652f6e72     ebug/info/warn/e
   269f2:	726f7272 203a2027 62616e45 2073656c     rror' : Enables 
   26a02:	67676f6c 63207265 736c6c61 206f7420     logger calls to 
   26a12:	6e697270 270a6674 20676f6c 61736964     printf.'log disa
   26a22:	20656c62 6e697270 65642074 2f677562     ble print debug/
   26a32:	6f666e69 7261772f 72652f6e 27726f72     info/warn/error'
   26a42:	6944203a 6c626173 6c207365 6567676f     : Disables logge
   26a52:	61632072 20736c6c 70206f74 746e6972     r calls to print
   26a62:	6c000a66 4200676f 6e696765 206f7420     f..log.Begin to 
   26a72:	7261656c 5249206e 646f6320 66207365     learn IR codes f
   26a82:	6e20726f 65626d75 30207372 6c00392d     or numbers 0-9.l
   26a92:	6e726165 65735500 69772720 656c6572     earn.Use 'wirele
   26aa2:	20277373 73206f74 74206565 6e206568     ss' to see the n
   26ab2:	65747365 6f632064 6e616d6d 47007364     ested commands.G
   26ac2:	61207465 6c696620 73752065 20676e69     et a file using 
   26ad2:	6c74656e 2e64616f 20657865 6220726f     netload.exe or b
   26ae2:	73752079 20676e69 20656874 6c6c6f66     y using the foll
   26af2:	6e69776f 72702067 636f746f 0a3a6c6f     owing protocol:.
   26b02:	74697257 75622065 72656666 7562203a     Write buffer: bu
   26b12:	72656666 666f3c20 74657366 6e3c203e     ffer <offset> <n
   26b22:	62206d75 73657479 2e2e203e 72570a2e     um bytes> ....Wr
   26b32:	20657469 66667562 74207265 6966206f     ite buffer to fi
   26b42:	203a656c 6d6d6f63 3c207469 656c6966     le: commit <file
   26b52:	656d616e 663c203e 20656c69 7366666f     name> <file offs
   26b62:	203e7465 6d756e3c 74796220 66207365     et> <num bytes f
   26b72:	206d6f72 66667562 003e7265 616c6627     rom buffer>.'fla
   26b82:	3c206873 656c6966 656d616e 5720273e     sh <filename>' W
   26b92:	206c6c69 73616c66 50432068 69772055     ill flash CPU wi
   26ba2:	74206874 20736968 2077656e 616e6962     th this new bina
   26bb2:	66207972 00656c69 7074754f 20737475     ry file.Outputs 
   26bc2:	69676572 72657473 74206465 6d656c65     registered telem
   26bd2:	79727465 7427203a 6d656c65 79727465     etry: 'telemetry
   26be2:	76617320 3a202765 76615320 64207365      save' : Saves d
   26bf2:	206b7369 0a6c6574 6c657427 74656d65     isk tel.'telemet
   26c02:	61207972 69696373 203a2027 6e697250     ry ascii' : Prin
   26c12:	61207374 74206c6c 6d656c65 79727465     ts all telemetry
   26c22:	206e6920 616d7568 6572206e 62616461      in human readab
   26c32:	6620656c 616d726f 74270a74 6d656c65     le format.'telem
   26c42:	79727465 6f633c20 202e706d 656d616e     etry <comp. name
   26c52:	6e3c203e 3e656d61 61763c20 3e65756c     > <name> <value>
   26c62:	6f742027 74657320 74206120 6d656c65     ' to set a telem
   26c72:	79727465 72617620 6c626169 74270a65     etry variable.'t
   26c82:	6d656c65 79727465 74656720 6f633c20     elemetry get <co
   26c92:	202e706d 656d616e 6e3c203e 3e656d61     mp. name> <name>
   26ca2:	6f742027 74656720 72617620 6c626169     ' to get variabl
   26cb2:	61762065 0a65756c 6c657400 74656d65     e value..telemet
   26cc2:	74007972 696d7265 006c616e 72a8ffff              ry.terminal...

00026cd0 <typeinfo for terminalTask>:
   26cd0:	000272a8 00026cdc 0002523c              .r...l..<R..

00026cdc <typeinfo name for terminalTask>:
   26cdc:	65743231 6e696d72 61546c61 ff006b73     12terminalTask..

00026cec <vtable for terminalTask>:
   26cec:	00000000 00026cd0 0001ad5d 0001ada9     .....l..].......
   26cfc:	00015c6d 0001adbd 0001b259 0001b14d     m\......Y...M...
   26d0c:	656e6f44 72724500 4400726f 21656e6f     Done.Error.Done!
   26d1c:	52524500 203a524f 73736f50 656c6269     .ERROR: Possible
   26d2c:	6f687320 6f207472 4453206e 726f2041      short on SDA or
   26d3c:	4c435320 72697720 49282065 29324332      SCL wire (I2C2)
   26d4c:	52450021 3a524f52 69614620 2064656c     !.ERROR: Failed 
   26d5c:	69206f74 6974696e 7a696c61 69772065     to initialize wi
   26d6c:	656c6572 53007373 65747379 6f42206d     reless.System Bo
   26d7c:	4020746f 332e2520 684d2066 53000a7a     ot @ %.3f Mhz..S
   26d8c:	65747379 6572206d 746f6f62 61206465     ystem rebooted a
   26d9c:	72657466 61726320 202e6873 6c655220     fter crash.  Rel
   26dac:	6e617665 6e692074 0a3a6f66 203a4350     evant info:.PC: 
   26dbc:	30257830 202e5838 3a524c20 25783020     0x%08X.  LR: 0x%
   26dcc:	2e583830 53502020 30203a52 38302578     08X.  PSR: 0x%08
   26ddc:	6f500a58 62697373 6c20656c 20747361     X.Possible last 
   26dec:	6e6e7572 20676e69 5420534f 3a6b7361     running OS Task:
   26dfc:	73252720 20000a27 73616c46 45002068      '%s'.. Flash .E
   26e0c:	69736172 6120676e 6620646e 616d726f     rasing and forma
   26e1c:	6e697474 50532067 6c662049 2c687361     tting SPI flash,
   26e2c:	69687420 61632073 6174206e 6120656b      this can take a
   26e3c:	69687720 2e20656c 00202e2e 20495053      while ... .SPI 
   26e4c:	53414c46 73692048 736f7020 6c626973     FLASH is possibl
   26e5c:	61642079 6567616d 50002164 20656761     y damaged!.Page 
   26e6c:	657a6973 7525203a 654d000a 7320206d     size: %u..Mem  s
   26e7c:	3a657a69 20752520 77617228 74796220     ize: %u (raw byt
   26e8c:	0a297365 52524500 203a524f 65636341     es)..ERROR: Acce
   26e9c:	6172656c 6e6f6974 6e655320 00726f73     leration Sensor.
   26eac:	4f525245 54203a52 65706d65 75746172     ERROR: Temperatu
   26ebc:	53206572 6f736e65 52450072 3a524f52     re Sensor.ERROR:
   26ecc:	532d3720 656d6765 4420746e 6c707369      7-Segment Displ
   26edc:	6e007961 72646461 74655300 72697720     ay.naddr.Set wir
   26eec:	73656c65 6f6e2073 61206564 65726464     eless node addre
   26efc:	74207373 6925206f 6f726620 2527206d     ss to %i from '%
   26f0c:	66202773 3a656c69 0a732520 616f4200     s' file: %s..Boa
   26f1c:	49206472 73692044 2527203a 28202773     rd ID is: '%s' (
   26f2c:	30257830 0a295832 746e4500 61207265     0x%02X)..Enter a
   26f3c:	616f6220 49206472 36282044 68632034      board ID (64 ch
   26f4c:	20737261 2978616d 2500203a 00733436     ars max): .%64s.
   26f5c:	72616f42 44492064 206f7420 676f7270     Board ID to prog
   26f6c:	3a6d6172 73252720 45000a27 7265746e     ram: '%s'..Enter
   26f7c:	27592720 206f7420 666e6f63 2e6d7269      'Y' to confirm.
   26f8c:	4f422020 20445241 43204449 4f4e4e41       BOARD ID CANNO
   26f9c:	45422054 41484320 4445474e 444e4120     T BE CHANGED AND
   26fac:	20534920 4d524550 4e454e41 33250054      IS PERMANENT.%3
   26fbc:	6f420073 20647261 6e204449 7020746f     s.Board ID not p
   26fcc:	72676f72 656d6d61 6f590064 61632075     rogrammed.You ca
   26fdc:	7270206e 6172676f 2061206d 4d524550     n program a PERM
   26fec:	4e454e41 44492054 20666f20 72756f79     ANENT ID of your
   26ffc:	616f6220 002e6472 64206f54 6874206f      board..To do th
   2700c:	202c7369 646c6f68 31575320 646e6120     is, hold SW1 and
   2701c:	34575320 646e6120 73657220 74207465      SW4 and reset t
   2702c:	62206568 6472616f 5043002e 6c662055     he board..CPU fl
   2703c:	20687361 65746c61 2f646572 676f7270     ash altered/prog
   2704c:	6d6d6172 63206465 746e756f 25203a73     rammed counts: %
   2705c:	75252f75 5043000a 72702055 6172676f     u/%u..CPU progra
   2706c:	64656d6d 616c6620 28206873 2f6e696d     mmed flash (min/
   2707c:	2978616d 7525203a 2d20624b 4b752520     max): %uKb - %uK
   2708c:	4c000a62 20747361 676f7270 6d6d6172     b..Last programm
   2709c:	20676e69 6b6f6f74 20752520 000a736d     ing took %u ms..
   270ac:	6c6c6143 20676e69 72756f79 69616d20     Calling your mai
   270bc:	0029286e 2d2d2d2d 2d2d2d2d 2d2d2d2d     n().------------
   270cc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   270dc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   270ec:	2d2d2d2d 2d2d2d2d 2d2d2d2d 4b002d2d     --------------.K
   270fc:	424d0042 73655900 006f4e00 203a7325     B.MB.Yes.No.%s: 
   2710c:	2d204b4f 6143202d 69636170 25207974     OK -- Capacity %
   2711c:	2564352d 41202c73 6c696176 656c6261     -5d%s, Available
   2712c:	2d25203a 73257535 7325000a 7245203a     : %-5u%s..%s: Er
   2713c:	20726f72 6e20726f 7020746f 65736572     ror or not prese
   2714c:	202e746e 72724520 2320726f 202c6925     nt.  Error #%i, 
   2715c:	6e756f4d 3a646574 0a732520 00642500     Mounted: %s..%d.
   2716c:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
   2717c:	2a2a2a2a 44412a2a 61562043 7365756c     ******ADC Values
   2718c:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
   2719c:	2a2a2a2a 000a2a2a 65657247 25203a6e     ******..Green: %
   271ac:	42000a66 3a65756c 0a662520 64655200     f..Blue: %f..Red
   271bc:	6625203a 2a2a000a 2a2a2a2a 2a2a2a2a     : %f..**********
   271cc:	2a2a2a2a 2a2a2a2a 2a2a2a2a 79747544     ************Duty
   271dc:	6c637943 61562065 7365756c 2a2a2a2a     Cycle Values****
   271ec:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
   271fc:	000a2a2a 42475276 69447600 616c7073     **..vRGB.vDispla
   2720c:	ffff0079                                y...

00027210 <typeinfo for __cxxabiv1::__class_type_info>:
   27210:	000272a8 0002721c 000272cc              .r...r...r..

0002721c <typeinfo name for __cxxabiv1::__class_type_info>:
   2721c:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   2722c:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   2723c:	ffff0045                                E...

00027240 <vtable for __cxxabiv1::__class_type_info>:
   27240:	00000000 00027210 0001c339 0001c34d     .....r..9...M...
   27250:	0001c50d 0001c50d 0001c379 0001c2f9     ........y.......
   27260:	0001c361 0001c3a3 0001c32d              a.......-...

0002726c <typeinfo for __cxxabiv1::__si_class_type_info>:
   2726c:	000272a8 00027278 00027210              .r..xr...r..

00027278 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   27278:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   27288:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   27298:	456f666e ffffff00                       nfoE....

000272a0 <vtable for __cxxabiv1::__si_class_type_info>:
   272a0:	00000000 0002726c 0001c405 0001c419     ....lr..........
   272b0:	0001c50d 0001c50d 0001c379 0001c2f9     ........y.......
   272c0:	0001c4e1 0001c465 0001c42d              ....e...-...

000272cc <typeinfo for std::type_info>:
   272cc:	00027248 000272d4                       Hr...r..

000272d4 <typeinfo name for std::type_info>:
   272d4:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

000272e4 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   272e4:	000272a8 000272f0 00027210              .r...r...r..

000272f0 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   272f0:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   27300:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   27310:	6f666e69 ffff0045                       infoE...

00027318 <vtable for __cxxabiv1::__vmi_class_type_info>:
   27318:	00000000 000272e4 0001c53d 0001c551     .....r..=...Q...
   27328:	0001c50d 0001c50d 0001c379 0001c2f9     ........y.......
   27338:	0001c895 0001c603 0001c565              ........e...

00027344 <__sf_fake_stderr>:
	...

00027364 <__sf_fake_stdin>:
	...

00027384 <__sf_fake_stdout>:
	...

000273a4 <_global_impure_ptr>:
   273a4:	2007c0e8 4f500043 00584953              ... C.POSIX.

000273b0 <DAYS_IN_MONTH>:
   273b0:	0000001f 0000001c 0000001f 0000001e     ................
   273c0:	0000001f 0000001e 0000001f 0000001f     ................
   273d0:	0000001e 0000001f 0000001e 0000001f     ................

000273e0 <_DAYS_BEFORE_MONTH>:
   273e0:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   273f0:	00000078 00000097 000000b5 000000d4     x...............
   27400:	000000f3 00000111 00000130 0000014e     ........0...N...

00027410 <__month_lengths>:
   27410:	0000001f 0000001c 0000001f 0000001e     ................
   27420:	0000001f 0000001e 0000001f 0000001f     ................
   27430:	0000001e 0000001f 0000001e 0000001f     ................
   27440:	0000001f 0000001d 0000001f 0000001e     ................
   27450:	0000001f 0000001e 0000001f 0000001f     ................
   27460:	0000001e 0000001f 0000001e 0000001f     ................
   27470:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   27480:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   27490:	32313000 36353433 61393837 65646362     .0123456789abcde
   274a0:	25650066 ff00646c                       f.e%ld..

000274a8 <fpi.6129>:
   274a8:	00000035 fffffbce 000003cb 00000001     5...............
   274b8:	00000000                                ....

000274bc <fpinan.6165>:
   274bc:	00000034 fffffbce 000003cb 00000001     4...............
   274cc:	00000000                                ....

000274d0 <tinytens>:
   274d0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   274e0:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   274f0:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   27500:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   27510:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   27520:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   27530:	006e2575 73332e25 332e2520 64332573     u%n.%.3s %.3s%3d
   27540:	322e2520 2e253a64 253a6432 2064322e      %.2d:%.2d:%.2d 
   27550:	000a6425                                %d..

00027554 <day_name.4714>:
   27554:	4d6e7553 75546e6f 64655765 46756854     SunMonTueWedThuF
   27564:	61536972 6e614a74                                riSat

00027569 <mon_name.4715>:
   27569:	466e614a 614d6265 72704172 4a79614d     JanFebMarAprMayJ
   27579:	754a6e75 6775416c 4f706553 6f4e7463     unJulAugSepOctNo
   27589:	63654476                                vDec

0002758d <_ctype_>:
   2758d:	20202000 20202020 28282020 20282828     .         ((((( 
   2759d:	20202020 20202020 20202020 20202020                     
   275ad:	10108820 10101010 10101010 10101010      ...............
   275bd:	04040410 04040404 10040404 10101010     ................
   275cd:	41411010 41414141 01010101 01010101     ..AAAAAA........
   275dd:	01010101 01010101 01010101 10101010     ................
   275ed:	42421010 42424242 02020202 02020202     ..BBBBBB........
   275fd:	02020202 02020202 02020202 10101010     ................
   2760d:	00000020 00000000 00000000 00000000      ...............
	...
   2768d:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   2769d:	00ffffff                                         ...

000276a0 <__mprec_bigtens>:
   276a0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   276b0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   276c0:	7f73bf3c 75154fdd                       <.s..O.u

000276c8 <__mprec_tens>:
   276c8:	00000000 3ff00000 00000000 40240000     .......?......$@
   276d8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   276e8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   276f8:	00000000 412e8480 00000000 416312d0     .......A......cA
   27708:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   27718:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   27728:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   27738:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   27748:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   27758:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   27768:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   27778:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   27788:	79d99db4 44ea7843                       ...yCx.D

00027790 <p05.6047>:
   27790:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   277a0:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   277b0:	000277ce 000277d1 000277d4 61462d41     .w...w...w..A-Fa
   277c0:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   277d0:	00303000 ff005878                       .00.xX..

000277d8 <__init_array_start>:
__preinit_array_start():
   277d8:	0001c2dd 	.word	0x0001c2dd

000277dc <APP_SYM_TABLE>:
__symbol_table_start():
   277dc:	31303030 30663937 41205420 495f4344     000179f0 T ADC_I
   277ec:	61485152 656c646e 30300a72 31383130     RQHandler.000181
   277fc:	54203030 4e414320 5152495f 646e6148     00 T CAN_IRQHand
   2780c:	0a72656c 31303030 63313937 45205420     ler.0001791c T E
   2781c:	33544e49 5152495f 646e6148 0a72656c     INT3_IRQHandler.
   2782c:	31303030 30303038 49205420 5f324332     00018000 T I2C2_
   2783c:	48515249 6c646e61 300a7265 37313030     IRQHandler.00017
   2784c:	20383037 49522054 52495f54 6e614851     708 T RIT_IRQHan
   2785c:	72656c64 3030300a 39323631 20542038     dler.00016298 T 
   2786c:	5f435452 48515249 6c646e61 300a7265     RTC_IRQHandler.0
   2787c:	30313030 20383135 49542054 3152454d     0010518 T TIMER1
   2788c:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   2789c:	30616437 55205420 30545241 5152495f     7da0 T UART0_IRQ
   278ac:	646e6148 0a72656c 31303030 63636237     Handler.00017bcc
   278bc:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   278cc:	0a72656c 31303030 34366237 55205420     ler.00017b64 T U
   278dc:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   278ec:	31303030 63653839 63205420 61487461     000198ec T catHa
   278fc:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   2790c:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   2791c:	66633931 20542063 48706364 6c646e61     19cfc T dcpHandl
   2792c:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   2793c:	76202c26 2a64696f 30300a29 36393130     &, void*).000196
   2794c:	54203464 676f6c20 646e6148 2872656c     d4 T logHandler(
   2795c:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   2796c:	64696f76 300a292a 63313030 20633630     void*).0001c06c 
   2797c:	43762054 5f6c6c61 6b636142 300a2928     T vCall_Back().0
   2798c:	39313030 20303136 69742054 6148656d     0019610 T timeHa
   2799c:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   279ac:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   279bc:	36326131 20542038 49633269 6e61486f     1a268 T i2cIoHan
   279cc:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   279dc:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   279ec:	30376239 6d205420 7269646b 646e6148     9b70 T mkdirHand
   279fc:	2872656c 26727473 6843202c 65447261     ler(str&, CharDe
   27a0c:	202c2676 64696f76 300a292a 61313030     v&, void*).0001a
   27a1c:	20636135 73772054 48657452 6c646e61     5ac T wsRteHandl
   27a2c:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   27a3c:	76202c26 2a64696f 30300a29 30613130     &, void*).0001a0
   27a4c:	54203063 61656820 4868746c 6c646e61     c0 T healthHandl
   27a5c:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   27a6c:	76202c26 2a64696f 30300a29 65393130     &, void*).00019e
   27a7c:	54203466 62657220 48746f6f 6c646e61     f4 T rebootHandl
   27a8c:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   27a9c:	76202c26 2a64696f 30300a29 63613130     &, void*).0001ac
   27aac:	54203432 74656720 656c6946 646e6148     24 T getFileHand
   27abc:	2872656c 26727473 6843202c 65447261     ler(str&, CharDe
   27acc:	202c2676 64696f76 300a292a 61313030     v&, void*).0001a
   27adc:	20383630 656c2054 496e7261 6e614872     068 T learnIrHan
   27aec:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   27afc:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   27b0c:	30323230 6c205420 6c5f776f 6c657665     0220 T low_level
   27b1c:	696e695f 0a292874 31303030 63653539     _init().000195ec
   27b2c:	6d205420 6e496d65 61486f66 656c646e      T memInfoHandle
   27b3c:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   27b4c:	6f76202c 292a6469 3030300a 34633931     , void*).00019c4
   27b5c:	20542034 4677656e 48656c69 6c646e61     4 T newFileHandl
   27b6c:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   27b7c:	76202c26 2a64696f 30300a29 65393130     &, void*).00019e
   27b8c:	54203833 6f747320 65676172 646e6148     38 T storageHand
   27b9c:	2872656c 26727473 6843202c 65447261     ler(str&, CharDe
   27bac:	202c2676 64696f76 300a292a 63313030     v&, void*).0001c
   27bbc:	20303830 5f632054 746e6965 61685f33     080 T c_eint3_ha
   27bcc:	656c646e 0a292872 31303030 63383662     ndler().0001b68c
   27bdc:	68205420 5f686769 6576656c 6e695f6c      T high_level_in
   27bec:	29287469 3030300a 30353931 20542034     it().00019504 T 
   27bfc:	6b736174 7473694c 646e6148 2872656c     taskListHandler(
   27c0c:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   27c1c:	64696f76 300a292a 61313030 20346136     void*).0001a6a4 
   27c2c:	69772054 656c6572 61487373 656c646e     T wirelessHandle
   27c3c:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   27c4c:	6f76202c 292a6469 3030300a 37626131     , void*).0001ab7
   27c5c:	20542030 73616c66 6f725068 6e614867     0 T flashProgHan
   27c6c:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   27c7c:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   27c8c:	34326639 74205420 6d656c65 79727465     9f24 T telemetry
   27c9c:	646e6148 2872656c 26727473 6843202c     Handler(str&, Ch
   27cac:	65447261 202c2676 64696f76 300a292a     arDev&, void*).0
   27cbc:	35313030 20383763 63732054 75646568     0015c78 T schedu
   27ccc:	5f72656c 5f646461 6b736174 68637328     ler_add_task(sch
   27cdc:	6c756465 745f7265 2a6b7361 30300a29     eduler_task*).00
   27cec:	37303130 54203430 73797320 6f6c635f     010704 T sys_clo
   27cfc:	635f6b63 69666e6f 65727567 300a2928     ck_configure().0
   27d0c:	63313030 20303930 52762054 76284247     001c090 T vRGB(v
   27d1c:	2a64696f 30300a29 31303130 54203038     oid*).00010180 T
   27d2c:	73736220 696e695f 6e752874 6e676973      bss_init(unsign
   27d3c:	69206465 202c746e 69736e75 64656e67     ed int, unsigned
   27d4c:	746e6920 30300a29 31633130 54203839      int).0001c198 T
   27d5c:	69447620 616c7073 6f762879 292a6469      vDisplay(void*)
   27d6c:	3030300a 36383931 20542063 61487063     .0001986c T cpHa
   27d7c:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   27d8c:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   27d9c:	36313031 20542061 61746164 696e695f     1016a T data_ini
   27dac:	6e752874 6e676973 69206465 202c746e     t(unsigned int, 
   27dbc:	69736e75 64656e67 746e6920 6e75202c     unsigned int, un
   27dcc:	6e676973 69206465 0a29746e 31303030     signed int).0001
   27ddc:	63653939 6c205420 6e614873 72656c64     99ec T lsHandler
   27dec:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   27dfc:	696f7620 0a292a64 31303030 38656239      void*).00019be8
   27e0c:	6d205420 6e614876 72656c64 72747328      T mvHandler(str
   27e1c:	43202c26 44726168 2c267665 696f7620     &, CharDev&, voi
   27e2c:	0a292a64 31303030 63616239 72205420     d*).00019bac T r
   27e3c:	6e61486d 72656c64 72747328 43202c26     mHandler(str&, C
   27e4c:	44726168 2c267665 696f7620 0a292a64     harDev&, void*).
   27e5c:	31303030 34376334 4c205420 445f4445     00014c74 T LED_D
   27e6c:	6c707369 3a3a7961 4c746573 44746665     isplay::setLeftD
   27e7c:	74696769 61686328 300a2972 34313030     igit(char).00014
   27e8c:	20633863 454c2054 69445f44 616c7073     c8c T LED_Displa
   27e9c:	733a3a79 69527465 44746867 74696769     y::setRightDigit
   27eac:	61686328 300a2972 34313030 20346163     (char).00014ca4 
   27ebc:	454c2054 69445f44 616c7073 693a3a79     T LED_Display::i
   27ecc:	2874696e 30300a29 63343130 54206364     nit().00014cdc T
   27edc:	44454c20 7369445f 79616c70 65733a3a      LED_Display::se
   27eec:	6d754e74 28726562 72616863 30300a29     tNumber(char).00
   27efc:	64343130 54203037 67694c20 535f7468     014d70 T Light_S
   27f0c:	6f736e65 673a3a72 61527465 6c615677     ensor::getRawVal
   27f1c:	29286575 3030300a 36643431 20542063     ue().00014d6c T 
   27f2c:	6867694c 65535f74 726f736e 6e693a3a     Light_Sensor::in
   27f3c:	29287469 3030300a 66623731 20542030     it().00017bf0 T 
   27f4c:	64726f4e 74536369 6d616572 6c663a3a     NordicStream::fl
   27f5c:	28687375 30300a29 63373130 54203639     ush().00017c96 T
   27f6c:	726f4e20 53636964 61657274 673a3a6d      NordicStream::g
   27f7c:	68437465 63287261 2a726168 6e75202c     etChar(char*, un
   27f8c:	6e676973 69206465 0a29746e 31303030     signed int).0001
   27f9c:	34376337 4e205420 6964726f 72745363     7c74 T NordicStr
   27fac:	3a6d6165 7475703a 72616843 61686328     eam::putChar(cha
   27fbc:	75202c72 6769736e 2064656e 29746e69     r, unsigned int)
   27fcc:	3030300a 64633731 20542063 64726f4e     .00017cdc T Nord
   27fdc:	74536369 6d616572 6f4e3a3a 63696472     icStream::Nordic
   27fec:	65727453 29286d61 3030300a 64633731     Stream().00017cd
   27ffc:	20542063 64726f4e 74536369 6d616572     c T NordicStream
   2800c:	6f4e3a3a 63696472 65727453 29286d61     ::NordicStream()
   2801c:	3030300a 32306231 20542038 6d726574     .0001b028 T term
   2802c:	6c616e69 6b736154 65673a3a 6d6f4374     inalTask::getCom
   2803c:	646e616d 300a2928 61313030 20346665     mand().0001aef4 
   2804c:	65742054 6e696d72 61546c61 3a3a6b73     T terminalTask::
   2805c:	65766173 6b736944 286d6c54 30300a29     saveDiskTlm().00
   2806c:	66613130 54203865 72657420 616e696d     01afe8 T termina
   2807c:	7361546c 613a3a6b 6f436464 6e616d6d     lTask::addComman
   2808c:	61684364 6c656e6e 61684328 76654472     dChannel(CharDev
   2809c:	62202c2a 296c6f6f 3030300a 37666131     *, bool).0001af7
   280ac:	20542038 6d726574 6c616e69 6b736154     8 T terminalTask
   280bc:	61683a3a 656c646e 6f686345 42646e41     ::handleEchoAndB
   280cc:	736b6361 65636170 72657428 616e696d     ackspace(termina
   280dc:	7361546c 633a3a6b 6843646d 745f6e61     lTask::cmdChan_t
   280ec:	63202c2a 29726168 3030300a 34316231     *, char).0001b14
   280fc:	20542063 6d726574 6c616e69 6b736154     c T terminalTask
   2810c:	75723a3a 6f76286e 292a6469 3030300a     ::run(void*).000
   2811c:	62646131 20542063 6d726574 6c616e69     1adbc T terminal
   2812c:	6b736154 65723a3a 6d6c5467 300a2928     Task::regTlm().0
   2813c:	62313030 20383532 65742054 6e696d72     001b258 T termin
   2814c:	61546c61 3a3a6b73 6b736174 72746e45     alTask::taskEntr
   2815c:	0a292879 31303030 34346561 74205420     y().0001ae44 T t
   2816c:	696d7265 546c616e 3a6b7361 7265743a     erminalTask::ter
   2817c:	616e696d 7361546c 6e75286b 6e676973     minalTask(unsign
   2818c:	63206465 29726168 3030300a 34656131     ed char).0001ae4
   2819c:	20542034 6d726574 6c616e69 6b736154     4 T terminalTask
   281ac:	65743a3a 6e696d72 61546c61 75286b73     ::terminalTask(u
   281bc:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   281cc:	63353130 54203863 68637320 6c756465     015cc8 T schedul
   281dc:	745f7265 3a6b7361 7465673a 72616853     er_task::getShar
   281ec:	624f6465 7463656a 736e7528 656e6769     edObject(unsigne
   281fc:	68632064 0a297261 31303030 34396335     d char).00015c94
   2820c:	73205420 64656863 72656c75 7361745f      T scheduler_tas
   2821c:	733a3a6b 64656863 72656c75 7361745f     k::scheduler_tas
   2822c:	6863286b 63207261 74736e6f 75202c2a     k(char const*, u
   2823c:	6769736e 2064656e 676e6f6c 6e75202c     nsigned long, un
   2824c:	6e676973 63206465 2c726168 696f7620     signed char, voi
   2825c:	0a292a64 31303030 34396335 73205420     d*).00015c94 T s
   2826c:	64656863 72656c75 7361745f 733a3a6b     cheduler_task::s
   2827c:	64656863 72656c75 7361745f 6863286b     cheduler_task(ch
   2828c:	63207261 74736e6f 75202c2a 6769736e     ar const*, unsig
   2829c:	2064656e 676e6f6c 6e75202c 6e676973     ned long, unsign
   282ac:	63206465 2c726168 696f7620 0a292a64     ed char, void*).
   282bc:	31303030 30343935 43205420 616d6d6f     00015940 T Comma
   282cc:	7250646e 7365636f 3a726f73 6464613a     ndProcessor::add
   282dc:	646e6148 2872656c 6c6f6f62 292a2820     Handler(bool (*)
   282ec:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   282fc:	696f7620 2c292a64 61686320 6f632072      void*), char co
   2830c:	2a74736e 6863202c 63207261 74736e6f     nst*, char const
   2831c:	76202c2a 2a64696f 30300a29 61353130     *, void*).00015a
   2832c:	54206335 6d6f4320 646e616d 636f7250     5c T CommandProc
   2833c:	6f737365 673a3a72 65487465 6554706c     essor::getHelpTe
   2834c:	73287478 2c267274 61684320 76654472     xt(str&, CharDev
   2835c:	300a2926 35313030 20383062 6f432054     &).00015b08 T Co
   2836c:	6e616d6d 6f725064 73736563 3a3a726f     mmandProcessor::
   2837c:	646e6168 6f43656c 6e616d6d 74732864     handleCommand(st
   2838c:	202c2672 72616843 26766544 30300a29     r&, CharDev&).00
   2839c:	61353130 54206363 6d6f4320 646e616d     015acc T Command
   283ac:	636f7250 6f737365 703a3a72 61706572     Processor::prepa
   283bc:	6d436572 72615064 73286d61 2c267274     reCmdParam(str&,
   283cc:	61686320 6f632072 2a74736e 30300a29      char const*).00
   283dc:	39353130 54206362 6d6f4320 646e616d     0159bc T Command
   283ec:	636f7250 6f737365 673a3a72 65527465     Processor::getRe
   283fc:	74736967 64657265 6d6d6f43 4c646e61     gisteredCommandL
   2840c:	28747369 72616843 26766544 30300a29     ist(CharDev&).00
   2841c:	66623130 54203838 62614c20 4f495047     01bf88 T LabGPIO
   2842c:	65746e49 70757272 3a3a7374 52746573     Interrupts::setR
   2843c:	6e697369 67644567 6f622865 0a296c6f     isingEdge(bool).
   2844c:	31303030 63616662 4c205420 50476261     0001bfac T LabGP
   2845c:	6e494f49 72726574 73747075 65733a3a     IOInterrupts::se
   2846c:	6c614674 676e696c 65676445 6f6f6228     tFallingEdge(boo
   2847c:	300a296c 62313030 20303066 614c2054     l).0001bf00 T La
   2848c:	49504762 746e494f 75727265 3a737470     bGPIOInterrupts:
   2849c:	6e61683a 5f656c64 65746e69 70757272     :handle_interrup
   284ac:	0a292874 31303030 30646662 4c205420     t().0001bfd0 T L
   284bc:	50476261 6e494f49 72726574 73747075     abGPIOInterrupts
   284cc:	74613a3a 68636174 65746e49 70757272     ::attachInterrup
   284dc:	6e614874 72656c64 736e7528 656e6769     tHandler(unsigne
   284ec:	68632064 202c7261 69736e75 64656e67     d char, unsigned
   284fc:	61686320 76202c72 2064696f 28292a28      char, void (*)(
   2850c:	49202c29 7265746e 74707572 646e6f43     ), InterruptCond
   2851c:	6f697469 29455f6e 3030300a 66656231     ition_E).0001bef
   2852c:	20542030 4762614c 494f4950 7265746e     0 T LabGPIOInter
   2853c:	74707572 693a3a73 2874696e 30300a29     rupts::init().00
   2854c:	62343130 54203061 63634120 72656c65     014ba0 T Acceler
   2855c:	6f697461 65535f6e 726f736e 6e693a3a     ation_Sensor::in
   2856c:	29287469 3030300a 31643431 20542036     it().00014d16 T 
   2857c:	3a44454c 696e693a 0a292874 31303030     LED::init().0001
   2858c:	63316434 4c205420 3a3a4445 41746573     4d1c T LED::setA
   2859c:	75286c6c 6769736e 2064656e 72616863     ll(unsigned char
   285ac:	30300a29 35363130 54206166 72747320     ).000165fa T str
   285bc:	72653a3a 41657361 72657466 746e6928     ::eraseAfter(int
   285cc:	6e69202c 300a2974 36313030 20346235     , int).000165b4 
   285dc:	74732054 653a3a72 65736172 73726946     T str::eraseFirs
   285ec:	6e692874 300a2974 36313030 20616637     t(int).000167fa 
   285fc:	74732054 693a3a72 7265736e 45744174     T str::insertAtE
   2860c:	6328646e 20726168 736e6f63 0a292a74     nd(char const*).
   2861c:	31303030 30323736 73205420 3a3a7274     00016720 T str::
   2862c:	6c416572 61636f6c 654d6574 6e69286d     reAllocateMem(in
   2863c:	300a2974 36313030 20613536 74732054     t).0001665a T st
   2864c:	653a3a72 65736172 73726946 726f5774     r::eraseFirstWor
   2865c:	69287364 202c746e 72616863 30300a29     ds(int, char).00
   2866c:	37363130 54203864 72747320 6e653a3a     0167d8 T str::en
   2867c:	65727573 6f6d654d 6f547972 65736e49     sureMemoryToInse
   2868c:	434e7472 73726168 746e6928 30300a29     rtNChars(int).00
   2869c:	33363130 54203865 72747320 6c633a3a     0163e8 T str::cl
   286ac:	28726165 30300a29 36363130 54203233     ear().00016632 T
   286bc:	72747320 72653a3a 28657361 72616863      str::erase(char
   286cc:	6e6f6320 292a7473 3030300a 66333631      const*).000163f
   286dc:	20542030 3a727473 6163733a 6328666e     0 T str::scanf(c
   286ec:	20726168 736e6f63 202c2a74 292e2e2e     har const*, ...)
   286fc:	3030300a 39373631 20542036 3a727473     .00016796 T str:
   2870c:	6972703a 2866746e 72616863 6e6f6320     :printf(char con
   2871c:	2c2a7473 2e2e2e20 30300a29 37363130     st*, ...).000167
   2872c:	54203838 72747320 65723a3a 76726573     88 T str::reserv
   2873c:	6e692865 300a2974 36313030 20346336     e(int).000166c4 
   2874c:	74732054 743a3a72 456d6972 6328646e     T str::trimEnd(c
   2875c:	20726168 736e6f63 0a292a74 31303030     har const*).0001
   2876c:	38333836 73205420 3a3a7274 79706f63     6838 T str::copy
   2877c:	6d6f7246 61686328 6f632072 2a74736e     From(char const*
   2878c:	30300a29 34363130 54206330 72747320     ).0001640c T str
   2879c:	6f743a3a 696e656b 6328657a 20726168     ::tokenize(char 
   287ac:	736e6f63 202c2a74 2c746e69 2e2e2e20     const*, int, ...
   287bc:	30300a29 35363130 54206364 72747320     ).000165dc T str
   287cc:	72653a3a 4c657361 28747361 29746e69     ::eraseLast(int)
   287dc:	3030300a 38363631 20542034 3a727473     .00016684 T str:
   287ec:	6972743a 6174536d 63287472 20726168     :trimStart(char 
   287fc:	736e6f63 0a292a74 31303030 30393336     const*).00016390
   2880c:	73205420 3a3a7274 28727473 72616863      T str::str(char
   2881c:	69202c2a 0a29746e 31303030 63373736     *, int).0001677c
   2882c:	73205420 3a3a7274 28727473 29746e69      T str::str(int)
   2883c:	3030300a 39333631 20542030 3a727473     .00016390 T str:
   2884c:	7274733a 61686328 202c2a72 29746e69     :str(char*, int)
   2885c:	3030300a 37373631 20542063 3a727473     .0001677c T str:
   2886c:	7274733a 746e6928 30300a29 33363130     :str(int).000163
   2887c:	54203862 72747320 737e3a3a 29287274     b8 T str::~str()
   2888c:	3030300a 62333631 20542038 3a727473     .000163b8 T str:
   2889c:	74737e3a 0a292872 31303030 34373836     :~str().00016874
   288ac:	73205420 3a3a7274 7265706f 726f7461      T str::operator
   288bc:	6863283d 63207261 74736e6f 300a292a     =(char const*).0
   288cc:	36313030 20633037 74732054 6f3a3a72     001670c T str::o
   288dc:	61726570 5b726f74 6e69285d 300a2974     perator[](int).0
   288ec:	36313030 20653138 74732054 6f3a3a72     001681e T str::o
   288fc:	61726570 2b726f74 6863283d 0a297261     perator+=(char).
   2890c:	31303030 30386637 49205420 3a324332     00017f80 T I2C2:
   2891c:	696e693a 6e752874 6e676973 69206465     :init(unsigned i
   2892c:	0a29746e 31303030 63656637 49205420     nt).00017fec T I
   2893c:	3a324332 4332493a 0a292832 31303030     2C2::I2C2().0001
   2894c:	63656637 49205420 3a324332 4332493a     7fec T I2C2::I2C
   2895c:	0a292832 31303030 34346437 55205420     2().00017d44 T U
   2896c:	30747261 6e693a3a 75287469 6769736e     art0::init(unsig
   2897c:	2064656e 2c746e69 746e6920 6e69202c     ned int, int, in
   2898c:	300a2974 37313030 20343864 61552054     t).00017d84 T Ua
   2899c:	3a307472 7261553a 29283074 3030300a     rt0::Uart0().000
   289ac:	38643731 20542034 74726155 553a3a30     17d84 T Uart0::U
   289bc:	30747261 300a2928 37313030 20306262     art0().00017bb0 
   289cc:	61552054 3a327472 7261553a 29283274     T Uart2::Uart2()
   289dc:	3030300a 62623731 20542030 74726155     .00017bb0 T Uart
   289ec:	553a3a32 32747261 300a2928 37313030     2::Uart2().00017
   289fc:	20383462 61552054 3a337472 7261553a     b48 T Uart3::Uar
   28a0c:	29283374 3030300a 34623731 20542038     t3().00017b48 T 
   28a1c:	74726155 553a3a33 33747261 300a2928     Uart3::Uart3().0
   28a2c:	37313030 20346335 68432054 65447261     00175c4 T CharDe
   28a3c:	703a3a76 63287475 20726168 736e6f63     v::put(char cons
   28a4c:	202c2a74 69736e75 64656e67 746e6920     t*, unsigned int
   28a5c:	30300a29 36373130 54203830 61684320     ).00017608 T Cha
   28a6c:	76654472 65673a3a 63287374 2a726168     rDev::gets(char*
   28a7c:	6e69202c 75202c74 6769736e 2064656e     , int, unsigned 
   28a8c:	29746e69 3030300a 35363731 20542038     int).00017658 T 
   28a9c:	72616843 3a766544 6972703a 2866746e     CharDev::printf(
   28aac:	72616863 6e6f6320 2c2a7473 2e2e2e20     char const*, ...
   28abc:	30300a29 35373130 54206365 61684320     ).000175ec T Cha
   28acc:	76654472 75703a3a 6e696c74 68632865     rDev::putline(ch
   28adc:	63207261 74736e6f 75202c2a 6769736e     ar const*, unsig
   28aec:	2064656e 29746e69 3030300a 64363731     ned int).000176d
   28afc:	20542030 72616843 3a766544 6168433a     0 T CharDev::Cha
   28b0c:	76654472 300a2928 37313030 20306436     rDev().000176d0 
   28b1c:	68432054 65447261 433a3a76 44726168     T CharDev::CharD
   28b2c:	29287665 3030300a 66363731 20542030     ev().000176f0 T 
   28b3c:	72616843 3a766544 68437e3a 65447261     CharDev::~CharDe
   28b4c:	0a292876 31303030 30663637 43205420     v().000176f0 T C
   28b5c:	44726168 3a3a7665 6168437e 76654472     harDev::~CharDev
   28b6c:	300a2928 34313030 20616139 74532054     ().000149aa T St
   28b7c:	6761726f 633a3a65 2879706f 72616863     orage::copy(char
   28b8c:	6e6f6320 2c2a7473 61686320 6f632072      const*, char co
   28b9c:	2a74736e 6e75202c 6e676973 69206465     nst*, unsigned i
   28bac:	2c2a746e 736e7520 656e6769 6e692064     nt*, unsigned in
   28bbc:	202c2a74 69736e75 64656e67 746e6920     t*, unsigned int
   28bcc:	300a292a 34313030 20613961 74532054     *).00014a9a T St
   28bdc:	6761726f 723a3a65 28646165 72616863     orage::read(char
   28bec:	6e6f6320 2c2a7473 696f7620 202c2a64      const*, void*, 
   28bfc:	69736e75 64656e67 746e6920 6e75202c     unsigned int, un
   28c0c:	6e676973 69206465 0a29746e 31303030     signed int).0001
   28c1c:	65646134 53205420 61726f74 3a3a6567     4ade T Storage::
   28c2c:	74697277 68632865 63207261 74736e6f     write(char const
   28c3c:	76202c2a 2a64696f 6e75202c 6e676973     *, void*, unsign
   28c4c:	69206465 202c746e 69736e75 64656e67     ed int, unsigned
   28c5c:	746e6920 30300a29 62343130 54203232      int).00014b22 T
   28c6c:	6f745320 65676172 70613a3a 646e6570      Storage::append
   28c7c:	61686328 6f632072 2a74736e 6f76202c     (char const*, vo
   28c8c:	63206469 74736e6f 75202c2a 6769736e     id const*, unsig
   28c9c:	2064656e 2c746e69 736e7520 656e6769     ned int, unsigne
   28cac:	6e692064 300a2974 37313030 20386633     d int).000173f8 
   28cbc:	61552054 65447472 733a3a76 61427465     T UartDev::setBa
   28ccc:	61526475 75286574 6769736e 2064656e     udRate(unsigned 
   28cdc:	29746e69 3030300a 32343731 20542063     int).0001742c T 
   28cec:	74726155 3a766544 6e61683a 49656c64     UartDev::handleI
   28cfc:	7265746e 74707572 300a2928 37313030     nterrupt().00017
   28d0c:	20343135 61552054 65447472 693a3a76     514 T UartDev::i
   28d1c:	2874696e 69736e75 64656e67 746e6920     nit(unsigned int
   28d2c:	6e75202c 6e676973 69206465 202c746e     , unsigned int, 
   28d3c:	2c746e69 746e6920 30300a29 33373130     int, int).000173
   28d4c:	54206336 72615520 76654474 6c663a3a     6c T UartDev::fl
   28d5c:	28687375 30300a29 33373130 54206338     ush().0001738c T
   28d6c:	72615520 76654474 65673a3a 61684374      UartDev::getCha
   28d7c:	68632872 2c2a7261 736e7520 656e6769     r(char*, unsigne
   28d8c:	6e692064 300a2974 37313030 20386532     d int).000172e8 
   28d9c:	61552054 65447472 703a3a76 68437475     T UartDev::putCh
   28dac:	63287261 2c726168 736e7520 656e6769     ar(char, unsigne
   28dbc:	6e692064 300a2974 37313030 20636534     d int).000174ec 
   28dcc:	61552054 65447472 553a3a76 44747261     T UartDev::UartD
   28ddc:	75287665 6769736e 2064656e 2a746e69     ev(unsigned int*
   28dec:	30300a29 34373130 54206365 72615520     ).000174ec T Uar
   28dfc:	76654474 61553a3a 65447472 6e752876     tDev::UartDev(un
   28e0c:	6e676973 69206465 292a746e 3030300a     signed int*).000
   28e1c:	35303731 20542065 5f433249 65736142     1705e T I2C_Base
   28e2c:	65723a3a 65526461 74736967 28737265     ::readRegisters(
   28e3c:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   28e4c:	6769736e 2064656e 72616863 75202c2a     nsigned char*, u
   28e5c:	6769736e 2064656e 676e6f6c 30300a29     nsigned long).00
   28e6c:	30373130 54203831 43324920 7361425f     017018 T I2C_Bas
   28e7c:	723a3a65 52646165 73696765 73726574     e::readRegisters
   28e8c:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   28e9c:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   28eac:	6769736e 2064656e 72616863 75202c2a     nsigned char*, u
   28ebc:	6769736e 2064656e 676e6f6c 30300a29     nsigned long).00
   28ecc:	30373130 54203233 43324920 7361425f     017032 T I2C_Bas
   28edc:	773a3a65 65746972 69676552 72657473     e::writeRegister
   28eec:	6e752873 6e676973 63206465 2c726168     s(unsigned char,
   28efc:	736e7520 656e6769 68632064 2c2a7261      unsigned char*,
   28f0c:	736e7520 656e6769 6f6c2064 0a29676e      unsigned long).
   28f1c:	31303030 30623237 49205420 425f4332     000172b0 T I2C_B
   28f2c:	3a657361 6e61683a 49656c64 7265746e     ase::handleInter
   28f3c:	74707572 300a2928 37313030 20363730     rupt().00017076 
   28f4c:	32492054 61425f43 3a3a6573 63656863     T I2C_Base::chec
   28f5c:	7665446b 52656369 6f707365 2865736e     kDeviceResponse(
   28f6c:	69736e75 64656e67 61686320 300a2972     unsigned char).0
   28f7c:	36313030 20346566 32492054 61425f43     0016fe4 T I2C_Ba
   28f8c:	3a3a6573 74697277 67655265 65747369     se::writeRegiste
   28f9c:	65685472 6165526e 6e752864 6e676973     rThenRead(unsign
   28fac:	63206465 2c726168 736e7520 656e6769     ed char, unsigne
   28fbc:	68632064 2c2a7261 736e7520 656e6769     d char*, unsigne
   28fcc:	6f6c2064 202c676e 69736e75 64656e67     d long, unsigned
   28fdc:	61686320 202c2a72 69736e75 64656e67      char*, unsigned
   28fec:	6e6f6c20 300a2967 37313030 20386530      long).000170e8 
   28ffc:	32492054 61425f43 3a3a6573 74696e69     T I2C_Base::init
   2900c:	736e7528 656e6769 6f6c2064 202c676e     (unsigned long, 
   2901c:	69736e75 64656e67 6e6f6c20 300a2967     unsigned long).0
   2902c:	36313030 20306666 32492054 61425f43     0016ff0 T I2C_Ba
   2903c:	3a3a6573 64616572 28676552 69736e75     se::readReg(unsi
   2904c:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   2905c:	2064656e 72616863 30300a29 65363130     ned char).00016e
   2906c:	54206364 43324920 7361425f 743a3a65     dc T I2C_Base::t
   2907c:	736e6172 28726566 69736e75 64656e67     ransfer(unsigned
   2908c:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   2909c:	72616863 75202c2a 6769736e 2064656e     char*, unsigned 
   290ac:	676e6f6c 6e75202c 6e676973 63206465     long, unsigned c
   290bc:	2a726168 6e75202c 6e676973 6c206465     har*, unsigned l
   290cc:	29676e6f 3030300a 34303731 20542036     ong).00017046 T 
   290dc:	5f433249 65736142 72773a3a 52657469     I2C_Base::writeR
   290ec:	75286765 6769736e 2064656e 72616863     eg(unsigned char
   290fc:	6e75202c 6e676973 63206465 2c726168     , unsigned char,
   2910c:	736e7520 656e6769 68632064 0a297261      unsigned char).
   2911c:	31303030 63383037 49205420 425f4332     0001708c T I2C_B
   2912c:	3a657361 4332493a 7361425f 504c2865     ase::I2C_Base(LP
   2913c:	32495f43 79545f43 65446570 0a292a66     C_I2C_TypeDef*).
   2914c:	31303030 63383037 49205420 425f4332     0001708c T I2C_B
   2915c:	3a657361 4332493a 7361425f 504c2865     ase::I2C_Base(LP
   2916c:	32495f43 79545f43 65446570 0a292a66     C_I2C_TypeDef*).
   2917c:	31303030 36626434 49205420 545f4332     00014db6 T I2C_T
   2918c:	3a706d65 7465673a 736c6543 28737569     emp::getCelsius(
   2919c:	30300a29 64343130 54203865 43324920     ).00014de8 T I2C
   291ac:	6d65545f 673a3a70 61467465 686e6572     _Temp::getFarenh
   291bc:	28746965 30300a29 64343130 54203439     eit().00014d94 T
   291cc:	43324920 6d65545f 693a3a70 2874696e      I2C_Temp::init(
   291dc:	30300a29 64343130 54206337 69775320     ).00014d7c T Swi
   291ec:	65686374 673a3a73 77537465 68637469     tches::getSwitch
   291fc:	756c6156 29287365 3030300a 37643431     Values().00014d7
   2920c:	20542036 74697753 73656863 6e693a3a     6 T Switches::in
   2921c:	29287469 3030300a 35636231 20542030     it().0001bc50 T 
   2922c:	44434441 65766972 613a3a72 65536364     ADCDriver::adcSe
   2923c:	7463656c 286e6950 44434441 65766972     lectPin(ADCDrive
   2924c:	413a3a72 505f4344 0a294e49 31303030     r::ADC_PIN).0001
   2925c:	30666262 41205420 72444344 72657669     bbf0 T ADCDriver
   2926c:	64613a3a 696e4963 72754274 6f4d7473     ::adcInitBurstMo
   2927c:	29286564 3030300a 66636231 20542030     de().0001bcf0 T 
   2928c:	44434441 65766972 723a3a72 41646165     ADCDriver::readA
   2929c:	6f564344 6761746c 43794265 6e6e6168     DCVoltageByChann
   292ac:	75286c65 6769736e 2064656e 72616863     el(unsigned char
   292bc:	30300a29 62623130 54206365 43444120     ).0001bbec T ADC
   292cc:	76697244 3a3a7265 44434441 65766972     Driver::ADCDrive
   292dc:	0a292872 31303030 63656262 41205420     r().0001bbec T A
   292ec:	72444344 72657669 44413a3a 69724443     DCDriver::ADCDri
   292fc:	28726576 30300a29 62343130 54203063     ver().00014bc0 T
   2930c:	5f524920 736e6553 3a3a726f 726f7473      IR_Sensor::stor
   2931c:	43724965 2865646f 69736e75 64656e67     eIrCode(unsigned
   2932c:	6e6f6c20 300a2967 34313030 20636462      long).00014bdc 
   2933c:	52492054 6e65535f 3a726f73 6365643a     T IR_Sensor::dec
   2934c:	4965646f 646f4372 0a292865 31303030     odeIrCode().0001
   2935c:	30346334 49205420 65535f52 726f736e     4c40 T IR_Sensor
   2936c:	6e693a3a 29287469 3030300a 37646231     ::init().0001bd7
   2937c:	20542063 444d5750 65766972 703a3a72     c T PWMDriver::p
   2938c:	65536d77 7463656c 286e6950 444d5750     wmSelectPin(PWMD
   2939c:	65766972 503a3a72 505f4d57 0a294e49     river::PWM_PIN).
   293ac:	31303030 38616462 50205420 72444d57     0001bda8 T PWMDr
   293bc:	72657669 65733a3a 74754474 63794379     iver::setDutyCyc
   293cc:	5028656c 72444d57 72657669 57503a3a     le(PWMDriver::PW
   293dc:	49505f4d 66202c4e 74616f6c 30300a29     M_PIN, float).00
   293ec:	65623130 54203036 4d575020 76697244     01be60 T PWMDriv
   293fc:	3a3a7265 46746573 75716572 79636e65     er::setFrequency
   2940c:	736e7528 656e6769 6f6c2064 0a29676e     (unsigned long).
   2941c:	31303030 63346462 50205420 72444d57     0001bd4c T PWMDr
   2942c:	72657669 77703a3a 6c65536d 50746365     iver::pwmSelectP
   2943c:	6f436e69 6e75286e 6e676973 63206465     inCon(unsigned c
   2944c:	29726168 3030300a 37656231 20542063     har).0001be7c T 
   2945c:	444d5750 65766972 703a3a72 6e496d77     PWMDriver::pwmIn
   2946c:	69537469 656c676e 65676445 65646f4d     itSingleEdgeMode
   2947c:	736e7528 656e6769 6f6c2064 0a29676e     (unsigned long).
   2948c:	31303030 38316562 50205420 72444d57     0001be18 T PWMDr
   2949c:	72657669 65733a3a 74754474 29283079     iver::setDuty0()
   294ac:	3030300a 34646231 20542038 444d5750     .0001bd48 T PWMD
   294bc:	65766972 503a3a72 72444d57 72657669     river::PWMDriver
   294cc:	300a2928 62313030 20383464 57502054     ().0001bd48 T PW
   294dc:	6972444d 3a726576 4d57503a 76697244     MDriver::PWMDriv
   294ec:	29287265 3030300a 32353631 20542030     er().00016520 T 
   294fc:	3a727473 6765623a 57736e69 28687469     str::beginsWith(
   2950c:	72616863 6e6f6320 292a7473 6e6f6320     char const*) con
   2951c:	300a7473 36313030 20346533 74732054     st.000163e4 T st
   2952c:	673a3a72 61437465 69636170 29287974     r::getCapacity()
   2953c:	6e6f6320 300a7473 36313030 20613035      const.0001650a 
   2954c:	74732054 663a3a72 74737269 65646e49     T str::firstInde
   2955c:	28664f78 72616863 6e6f6320 292a7473     xOf(char const*)
   2956c:	6e6f6320 300a7473 36313030 20636634      const.000164fc 
   2957c:	74732054 633a3a72 61746e6f 49736e69     T str::containsI
   2958c:	726f6e67 73614365 68632865 63207261     gnoreCase(char c
   2959c:	74736e6f 6320292a 74736e6f 3030300a     onst*) const.000
   295ac:	36343631 20542063 3a727473 6d6f633a     1646c T str::com
   295bc:	65726170 67496f54 65726f6e 65736143     pareToIgnoreCase
   295cc:	61686328 6f632072 2a74736e 6f632029     (char const*) co
   295dc:	0a74736e 31303030 65343536 73205420     nst.0001654e T s
   295ec:	3a3a7274 69676562 6957736e 67496874     tr::beginsWithIg
   295fc:	65726f6e 65736143 61686328 6f632072     noreCase(char co
   2960c:	2a74736e 6f632029 0a74736e 31303030     nst*) const.0001
   2961c:	63373436 73205420 3a3a7274 73726966     647c T str::firs
   2962c:	646e4974 664f7865 6f6e6749 61436572     tIndexOfIgnoreCa
   2963c:	63286573 20726168 736e6f63 20292a74     se(char const*) 
   2964c:	736e6f63 30300a74 35363130 54206337     const.0001657c T
   2965c:	72747320 65623a3a 736e6967 68746957      str::beginsWith
   2966c:	6c6f6857 726f5765 6e674964 4365726f     WholeWordIgnoreC
   2967c:	28657361 72616863 6e6f6320 2c2a7473     ase(char const*,
   2968c:	61686320 63202972 74736e6f 3030300a      char) const.000
   2969c:	64333631 20542065 3a727473 7465673a     163de T str::get
   296ac:	286e654c 6f632029 0a74736e 31303030     Len() const.0001
   296bc:	38353436 73205420 3a3a7274 706d6f63     6458 T str::comp
   296cc:	54657261 6863286f 63207261 74736e6f     areTo(char const
   296dc:	6320292a 74736e6f 3030300a 30373631     *) const.0001670
   296ec:	20542032 3a727473 65706f3a 6f746172     2 T str::operato
   296fc:	28292872 6f632029 0a74736e 31303030     r()() const.0001
   2970c:	36303736 73205420 3a3a7274 7265706f     6706 T str::oper
   2971c:	726f7461 746e6920 63202928 74736e6f     ator int() const
   2972c:	3030300a 66363631 20542065 3a727473     .000166fe T str:
   2973c:	65706f3a 6f746172 283d3d72 72616863     :operator==(char
   2974c:	6e6f6320 292a7473 6e6f6320 300a7473      const*) const.0
   2975c:	63313030 20633035 74732054 743a3a64     001c50c T std::t
   2976c:	5f657079 6f666e69 5f5f3a3a 705f7369     ype_info::__is_p
   2977c:	746e696f 705f7265 63202928 74736e6f     ointer_p() const
   2978c:	3030300a 30356331 20542063 3a647473     .0001c50c T std:
   2979c:	7079743a 6e695f65 3a3a6f66 73695f5f     :type_info::__is
   297ac:	6e75665f 6f697463 28705f6e 6f632029     _function_p() co
   297bc:	0a74736e 31303030 30313563 73205420     nst.0001c510 T s
   297cc:	3a3a6474 65707974 666e695f 6f3a3a6f     td::type_info::o
   297dc:	61726570 3d726f74 7473283d 743a3a64     perator==(std::t
   297ec:	5f657079 6f666e69 6e6f6320 29267473     ype_info const&)
   297fc:	6e6f6320 300a7473 63313030 20613035      const.0001c50a 
   2980c:	74732054 743a3a64 5f657079 6f666e69     T std::type_info
   2981c:	747e3a3a 5f657079 6f666e69 300a2928     ::~type_info().0
   2982c:	63313030 20613035 74732054 743a3a64     001c50a T std::t
   2983c:	5f657079 6f666e69 747e3a3a 5f657079     ype_info::~type_
   2984c:	6f666e69 300a2928 63313030 20386339     info().0001c9c8 
   2985c:	74732054 673a3a64 745f7465 696d7265     T std::get_termi
   2986c:	6574616e 300a2928 63313030 20386439     nate().0001c9d8 
   2987c:	74732054 743a3a64 696d7265 6574616e     T std::terminate
   2988c:	300a2928 64313030 20386361 62612054     ().0001dac8 T ab
   2989c:	0a74726f 31303030 63616137 61205420     ort.00017aac T a
   298ac:	5f306364 5f746567 64616572 0a676e69     dc0_get_reading.
   298bc:	31303030 38336137 61205420 5f306364     00017a38 T adc0_
   298cc:	74696e69 3030300a 37363132 20542038     init.00021678 T 
   298dc:	74637361 0a656d69 32303030 34613631     asctime.000216a4
   298ec:	61205420 69746373 725f656d 3030300a      T asctime_r.000
   298fc:	64616431 20542036 696f7461 3030300a     1dad6 T atoi.000
   2990c:	36383531 20542063 696c5f63 635f7473     1586c T c_list_c
   2991c:	74616572 30300a65 38353130 54206165     reate.000158ea T
   2992c:	6c5f6320 5f747369 646e6966 6d6c655f      c_list_find_elm
   2993c:	3030300a 31393531 20542036 696c5f63     .00015916 T c_li
   2994c:	665f7473 655f726f 5f686361 0a6d6c65     st_for_each_elm.
   2995c:	31303030 65623835 63205420 73696c5f     000158be T c_lis
   2996c:	65675f74 6c655f74 74615f6d 3030300a     t_get_elm_at.000
   2997c:	38383531 20542036 696c5f63 695f7473     15886 T c_list_i
   2998c:	7265736e 6c655f74 6e655f6d 30300a64     nsert_elm_end.00
   2999c:	38353130 54203038 6c5f6320 5f747369     015880 T c_list_
   299ac:	65646f6e 756f635f 300a746e 64313030     node_count.0001d
   299bc:	20306561 61632054 636f6c6c 3030300a     ae0 T calloc.000
   299cc:	31303231 20542030 73756c63 65733274     12010 T clust2se
   299dc:	300a7463 64313030 20306661 74632054     ct.0001daf0 T ct
   299ec:	0a656d69 31303030 65363336 64205420     ime.0001636e T d
   299fc:	79616c65 0a736d5f 31303030 34343336     elay_ms.00016344
   29a0c:	64205420 79616c65 0a73755f 31303030      T delay_us.0001
   29a1c:	34373334 64205420 5f6b7369 74696e69     4374 T disk_init
   29a2c:	696c6169 300a657a 34313030 20613134     ialize.0001441a 
   29a3c:	69642054 695f6b73 6c74636f 3030300a     T disk_ioctl.000
   29a4c:	61333431 20542061 6b736964 6165725f     143aa T disk_rea
   29a5c:	30300a64 33343130 54206139 73696420     d.0001439a T dis
   29a6c:	74735f6b 73757461 3030300a 65333431     k_status.000143e
   29a7c:	20542032 6b736964 6972775f 300a6574     2 T disk_write.0
   29a8c:	31323030 20303137 69642054 30300a76     0021710 T div.00
   29a9c:	63383130 54206334 61546520 65476b73     018c4c T eTaskGe
   29aac:	61745374 300a6574 37313030 20633939     tState.0001799c 
   29abc:	69652054 5f33746e 62616e65 705f656c     T eint3_enable_p
   29acc:	3074726f 3030300a 36303331 20542030     ort0.00013060 T 
   29adc:	6c635f66 0a65736f 31303030 36623233     f_close.000132b6
   29aec:	66205420 7465675f 65657266 3030300a      T f_getfree.000
   29afc:	38303331 20542034 736c5f66 0a6b6565     13084 T f_lseek.
   29b0c:	31303030 63333433 66205420 646b6d5f     0001343c T f_mkd
   29b1c:	300a7269 33313030 20636136 5f662054     ir.000136ac T f_
   29b2c:	73666b6d 3030300a 31623231 20542030     mkfs.00012b10 T 
   29b3c:	6f6d5f66 0a746e75 31303030 63386232     f_mount.00012b8c
   29b4c:	66205420 65706f5f 30300a6e 31333130      T f_open.000131
   29b5c:	54203264 6f5f6620 646e6570 300a7269     d2 T f_opendir.0
   29b6c:	32313030 20616263 5f662054 64616572     0012cba T f_read
   29b7c:	3030300a 35323331 20542038 65725f66     .00013258 T f_re
   29b8c:	69646461 30300a72 35333130 54206538     addir.0001358e T
   29b9c:	725f6620 6d616e65 30300a65 66323130      f_rename.00012f
   29bac:	54203664 735f6620 0a636e79 31303030     d6 T f_sync.0001
   29bbc:	65373333 66205420 6c6e755f 0a6b6e69     337e T f_unlink.
   29bcc:	31303030 61326532 66205420 6972775f     00012e2a T f_wri
   29bdc:	300a6574 64313030 20306262 63662054     te.0001dbb0 T fc
   29bec:	65736f6c 3030300a 66623331 20542063     lose.00013bfc T 
   29bfc:	635f6666 65766e6f 300a7472 33313030     ff_convert.00013
   29c0c:	20306162 66662054 6572635f 6e79735f     ba0 T ff_cre_syn
   29c1c:	6a626f63 3030300a 62623331 20542034     cobj.00013bb4 T 
   29c2c:	645f6666 735f6c65 6f636e79 300a6a62     ff_del_syncobj.0
   29c3c:	33313030 20656462 66662054 6c65725f     0013bde T ff_rel
   29c4c:	6172675f 300a746e 33313030 20386262     _grant.00013bb8 
   29c5c:	66662054 7165725f 6172675f 300a746e     T ff_req_grant.0
   29c6c:	33313030 20383363 66662054 6f74775f     0013c38 T ff_wto
   29c7c:	65707075 30300a72 64643130 54203432     upper.0001dd24 T
   29c8c:	6c666620 0a687375 31303030 63323934      fflush.0001492c
   29c9c:	66205420 6873616c 6968635f 72655f70      T flash_chip_er
   29cac:	0a657361 31303030 30313834 66205420     ase.00014810 T f
   29cbc:	6873616c 7465675f 6761705f 6f635f65     lash_get_page_co
   29ccc:	0a746e75 31303030 30333834 66205420     unt.00014830 T f
   29cdc:	6873616c 7465675f 6761705f 69735f65     lash_get_page_si
   29cec:	300a657a 34313030 20386438 6c662054     ze.000148d8 T fl
   29cfc:	5f687361 5f746567 65676170 6972775f     ash_get_page_wri
   29d0c:	635f6574 746e756f 3030300a 33363431     te_count.0001463
   29d1c:	20542038 73616c66 6e695f68 61697469     8 T flash_initia
   29d2c:	657a696c 3030300a 36373431 20542063     lize.0001476c T 
   29d3c:	73616c66 6f695f68 0a6c7463 31303030     flash_ioctl.0001
   29d4c:	38653734 66205420 6873616c 6165725f     47e8 T flash_rea
   29d5c:	65705f64 6e616d72 5f746e65 300a6469     d_permanent_id.0
   29d6c:	34313030 20306436 6c662054 5f687361     00146d0 T flash_
   29d7c:	64616572 6365735f 73726f74 3030300a     read_sectors.000
   29d8c:	33383431 20542063 73616c66 75735f68     1483c T flash_su
   29d9c:	726f7070 6d5f7374 64617465 0a617461     pports_metadata.
   29dac:	31303030 34613734 66205420 6873616c     000147a4 T flash
   29dbc:	6972775f 705f6574 616d7265 746e656e     _write_permanent
   29dcc:	0a64695f 31303030 30323734 66205420     _id.00014720 T f
   29ddc:	6873616c 6972775f 735f6574 6f746365     lash_write_secto
   29dec:	300a7372 64313030 20343266 6f662054     rs.0001df24 T fo
   29dfc:	0a6e6570 31303030 34623465 66205420     pen.0001e4b4 T f
   29e0c:	0a656572 31303030 38363165 66205420     ree.0001e168 T f
   29e1c:	74697277 30300a65 30303130 54203030     write.00010000 T
   29e2c:	705f6720 65566e66 726f7463 30300a73      g_pfnVectors.00
   29e3c:	30323130 54203632 74656720 7461665f     012026 T get_fat
   29e4c:	3030300a 35393431 20542038 5f746567     .00014958 T get_
   29e5c:	74746166 0a656d69 32303030 30386232     fattime.00022b80
   29e6c:	67205420 6d69746d 0a725f65 31303030      T gmtime_r.0001
   29e7c:	34633866 69205420 6e697270 300a6674     f8c4 T iprintf.0
   29e8c:	36313030 20303633 73692054 6572665f     0016360 T is_fre
   29e9c:	6f747265 75725f73 6e696e6e 30300a67     ertos_running.00
   29eac:	62663130 54206364 63736920 0a666e61     01fbdc T iscanf.
   29ebc:	31303030 38343130 69205420 645f7273     00010148 T isr_d
   29ecc:	75616665 685f746c 6c646e61 300a7265     efault_handler.0
   29edc:	30313030 20303236 73692054 61685f72     0010620 T isr_ha
   29eec:	665f6472 746c7561 6e61685f 72656c64     rd_fault_handler
   29efc:	3030300a 31363031 20542030 5f727369     .00010610 T isr_
   29f0c:	69676572 72657473 3030300a 39313031     register.0001019
   29f1c:	20542034 5f727369 65736572 30300a74     4 T isr_reset.00
   29f2c:	31653130 54206363 636f6c20 69746c61     01e1cc T localti
   29f3c:	300a656d 65313030 20306631 6f6c2054     me.0001e1f0 T lo
   29f4c:	746c6163 5f656d69 30300a72 66353130     caltime_r.00015f
   29f5c:	54206333 676f6c20 5f726567 5f746567     3c T logger_get_
   29f6c:	636f6c62 5f64656b 6c6c6163 756f635f     blocked_call_cou
   29f7c:	300a746e 35313030 20383466 6f6c2054     nt.00015f48 T lo
   29f8c:	72656767 7465675f 6769685f 74736568     gger_get_highest
   29f9c:	6c69665f 72775f65 5f657469 656d6974     _file_write_time
   29fac:	0a736d5f 31303030 38326635 6c205420     _ms.00015f28 T l
   29fbc:	6567676f 65675f72 6f6c5f74 64656767     ogger_get_logged
   29fcc:	6c61635f 6f635f6c 0a746e75 31303030     _call_count.0001
   29fdc:	34356635 6c205420 6567676f 65675f72     5f54 T logger_ge
   29fec:	756e5f74 75625f6d 72656666 61775f73     t_num_buffers_wa
   29ffc:	6d726574 0a6b7261 31303030 30366635     termark.00015f60
   2a00c:	6c205420 6567676f 6e695f72 300a7469      T logger_init.0
   2a01c:	36313030 20383430 6f6c2054 72656767     0016048 T logger
   2a02c:	676f6c5f 3030300a 38313631 20542030     _log.00016180 T 
   2a03c:	67676f6c 6c5f7265 725f676f 300a7761     logger_log_raw.0
   2a04c:	35313030 20346665 6f6c2054 72656767     0015ef4 T logger
   2a05c:	6e65735f 6c665f64 5f687375 75716572     _send_flush_requ
   2a06c:	0a747365 31303030 63323036 6c205420     est.0001602c T l
   2a07c:	6567676f 65735f72 72705f74 66746e69     ogger_set_printf
   2a08c:	3030300a 35393031 20542030 5f63706c     .00010950 T lpc_
   2a09c:	6b6c6370 3030300a 31393031 20542063     pclk.0001091c T 
   2a0ac:	5f63706c 6e6f6370 30300a70 34303130     lpc_pconp.000104
   2a0bc:	54203834 63706c20 7379735f 7465735f     48 T lpc_sys_set
   2a0cc:	735f7075 65747379 69745f6d 0a72656d     up_system_timer.
   2a0dc:	31303030 34316637 6c205420 745f6370     00017f14 T lpc_t
   2a0ec:	72656d69 616e655f 0a656c62 31303030     imer_enable.0001
   2a0fc:	34343263 6d205420 0a6e6961 31303030     c244 T main.0001
   2a10c:	34336165 6d205420 696c6c61 0a6f666e     ea34 T mallinfo.
   2a11c:	31303030 34613465 6d205420 6f6c6c61     0001e4a4 T mallo
   2a12c:	30300a63 34653130 54203865 6d656d20     c.0001e4e8 T mem
   2a13c:	0a726863 31303030 34303565 6d205420     chr.0001e504 T m
   2a14c:	6d636d65 30300a70 35653130 54203232     emcmp.0001e522 T
   2a15c:	6d656d20 0a797063 31303030 38333565      memcpy.0001e538
   2a16c:	6d205420 6f6d6d65 300a6576 65313030      T memmove.0001e
   2a17c:	20633635 656d2054 7465736d 3030300a     56c T memset.000
   2a18c:	63343131 20542063 6873656d 726f665f     114cc T mesh_for
   2a19c:	6b705f6d 30300a74 61313130 54203063     m_pkt.00011ac0 T
   2a1ac:	73656d20 65675f68 616d5f74 69745f78      mesh_get_max_ti
   2a1bc:	756f656d 65625f74 65726f66 6361705f     meout_before_pac
   2a1cc:	5f74656b 6c696166 30300a73 34313130     ket_fails.000114
   2a1dc:	54203062 73656d20 65675f68 6f6e5f74     b0 T mesh_get_no
   2a1ec:	615f6564 65726464 300a7373 31313030     de_address.00011
   2a1fc:	20306137 656d2054 675f6873 6e5f7465     7a0 T mesh_get_n
   2a20c:	725f6d75 6974756f 655f676e 6972746e     um_routing_entri
   2a21c:	300a7365 31313030 20633861 656d2054     es.00011a8c T me
   2a22c:	675f6873 705f7465 705f646e 635f746b     sh_get_pnd_pkt_c
   2a23c:	746e756f 3030300a 37373131 20542034     ount.00011774 T 
   2a24c:	6873656d 7465675f 756f725f 676e6974     mesh_get_routing
   2a25c:	746e655f 300a7972 31313030 20346561     _entry.00011ae4 
   2a26c:	656d2054 675f6873 735f7465 73746174     T mesh_get_stats
   2a27c:	3030300a 31363131 20542063 6873656d     .0001161c T mesh
   2a28c:	696e695f 30300a74 37313130 54206331     _init.0001171c T
   2a29c:	73656d20 65735f68 300a646e 31313030      mesh_send.00011
   2a2ac:	20346335 656d2054 735f6873 5f646e65     5c4 T mesh_send_
   2a2bc:	6d726f66 705f6465 300a746b 31313030     formed_pkt.00011
   2a2cc:	20636237 656d2054 735f6873 69767265     7bc T mesh_servi
   2a2dc:	300a6563 31313030 20383934 656d2054     ce.00011498 T me
   2a2ec:	735f6873 6e5f7465 5f65646f 72646461     sh_set_node_addr
   2a2fc:	0a737365 31303030 63623431 6d205420     ess.000114bc T m
   2a30c:	5f687365 5f746573 72746572 6f635f79     esh_set_retry_co
   2a31c:	0a746e75 31303030 63333765 6d205420     unt.0001e73c T m
   2a32c:	6d69746b 30300a65 64663130 54203836     ktime.0001fd68 T
   2a33c:	6e616e20 30300a66 61303130 54206363      nanf.00010acc T
   2a34c:	726f6e20 5f636964 61656c63 6c615f72      nordic_clear_al
   2a35c:	6e695f6c 665f7274 7367616c 3030300a     l_intr_flags.000
   2a36c:	39623031 20542063 64726f6e 635f6369     10b9c T nordic_c
   2a37c:	7261656c 6361705f 5f74656b 69617661     lear_packet_avai
   2a38c:	6c62616c 6c665f65 300a6761 30313030     lable_flag.00010
   2a39c:	20633262 6f6e2054 63696472 656c635f     b2c T nordic_cle
   2a3ac:	705f7261 656b6361 65735f74 665f746e     ar_packet_sent_f
   2a3bc:	0a67616c 31303030 38626230 6e205420     lag.00010bb8 T n
   2a3cc:	6964726f 6c665f63 5f687375 665f7872     ordic_flush_rx_f
   2a3dc:	0a6f6669 31303030 34336230 6e205420     ifo.00010b34 T n
   2a3ec:	6964726f 6c665f63 5f687375 665f7874     ordic_flush_tx_f
   2a3fc:	0a6f6669 31303030 63346430 6e205420     ifo.00010d4c T n
   2a40c:	6964726f 6e695f63 300a7469 30313030     ordic_init.00010
   2a41c:	20633862 6f6e2054 63696472 5f73695f     b8c T nordic_is_
   2a42c:	6b636170 615f7465 6c696176 656c6261     packet_available
   2a43c:	3030300a 62613031 20542065 64726f6e     .00010abe T nord
   2a44c:	695f6369 78745f73 6669665f 6d655f6f     ic_is_tx_fifo_em
   2a45c:	0a797470 31303030 30346230 6e205420     pty.00010b40 T n
   2a46c:	6964726f 6f6d5f63 5f316564 646e6573     ordic_mode1_send
   2a47c:	6e69735f 5f656c67 6b636170 300a7465     _single_packet.0
   2a48c:	30313030 20323563 6f6e2054 63696472     0010c52 T nordic
   2a49c:	776f705f 645f7265 0a6e776f 31303030     _power_down.0001
   2a4ac:	61336330 6e205420 6964726f 6f705f63     0c3a T nordic_po
   2a4bc:	5f726577 300a7075 30313030 20346461     wer_up.00010ad4 
   2a4cc:	6f6e2054 63696472 6575715f 745f6575     T nordic_queue_t
   2a4dc:	69665f78 300a6f66 30313030 20346162     x_fifo.00010ba4 
   2a4ec:	6f6e2054 63696472 6165725f 78725f64     T nordic_read_rx
   2a4fc:	6669665f 30300a6f 61303130 54203866     _fifo.00010af8 T
   2a50c:	726f6e20 5f636964 745f7872 74535f6f      nordic_rx_to_St
   2a51c:	79626e61 30300a31 64303130 54206331     anby1.00010d1c T
   2a52c:	726f6e20 5f636964 5f746573 72646461      nordic_set_addr
   2a53c:	6469775f 300a6874 30313030 20633863     _width.00010c8c 
   2a54c:	6f6e2054 63696472 7465735f 7269615f     T nordic_set_air
   2a55c:	7461645f 61725f61 300a6574 30313030     _data_rate.00010
   2a56c:	20636463 6f6e2054 63696472 7465735f     cdc T nordic_set
   2a57c:	7475615f 72745f6f 6d736e61 6f5f7469     _auto_transmit_o
   2a58c:	6f697470 300a736e 30313030 20383663     ptions.00010c68 
   2a59c:	6f6e2054 63696472 7465735f 6168635f     T nordic_set_cha
   2a5ac:	6c656e6e 3030300a 30633031 20542032     nnel.00010c02 T 
   2a5bc:	64726f6e 735f6369 635f7465 300a6372     nordic_set_crc.0
   2a5cc:	30313030 20346362 6f6e2054 63696472     0010bc4 T nordic
   2a5dc:	7465735f 746e695f 69735f72 6c616e67     _set_intr_signal
   2a5ec:	30300a73 64303130 54203830 726f6e20     s.00010d08 T nor
   2a5fc:	5f636964 5f746573 6c796170 5f64616f     dic_set_payload_
   2a60c:	5f726f66 65706970 3030300a 62633031     for_pipe.00010cb
   2a61c:	20542038 64726f6e 735f6369 705f7465     8 T nordic_set_p
   2a62c:	7265776f 76656c5f 300a6c65 30313030     ower_level.00010
   2a63c:	20653364 6f6e2054 63696472 7465735f     d3e T nordic_set
   2a64c:	5f78725f 65706970 64615f30 300a7264     _rx_pipe0_addr.0
   2a65c:	30313030 20323364 6f6e2054 63696472     0010d32 T nordic
   2a66c:	7465735f 5f78745f 72646461 0a737365     _set_tx_address.
   2a67c:	31303030 38306230 6e205420 6964726f     00010b08 T nordi
   2a68c:	74735f63 62646e61 745f3179 78725f6f     c_standby1_to_rx
   2a69c:	3030300a 65613031 20542030 64726f6e     .00010ae0 T nord
   2a6ac:	735f6369 646e6174 5f317962 745f6f74     ic_standby1_to_t
   2a6bc:	6f6d5f78 0a316564 31303030 34656333     x_mode1.00013ce4
   2a6cc:	70205420 7265776f 66666f5f 3030300a      T power_off.000
   2a6dc:	63386631 20542034 6e697270 300a6674     1f8c4 T printf.0
   2a6ec:	32313030 20633431 75702054 61665f74     001214c T put_fa
   2a6fc:	30300a74 39663130 54206361 74757020     t.0001f9ac T put
   2a70c:	30300a73 33383130 54203033 50767020     s.00018330 T pvP
   2a71c:	4d74726f 6f6c6c61 30300a63 33393130     ortMalloc.000193
   2a72c:	54203839 54767020 496b7361 6572636e     98 T pvTaskIncre
   2a73c:	746e656d 6574754d 6c654878 756f4364     mentMutexHeldCou
   2a74c:	300a746e 38313030 20633531 78702054     nt.0001815c T px
   2a75c:	74726f50 74696e49 696c6169 74536573     PortInitialiseSt
   2a76c:	0a6b6361 31303030 30636466 72205420     ack.0001fdc0 T r
   2a77c:	65736961 3030300a 30616631 20542063     aise.0001fa0c T 
   2a78c:	646e6172 3030300a 30643331 20542038     rand.00013d08 T 
   2a79c:	72766372 7461645f 6f6c6261 300a6b63     rcvr_datablock.0
   2a7ac:	66313030 20303861 65722054 6f6c6c61     001fa80 T reallo
   2a7bc:	30300a63 38373130 54203461 63747220     c.000178a4 T rtc
   2a7cc:	7465675f 7461645f 69745f65 735f656d     _get_date_time_s
   2a7dc:	300a7274 37313030 20343237 74722054     tr.00017724 T rt
   2a7ec:	65675f63 6d697474 30300a65 37373130     c_gettime.000177
   2a7fc:	54203464 63747220 696e695f 30300a74     d4 T rtc_init.00
   2a80c:	37373130 54206336 63747220 7465735f     01776c T rtc_set
   2a81c:	656d6974 3030300a 61323831 20542038     time.000182a8 T 
   2a82c:	5f737472 5f746f6e 6c6c7566 6172745f     rts_not_full_tra
   2a83c:	675f6563 300a7465 38313030 20343932     ce_get.00018294 
   2a84c:	74722054 6f6e5f73 75665f74 745f6c6c     T rts_not_full_t
   2a85c:	65636172 696e695f 30300a74 32383130     race_init.000182
   2a86c:	54206362 73747220 746f6e5f 6c75665f     bc T rts_not_ful
   2a87c:	72745f6c 5f656361 65736572 30300a74     l_trace_reset.00
   2a88c:	62663130 54206364 61637320 300a666e     01fbdc T scanf.0
   2a89c:	33313030 20303965 64732054 696e695f     0013e90 T sd_ini
   2a8ac:	6c616974 0a657a69 31303030 38353134     tialize.00014158
   2a8bc:	73205420 6f695f64 0a6c7463 31303030      T sd_ioctl.0001
   2a8cc:	63303034 73205420 65725f64 300a6461     400c T sd_read.0
   2a8dc:	33313030 20636666 64732054 6174735f     0013ffc T sd_sta
   2a8ec:	0a737574 31303030 63366533 73205420     tus.00013e6c T s
   2a8fc:	70755f64 65746164 7261635f 74735f64     d_update_card_st
   2a90c:	73757461 3030300a 61303431 20542034     atus.000140a4 T 
   2a91c:	775f6473 65746972 3030300a 65643331     sd_write.00013de
   2a92c:	20542030 646e6573 646d635f 3030300a     0 T send_cmd.000
   2a93c:	30636631 20542063 76746573 0a667562     1fc0c T setvbuf.
   2a94c:	31303030 30366566 73205420 69727069     0001fe60 T sipri
   2a95c:	0a66746e 31303030 38616566 73205420     ntf.0001fea8 T s
   2a96c:	61637369 300a666e 66313030 20386664     iscanf.0001fdf8 
   2a97c:	6e732054 69727069 0a66746e 31303030     T sniprintf.0001
   2a98c:	38666466 73205420 6972706e 0a66746e     fdf8 T snprintf.
   2a99c:	31303030 30616537 73205420 5f316970     00017ea0 T spi1_
   2a9ac:	6b636f6c 3030300a 64653731 20542030     lock.00017ed0 T 
   2a9bc:	31697073 6c6e755f 0a6b636f 31303030     spi1_unlock.0001
   2a9cc:	30366566 73205420 6e697270 300a6674     fe60 T sprintf.0
   2a9dc:	66313030 20636239 72732054 0a646e61     001f9bc T srand.
   2a9ec:	31303030 38616566 73205420 6e616373     0001fea8 T sscan
   2a9fc:	30300a66 64373130 54203463 70737320     f.00017dc4 T ssp
   2aa0c:	6d645f31 6e695f61 300a7469 37313030     1_dma_init.00017
   2aa1c:	20306564 73732054 645f3170 745f616d     de0 T ssp1_dma_t
   2aa2c:	736e6172 5f726566 636f6c62 30300a6b     ransfer_block.00
   2aa3c:	66663130 54203638 72747320 65736163     01ff86 T strcase
   2aa4c:	0a706d63 31303030 32636666 73205420     cmp.0001ffc2 T s
   2aa5c:	61637274 30300a74 66663130 54203065     trcat.0001ffe0 T
   2aa6c:	72747320 0a726863 31303030 63666666      strchr.0001fffc
   2aa7c:	73205420 6d637274 30300a70 30303230      T strcmp.000200
   2aa8c:	54203031 72747320 0a797063 32303030     10 T strcpy.0002
   2aa9c:	30323030 73205420 656c7274 30300a6e     0020 T strlen.00
   2aaac:	30303230 54203033 72747320 7361636e     020030 T strncas
   2aabc:	706d6365 3030300a 37303032 20542065     ecmp.0002007e T 
   2aacc:	6e727473 0a706d63 32303030 32613030     strncmp.000200a2
   2aadc:	73205420 636e7274 300a7970 30323030      T strncpy.00020
   2aaec:	20636330 74732054 68637272 30300a72     0cc T strrchr.00
   2aafc:	30303230 54203266 72747320 0a727473     0200f2 T strstr.
   2ab0c:	32303030 32646430 73205420 6f747274     00020dd2 T strto
   2ab1c:	0a725f6b 32303030 63666530 73205420     k_r.00020efc T s
   2ab2c:	6f747274 30300a6c 34343230 54203466     trtol.000244f4 T
   2ab3c:	72747320 6c756f74 3030300a 30323031      strtoul.0001020
   2ab4c:	20542063 5f737973 5f746567 746f6f62     c T sys_get_boot
   2ab5c:	6d69745f 30300a65 32303130 54203030     _time.00010200 T
   2ab6c:	73797320 7465675f 6f6f625f 79745f74      sys_get_boot_ty
   2ab7c:	300a6570 30313030 20386237 79732054     pe.000107b8 T sy
   2ab8c:	65675f73 70635f74 6c635f75 0a6b636f     s_get_cpu_clock.
   2ab9c:	31303030 34663836 73205420 675f7379     000168f4 T sys_g
   2abac:	6d5f7465 695f6d65 0a6f666e 31303030     et_mem_info.0001
   2abbc:	38633430 73205420 675f7379 6d5f7465     04c8 T sys_get_m
   2abcc:	695f6d65 5f6f666e 0a727473 31303030     em_info_str.0001
   2abdc:	63393430 73205420 675f7379 755f7465     049c T sys_get_u
   2abec:	6d697470 73755f65 3030300a 30623631     ptime_us.00016b0
   2abfc:	20542030 5f737973 5f746573 68636e69     0 T sys_set_inch
   2ac0c:	665f7261 0a636e75 31303030 34666136     ar_func.00016af4
   2ac1c:	73205420 735f7379 6f5f7465 68637475      T sys_set_outch
   2ac2c:	665f7261 0a636e75 31303030 34336236     ar_func.00016b34
   2ac3c:	73205420 61637379 5f736c6c 74696e69      T syscalls_init
   2ac4c:	3030300a 32663032 20542038 656d6974     .00020f28 T time
   2ac5c:	3030300a 35383531 20542030 5f6d6c74     .00015850 T tlm_
   2ac6c:	616e6962 635f7972 61706d6f 6f5f6572     binary_compare_o
   2ac7c:	300a656e 35313030 20363338 6c742054     ne.00015836 T tl
   2ac8c:	69625f6d 7972616e 7465675f 656e6f5f     m_binary_get_one
   2ac9c:	3030300a 32383531 20542030 5f6d6c74     .00015820 T tlm_
   2acac:	616e6962 675f7972 735f7465 5f657a69     binary_get_size_
   2acbc:	0a656e6f 31303030 38666634 74205420     one.00014ff8 T t
   2accc:	635f6d6c 6f706d6f 746e656e 6464615f     lm_component_add
   2acdc:	3030300a 36303531 20542034 5f6d6c74     .00015064 T tlm_
   2acec:	706d6f63 6e656e6f 6f665f74 61655f72     component_for_ea
   2acfc:	300a6863 34313030 20346466 6c742054     ch.00014fd4 T tl
   2ad0c:	6f635f6d 6e6f706d 5f746e65 5f746567     m_component_get_
   2ad1c:	6e5f7962 0a656d61 31303030 34386634     by_name.00014f84
   2ad2c:	74205420 735f6d6c 61657274 6c615f6d      T tlm_stream_al
   2ad3c:	30300a6c 65343130 54203866 6d6c7420     l.00014ef8 T tlm
   2ad4c:	7274735f 5f6d6165 0a656e6f 31303030     _stream_one.0001
   2ad5c:	30616634 74205420 735f6d6c 61657274     4fa0 T tlm_strea
   2ad6c:	6e6f5f6d 69665f65 300a656c 35313030     m_one_file.00015
   2ad7c:	20383331 6c742054 61765f6d 62616972     138 T tlm_variab
   2ad8c:	675f656c 625f7465 6f635f79 615f706d     le_get_by_comp_a
   2ad9c:	6e5f646e 0a656d61 31303030 34363735     nd_name.00015764
   2adac:	74205420 765f6d6c 61697261 5f656c62      T tlm_variable_
   2adbc:	5f746567 756c6176 30300a65 33353130     get_value.000153
   2adcc:	54203435 6d6c7420 7261765f 6c626169     54 T tlm_variabl
   2addc:	72705f65 5f746e69 756c6176 30300a65     e_print_value.00
   2adec:	30353130 54206362 6d6c7420 7261765f     0150bc T tlm_var
   2adfc:	6c626169 65725f65 74736967 300a7265     iable_register.0
   2ae0c:	35313030 20383631 6c742054 61765f6d     0015168 T tlm_va
   2ae1c:	62616972 735f656c 765f7465 65756c61     riable_set_value
   2ae2c:	3030300a 35663032 20542030 6f6c6f74     .00020f50 T tolo
   2ae3c:	0a726577 32303030 61366630 74205420     wer.00020f6a T t
   2ae4c:	7070756f 300a7265 36313030 20656431     oupper.000161de 
   2ae5c:	30752054 6762645f 6972705f 0a66746e     T u0_dbg_printf.
   2ae6c:	31303030 30633136 75205420 62645f30     000161c0 T u0_db
   2ae7c:	75705f67 30300a74 38303130 54203063     g_put.000108c0 T
   2ae8c:	72617520 675f3074 68637465 300a7261      uart0_getchar.0
   2ae9c:	30313030 20303638 61752054 5f307472     0010860 T uart0_
   2aeac:	74696e69 3030300a 64383031 20542038     init.000108d8 T 
   2aebc:	74726175 75705f30 61686374 30300a72     uart0_putchar.00
   2aecc:	38303130 54203066 72617520 705f3074     0108f0 T uart0_p
   2aedc:	0a737475 31303030 61633338 75205420     uts.000183ca T u
   2aeec:	73694c78 6d655274 0a65766f 31303030     xListRemove.0001
   2aefc:	63383938 75205420 65755178 654d6575     898c T uxQueueMe
   2af0c:	67617373 61577365 6e697469 30300a67     ssagesWaiting.00
   2af1c:	39383130 54206539 51787520 65756575     01899e T uxQueue
   2af2c:	7373654d 73656761 74696157 46676e69     MessagesWaitingF
   2af3c:	496d6f72 300a5253 38313030 20633264     romISR.00018d2c 
   2af4c:	78752054 6b736154 4e746547 65626d75     T uxTaskGetNumbe
   2af5c:	54664f72 736b7361 3030300a 65313931     rOfTasks.000191e
   2af6c:	20542030 61547875 65476b73 73795374     0 T uxTaskGetSys
   2af7c:	536d6574 65746174 3030300a 64323831     temState.000182d
   2af8c:	20542030 70704176 6163696c 6e6f6974     0 T vApplication
   2af9c:	656c6449 6b6f6f48 3030300a 30333831     IdleHook.0001830
   2afac:	20542063 70704176 6163696c 6e6f6974     c T vApplication
   2afbc:	6c6c614d 6146636f 64656c69 6b6f6f48     MallocFailedHook
   2afcc:	3030300a 64323831 20542034 70704176     .000182d4 T vApp
   2afdc:	6163696c 6e6f6974 63617453 65764f6b     licationStackOve
   2afec:	6f6c6672 6f6f4877 30300a6b 33383130     rflowHook.000183
   2affc:	54203836 694c7620 6e497473 61697469     68 T vListInitia
   2b00c:	6573696c 3030300a 37333831 20542065     lise.0001837e T 
   2b01c:	73694c76 696e4974 6c616974 49657369     vListInitialiseI
   2b02c:	0a6d6574 31303030 63393338 76205420     tem.0001839c T v
   2b03c:	7473694c 65736e49 300a7472 38313030     ListInsert.00018
   2b04c:	20343833 4c762054 49747369 7265736e     384 T vListInser
   2b05c:	646e4574 3030300a 61313831 20542034     tEnd.000181a4 T 
   2b06c:	726f5076 746e4574 72437265 63697469     vPortEnterCritic
   2b07c:	300a6c61 38313030 20346331 50762054     al.000181c4 T vP
   2b08c:	4574726f 43746978 69746972 0a6c6163     ortExitCritical.
   2b09c:	31303030 65343338 76205420 74726f50     0001834e T vPort
   2b0ac:	65657246 3030300a 38313831 20542030     Free.00018180 T 
   2b0bc:	726f5076 43565374 646e6148 0a72656c     vPortSVCHandler.
   2b0cc:	31303030 38313439 76205420 546e7552     00019418 T vRunT
   2b0dc:	53656d69 49746174 6e457273 0a797274     imeStatIsrEntry.
   2b0ec:	31303030 30343439 76205420 546e7552     00019440 T vRunT
   2b0fc:	53656d69 49746174 78457273 300a7469     imeStatIsrExit.0
   2b10c:	38313030 20633166 54762054 446b7361     0018f1c T vTaskD
   2b11c:	79616c65 3030300a 30313931 20542034     elay.00019104 T 
   2b12c:	73615476 7465476b 6f666e49 3030300a     vTaskGetInfo.000
   2b13c:	66303931 20542038 73615476 73694d6b     190f8 T vTaskMis
   2b14c:	59646573 646c6569 3030300a 30303931     sedYield.0001900
   2b15c:	20542034 73615476 616c506b 6e4f6563     4 T vTaskPlaceOn
   2b16c:	6e657645 73694c74 30300a74 32393130     EventList.000192
   2b17c:	54203839 61547620 72506b73 69726f69     98 T vTaskPriori
   2b18c:	6e497974 69726568 30300a74 33393130     tyInherit.000193
   2b19c:	54203062 61547620 65526b73 52746573     b0 T vTaskResetR
   2b1ac:	69546e75 7453656d 0a737461 31303030     unTimeStats.0001
   2b1bc:	34393039 76205420 6b736154 54746553     9094 T vTaskSetT
   2b1cc:	4f656d69 74537475 0a657461 31303030     imeOutState.0001
   2b1dc:	30616338 76205420 6b736154 72617453     8ca0 T vTaskStar
   2b1ec:	68635374 6c756465 300a7265 38313030     tScheduler.00018
   2b1fc:	20343064 54762054 536b7361 65707375     d04 T vTaskSuspe
   2b20c:	6c41646e 30300a6c 66383130 54206334     ndAll.00018f4c T
   2b21c:	61547620 77536b73 68637469 746e6f43      vTaskSwitchCont
   2b22c:	0a747865 32303030 34613431 76205420     ext.000214a4 T v
   2b23c:	63736973 0a666e61 32303030 30343431     siscanf.00021440
   2b24c:	76205420 70696e73 746e6972 30300a66      T vsniprintf.00
   2b25c:	34313230 54203034 6e737620 6e697270     021440 T vsnprin
   2b26c:	300a6674 31323030 20346134 73762054     tf.000214a4 T vs
   2b27c:	6e616373 30300a66 63333130 54203462     scanf.00013cb4 T
   2b28c:	69617720 65725f74 0a796461 31303030      wait_ready.0001
   2b29c:	63363031 77205420 6c657269 5f737365     106c T wireless_
   2b2ac:	5f746567 5f6b6361 0a746b70 31303030     get_ack_pkt.0001
   2b2bc:	63353031 77205420 6c657269 5f737365     105c T wireless_
   2b2cc:	5f746567 705f7872 300a746b 31313030     get_rx_pkt.00011
   2b2dc:	20303130 69772054 656c6572 695f7373     010 T wireless_i
   2b2ec:	0a74696e 31303030 63373031 77205420     nit.0001107c T w
   2b2fc:	6c657269 5f737365 76726573 0a656369     ireless_service.
   2b30c:	31303030 30653138 78205420 74726f50     000181e0 T xPort
   2b31c:	646e6550 61485653 656c646e 30300a72     PendSVHandler.00
   2b32c:	32383130 54203436 6f507820 74537472     018264 T xPortSt
   2b33c:	53747261 64656863 72656c75 3030300a     artScheduler.000
   2b34c:	32323831 20542034 726f5078 73795374     18224 T xPortSys
   2b35c:	6b636954 646e6148 0a72656c 31303030     TickHandler.0001
   2b36c:	34653638 78205420 75657551 65724365     86e4 T xQueueCre
   2b37c:	4d657461 78657475 3030300a 61353831     ateMutex.000185a
   2b38c:	20542063 65755178 65476575 6972656e     c T xQueueGeneri
   2b39c:	65724363 0a657461 31303030 30663738     cCreate.000187f0
   2b3ac:	78205420 75657551 6e654765 63697265      T xQueueGeneric
   2b3bc:	65636552 0a657669 31303030 30343538     Receive.00018540
   2b3cc:	78205420 75657551 6e654765 63697265      T xQueueGeneric
   2b3dc:	65736552 30300a74 35383130 54203065     Reset.000185e0 T
   2b3ec:	75517820 47657565 72656e65 65536369      xQueueGenericSe
   2b3fc:	300a646e 38313030 20383037 51782054     nd.00018708 T xQ
   2b40c:	65756575 656e6547 53636972 46646e65     ueueGenericSendF
   2b41c:	496d6f72 300a5253 38313030 20383837     romISR.00018788 
   2b42c:	51782054 65756575 65766947 6d6f7246     T xQueueGiveFrom
   2b43c:	0a525349 31303030 34323938 78205420     ISR.00018924 T x
   2b44c:	75657551 63655265 65766965 6d6f7246     QueueReceiveFrom
   2b45c:	0a525349 31303030 63613039 78205420     ISR.000190ac T x
   2b46c:	6b736154 63656843 726f466b 656d6954     TaskCheckForTime
   2b47c:	0a74754f 31303030 38616138 78205420     Out.00018aa8 T x
   2b48c:	6b736154 61657243 300a6574 39313030     TaskCreate.00019
   2b49c:	20383732 54782054 476b7361 63537465     278 T xTaskGetSc
   2b4ac:	75646568 5372656c 65746174 3030300a     hedulerState.000
   2b4bc:	31643831 20542034 73615478 7465476b     18d14 T xTaskGet
   2b4cc:	6b636954 6e756f43 30300a74 64383130     TickCount.00018d
   2b4dc:	54203032 61547820 65476b73 63695474     20 T xTaskGetTic
   2b4ec:	756f436b 7246746e 53496d6f 30300a52     kCountFromISR.00
   2b4fc:	64383130 54203833 61547820 6e496b73     018d38 T xTaskIn
   2b50c:	6d657263 54746e65 0a6b6369 31303030     crementTick.0001
   2b51c:	38323339 78205420 6b736154 6f697250     9328 T xTaskPrio
   2b52c:	79746972 69736944 7265686e 300a7469     rityDisinherit.0
   2b53c:	39313030 20343230 54782054 526b7361     0019024 T xTaskR
   2b54c:	766f6d65 6f724665 6576456d 694c746e     emoveFromEventLi
   2b55c:	300a7473 38313030 20343465 54782054     st.00018e44 T xT
   2b56c:	526b7361 6d757365 6c6c4165 3030300a     askResumeAll.000
   2b57c:	39643331 20542034 74696d78 7461645f     13d94 T xmit_dat
   2b58c:	6f6c6261 000a6b63                       ablock..
