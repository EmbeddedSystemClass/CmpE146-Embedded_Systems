
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x0002bc68 vaddr 0x0002bc68 paddr 0x0002bc68 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x0001bc70 memsz 0x0001bc70 flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x0002bc70 align 2**16
         filesz 0x000002fc memsz 0x000002fc flags rw-
    LOAD off    0x0002c300 vaddr 0x2007c300 paddr 0x0002bf6c align 2**16
         filesz 0x00000000 memsz 0x000005f0 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         0001bc68  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002fc  2007c000  0002bc70  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000005f0  2007c300  0002bf6c  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  0002bc68  0002bc68  0002bc68  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   000641d9  00000000  00000000  0002c2fc  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000fab0  00000000  00000000  000904d5  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001f58  00000000  00000000  0009ff85  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0001842c  00000000  00000000  000a1edd  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000eff3  00000000  00000000  000ba309  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  000c92fc  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  000c937b  2**0  CONTENTS, READONLY
 11 .debug_loc    0001b3c2  00000000  00000000  000c93ac  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00003670  00000000  00000000  000e476e  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00008208  00000000  00000000  000e7de0  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
0002bc68 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
000105d4 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
00010678 l     F .text	00000014 sys_clock_pll0_feed()
0001068c l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00010998 l     F .text	000000e8 nordic_transfer
00010a80 l     F .text	00000020 nordic_readRegister
00010aa0 l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00010e14 l     F .text	00000070 nrf_driver_init
00010f2c l     F .text	00000034 nrf_irq_callback
00010e84 l     F .text	00000050 nrf_driver_app_recv
00010ed4 l     F .text	00000058 nrf_driver_send
00010f60 l     F .text	00000022 nrf_driver_receive
00010f82 l     F .text	00000066 wireless_get_queued_pkt
00010fe8 l     F .text	00000028 nrf_driver_get_timer
2007c31c l     O .bss	00000004 g_ack_queue
2007c320 l     O .bss	00000004 g_nrf_activity_sem
2007c324 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 mesh.c
000110c8 l     F .text	00000026 mesh_incr_soft_timers_for_arr
000110f0 l     F .text	0000004c mesh_update_soft_timers
0001113c l     F .text	0000003c mesh_send_packet
00011178 l     F .text	00000034 mesh_send_retry_packet
000111ac l     F .text	00000024 mesh_find_rte_tbl_entry
000111d0 l     F .text	00000028 mesh_update_rte_scores
000111f8 l     F .text	00000040 mesh_get_pnd_pkt_slot
00011238 l     F .text	00000090 mesh_pending_packets_add
000112c8 l     F .text	00000058 mesh_get_rte_to_modify
00011320 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
0001175a l     F .text	0000001a mesh_send_ack
2007c328 l     O .bss	00000014 g_driver
2007c33c l     O .bss	00000001 g_error_mask
2007c33d l     O .bss	00000001 g_locked
2007c33e l     O .bss	00000090 g_mesh_pnd_pkts
2007c3ce l     O .bss	0000000c g_mesh_stats
2007c3da l     O .bss	00000018 g_our_name
2007c3f2 l     O .bss	00000048 g_our_pnd_pkts
2007c43a l     O .bss	0000000c g_pkt_hist
2007c446 l     O .bss	00000001 g_rpt_node
2007c447 l     O .bss	00000010 g_rte_table
2007c457 l     O .bss	00000001 s_next_packet_id.5115
2007c458 l     O .bss	00000004 s_prev_time_ms.5129
2007c08c l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 ff.c
00011af8 l     F .text	00000038 mem_cpy
00011b30 l     F .text	0000000e mem_set
00011b3e l     F .text	0000001e sum_sfn
00011b5c l     F .text	0000003a get_ldnumber
00011b96 l     F .text	000000c4 get_fileinfo
00011c5a l     F .text	00000046 sync_window.part.1
00011ca0 l     F .text	0000000c sync_window
00011cac l     F .text	00000074 sync_fs
00011d20 l     F .text	00000034 move_window
00011d54 l     F .text	0000004c check_fs
00011da0 l     F .text	0000021c find_volume
00011fbc l     F .text	0000003a validate
00011ff6 l     F .text	0000001a unlock_fs
000120cc l     F .text	00000080 dir_sdi
0001221e l     F .text	000000a0 create_chain
000122be l     F .text	000000ec dir_next
000123ac l     F .text	00000120 dir_find.part.9
000124cc l     F .text	00000270 follow_path
0001273c l     F .text	00000238 dir_register
00012974 l     F .text	0000005a dir_remove
000129d0 l     F .text	000000e8 dir_read.constprop.11
00012ab8 l     F .text	00000058 remove_chain
2007c45c l     O .bss	00000008 FatFs
2007c464 l     O .bss	00000002 Fsid
00024e9c l     O .text	00000080 ExCvt
00024f1c l     O .text	0000000d LfnOfs
00024f2a l     O .text	00000016 cst.6348
00024f84 l     O .text	00000016 vst.6347
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
00024f9a l     O .text	00000100 Tbl
0002509a l     O .text	000001e0 tbl_lower.5775
0002527a l     O .text	000001e0 tbl_upper.5776
00000000 l    df *ABS*	00000000 sd.c
00013c5c l     F .text	00000012 sys_get_uptime_ms
00013c70 l     F .text	00000030 ssp1_set_max_clock
00013ca0 l     F .text	00000014 ssp1_exchange_byte
2007c466 l     O .bss	00000001 g_card_type
2007c095 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
0001444c l     F .text	00000020 flash_get_mem_size_bytes()
0001446c l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
000144e0 l     F .text	000000ac ssp1_exchange_data
0001458c l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
000145b4 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
000145f8 l     F .text	00000040 flash_wait_for_ready()
0001484c l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c468 l     O .bss	00000004 g_sector_count
2007c46c l     O .bss	00000001 g_flash_capacity
2007c46e l     O .bss	00000002 g_flash_pagesize
00025464 l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c470 l     O .bss	00000080 g_ir_timings
2007c4f0 l     O .bss	00000002 g_signal_count
2007c4f4 l     O .bss	00000004 g_last_decoded_signal
00025474 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 c_tlm_stream.c
00014e0c l     F .text	000000d0 tlm_stream_for_each_component_var
00014edc l     F .text	0000001a tlm_stream_file_ptr
00014f78 l     F .text	0000000a tlm_stream_all_args
00000000 l    df *ABS*	00000000 c_tlm_comp.c
0001516c l     F .text	0000000e tlm_component_for_each_callback
0001517a l     F .text	00000010 tlm_component_find_by_name
2007c4f8 l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_tlm_var.c
00015240 l     F .text	0000001e tlm_variable_check_dup
0001525e l     F .text	00000014 tlm_component_find_callback
00000000 l    df *ABS*	00000000 c_tlm_binary.c
0001595e l     F .text	00000052 get_tlm_one_comp
000159b0 l     F .text	00000050 cmp_tlm_one_comp
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 scheduler_task.cpp
00015e58 l     F .text	0000002c __sputc_r
00015e84 l     F .text	00000034 dbg_print(char const*, char const*)
00015eb8 l     F .text	00000038 printline(char const*, char const*)
2007c4fc l     O .bss	00000004 gpTaskList
2007c500 l     O .bss	00000001 g_dbg_print
2007c504 l     O .bss	00000008 gEnumObjects
2007c50c l     O .bss	00000004 gRunTaskSemaphore
2007c510 l     O .bss	00000004 gTaskEntryTaskHandle
00000000 l    df *ABS*	00000000 file_logger.c
0001626c l     F .text	00000048 logger_get_buffer_ptr
000162b4 l     F .text	000000b4 logger_write_to_file
00016368 l     F .text	000000d0 logger_task
00016438 l     F .text	00000048 logger_write_log_message
2007c514 l     O .bss	00000002 g_blocked_calls
2007c516 l     O .bss	00000002 g_buffer_watermark
2007c518 l     O .bss	00000004 g_empty_buffer_queue
2007c51c l     O .bss	00000002 g_highest_file_write_time
2007c520 l     O .bss	00000010 g_logger_calls
2007c530 l     O .bss	00000004 g_write_buffer_queue
2007c534 l     O .bss	00000004 gp_file_buffer
2007c096 l     O .data	00000001 g_logger_printf_mask
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
000167a6 l     F .text	00000024 for_each_recur_alarm_callback
000167ca l     F .text	0000005a for_each_alarm_callback
2007c538 l     O .bss	00000010 g_list_recur_alarms
2007c548 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 memory.cpp
2007c54c l     O .bss	00000004 g_sbrk_calls
2007c550 l     O .bss	00000004 g_last_sbrk_ptr
2007c554 l     O .bss	00000004 g_next_heap_ptr
2007c558 l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00016fb6 l     F .text	00000056 remap_fatfs_errors
0001700c l     F .text	0000004c findslot
00017058 l     F .text	00000028 remap_handle
2007c55c l     O .bss	00000004 g_input_dev_fptr
2007c560 l     O .bss	00000004 g_output_dev_fptr
2007c564 l     O .bss	00000001 initialized.8352
2007c568 l     O .bss	00000060 openfiles
2007c5c8 l     O .bss	00000004 slot.8318
2007c098 l     O .data	00000004 lastfh.8319
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c5cc l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 eint.c
00017e44 l     F .text	0000002c handle_eint_list
00017e70 l     F .text	00000038 eint3_enable.isra.0
2007c5d0 l     O .bss	00000004 gp_port0_falling_list
2007c5d4 l     O .bss	00000004 gp_port0_rising_list
2007c5d8 l     O .bss	00000004 gp_port2_falling_list
2007c5dc l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 adc.c
00017f58 l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c5f4 l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_timers.c
00018480 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 can.c
000185b4 l     F .text	00000032 CAN_tx_now
000185e8 l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 port.c
000186b4 l     F .text	00000012 prvTaskExitError
000186c8 l     F .text	0000001a prvPortStartFirstTask
00018730 l       .text	00000000 pxCurrentTCBConst2
000187b0 l       .text	00000000 pxCurrentTCBConst
2007c5fc l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c600 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
0001897a l     F .text	00000066 prvCopyDataToQueue
000189e0 l     F .text	0000004a prvNotifyQueueSetContainer
00018a2a l     F .text	00000028 prvCopyDataFromQueue
00018a52 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00018f5a l     F .text	0000002e prvResetRunTimeStatsInList
00018f88 l     F .text	00000028 prvIdleTask
00018fb0 l     F .text	00000024 prvResetNextTaskUnblockTime
00018fd4 l     F .text	0000008c prvAddCurrentTaskToDelayedList
00019864 l     F .text	0000005c prvListTasksWithinSingleList
2007c60c l     O .bss	00000004 pxDelayedTaskList
2007c610 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c614 l     O .bss	000000c8 pxReadyTasksLists
2007c6dc l     O .bss	00000004 ulTaskSwitchedInTime
2007c6e0 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c6e4 l     O .bss	00000004 uxPendedTicks
2007c6e8 l     O .bss	00000004 uxSchedulerSuspended
2007c6ec l     O .bss	00000004 uxTaskNumber
2007c6f0 l     O .bss	00000004 uxTopReadyPriority
2007c6f4 l     O .bss	00000014 xDelayedTaskList1
2007c708 l     O .bss	00000014 xDelayedTaskList2
2007c71c l     O .bss	00000004 xIdleTaskHandle
2007c720 l     O .bss	00000004 xNextTaskUnblockTime
2007c724 l     O .bss	00000004 xNumOfOverflows
2007c728 l     O .bss	00000014 xPendingReadyList
2007c73c l     O .bss	00000004 xSchedulerRunning
2007c740 l     O .bss	00000014 xSuspendedTaskList
2007c754 l     O .bss	00000004 xTickCount
2007c758 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 handlers.cpp
00019b50 l     F .text	0000001c stream_tlm(char const*, void*)
00026582 l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
0001ab08 l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)
0001ab44 l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
0001ab64 l     F .text	00000114 wsTxHandler(str&, CharDev&, void*)
0001ac78 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
0001ad20 l     F .text	00000084 wsRxHandler(str&, CharDev&, void*)
0001b150 l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
0001af24 l     F .text	0000022c wsFileTxHandler(str&, CharDev&, void*)
2007c778 l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c77c l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
2007c780 l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 terminal.cpp
0001b504 l     F .text	00000040 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
0001bc50 l     F .text	0000000c hl_print_line()
0001bc5c l     F .text	0000002c ssp_set_max_clock
0001bc88 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 LabGPIO.cpp
00000000 l    df *ABS*	00000000 LabGPIOInterrupts.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
0001dd58 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001e580 l     F .text	000001c0 validate_structure
00027a04 l     O .text	00000030 DAYS_IN_MONTH
00027a34 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001fa94 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
00020184 l     F .text	00000042 sulp
00027afc l     O .text	00000014 fpi.6129
00027b10 l     O .text	00000014 fpinan.6165
00027b28 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00020e30 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c8c4 l     O .bss	0000000b __tzname_dst
2007c8cf l     O .bss	0000000b __tzname_std
2007c8dc l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
00027bac l     O .text	00000015 day_name.4714
00027bc1 l     O .text	00000024 mon_name.4715
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
00021790 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
000224e0 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
000229b2 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2b8 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 gmtime_r.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00027de8 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00023b84 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
0002442e l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c8e8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
000180d4 g     F .text	0000001c Uart3::Uart3()
000161e0 g     F .text	00000040 scheduler_start(bool, bool)
000246d4 g     F .text	00000012 _malloc_usable_size_r
0001a5f4 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
0001ec20 g     F .text	000000b8 __cvt
00016aac g     F .text	0000002e str::beginsWith(char const*) const
00010448 g     F .text	00000054 lpc_sys_setup_system_timer
000240f8 g     F .text	000000c6 _scanf_chars
0001c7f4 g     F .text	00000004 std::type_info::__is_function_p() const
00024c1c g     F .text	0000002c .hidden __aeabi_dcmpun
00017d60 g     F .text	000000d0 rtc_init
000234fa g     F .text	00000042 __any_on
00022d08 g     F .text	00000020 _isatty_r
00024be0 g     F .text	00000012 .hidden __aeabi_dcmple
00016c92 g     F .text	00000006 str::operator int() const
0002006c g     F .text	00000010 strcpy
000216d0 g     F .text	0000002c asctime
0001cccc g     F .text	00000018 .hidden __ashldi3
000170b8 g     F .text	00000004 _getpid
0001f8f8 g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
00015a30 g     F .text	0000001c tlm_binary_compare_one
000161c4 g     F .text	0000001c scheduler_add_task(scheduler_task*)
00024b1c g     F .text	0000007a .hidden __cmpdf2
00016e74 g     F .text	00000004 operator new[](unsigned int)
00022d48 g     F .text	00000024 _lseek_r
00012026 g     F .text	000000a6 get_fat
00017c94 g     F .text	0000001c RIT_IRQHandler
000114cc g     F .text	000000f8 mesh_form_pkt
00016b40 g     F .text	00000028 str::eraseFirst(int)
00016c8a g     F .text	00000004 str::operator==(char const*) const
00015a16 g     F .text	0000001a tlm_binary_get_one
00022450 g     F .text	0000006a __sflags
00024b1c g     F .text	0000007a .hidden __eqdf2
0001483c g     F .text	00000010 flash_supports_metadata
00025a78 g     O .text	00000009 typeinfo name for UartDev
2007c794 g     O .bss	000000fc gpio_intr_instance
000100cc g       .text	00000000 __section_table_start
00022bac g     F .text	00000024 _gettimeofday_r
00018758 g     F .text	00000014 vPortExitCritical
00020e2a g     F .text	00000006 strtok_r
0001cff8 g     F .text	0000005a .hidden __floatdidf
000181ec  w    F .text	00000014 NordicStream::~NordicStream()
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c78c  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001fe2c g     F .text	00000024 _kill_r
0001f8c8 g     F .text	00000030 printf
0001049c g     F .text	0000002c sys_get_uptime_us
0001ffb6 g     F .text	00000024 __sseek
0001ddcc g     F .text	00000060 __sinit
000180ac  w    F .text	00000014 Uart3::~Uart3()
000197e4 g     F .text	00000080 vTaskGetInfo
00021510 g     F .text	000000a4 __swbuf_r
2007c8e0 g     O .bss	00000004 _daylight
00019cec g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c770  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001c6ec g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
000278cc g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
0001a624 g     F .text	00000144 telemetryHandler(str&, CharDev&, void*)
00025b1c  w    O .text	0000001c vtable for Uart3
0001dda0 g     F .text	0000002c __sfmoreglue
000214b4 g     F .text	00000048 _vsiscanf_r
00016f38 g     F .text	00000004 __malloc_unlock
000165d4 g     F .text	00000138 logger_log
00014db6 g     F .text	00000030 I2C_Temp::getCelsius()
0001cb7c g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001acac g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
00020db8 g     F .text	00000020 _strtod_r
0001d4b8 g     F .text	00000136 .hidden __divsf3
0001400c g     F .text	00000098 sd_read
00025ad0  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0002254a g     F .text	0000002a __hexdig_fun
0001c340 g     F .text	00000010 LabGPIO::setAsOutput()
000256c0  w    O .text	00000020 vtable for scheduler_task
00017918 g     F .text	0000006c UartDev::getChar(char*, unsigned int)
00025aec  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
000184a0 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
0001e53c g     F .text	00000034 memmove
00010b2c g     F .text	00000008 nordic_clear_packet_sent_flag
0001fe54 g     F .text	00000068 snprintf
2007c5f8  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001e3c4 g     F .text	0000001c __locale_ctype_ptr
00018ca8 g     F .text	00000080 xQueueGenericSendFromISR
00022d6c g     F .text	00000068 _Balloc
00016998 g     F .text	0000004c str::tokenize(char const*, int, ...)
0002bc70 g       .ARM.exidx	00000000 __exidx_end
00020dd8 g     F .text	00000052 __strtok_r
00017cb0 g     F .text	00000048 rtc_gettime
0001d5f0 g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
0001b678 g     F .text	00000070 terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
00017f28 g     F .text	00000030 eint3_enable_port0
00010148  w    F .text	00000010 I2C1_IRQHandler
00025ba0  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
000168ec g     F .text	0000000e is_freertos_running
00015aca g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
00024b0c g     F .text	0000008a .hidden __gtdf2
0001d9c4 g     F .text	0000000c __errno
00016220 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00025a6c g     O .text	0000000c typeinfo for UartDev
00025bcc g     O .text	00000020 typeinfo for NordicStream
00010704 g     F .text	000000b4 sys_clock_configure()
0001eb00 g     F .text	00000064 _mallinfo_r
00018f42 g     F .text	00000018 xQueueSelectFromSet
00019b40 g     F .text	00000010 vRunTimeStatIsrExit
00022d28 g     F .text	00000004 __localeconv_l
0001bd34  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c608 g     O .bss	00000004 pxCurrentTCB
0001a768 g     F .text	00000038 learnIrHandler(str&, CharDev&, void*)
00013cb4 g     F .text	0000002e wait_ready
00017ea8 g     F .text	00000080 EINT3_IRQHandler
00014bdc g     F .text	00000064 IR_Sensor::decodeIrCode()
00010ae0 g     F .text	00000016 nordic_standby1_to_tx_mode1
00016974 g     F .text	00000008 str::clear()
000182d0 g     F .text	00000040 Uart0::init(unsigned int, int, int)
000114b0 g     F .text	0000000c mesh_get_node_address
00014c40 g     F .text	00000034 IR_Sensor::init()
000224bc g     F .text	00000024 _fstat_r
00016c10 g     F .text	00000040 str::trimStart(char const*)
00011774 g     F .text	0000002c mesh_get_routing_entry
0001c4f8 g     F .text	00000048 vControlLED(void*)
2007c8ec g     O .bss	00000004 errno
000241c0 g     F .text	000001ec _scanf_i
0001ff7a g     F .text	00000004 __seofread
0002bc70 g       .ARM.exidx	00000000 _etext
00019c04 g     F .text	000000e8 taskListHandler(str&, CharDev&, void*)
00010bc4 g     F .text	0000003e nordic_set_intr_signals
00024ba8 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c5ec  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00010acc g     F .text	00000008 nordic_clear_all_intr_flags
00016254 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
000175d2 g     F .text	00000018 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
0001d140 g     F .text	00000160 .hidden __aeabi_fadd
00016944 g     F .text	00000026 str::~str()
0001d13c g     F .text	00000164 .hidden __subsf3
00013c38 g     F .text	00000024 ff_wtoupper
000273dc g     O .text	00000020 vtable for terminalTask
00025bfc g     O .text	0000001c vtable for NordicStream
00016d08 g     F .text	0000000c str::str(int)
000214fc g     F .text	00000014 vsscanf
000240a8 g     F .text	00000050 _vfiscanf_r
00015e54  w    F .text	00000004 scheduler_task::taskEntry()
00010950 g     F .text	00000048 lpc_pclk
0001dd38 g     F .text	00000014 fgets
00010148  w    F .text	00000010 TIMER3_IRQHandler
00018578 g     F .text	00000014 I2C2::I2C2()
00010d3e g     F .text	0000000c nordic_set_rx_pipe0_addr
0001832c g     F .text	00000024 UART0_IRQHandler
00019bb8  w    F .text	0000004c Storage::getSDDrive()
000187f4 g     F .text	00000030 xPortStartScheduler
000192bc g     F .text	00000020 vTaskEndScheduler
0001e526 g     F .text	00000016 memcpy
000196e4 g     F .text	00000020 vTaskPlaceOnEventList
000229fc g     F .text	00000120 __hexnan
0001836c g     F .text	000000c0 ssp1_dma_transfer_block
00024b98 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
0001fc68 g     F .text	0000015c setvbuf
00019b6c  w    F .text	0000004c Storage::getFlashDrive()
00025b38  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
0001dd4c g     F .text	0000000c _cleanup_r
0001c614 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00023640 g     F .text	000001e8 _svfprintf_r
0001cf88 g     F .text	00000022 .hidden __floatsidf
000187e0  w    F .text	00000014 vPortSetupTimerInterrupt
00025bec g     O .text	0000000f typeinfo name for NordicStream
00010bb8 g     F .text	0000000c nordic_flush_rx_fifo
00024b14 g     F .text	00000082 .hidden __ltdf2
000187b4 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
00014374 g     F .text	00000026 disk_initialize
000114bc g     F .text	00000010 mesh_set_retry_count
0001c620 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001d67c g     F .text	00000000 .hidden __aeabi_uldivmod
00017730  w    F .text	0000010a I2C_Base::i2cStateMachine()
0001f9b0 g     F .text	00000010 puts
00027938 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
000188de g     F .text	0000001a vPortFree
0001b270 g     F .text	000000b4 flashProgHandler(str&, CharDev&, void*)
00020fa8 g     F .text	0000001a tolower
000240a8 g     F .text	00000050 _vfscanf_r
00023476 g     F .text	00000050 __ratio
0001fc38 g     F .text	00000030 iscanf
0001358e g     F .text	0000011e f_rename
0001c350 g     F .text	0000000a LabGPIO::setDirection(bool)
00014d16 g     F .text	00000004 LED::init()
0001b45c  w    F .text	0000004c terminalTask::~terminalTask()
00015274 g     F .text	0000007c tlm_variable_register
00013bb4 g     F .text	00000004 ff_del_syncobj
00025c3c  w    O .text	00000007 typeinfo name for Uart0
0001e4a8 g     F .text	00000010 malloc
00017b4c  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00014c74 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001fdcc g     F .text	00000050 _raise_r
00017434 g     F .text	00000010 _fstat
0001842c g     F .text	00000030 spi1_lock
0001d2a8 g     F .text	0000001c .hidden __aeabi_i2f
00027d20 g     O .text	000000c8 __mprec_tens
2007c890 g     O .bss	00000004 xSemaphore
00019958 g     F .text	00000020 uxTaskGetStackHighWaterMark
0001a344 g     F .text	000000b8 newFileHandler(str&, CharDev&, void*)
0001c37c g     F .text	00000010 LabGPIOInterrupts::init()
0001a3fc g     F .text	0000013c dcpHandler(str&, CharDev&, void*)
00021498 g     F .text	0000001c vsnprintf
00018770 g     F .text	00000044 xPortPendSVHandler
0001d054 g     F .text	00000040 .hidden __fixunsdfsi
00018914 g     F .text	00000018 vListInsertEnd
00013e90 g     F .text	0000016c sd_initialize
00010d1c g     F .text	00000016 nordic_set_addr_width
000238a2 g     F .text	0000003a __ssrefill_r
00010d4c g     F .text	000000c8 nordic_init
0001fe50 g     F .text	00000004 _getpid_r
0002bc68 g       .text	00000000 __symbol_table_end
0001439a g     F .text	00000010 disk_status
00011010 g     F .text	0000004c wireless_init
0002454c g     F .text	0000002c strtoul
0001cf68 g     F .text	0000001e .hidden __aeabi_ui2d
0001850c g     F .text	0000006c I2C2::init(unsigned int)
00022d2c g     F .text	0000001c _localeconv_r
0001c824 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00022f90 g     F .text	00000012 __i2b
0001c660 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001d6ac g     F .text	000002dc .hidden __udivmoddi4
00010c68 g     F .text	00000024 nordic_set_channel
0001cce4 g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001fc18 g     F .text	00000020 _sbrk_r
0001171c g     F .text	0000003e mesh_send
00019dd4 g     F .text	00000198 logHandler(str&, CharDev&, void*)
00025b54  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
000243ac g     F .text	00000024 _read_r
000273cc g     O .text	0000000f typeinfo name for terminalTask
0001890e g     F .text	00000006 vListInitialiseItem
00015944 g     F .text	0000001a tlm_variable_get_value
0001441a g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
00024bcc g     F .text	00000012 .hidden __aeabi_dcmplt
00018222 g     F .text	00000044 NordicStream::getChar(char*, unsigned int)
0001d9d0 g     F .text	000000a4 _fclose_r
0001868c g     F .text	00000028 CAN_IRQHandler
0001dbe8 g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
000164d4 g     F .text	0000000c logger_get_highest_file_write_time_ms
00010148  w    F .text	00000010 PLL1_IRQHandler
00025aa8 g     O .text	00000009 typeinfo name for CharDev
00018824 g     F .text	00000014 rts_not_full_trace_init
00014ca4 g     F .text	00000038 LED_Display::init()
0001cfac g     F .text	0000003a .hidden __extendsfdf2
000238dc g     F .text	000002a8 __ssvfscanf_r
0002493c g     F .text	000001d0 .hidden __aeabi_ddiv
0001dc0c g     F .text	00000058 _fgetc_r
00010148  w    F .text	00000010 SSP0_IRQHandler
00010c8c g     F .text	0000002c nordic_set_air_data_rate
0001ccf0 g     F .text	00000276 .hidden __adddf3
0001a270 g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
00010148  w    F .text	00000010 CANAct_IRQHandler
000278f4 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001670c g     F .text	00000040 logger_log_raw
00011ac0 g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
00023334 g     F .text	000000a4 __b2d
0002bc68 g       .text	00000000 __exidx_start
000246e8 g     F .text	00000254 .hidden __aeabi_dmul
00010200 g     F .text	0000000c sys_get_boot_type
00017444 g     F .text	00000024 _isatty
0001c648 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010d32 g     F .text	0000000c nordic_set_tx_address
00016e78 g     F .text	00000004 operator delete(void*)
000279f8 g     O .text	00000004 _global_impure_ptr
0001c838 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0002353c g     F .text	0000004c _realloc_r
0002008c g     F .text	0000004e strncasecmp
0001e188 g     F .text	00000048 __libc_init_array
00015ce8 g     F .text	00000164 CommandProcessor::handleCommand(str&, CharDev&)
00013d94 g     F .text	0000004c xmit_datablock
00017874 g     F .text	0000005c UartDev::putChar(char, unsigned int)
000151b0 g     F .text	0000006c tlm_component_add
00010ba4 g     F .text	00000014 nordic_read_rx_fifo
0001a968 g     F .text	000001a0 i2cIoHandler(str&, CharDev&, void*)
000164e0 g     F .text	0000000c logger_get_num_buffers_watermark
00027cf8 g     O .text	00000028 __mprec_bigtens
00022e78 g     F .text	0000007c __s2b
0001c45c g     F .text	0000009c LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)
0001d98c g     F .text	0000000e abort
00017294 g     F .text	0000014c _open
0001cf68 g     F .text	0000001e .hidden __floatunsidf
00014638 g     F .text	00000098 flash_initialize
00016e04 g     F .text	0000006c _sbrk
000181d8  w    F .text	00000014 NordicStream::~NordicStream()
000231fa g     F .text	00000034 __mcmp
000188c0 g     F .text	0000001e pvPortMalloc
00022bd8 g     F .text	00000130 gmtime_r
00025b5c  w    O .text	00000007 typeinfo name for Uart2
0001337e g     F .text	000000be f_unlink
000182bc  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
000170bc g     F .text	00000004 _init
00010500  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00018734 g     F .text	00000002 vPortEndScheduler
0001858c g     F .text	00000028 I2C2_IRQHandler
000188f8 g     F .text	00000016 vListInitialise
0001c35a g     F .text	0000000c LabGPIO::setHigh()
000170c0 g     F .text	00000034 syscalls_init
000180ac  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001521c g     F .text	00000024 tlm_component_for_each
00020f54 g     F .text	0000002c strtol
00018114  w    F .text	00000014 Uart2::~Uart2()
0001df3c g     F .text	00000120 _fseeko_r
0001ccc0 g     F .text	0000000a std::terminate()
0001d094 g     F .text	0000009e .hidden __aeabi_d2f
00017be4 g     F .text	00000078 CharDev::printf(char const*, ...)
000175ea g     F .text	00000018 I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)
000192ec g     F .text	0000000c xTaskGetTickCount
00018b80 g     F .text	00000104 xQueueGenericSend
0001d13c g     F .text	00000164 .hidden __aeabi_fsub
00016824 g     F .text	000000ac RTC_IRQHandler
000201c8 g     F .text	00000bf0 _strtod_l
000229d6 g     F .text	00000026 __match
0001b5f4 g     F .text	00000084 terminalTask::saveDiskTlm()
2007c8f0 g       .bss	00000000 _ebss
00015ef0 g     F .text	00000124 scheduler_c_task_private(void*)
0001c84c g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
0001090a g     F .text	00000006 __set_PSP
0001b544 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00017b94 g     F .text	00000050 CharDev::gets(char*, int, unsigned int)
000178f8 g     F .text	00000020 UartDev::flush()
00021498 g     F .text	0000001c vsniprintf
00027870 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0002112e g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
00020128 g     F .text	00000026 strrchr
00022ef4 g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00010d08 g     F .text	00000014 nordic_set_payload_for_pipe
000198c0 g     F .text	00000098 uxTaskGetSystemState
00024c48 g     F .text	0000004e .hidden __fixdfsi
0001d9a4 g     F .text	00000010 calloc
00019a28 g     F .text	00000070 xTaskPriorityDisinherit
0001a2ac g     F .text	0000003c rmHandler(str&, CharDev&, void*)
00018268 g     F .text	00000040 NordicStream::NordicStream()
000147a4 g     F .text	00000044 flash_write_permanent_id
2007c5e4 g     O .bss	00000004 g_adc_result_queue
0001d2d4 g     F .text	0000007c .hidden __floatdisf
00025b84  w    O .text	0000001c vtable for Uart2
0001bd8c g     F .text	00000560 high_level_init()
00017a78 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00019ab0 g     F .text	00000068 vTaskResetRunTimeStats
0001691c g     F .text	00000028 str::str(char*, int)
0001c7f2 g     F .text	00000002 std::type_info::~type_info()
00019fec g     F .text	00000100 catHandler(str&, CharDev&, void*)
000107b8 g     F .text	000000a8 sys_get_cpu_clock
00014b76  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
00010220 g     F .text	00000228 low_level_init()
2007c2b0 g     O .data	00000008 _tzname
0001bc14  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
000165b8 g     F .text	0000001c logger_set_printf
00019704 g     F .text	00000070 xTaskRemoveFromEventList
0001889c g     F .text	00000024 vApplicationMallocFailedHook
2007c2f8 g     O .data	00000004 environ
00018310 g     F .text	0000001c Uart0::Uart0()
00010620 g     F .text	00000058 isr_hard_fault_handler
0001c6c2 g     F .text	00000004 operator delete(void*, unsigned int)
00016c98 g     F .text	00000014 str::operator[](int)
0001ccf0 g     F .text	00000276 .hidden __aeabi_dadd
00024b14 g     F .text	00000082 .hidden __ledf2
0001d9b4 g     F .text	0000000e ctime
2007c790  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
0001757c g     F .text	00000028 I2C_Base::readReg(unsigned char, unsigned char)
00015af6 g     F .text	0000002a c_list_for_each_elm
0002001e g     F .text	0000001e strcat
00015a66 g     F .text	00000038 c_list_insert_elm_end
000230bc g     F .text	0000009c __pow5mult
0001cfe8 g     F .text	0000006a .hidden __aeabi_ul2d
00010b08 g     F .text	00000024 nordic_standby1_to_rx
0001c366 g     F .text	0000000c LabGPIO::setLow()
00015348 g     F .text	000001ec tlm_variable_set_value
00010148  w    F .text	00000010 EINT1_IRQHandler
0001c2ec g     F .text	0000004c LabGPIO::LabGPIO(unsigned char, unsigned char)
00010518 g     F .text	000000bc TIMER1_IRQHandler
00014d7c g     F .text	00000018 Switches::getSwitchValues()
00027998 g     O .text	00000020 __sf_fake_stderr
00025b64  w    O .text	00000020 typeinfo for Uart2
0001fe54 g     F .text	00000068 sniprintf
00015b20 g     F .text	0000007c CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
0001ccb0 g     F .text	00000010 std::get_terminate()
00016daa g     F .text	0000001a str::operator+=(char)
0001b934  w    F .text	00000022 Uart0::getcharIntrDriven(char)
00016ada g     F .text	0000002e str::beginsWithIgnoreCase(char const*) const
00010b40 g     F .text	0000004c nordic_mode1_send_single_packet
0001a538 g     F .text	000000bc storageHandler(str&, CharDev&, void*)
00013d08 g     F .text	0000008c rcvr_datablock
00018158 g     F .text	00000024 UART2_IRQHandler
000178d0  w    F .text	00000014 UartDev::~UartDev()
00015318 g     F .text	00000030 tlm_variable_get_by_comp_and_name
00018838 g     F .text	00000014 rts_not_full_trace_get
000117a0 g     F .text	0000001c mesh_get_num_routing_entries
00023588 g     F .text	000000b6 __ssputs_r
00011498 g     F .text	00000018 mesh_set_node_address
00019a98 g     F .text	00000018 pvTaskIncrementMutexHeldCount
000182a8  w    F .text	00000014 Uart0::~Uart0()
0001c68a g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001c824 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00015e4c  w    F .text	00000004 scheduler_task::init()
00016b68 g     F .text	0000001e str::eraseLast(int)
00024c08 g     F .text	00000012 .hidden __aeabi_dcmpgt
0001c5e0 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c75c  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
00023bb0 g     F .text	00000024 __sfputs_r
00014d70 g     F .text	00000006 Light_Sensor::getRawValue()
0001dea4 g     F .text	00000002 __sfp_lock_acquire
0001e4ec g     F .text	0000001c memchr
0001ed44  w    F .text	00000470 _printf_float
0001845c g     F .text	00000024 spi1_unlock
0001978c g     F .text	0000004c xTaskCheckForTimeOut
0001ea68 g     F .text	00000098 _free_r
0001c414 g     F .text	00000024 LabGPIOInterrupts::setRisingEdge(bool)
00014fb4 g     F .text	000001b8 tlm_stream_decode_file
00015b9c g     F .text	000000a0 CommandProcessor::getRegisteredCommandList(CharDev&)
00024bf4 g     F .text	00000012 .hidden __aeabi_dcmpge
0001813c g     F .text	0000001c Uart2::Uart2()
0001fbc0 g     F .text	00000058 __srget_r
00016a96 g     F .text	00000016 str::firstIndexOf(char const*) const
0001a7a0  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
00010860 g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
00016d64 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
00023828 g     F .text	0000007a _sungetc_r
0001bd74  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00013060 g     F .text	00000024 f_close
00013ffc g     F .text	00000010 sd_status
0001ccec g     F .text	0000027a .hidden __aeabi_dsub
0001e740 g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
00010b9c g     F .text	00000008 nordic_clear_packet_available_flag
00025c34  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
000192dc g     F .text	00000010 vTaskSuspendAll
00019204 g     F .text	00000054 eTaskGetState
0002014e g     F .text	00000036 strstr
2007c5e8  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
00027928 g     O .text	0000000d typeinfo name for std::type_info
000192f8 g     F .text	0000000c xTaskGetTickCountFromISR
00015a9e g     F .text	0000002c c_list_get_elm_at
0001cfe8 g     F .text	0000006a .hidden __floatundidf
00014830 g     F .text	0000000c flash_get_page_size
0001fa10 g     F .text	00000074 rand
00017190 g     F .text	00000060 _lseek
0001c6e4 g     F .text	00000006 __cxa_pure_virtual
00023158 g     F .text	000000a2 __lshift
0001b6e8 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
0001d2a8 g     F .text	0000001c .hidden __floatsisf
0001895a g     F .text	00000020 uxListRemove
0001f8a4 g     F .text	00000024 _open_r
00015a60 g     F .text	00000006 c_list_node_count
00014b6a  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
00014a9a g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00012cba g     F .text	00000170 f_read
00018268 g     F .text	00000040 NordicStream::NordicStream()
000200da g     F .text	00000024 strncmp
00017f7c g     F .text	00000048 ADC_IRQHandler
0001c74c g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000108c0 g     F .text	00000018 uart0_getchar
00016d22 g     F .text	00000042 str::printf(char const*, ...)
000169e4 g     F .text	00000014 str::compareTo(char const*) const
0001a0ec g     F .text	00000184 lsHandler(str&, CharDev&, void*)
00022fa2 g     F .text	00000118 __multiply
00013258 g     F .text	0000005e f_readdir
00010610 g     F .text	00000010 isr_register
0001af04  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
00019998 g     F .text	00000090 vTaskPriorityInherit
00013ba0 g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
0001d5f0 g     F .text	0000004c .hidden __aeabi_f2iz
00027a64 g     O .text	00000060 __month_lengths
00016944 g     F .text	00000026 str::~str()
0001696a g     F .text	00000006 str::getLen() const
000200fe g     F .text	0000002a strncpy
2007c894 g     O .bss	00000028 __malloc_current_mallinfo
00016c50 g     F .text	0000003a str::trimEnd(char const*)
000233d8 g     F .text	0000009e __d2b
0001ffe2 g     F .text	0000003c strcasecmp
2007c768  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
0001957c g     F .text	000000b8 vTaskSwitchContext
0001c7f2 g     F .text	00000002 std::type_info::~type_info()
00018310 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
00025ab4 g     O .text	0000001c vtable for CharDev
0001c7c8 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001b4a8  w    F .text	00000014 terminalTask::~terminalTask()
0001fa84 g     F .text	00000010 realloc
00017b50 g     F .text	00000028 CharDev::put(char const*, unsigned int)
00027944 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
0001107c g     F .text	0000004c wireless_service
00024528 g     F .text	00000024 _strtoul_r
000146d0 g     F .text	00000050 flash_read_sectors
00010b8c g     F .text	00000010 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
000164b4 g     F .text	00000014 logger_get_logged_call_count
00016970 g     F .text	00000004 str::getCapacity() const
0001d4b8 g     F .text	00000136 .hidden __aeabi_fdiv
00021748 g     F .text	00000020 _close_r
2007c5f0  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001cf88 g     F .text	00000022 .hidden __aeabi_i2d
00019f6c g     F .text	00000080 cpHandler(str&, CharDev&, void*)
0001161c g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00017468 g     F .text	00000108 I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
0001783c g     F .text	00000038 I2C_Base::handleInterrupt()
0001e508 g     F .text	0000001e memcmp
2007c774  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
00016e00 g     F .text	00000004 str::operator=(char const*)
0001e0d0 g     F .text	0000009c _fwrite_r
00010148  w    F .text	00000010 USB_IRQHandler
0001d2c4 g     F .text	0000008c .hidden __floatundisf
0001c6ec g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001ff04 g     F .text	00000054 sscanf
000215f4 g     F .text	000000dc __swsetup_r
0001b728 g     F .text	00000124 terminalTask::getCommand()
2007c5e0 g     O .bss	00000004 g_adc_mutex
00018864 g     F .text	00000038 vApplicationStackOverflowHook
0001d988  w    F .text	00000002 .hidden __aeabi_ldiv0
00019634 g     F .text	000000b0 vTaskSuspend
0002493c g     F .text	000001d0 .hidden __divdf3
0001de2c g     F .text	00000078 __sfp
000234c6 g     F .text	00000034 __copybits
0001c7f4 g     F .text	00000004 std::type_info::__is_pointer_p() const
00019304 g     F .text	0000000c uxTaskGetNumberOfTasks
0001b324 g     F .text	00000138 getFileHandler(str&, CharDev&, void*)
0001bd18  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
0001d2a0 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c09c g     O .data	00000040 g_can_structs
00021440 g     F .text	00000058 _vsnprintf_r
000246e8 g     F .text	00000254 .hidden __muldf3
0001ff58 g     F .text	00000022 __sread
00015cac g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
00014958 g     F .text	00000052 get_fattime
000168d0 g     F .text	0000001c delay_us
000178e4  w    F .text	00000014 UartDev::~UartDev()
00010c02 g     F .text	00000038 nordic_set_crc
00027e30 g     O .text	00003e38 APP_SYM_TABLE
000108f0 g     F .text	0000001a uart0_puts
00018114  w    F .text	00000014 Uart2::~Uart2()
00017c5c g     F .text	00000020 CharDev::CharDev()
00016f34 g     F .text	00000004 __malloc_lock
00027894 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
0001db94 g     F .text	00000054 _fflush_r
0001106c g     F .text	00000010 wireless_get_ack_pkt
00016d86 g     F .text	00000024 str::insertAtEnd(char const*)
0001ea4c g     F .text	0000001c _calloc_r
00017674 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
0001020c g     F .text	00000014 sys_get_boot_time
000279b8 g     O .text	00000020 __sf_fake_stdin
0002112c g     F .text	00000002 __tz_lock
00011ae4 g     F .text	00000014 mesh_get_stats
0001df28 g     F .text	00000010 fopen
000216fc g     F .text	0000004c asctime_r
0001105c g     F .text	00000010 wireless_get_rx_pkt
0001e1d0 g     F .text	00000024 localtime
0001e570 g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
0001c560 g     F .text	00000080 main
00025c18  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
000168fa g     F .text	00000022 delay_ms
00016d14 g     F .text	0000000e str::reserve(int)
00010abe g     F .text	0000000e nordic_is_tx_fifo_empty
00014d76 g     F .text	00000004 Switches::init()
000149aa g     F .text	000000f0 Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
00016e80 g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00010b34 g     F .text	0000000c nordic_flush_tx_fifo
0001d2d4 g     F .text	0000007c .hidden __aeabi_l2f
0001f9c0 g     F .text	00000050 srand
00016220 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00017a78 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00017618 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00012fd6 g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014c8c g     F .text	00000018 LED_Display::setRightDigit(char)
000117bc g     F .text	000002d0 mesh_service
0001892c g     F .text	0000002e vListInsert
0001b8fc  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
0001ffda g     F .text	00000008 __sclose
00016e7c g     F .text	00000004 operator delete[](void*)
00016a88 g     F .text	0000000e str::containsIgnoreCase(char const*) const
0001da74 g     F .text	00000010 fclose
2007c764  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
00020f30 g     F .text	00000024 _strtol_r
0001d094 g     F .text	0000009e .hidden __truncdfsf2
00017fc4 g     F .text	00000074 adc0_init
00022b1c g     F .text	00000080 _findenv_r
00027e30 g       .text	00000000 __init_array_end
00018710 g     F .text	00000024 vPortSVCHandler
000218a8 g     F .text	00000ba8 _dtoa_r
0001eb64 g     F .text	000000bc _malloc_r
000215b4 g     F .text	0000001a __ascii_wctomb
00020f80 g     F .text	00000028 time
000115c4 g     F .text	00000058 mesh_send_formed_pkt
000136ac g     F .text	000004f4 f_mkfs
0001cff8 g     F .text	0000005a .hidden __aeabi_l2d
00014d1c g     F .text	00000050 LED::setAll(unsigned char)
00016b08 g     F .text	00000038 str::beginsWithWholeWordIgnoreCase(char const*, char) const
00012b10 g     F .text	0000007c f_mount
000194f4 g     F .text	00000058 vTaskDelayUntil
00024578 g     F .text	00000072 __submore
000246d2 g     F .text	00000002 __env_unlock
00027864 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00014bc0 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001e05c g     F .text	00000038 _fwalk
0001b84c g     F .text	000000b0 terminalTask::run(void*)
00014b22 g     F .text	00000048 Storage::append(char const*, void const*, unsigned int, unsigned int)
000131d2 g     F .text	00000086 f_opendir
0001dc74 g     F .text	000000c4 _fgets_r
00018ec4 g     F .text	00000068 xQueueReceiveFromISR
0001d2c4 g     F .text	0000008c .hidden __aeabi_ul2f
0001c38c g     F .text	00000088 LabGPIOInterrupts::handle_interrupt()
000140a4 g     F .text	000000b4 sd_write
00018b3c g     F .text	00000032 xQueueGenericCreate
00025afc  w    O .text	00000020 typeinfo for Uart3
0001d350 g     F .text	00000168 .hidden __mulsf3
00016480 g     F .text	00000034 logger_send_flush_request
00010108  w    F .text	00000010 isr_mem_fault
000175a4 g     F .text	0000001a I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
00021130 g     F .text	0000000c _tzset_unlocked
00020058 g     F .text	00000014 strcmp
0001ff04 g     F .text	00000054 siscanf
00018b6e g     F .text	00000012 xQueueCreateCountingSemaphore
0001a7c0 g     F .text	000001a8 healthHandler(str&, CharDev&, void*)
0001b544 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00015c3c g     F .text	00000070 CommandProcessor::getHelpText(str&, CharDev&)
00010c3a g     F .text	00000018 nordic_power_up
0001708c g     F .text	0000000c sys_set_inchar_func
0001214c g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
00024b1c g     F .text	0000007a .hidden __nedf2
00025aa0 g     O .text	00000008 typeinfo for CharDev
0001b45c  w    F .text	0000004c terminalTask::~terminalTask()
0001bd5c  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001c2ec g     F .text	0000004c LabGPIO::LabGPIO(unsigned char, unsigned char)
0001f8c8 g     F .text	00000030 iprintf
00013bde g     F .text	0000001e ff_rel_grant
000180d4 g     F .text	0000001c Uart3::Uart3()
0001c700 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001941c g     F .text	000000d8 xTaskResumeAll
00023e00 g     F .text	000002a8 __svfiscanf_r
00013084 g     F .text	0000014e f_lseek
0001dc64 g     F .text	00000010 fgetc
0001febc g     F .text	00000048 sprintf
000178d0  w    F .text	00000014 UartDev::~UartDev()
00019258 g     F .text	00000064 vTaskStartScheduler
0001ecd8 g     F .text	0000006a __exponent
00025af4  w    O .text	00000007 typeinfo name for Uart3
00014ba0 g     F .text	00000020 Acceleration_Sensor::init()
0001c6de g     F .text	00000006 __cxa_guard_release
00017c5c g     F .text	00000020 CharDev::CharDev()
000215d0 g     F .text	00000024 _write_r
00025a84 g     O .text	0000001c vtable for UartDev
00017984 g     F .text	00000034 UartDev::setBaudRate(unsigned int)
0001fc38 g     F .text	00000030 scanf
2007c760  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001d134 g     F .text	0000016c .hidden __aeabi_frsub
0002796c g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00017080 g     F .text	0000000c sys_set_outchar_func
0001492c g     F .text	0000002c flash_chip_erase
0001fdc4 g     F .text	00000008 nanf
0001f1b4 g     F .text	000000ee _printf_common
00018038 g     F .text	00000074 adc0_get_reading
2007c0e0 g     O .data	00000004 _impure_ptr
0001676a g     F .text	0000003c u0_dbg_printf
0001da84 g     F .text	00000110 __sflush_r
0001d350 g     F .text	00000168 .hidden __aeabi_fmul
00025c64  w    O .text	0000001c vtable for Uart0
0001df38 g     F .text	00000004 _fseek_r
00027e30 g       .text	00000000 __preinit_array_end
00023640 g     F .text	000001e8 _svfiprintf_r
0001faa8 g     F .text	00000118 __srefill_r
00013ce4 g     F .text	00000024 power_off
00014de8 g     F .text	00000024 I2C_Temp::getFarenheit()
0001e4c8 g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
00018578 g     F .text	00000014 I2C2::I2C2()
00010910 g     F .text	00000006 __set_MSP
000232ec g     F .text	00000048 __ulp
00015534 g     F .text	00000410 tlm_variable_print_value
0001b958 g     F .text	000002bc terminalTask::taskEntry()
0001691c g     F .text	00000028 str::str(char*, int)
000180c0  w    F .text	00000014 Uart3::~Uart3()
00018128  w    F .text	00000014 Uart2::~Uart2()
000197d8 g     F .text	0000000c vTaskMissedYield
00010ad4 g     F .text	0000000c nordic_queue_tx_fifo
000181d8  w    F .text	00000014 NordicStream::~NordicStream()
000273c0 g     O .text	0000000c typeinfo for terminalTask
2007c8f0 g       .bss	00000000 _pvHeapStart
000108d8 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001ea38 g     F .text	00000014 mallinfo
000175be g     F .text	00000014 I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)
0001674c g     F .text	0000001e u0_dbg_put
000169f8 g     F .text	00000010 str::compareToIgnoreCase(char const*) const
000179b8 g     F .text	000000c0 UartDev::handleInterrupt()
00017602 g     F .text	00000014 I2C_Base::checkDeviceResponse(unsigned char)
00021440 g     F .text	00000058 _vsniprintf_r
00014f84 g     F .text	0000001c tlm_stream_all
00018f2c g     F .text	00000012 uxQueueMessagesWaiting
00018d90 g     F .text	00000134 xQueueGenericReceive
0001d054 g     F .text	00000040 .hidden __aeabi_d2uiz
00017618 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c8e4 g     O .bss	00000004 _timezone
0001e1f4 g     F .text	000001c8 localtime_r
00013de0 g     F .text	0000008c send_cmd
0001c620 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
000182a8  w    F .text	00000014 Uart0::~Uart0()
00019310 g     F .text	0000010c xTaskIncrementTick
000238dc g     F .text	000002a8 __ssvfiscanf_r
00010c52 g     F .text	00000016 nordic_power_down
00017cf8 g     F .text	00000068 rtc_settime
00016b86 g     F .text	00000038 str::eraseAfter(int, int)
2007c76c  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00012010 g     F .text	00000016 clust2sect
0001cccc g     F .text	00000018 .hidden __aeabi_llsl
000104c8 g     F .text	00000038 sys_get_mem_info_str
00025bc4  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
0001e3e0 g     F .text	00000048 __swhatbuf_r
2007c0dc g     O .data	00000004 __cxxabiv1::__terminate_handler
000164c8 g     F .text	0000000c logger_get_blocked_call_count
00010916 g     F .text	00000006 __set_BASEPRI
00024bb8 g     F .text	00000012 .hidden __aeabi_dcmpeq
00018350 g     F .text	0000001c ssp1_dma_init
0001e16c g     F .text	0000001c fwrite
0001813c g     F .text	0000001c Uart2::Uart2()
000278c0 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00018ad0 g     F .text	0000006c xQueueGenericReset
000171f0 g     F .text	000000a4 _write
2007c2fc g       .data	00000000 _edata
0001c8ea g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014cdc g     F .text	0000003a LED_Display::setNumber(char)
00011a8c g     F .text	00000034 mesh_get_pnd_pkt_count
00014ade g     F .text	00000044 Storage::write(char const*, void*, unsigned int, unsigned int)
00014810 g     F .text	00000020 flash_get_page_count
0001c540 g     F .text	00000014 vCall_Back()
00017570 g     F .text	0000000c I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00012e2a g     F .text	000001ac f_write
00016c8e g     F .text	00000004 str::operator()() const
00014d94 g     F .text	00000022 I2C_Temp::init()
00014720 g     F .text	0000004c flash_write_sectors
0002113c g     F .text	00000304 _tzset_unlocked_r
00019060 g     F .text	000001a4 xTaskCreate
000214b4 g     F .text	00000048 _vsscanf_r
0001d63c g     F .text	0000003e .hidden __aeabi_f2uiz
00017c7c g     F .text	00000018 CharDev::~CharDev()
00016a08 g     F .text	00000080 str::firstIndexOfIgnoreCase(char const*) const
00018200 g     F .text	00000022 NordicStream::putChar(char, unsigned int)
0001817c g     F .text	0000005c NordicStream::flush()
0001ff7e g     F .text	00000038 __swrite
00016e70 g     F .text	00000004 operator new(unsigned int)
00012b8c g     F .text	0000012e f_open
00016bbe g     F .text	00000028 str::erase(char const*)
0001c8c0  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000143e2 g     F .text	00000038 disk_write
0001476c g     F .text	00000036 flash_ioctl
00010cdc g     F .text	0000002c nordic_set_auto_transmit_options
00015a4c g     F .text	00000014 c_list_create
00023bd4 g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00015e50  w    F .text	00000004 scheduler_task::regTlm()
0001a2e8 g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001e094 g     F .text	0000003c _fwalk_reent
0001c714 g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001d2a0 g     F .text	00000024 .hidden __floatunsisf
0002322e g     F .text	000000be __mdiff
00017c7c g     F .text	00000018 CharDev::~CharDev()
00024c48 g     F .text	0000004e .hidden __aeabi_d2iz
0001cca6 g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00013bb8 g     F .text	00000026 ff_req_grant
000214fc g     F .text	00000014 vsiscanf
2007c788  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
0001c554 g     F .text	0000000c c_eint3_handler()
00017098 g     F .text	00000010 _kill
00016cac g     F .text	0000004c str::reAllocateMem(int)
00010148  w    F .text	00000010 DMA_IRQHandler
0001b4bc g     F .text	00000048 terminalTask::regTlm()
0001518c g     F .text	00000024 tlm_component_get_by_name
0001954c g     F .text	00000030 vTaskDelay
0001b91c  w    F .text	00000018 Uart0::putcharIntrDriven(char)
0001dea6 g     F .text	00000002 __sfp_lock_release
00017708  w    F .text	00000028 I2C_Base::setStop()
00016014 g     F .text	000001b0 scheduler_init_all(bool)
000279d8 g     O .text	00000020 __sf_fake_stdout
0001c438 g     F .text	00000024 LabGPIOInterrupts::setFallingEdge(bool)
0001febc g     F .text	00000048 siprintf
000243d0 g     F .text	0000005e __sccl
0001d99a g     F .text	00000008 atoi
00016f3c g     F .text	0000007a _gettimeofday
00019978 g     F .text	00000020 xTaskGetSchedulerState
00027be5 g     O .text	00000101 _ctype_
000170f4 g     F .text	0000009c _read
00027e30 g       .text	00000000 __init_array_start
0001d988  w    F .text	00000002 .hidden __aeabi_idiv0
00019d10 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
00024c1c g     F .text	0000002c .hidden __unorddf2
000256b8  w    O .text	00000008 typeinfo for scheduler_task
000164ec g     F .text	000000cc logger_init
0001343c g     F .text	00000152 f_mkdir
0001d63c g     F .text	0000003e .hidden __fixunssfsi
00014fa0 g     F .text	00000014 tlm_stream_one_file
0001697c g     F .text	0000001c str::scanf(char const*, ...)
0001dea8 g     F .text	00000080 _fopen_r
000170a8 g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
00014d6c g     F .text	00000004 Light_Sensor::init()
0001e428 g     F .text	00000080 __smakebuf_r
00016d08 g     F .text	0000000c str::str(int)
0002007c g     F .text	00000010 strlen
000143aa g     F .text	00000038 disk_read
000186e8 g     F .text	00000024 pxPortInitialiseStack
0001f2a4 g     F .text	00000240 _printf_i
0001e3bc g     F .text	00000006 __locale_ctype_ptr_l
00027920 g     O .text	00000008 typeinfo for std::type_info
00017b78 g     F .text	0000001c CharDev::putline(char const*, unsigned int)
00020fc2 g     F .text	0000001a toupper
00024ba8 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00024b0c g     F .text	0000008a .hidden __gedf2
000180f0 g     F .text	00000024 UART3_IRQHandler
00022574 g     F .text	0000043e __gethex
2007c8c0 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001ada4 g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
00021768 g     F .text	00000028 div
0002003c g     F .text	0000001c strchr
000132b6 g     F .text	000000c8 f_getfree
00019774 g     F .text	00000018 vTaskSetTimeOutState
00013bfc g     F .text	0000003c ff_convert
0001cfac g     F .text	0000003a .hidden __aeabi_f2d
00016dc4 g     F .text	0000003c str::copyFrom(char const*)
00018738 g     F .text	00000020 vPortEnterCritical
00015a00 g     F .text	00000016 tlm_binary_get_size_one
00016be6 g     F .text	0000002a str::eraseFirstWords(int, char)
00027e30 g       .text	00000000 __symbol_table_start
00013e6c g     F .text	00000024 sd_update_card_status
000147e8 g     F .text	00000028 flash_read_permanent_id
000148d8 g     F .text	00000054 flash_get_page_write_count
2007c8bc g     O .bss	00000004 __malloc_free_list
000152f0 g     F .text	00000028 tlm_variable_get_by_name
00016cf8  w    F .text	00000010 str::init(int)
2007c784  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00010af8 g     F .text	00000010 nordic_rx_to_Stanby1
00018f3e g     F .text	00000004 uxQueueMessagesWaitingFromISR
000246d0 g     F .text	00000002 __env_lock
00017e30 g     F .text	00000014 rtc_get_date_time_str
00014ef8 g     F .text	00000080 tlm_stream_one
0001ccec g     F .text	0000027a .hidden __subdf3
00023bd4 g     F .text	0000022c _vfprintf_r
00027e30 g       .text	00000000 __preinit_array_start
000256a5  w    O .text	00000011 typeinfo name for scheduler_task
0001c372 g     F .text	0000000a LabGPIO::set(bool)
00022f32 g     F .text	0000005e __lo0bits
00023e00 g     F .text	000002a8 __svfscanf_r
00020fdc g     F .text	00000150 __tzcalc_limits
00019b18 g     F .text	00000028 vRunTimeStatIsrEntry
000245ec g     F .text	000000e4 _ungetc_r
0001c7f8 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
0001c6c6 g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
00018c84 g     F .text	00000024 xQueueCreateMutex
0001d140 g     F .text	00000160 .hidden __addsf3
0001c338 g     F .text	00000008 LabGPIO::setAsInput()
2007c144 g     O .data	0000016c __global_locale
00010cb8 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
00018d28 g     F .text	00000068 xQueueGiveFromISR
00022bd0 g     F .text	00000008 __gettzinfo
0001fe1c g     F .text	00000010 raise
000173e0 g     F .text	00000054 _close
0001e4b8 g     F .text	00000010 free
00025c44  w    O .text	00000020 typeinfo for Uart0
0001f4e4  w    F .text	000003c0 _scanf_float
00014158 g     F .text	0000021c sd_ioctl
00022e02 g     F .text	00000076 __multadd
0001c634 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00022dd4 g     F .text	0000002e _Bfree
0001884c g     F .text	00000014 rts_not_full_trace_reset
00017aa0 g     F .text	000000ac UartDev::init(unsigned int, unsigned int, int, int)
00022b9c g     F .text	0000000e _getenv_r
0001091c g     F .text	00000034 lpc_pconp
00018860 g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	11 87 01 00 39 01 01 00 00 00 00 00 71 87 01 00     ....9.......q...
   1003c:	59 01 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     Y...............
   1004c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1005c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1006c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1007c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1008c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1009c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100ac:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100bc:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	0002bc70 	.word	0x0002bc70
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000002fc 	.word	0x000002fc

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	000005f0 	.word	0x000005f0

000100e0 <isr_hard_fault>:
isr_hard_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 ba98 	b.w	10620 <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 ba94 	b.w	10620 <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f006 fb25 	bl	1674c <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	00024e12 	.word	0x00024e12

00010108 <isr_mem_fault>:
isr_mem_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f006 fb1e 	bl	1674c <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	00024e1d 	.word	0x00024e1d

00010118 <isr_bus_fault>:
isr_bus_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f006 fb16 	bl	1674c <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	00024e28 	.word	0x00024e28

00010128 <isr_usage_fault>:
isr_usage_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f006 fb0e 	bl	1674c <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	00024e33 	.word	0x00024e33

00010138 <isr_debug_mon>:
isr_debug_mon():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f006 fb06 	bl	1674c <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	00024e40 	.word	0x00024e40

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f006 fafe 	bl	1674c <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	00024e4e 	.word	0x00024e4e

00010158 <isr_sys_tick>:
isr_sys_tick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f009 fcdd 	bl	19b18 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f008 fb29 	bl	187b4 <xPortSysTickHandler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f009 bceb 	b.w	19b40 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 fbb8 	bl	1090a <__set_PSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 fbb8 	bl	10910 <__set_MSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f00d ffdc 	bl	1e188 <__libc_init_array>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f826 	bl	10220 <low_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f00b fdda 	bl	1bd8c <high_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f00c f9c2 	bl	1c560 <main>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb3e 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f006 fab1 	bl	1674c <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	00024e62 	.word	0x00024e62

00010200 <sys_get_boot_type>:
sys_get_boot_type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10200:	4b01      	ldr	r3, [pc, #4]	; (10208 <sys_get_boot_type+0x8>)
   10202:	7818      	ldrb	r0, [r3, #0]
   10204:	4770      	bx	lr
   10206:	bf00      	nop
   10208:	2007c30c 	.word	0x2007c30c

0001020c <sys_get_boot_time>:
sys_get_boot_time():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:127
rtc_t sys_get_boot_time()
{
    return g_rtc_boot_time;
   1020c:	4903      	ldr	r1, [pc, #12]	; (1021c <sys_get_boot_time+0x10>)
   1020e:	680b      	ldr	r3, [r1, #0]
   10210:	6003      	str	r3, [r0, #0]
   10212:	684b      	ldr	r3, [r1, #4]
   10214:	6043      	str	r3, [r0, #4]
   10216:	688b      	ldr	r3, [r1, #8]
   10218:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:128
}
   1021a:	4770      	bx	lr
   1021c:	2007c300 	.word	0x2007c300

00010220 <low_level_init()>:
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   10220:	b530      	push	{r4, r5, lr}
   10222:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10224:	f007 fd9c 	bl	17d60 <rtc_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10228:	4668      	mov	r0, sp
   1022a:	f007 fd41 	bl	17cb0 <rtc_gettime>
   1022e:	4c77      	ldr	r4, [pc, #476]	; (1040c <low_level_init()+0x1ec>)
   10230:	9b00      	ldr	r3, [sp, #0]
   10232:	6023      	str	r3, [r4, #0]
   10234:	9b01      	ldr	r3, [sp, #4]
   10236:	6063      	str	r3, [r4, #4]
   10238:	9b02      	ldr	r3, [sp, #8]
   1023a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   1023c:	f000 fa62 	bl	10704 <sys_clock_configure()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   10240:	f000 faba 	bl	107b8 <sys_get_cpu_clock>
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10244:	4b72      	ldr	r3, [pc, #456]	; (10410 <low_level_init()+0x1f0>)
   10246:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   1024a:	283c      	cmp	r0, #60	; 0x3c
   1024c:	4b71      	ldr	r3, [pc, #452]	; (10414 <low_level_init()+0x1f4>)
   1024e:	f200 809a 	bhi.w	10386 <low_level_init()+0x166>
   10252:	2829      	cmp	r0, #41	; 0x29
   10254:	f080 80a1 	bcs.w	1039a <low_level_init()+0x17a>
   10258:	2814      	cmp	r0, #20
   1025a:	f200 809b 	bhi.w	10394 <low_level_init()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1025e:	223a      	movs	r2, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   10260:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10262:	2308      	movs	r3, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10264:	2298      	movs	r2, #152	; 0x98
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10266:	496c      	ldr	r1, [pc, #432]	; (10418 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10268:	2000      	movs	r0, #0
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   1026a:	760b      	strb	r3, [r1, #24]
   1026c:	764b      	strb	r3, [r1, #25]
   1026e:	768b      	strb	r3, [r1, #26]
   10270:	f881 3020 	strb.w	r3, [r1, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10274:	4b69      	ldr	r3, [pc, #420]	; (1041c <low_level_init()+0x1fc>)
   10276:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1027a:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1027e:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   10282:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10286:	2290      	movs	r2, #144	; 0x90
   10288:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1028c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   10290:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10294:	2270      	movs	r2, #112	; 0x70
   10296:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1029a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1029e:	2258      	movs	r2, #88	; 0x58
   102a0:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   102a4:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   102a8:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   102ac:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   102b0:	2278      	movs	r2, #120	; 0x78
   102b2:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102b6:	22a0      	movs	r2, #160	; 0xa0
   102b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102bc:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102c0:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102c4:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102c8:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102cc:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102d0:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102d4:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102d8:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102dc:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102e0:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102e4:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102e8:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102ec:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102f0:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102f4:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102f8:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102fc:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   10300:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   10304:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   10308:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   1030c:	68cb      	ldr	r3, [r1, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   1030e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   10312:	041b      	lsls	r3, r3, #16
   10314:	0c1b      	lsrs	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10316:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1031a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1031e:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   10320:	f000 faf9 	bl	10916 <__set_BASEPRI>
__enable_fault_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10324:	b661      	cpsie	f
__enable_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10326:	b662      	cpsie	i
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10328:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1032c:	f000 fa98 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   10330:	483b      	ldr	r0, [pc, #236]	; (10420 <low_level_init()+0x200>)
   10332:	f006 fea5 	bl	17080 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10336:	483b      	ldr	r0, [pc, #236]	; (10424 <low_level_init()+0x204>)
   10338:	f006 fea8 	bl	1708c <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   1033c:	2300      	movs	r3, #0
   1033e:	4c3a      	ldr	r4, [pc, #232]	; (10428 <low_level_init()+0x208>)
   10340:	4619      	mov	r1, r3
   10342:	6820      	ldr	r0, [r4, #0]
   10344:	2202      	movs	r2, #2
   10346:	6880      	ldr	r0, [r0, #8]
   10348:	f00f fc8e 	bl	1fc68 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1034c:	2300      	movs	r3, #0
   1034e:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10350:	4c30      	ldr	r4, [pc, #192]	; (10414 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10352:	4619      	mov	r1, r3
   10354:	2202      	movs	r2, #2
   10356:	6840      	ldr	r0, [r0, #4]
   10358:	f00f fc86 	bl	1fc68 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   1035c:	f006 feb0 	bl	170c0 <syscalls_init>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10360:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10364:	4d31      	ldr	r5, [pc, #196]	; (1042c <low_level_init()+0x20c>)
   10366:	f013 0f01 	tst.w	r3, #1
   1036a:	d01f      	beq.n	103ac <low_level_init()+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   1036c:	4830      	ldr	r0, [pc, #192]	; (10430 <low_level_init()+0x210>)
   1036e:	f000 fabf 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   10372:	2301      	movs	r3, #1
   10374:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10376:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1037a:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1037e:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   10382:	b005      	add	sp, #20
   10384:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10386:	2850      	cmp	r0, #80	; 0x50
   10388:	d90a      	bls.n	103a0 <low_level_init()+0x180>
   1038a:	2864      	cmp	r0, #100	; 0x64
   1038c:	d90b      	bls.n	103a6 <low_level_init()+0x186>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1038e:	f245 023a 	movw	r2, #20538	; 0x503a
   10392:	e765      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10394:	f241 023a 	movw	r2, #4154	; 0x103a
   10398:	e762      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   1039a:	f242 023a 	movw	r2, #8250	; 0x203a
   1039e:	e75f      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   103a0:	f243 023a 	movw	r2, #12346	; 0x303a
   103a4:	e75c      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   103a6:	f244 023a 	movw	r2, #16442	; 0x403a
   103aa:	e759      	b.n	10260 <low_level_init()+0x40>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   103ac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b0:	079b      	lsls	r3, r3, #30
   103b2:	d509      	bpl.n	103c8 <low_level_init()+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103b4:	481f      	ldr	r0, [pc, #124]	; (10434 <low_level_init()+0x214>)
   103b6:	f000 fa9b 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103ba:	2302      	movs	r3, #2
   103bc:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103be:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103c2:	f043 0302 	orr.w	r3, r3, #2
   103c6:	e7da      	b.n	1037e <low_level_init()+0x15e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103cc:	f013 0304 	ands.w	r3, r3, #4
   103d0:	d019      	beq.n	10406 <low_level_init()+0x1e6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103d2:	4b19      	ldr	r3, [pc, #100]	; (10438 <low_level_init()+0x218>)
   103d4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103d6:	4b19      	ldr	r3, [pc, #100]	; (1043c <low_level_init()+0x21c>)
   103d8:	429a      	cmp	r2, r3
   103da:	d108      	bne.n	103ee <low_level_init()+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103dc:	2305      	movs	r3, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103de:	4818      	ldr	r0, [pc, #96]	; (10440 <low_level_init()+0x220>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103e0:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103e2:	f000 fa85 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103e6:	2200      	movs	r2, #0
   103e8:	4b13      	ldr	r3, [pc, #76]	; (10438 <low_level_init()+0x218>)
   103ea:	649a      	str	r2, [r3, #72]	; 0x48
   103ec:	e7c9      	b.n	10382 <low_level_init()+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103ee:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f0:	4814      	ldr	r0, [pc, #80]	; (10444 <low_level_init()+0x224>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103f2:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f4:	f000 fa7c 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103fc:	f043 0304 	orr.w	r3, r3, #4
   10400:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   10404:	e7ef      	b.n	103e6 <low_level_init()+0x1c6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   10406:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   10408:	e7bb      	b.n	10382 <low_level_init()+0x162>
   1040a:	bf00      	nop
   1040c:	2007c300 	.word	0x2007c300
   10410:	000f4240 	.word	0x000f4240
   10414:	400fc000 	.word	0x400fc000
   10418:	e000ed00 	.word	0xe000ed00
   1041c:	e000e100 	.word	0xe000e100
   10420:	000108d9 	.word	0x000108d9
   10424:	000108c1 	.word	0x000108c1
   10428:	2007c0e0 	.word	0x2007c0e0
   1042c:	2007c30c 	.word	0x2007c30c
   10430:	00024c98 	.word	0x00024c98
   10434:	00024cdb 	.word	0x00024cdb
   10438:	40024000 	.word	0x40024000
   1043c:	deadbeef 	.word	0xdeadbeef
   10440:	00024cb5 	.word	0x00024cb5
   10444:	00024cd2 	.word	0x00024cd2

00010448 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10448:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   1044a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   1044c:	4b0f      	ldr	r3, [pc, #60]	; (1048c <lpc_sys_setup_system_timer+0x44>)
   1044e:	4c10      	ldr	r4, [pc, #64]	; (10490 <lpc_sys_setup_system_timer+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10450:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   10452:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10454:	f008 f824 	bl	184a0 <lpc_timer_enable>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   10458:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1045c:	6823      	ldr	r3, [r4, #0]
   1045e:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10460:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10464:	61da      	str	r2, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   10466:	2200      	movs	r2, #0
   10468:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   1046a:	4a0a      	ldr	r2, [pc, #40]	; (10494 <lpc_sys_setup_system_timer+0x4c>)
   1046c:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   1046e:	f240 2209 	movw	r2, #521	; 0x209
   10472:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   10474:	695a      	ldr	r2, [r3, #20]
   10476:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1047a:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   1047c:	2218      	movs	r2, #24
   1047e:	4b06      	ldr	r3, [pc, #24]	; (10498 <lpc_sys_setup_system_timer+0x50>)
   10480:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10484:	2204      	movs	r2, #4
   10486:	601a      	str	r2, [r3, #0]
   10488:	bd10      	pop	{r4, pc}
   1048a:	bf00      	nop
   1048c:	40008000 	.word	0x40008000
   10490:	2007c318 	.word	0x2007c318
   10494:	0016e360 	.word	0x0016e360
   10498:	e000e100 	.word	0xe000e100

0001049c <sys_get_uptime_us>:
sys_get_uptime_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   1049c:	4b08      	ldr	r3, [pc, #32]	; (104c0 <sys_get_uptime_us+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1049e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a0:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a2:	4c08      	ldr	r4, [pc, #32]	; (104c4 <sys_get_uptime_us+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a4:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a6:	8821      	ldrh	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   104a8:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104aa:	b289      	uxth	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   104ac:	4282      	cmp	r2, r0
   104ae:	d8f9      	bhi.n	104a4 <sys_get_uptime_us+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   104b0:	460b      	mov	r3, r1
   104b2:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   104b4:	ea42 0200 	orr.w	r2, r2, r0
   104b8:	4610      	mov	r0, r2
   104ba:	4619      	mov	r1, r3
   104bc:	bd10      	pop	{r4, pc}
   104be:	bf00      	nop
   104c0:	2007c318 	.word	0x2007c318
   104c4:	2007c314 	.word	0x2007c314

000104c8 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   104c8:	b510      	push	{r4, lr}
   104ca:	4604      	mov	r4, r0
   104cc:	b08e      	sub	sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   104ce:	a806      	add	r0, sp, #24
   104d0:	f006 fcd6 	bl	16e80 <sys_get_mem_info>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   104d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   104d6:	9a06      	ldr	r2, [sp, #24]
   104d8:	9305      	str	r3, [sp, #20]
   104da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   104dc:	4907      	ldr	r1, [pc, #28]	; (104fc <sys_get_mem_info_str+0x34>)
   104de:	9304      	str	r3, [sp, #16]
   104e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   104e2:	4620      	mov	r0, r4
   104e4:	9303      	str	r3, [sp, #12]
   104e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104e8:	9302      	str	r3, [sp, #8]
   104ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
   104ec:	9301      	str	r3, [sp, #4]
   104ee:	9b08      	ldr	r3, [sp, #32]
   104f0:	9300      	str	r3, [sp, #0]
   104f2:	9b07      	ldr	r3, [sp, #28]
   104f4:	f00f fce2 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   104f8:	b00e      	add	sp, #56	; 0x38
   104fa:	bd10      	pop	{r4, pc}
   104fc:	00024d16 	.word	0x00024d16

00010500 <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   10500:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   10502:	4c04      	ldr	r4, [pc, #16]	; (10514 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   10504:	6823      	ldr	r3, [r4, #0]
   10506:	b91b      	cbnz	r3, 10510 <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   10508:	2001      	movs	r0, #1
   1050a:	f006 fcb1 	bl	16e70 <operator new(unsigned int)>
   1050e:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   10510:	6820      	ldr	r0, [r4, #0]
   10512:	bd10      	pop	{r4, pc}
   10514:	2007c310 	.word	0x2007c310

00010518 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10518:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   1051a:	4c2b      	ldr	r4, [pc, #172]	; (105c8 <TIMER1_IRQHandler+0xb0>)
   1051c:	6823      	ldr	r3, [r4, #0]
   1051e:	4625      	mov	r5, r4
   10520:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   10522:	f012 0f10 	tst.w	r2, #16
   10526:	d00e      	beq.n	10546 <TIMER1_IRQHandler+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10528:	2210      	movs	r2, #16
   1052a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   1052c:	f7ff ffe8 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
   10530:	6823      	ldr	r3, [r4, #0]
   10532:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10534:	f004 fb44 	bl	14bc0 <IR_Sensor::storeIrCode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10538:	6822      	ldr	r2, [r4, #0]
   1053a:	6893      	ldr	r3, [r2, #8]
   1053c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   10540:	3310      	adds	r3, #16
   10542:	6213      	str	r3, [r2, #32]
   10544:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   10546:	0754      	lsls	r4, r2, #29
   10548:	d507      	bpl.n	1055a <TIMER1_IRQHandler+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   1054a:	2204      	movs	r2, #4
   1054c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   1054e:	f7ff ffd7 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   10552:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   10556:	f004 bb41 	b.w	14bdc <IR_Sensor::decodeIrCode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   1055a:	07d0      	lsls	r0, r2, #31
   1055c:	d507      	bpl.n	1056e <TIMER1_IRQHandler+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   1055e:	2201      	movs	r2, #1
   10560:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   10562:	4a1a      	ldr	r2, [pc, #104]	; (105cc <TIMER1_IRQHandler+0xb4>)
   10564:	8813      	ldrh	r3, [r2, #0]
   10566:	3301      	adds	r3, #1
   10568:	b29b      	uxth	r3, r3
   1056a:	8013      	strh	r3, [r2, #0]
   1056c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   1056e:	0791      	lsls	r1, r2, #30
   10570:	d515      	bpl.n	1059e <TIMER1_IRQHandler+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   10572:	2202      	movs	r2, #2
   10574:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   10576:	f009 f9ff 	bl	19978 <xTaskGetSchedulerState>
   1057a:	2802      	cmp	r0, #2
   1057c:	d009      	beq.n	10592 <TIMER1_IRQHandler+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   1057e:	f000 fd7d 	bl	1107c <wireless_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10582:	682a      	ldr	r2, [r5, #0]
   10584:	6893      	ldr	r3, [r2, #8]
   10586:	69d1      	ldr	r1, [r2, #28]
   10588:	440b      	add	r3, r1
   1058a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1058e:	61d3      	str	r3, [r2, #28]
   10590:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   10592:	682a      	ldr	r2, [r5, #0]
   10594:	6953      	ldr	r3, [r2, #20]
   10596:	f023 0308 	bic.w	r3, r3, #8
   1059a:	6153      	str	r3, [r2, #20]
   1059c:	e7f1      	b.n	10582 <TIMER1_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1059e:	0712      	lsls	r2, r2, #28
   105a0:	d50e      	bpl.n	105c0 <TIMER1_IRQHandler+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   105a2:	2208      	movs	r2, #8
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   105a4:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   105a6:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   105a8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   105ac:	7211      	strb	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   105ae:	2155      	movs	r1, #85	; 0x55
   105b0:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   105b2:	689a      	ldr	r2, [r3, #8]
   105b4:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   105b8:	f502 7258 	add.w	r2, r2, #864	; 0x360
   105bc:	625a      	str	r2, [r3, #36]	; 0x24
   105be:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   105c0:	4803      	ldr	r0, [pc, #12]	; (105d0 <TIMER1_IRQHandler+0xb8>)
   105c2:	f00f f9f5 	bl	1f9b0 <puts>
   105c6:	e7fe      	b.n	105c6 <TIMER1_IRQHandler+0xae>
   105c8:	2007c318 	.word	0x2007c318
   105cc:	2007c314 	.word	0x2007c314
   105d0:	00024cf5 	.word	0x00024cf5

000105d4 <isr_forwarder_routine>:
isr_forwarder_routine():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   105d4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   105d6:	f009 fa9f 	bl	19b18 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105da:	4b09      	ldr	r3, [pc, #36]	; (10600 <isr_forwarder_routine+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105dc:	4a09      	ldr	r2, [pc, #36]	; (10604 <isr_forwarder_routine+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105de:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e0:	4b09      	ldr	r3, [pc, #36]	; (10608 <isr_forwarder_routine+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105e2:	3910      	subs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e4:	b2c9      	uxtb	r1, r1
   105e6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105ea:	4293      	cmp	r3, r2
   105ec:	d103      	bne.n	105f6 <isr_forwarder_routine+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   105ee:	4807      	ldr	r0, [pc, #28]	; (1060c <isr_forwarder_routine+0x38>)
   105f0:	f006 f8bb 	bl	1676a <u0_dbg_printf>
   105f4:	e7fe      	b.n	105f4 <isr_forwarder_routine+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   105f6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   105f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   105fc:	f009 baa0 	b.w	19b40 <vRunTimeStatIsrExit>
   10600:	e000ed04 	.word	0xe000ed04
   10604:	00010149 	.word	0x00010149
   10608:	2007c000 	.word	0x2007c000
   1060c:	00024ddb 	.word	0x00024ddb

00010610 <isr_register>:
isr_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:338
    if (num >= 0) {
   10610:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:339
        g_isr_array[num] = isr_func_ptr;
   10612:	bfa4      	itt	ge
   10614:	4b01      	ldrge	r3, [pc, #4]	; (1061c <isr_register+0xc>)
   10616:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
   1061a:	4770      	bx	lr
   1061c:	2007c000 	.word	0x2007c000

00010620 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10620:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   10622:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10624:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10626:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10628:	4a11      	ldr	r2, [pc, #68]	; (10670 <isr_hard_fault_handler+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   1062a:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   1062c:	6883      	ldr	r3, [r0, #8]
   1062e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   10630:	68c3      	ldr	r3, [r0, #12]
   10632:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10634:	6903      	ldr	r3, [r0, #16]
   10636:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10638:	6943      	ldr	r3, [r0, #20]
   1063a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   1063c:	6983      	ldr	r3, [r0, #24]
   1063e:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   10640:	69c3      	ldr	r3, [r0, #28]
   10642:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10644:	4b0b      	ldr	r3, [pc, #44]	; (10674 <isr_hard_fault_handler+0x54>)
   10646:	649a      	str	r2, [r3, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10648:	9a06      	ldr	r2, [sp, #24]
   1064a:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   1064c:	9a05      	ldr	r2, [sp, #20]
   1064e:	3a01      	subs	r2, #1
   10650:	651a      	str	r2, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   10652:	9a07      	ldr	r2, [sp, #28]
   10654:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10656:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1065a:	22aa      	movs	r2, #170	; 0xaa
   1065c:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1065e:	2200      	movs	r2, #0
   10660:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   10662:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10664:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10666:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10668:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   1066a:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   1066c:	b008      	add	sp, #32
   1066e:	4770      	bx	lr
   10670:	deadbeef 	.word	0xdeadbeef
   10674:	40024000 	.word	0x40024000

00010678 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   10678:	22aa      	movs	r2, #170	; 0xaa
   1067a:	4b03      	ldr	r3, [pc, #12]	; (10688 <sys_clock_pll0_feed()+0x10>)
   1067c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   10680:	2255      	movs	r2, #85	; 0x55
   10682:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10686:	4770      	bx	lr
   10688:	400fc000 	.word	0x400fc000

0001068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   1068c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   10690:	2400      	movs	r4, #0
   10692:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10694:	6014      	str	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10696:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10698:	f240 14ff 	movw	r4, #511	; 0x1ff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   1069c:	f8df a060 	ldr.w	sl, [pc, #96]	; 10700 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   106a0:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106a4:	2600      	movs	r6, #0
   106a6:	fb04 5b05 	mla	fp, r4, r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   106aa:	f106 0c01 	add.w	ip, r6, #1
   106ae:	fbbb f8fc 	udiv	r8, fp, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106b2:	4f12      	ldr	r7, [pc, #72]	; (106fc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   106b4:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   106b8:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   106bc:	42bd      	cmp	r5, r7
   106be:	d91a      	bls.n	106f6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   106c0:	4666      	mov	r6, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   106c2:	2e20      	cmp	r6, #32
   106c4:	d1f1      	bne.n	106aa <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106c6:	3c01      	subs	r4, #1
   106c8:	2c05      	cmp	r4, #5
   106ca:	d1e9      	bne.n	106a0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   106cc:	2000      	movs	r0, #0
   106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   106d2:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   106d6:	464d      	mov	r5, r9
   106d8:	d0f2      	beq.n	106c0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   106da:	f105 0901 	add.w	r9, r5, #1
   106de:	fbb8 fef9 	udiv	lr, r8, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   106e2:	45d6      	cmp	lr, sl
   106e4:	d8f5      	bhi.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106e6:	4586      	cmp	lr, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   106e8:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   106ea:	6016      	str	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   106ec:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106ee:	d1f0      	bne.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   106f0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   106f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106f6:	2503      	movs	r5, #3
   106f8:	e7ef      	b.n	106da <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   106fa:	bf00      	nop
   106fc:	00043238 	.word	0x00043238
   10700:	000186a0 	.word	0x000186a0

00010704 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   10704:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   10706:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10708:	492a      	ldr	r1, [pc, #168]	; (107b4 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   1070a:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1070c:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   10710:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10712:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   10716:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   1071a:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   1071c:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1071e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   10722:	f7ff ffa9 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   10726:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   1072a:	f023 0301 	bic.w	r3, r3, #1
   1072e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   10732:	f7ff ffa1 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   10736:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   1073a:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   1073e:	f7ff ff9b 	bl	10678 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10742:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   10744:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10748:	aa02      	add	r2, sp, #8
   1074a:	a901      	add	r1, sp, #4
   1074c:	f64b 3080 	movw	r0, #48000	; 0xbb80
   10750:	f7ff ff9c 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   10754:	b930      	cbnz	r0, 10764 <sys_clock_configure()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   10756:	462b      	mov	r3, r5
   10758:	aa02      	add	r2, sp, #8
   1075a:	a901      	add	r1, sp, #4
   1075c:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   10760:	f7ff ff94 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   10764:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10766:	4913      	ldr	r1, [pc, #76]	; (107b4 <sys_clock_configure()+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   10768:	f363 040f 	bfi	r4, r3, #0, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   1076c:	9b02      	ldr	r3, [sp, #8]
   1076e:	f363 4417 	bfi	r4, r3, #16, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10772:	2300      	movs	r3, #0
   10774:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   10778:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   1077c:	f7ff ff7c 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   10780:	2301      	movs	r3, #1
   10782:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10786:	f7ff ff77 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   1078a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1078e:	015b      	lsls	r3, r3, #5
   10790:	d5fb      	bpl.n	1078a <sys_clock_configure()+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   10792:	9b03      	ldr	r3, [sp, #12]
   10794:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10798:	2303      	movs	r3, #3
   1079a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1079e:	f7ff ff6b 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   107a2:	4a04      	ldr	r2, [pc, #16]	; (107b4 <sys_clock_configure()+0xb0>)
   107a4:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   107a8:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   107ac:	d0fa      	beq.n	107a4 <sys_clock_configure()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   107ae:	b005      	add	sp, #20
   107b0:	bd30      	pop	{r4, r5, pc}
   107b2:	bf00      	nop
   107b4:	400fc000 	.word	0x400fc000

000107b8 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107b8:	4b24      	ldr	r3, [pc, #144]	; (1084c <sys_get_cpu_clock+0x94>)
   107ba:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   107be:	f3c2 6201 	ubfx	r2, r2, #24, #2
   107c2:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107c4:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   107c8:	f002 0203 	and.w	r2, r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107cc:	d12d      	bne.n	1082a <sys_get_cpu_clock+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107ce:	2a01      	cmp	r2, #1
   107d0:	d016      	beq.n	10800 <sys_get_cpu_clock+0x48>
   107d2:	2a02      	cmp	r2, #2
   107d4:	d01e      	beq.n	10814 <sys_get_cpu_clock+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107d6:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107da:	481d      	ldr	r0, [pc, #116]	; (10850 <sys_get_cpu_clock+0x98>)
   107dc:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107e0:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107e4:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107e8:	fb01 0000 	mla	r0, r1, r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107ec:	f3c2 4207 	ubfx	r2, r2, #16, #8
   107f0:	3201      	adds	r2, #1
   107f2:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107f6:	b2db      	uxtb	r3, r3
   107f8:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   107fa:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   107fe:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10800:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10804:	4813      	ldr	r0, [pc, #76]	; (10854 <sys_get_cpu_clock+0x9c>)
   10806:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1080a:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1080e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   10812:	e7e9      	b.n	107e8 <sys_get_cpu_clock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10814:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10818:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1081c:	f3c0 000e 	ubfx	r0, r0, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10820:	3001      	adds	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10822:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10826:	0400      	lsls	r0, r0, #16
   10828:	e7e0      	b.n	107ec <sys_get_cpu_clock+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1082a:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1082e:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10830:	b2c0      	uxtb	r0, r0
   10832:	f100 0301 	add.w	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10836:	d003      	beq.n	10840 <sys_get_cpu_clock+0x88>
   10838:	2a02      	cmp	r2, #2
   1083a:	d003      	beq.n	10844 <sys_get_cpu_clock+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1083c:	4806      	ldr	r0, [pc, #24]	; (10858 <sys_get_cpu_clock+0xa0>)
   1083e:	e7dc      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10840:	4806      	ldr	r0, [pc, #24]	; (1085c <sys_get_cpu_clock+0xa4>)
   10842:	e7da      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10844:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10848:	e7d7      	b.n	107fa <sys_get_cpu_clock+0x42>
   1084a:	bf00      	nop
   1084c:	400fc000 	.word	0x400fc000
   10850:	007a1200 	.word	0x007a1200
   10854:	016e3600 	.word	0x016e3600
   10858:	003d0900 	.word	0x003d0900
   1085c:	00b71b00 	.word	0x00b71b00

00010860 <uart0_init>:
uart0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   10860:	b510      	push	{r4, lr}
   10862:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10864:	f7ff ffa8 	bl	107b8 <sys_get_cpu_clock>
   10868:	0124      	lsls	r4, r4, #4
   1086a:	fbb0 f0f4 	udiv	r0, r0, r4
   1086e:	f00c fb7b 	bl	1cf68 <__aeabi_ui2d>
   10872:	2200      	movs	r2, #0
   10874:	4b10      	ldr	r3, [pc, #64]	; (108b8 <uart0_init+0x58>)
   10876:	f00c fa3b 	bl	1ccf0 <__adddf3>
   1087a:	f00c fbeb 	bl	1d054 <__aeabi_d2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   1087e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10880:	b284      	uxth	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   10882:	2003      	movs	r0, #3
   10884:	f000 f84a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10888:	2101      	movs	r1, #1
   1088a:	2003      	movs	r0, #3
   1088c:	f000 f860 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   10890:	4b0a      	ldr	r3, [pc, #40]	; (108bc <uart0_init+0x5c>)
   10892:	681a      	ldr	r2, [r3, #0]
   10894:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10898:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   1089a:	681a      	ldr	r2, [r3, #0]
   1089c:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   108a0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   108a2:	2280      	movs	r2, #128	; 0x80
   108a4:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   108a8:	731a      	strb	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   108aa:	0a22      	lsrs	r2, r4, #8
   108ac:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108ae:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   108b0:	b2e4      	uxtb	r4, r4
   108b2:	701c      	strb	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108b4:	731a      	strb	r2, [r3, #12]
   108b6:	bd10      	pop	{r4, pc}
   108b8:	3fe00000 	.word	0x3fe00000
   108bc:	4002c000 	.word	0x4002c000

000108c0 <uart0_getchar>:
uart0_getchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   108c0:	4a03      	ldr	r2, [pc, #12]	; (108d0 <uart0_getchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   108c2:	6813      	ldr	r3, [r2, #0]
   108c4:	07db      	lsls	r3, r3, #31
   108c6:	d5fc      	bpl.n	108c2 <uart0_getchar+0x2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   108c8:	4b02      	ldr	r3, [pc, #8]	; (108d4 <uart0_getchar+0x14>)
   108ca:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   108cc:	4770      	bx	lr
   108ce:	bf00      	nop
   108d0:	4000c014 	.word	0x4000c014
   108d4:	4000c000 	.word	0x4000c000

000108d8 <uart0_putchar>:
uart0_putchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   108d8:	4b03      	ldr	r3, [pc, #12]	; (108e8 <uart0_putchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   108da:	4a04      	ldr	r2, [pc, #16]	; (108ec <uart0_putchar+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   108dc:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   108de:	6813      	ldr	r3, [r2, #0]
   108e0:	065b      	lsls	r3, r3, #25
   108e2:	d5fc      	bpl.n	108de <uart0_putchar+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   108e4:	2001      	movs	r0, #1
   108e6:	4770      	bx	lr
   108e8:	4000c000 	.word	0x4000c000
   108ec:	4000c014 	.word	0x4000c014

000108f0 <uart0_puts>:
uart0_puts():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   108f0:	b508      	push	{r3, lr}
   108f2:	1e41      	subs	r1, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   108f4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   108f8:	b920      	cbnz	r0, 10904 <uart0_puts+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   108fa:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   108fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   10900:	f7ff bfea 	b.w	108d8 <uart0_putchar>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   10904:	f7ff ffe8 	bl	108d8 <uart0_putchar>
   10908:	e7f4      	b.n	108f4 <uart0_puts+0x4>

0001090a <__set_PSP>:
__set_PSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   1090a:	f380 8809 	msr	PSP, r0
   1090e:	4770      	bx	lr

00010910 <__set_MSP>:
__set_MSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   10910:	f380 8808 	msr	MSP, r0
   10914:	4770      	bx	lr

00010916 <__set_BASEPRI>:
__set_BASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   10916:	f380 8811 	msr	BASEPRI, r0
   1091a:	4770      	bx	lr

0001091c <lpc_pconp>:
lpc_pconp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   1091c:	b538      	push	{r3, r4, r5, lr}
   1091e:	460d      	mov	r5, r1
   10920:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   10922:	f007 ff09 	bl	18738 <vPortEnterCritical>
   10926:	4a09      	ldr	r2, [pc, #36]	; (1094c <lpc_pconp+0x30>)
   10928:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   1092a:	b14d      	cbz	r5, 10940 <lpc_pconp+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   1092c:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   10930:	40a3      	lsls	r3, r4
   10932:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10934:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10938:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   1093c:	f007 bf0c 	b.w	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10940:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10944:	40a3      	lsls	r3, r4
   10946:	ea21 0303 	bic.w	r3, r1, r3
   1094a:	e7f3      	b.n	10934 <lpc_pconp+0x18>
   1094c:	400fc000 	.word	0x400fc000

00010950 <lpc_pclk>:
lpc_pclk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   10950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10954:	ea4f 0840 	mov.w	r8, r0, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10958:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   1095a:	f007 feed 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1095e:	4642      	mov	r2, r8
   10960:	2003      	movs	r0, #3
   10962:	2100      	movs	r1, #0
   10964:	f00c f9b2 	bl	1cccc <__aeabi_llsl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10968:	4f0a      	ldr	r7, [pc, #40]	; (10994 <lpc_pclk+0x44>)
   1096a:	4642      	mov	r2, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1096c:	e9d7 4500 	ldrd	r4, r5, [r7]
   10970:	ea24 0400 	bic.w	r4, r4, r0
   10974:	ea25 0501 	bic.w	r5, r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10978:	f006 0003 	and.w	r0, r6, #3
   1097c:	2100      	movs	r1, #0
   1097e:	f00c f9a5 	bl	1cccc <__aeabi_llsl>
   10982:	4320      	orrs	r0, r4
   10984:	4329      	orrs	r1, r5
   10986:	e9c7 0100 	strd	r0, r1, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   1098a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   1098e:	f007 bee3 	b.w	18758 <vPortExitCritical>
   10992:	bf00      	nop
   10994:	400fc1a8 	.word	0x400fc1a8

00010998 <nordic_transfer>:
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   10998:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   1099a:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1099e:	4c36      	ldr	r4, [pc, #216]	; (10a78 <nordic_transfer+0xe0>)
   109a0:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   109a2:	4c36      	ldr	r4, [pc, #216]	; (10a7c <nordic_transfer+0xe4>)
   109a4:	60a0      	str	r0, [r4, #8]
   109a6:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109a8:	68c4      	ldr	r4, [r0, #12]
   109aa:	06e4      	lsls	r4, r4, #27
   109ac:	d4fc      	bmi.n	109a8 <nordic_transfer+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ae:	6880      	ldr	r0, [r0, #8]
   109b0:	b2c0      	uxtb	r0, r0
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   109b2:	b963      	cbnz	r3, 109ce <nordic_transfer+0x36>
   109b4:	460b      	mov	r3, r1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   109b6:	4c31      	ldr	r4, [pc, #196]	; (10a7c <nordic_transfer+0xe4>)
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   109b8:	1a5d      	subs	r5, r3, r1
   109ba:	4295      	cmp	r5, r2
   109bc:	da09      	bge.n	109d2 <nordic_transfer+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   109be:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   109c2:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109c4:	68e5      	ldr	r5, [r4, #12]
   109c6:	06ed      	lsls	r5, r5, #27
   109c8:	d4fc      	bmi.n	109c4 <nordic_transfer+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ca:	68a5      	ldr	r5, [r4, #8]
   109cc:	e7f4      	b.n	109b8 <nordic_transfer+0x20>
   109ce:	4b2b      	ldr	r3, [pc, #172]	; (10a7c <nordic_transfer+0xe4>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   109d0:	b922      	cbnz	r2, 109dc <nordic_transfer+0x44>
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   109d2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   109d6:	4b28      	ldr	r3, [pc, #160]	; (10a78 <nordic_transfer+0xe0>)
   109d8:	619a      	str	r2, [r3, #24]
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   109da:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   109dc:	2a07      	cmp	r2, #7
   109de:	780c      	ldrb	r4, [r1, #0]
   109e0:	dd29      	ble.n	10a36 <nordic_transfer+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e2:	609c      	str	r4, [r3, #8]
   109e4:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   109e6:	3a08      	subs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e8:	609c      	str	r4, [r3, #8]
   109ea:	788c      	ldrb	r4, [r1, #2]
   109ec:	609c      	str	r4, [r3, #8]
   109ee:	78cc      	ldrb	r4, [r1, #3]
   109f0:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109f2:	790c      	ldrb	r4, [r1, #4]
   109f4:	609c      	str	r4, [r3, #8]
   109f6:	794c      	ldrb	r4, [r1, #5]
   109f8:	609c      	str	r4, [r3, #8]
   109fa:	798c      	ldrb	r4, [r1, #6]
   109fc:	609c      	str	r4, [r3, #8]
   109fe:	79cd      	ldrb	r5, [r1, #7]
   10a00:	f101 0408 	add.w	r4, r1, #8
   10a04:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   10a06:	699d      	ldr	r5, [r3, #24]
   10a08:	076d      	lsls	r5, r5, #29
   10a0a:	d5fc      	bpl.n	10a06 <nordic_transfer+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a0c:	689d      	ldr	r5, [r3, #8]
   10a0e:	700d      	strb	r5, [r1, #0]
   10a10:	689d      	ldr	r5, [r3, #8]
   10a12:	704d      	strb	r5, [r1, #1]
   10a14:	689d      	ldr	r5, [r3, #8]
   10a16:	708d      	strb	r5, [r1, #2]
   10a18:	689d      	ldr	r5, [r3, #8]
   10a1a:	70cd      	strb	r5, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   10a1c:	68dd      	ldr	r5, [r3, #12]
   10a1e:	06ed      	lsls	r5, r5, #27
   10a20:	d4fc      	bmi.n	10a1c <nordic_transfer+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a22:	689d      	ldr	r5, [r3, #8]
   10a24:	710d      	strb	r5, [r1, #4]
   10a26:	689d      	ldr	r5, [r3, #8]
   10a28:	714d      	strb	r5, [r1, #5]
   10a2a:	689d      	ldr	r5, [r3, #8]
   10a2c:	718d      	strb	r5, [r1, #6]
   10a2e:	689d      	ldr	r5, [r3, #8]
   10a30:	71cd      	strb	r5, [r1, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a32:	4621      	mov	r1, r4
   10a34:	e7cc      	b.n	109d0 <nordic_transfer+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   10a36:	2a03      	cmp	r2, #3
   10a38:	dd14      	ble.n	10a64 <nordic_transfer+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a3a:	609c      	str	r4, [r3, #8]
   10a3c:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   10a3e:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a40:	609c      	str	r4, [r3, #8]
   10a42:	788c      	ldrb	r4, [r1, #2]
   10a44:	609c      	str	r4, [r3, #8]
   10a46:	78cd      	ldrb	r5, [r1, #3]
   10a48:	1d0c      	adds	r4, r1, #4
   10a4a:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   10a4c:	68dd      	ldr	r5, [r3, #12]
   10a4e:	06ed      	lsls	r5, r5, #27
   10a50:	d4fc      	bmi.n	10a4c <nordic_transfer+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a52:	689d      	ldr	r5, [r3, #8]
   10a54:	700d      	strb	r5, [r1, #0]
   10a56:	689d      	ldr	r5, [r3, #8]
   10a58:	704d      	strb	r5, [r1, #1]
   10a5a:	689d      	ldr	r5, [r3, #8]
   10a5c:	708d      	strb	r5, [r1, #2]
   10a5e:	689d      	ldr	r5, [r3, #8]
   10a60:	70cd      	strb	r5, [r1, #3]
   10a62:	e7e6      	b.n	10a32 <nordic_transfer+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   10a64:	1c4d      	adds	r5, r1, #1
   10a66:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   10a68:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   10a6a:	68dc      	ldr	r4, [r3, #12]
   10a6c:	06e4      	lsls	r4, r4, #27
   10a6e:	d4fc      	bmi.n	10a6a <nordic_transfer+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   10a70:	689c      	ldr	r4, [r3, #8]
   10a72:	700c      	strb	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   10a74:	4629      	mov	r1, r5
   10a76:	e7ab      	b.n	109d0 <nordic_transfer+0x38>
   10a78:	2009c000 	.word	0x2009c000
   10a7c:	40088000 	.word	0x40088000

00010a80 <nordic_readRegister>:
nordic_readRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   10a80:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   10a82:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   10a84:	a902      	add	r1, sp, #8
   10a86:	f801 3d01 	strb.w	r3, [r1, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   10a8a:	2301      	movs	r3, #1
   10a8c:	f000 001f 	and.w	r0, r0, #31
   10a90:	461a      	mov	r2, r3
   10a92:	f7ff ff81 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   10a96:	f89d 0007 	ldrb.w	r0, [sp, #7]
   10a9a:	b003      	add	sp, #12
   10a9c:	f85d fb04 	ldr.w	pc, [sp], #4

00010aa0 <nordic_writeRegister>:
nordic_writeRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   10aa0:	b513      	push	{r0, r1, r4, lr}
   10aa2:	ac02      	add	r4, sp, #8
   10aa4:	f804 1d01 	strb.w	r1, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   10aa8:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   10aac:	2300      	movs	r3, #0
   10aae:	2201      	movs	r2, #1
   10ab0:	4621      	mov	r1, r4
   10ab2:	f040 0020 	orr.w	r0, r0, #32
   10ab6:	f7ff ff6f 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   10aba:	b002      	add	sp, #8
   10abc:	bd10      	pop	{r4, pc}

00010abe <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   10abe:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   10ac0:	2017      	movs	r0, #23
   10ac2:	f7ff ffdd 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   10ac6:	f3c0 1000 	ubfx	r0, r0, #4, #1
   10aca:	bd08      	pop	{r3, pc}

00010acc <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   10acc:	2170      	movs	r1, #112	; 0x70
   10ace:	2007      	movs	r0, #7
   10ad0:	f7ff bfe6 	b.w	10aa0 <nordic_writeRegister>

00010ad4 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   10ad4:	460a      	mov	r2, r1
   10ad6:	2300      	movs	r3, #0
   10ad8:	4601      	mov	r1, r0
   10ada:	20a0      	movs	r0, #160	; 0xa0
   10adc:	f7ff bf5c 	b.w	10998 <nordic_transfer>

00010ae0 <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   10ae0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10ae2:	2000      	movs	r0, #0
   10ae4:	f7ff ffcc 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   10ae8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10aec:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   10af0:	2000      	movs	r0, #0
   10af2:	f7ff bfd5 	b.w	10aa0 <nordic_writeRegister>
   10af6:	Address 0x0000000000010af6 is out of bounds.


00010af8 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10af8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10afc:	4b01      	ldr	r3, [pc, #4]	; (10b04 <nordic_rx_to_Stanby1+0xc>)
   10afe:	61da      	str	r2, [r3, #28]
   10b00:	4770      	bx	lr
   10b02:	bf00      	nop
   10b04:	2009c020 	.word	0x2009c020

00010b08 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   10b08:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   10b0a:	2000      	movs	r0, #0
   10b0c:	f7ff ffb8 	bl	10a80 <nordic_readRegister>
   10b10:	f040 0101 	orr.w	r1, r0, #1
   10b14:	b2c9      	uxtb	r1, r1
   10b16:	2000      	movs	r0, #0
   10b18:	f7ff ffc2 	bl	10aa0 <nordic_writeRegister>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   10b1c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b20:	4b01      	ldr	r3, [pc, #4]	; (10b28 <nordic_standby1_to_rx+0x20>)
   10b22:	619a      	str	r2, [r3, #24]
   10b24:	bd08      	pop	{r3, pc}
   10b26:	bf00      	nop
   10b28:	2009c020 	.word	0x2009c020

00010b2c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   10b2c:	2120      	movs	r1, #32
   10b2e:	2007      	movs	r0, #7
   10b30:	f7ff bfb6 	b.w	10aa0 <nordic_writeRegister>

00010b34 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   10b34:	2300      	movs	r3, #0
   10b36:	20e1      	movs	r0, #225	; 0xe1
   10b38:	461a      	mov	r2, r3
   10b3a:	4619      	mov	r1, r3
   10b3c:	f7ff bf2c 	b.w	10998 <nordic_transfer>

00010b40 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   10b40:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10b42:	4604      	mov	r4, r0
   10b44:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   10b46:	f7ff fff5 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   10b4a:	4620      	mov	r0, r4
   10b4c:	4629      	mov	r1, r5
   10b4e:	f7ff ffc1 	bl	10ad4 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   10b52:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b56:	4c0c      	ldr	r4, [pc, #48]	; (10b88 <nordic_mode1_send_single_packet+0x48>)
   10b58:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   10b5a:	2200      	movs	r2, #0
   10b5c:	f8ad 2006 	strh.w	r2, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b60:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10b64:	3301      	adds	r3, #1
   10b66:	b29b      	uxth	r3, r3
   10b68:	f8ad 3006 	strh.w	r3, [sp, #6]
   10b6c:	b933      	cbnz	r3, 10b7c <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10b6e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10b72:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   10b74:	f7ff ffde 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   10b78:	b003      	add	sp, #12
   10b7a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b7c:	f7ff ff9f 	bl	10abe <nordic_is_tx_fifo_empty>
   10b80:	2800      	cmp	r0, #0
   10b82:	d0ed      	beq.n	10b60 <nordic_mode1_send_single_packet+0x20>
   10b84:	e7f3      	b.n	10b6e <nordic_mode1_send_single_packet+0x2e>
   10b86:	bf00      	nop
   10b88:	2009c020 	.word	0x2009c020

00010b8c <nordic_is_packet_available>:
nordic_is_packet_available():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   10b8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   10b8e:	2017      	movs	r0, #23
   10b90:	f7ff ff76 	bl	10a80 <nordic_readRegister>
   10b94:	43c0      	mvns	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   10b96:	f000 0001 	and.w	r0, r0, #1
   10b9a:	bd08      	pop	{r3, pc}

00010b9c <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   10b9c:	2140      	movs	r1, #64	; 0x40
   10b9e:	2007      	movs	r0, #7
   10ba0:	f7ff bf7e 	b.w	10aa0 <nordic_writeRegister>

00010ba4 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   10ba4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   10ba6:	460a      	mov	r2, r1
   10ba8:	2301      	movs	r3, #1
   10baa:	4601      	mov	r1, r0
   10bac:	2061      	movs	r0, #97	; 0x61
   10bae:	f7ff fef3 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   10bb2:	f3c0 0042 	ubfx	r0, r0, #1, #3
   10bb6:	bd08      	pop	{r3, pc}

00010bb8 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   10bb8:	2300      	movs	r3, #0
   10bba:	20e2      	movs	r0, #226	; 0xe2
   10bbc:	461a      	mov	r2, r3
   10bbe:	4619      	mov	r1, r3
   10bc0:	f7ff beea 	b.w	10998 <nordic_transfer>

00010bc4 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   10bc4:	b570      	push	{r4, r5, r6, lr}
   10bc6:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bc8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   10bca:	460d      	mov	r5, r1
   10bcc:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bce:	f7ff ff57 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bd2:	b166      	cbz	r6, 10bee <nordic_set_intr_signals+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   10bd4:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bd8:	b16d      	cbz	r5, 10bf6 <nordic_set_intr_signals+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   10bda:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bde:	b16c      	cbz	r4, 10bfc <nordic_set_intr_signals+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   10be0:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   10be4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   10be6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   10bea:	f7ff bf59 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bee:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   10bf2:	b2c0      	uxtb	r0, r0
   10bf4:	e7f0      	b.n	10bd8 <nordic_set_intr_signals+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bf6:	f040 0120 	orr.w	r1, r0, #32
   10bfa:	e7f0      	b.n	10bde <nordic_set_intr_signals+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bfc:	f041 0110 	orr.w	r1, r1, #16
   10c00:	e7f0      	b.n	10be4 <nordic_set_intr_signals+0x20>

00010c02 <nordic_set_crc>:
nordic_set_crc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   10c02:	b510      	push	{r4, lr}
   10c04:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   10c06:	2000      	movs	r0, #0
   10c08:	f7ff ff3a 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   10c0c:	b934      	cbnz	r4, 10c1c <nordic_set_crc+0x1a>
   10c0e:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   10c12:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   10c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   10c18:	f7ff bf42 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   10c1c:	2c01      	cmp	r4, #1
   10c1e:	d104      	bne.n	10c2a <nordic_set_crc+0x28>
   10c20:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   10c24:	f041 0108 	orr.w	r1, r1, #8
   10c28:	e7f3      	b.n	10c12 <nordic_set_crc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c2a:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   10c2c:	bf14      	ite	ne
   10c2e:	f040 0108 	orrne.w	r1, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c32:	f040 010c 	orreq.w	r1, r0, #12
   10c36:	b2c9      	uxtb	r1, r1
   10c38:	e7eb      	b.n	10c12 <nordic_set_crc+0x10>

00010c3a <nordic_power_up>:
nordic_power_up():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   10c3a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c3c:	2000      	movs	r0, #0
   10c3e:	f7ff ff1f 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   10c42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c46:	f040 0102 	orr.w	r1, r0, #2
   10c4a:	b2c9      	uxtb	r1, r1
   10c4c:	2000      	movs	r0, #0
   10c4e:	f7ff bf27 	b.w	10aa0 <nordic_writeRegister>

00010c52 <nordic_power_down>:
nordic_power_down():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   10c52:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c54:	2000      	movs	r0, #0
   10c56:	f7ff ff13 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   10c5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c5e:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   10c62:	2000      	movs	r0, #0
   10c64:	f7ff bf1c 	b.w	10aa0 <nordic_writeRegister>

00010c68 <nordic_set_channel>:
nordic_set_channel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c68:	f640 13dd 	movw	r3, #2525	; 0x9dd
   10c6c:	4298      	cmp	r0, r3
   10c6e:	d80b      	bhi.n	10c88 <nordic_set_channel+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   10c70:	f640 1362 	movw	r3, #2402	; 0x962
   10c74:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   10c78:	bf38      	it	cc
   10c7a:	4618      	movcc	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   10c7c:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   10c80:	b2c9      	uxtb	r1, r1
   10c82:	2005      	movs	r0, #5
   10c84:	f7ff bf0c 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c88:	4618      	mov	r0, r3
   10c8a:	e7f7      	b.n	10c7c <nordic_set_channel+0x14>

00010c8c <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   10c8c:	b510      	push	{r4, lr}
   10c8e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   10c90:	2006      	movs	r0, #6
   10c92:	f7ff fef5 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   10c96:	2cfa      	cmp	r4, #250	; 0xfa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   10c98:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   10c9c:	d106      	bne.n	10cac <nordic_set_air_data_rate+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   10c9e:	f041 0120 	orr.w	r1, r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   10ca2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   10ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   10ca8:	f7ff befa 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   10cac:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   10cb0:	bf08      	it	eq
   10cb2:	f041 0108 	orreq.w	r1, r1, #8
   10cb6:	e7f4      	b.n	10ca2 <nordic_set_air_data_rate+0x16>

00010cb8 <nordic_set_power_level>:
nordic_set_power_level():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   10cb8:	b510      	push	{r4, lr}
   10cba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cbc:	2006      	movs	r0, #6
   10cbe:	f7ff fedf 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10cc2:	2c03      	cmp	r4, #3
   10cc4:	bf28      	it	cs
   10cc6:	2403      	movcs	r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cc8:	f020 0106 	bic.w	r1, r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10ccc:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   10cd0:	b2c9      	uxtb	r1, r1
   10cd2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   10cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   10cd8:	f7ff bee2 	b.w	10aa0 <nordic_writeRegister>

00010cdc <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   10cdc:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   10ce0:	bf28      	it	cs
   10ce2:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   10ce6:	28fa      	cmp	r0, #250	; 0xfa
   10ce8:	bf38      	it	cc
   10cea:	20fa      	movcc	r0, #250	; 0xfa
   10cec:	23fa      	movs	r3, #250	; 0xfa
   10cee:	fbb0 f3f3 	udiv	r3, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   10cf2:	290f      	cmp	r1, #15
   10cf4:	bf28      	it	cs
   10cf6:	210f      	movcs	r1, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   10cf8:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   10cfa:	b2db      	uxtb	r3, r3
   10cfc:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   10d00:	b2c9      	uxtb	r1, r1
   10d02:	2004      	movs	r0, #4
   10d04:	f7ff becc 	b.w	10aa0 <nordic_writeRegister>

00010d08 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   10d08:	3011      	adds	r0, #17
   10d0a:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   10d0c:	2816      	cmp	r0, #22
   10d0e:	d804      	bhi.n	10d1a <nordic_set_payload_for_pipe+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   10d10:	2920      	cmp	r1, #32
   10d12:	bf28      	it	cs
   10d14:	2120      	movcs	r1, #32
   10d16:	f7ff bec3 	b.w	10aa0 <nordic_writeRegister>
   10d1a:	4770      	bx	lr

00010d1c <nordic_set_addr_width>:
nordic_set_addr_width():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   10d1c:	2803      	cmp	r0, #3
   10d1e:	d006      	beq.n	10d2e <nordic_set_addr_width+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   10d20:	2804      	cmp	r0, #4
   10d22:	bf14      	ite	ne
   10d24:	2103      	movne	r1, #3
   10d26:	2102      	moveq	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   10d28:	2003      	movs	r0, #3
   10d2a:	f7ff beb9 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   10d2e:	2101      	movs	r1, #1
   10d30:	e7fa      	b.n	10d28 <nordic_set_addr_width+0xc>

00010d32 <nordic_set_tx_address>:
nordic_set_tx_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   10d32:	460a      	mov	r2, r1
   10d34:	2300      	movs	r3, #0
   10d36:	4601      	mov	r1, r0
   10d38:	2030      	movs	r0, #48	; 0x30
   10d3a:	f7ff be2d 	b.w	10998 <nordic_transfer>

00010d3e <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   10d3e:	460a      	mov	r2, r1
   10d40:	2300      	movs	r3, #0
   10d42:	4601      	mov	r1, r0
   10d44:	202a      	movs	r0, #42	; 0x2a
   10d46:	f7ff be27 	b.w	10998 <nordic_transfer>
   10d4a:	Address 0x0000000000010d4a is out of bounds.


00010d4c <nordic_init>:
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   10d4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10d4e:	4604      	mov	r4, r0
   10d50:	460e      	mov	r6, r1
   10d52:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   10d54:	f7ff ff30 	bl	10bb8 <nordic_flush_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   10d58:	f7ff feec 	bl	10b34 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   10d5c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10d60:	4b2a      	ldr	r3, [pc, #168]	; (10e0c <nordic_init+0xc0>)
   10d62:	61da      	str	r2, [r3, #28]
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   10d64:	f7ff ff75 	bl	10c52 <nordic_power_down>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   10d68:	2200      	movs	r2, #0
   10d6a:	2001      	movs	r0, #1
   10d6c:	4611      	mov	r1, r2
   10d6e:	f7ff ff29 	bl	10bc4 <nordic_set_intr_signals>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   10d72:	f7ff feab 	bl	10acc <nordic_clear_all_intr_flags>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   10d76:	2002      	movs	r0, #2
   10d78:	f7ff ff43 	bl	10c02 <nordic_set_crc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   10d7c:	4630      	mov	r0, r6
   10d7e:	f7ff ff73 	bl	10c68 <nordic_set_channel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   10d82:	4628      	mov	r0, r5
   10d84:	f7ff ff82 	bl	10c8c <nordic_set_air_data_rate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   10d88:	2003      	movs	r0, #3
   10d8a:	f7ff ff95 	bl	10cb8 <nordic_set_power_level>
nordic_enable_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   10d8e:	2103      	movs	r1, #3
   10d90:	2002      	movs	r0, #2
   10d92:	f7ff fe85 	bl	10aa0 <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   10d96:	2100      	movs	r1, #0
   10d98:	2001      	movs	r0, #1
   10d9a:	f7ff fe81 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   10d9e:	2103      	movs	r1, #3
   10da0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   10da4:	f7ff ff9a 	bl	10cdc <nordic_set_auto_transmit_options>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   10da8:	4621      	mov	r1, r4
   10daa:	2000      	movs	r0, #0
   10dac:	f7ff ffac 	bl	10d08 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   10db0:	2100      	movs	r1, #0
   10db2:	2012      	movs	r0, #18
   10db4:	f7ff fe74 	bl	10aa0 <nordic_writeRegister>
   10db8:	2100      	movs	r1, #0
   10dba:	2013      	movs	r0, #19
   10dbc:	f7ff fe70 	bl	10aa0 <nordic_writeRegister>
   10dc0:	2100      	movs	r1, #0
   10dc2:	2014      	movs	r0, #20
   10dc4:	f7ff fe6c 	bl	10aa0 <nordic_writeRegister>
   10dc8:	2100      	movs	r1, #0
   10dca:	2015      	movs	r0, #21
   10dcc:	f7ff fe68 	bl	10aa0 <nordic_writeRegister>
   10dd0:	2100      	movs	r1, #0
   10dd2:	2016      	movs	r0, #22
   10dd4:	f7ff fe64 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10dd8:	4b0d      	ldr	r3, [pc, #52]	; (10e10 <nordic_init+0xc4>)
   10dda:	6818      	ldr	r0, [r3, #0]
   10ddc:	791b      	ldrb	r3, [r3, #4]
   10dde:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de0:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10de2:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de6:	f7ff ff99 	bl	10d1c <nordic_set_addr_width>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   10dea:	4668      	mov	r0, sp
   10dec:	2105      	movs	r1, #5
   10dee:	f7ff ffa0 	bl	10d32 <nordic_set_tx_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   10df2:	2105      	movs	r1, #5
   10df4:	4668      	mov	r0, sp
   10df6:	f7ff ffa2 	bl	10d3e <nordic_set_rx_pipe0_addr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   10dfa:	f7ff ff1e 	bl	10c3a <nordic_power_up>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   10dfe:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10e02:	f005 fd65 	bl	168d0 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   10e06:	b002      	add	sp, #8
   10e08:	bd70      	pop	{r4, r5, r6, pc}
   10e0a:	bf00      	nop
   10e0c:	2009c020 	.word	0x2009c020
   10e10:	00024e8b 	.word	0x00024e8b

00010e14 <nrf_driver_init>:
nrf_driver_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   10e14:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   10e16:	4e17      	ldr	r6, [pc, #92]	; (10e74 <nrf_driver_init+0x60>)
   10e18:	6832      	ldr	r2, [r6, #0]
   10e1a:	b922      	cbnz	r2, 10e26 <nrf_driver_init+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   10e1c:	2120      	movs	r1, #32
   10e1e:	2003      	movs	r0, #3
   10e20:	f007 fe8c 	bl	18b3c <xQueueGenericCreate>
   10e24:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   10e26:	4d14      	ldr	r5, [pc, #80]	; (10e78 <nrf_driver_init+0x64>)
   10e28:	682a      	ldr	r2, [r5, #0]
   10e2a:	b922      	cbnz	r2, 10e36 <nrf_driver_init+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   10e2c:	2120      	movs	r1, #32
   10e2e:	2001      	movs	r0, #1
   10e30:	f007 fe84 	bl	18b3c <xQueueGenericCreate>
   10e34:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   10e36:	4c11      	ldr	r4, [pc, #68]	; (10e7c <nrf_driver_init+0x68>)
   10e38:	6821      	ldr	r1, [r4, #0]
   10e3a:	b921      	cbnz	r1, 10e46 <nrf_driver_init+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   10e3c:	2203      	movs	r2, #3
   10e3e:	2001      	movs	r0, #1
   10e40:	f007 fe7c 	bl	18b3c <xQueueGenericCreate>
   10e44:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   10e46:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   10e4a:	f640 11c3 	movw	r1, #2499	; 0x9c3
   10e4e:	2020      	movs	r0, #32
   10e50:	f7ff ff7c 	bl	10d4c <nordic_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   10e54:	f7ff fe58 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   10e58:	2016      	movs	r0, #22
   10e5a:	4a09      	ldr	r2, [pc, #36]	; (10e80 <nrf_driver_init+0x6c>)
   10e5c:	2101      	movs	r1, #1
   10e5e:	f007 f863 	bl	17f28 <eint3_enable_port0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   10e62:	6830      	ldr	r0, [r6, #0]
   10e64:	b128      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   10e66:	6828      	ldr	r0, [r5, #0]
   10e68:	b118      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   10e6a:	6820      	ldr	r0, [r4, #0]
   10e6c:	3000      	adds	r0, #0
   10e6e:	bf18      	it	ne
   10e70:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   10e72:	bd70      	pop	{r4, r5, r6, pc}
   10e74:	2007c324 	.word	0x2007c324
   10e78:	2007c31c 	.word	0x2007c31c
   10e7c:	2007c320 	.word	0x2007c320
   10e80:	00010f2d 	.word	0x00010f2d

00010e84 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e84:	7903      	ldrb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e86:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e88:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10e8c:	2bc0      	cmp	r3, #192	; 0xc0
   10e8e:	bf0c      	ite	eq
   10e90:	4b0e      	ldreq	r3, [pc, #56]	; (10ecc <nrf_driver_app_recv+0x48>)
   10e92:	4b0f      	ldrne	r3, [pc, #60]	; (10ed0 <nrf_driver_app_recv+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   10e94:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e96:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e98:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e9a:	b088      	sub	sp, #32
   10e9c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e9e:	461a      	mov	r2, r3
   10ea0:	4628      	mov	r0, r5
   10ea2:	f007 fe6d 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   10ea6:	4604      	mov	r4, r0
   10ea8:	b960      	cbnz	r0, 10ec4 <nrf_driver_app_recv+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   10eaa:	4603      	mov	r3, r0
   10eac:	4602      	mov	r2, r0
   10eae:	4669      	mov	r1, sp
   10eb0:	4628      	mov	r0, r5
   10eb2:	f007 ff6d 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   10eb6:	4623      	mov	r3, r4
   10eb8:	4622      	mov	r2, r4
   10eba:	4631      	mov	r1, r6
   10ebc:	4628      	mov	r0, r5
   10ebe:	f007 fe5f 	bl	18b80 <xQueueGenericSend>
   10ec2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   10ec4:	4620      	mov	r0, r4
   10ec6:	b008      	add	sp, #32
   10ec8:	bd70      	pop	{r4, r5, r6, pc}
   10eca:	bf00      	nop
   10ecc:	2007c31c 	.word	0x2007c31c
   10ed0:	2007c324 	.word	0x2007c324

00010ed4 <nrf_driver_send>:
nrf_driver_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   10ed4:	b538      	push	{r3, r4, r5, lr}
   10ed6:	4604      	mov	r4, r0
   10ed8:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   10eda:	f000 fae9 	bl	114b0 <mesh_get_node_address>
   10ede:	7823      	ldrb	r3, [r4, #0]
   10ee0:	4283      	cmp	r3, r0
   10ee2:	d00a      	beq.n	10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   10ee4:	78e3      	ldrb	r3, [r4, #3]
   10ee6:	b943      	cbnz	r3, 10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   10ee8:	f00e fd92 	bl	1fa10 <rand>
   10eec:	23bd      	movs	r3, #189	; 0xbd
   10eee:	f000 0003 	and.w	r0, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   10ef2:	fb00 3003 	mla	r0, r0, r3, r3
   10ef6:	f005 fceb 	bl	168d0 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   10efa:	f7ff fdfd 	bl	10af8 <nordic_rx_to_Stanby1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   10efe:	f7ff fdef 	bl	10ae0 <nordic_standby1_to_tx_mode1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   10f02:	b2a9      	uxth	r1, r5
   10f04:	4620      	mov	r0, r4
   10f06:	f7ff fe1b 	bl	10b40 <nordic_mode1_send_single_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   10f0a:	f7ff fe0f 	bl	10b2c <nordic_clear_packet_sent_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   10f0e:	f7ff fdfb 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f12:	f008 fd31 	bl	19978 <xTaskGetSchedulerState>
   10f16:	2802      	cmp	r0, #2
   10f18:	d104      	bne.n	10f24 <nrf_driver_send+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   10f1a:	4b03      	ldr	r3, [pc, #12]	; (10f28 <nrf_driver_send+0x54>)
   10f1c:	2100      	movs	r1, #0
   10f1e:	6818      	ldr	r0, [r3, #0]
   10f20:	f007 ff02 	bl	18d28 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   10f24:	2001      	movs	r0, #1
   10f26:	bd38      	pop	{r3, r4, r5, pc}
   10f28:	2007c320 	.word	0x2007c320

00010f2c <nrf_irq_callback>:
nrf_irq_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f2c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   10f2e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f30:	a902      	add	r1, sp, #8
   10f32:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   10f36:	4b08      	ldr	r3, [pc, #32]	; (10f58 <nrf_irq_callback+0x2c>)
   10f38:	6818      	ldr	r0, [r3, #0]
   10f3a:	f007 fef5 	bl	18d28 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   10f3e:	9b01      	ldr	r3, [sp, #4]
   10f40:	b13b      	cbz	r3, 10f52 <nrf_irq_callback+0x26>
   10f42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10f46:	4b05      	ldr	r3, [pc, #20]	; (10f5c <nrf_irq_callback+0x30>)
   10f48:	601a      	str	r2, [r3, #0]
   10f4a:	f3bf 8f4f 	dsb	sy
   10f4e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   10f52:	b003      	add	sp, #12
   10f54:	f85d fb04 	ldr.w	pc, [sp], #4
   10f58:	2007c320 	.word	0x2007c320
   10f5c:	e000ed04 	.word	0xe000ed04

00010f60 <nrf_driver_receive>:
nrf_driver_receive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   10f60:	b538      	push	{r3, r4, r5, lr}
   10f62:	4604      	mov	r4, r0
   10f64:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   10f66:	f7ff fe11 	bl	10b8c <nordic_is_packet_available>
   10f6a:	b148      	cbz	r0, 10f80 <nrf_driver_receive+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   10f6c:	b2a9      	uxth	r1, r5
   10f6e:	4620      	mov	r0, r4
   10f70:	f7ff fe18 	bl	10ba4 <nordic_read_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f74:	f7ff fe0a 	bl	10b8c <nordic_is_packet_available>
   10f78:	b908      	cbnz	r0, 10f7e <nrf_driver_receive+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   10f7a:	f7ff fe0f 	bl	10b9c <nordic_clear_packet_available_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f7e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   10f80:	bd38      	pop	{r3, r4, r5, pc}

00010f82 <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:52
{
   10f82:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   10f86:	4605      	mov	r5, r0
   10f88:	460e      	mov	r6, r1
   10f8a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:55
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f8c:	f008 fcf4 	bl	19978 <xTaskGetSchedulerState>
   10f90:	2802      	cmp	r0, #2
   10f92:	d109      	bne.n	10fa8 <wireless_get_queued_pkt+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:56
        ok = xQueueReceive(qhandle, pkt, OS_MS(timeout_ms));
   10f94:	4622      	mov	r2, r4
   10f96:	2300      	movs	r3, #0
   10f98:	4631      	mov	r1, r6
   10f9a:	4628      	mov	r0, r5
   10f9c:	f007 fef8 	bl	18d90 <xQueueGenericReceive>
   10fa0:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:68
}
   10fa2:	4620      	mov	r0, r4
   10fa4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   10fa8:	f7ff fa78 	bl	1049c <sys_get_uptime_us>
   10fac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fb0:	2300      	movs	r3, #0
   10fb2:	f00c fb63 	bl	1d67c <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:59
        uint64_t timeout_of_char = sys_get_uptime_ms() + timeout_ms;
   10fb6:	eb10 0804 	adds.w	r8, r0, r4
   10fba:	f141 0900 	adc.w	r9, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:60
        while (! (ok = xQueueReceive(qhandle, pkt, 0))) {
   10fbe:	2300      	movs	r3, #0
   10fc0:	4631      	mov	r1, r6
   10fc2:	461a      	mov	r2, r3
   10fc4:	4628      	mov	r0, r5
   10fc6:	f007 fee3 	bl	18d90 <xQueueGenericReceive>
   10fca:	b2c4      	uxtb	r4, r0
   10fcc:	2c00      	cmp	r4, #0
   10fce:	d1e8      	bne.n	10fa2 <wireless_get_queued_pkt+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10fd0:	f7ff fa64 	bl	1049c <sys_get_uptime_us>
   10fd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fd8:	2300      	movs	r3, #0
   10fda:	f00c fb4f 	bl	1d67c <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:61
            if (sys_get_uptime_ms() > timeout_of_char) {
   10fde:	4589      	cmp	r9, r1
   10fe0:	bf08      	it	eq
   10fe2:	4580      	cmpeq	r8, r0
   10fe4:	d2eb      	bcs.n	10fbe <wireless_get_queued_pkt+0x3c>
   10fe6:	e7dc      	b.n	10fa2 <wireless_get_queued_pkt+0x20>

00010fe8 <nrf_driver_get_timer>:
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fe8:	2904      	cmp	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   10fea:	b538      	push	{r3, r4, r5, lr}
   10fec:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fee:	d10d      	bne.n	1100c <nrf_driver_get_timer+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   10ff0:	1c04      	adds	r4, r0, #0
   10ff2:	bf18      	it	ne
   10ff4:	2401      	movne	r4, #1
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
   10ff6:	f7ff fa51 	bl	1049c <sys_get_uptime_us>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   10ffa:	b12c      	cbz	r4, 11008 <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10ffc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11000:	2300      	movs	r3, #0
   11002:	f00c fb3b 	bl	1d67c <__aeabi_uldivmod>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   11006:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   11008:	4620      	mov	r0, r4
   1100a:	bd38      	pop	{r3, r4, r5, pc}
   1100c:	2400      	movs	r4, #0
   1100e:	e7f2      	b.n	10ff6 <nrf_driver_get_timer+0xe>

00011010 <wireless_init>:
wireless_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11010:	b500      	push	{lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11012:	4b0c      	ldr	r3, [pc, #48]	; (11044 <wireless_init+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11014:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11016:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   11018:	4b0b      	ldr	r3, [pc, #44]	; (11048 <wireless_init+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   1101a:	4a0c      	ldr	r2, [pc, #48]	; (1104c <wireless_init+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   1101c:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   1101e:	4b0c      	ldr	r3, [pc, #48]	; (11050 <wireless_init+0x40>)
   11020:	930a      	str	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   11022:	ab0c      	add	r3, sp, #48	; 0x30
   11024:	f843 2d10 	str.w	r2, [r3, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   11028:	2200      	movs	r2, #0
   1102a:	9204      	str	r2, [sp, #16]
   1102c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1102e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   11032:	4b08      	ldr	r3, [pc, #32]	; (11054 <wireless_init+0x44>)
   11034:	4a08      	ldr	r2, [pc, #32]	; (11058 <wireless_init+0x48>)
   11036:	2101      	movs	r1, #1
   11038:	206a      	movs	r0, #106	; 0x6a
   1103a:	f000 faef 	bl	1161c <mesh_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   1103e:	b00d      	add	sp, #52	; 0x34
   11040:	f85d fb04 	ldr.w	pc, [sp], #4
   11044:	00010e15 	.word	0x00010e15
   11048:	00010f61 	.word	0x00010f61
   1104c:	00010fe9 	.word	0x00010fe9
   11050:	00010ed5 	.word	0x00010ed5
   11054:	00010e85 	.word	0x00010e85
   11058:	00024e90 	.word	0x00024e90

0001105c <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:93
    return wireless_get_queued_pkt(g_rx_queue, pkt, timeout_ms);
   1105c:	4b02      	ldr	r3, [pc, #8]	; (11068 <wireless_get_rx_pkt+0xc>)
   1105e:	460a      	mov	r2, r1
   11060:	4601      	mov	r1, r0
   11062:	6818      	ldr	r0, [r3, #0]
   11064:	f7ff bf8d 	b.w	10f82 <wireless_get_queued_pkt>
   11068:	2007c324 	.word	0x2007c324

0001106c <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:98
    return wireless_get_queued_pkt(g_ack_queue, pkt, timeout_ms);
   1106c:	4b02      	ldr	r3, [pc, #8]	; (11078 <wireless_get_ack_pkt+0xc>)
   1106e:	460a      	mov	r2, r1
   11070:	4601      	mov	r1, r0
   11072:	6818      	ldr	r0, [r3, #0]
   11074:	f7ff bf85 	b.w	10f82 <wireless_get_queued_pkt>
   11078:	2007c31c 	.word	0x2007c31c

0001107c <wireless_service>:
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   1107c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1107e:	f008 fc7b 	bl	19978 <xTaskGetSchedulerState>
   11082:	4b0f      	ldr	r3, [pc, #60]	; (110c0 <wireless_service+0x44>)
   11084:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   11086:	695b      	ldr	r3, [r3, #20]
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   11088:	d112      	bne.n	110b0 <wireless_service+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   1108a:	025a      	lsls	r2, r3, #9
   1108c:	d50c      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   1108e:	f000 fcfd 	bl	11a8c <mesh_get_pnd_pkt_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11092:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   11094:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11096:	480b      	ldr	r0, [pc, #44]	; (110c4 <wireless_service+0x48>)
   11098:	bf14      	ite	ne
   1109a:	2201      	movne	r2, #1
   1109c:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   110a0:	4619      	mov	r1, r3
   110a2:	6800      	ldr	r0, [r0, #0]
   110a4:	f007 fe74 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   110ac:	f000 bb86 	b.w	117bc <mesh_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   110b0:	025b      	lsls	r3, r3, #9
   110b2:	d5f9      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   110b4:	f000 fcea 	bl	11a8c <mesh_get_pnd_pkt_count>
   110b8:	2800      	cmp	r0, #0
   110ba:	d1f5      	bne.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110bc:	bd08      	pop	{r3, pc}
   110be:	bf00      	nop
   110c0:	2009c000 	.word	0x2009c000
   110c4:	2007c320 	.word	0x2007c320

000110c8 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   110c8:	2324      	movs	r3, #36	; 0x24
   110ca:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110cc:	f64f 74ff 	movw	r4, #65535	; 0xffff
   110d0:	fb03 0101 	mla	r1, r3, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   110d4:	4288      	cmp	r0, r1
   110d6:	d100      	bne.n	110da <mesh_incr_soft_timers_for_arr+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   110d8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   110da:	7843      	ldrb	r3, [r0, #1]
   110dc:	b12b      	cbz	r3, 110ea <mesh_incr_soft_timers_for_arr+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   110de:	8c03      	ldrh	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   110e0:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110e2:	42a3      	cmp	r3, r4
   110e4:	bf28      	it	cs
   110e6:	4623      	movcs	r3, r4
   110e8:	8403      	strh	r3, [r0, #32]
   110ea:	3024      	adds	r0, #36	; 0x24
   110ec:	e7f2      	b.n	110d4 <mesh_incr_soft_timers_for_arr+0xc>
   110ee:	Address 0x00000000000110ee is out of bounds.


000110f0 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   110f0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   110f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   110f4:	a802      	add	r0, sp, #8
   110f6:	f840 3d04 	str.w	r3, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   110fa:	4b0c      	ldr	r3, [pc, #48]	; (1112c <mesh_update_soft_timers+0x3c>)
   110fc:	2104      	movs	r1, #4
   110fe:	685b      	ldr	r3, [r3, #4]
   11100:	4798      	blx	r3
   11102:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   11104:	4b0a      	ldr	r3, [pc, #40]	; (11130 <mesh_update_soft_timers+0x40>)
   11106:	9a01      	ldr	r2, [sp, #4]
   11108:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   1110a:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   1110c:	1b14      	subs	r4, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   1110e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11110:	4808      	ldr	r0, [pc, #32]	; (11134 <mesh_update_soft_timers+0x44>)
   11112:	4622      	mov	r2, r4
   11114:	f7ff ffd8 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   11118:	4622      	mov	r2, r4
   1111a:	2102      	movs	r1, #2
   1111c:	4806      	ldr	r0, [pc, #24]	; (11138 <mesh_update_soft_timers+0x48>)
   1111e:	f7ff ffd3 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   11122:	1c28      	adds	r0, r5, #0
   11124:	bf18      	it	ne
   11126:	2001      	movne	r0, #1
   11128:	b003      	add	sp, #12
   1112a:	bd30      	pop	{r4, r5, pc}
   1112c:	2007c328 	.word	0x2007c328
   11130:	2007c458 	.word	0x2007c458
   11134:	2007c33e 	.word	0x2007c33e
   11138:	2007c3f2 	.word	0x2007c3f2

0001113c <mesh_send_packet>:
mesh_send_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   1113c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   1113e:	4b0b      	ldr	r3, [pc, #44]	; (1116c <mesh_send_packet+0x30>)
   11140:	7819      	ldrb	r1, [r3, #0]
   11142:	7803      	ldrb	r3, [r0, #0]
   11144:	428b      	cmp	r3, r1
   11146:	4b0a      	ldr	r3, [pc, #40]	; (11170 <mesh_send_packet+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11148:	bf0b      	itete	eq
   1114a:	881a      	ldrheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   1114c:	889a      	ldrhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   1114e:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   11150:	3201      	addne	r2, #1
   11152:	bf14      	ite	ne
   11154:	809a      	strhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11156:	801a      	strheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   11158:	4b06      	ldr	r3, [pc, #24]	; (11174 <mesh_send_packet+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   1115a:	7081      	strb	r1, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   1115c:	68db      	ldr	r3, [r3, #12]
   1115e:	2120      	movs	r1, #32
   11160:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   11162:	3000      	adds	r0, #0
   11164:	bf18      	it	ne
   11166:	2001      	movne	r0, #1
   11168:	bd08      	pop	{r3, pc}
   1116a:	bf00      	nop
   1116c:	2007c08c 	.word	0x2007c08c
   11170:	2007c3ce 	.word	0x2007c3ce
   11174:	2007c328 	.word	0x2007c328

00011178 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   11178:	4b0a      	ldr	r3, [pc, #40]	; (111a4 <mesh_send_retry_packet+0x2c>)
   1117a:	7802      	ldrb	r2, [r0, #0]
   1117c:	781b      	ldrb	r3, [r3, #0]
   1117e:	429a      	cmp	r2, r3
   11180:	4b09      	ldr	r3, [pc, #36]	; (111a8 <mesh_send_retry_packet+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11182:	bf0b      	itete	eq
   11184:	88da      	ldrheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   11186:	891a      	ldrhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11188:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   1118a:	3201      	addne	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   1118c:	bf0c      	ite	eq
   1118e:	80da      	strheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   11190:	811a      	strhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   11192:	7903      	ldrb	r3, [r0, #4]
   11194:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   11198:	3207      	adds	r2, #7
   1119a:	f362 03c5 	bfi	r3, r2, #3, #3
   1119e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   111a0:	f7ff bfcc 	b.w	1113c <mesh_send_packet>
   111a4:	2007c08c 	.word	0x2007c08c
   111a8:	2007c3ce 	.word	0x2007c3ce

000111ac <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   111ac:	2200      	movs	r2, #0
   111ae:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   111b0:	4b06      	ldr	r3, [pc, #24]	; (111cc <mesh_find_rte_tbl_entry+0x20>)
   111b2:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   111b6:	0091      	lsls	r1, r2, #2
   111b8:	4284      	cmp	r4, r0
   111ba:	d101      	bne.n	111c0 <mesh_find_rte_tbl_entry+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   111bc:	1858      	adds	r0, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   111be:	bd10      	pop	{r4, pc}
   111c0:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   111c2:	2a04      	cmp	r2, #4
   111c4:	d1f5      	bne.n	111b2 <mesh_find_rte_tbl_entry+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   111c6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   111c8:	bd10      	pop	{r4, pc}
   111ca:	bf00      	nop
   111cc:	2007c447 	.word	0x2007c447

000111d0 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   111d0:	b170      	cbz	r0, 111f0 <mesh_update_rte_scores+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   111d2:	78c3      	ldrb	r3, [r0, #3]
   111d4:	3301      	adds	r3, #1
   111d6:	b2db      	uxtb	r3, r3
   111d8:	2bff      	cmp	r3, #255	; 0xff
   111da:	70c3      	strb	r3, [r0, #3]
   111dc:	d108      	bne.n	111f0 <mesh_update_rte_scores+0x20>
   111de:	2300      	movs	r3, #0
   111e0:	4804      	ldr	r0, [pc, #16]	; (111f4 <mesh_update_rte_scores+0x24>)
   111e2:	18c1      	adds	r1, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   111e4:	78ca      	ldrb	r2, [r1, #3]
   111e6:	3304      	adds	r3, #4
   111e8:	0852      	lsrs	r2, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ea:	2b10      	cmp	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   111ec:	70ca      	strb	r2, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ee:	d1f8      	bne.n	111e2 <mesh_update_rte_scores+0x12>
   111f0:	4770      	bx	lr
   111f2:	bf00      	nop
   111f4:	2007c447 	.word	0x2007c447

000111f8 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   111f8:	2224      	movs	r2, #36	; 0x24
   111fa:	4603      	mov	r3, r0
   111fc:	fb02 0101 	mla	r1, r2, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   11200:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   11202:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   11204:	4291      	cmp	r1, r2
   11206:	d10f      	bne.n	11228 <mesh_get_pnd_pkt_slot+0x30>
   11208:	4604      	mov	r4, r0
   1120a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   1120c:	429a      	cmp	r2, r3
   1120e:	d011      	beq.n	11234 <mesh_get_pnd_pkt_slot+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   11210:	7919      	ldrb	r1, [r3, #4]
   11212:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   11216:	8c19      	ldrh	r1, [r3, #32]
   11218:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   1121c:	42a9      	cmp	r1, r5
   1121e:	bf84      	itt	hi
   11220:	461c      	movhi	r4, r3
   11222:	460d      	movhi	r5, r1
   11224:	3324      	adds	r3, #36	; 0x24
   11226:	e7f1      	b.n	1120c <mesh_get_pnd_pkt_slot+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   11228:	4614      	mov	r4, r2
   1122a:	3224      	adds	r2, #36	; 0x24
   1122c:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11230:	2d00      	cmp	r5, #0
   11232:	d1e7      	bne.n	11204 <mesh_get_pnd_pkt_slot+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   11234:	4620      	mov	r0, r4
   11236:	bd30      	pop	{r4, r5, pc}

00011238 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   11238:	b538      	push	{r3, r4, r5, lr}
   1123a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   1123c:	00c9      	lsls	r1, r1, #3
   1123e:	f101 0508 	add.w	r5, r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   11242:	f7ff ff55 	bl	110f0 <mesh_update_soft_timers>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   11246:	4b1c      	ldr	r3, [pc, #112]	; (112b8 <mesh_pending_packets_add+0x80>)
   11248:	7822      	ldrb	r2, [r4, #0]
   1124a:	781b      	ldrb	r3, [r3, #0]
   1124c:	429a      	cmp	r2, r3
   1124e:	d124      	bne.n	1129a <mesh_pending_packets_add+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   11250:	2102      	movs	r1, #2
   11252:	481a      	ldr	r0, [pc, #104]	; (112bc <mesh_pending_packets_add+0x84>)
   11254:	f7ff ffd0 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   11258:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   1125a:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   1125c:	f880 3020 	strb.w	r3, [r0, #32]
   11260:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   11264:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   11266:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   1126a:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   1126e:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   11272:	f3c5 2506 	ubfx	r5, r5, #8, #7
   11276:	430d      	orrs	r5, r1
   11278:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   1127c:	f104 0120 	add.w	r1, r4, #32
   11280:	f853 4b04 	ldr.w	r4, [r3], #4
   11284:	428b      	cmp	r3, r1
   11286:	f842 4b04 	str.w	r4, [r2], #4
   1128a:	d1f9      	bne.n	11280 <mesh_pending_packets_add+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   1128c:	4a0c      	ldr	r2, [pc, #48]	; (112c0 <mesh_pending_packets_add+0x88>)
   1128e:	7903      	ldrb	r3, [r0, #4]
   11290:	7812      	ldrb	r2, [r2, #0]
   11292:	f362 03c5 	bfi	r3, r2, #3, #3
   11296:	7103      	strb	r3, [r0, #4]
   11298:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1129a:	2104      	movs	r1, #4
   1129c:	4809      	ldr	r0, [pc, #36]	; (112c4 <mesh_pending_packets_add+0x8c>)
   1129e:	f7ff ffab 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   112a2:	78e3      	ldrb	r3, [r4, #3]
   112a4:	2b00      	cmp	r3, #0
   112a6:	d1d7      	bne.n	11258 <mesh_pending_packets_add+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112a8:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   112ac:	2504      	movs	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   112b2:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   112b6:	e7cf      	b.n	11258 <mesh_pending_packets_add+0x20>
   112b8:	2007c08c 	.word	0x2007c08c
   112bc:	2007c3f2 	.word	0x2007c3f2
   112c0:	2007c094 	.word	0x2007c094
   112c4:	2007c33e 	.word	0x2007c33e

000112c8 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   112c8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   112ca:	f7ff ff6f 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   112ce:	4603      	mov	r3, r0
   112d0:	b9d8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   112d2:	f7ff ff6b 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   112d6:	4603      	mov	r3, r0
   112d8:	b9b8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   112da:	4a0d      	ldr	r2, [pc, #52]	; (11310 <mesh_get_rte_to_modify+0x48>)
   112dc:	78d3      	ldrb	r3, [r2, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112de:	79d1      	ldrb	r1, [r2, #7]
   112e0:	7ad0      	ldrb	r0, [r2, #11]
   112e2:	428b      	cmp	r3, r1
   112e4:	bf96      	itet	ls
   112e6:	4619      	movls	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112e8:	1d13      	addhi	r3, r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   112ea:	4613      	movls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112ec:	4281      	cmp	r1, r0
   112ee:	bf94      	ite	ls
   112f0:	4608      	movls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f2:	4b08      	ldrhi	r3, [pc, #32]	; (11314 <mesh_get_rte_to_modify+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112f4:	7bd1      	ldrb	r1, [r2, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f6:	4a08      	ldr	r2, [pc, #32]	; (11318 <mesh_get_rte_to_modify+0x50>)
   112f8:	4281      	cmp	r1, r0
   112fa:	bf38      	it	cc
   112fc:	4613      	movcc	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   112fe:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11300:	4906      	ldr	r1, [pc, #24]	; (1131c <mesh_get_rte_to_modify+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   11302:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11304:	7aca      	ldrb	r2, [r1, #11]
   11306:	3201      	adds	r2, #1
   11308:	72ca      	strb	r2, [r1, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   1130a:	4618      	mov	r0, r3
   1130c:	bd08      	pop	{r3, pc}
   1130e:	bf00      	nop
   11310:	2007c447 	.word	0x2007c447
   11314:	2007c44f 	.word	0x2007c44f
   11318:	2007c453 	.word	0x2007c453
   1131c:	2007c3ce 	.word	0x2007c3ce

00011320 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11324:	f04f 0824 	mov.w	r8, #36	; 0x24
   11328:	4605      	mov	r5, r0
   1132a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   1132c:	2700      	movs	r7, #0
   1132e:	fb08 1802 	mla	r8, r8, r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11332:	f8df 915c 	ldr.w	r9, [pc, #348]	; 11490 <mesh_handle_pnd_pkts_for_arr+0x170>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   11336:	f8df a15c 	ldr.w	sl, [pc, #348]	; 11494 <mesh_handle_pnd_pkts_for_arr+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   1133a:	45a0      	cmp	r8, r4
   1133c:	d101      	bne.n	11342 <mesh_handle_pnd_pkts_for_arr+0x22>
   1133e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   11342:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   11346:	2b00      	cmp	r3, #0
   11348:	da29      	bge.n	1139e <mesh_handle_pnd_pkts_for_arr+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   1134a:	b1cd      	cbz	r5, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   1134c:	782b      	ldrb	r3, [r5, #0]
   1134e:	7862      	ldrb	r2, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   11350:	4293      	cmp	r3, r2
   11352:	d109      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   11354:	7868      	ldrb	r0, [r5, #1]
   11356:	7821      	ldrb	r1, [r4, #0]
   11358:	4288      	cmp	r0, r1
   1135a:	d105      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   1135c:	2224      	movs	r2, #36	; 0x24
   1135e:	2100      	movs	r1, #0
   11360:	4620      	mov	r0, r4
   11362:	f00d f905 	bl	1e570 <memset>
   11366:	e069      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   11368:	78e9      	ldrb	r1, [r5, #3]
   1136a:	b149      	cbz	r1, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1136c:	7869      	ldrb	r1, [r5, #1]
   1136e:	4291      	cmp	r1, r2
   11370:	d106      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11372:	7822      	ldrb	r2, [r4, #0]
   11374:	429a      	cmp	r2, r3
   11376:	d103      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11378:	79aa      	ldrb	r2, [r5, #6]
   1137a:	79a3      	ldrb	r3, [r4, #6]
   1137c:	429a      	cmp	r2, r3
   1137e:	d0ed      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   11380:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   11384:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   11388:	8c21      	ldrh	r1, [r4, #32]
   1138a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   1138e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   11392:	4299      	cmp	r1, r3
   11394:	db52      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   11396:	4620      	mov	r0, r4
   11398:	f7ff fed0 	bl	1113c <mesh_send_packet>
   1139c:	e7de      	b.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   1139e:	7863      	ldrb	r3, [r4, #1]
   113a0:	2b00      	cmp	r3, #0
   113a2:	d04b      	beq.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   113a4:	2d00      	cmp	r5, #0
   113a6:	d032      	beq.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113a8:	792a      	ldrb	r2, [r5, #4]
   113aa:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   113ae:	2ac0      	cmp	r2, #192	; 0xc0
   113b0:	d12b      	bne.n	1140a <mesh_handle_pnd_pkts_for_arr+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113b2:	7822      	ldrb	r2, [r4, #0]
   113b4:	7869      	ldrb	r1, [r5, #1]
   113b6:	428a      	cmp	r2, r1
   113b8:	d102      	bne.n	113c0 <mesh_handle_pnd_pkts_for_arr+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   113ba:	7828      	ldrb	r0, [r5, #0]
   113bc:	4298      	cmp	r0, r3
   113be:	d0cd      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113c0:	78e6      	ldrb	r6, [r4, #3]
   113c2:	78a8      	ldrb	r0, [r5, #2]
   113c4:	4286      	cmp	r6, r0
   113c6:	d108      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113c8:	4299      	cmp	r1, r3
   113ca:	d106      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113cc:	7829      	ldrb	r1, [r5, #0]
   113ce:	428a      	cmp	r2, r1
   113d0:	d103      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113d2:	79a1      	ldrb	r1, [r4, #6]
   113d4:	79aa      	ldrb	r2, [r5, #6]
   113d6:	4291      	cmp	r1, r2
   113d8:	d0c0      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   113da:	78a9      	ldrb	r1, [r5, #2]
   113dc:	78e2      	ldrb	r2, [r4, #3]
   113de:	4291      	cmp	r1, r2
   113e0:	d115      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113e2:	786a      	ldrb	r2, [r5, #1]
   113e4:	429a      	cmp	r2, r3
   113e6:	d112      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113e8:	7821      	ldrb	r1, [r4, #0]
   113ea:	782a      	ldrb	r2, [r5, #0]
   113ec:	4291      	cmp	r1, r2
   113ee:	d10e      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113f0:	79a1      	ldrb	r1, [r4, #6]
   113f2:	79aa      	ldrb	r2, [r5, #6]
   113f4:	4291      	cmp	r1, r2
   113f6:	d10a      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113f8:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   113fa:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113fe:	f367 03c5 	bfi	r3, r7, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   11402:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11406:	7123      	strb	r3, [r4, #4]
   11408:	e018      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   1140a:	2a00      	cmp	r2, #0
   1140c:	d1e5      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   1140e:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   11412:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   11416:	8c20      	ldrh	r0, [r4, #32]
   11418:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1141c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   11420:	4290      	cmp	r0, r2
   11422:	db0b      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11424:	7922      	ldrb	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11426:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1142a:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   1142e:	b2ce      	uxtb	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11430:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11434:	b126      	cbz	r6, 11440 <mesh_handle_pnd_pkts_for_arr+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   11436:	4620      	mov	r0, r4
   11438:	f7ff fe9e 	bl	11178 <mesh_send_retry_packet>
   1143c:	3424      	adds	r4, #36	; 0x24
   1143e:	e77c      	b.n	1133a <mesh_handle_pnd_pkts_for_arr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   11440:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   11444:	2ac0      	cmp	r2, #192	; 0xc0
   11446:	d020      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   11448:	7820      	ldrb	r0, [r4, #0]
   1144a:	f899 2000 	ldrb.w	r2, [r9]
   1144e:	4290      	cmp	r0, r2
   11450:	d11b      	bne.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11452:	78e2      	ldrb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11454:	4293      	cmp	r3, r2
   11456:	d018      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11458:	b1ba      	cbz	r2, 1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   1145a:	2203      	movs	r2, #3
   1145c:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   1145e:	70e1      	strb	r1, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   11460:	f362 1307 	bfi	r3, r2, #4, #4
   11464:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   11466:	4620      	mov	r0, r4
   11468:	f7ff fe86 	bl	11178 <mesh_send_retry_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   1146c:	7923      	ldrb	r3, [r4, #4]
   1146e:	f89a 2000 	ldrb.w	r2, [sl]
   11472:	f362 03c5 	bfi	r3, r2, #3, #3
   11476:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   11478:	7860      	ldrb	r0, [r4, #1]
   1147a:	f7ff fe97 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   1147e:	b100      	cbz	r0, 11482 <mesh_handle_pnd_pkts_for_arr+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   11480:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   11482:	2e00      	cmp	r6, #0
   11484:	f47f af6a 	bne.w	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
   11488:	e7d8      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   1148a:	2601      	movs	r6, #1
   1148c:	e7f4      	b.n	11478 <mesh_handle_pnd_pkts_for_arr+0x158>
   1148e:	bf00      	nop
   11490:	2007c08c 	.word	0x2007c08c
   11494:	2007c094 	.word	0x2007c094

00011498 <mesh_set_node_address>:
mesh_set_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   11498:	1e43      	subs	r3, r0, #1
   1149a:	b2db      	uxtb	r3, r3
   1149c:	2bfd      	cmp	r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   1149e:	bf9d      	ittte	ls
   114a0:	4b02      	ldrls	r3, [pc, #8]	; (114ac <mesh_set_node_address+0x14>)
   114a2:	7018      	strbls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   114a4:	2001      	movls	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   114a6:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   114a8:	4770      	bx	lr
   114aa:	bf00      	nop
   114ac:	2007c08c 	.word	0x2007c08c

000114b0 <mesh_get_node_address>:
mesh_get_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   114b0:	4b01      	ldr	r3, [pc, #4]	; (114b8 <mesh_get_node_address+0x8>)
   114b2:	7818      	ldrb	r0, [r3, #0]
   114b4:	4770      	bx	lr
   114b6:	bf00      	nop
   114b8:	2007c08c 	.word	0x2007c08c

000114bc <mesh_set_retry_count>:
mesh_set_retry_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:812

void mesh_set_retry_count(const uint8_t count)
{
    if (count <= MESH_RETRY_COUNT_MAX) {
   114bc:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:813
        g_retry_count = count;
   114be:	bf9c      	itt	ls
   114c0:	4b01      	ldrls	r3, [pc, #4]	; (114c8 <mesh_set_retry_count+0xc>)
   114c2:	7018      	strbls	r0, [r3, #0]
   114c4:	4770      	bx	lr
   114c6:	bf00      	nop
   114c8:	2007c094 	.word	0x2007c094

000114cc <mesh_form_pkt>:
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   114cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   114d0:	4604      	mov	r4, r0
   114d2:	4691      	mov	r9, r2
   114d4:	461e      	mov	r6, r3
   114d6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   114da:	460f      	mov	r7, r1
   114dc:	2900      	cmp	r1, #0
   114de:	d065      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   114e0:	4b34      	ldr	r3, [pc, #208]	; (115b4 <mesh_form_pkt+0xe8>)
   114e2:	f893 8000 	ldrb.w	r8, [r3]
   114e6:	4541      	cmp	r1, r8
   114e8:	d060      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   114ea:	2e0f      	cmp	r6, #15
   114ec:	d85e      	bhi.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   114ee:	2800      	cmp	r0, #0
   114f0:	d05e      	beq.n	115b0 <mesh_form_pkt+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   114f2:	2220      	movs	r2, #32
   114f4:	2100      	movs	r1, #0
   114f6:	f00d f83b 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   114fa:	2fff      	cmp	r7, #255	; 0xff
   114fc:	bf08      	it	eq
   114fe:	f04f 0900 	moveq.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   11502:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11504:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   11506:	7067      	strb	r7, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11508:	f369 1387 	bfi	r3, r9, #6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   1150c:	f362 0302 	bfi	r3, r2, #0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11510:	4a29      	ldr	r2, [pc, #164]	; (115b8 <mesh_form_pkt+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   11512:	f884 8000 	strb.w	r8, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11516:	7812      	ldrb	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   11518:	f884 8002 	strb.w	r8, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1151c:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11520:	4a26      	ldr	r2, [pc, #152]	; (115bc <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11522:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11524:	7813      	ldrb	r3, [r2, #0]
   11526:	3301      	adds	r3, #1
   11528:	b2db      	uxtb	r3, r3
   1152a:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   1152c:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   1152e:	ab0b      	add	r3, sp, #44	; 0x2c
   11530:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   11532:	b9c5      	cbnz	r5, 11566 <mesh_form_pkt+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   11534:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   11536:	2301      	movs	r3, #1
   11538:	f8df 8084 	ldr.w	r8, [pc, #132]	; 115c0 <mesh_form_pkt+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   1153c:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   1153e:	f888 3000 	strb.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   11542:	f7ff fe33 	bl	111ac <mesh_find_rte_tbl_entry>
   11546:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   11548:	f7ff fe42 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   1154c:	2300      	movs	r3, #0
   1154e:	f888 3000 	strb.w	r3, [r8]
   11552:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   11554:	bb1f      	cbnz	r7, 1159e <mesh_form_pkt+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   11556:	f366 1307 	bfi	r3, r6, #4, #4
   1155a:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   1155c:	70e7      	strb	r7, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   1155e:	4628      	mov	r0, r5
   11560:	b003      	add	sp, #12
   11562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   11566:	f104 0908 	add.w	r9, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   1156c:	79e0      	ldrb	r0, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156e:	4613      	mov	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11570:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   11572:	f853 1b08 	ldr.w	r1, [r3], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   11576:	eb00 0802 	add.w	r8, r0, r2
   1157a:	fa5f f888 	uxtb.w	r8, r8
   1157e:	3d01      	subs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11580:	f1b8 0f18 	cmp.w	r8, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11584:	9301      	str	r3, [sp, #4]
   11586:	b2ed      	uxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11588:	d807      	bhi.n	1159a <mesh_form_pkt+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   1158a:	4448      	add	r0, r9
   1158c:	f00c ffcb 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   11590:	f884 8007 	strb.w	r8, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   11594:	2d00      	cmp	r5, #0
   11596:	d1e8      	bne.n	1156a <mesh_form_pkt+0x9e>
   11598:	e7cc      	b.n	11534 <mesh_form_pkt+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   1159a:	2500      	movs	r5, #0
   1159c:	e7cb      	b.n	11536 <mesh_form_pkt+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   1159e:	78ba      	ldrb	r2, [r7, #2]
   115a0:	f362 1307 	bfi	r3, r2, #4, #4
   115a4:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   115a6:	787b      	ldrb	r3, [r7, #1]
   115a8:	70e3      	strb	r3, [r4, #3]
   115aa:	e7d8      	b.n	1155e <mesh_form_pkt+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   115ac:	2500      	movs	r5, #0
   115ae:	e7d6      	b.n	1155e <mesh_form_pkt+0x92>
   115b0:	4605      	mov	r5, r0
   115b2:	e7d4      	b.n	1155e <mesh_form_pkt+0x92>
   115b4:	2007c08c 	.word	0x2007c08c
   115b8:	2007c094 	.word	0x2007c094
   115bc:	2007c457 	.word	0x2007c457
   115c0:	2007c33d 	.word	0x2007c33d

000115c4 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   115c4:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   115c6:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115c8:	4e13      	ldr	r6, [pc, #76]	; (11618 <mesh_send_formed_pkt+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ca:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115cc:	7032      	strb	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ce:	b920      	cbnz	r0, 115da <mesh_send_formed_pkt+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   115d0:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   115d2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   115d4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   115d6:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   115d8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115da:	f7ff fdaf 	bl	1113c <mesh_send_packet>
   115de:	4605      	mov	r5, r0
   115e0:	2800      	cmp	r0, #0
   115e2:	d0f5      	beq.n	115d0 <mesh_send_formed_pkt+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   115e4:	7923      	ldrb	r3, [r4, #4]
   115e6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   115ea:	2b40      	cmp	r3, #64	; 0x40
   115ec:	d010      	beq.n	11610 <mesh_send_formed_pkt+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   115ee:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   115f2:	424a      	negs	r2, r1
   115f4:	414a      	adcs	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115f6:	2bc0      	cmp	r3, #192	; 0xc0
   115f8:	d10b      	bne.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   115fa:	78e3      	ldrb	r3, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   115fc:	b14b      	cbz	r3, 11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115fe:	7861      	ldrb	r1, [r4, #1]
   11600:	4299      	cmp	r1, r3
   11602:	d006      	beq.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   11604:	7961      	ldrb	r1, [r4, #5]
   11606:	4620      	mov	r0, r4
   11608:	0909      	lsrs	r1, r1, #4
   1160a:	f7ff fe15 	bl	11238 <mesh_pending_packets_add>
   1160e:	e7e0      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11610:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   11612:	2a00      	cmp	r2, #0
   11614:	d1f6      	bne.n	11604 <mesh_send_formed_pkt+0x40>
   11616:	e7dc      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11618:	2007c33d 	.word	0x2007c33d

0001161c <mesh_init>:
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1161c:	b082      	sub	sp, #8
   1161e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11622:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11624:	1e42      	subs	r2, r0, #1
   11626:	b2d2      	uxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11628:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1162a:	2afd      	cmp	r2, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1162c:	4605      	mov	r5, r0
   1162e:	460e      	mov	r6, r1
   11630:	9315      	str	r3, [sp, #84]	; 0x54
   11632:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11636:	d905      	bls.n	11644 <mesh_init+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   11638:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   1163a:	b00d      	add	sp, #52	; 0x34
   1163c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11640:	b002      	add	sp, #8
   11642:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   11644:	2b00      	cmp	r3, #0
   11646:	d0f7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   11648:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   1164a:	2f00      	cmp	r7, #0
   1164c:	d0f4      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   1164e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   11650:	2b00      	cmp	r3, #0
   11652:	d0f1      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   11654:	9b18      	ldr	r3, [sp, #96]	; 0x60
   11656:	2b00      	cmp	r3, #0
   11658:	d0ee      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   1165a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1165c:	2b00      	cmp	r3, #0
   1165e:	d0eb      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11660:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   11662:	2248      	movs	r2, #72	; 0x48
   11664:	2100      	movs	r1, #0
   11666:	4823      	ldr	r0, [pc, #140]	; (116f4 <mesh_init+0xd8>)
   11668:	f00c ff82 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   1166c:	2290      	movs	r2, #144	; 0x90
   1166e:	2100      	movs	r1, #0
   11670:	4821      	ldr	r0, [pc, #132]	; (116f8 <mesh_init+0xdc>)
   11672:	f00c ff7d 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   11676:	2210      	movs	r2, #16
   11678:	2100      	movs	r1, #0
   1167a:	4820      	ldr	r0, [pc, #128]	; (116fc <mesh_init+0xe0>)
   1167c:	f00c ff78 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11680:	4b1f      	ldr	r3, [pc, #124]	; (11700 <mesh_init+0xe4>)
   11682:	601c      	str	r4, [r3, #0]
   11684:	605c      	str	r4, [r3, #4]
   11686:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   11688:	4b1e      	ldr	r3, [pc, #120]	; (11704 <mesh_init+0xe8>)
   1168a:	601c      	str	r4, [r3, #0]
   1168c:	605c      	str	r4, [r3, #4]
   1168e:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   11690:	4b1d      	ldr	r3, [pc, #116]	; (11708 <mesh_init+0xec>)
   11692:	701d      	strb	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11694:	4b1d      	ldr	r3, [pc, #116]	; (1170c <mesh_init+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   11696:	4d1e      	ldr	r5, [pc, #120]	; (11710 <mesh_init+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11698:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   1169a:	ae15      	add	r6, sp, #84	; 0x54
   1169c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   1169e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   116a0:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116a2:	2218      	movs	r2, #24
   116a4:	4621      	mov	r1, r4
   116a6:	481b      	ldr	r0, [pc, #108]	; (11714 <mesh_init+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   116a8:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116aa:	f00c ff61 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   116ae:	4649      	mov	r1, r9
   116b0:	2217      	movs	r2, #23
   116b2:	4818      	ldr	r0, [pc, #96]	; (11714 <mesh_init+0xf8>)
   116b4:	f00e fd23 	bl	200fe <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   116b8:	4621      	mov	r1, r4
   116ba:	4620      	mov	r0, r4
   116bc:	47b8      	blx	r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   116be:	2800      	cmp	r0, #0
   116c0:	d0ba      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   116c2:	f1b8 0f00 	cmp.w	r8, #0
   116c6:	d102      	bne.n	116ce <mesh_init+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   116c8:	f7ff fd12 	bl	110f0 <mesh_update_soft_timers>
   116cc:	e7b5      	b.n	1163a <mesh_init+0x1e>
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   116ce:	2306      	movs	r3, #6
   116d0:	9302      	str	r3, [sp, #8]
   116d2:	4b11      	ldr	r3, [pc, #68]	; (11718 <mesh_init+0xfc>)
   116d4:	4622      	mov	r2, r4
   116d6:	9301      	str	r3, [sp, #4]
   116d8:	2301      	movs	r3, #1
   116da:	21ff      	movs	r1, #255	; 0xff
   116dc:	9300      	str	r3, [sp, #0]
   116de:	a804      	add	r0, sp, #16
   116e0:	f7ff fef4 	bl	114cc <mesh_form_pkt>
   116e4:	2800      	cmp	r0, #0
   116e6:	d0a7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   116e8:	a804      	add	r0, sp, #16
   116ea:	f7ff ff6b 	bl	115c4 <mesh_send_formed_pkt>
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   116ee:	2800      	cmp	r0, #0
   116f0:	d0a2      	beq.n	11638 <mesh_init+0x1c>
   116f2:	e7e9      	b.n	116c8 <mesh_init+0xac>
   116f4:	2007c3f2 	.word	0x2007c3f2
   116f8:	2007c33e 	.word	0x2007c33e
   116fc:	2007c447 	.word	0x2007c447
   11700:	2007c43a 	.word	0x2007c43a
   11704:	2007c3ce 	.word	0x2007c3ce
   11708:	2007c08c 	.word	0x2007c08c
   1170c:	2007c446 	.word	0x2007c446
   11710:	2007c328 	.word	0x2007c328
   11714:	2007c3da 	.word	0x2007c3da
   11718:	00024e95 	.word	0x00024e95

0001171c <mesh_send>:
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   1171c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1171e:	2b18      	cmp	r3, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11720:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   11722:	d807      	bhi.n	11734 <mesh_send+0x18>
   11724:	1c1d      	adds	r5, r3, #0
   11726:	fab2 f482 	clz	r4, r2
   1172a:	bf18      	it	ne
   1172c:	2501      	movne	r5, #1
   1172e:	0964      	lsrs	r4, r4, #5
   11730:	42ac      	cmp	r4, r5
   11732:	d101      	bne.n	11738 <mesh_send+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   11734:	2000      	movs	r0, #0
   11736:	e00e      	b.n	11756 <mesh_send+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11738:	9302      	str	r3, [sp, #8]
   1173a:	9201      	str	r2, [sp, #4]
   1173c:	9500      	str	r5, [sp, #0]
   1173e:	460a      	mov	r2, r1
   11740:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   11744:	4601      	mov	r1, r0
   11746:	a804      	add	r0, sp, #16
   11748:	f7ff fec0 	bl	114cc <mesh_form_pkt>
   1174c:	2800      	cmp	r0, #0
   1174e:	d0f1      	beq.n	11734 <mesh_send+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11750:	a804      	add	r0, sp, #16
   11752:	f7ff ff37 	bl	115c4 <mesh_send_formed_pkt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   11756:	b00d      	add	sp, #52	; 0x34
   11758:	bd30      	pop	{r4, r5, pc}

0001175a <mesh_send_ack>:
mesh_send_ack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   1175a:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   1175c:	7953      	ldrb	r3, [r2, #5]
   1175e:	7814      	ldrb	r4, [r2, #0]
   11760:	091b      	lsrs	r3, r3, #4
   11762:	9300      	str	r3, [sp, #0]
   11764:	4602      	mov	r2, r0
   11766:	460b      	mov	r3, r1
   11768:	4620      	mov	r0, r4
   1176a:	2103      	movs	r1, #3
   1176c:	f7ff ffd6 	bl	1171c <mesh_send>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   11770:	b002      	add	sp, #8
   11772:	bd10      	pop	{r4, pc}

00011774 <mesh_get_routing_entry>:
mesh_get_routing_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081

const mesh_rte_table_t* mesh_get_routing_entry(const uint8_t route_num)
{
   11774:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1083
    mesh_rte_table_t *entry = NULL;
    uint8_t idx = 0, found_entries = 0;
   11776:	4619      	mov	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081
{
   11778:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1087

    // Routing table may have blank entries which do not account for route_num
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   1177a:	4a08      	ldr	r2, [pc, #32]	; (1179c <mesh_get_routing_entry+0x28>)
   1177c:	f812 5023 	ldrb.w	r5, [r2, r3, lsl #2]
   11780:	009c      	lsls	r4, r3, #2
   11782:	b12d      	cbz	r5, 11790 <mesh_get_routing_entry+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1088
            if (route_num == found_entries) {
   11784:	4288      	cmp	r0, r1
   11786:	d101      	bne.n	1178c <mesh_get_routing_entry+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1089
                entry = &g_rte_table[idx];
   11788:	1910      	adds	r0, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1090
                break;
   1178a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1092
            }
            ++found_entries;
   1178c:	3101      	adds	r1, #1
   1178e:	b2c9      	uxtb	r1, r1
   11790:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1086 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   11792:	2b04      	cmp	r3, #4
   11794:	d1f2      	bne.n	1177c <mesh_get_routing_entry+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1082
    mesh_rte_table_t *entry = NULL;
   11796:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1097
        }
    }

    return entry;
}
   11798:	bd30      	pop	{r4, r5, pc}
   1179a:	bf00      	nop
   1179c:	2007c447 	.word	0x2007c447

000117a0 <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

uint8_t mesh_get_num_routing_entries(void)
{
   117a0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   117a2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   117a4:	4a04      	ldr	r2, [pc, #16]	; (117b8 <mesh_get_num_routing_entries+0x18>)
   117a6:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   117aa:	b109      	cbz	r1, 117b0 <mesh_get_num_routing_entries+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   117ac:	3001      	adds	r0, #1
   117ae:	b2c0      	uxtb	r0, r0
   117b0:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   117b2:	2b04      	cmp	r3, #4
   117b4:	d1f7      	bne.n	117a6 <mesh_get_num_routing_entries+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   117b6:	4770      	bx	lr
   117b8:	2007c447 	.word	0x2007c447

000117bc <mesh_service>:
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   117bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   117c0:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   117c2:	2220      	movs	r2, #32
   117c4:	2100      	movs	r1, #0
   117c6:	4668      	mov	r0, sp
   117c8:	f00c fed2 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   117cc:	4ba3      	ldr	r3, [pc, #652]	; (11a5c <mesh_service+0x2a0>)
   117ce:	781b      	ldrb	r3, [r3, #0]
   117d0:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   117d4:	bb2b      	cbnz	r3, 11822 <mesh_service+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   117d6:	4fa2      	ldr	r7, [pc, #648]	; (11a60 <mesh_service+0x2a4>)
   117d8:	2120      	movs	r1, #32
   117da:	693b      	ldr	r3, [r7, #16]
   117dc:	4668      	mov	r0, sp
   117de:	4798      	blx	r3
   117e0:	b908      	cbnz	r0, 117e6 <mesh_service+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   117e2:	2400      	movs	r4, #0
   117e4:	e011      	b.n	1180a <mesh_service+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   117e6:	4d9f      	ldr	r5, [pc, #636]	; (11a64 <mesh_service+0x2a8>)
   117e8:	886b      	ldrh	r3, [r5, #2]
   117ea:	3301      	adds	r3, #1
   117ec:	806b      	strh	r3, [r5, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117ee:	f7ff ffd7 	bl	117a0 <mesh_get_num_routing_entries>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f2:	f89d 2004 	ldrb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117f6:	72a8      	strb	r0, [r5, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f8:	f002 0307 	and.w	r3, r2, #7
   117fc:	2b03      	cmp	r3, #3
   117fe:	d013      	beq.n	11828 <mesh_service+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   11800:	4a99      	ldr	r2, [pc, #612]	; (11a68 <mesh_service+0x2ac>)
   11802:	7813      	ldrb	r3, [r2, #0]
   11804:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11808:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   1180a:	f7ff fc71 	bl	110f0 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1180e:	2204      	movs	r2, #4
   11810:	4996      	ldr	r1, [pc, #600]	; (11a6c <mesh_service+0x2b0>)
   11812:	4620      	mov	r0, r4
   11814:	f7ff fd84 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   11818:	2202      	movs	r2, #2
   1181a:	4995      	ldr	r1, [pc, #596]	; (11a70 <mesh_service+0x2b4>)
   1181c:	4620      	mov	r0, r4
   1181e:	f7ff fd7f 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   11822:	b008      	add	sp, #32
   11824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   11828:	4b92      	ldr	r3, [pc, #584]	; (11a74 <mesh_service+0x2b8>)
   1182a:	f89d e002 	ldrb.w	lr, [sp, #2]
   1182e:	781e      	ldrb	r6, [r3, #0]
   11830:	45b6      	cmp	lr, r6
   11832:	d104      	bne.n	1183e <mesh_service+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11834:	4a8c      	ldr	r2, [pc, #560]	; (11a68 <mesh_service+0x2ac>)
   11836:	7813      	ldrb	r3, [r2, #0]
   11838:	f043 0302 	orr.w	r3, r3, #2
   1183c:	e7e4      	b.n	11808 <mesh_service+0x4c>
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1183e:	4d8e      	ldr	r5, [pc, #568]	; (11a78 <mesh_service+0x2bc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11840:	4621      	mov	r1, r4
   11842:	46a8      	mov	r8, r5
   11844:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   11848:	f89d 0000 	ldrb.w	r0, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   1184c:	f89d c006 	ldrb.w	ip, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11850:	fa5f f982 	uxtb.w	r9, r2
   11854:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   11858:	f813 a005 	ldrb.w	sl, [r3, r5]
   1185c:	4582      	cmp	sl, r0
   1185e:	d123      	bne.n	118a8 <mesh_service+0xec>
   11860:	442b      	add	r3, r5
   11862:	f893 a001 	ldrb.w	sl, [r3, #1]
   11866:	45e2      	cmp	sl, ip
   11868:	d11e      	bne.n	118a8 <mesh_service+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186a:	789d      	ldrb	r5, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   1186c:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186e:	ebb5 0509 	subs.w	r5, r5, r9
   11872:	bf18      	it	ne
   11874:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   11876:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   1187a:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1187e:	f7ff fd23 	bl	112c8 <mesh_get_rte_to_modify>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   11882:	f89d 2002 	ldrb.w	r2, [sp, #2]
   11886:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   11888:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   1188a:	2200      	movs	r2, #0
   1188c:	7082      	strb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   1188e:	f7ff fc9f 	bl	111d0 <mesh_update_rte_scores>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   11892:	f1b9 0f00 	cmp.w	r9, #0
   11896:	d001      	beq.n	1189c <mesh_service+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   11898:	2d00      	cmp	r5, #0
   1189a:	d0a2      	beq.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   1189c:	f89d 3000 	ldrb.w	r3, [sp]
   118a0:	42b3      	cmp	r3, r6
   118a2:	d133      	bne.n	1190c <mesh_service+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   118a4:	466c      	mov	r4, sp
   118a6:	e7b0      	b.n	1180a <mesh_service+0x4e>
   118a8:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   118aa:	2904      	cmp	r1, #4
   118ac:	d1d2      	bne.n	11854 <mesh_service+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ae:	4973      	ldr	r1, [pc, #460]	; (11a7c <mesh_service+0x2c0>)
   118b0:	680b      	ldr	r3, [r1, #0]
   118b2:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b4:	4a72      	ldr	r2, [pc, #456]	; (11a80 <mesh_service+0x2c4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118b6:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b8:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ba:	f883 c001 	strb.w	ip, [r3, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118be:	d106      	bne.n	118ce <mesh_service+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   118c0:	f8c1 8000 	str.w	r8, [r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118c4:	4586      	cmp	lr, r0
   118c6:	d105      	bne.n	118d4 <mesh_service+0x118>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   118c8:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   118ca:	46a9      	mov	r9, r5
   118cc:	e7d5      	b.n	1187a <mesh_service+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   118ce:	3303      	adds	r3, #3
   118d0:	600b      	str	r3, [r1, #0]
   118d2:	e7f7      	b.n	118c4 <mesh_service+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118d4:	4286      	cmp	r6, r0
   118d6:	d0f7      	beq.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   118d8:	f7ff fcf6 	bl	112c8 <mesh_get_rte_to_modify>
   118dc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   118de:	f7ff fc77 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   118e2:	782b      	ldrb	r3, [r5, #0]
   118e4:	b133      	cbz	r3, 118f4 <mesh_service+0x138>
   118e6:	f89d 3005 	ldrb.w	r3, [sp, #5]
   118ea:	78aa      	ldrb	r2, [r5, #2]
   118ec:	f003 030f 	and.w	r3, r3, #15
   118f0:	4293      	cmp	r3, r2
   118f2:	dce9      	bgt.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   118f4:	f89d 3000 	ldrb.w	r3, [sp]
   118f8:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   118fa:	f89d 3002 	ldrb.w	r3, [sp, #2]
   118fe:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   11900:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11904:	f3c3 0303 	ubfx	r3, r3, #0, #4
   11908:	70ab      	strb	r3, [r5, #2]
   1190a:	e7dd      	b.n	118c8 <mesh_service+0x10c>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   1190c:	f89d 8001 	ldrb.w	r8, [sp, #1]
   11910:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   11914:	d11b      	bne.n	1194e <mesh_service+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   11916:	683b      	ldr	r3, [r7, #0]
   11918:	2120      	movs	r1, #32
   1191a:	4668      	mov	r0, sp
   1191c:	4798      	blx	r3
   1191e:	b920      	cbnz	r0, 1192a <mesh_service+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   11920:	4a51      	ldr	r2, [pc, #324]	; (11a68 <mesh_service+0x2ac>)
   11922:	7813      	ldrb	r3, [r2, #0]
   11924:	f043 0304 	orr.w	r3, r3, #4
   11928:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   1192a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1192e:	f003 020f 	and.w	r2, r3, #15
   11932:	1c51      	adds	r1, r2, #1
   11934:	f361 0303 	bfi	r3, r1, #0, #4
   11938:	f88d 3005 	strb.w	r3, [sp, #5]
   1193c:	f3c3 1303 	ubfx	r3, r3, #4, #4
   11940:	429a      	cmp	r2, r3
   11942:	f6bf af4e 	bge.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   11946:	4668      	mov	r0, sp
   11948:	f7ff fbf8 	bl	1113c <mesh_send_packet>
   1194c:	e749      	b.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1194e:	4546      	cmp	r6, r8
   11950:	d12e      	bne.n	119b0 <mesh_service+0x1f4>
mesh_handle_our_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   11952:	f1b9 0f00 	cmp.w	r9, #0
   11956:	d10c      	bne.n	11972 <mesh_service+0x1b6>
   11958:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1195c:	b14b      	cbz	r3, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1195e:	683b      	ldr	r3, [r7, #0]
   11960:	2120      	movs	r1, #32
   11962:	4668      	mov	r0, sp
   11964:	4798      	blx	r3
   11966:	b920      	cbnz	r0, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   11968:	4a3f      	ldr	r2, [pc, #252]	; (11a68 <mesh_service+0x2ac>)
   1196a:	7813      	ldrb	r3, [r2, #0]
   1196c:	f043 0304 	orr.w	r3, r3, #4
   11970:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   11972:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11976:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1197a:	2b40      	cmp	r3, #64	; 0x40
   1197c:	d112      	bne.n	119a4 <mesh_service+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1197e:	f89d 3007 	ldrb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11982:	466a      	mov	r2, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   11984:	b923      	cbnz	r3, 11990 <mesh_service+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11986:	2118      	movs	r1, #24
   11988:	483e      	ldr	r0, [pc, #248]	; (11a84 <mesh_service+0x2c8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1198a:	f7ff fee6 	bl	1175a <mesh_send_ack>
   1198e:	e789      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   11990:	210c      	movs	r1, #12
   11992:	4834      	ldr	r0, [pc, #208]	; (11a64 <mesh_service+0x2a8>)
   11994:	f7ff fee1 	bl	1175a <mesh_send_ack>
   11998:	2800      	cmp	r0, #0
   1199a:	d183      	bne.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1199c:	2100      	movs	r1, #0
   1199e:	466a      	mov	r2, sp
   119a0:	4608      	mov	r0, r1
   119a2:	e7f2      	b.n	1198a <mesh_service+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   119a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
   119a8:	2b00      	cmp	r3, #0
   119aa:	f47f af7b 	bne.w	118a4 <mesh_service+0xe8>
   119ae:	e7f5      	b.n	1199c <mesh_service+0x1e0>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   119b0:	4b35      	ldr	r3, [pc, #212]	; (11a88 <mesh_service+0x2cc>)
   119b2:	781f      	ldrb	r7, [r3, #0]
   119b4:	2f00      	cmp	r7, #0
   119b6:	f43f af14 	beq.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   119ba:	f89d 5005 	ldrb.w	r5, [sp, #5]
   119be:	f005 090f 	and.w	r9, r5, #15
   119c2:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   119c6:	45d1      	cmp	r9, sl
   119c8:	f6bf af0b 	bge.w	117e2 <mesh_service+0x26>
mesh_handle_mesh_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   119cc:	4640      	mov	r0, r8
   119ce:	f7ff fbed 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119d2:	f89d 3003 	ldrb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119d6:	f109 0901 	add.w	r9, r9, #1
   119da:	f369 0503 	bfi	r5, r9, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119de:	429e      	cmp	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119e0:	f88d 5005 	strb.w	r5, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119e4:	d124      	bne.n	11a30 <mesh_service+0x274>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   119e6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   119ea:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   119ee:	2b40      	cmp	r3, #64	; 0x40
   119f0:	d003      	beq.n	119fa <mesh_service+0x23e>
   119f2:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   119f6:	4257      	negs	r7, r2
   119f8:	4157      	adcs	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fa:	b350      	cbz	r0, 11a52 <mesh_service+0x296>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   119fc:	2bc0      	cmp	r3, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fe:	7844      	ldrb	r4, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a00:	d120      	bne.n	11a44 <mesh_service+0x288>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   11a02:	45a0      	cmp	r8, r4
   11a04:	d012      	beq.n	11a2c <mesh_service+0x270>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a06:	3400      	adds	r4, #0
   11a08:	bf18      	it	ne
   11a0a:	2401      	movne	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a0c:	433c      	orrs	r4, r7
   11a0e:	f004 0401 	and.w	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   11a12:	b1d0      	cbz	r0, 11a4a <mesh_service+0x28e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   11a14:	7843      	ldrb	r3, [r0, #1]
   11a16:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   11a1a:	7885      	ldrb	r5, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   11a1c:	4668      	mov	r0, sp
   11a1e:	f7ff fb8d 	bl	1113c <mesh_send_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   11a22:	2c00      	cmp	r4, #0
   11a24:	f43f af3e 	beq.w	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a28:	4629      	mov	r1, r5
   11a2a:	e007      	b.n	11a3c <mesh_service+0x280>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a2c:	2400      	movs	r4, #0
   11a2e:	e7ed      	b.n	11a0c <mesh_service+0x250>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   11a30:	2b00      	cmp	r3, #0
   11a32:	f47f af37 	bne.w	118a4 <mesh_service+0xe8>
   11a36:	2800      	cmp	r0, #0
   11a38:	d1ec      	bne.n	11a14 <mesh_service+0x258>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   11a3a:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a3c:	4668      	mov	r0, sp
   11a3e:	f7ff fbfb 	bl	11238 <mesh_pending_packets_add>
   11a42:	e72f      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a44:	463c      	mov	r4, r7
   11a46:	e7e5      	b.n	11a14 <mesh_service+0x258>
   11a48:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   11a4a:	2500      	movs	r5, #0
   11a4c:	f88d 5003 	strb.w	r5, [sp, #3]
   11a50:	e7e4      	b.n	11a1c <mesh_service+0x260>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a52:	2bc0      	cmp	r3, #192	; 0xc0
   11a54:	d1f8      	bne.n	11a48 <mesh_service+0x28c>
   11a56:	4604      	mov	r4, r0
   11a58:	e7d8      	b.n	11a0c <mesh_service+0x250>
   11a5a:	bf00      	nop
   11a5c:	2007c33d 	.word	0x2007c33d
   11a60:	2007c328 	.word	0x2007c328
   11a64:	2007c3ce 	.word	0x2007c3ce
   11a68:	2007c33c 	.word	0x2007c33c
   11a6c:	2007c33e 	.word	0x2007c33e
   11a70:	2007c3f2 	.word	0x2007c3f2
   11a74:	2007c08c 	.word	0x2007c08c
   11a78:	2007c43a 	.word	0x2007c43a
   11a7c:	2007c090 	.word	0x2007c090
   11a80:	2007c443 	.word	0x2007c443
   11a84:	2007c3da 	.word	0x2007c3da
   11a88:	2007c446 	.word	0x2007c446

00011a8c <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   11a8c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   11a8e:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   11a90:	4a09      	ldr	r2, [pc, #36]	; (11ab8 <mesh_get_pnd_pkt_count+0x2c>)
   11a92:	18d1      	adds	r1, r2, r3
   11a94:	7849      	ldrb	r1, [r1, #1]
   11a96:	b109      	cbz	r1, 11a9c <mesh_get_pnd_pkt_count+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   11a98:	3001      	adds	r0, #1
   11a9a:	b2c0      	uxtb	r0, r0
   11a9c:	3324      	adds	r3, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   11a9e:	2b90      	cmp	r3, #144	; 0x90
   11aa0:	d1f7      	bne.n	11a92 <mesh_get_pnd_pkt_count+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aa2:	4b06      	ldr	r3, [pc, #24]	; (11abc <mesh_get_pnd_pkt_count+0x30>)
   11aa4:	785a      	ldrb	r2, [r3, #1]
   11aa6:	b10a      	cbz	r2, 11aac <mesh_get_pnd_pkt_count+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11aa8:	3001      	adds	r0, #1
   11aaa:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aac:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   11ab0:	b10b      	cbz	r3, 11ab6 <mesh_get_pnd_pkt_count+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11ab2:	3001      	adds	r0, #1
   11ab4:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   11ab6:	4770      	bx	lr
   11ab8:	2007c33e 	.word	0x2007c33e
   11abc:	2007c3f2 	.word	0x2007c3f2

00011ac0 <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1153
                           (MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
    return timeout;
}

uint32_t mesh_get_max_timeout_before_packet_fails(uint8_t node_addr)
{
   11ac0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1154
    mesh_rte_table_t *e =  mesh_find_rte_tbl_entry(node_addr);
   11ac2:	f7ff fb73 	bl	111ac <mesh_find_rte_tbl_entry>
   11ac6:	4b06      	ldr	r3, [pc, #24]	; (11ae0 <mesh_get_max_timeout_before_packet_fails+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155
    uint32_t timeout = e ? (1 + e->num_hops) * g_retry_count * MESH_ACK_TIMEOUT_MS :
   11ac8:	b128      	cbz	r0, 11ad6 <mesh_get_max_timeout_before_packet_fails+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155 (discriminator 1)
   11aca:	7882      	ldrb	r2, [r0, #2]
   11acc:	7818      	ldrb	r0, [r3, #0]
   11ace:	fb02 0000 	mla	r0, r2, r0, r0
   11ad2:	00c0      	lsls	r0, r0, #3
   11ad4:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1156 (discriminator 2)
                           (g_retry_count * MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
   11ad6:	2018      	movs	r0, #24
   11ad8:	781b      	ldrb	r3, [r3, #0]
   11ada:	4358      	muls	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1158 (discriminator 2)
    return timeout;
}
   11adc:	bd08      	pop	{r3, pc}
   11ade:	bf00      	nop
   11ae0:	2007c094 	.word	0x2007c094

00011ae4 <mesh_get_stats>:
mesh_get_stats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1163

#if MESH_USE_STATISTICS
mesh_stats_t mesh_get_stats(void)
{
    return g_mesh_stats;
   11ae4:	4903      	ldr	r1, [pc, #12]	; (11af4 <mesh_get_stats+0x10>)
   11ae6:	680b      	ldr	r3, [r1, #0]
   11ae8:	6003      	str	r3, [r0, #0]
   11aea:	684b      	ldr	r3, [r1, #4]
   11aec:	6043      	str	r3, [r0, #4]
   11aee:	688b      	ldr	r3, [r1, #8]
   11af0:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1164
}
   11af2:	4770      	bx	lr
   11af4:	2007c3ce 	.word	0x2007c3ce

00011af8 <mem_cpy>:
mem_cpy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   11af8:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   11afa:	4604      	mov	r4, r0
   11afc:	1f0d      	subs	r5, r1, #4
   11afe:	1b13      	subs	r3, r2, r4
   11b00:	4403      	add	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   11b02:	2b03      	cmp	r3, #3
   11b04:	d80a      	bhi.n	11b1c <mem_cpy+0x24>
   11b06:	f022 0303 	bic.w	r3, r2, #3
   11b0a:	4419      	add	r1, r3
   11b0c:	f002 0203 	and.w	r2, r2, #3
   11b10:	3b01      	subs	r3, #1
   11b12:	4418      	add	r0, r3
   11b14:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   11b16:	4291      	cmp	r1, r2
   11b18:	d105      	bne.n	11b26 <mem_cpy+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   11b1a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   11b1c:	f855 3f04 	ldr.w	r3, [r5, #4]!
   11b20:	f844 3b04 	str.w	r3, [r4], #4
   11b24:	e7eb      	b.n	11afe <mem_cpy+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   11b26:	f811 3b01 	ldrb.w	r3, [r1], #1
   11b2a:	f800 3f01 	strb.w	r3, [r0, #1]!
   11b2e:	e7f2      	b.n	11b16 <mem_cpy+0x1e>

00011b30 <mem_set>:
mem_set():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   11b30:	4402      	add	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   11b32:	4290      	cmp	r0, r2
   11b34:	d100      	bne.n	11b38 <mem_set+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   11b36:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   11b38:	f800 1b01 	strb.w	r1, [r0], #1
   11b3c:	e7f9      	b.n	11b32 <mem_set+0x2>

00011b3e <sum_sfn>:
sum_sfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   11b3e:	4602      	mov	r2, r0
   11b40:	f100 010b 	add.w	r1, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   11b44:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   11b46:	01c3      	lsls	r3, r0, #7
   11b48:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   11b4c:	f812 0b01 	ldrb.w	r0, [r2], #1
   11b50:	4403      	add	r3, r0
   11b52:	428a      	cmp	r2, r1
   11b54:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   11b58:	d1f5      	bne.n	11b46 <sum_sfn+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   11b5a:	4770      	bx	lr

00011b5c <get_ldnumber>:
get_ldnumber():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   11b5c:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   11b5e:	b510      	push	{r4, lr}
   11b60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   11b62:	b153      	cbz	r3, 11b7a <get_ldnumber+0x1e>
   11b64:	4619      	mov	r1, r3
   11b66:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   11b68:	f811 0b01 	ldrb.w	r0, [r1], #1
   11b6c:	281f      	cmp	r0, #31
   11b6e:	d910      	bls.n	11b92 <get_ldnumber+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   11b70:	283a      	cmp	r0, #58	; 0x3a
   11b72:	d1f8      	bne.n	11b66 <get_ldnumber+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   11b74:	1c59      	adds	r1, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   11b76:	428a      	cmp	r2, r1
   11b78:	d002      	beq.n	11b80 <get_ldnumber+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   11b7a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   11b7e:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b80:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   11b82:	3b30      	subs	r3, #48	; 0x30
   11b84:	b2d9      	uxtb	r1, r3
   11b86:	2901      	cmp	r1, #1
   11b88:	d8f7      	bhi.n	11b7a <get_ldnumber+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11b8a:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b8c:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11b8e:	6022      	str	r2, [r4, #0]
   11b90:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2122
		vol = 0;		/* Drive 0 */
   11b92:	2000      	movs	r0, #0
   11b94:	bd10      	pop	{r4, pc}

00011b96 <get_fileinfo>:
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11b96:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11b98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1744
	p = fno->fname;
   11b9c:	f101 0209 	add.w	r2, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11ba0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11ba2:	b363      	cbz	r3, 11bfe <get_fileinfo+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1748
		i = 0;
   11ba4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11ba6:	272e      	movs	r7, #46	; 0x2e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1746
		BYTE *dir = dp->dir;
   11ba8:	6941      	ldr	r1, [r0, #20]
   11baa:	1e4e      	subs	r6, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1750
			c = (TCHAR)dir[i++];
   11bac:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   11bb0:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1751
			if (c == ' ') continue;			/* Skip padding spaces */
   11bb2:	2b20      	cmp	r3, #32
   11bb4:	d019      	beq.n	11bea <get_fileinfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11bb6:	2b05      	cmp	r3, #5
   11bb8:	d048      	beq.n	11c4c <get_fileinfo+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11bba:	2c09      	cmp	r4, #9
   11bbc:	d101      	bne.n	11bc2 <get_fileinfo+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753 (discriminator 1)
   11bbe:	7017      	strb	r7, [r2, #0]
   11bc0:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755
			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
   11bc2:	f1a3 0e41 	sub.w	lr, r3, #65	; 0x41
   11bc6:	f1be 0f19 	cmp.w	lr, #25
   11bca:	d80c      	bhi.n	11be6 <get_fileinfo+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755 (discriminator 1)
   11bcc:	2c08      	cmp	r4, #8
   11bce:	bf8c      	ite	hi
   11bd0:	f04f 0c10 	movhi.w	ip, #16
   11bd4:	f04f 0c08 	movls.w	ip, #8
   11bd8:	f891 e00c 	ldrb.w	lr, [r1, #12]
   11bdc:	ea1c 0f0e 	tst.w	ip, lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1756 (discriminator 1)
				c += 0x20;			/* To lower */
   11be0:	bf1c      	itt	ne
   11be2:	3320      	addne	r3, #32
   11be4:	b2db      	uxtbne	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1764
			*p++ = c;
   11be6:	7013      	strb	r3, [r2, #0]
   11be8:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1749
		while (i < 11) {		/* Copy name body and extension */
   11bea:	2c0b      	cmp	r4, #11
   11bec:	d1de      	bne.n	11bac <get_fileinfo+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1766
		fno->fattrib = dir[DIR_Attr];				/* Attribute */
   11bee:	7acb      	ldrb	r3, [r1, #11]
   11bf0:	722b      	strb	r3, [r5, #8]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
#define	ST_WORD(ptr,val)	*(WORD*)(BYTE*)(ptr)=(WORD)(val)
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11bf2:	69cb      	ldr	r3, [r1, #28]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1767
		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
   11bf4:	602b      	str	r3, [r5, #0]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11bf6:	8b0b      	ldrh	r3, [r1, #24]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1768
		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
   11bf8:	80ab      	strh	r3, [r5, #4]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11bfa:	8acb      	ldrh	r3, [r1, #22]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1769
		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
   11bfc:	80eb      	strh	r3, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1771
	*p = 0;		/* Terminate SFN string by a \0 */
   11bfe:	2400      	movs	r4, #0
   11c00:	7014      	strb	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1774
	if (fno->lfname) {
   11c02:	69ae      	ldr	r6, [r5, #24]
   11c04:	b33e      	cbz	r6, 11c56 <get_fileinfo+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c06:	6903      	ldr	r3, [r0, #16]
   11c08:	b923      	cbnz	r3, 11c14 <get_fileinfo+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1777
		i = 0; p = fno->lfname;
   11c0a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1791
		p[i] = 0;	/* Terminate LFN string by a \0 */
   11c0c:	2300      	movs	r3, #0
   11c0e:	5533      	strb	r3, [r6, r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1794
}
   11c10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 1)
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c14:	69eb      	ldr	r3, [r5, #28]
   11c16:	2b00      	cmp	r3, #0
   11c18:	d0f7      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 2)
   11c1a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   11c1e:	8c02      	ldrh	r2, [r0, #32]
   11c20:	429a      	cmp	r2, r3
   11c22:	d0f2      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1779
			lfn = dp->lfn;
   11c24:	f8d0 801c 	ldr.w	r8, [r0, #28]
   11c28:	1e77      	subs	r7, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1780
			while ((w = *lfn++) != 0) {		/* Get an LFN character */
   11c2a:	f838 0014 	ldrh.w	r0, [r8, r4, lsl #1]
   11c2e:	2800      	cmp	r0, #0
   11c30:	d0ec      	beq.n	11c0c <get_fileinfo+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1782
				w = ff_convert(w, 0);		/* Unicode -> OEM */
   11c32:	2100      	movs	r1, #0
   11c34:	f001 ffe2 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1783
				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
   11c38:	2800      	cmp	r0, #0
   11c3a:	d0e6      	beq.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1787
				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
   11c3c:	69eb      	ldr	r3, [r5, #28]
   11c3e:	3b01      	subs	r3, #1
   11c40:	429c      	cmp	r4, r3
   11c42:	d2e2      	bcs.n	11c0a <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1788
				p[i++] = (TCHAR)w;
   11c44:	3401      	adds	r4, #1
   11c46:	f807 0f01 	strb.w	r0, [r7, #1]!
   11c4a:	e7ee      	b.n	11c2a <get_fileinfo+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c4c:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11c4e:	f04f 03e5 	mov.w	r3, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c52:	d1c8      	bne.n	11be6 <get_fileinfo+0x50>
   11c54:	e7b3      	b.n	11bbe <get_fileinfo+0x28>
   11c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00011c5a <sync_window.part.1>:
sync_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   11c5c:	6b05      	ldr	r5, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c5e:	f100 0734 	add.w	r7, r0, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c62:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c64:	2301      	movs	r3, #1
   11c66:	462a      	mov	r2, r5
   11c68:	4639      	mov	r1, r7
   11c6a:	7840      	ldrb	r0, [r0, #1]
   11c6c:	f002 fbb9 	bl	143e2 <disk_write>
   11c70:	b9a0      	cbnz	r0, 11c9c <sync_window.part.1+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c72:	6a63      	ldr	r3, [r4, #36]	; 0x24
   11c74:	69e2      	ldr	r2, [r4, #28]
   11c76:	1aeb      	subs	r3, r5, r3
   11c78:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   11c7a:	7120      	strb	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c7c:	d301      	bcc.n	11c82 <sync_window.part.1+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   11c7e:	2000      	movs	r0, #0
   11c80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c82:	78e6      	ldrb	r6, [r4, #3]
   11c84:	2e01      	cmp	r6, #1
   11c86:	d9fa      	bls.n	11c7e <sync_window.part.1+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c88:	69e3      	ldr	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c8a:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c8c:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c8e:	462a      	mov	r2, r5
   11c90:	2301      	movs	r3, #1
   11c92:	7860      	ldrb	r0, [r4, #1]
   11c94:	f002 fba5 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c98:	3e01      	subs	r6, #1
   11c9a:	e7f3      	b.n	11c84 <sync_window.part.1+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   11c9c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11c9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ca0 <sync_window>:
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   11ca0:	7903      	ldrb	r3, [r0, #4]
   11ca2:	b10b      	cbz	r3, 11ca8 <sync_window+0x8>
   11ca4:	f7ff bfd9 	b.w	11c5a <sync_window.part.1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ca8:	4618      	mov	r0, r3
   11caa:	4770      	bx	lr

00011cac <sync_fs>:
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   11cac:	b570      	push	{r4, r5, r6, lr}
   11cae:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   11cb0:	f7ff fff6 	bl	11ca0 <sync_window>
   11cb4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   11cb6:	bb80      	cbnz	r0, 11d1a <sync_fs+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   11cb8:	7823      	ldrb	r3, [r4, #0]
   11cba:	2b03      	cmp	r3, #3
   11cbc:	d125      	bne.n	11d0a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   11cbe:	7963      	ldrb	r3, [r4, #5]
   11cc0:	2b01      	cmp	r3, #1
   11cc2:	d122      	bne.n	11d0a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   11cc4:	f104 0634 	add.w	r6, r4, #52	; 0x34
   11cc8:	4601      	mov	r1, r0
   11cca:	f44f 7200 	mov.w	r2, #512	; 0x200
   11cce:	4630      	mov	r0, r6
   11cd0:	f7ff ff2e 	bl	11b30 <mem_set>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11cd4:	f64a 2255 	movw	r2, #43605	; 0xaa55
   11cd8:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11cdc:	4a0f      	ldr	r2, [pc, #60]	; (11d1c <sync_fs+0x70>)
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11cde:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11ce0:	6362      	str	r2, [r4, #52]	; 0x34
   11ce2:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   11ce6:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   11cea:	3220      	adds	r2, #32
   11cec:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   11cf0:	6962      	ldr	r2, [r4, #20]
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   11cf2:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11cf4:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   11cf8:	6922      	ldr	r2, [r4, #16]
   11cfa:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   11cfe:	6a22      	ldr	r2, [r4, #32]
   11d00:	3201      	adds	r2, #1
   11d02:	6322      	str	r2, [r4, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11d04:	f002 fb6d 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   11d08:	7165      	strb	r5, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   11d0a:	2200      	movs	r2, #0
   11d0c:	7860      	ldrb	r0, [r4, #1]
   11d0e:	4611      	mov	r1, r2
   11d10:	f002 fb83 	bl	1441a <disk_ioctl>
   11d14:	3000      	adds	r0, #0
   11d16:	bf18      	it	ne
   11d18:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   11d1a:	bd70      	pop	{r4, r5, r6, pc}
   11d1c:	41615252 	.word	0x41615252

00011d20 <move_window>:
move_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d20:	6b03      	ldr	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d22:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d24:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d26:	4605      	mov	r5, r0
   11d28:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d2a:	d011      	beq.n	11d50 <move_window+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   11d2c:	f7ff ffb8 	bl	11ca0 <sync_window>
   11d30:	4604      	mov	r4, r0
   11d32:	b110      	cbz	r0, 11d3a <move_window+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   11d34:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   11d36:	4620      	mov	r0, r4
   11d38:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   11d3a:	2301      	movs	r3, #1
   11d3c:	4632      	mov	r2, r6
   11d3e:	f105 0134 	add.w	r1, r5, #52	; 0x34
   11d42:	7868      	ldrb	r0, [r5, #1]
   11d44:	f002 fb31 	bl	143aa <disk_read>
   11d48:	2800      	cmp	r0, #0
   11d4a:	d1f3      	bne.n	11d34 <move_window+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   11d4c:	632e      	str	r6, [r5, #48]	; 0x30
   11d4e:	e7f2      	b.n	11d36 <move_window+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   11d50:	2400      	movs	r4, #0
   11d52:	e7f0      	b.n	11d36 <move_window+0x16>

00011d54 <check_fs>:
check_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d54:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d56:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d58:	7103      	strb	r3, [r0, #4]
   11d5a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11d5e:	6303      	str	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   11d62:	f7ff ffdd 	bl	11d20 <move_window>
   11d66:	b9a0      	cbnz	r0, 11d92 <check_fs+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   11d68:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11d6c:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   11d70:	429a      	cmp	r2, r3
   11d72:	d110      	bne.n	11d96 <check_fs+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   11d74:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   11d78:	4a08      	ldr	r2, [pc, #32]	; (11d9c <check_fs+0x48>)
   11d7a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   11d7e:	4293      	cmp	r3, r2
   11d80:	d00a      	beq.n	11d98 <check_fs+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   11d82:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   11d86:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   11d8a:	1a80      	subs	r0, r0, r2
   11d8c:	bf18      	it	ne
   11d8e:	2001      	movne	r0, #1
   11d90:	bd10      	pop	{r4, pc}
   11d92:	2003      	movs	r0, #3
   11d94:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   11d96:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   11d98:	bd10      	pop	{r4, pc}
   11d9a:	bf00      	nop
   11d9c:	00544146 	.word	0x00544146

00011da0 <find_volume>:
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   11da0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11da2:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   11da4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11da6:	b085      	sub	sp, #20
   11da8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11daa:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11dac:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11dae:	f7ff fed5 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11db2:	1e06      	subs	r6, r0, #0
   11db4:	f2c0 80f1 	blt.w	11f9a <find_volume+0x1fa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   11db8:	4b7d      	ldr	r3, [pc, #500]	; (11fb0 <find_volume+0x210>)
   11dba:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11dbe:	2c00      	cmp	r4, #0
   11dc0:	f000 80ed 	beq.w	11f9e <find_volume+0x1fe>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11dc4:	68e0      	ldr	r0, [r4, #12]
   11dc6:	f001 fef7 	bl	13bb8 <ff_req_grant>
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   11dca:	2800      	cmp	r0, #0
   11dcc:	f000 80e9 	beq.w	11fa2 <find_volume+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   11dd0:	603c      	str	r4, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   11dd2:	7823      	ldrb	r3, [r4, #0]
   11dd4:	b16b      	cbz	r3, 11df2 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   11dd6:	7860      	ldrb	r0, [r4, #1]
   11dd8:	f002 fadf 	bl	1439a <disk_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   11ddc:	07c1      	lsls	r1, r0, #31
   11dde:	d408      	bmi.n	11df2 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   11de0:	2d00      	cmp	r5, #0
   11de2:	f000 80b7 	beq.w	11f54 <find_volume+0x1b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   11de6:	f010 0004 	ands.w	r0, r0, #4
   11dea:	d000      	beq.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   11dec:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   11dee:	b005      	add	sp, #20
   11df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11df2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11df4:	b2f0      	uxtb	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11df6:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11df8:	7060      	strb	r0, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   11dfa:	f002 fabb 	bl	14374 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   11dfe:	07c2      	lsls	r2, r0, #31
   11e00:	f100 80d1 	bmi.w	11fa6 <find_volume+0x206>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   11e04:	b10d      	cbz	r5, 11e0a <find_volume+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   11e06:	0743      	lsls	r3, r0, #29
   11e08:	d4f0      	bmi.n	11dec <find_volume+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   11e0a:	2100      	movs	r1, #0
   11e0c:	4620      	mov	r0, r4
   11e0e:	f7ff ffa1 	bl	11d54 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   11e12:	2801      	cmp	r0, #1
   11e14:	f040 80ac 	bne.w	11f70 <find_volume+0x1d0>
   11e18:	4621      	mov	r1, r4
   11e1a:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   11e1c:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   11e20:	b10b      	cbz	r3, 11e26 <find_volume+0x86>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e22:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   11e26:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   11e2a:	3201      	adds	r2, #1
   11e2c:	2a04      	cmp	r2, #4
   11e2e:	f101 0110 	add.w	r1, r1, #16
   11e32:	d1f3      	bne.n	11e1c <find_volume+0x7c>
   11e34:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   11e36:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11e3a:	2d00      	cmp	r5, #0
   11e3c:	f000 808c 	beq.w	11f58 <find_volume+0x1b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   11e40:	4629      	mov	r1, r5
   11e42:	4620      	mov	r0, r4
   11e44:	f7ff ff86 	bl	11d54 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11e48:	2800      	cmp	r0, #0
   11e4a:	f040 8086 	bne.w	11f5a <find_volume+0x1ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   11e4e:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   11e52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   11e56:	f040 8089 	bne.w	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   11e5a:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   11e5e:	b901      	cbnz	r1, 11e62 <find_volume+0xc2>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   11e60:	6da1      	ldr	r1, [r4, #88]	; 0x58
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e62:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   11e66:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e68:	1e53      	subs	r3, r2, #1
   11e6a:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e6c:	70e2      	strb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e6e:	d87d      	bhi.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   11e70:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
   11e74:	70a6      	strb	r6, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   11e76:	2e00      	cmp	r6, #0
   11e78:	d078      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   11e7a:	1e73      	subs	r3, r6, #1
   11e7c:	4233      	tst	r3, r6
   11e7e:	d175      	bne.n	11f6c <find_volume+0x1cc>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e80:	f8b4 e045 	ldrh.w	lr, [r4, #69]	; 0x45
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e84:	f01e 0f0f 	tst.w	lr, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   11e88:	f8a4 e008 	strh.w	lr, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e8c:	d16e      	bne.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   11e8e:	f8b4 3047 	ldrh.w	r3, [r4, #71]	; 0x47
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   11e92:	b903      	cbnz	r3, 11e96 <find_volume+0xf6>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e94:	6d63      	ldr	r3, [r4, #84]	; 0x54
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e96:	f8b4 7042 	ldrh.w	r7, [r4, #66]	; 0x42
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   11e9a:	2f00      	cmp	r7, #0
   11e9c:	d066      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   11e9e:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   11ea0:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   11ea4:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   11ea6:	4283      	cmp	r3, r0
   11ea8:	d360      	bcc.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   11eaa:	1a1b      	subs	r3, r3, r0
   11eac:	fbb3 f3f6 	udiv	r3, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   11eb0:	2b00      	cmp	r3, #0
   11eb2:	d05b      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   11eb4:	f640 76f5 	movw	r6, #4085	; 0xff5
   11eb8:	42b3      	cmp	r3, r6
   11eba:	d95b      	bls.n	11f74 <find_volume+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   11ebc:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   11ec0:	42b3      	cmp	r3, r6
   11ec2:	bf94      	ite	ls
   11ec4:	2602      	movls	r6, #2
   11ec6:	2603      	movhi	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ec8:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11eca:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ecc:	4428      	add	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ece:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ed0:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   11ed2:	6225      	str	r5, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11ed4:	6267      	str	r7, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ed6:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ed8:	d14e      	bne.n	11f78 <find_volume+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   11eda:	f1be 0f00 	cmp.w	lr, #0
   11ede:	d145      	bne.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11ee0:	6e22      	ldr	r2, [r4, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   11ee2:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11ee4:	62a2      	str	r2, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   11ee6:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   11eea:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   11eee:	d33d      	bcc.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   11ef0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11ef4:	6163      	str	r3, [r4, #20]
   11ef6:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11ef8:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11efa:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11efc:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11efe:	d122      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   11f00:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   11f04:	2b01      	cmp	r3, #1
   11f06:	d11e      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   11f08:	1c69      	adds	r1, r5, #1
   11f0a:	4620      	mov	r0, r4
   11f0c:	f7ff ff08 	bl	11d20 <move_window>
   11f10:	b9c8      	cbnz	r0, 11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f12:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11f16:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   11f1a:	7160      	strb	r0, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f1c:	429a      	cmp	r2, r3
   11f1e:	d112      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   11f20:	6b62      	ldr	r2, [r4, #52]	; 0x34
   11f22:	4b24      	ldr	r3, [pc, #144]	; (11fb4 <find_volume+0x214>)
   11f24:	429a      	cmp	r2, r3
   11f26:	d10e      	bne.n	11f46 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   11f28:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   11f2c:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   11f30:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   11f34:	3320      	adds	r3, #32
   11f36:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   11f38:	bf01      	itttt	eq
   11f3a:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   11f3e:	6163      	streq	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   11f40:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   11f44:	6123      	streq	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f46:	4a1c      	ldr	r2, [pc, #112]	; (11fb8 <find_volume+0x218>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   11f48:	7026      	strb	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f4a:	8813      	ldrh	r3, [r2, #0]
   11f4c:	3301      	adds	r3, #1
   11f4e:	b29b      	uxth	r3, r3
   11f50:	8013      	strh	r3, [r2, #0]
   11f52:	80e3      	strh	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   11f54:	2000      	movs	r0, #0
   11f56:	e74a      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11f58:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11f5a:	3601      	adds	r6, #1
   11f5c:	2e04      	cmp	r6, #4
   11f5e:	f47f af6a 	bne.w	11e36 <find_volume+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11f62:	2803      	cmp	r0, #3
   11f64:	d021      	beq.n	11faa <find_volume+0x20a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   11f66:	2800      	cmp	r0, #0
   11f68:	f43f af71 	beq.w	11e4e <find_volume+0xae>
   11f6c:	200d      	movs	r0, #13
   11f6e:	e73e      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   11f70:	2500      	movs	r5, #0
   11f72:	e7f6      	b.n	11f62 <find_volume+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   11f74:	2601      	movs	r6, #1
   11f76:	e7a7      	b.n	11ec8 <find_volume+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   11f78:	f1be 0f00 	cmp.w	lr, #0
   11f7c:	d0f6      	beq.n	11f6c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f7e:	2e02      	cmp	r6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f80:	4417      	add	r7, r2
   11f82:	ea4f 0243 	mov.w	r2, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f86:	bf1c      	itt	ne
   11f88:	18d2      	addne	r2, r2, r3
   11f8a:	f003 0301 	andne.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f8e:	62a7      	str	r7, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f90:	bf0c      	ite	eq
   11f92:	4613      	moveq	r3, r2
   11f94:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   11f98:	e7a5      	b.n	11ee6 <find_volume+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11f9a:	200b      	movs	r0, #11
   11f9c:	e727      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11f9e:	200c      	movs	r0, #12
   11fa0:	e725      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   11fa2:	200f      	movs	r0, #15
   11fa4:	e723      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   11fa6:	2003      	movs	r0, #3
   11fa8:	e721      	b.n	11dee <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11faa:	2001      	movs	r0, #1
   11fac:	e71f      	b.n	11dee <find_volume+0x4e>
   11fae:	bf00      	nop
   11fb0:	2007c45c 	.word	0x2007c45c
   11fb4:	41615252 	.word	0x41615252
   11fb8:	2007c464 	.word	0x2007c464

00011fbc <validate>:
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   11fbc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   11fbe:	4604      	mov	r4, r0
   11fc0:	b1a8      	cbz	r0, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   11fc2:	6803      	ldr	r3, [r0, #0]
   11fc4:	b19b      	cbz	r3, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   11fc6:	781a      	ldrb	r2, [r3, #0]
   11fc8:	b18a      	cbz	r2, 11fee <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   11fca:	88d9      	ldrh	r1, [r3, #6]
   11fcc:	8882      	ldrh	r2, [r0, #4]
   11fce:	4291      	cmp	r1, r2
   11fd0:	d10d      	bne.n	11fee <validate+0x32>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11fd2:	68d8      	ldr	r0, [r3, #12]
   11fd4:	f001 fdf0 	bl	13bb8 <ff_req_grant>
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   11fd8:	b158      	cbz	r0, 11ff2 <validate+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   11fda:	6823      	ldr	r3, [r4, #0]
   11fdc:	7858      	ldrb	r0, [r3, #1]
   11fde:	f002 f9dc 	bl	1439a <disk_status>
   11fe2:	f010 0f01 	tst.w	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   11fe6:	bf14      	ite	ne
   11fe8:	2003      	movne	r0, #3
   11fea:	2000      	moveq	r0, #0
   11fec:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   11fee:	2009      	movs	r0, #9
   11ff0:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   11ff2:	200f      	movs	r0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   11ff4:	bd10      	pop	{r4, pc}

00011ff6 <unlock_fs>:
unlock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   11ff6:	b150      	cbz	r0, 1200e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   11ff8:	290f      	cmp	r1, #15
   11ffa:	d805      	bhi.n	12008 <unlock_fs+0x12>
   11ffc:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   12000:	fa23 f101 	lsr.w	r1, r3, r1
   12004:	07cb      	lsls	r3, r1, #31
   12006:	d402      	bmi.n	1200e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   12008:	68c0      	ldr	r0, [r0, #12]
   1200a:	f001 bde8 	b.w	13bde <ff_rel_grant>
   1200e:	4770      	bx	lr

00012010 <clust2sect>:
clust2sect():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12010:	6983      	ldr	r3, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   12012:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12014:	3b02      	subs	r3, #2
   12016:	4299      	cmp	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   12018:	bf3d      	ittte	cc
   1201a:	7883      	ldrbcc	r3, [r0, #2]
   1201c:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   1201e:	fb01 0003 	mlacc	r0, r1, r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12022:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   12024:	4770      	bx	lr

00012026 <get_fat>:
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   12026:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   12028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1202a:	4607      	mov	r7, r0
   1202c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   1202e:	d94b      	bls.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   12030:	6983      	ldr	r3, [r0, #24]
   12032:	4299      	cmp	r1, r3
   12034:	d248      	bcs.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   12036:	7803      	ldrb	r3, [r0, #0]
   12038:	2b02      	cmp	r3, #2
   1203a:	d029      	beq.n	12090 <get_fat+0x6a>
   1203c:	2b03      	cmp	r3, #3
   1203e:	d034      	beq.n	120aa <get_fat+0x84>
   12040:	2b01      	cmp	r3, #1
   12042:	d141      	bne.n	120c8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   12044:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12048:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1204a:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   1204e:	f7ff fe67 	bl	11d20 <move_window>
   12052:	b110      	cbz	r0, 1205a <get_fat+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   12054:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1205a:	6a79      	ldr	r1, [r7, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   1205c:	f3c6 0308 	ubfx	r3, r6, #0, #9
   12060:	3601      	adds	r6, #1
   12062:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12064:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   12068:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   1206a:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1206e:	f7ff fe57 	bl	11d20 <move_window>
   12072:	2800      	cmp	r0, #0
   12074:	d1ee      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   12076:	f3c6 0608 	ubfx	r6, r6, #0, #9
   1207a:	443e      	add	r6, r7
   1207c:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   12080:	07e3      	lsls	r3, r4, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   12082:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   12086:	bf4c      	ite	mi
   12088:	0900      	lsrmi	r0, r0, #4
   1208a:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   1208e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   12090:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12092:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   12096:	f7ff fe43 	bl	11d20 <move_window>
   1209a:	2800      	cmp	r0, #0
   1209c:	d1da      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   1209e:	0066      	lsls	r6, r4, #1
   120a0:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   120a4:	443e      	add	r6, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   120a6:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   120a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   120aa:	6a41      	ldr	r1, [r0, #36]	; 0x24
   120ac:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   120b0:	f7ff fe36 	bl	11d20 <move_window>
   120b4:	2800      	cmp	r0, #0
   120b6:	d1cd      	bne.n	12054 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   120b8:	00a4      	lsls	r4, r4, #2
   120ba:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   120be:	443c      	add	r4, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   120c0:	6b60      	ldr	r0, [r4, #52]	; 0x34
   120c2:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   120c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   120c8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   120ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000120cc <dir_sdi>:
dir_sdi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120cc:	b570      	push	{r4, r5, r6, lr}
   120ce:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   120d0:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120d2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120d4:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   120d6:	80e1      	strh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120d8:	d101      	bne.n	120de <dir_sdi+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   120da:	2002      	movs	r0, #2
   120dc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120de:	6803      	ldr	r3, [r0, #0]
   120e0:	6999      	ldr	r1, [r3, #24]
   120e2:	428a      	cmp	r2, r1
   120e4:	d2f9      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   120e6:	b9ba      	cbnz	r2, 12118 <dir_sdi+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   120e8:	7819      	ldrb	r1, [r3, #0]
   120ea:	2903      	cmp	r1, #3
   120ec:	d101      	bne.n	120f2 <dir_sdi+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   120ee:	6a99      	ldr	r1, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   120f0:	b999      	cbnz	r1, 1211a <dir_sdi+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   120f2:	8919      	ldrh	r1, [r3, #8]
   120f4:	428d      	cmp	r5, r1
   120f6:	d2f0      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   120f8:	6a98      	ldr	r0, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   120fa:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   120fc:	2800      	cmp	r0, #0
   120fe:	d0ec      	beq.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12100:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   12102:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12106:	3334      	adds	r3, #52	; 0x34
   12108:	f005 050f 	and.w	r5, r5, #15
   1210c:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   12110:	6120      	str	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12112:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   12114:	2000      	movs	r0, #0
   12116:	bd70      	pop	{r4, r5, r6, pc}
   12118:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   1211a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   1211c:	789e      	ldrb	r6, [r3, #2]
   1211e:	0136      	lsls	r6, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12120:	42b5      	cmp	r5, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   12122:	4611      	mov	r1, r2
   12124:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12126:	d202      	bcs.n	1212e <dir_sdi+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   12128:	f7ff ff72 	bl	12010 <clust2sect>
   1212c:	e7e5      	b.n	120fa <dir_sdi+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1212e:	f7ff ff7a 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12132:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   12134:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12136:	d007      	beq.n	12148 <dir_sdi+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   12138:	2801      	cmp	r0, #1
   1213a:	d9ce      	bls.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   1213c:	6823      	ldr	r3, [r4, #0]
   1213e:	699b      	ldr	r3, [r3, #24]
   12140:	4298      	cmp	r0, r3
   12142:	d2ca      	bcs.n	120da <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   12144:	1bad      	subs	r5, r5, r6
   12146:	e7eb      	b.n	12120 <dir_sdi+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12148:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   1214a:	bd70      	pop	{r4, r5, r6, pc}

0001214c <put_fat>:
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1214c:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   1214e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12150:	4605      	mov	r5, r0
   12152:	460c      	mov	r4, r1
   12154:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12156:	d960      	bls.n	1221a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   12158:	6983      	ldr	r3, [r0, #24]
   1215a:	4299      	cmp	r1, r3
   1215c:	d25d      	bcs.n	1221a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   1215e:	7803      	ldrb	r3, [r0, #0]
   12160:	2b02      	cmp	r3, #2
   12162:	d03a      	beq.n	121da <put_fat+0x8e>
   12164:	2b03      	cmp	r3, #3
   12166:	d045      	beq.n	121f4 <put_fat+0xa8>
   12168:	2b01      	cmp	r3, #1
   1216a:	d154      	bne.n	12216 <put_fat+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   1216c:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   12170:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12172:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   12176:	f7ff fdd3 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   1217a:	bb18      	cbnz	r0, 121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   1217c:	f3c7 0308 	ubfx	r3, r7, #0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   12180:	f014 0401 	ands.w	r4, r4, #1
   12184:	442b      	add	r3, r5
   12186:	bf17      	itett	ne
   12188:	f893 2034 	ldrbne.w	r2, [r3, #52]	; 0x34
   1218c:	b2f2      	uxtbeq	r2, r6
   1218e:	f002 010f 	andne.w	r1, r2, #15
   12192:	0132      	lslne	r2, r6, #4
   12194:	bf1c      	itt	ne
   12196:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   1219a:	430a      	orrne	r2, r1
   1219c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121a0:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121a2:	6a69      	ldr	r1, [r5, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   121a4:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121a6:	712b      	strb	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121a8:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   121ac:	4628      	mov	r0, r5
   121ae:	f7ff fdb7 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   121b2:	b938      	cbnz	r0, 121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   121b4:	f3c7 0708 	ubfx	r7, r7, #0, #9
   121b8:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121ba:	b134      	cbz	r4, 121ca <put_fat+0x7e>
   121bc:	f3c6 1607 	ubfx	r6, r6, #4, #8
   121c0:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   121c4:	2301      	movs	r3, #1
   121c6:	712b      	strb	r3, [r5, #4]
   121c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121ca:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   121ce:	f3c6 2603 	ubfx	r6, r6, #8, #4
   121d2:	f023 030f 	bic.w	r3, r3, #15
   121d6:	431e      	orrs	r6, r3
   121d8:	e7f2      	b.n	121c0 <put_fat+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   121da:	6a41      	ldr	r1, [r0, #36]	; 0x24
   121dc:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   121e0:	f7ff fd9e 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   121e4:	2800      	cmp	r0, #0
   121e6:	d1ed      	bne.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   121e8:	0064      	lsls	r4, r4, #1
   121ea:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   121ee:	442c      	add	r4, r5
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   121f0:	86a6      	strh	r6, [r4, #52]	; 0x34
   121f2:	e7e7      	b.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   121f4:	6a41      	ldr	r1, [r0, #36]	; 0x24
   121f6:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   121fa:	f7ff fd91 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   121fe:	2800      	cmp	r0, #0
   12200:	d1e0      	bne.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   12202:	00a4      	lsls	r4, r4, #2
   12204:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12208:	3434      	adds	r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   1220a:	592b      	ldr	r3, [r5, r4]
   1220c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   12210:	431e      	orrs	r6, r3
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12212:	512e      	str	r6, [r5, r4]
   12214:	e7d6      	b.n	121c4 <put_fat+0x78>
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   12216:	2002      	movs	r0, #2
   12218:	e7d4      	b.n	121c4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   1221a:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   1221c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001221e <create_chain>:
create_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   1221e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12220:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   12222:	460f      	mov	r7, r1
   12224:	b971      	cbnz	r1, 12244 <create_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   12226:	6906      	ldr	r6, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12228:	b1e6      	cbz	r6, 12264 <create_chain+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   1222a:	6983      	ldr	r3, [r0, #24]
   1222c:	429e      	cmp	r6, r3
   1222e:	bf28      	it	cs
   12230:	2601      	movcs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   12232:	4634      	mov	r4, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12234:	69ab      	ldr	r3, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   12236:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12238:	429c      	cmp	r4, r3
   1223a:	d316      	bcc.n	1226a <create_chain+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   1223c:	2e01      	cmp	r6, #1
   1223e:	d813      	bhi.n	12268 <create_chain+0x4a>
   12240:	2400      	movs	r4, #0
   12242:	e008      	b.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12244:	f7ff feef 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12248:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   1224a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   1224c:	d935      	bls.n	122ba <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   1224e:	3001      	adds	r0, #1
   12250:	d103      	bne.n	1225a <create_chain+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12252:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   12256:	4620      	mov	r0, r4
   12258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   1225a:	69ab      	ldr	r3, [r5, #24]
   1225c:	429c      	cmp	r4, r3
   1225e:	d3fa      	bcc.n	12256 <create_chain+0x38>
   12260:	463e      	mov	r6, r7
   12262:	e7e6      	b.n	12232 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12264:	2601      	movs	r6, #1
   12266:	e7e4      	b.n	12232 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12268:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   1226a:	4621      	mov	r1, r4
   1226c:	4628      	mov	r0, r5
   1226e:	f7ff feda 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   12272:	b130      	cbz	r0, 12282 <create_chain+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   12274:	1c41      	adds	r1, r0, #1
   12276:	d0ec      	beq.n	12252 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   12278:	2801      	cmp	r0, #1
   1227a:	d01e      	beq.n	122ba <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   1227c:	42b4      	cmp	r4, r6
   1227e:	d1d9      	bne.n	12234 <create_chain+0x16>
   12280:	e7de      	b.n	12240 <create_chain+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   12282:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   12286:	4621      	mov	r1, r4
   12288:	4628      	mov	r0, r5
   1228a:	f7ff ff5f 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   1228e:	b990      	cbnz	r0, 122b6 <create_chain+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   12290:	b957      	cbnz	r7, 122a8 <create_chain+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   12292:	696b      	ldr	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   12294:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   12296:	1c5a      	adds	r2, r3, #1
   12298:	d0dd      	beq.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   1229a:	3b01      	subs	r3, #1
   1229c:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   1229e:	796b      	ldrb	r3, [r5, #5]
   122a0:	f043 0301 	orr.w	r3, r3, #1
   122a4:	716b      	strb	r3, [r5, #5]
   122a6:	e7d6      	b.n	12256 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   122a8:	4622      	mov	r2, r4
   122aa:	4639      	mov	r1, r7
   122ac:	4628      	mov	r0, r5
   122ae:	f7ff ff4d 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   122b2:	2800      	cmp	r0, #0
   122b4:	d0ed      	beq.n	12292 <create_chain+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   122b6:	2801      	cmp	r0, #1
   122b8:	d0cb      	beq.n	12252 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   122ba:	2401      	movs	r4, #1
   122bc:	e7cb      	b.n	12256 <create_chain+0x38>

000122be <dir_next>:
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122be:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122c2:	88c6      	ldrh	r6, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122c4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122c6:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122c8:	b2b3      	uxth	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122ca:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122cc:	b913      	cbnz	r3, 122d4 <dir_next+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   122ce:	2004      	movs	r0, #4
   122d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122d4:	6903      	ldr	r3, [r0, #16]
   122d6:	2b00      	cmp	r3, #0
   122d8:	d0f9      	beq.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   122da:	f016 080f 	ands.w	r8, r6, #15
   122de:	d107      	bne.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122e0:	68c1      	ldr	r1, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   122e2:	3301      	adds	r3, #1
   122e4:	6103      	str	r3, [r0, #16]
   122e6:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122e8:	b959      	cbnz	r1, 12302 <dir_next+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   122ea:	8903      	ldrh	r3, [r0, #8]
   122ec:	429e      	cmp	r6, r3
   122ee:	d2ee      	bcs.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   122f0:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   122f2:	80e6      	strh	r6, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   122f4:	3334      	adds	r3, #52	; 0x34
   122f6:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   122fa:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   122fc:	2000      	movs	r0, #0
   122fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   12302:	7887      	ldrb	r7, [r0, #2]
   12304:	3f01      	subs	r7, #1
   12306:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   1230a:	d1f1      	bne.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1230c:	f7ff fe8b 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12310:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   12312:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12314:	d802      	bhi.n	1231c <dir_next+0x5e>
   12316:	2002      	movs	r0, #2
   12318:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   1231c:	1c42      	adds	r2, r0, #1
   1231e:	d102      	bne.n	12326 <dir_next+0x68>
   12320:	2001      	movs	r0, #1
   12322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   12326:	6820      	ldr	r0, [r4, #0]
   12328:	6983      	ldr	r3, [r0, #24]
   1232a:	429d      	cmp	r5, r3
   1232c:	d327      	bcc.n	1237e <dir_next+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   1232e:	f1b9 0f00 	cmp.w	r9, #0
   12332:	d0cc      	beq.n	122ce <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   12334:	68e1      	ldr	r1, [r4, #12]
   12336:	f7ff ff72 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   1233a:	4605      	mov	r5, r0
   1233c:	2800      	cmp	r0, #0
   1233e:	d031      	beq.n	123a4 <dir_next+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   12340:	2801      	cmp	r0, #1
   12342:	d0e8      	beq.n	12316 <dir_next+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12344:	1c43      	adds	r3, r0, #1
   12346:	d0eb      	beq.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   12348:	6820      	ldr	r0, [r4, #0]
   1234a:	f7ff fca9 	bl	11ca0 <sync_window>
   1234e:	4601      	mov	r1, r0
   12350:	2800      	cmp	r0, #0
   12352:	d1e5      	bne.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   12354:	6820      	ldr	r0, [r4, #0]
   12356:	f44f 7200 	mov.w	r2, #512	; 0x200
   1235a:	3034      	adds	r0, #52	; 0x34
   1235c:	f7ff fbe8 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   12360:	6822      	ldr	r2, [r4, #0]
   12362:	4629      	mov	r1, r5
   12364:	4610      	mov	r0, r2
   12366:	f7ff fe53 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1236a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1236e:	6310      	str	r0, [r2, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   12370:	6820      	ldr	r0, [r4, #0]
   12372:	7883      	ldrb	r3, [r0, #2]
   12374:	429f      	cmp	r7, r3
   12376:	d309      	bcc.n	1238c <dir_next+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   12378:	6b03      	ldr	r3, [r0, #48]	; 0x30
   1237a:	1bdf      	subs	r7, r3, r7
   1237c:	6307      	str	r7, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   1237e:	60e5      	str	r5, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   12380:	4629      	mov	r1, r5
   12382:	6820      	ldr	r0, [r4, #0]
   12384:	f7ff fe44 	bl	12010 <clust2sect>
   12388:	6120      	str	r0, [r4, #16]
   1238a:	e7b1      	b.n	122f0 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1238c:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   12390:	f7ff fc63 	bl	11c5a <sync_window.part.1>
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   12394:	2800      	cmp	r0, #0
   12396:	d1c3      	bne.n	12320 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   12398:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   1239a:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   1239c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   1239e:	3301      	adds	r3, #1
   123a0:	6313      	str	r3, [r2, #48]	; 0x30
   123a2:	e7e5      	b.n	12370 <dir_next+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   123a4:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   123a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   123aa:	Address 0x00000000000123aa is out of bounds.


000123ac <dir_find.part.9>:
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123b0:	f04f 08ff 	mov.w	r8, #255	; 0xff
   123b4:	f64f 77ff 	movw	r7, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123b8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123ba:	4644      	mov	r4, r8
   123bc:	8407      	strh	r7, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   123be:	6931      	ldr	r1, [r6, #16]
   123c0:	6830      	ldr	r0, [r6, #0]
   123c2:	f7ff fcad 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   123c6:	4682      	mov	sl, r0
   123c8:	2800      	cmp	r0, #0
   123ca:	d15e      	bne.n	1248a <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   123cc:	6975      	ldr	r5, [r6, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   123ce:	782b      	ldrb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   123d0:	2b00      	cmp	r3, #0
   123d2:	d076      	beq.n	124c2 <dir_find.part.9+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123d4:	2be5      	cmp	r3, #229	; 0xe5
   123d6:	d006      	beq.n	123e6 <dir_find.part.9+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   123d8:	7ae9      	ldrb	r1, [r5, #11]
   123da:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123de:	0709      	lsls	r1, r1, #28
   123e0:	d503      	bpl.n	123ea <dir_find.part.9+0x3e>
   123e2:	2a0f      	cmp	r2, #15
   123e4:	d003      	beq.n	123ee <dir_find.part.9+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123e6:	8437      	strh	r7, [r6, #32]
   123e8:	e047      	b.n	1247a <dir_find.part.9+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   123ea:	2a0f      	cmp	r2, #15
   123ec:	d154      	bne.n	12498 <dir_find.part.9+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   123ee:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   123f2:	f1bb 0f00 	cmp.w	fp, #0
   123f6:	d041      	beq.n	1247c <dir_find.part.9+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   123f8:	0658      	lsls	r0, r3, #25
   123fa:	d53c      	bpl.n	12476 <dir_find.part.9+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   123fc:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12400:	88f3      	ldrh	r3, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   12402:	f895 800d 	ldrb.w	r8, [r5, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12406:	8433      	strh	r3, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12408:	7b6b      	ldrb	r3, [r5, #13]
   1240a:	4543      	cmp	r3, r8
   1240c:	d135      	bne.n	1247a <dir_find.part.9+0xce>
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1240e:	f895 a000 	ldrb.w	sl, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12412:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12414:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   12418:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   1241c:	f04f 0a0d 	mov.w	sl, #13
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12420:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12424:	fb0a fa03 	mul.w	sl, sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   12428:	4b27      	ldr	r3, [pc, #156]	; (124c8 <dir_find.part.9+0x11c>)
   1242a:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   1242e:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   12430:	b378      	cbz	r0, 12492 <dir_find.part.9+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   12432:	4610      	mov	r0, r2
   12434:	f001 fc00 	bl	13c38 <ff_wtoupper>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   12438:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1243c:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   1243e:	d81c      	bhi.n	1247a <dir_find.part.9+0xce>
   12440:	f10a 0201 	add.w	r2, sl, #1
   12444:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   12448:	9200      	str	r2, [sp, #0]
   1244a:	f001 fbf5 	bl	13c38 <ff_wtoupper>
   1244e:	9901      	ldr	r1, [sp, #4]
   12450:	4281      	cmp	r1, r0
   12452:	d112      	bne.n	1247a <dir_find.part.9+0xce>
   12454:	9a00      	ldr	r2, [sp, #0]
   12456:	4692      	mov	sl, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   12458:	f109 0901 	add.w	r9, r9, #1
   1245c:	f1b9 0f0d 	cmp.w	r9, #13
   12460:	d1e2      	bne.n	12428 <dir_find.part.9+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   12462:	782b      	ldrb	r3, [r5, #0]
   12464:	0659      	lsls	r1, r3, #25
   12466:	d503      	bpl.n	12470 <dir_find.part.9+0xc4>
   12468:	b110      	cbz	r0, 12470 <dir_find.part.9+0xc4>
   1246a:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   1246e:	b923      	cbnz	r3, 1247a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12470:	3c01      	subs	r4, #1
   12472:	b2e4      	uxtb	r4, r4
   12474:	e002      	b.n	1247c <dir_find.part.9+0xd0>
   12476:	42a3      	cmp	r3, r4
   12478:	d0c6      	beq.n	12408 <dir_find.part.9+0x5c>
   1247a:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   1247c:	2100      	movs	r1, #0
   1247e:	4630      	mov	r0, r6
   12480:	f7ff ff1d 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   12484:	4682      	mov	sl, r0
   12486:	2800      	cmp	r0, #0
   12488:	d099      	beq.n	123be <dir_find.part.9+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   1248a:	4650      	mov	r0, sl
   1248c:	b003      	add	sp, #12
   1248e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   12492:	42ba      	cmp	r2, r7
   12494:	d0e0      	beq.n	12458 <dir_find.part.9+0xac>
   12496:	e7f0      	b.n	1247a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   12498:	b924      	cbnz	r4, 124a4 <dir_find.part.9+0xf8>
   1249a:	4628      	mov	r0, r5
   1249c:	f7ff fb4f 	bl	11b3e <sum_sfn>
   124a0:	4540      	cmp	r0, r8
   124a2:	d0f2      	beq.n	1248a <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   124a4:	69b3      	ldr	r3, [r6, #24]
   124a6:	7ada      	ldrb	r2, [r3, #11]
   124a8:	07d2      	lsls	r2, r2, #31
   124aa:	d49c      	bmi.n	123e6 <dir_find.part.9+0x3a>
   124ac:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   124b0:	4298      	cmp	r0, r3
   124b2:	d0ea      	beq.n	1248a <dir_find.part.9+0xde>
   124b4:	f815 1b01 	ldrb.w	r1, [r5], #1
   124b8:	f813 2b01 	ldrb.w	r2, [r3], #1
   124bc:	4291      	cmp	r1, r2
   124be:	d0f7      	beq.n	124b0 <dir_find.part.9+0x104>
   124c0:	e791      	b.n	123e6 <dir_find.part.9+0x3a>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   124c2:	f04f 0a04 	mov.w	sl, #4
   124c6:	e7e0      	b.n	1248a <dir_find.part.9+0xde>
   124c8:	00024f1c 	.word	0x00024f1c

000124cc <follow_path>:
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d0:	780b      	ldrb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124d2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d4:	2b2f      	cmp	r3, #47	; 0x2f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124d6:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   124d8:	d001      	beq.n	124de <follow_path+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031 (discriminator 1)
   124da:	2b5c      	cmp	r3, #92	; 0x5c
   124dc:	d101      	bne.n	124e2 <follow_path+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2032
		path++;
   124de:	f108 0801 	add.w	r8, r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2033
	dp->sclust = 0;							/* Always start from the root directory */
   124e2:	2400      	movs	r4, #0
   124e4:	60bc      	str	r4, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   124e6:	f898 3000 	ldrb.w	r3, [r8]
   124ea:	2b1f      	cmp	r3, #31
   124ec:	f200 8090 	bhi.w	12610 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   124f0:	4621      	mov	r1, r4
   124f2:	4638      	mov	r0, r7
   124f4:	f7ff fdea 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   124f8:	617c      	str	r4, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   124fa:	b003      	add	sp, #12
   124fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   12500:	f825 0f02 	strh.w	r0, [r5, #2]!
   12504:	4646      	mov	r6, r8
   12506:	e093      	b.n	12630 <follow_path+0x164>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   12508:	2820      	cmp	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1250a:	44a0      	add	r8, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1250c:	bf34      	ite	cc
   1250e:	2404      	movcc	r4, #4
   12510:	2400      	movcs	r4, #0
   12512:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   12516:	2e00      	cmp	r6, #0
   12518:	f000 80a9 	beq.w	1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   1251c:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   12520:	2920      	cmp	r1, #32
   12522:	d002      	beq.n	1252a <follow_path+0x5e>
   12524:	292e      	cmp	r1, #46	; 0x2e
   12526:	f040 80a6 	bne.w	12676 <follow_path+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   1252a:	3e01      	subs	r6, #1
   1252c:	e7f3      	b.n	12516 <follow_path+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1252e:	3101      	adds	r1, #1
   12530:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   12534:	2a20      	cmp	r2, #32
   12536:	d0fa      	beq.n	1252e <follow_path+0x62>
   12538:	2a2e      	cmp	r2, #46	; 0x2e
   1253a:	d0f8      	beq.n	1252e <follow_path+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   1253c:	b109      	cbz	r1, 12542 <follow_path+0x76>
   1253e:	f044 0403 	orr.w	r4, r4, #3
   12542:	464a      	mov	r2, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   12544:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   12548:	282e      	cmp	r0, #46	; 0x2e
   1254a:	d001      	beq.n	12550 <follow_path+0x84>
   1254c:	3e01      	subs	r6, #1
   1254e:	d1f9      	bne.n	12544 <follow_path+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12550:	f04f 0a00 	mov.w	sl, #0
   12554:	f04f 0908 	mov.w	r9, #8
   12558:	4655      	mov	r5, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   1255a:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   1255e:	1c4a      	adds	r2, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   12560:	2800      	cmp	r0, #0
   12562:	f000 809f 	beq.w	126a4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   12566:	2820      	cmp	r0, #32
   12568:	d004      	beq.n	12574 <follow_path+0xa8>
   1256a:	282e      	cmp	r0, #46	; 0x2e
   1256c:	d106      	bne.n	1257c <follow_path+0xb0>
   1256e:	42b2      	cmp	r2, r6
   12570:	f000 808d 	beq.w	1268e <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   12574:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12578:	4611      	mov	r1, r2
   1257a:	e7ee      	b.n	1255a <follow_path+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1257c:	45ca      	cmp	sl, r9
   1257e:	f080 8089 	bcs.w	12694 <follow_path+0x1c8>
   12582:	42b2      	cmp	r2, r6
   12584:	d111      	bne.n	125aa <follow_path+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12586:	f1b9 0f0b 	cmp.w	r9, #11
   1258a:	d106      	bne.n	1259a <follow_path+0xce>
   1258c:	e086      	b.n	1269c <follow_path+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   1258e:	42b2      	cmp	r2, r6
   12590:	d003      	beq.n	1259a <follow_path+0xce>
   12592:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   12596:	f200 8085 	bhi.w	126a4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   1259a:	00ad      	lsls	r5, r5, #2
   1259c:	b2ed      	uxtb	r5, r5
   1259e:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   125a0:	f04f 090b 	mov.w	r9, #11
   125a4:	f04f 0a08 	mov.w	sl, #8
   125a8:	e7e6      	b.n	12578 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   125aa:	287f      	cmp	r0, #127	; 0x7f
   125ac:	d90d      	bls.n	125ca <follow_path+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   125ae:	2100      	movs	r1, #0
   125b0:	9201      	str	r2, [sp, #4]
   125b2:	f001 fb23 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   125b6:	9a01      	ldr	r2, [sp, #4]
   125b8:	b118      	cbz	r0, 125c2 <follow_path+0xf6>
   125ba:	4b5d      	ldr	r3, [pc, #372]	; (12730 <follow_path+0x264>)
   125bc:	4418      	add	r0, r3
   125be:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   125c2:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   125c4:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   125c8:	b138      	cbz	r0, 125da <follow_path+0x10e>
   125ca:	4b5a      	ldr	r3, [pc, #360]	; (12734 <follow_path+0x268>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   125cc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   125d0:	2900      	cmp	r1, #0
   125d2:	f000 809f 	beq.w	12714 <follow_path+0x248>
   125d6:	4281      	cmp	r1, r0
   125d8:	d1f8      	bne.n	125cc <follow_path+0x100>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   125da:	205f      	movs	r0, #95	; 0x5f
   125dc:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   125e0:	69b9      	ldr	r1, [r7, #24]
   125e2:	f801 000a 	strb.w	r0, [r1, sl]
   125e6:	f10a 0a01 	add.w	sl, sl, #1
   125ea:	e7c5      	b.n	12578 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   125ec:	f045 0502 	orr.w	r5, r5, #2
   125f0:	e7f6      	b.n	125e0 <follow_path+0x114>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   125f2:	075a      	lsls	r2, r3, #29
   125f4:	d481      	bmi.n	124fa <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   125f6:	697a      	ldr	r2, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   125f8:	7ad3      	ldrb	r3, [r2, #11]
   125fa:	06db      	lsls	r3, r3, #27
   125fc:	d539      	bpl.n	12672 <follow_path+0x1a6>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   125fe:	6839      	ldr	r1, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12600:	8b53      	ldrh	r3, [r2, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12602:	7809      	ldrb	r1, [r1, #0]
   12604:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12606:	bf04      	itt	eq
   12608:	8a92      	ldrheq	r2, [r2, #20]
   1260a:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   1260e:	60bb      	str	r3, [r7, #8]
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   12610:	f898 3000 	ldrb.w	r3, [r8]
   12614:	4644      	mov	r4, r8
   12616:	2b2f      	cmp	r3, #47	; 0x2f
   12618:	f108 0801 	add.w	r8, r8, #1
   1261c:	d0f8      	beq.n	12610 <follow_path+0x144>
   1261e:	2b5c      	cmp	r3, #92	; 0x5c
   12620:	d0f6      	beq.n	12610 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   12622:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   12624:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   12628:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   1262c:	f1ab 0502 	sub.w	r5, fp, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   12630:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   12634:	f106 0801 	add.w	r8, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   12638:	281f      	cmp	r0, #31
   1263a:	f67f af65 	bls.w	12508 <follow_path+0x3c>
   1263e:	282f      	cmp	r0, #47	; 0x2f
   12640:	f43f af62 	beq.w	12508 <follow_path+0x3c>
   12644:	285c      	cmp	r0, #92	; 0x5c
   12646:	f43f af5f 	beq.w	12508 <follow_path+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   1264a:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   1264e:	d00e      	beq.n	1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   12650:	2101      	movs	r1, #1
   12652:	f001 fad3 	bl	13bfc <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   12656:	b150      	cbz	r0, 1266e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   12658:	287f      	cmp	r0, #127	; 0x7f
   1265a:	f63f af51 	bhi.w	12500 <follow_path+0x34>
   1265e:	4936      	ldr	r1, [pc, #216]	; (12738 <follow_path+0x26c>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   12660:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   12664:	2a00      	cmp	r2, #0
   12666:	f43f af4b 	beq.w	12500 <follow_path+0x34>
   1266a:	4282      	cmp	r2, r0
   1266c:	d1f8      	bne.n	12660 <follow_path+0x194>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1266e:	2006      	movs	r0, #6
   12670:	e743      	b.n	124fa <follow_path+0x2e>
   12672:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   12674:	e741      	b.n	124fa <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12676:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12678:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1267a:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   1267e:	220b      	movs	r2, #11
   12680:	69b8      	ldr	r0, [r7, #24]
   12682:	f7ff fa55 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12686:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1268a:	4629      	mov	r1, r5
   1268c:	e750      	b.n	12530 <follow_path+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1268e:	45ca      	cmp	sl, r9
   12690:	f4ff af79 	bcc.w	12586 <follow_path+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12694:	f1b9 0f0b 	cmp.w	r9, #11
   12698:	f47f af79 	bne.w	1258e <follow_path+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   1269c:	f04f 090b 	mov.w	r9, #11
   126a0:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   126a4:	69bb      	ldr	r3, [r7, #24]
   126a6:	781a      	ldrb	r2, [r3, #0]
   126a8:	2ae5      	cmp	r2, #229	; 0xe5
   126aa:	bf04      	itt	eq
   126ac:	2205      	moveq	r2, #5
   126ae:	701a      	strbeq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   126b0:	f1b9 0f08 	cmp.w	r9, #8
   126b4:	bf04      	itt	eq
   126b6:	00ad      	lsleq	r5, r5, #2
   126b8:	b2ed      	uxtbeq	r5, r5
   126ba:	f005 030c 	and.w	r3, r5, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   126be:	2b0c      	cmp	r3, #12
   126c0:	d003      	beq.n	126ca <follow_path+0x1fe>
   126c2:	f005 0203 	and.w	r2, r5, #3
   126c6:	2a03      	cmp	r2, #3
   126c8:	d101      	bne.n	126ce <follow_path+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   126ca:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   126ce:	07a1      	lsls	r1, r4, #30
   126d0:	d409      	bmi.n	126e6 <follow_path+0x21a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   126d2:	f005 0503 	and.w	r5, r5, #3
   126d6:	2d01      	cmp	r5, #1
   126d8:	bf08      	it	eq
   126da:	f044 0410 	orreq.w	r4, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   126de:	2b04      	cmp	r3, #4
   126e0:	bf08      	it	eq
   126e2:	f044 0408 	orreq.w	r4, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   126e6:	69bb      	ldr	r3, [r7, #24]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   126e8:	2100      	movs	r1, #0
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   126ea:	72dc      	strb	r4, [r3, #11]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   126ec:	4638      	mov	r0, r7
   126ee:	f7ff fced 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   126f2:	b910      	cbnz	r0, 126fa <follow_path+0x22e>
   126f4:	4638      	mov	r0, r7
   126f6:	f7ff fe59 	bl	123ac <dir_find.part.9>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   126fa:	69bb      	ldr	r3, [r7, #24]
   126fc:	7adb      	ldrb	r3, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   126fe:	2800      	cmp	r0, #0
   12700:	f43f af77 	beq.w	125f2 <follow_path+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   12704:	2804      	cmp	r0, #4
   12706:	f47f aef8 	bne.w	124fa <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1270a:	f013 0f04 	tst.w	r3, #4
   1270e:	bf08      	it	eq
   12710:	2005      	moveq	r0, #5
   12712:	e6f2      	b.n	124fa <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   12714:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   12718:	2919      	cmp	r1, #25
   1271a:	f67f af67 	bls.w	125ec <follow_path+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   1271e:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   12722:	2919      	cmp	r1, #25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   12724:	bf9e      	ittt	ls
   12726:	3820      	subls	r0, #32
   12728:	f045 0501 	orrls.w	r5, r5, #1
   1272c:	b280      	uxthls	r0, r0
   1272e:	e757      	b.n	125e0 <follow_path+0x114>
   12730:	00024e9c 	.word	0x00024e9c
   12734:	00024f7c 	.word	0x00024f7c
   12738:	00024f73 	.word	0x00024f73

0001273c <dir_register>:
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1273c:	220c      	movs	r2, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   1273e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12742:	6986      	ldr	r6, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12744:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12746:	69c7      	ldr	r7, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12748:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1274a:	4631      	mov	r1, r6
   1274c:	eb0d 0002 	add.w	r0, sp, r2
   12750:	f7ff f9d2 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   12754:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12758:	07db      	lsls	r3, r3, #31
   1275a:	d579      	bpl.n	12850 <dir_register+0x114>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1275c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   1275e:	f04f 0901 	mov.w	r9, #1
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12762:	f8df 8208 	ldr.w	r8, [pc, #520]	; 1296c <dir_register+0x230>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   12766:	72f3      	strb	r3, [r6, #11]
   12768:	61e3      	str	r3, [r4, #28]
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   1276a:	220b      	movs	r2, #11
   1276c:	a903      	add	r1, sp, #12
   1276e:	4630      	mov	r0, r6
   12770:	f7ff f9c2 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   12774:	f1b9 0f05 	cmp.w	r9, #5
   12778:	d84f      	bhi.n	1281a <dir_register+0xde>
   1277a:	464b      	mov	r3, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1277c:	2207      	movs	r2, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   1277e:	f003 000f 	and.w	r0, r3, #15
   12782:	f100 0130 	add.w	r1, r0, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   12786:	2939      	cmp	r1, #57	; 0x39
   12788:	bf88      	it	hi
   1278a:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   1278e:	3a01      	subs	r2, #1
   12790:	a801      	add	r0, sp, #4
   12792:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12794:	091b      	lsrs	r3, r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   12796:	7041      	strb	r1, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12798:	d1f1      	bne.n	1277e <dir_register+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   1279a:	207e      	movs	r0, #126	; 0x7e
   1279c:	a906      	add	r1, sp, #24
   1279e:	4411      	add	r1, r2
   127a0:	f801 0c14 	strb.w	r0, [r1, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   127a4:	429a      	cmp	r2, r3
   127a6:	d03d      	beq.n	12824 <dir_register+0xe8>
   127a8:	5cf1      	ldrb	r1, [r6, r3]
   127aa:	2920      	cmp	r1, #32
   127ac:	d138      	bne.n	12820 <dir_register+0xe4>
   127ae:	4433      	add	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   127b0:	2a07      	cmp	r2, #7
   127b2:	bf8f      	iteee	hi
   127b4:	2120      	movhi	r1, #32
   127b6:	a906      	addls	r1, sp, #24
   127b8:	1889      	addls	r1, r1, r2
   127ba:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   127be:	bf98      	it	ls
   127c0:	3201      	addls	r2, #1
   127c2:	f803 1b01 	strb.w	r1, [r3], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   127c6:	1b99      	subs	r1, r3, r6
   127c8:	2907      	cmp	r1, #7
   127ca:	d9f1      	bls.n	127b0 <dir_register+0x74>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   127cc:	2100      	movs	r1, #0
   127ce:	4620      	mov	r0, r4
   127d0:	f7ff fc7c 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   127d4:	4605      	mov	r5, r0
   127d6:	bba8      	cbnz	r0, 12844 <dir_register+0x108>
   127d8:	4620      	mov	r0, r4
   127da:	f7ff fde7 	bl	123ac <dir_find.part.9>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   127de:	4605      	mov	r5, r0
   127e0:	bb80      	cbnz	r0, 12844 <dir_register+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   127e2:	f109 0901 	add.w	r9, r9, #1
   127e6:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   127ea:	d1be      	bne.n	1276a <dir_register+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   127ec:	2507      	movs	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   127ee:	4628      	mov	r0, r5
   127f0:	b007      	add	sp, #28
   127f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   127f6:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   127f8:	f002 0501 	and.w	r5, r2, #1
   127fc:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12800:	03dd      	lsls	r5, r3, #15
   12802:	bf48      	it	mi
   12804:	ea83 0308 	eormi.w	r3, r3, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   12808:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   1280a:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   1280e:	d1f3      	bne.n	127f8 <dir_register+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12810:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   12814:	2a00      	cmp	r2, #0
   12816:	d1ee      	bne.n	127f6 <dir_register+0xba>
   12818:	e7b0      	b.n	1277c <dir_register+0x40>
   1281a:	1eb8      	subs	r0, r7, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   1281c:	464b      	mov	r3, r9
   1281e:	e7f7      	b.n	12810 <dir_register+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   12820:	3301      	adds	r3, #1
   12822:	e7bf      	b.n	127a4 <dir_register+0x68>
   12824:	4613      	mov	r3, r2
   12826:	e7c2      	b.n	127ae <dir_register+0x72>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   12828:	3601      	adds	r6, #1
   1282a:	e016      	b.n	1285a <dir_register+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   1282c:	2601      	movs	r6, #1
   1282e:	e01c      	b.n	1286a <dir_register+0x12e>
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   12830:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   12832:	2101      	movs	r1, #1
   12834:	4620      	mov	r0, r4
   12836:	f7ff fd42 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   1283a:	4605      	mov	r5, r0
   1283c:	b1e8      	cbz	r0, 1287a <dir_register+0x13e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   1283e:	2d04      	cmp	r5, #4
   12840:	d0d4      	beq.n	127ec <dir_register+0xb0>
   12842:	e7d4      	b.n	127ee <dir_register+0xb2>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   12844:	2d04      	cmp	r5, #4
   12846:	d1d2      	bne.n	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   12848:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1284c:	72f3      	strb	r3, [r6, #11]
   1284e:	61e7      	str	r7, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   12850:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12854:	079b      	lsls	r3, r3, #30
   12856:	d5e9      	bpl.n	1282c <dir_register+0xf0>
   12858:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   1285a:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   1285e:	2b00      	cmp	r3, #0
   12860:	d1e2      	bne.n	12828 <dir_register+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   12862:	230d      	movs	r3, #13
   12864:	3619      	adds	r6, #25
   12866:	fbb6 f6f3 	udiv	r6, r6, r3
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   1286a:	2100      	movs	r1, #0
   1286c:	4620      	mov	r0, r4
   1286e:	f7ff fc2d 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   12872:	4605      	mov	r5, r0
   12874:	2800      	cmp	r0, #0
   12876:	d1e2      	bne.n	1283e <dir_register+0x102>
   12878:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   1287a:	6921      	ldr	r1, [r4, #16]
   1287c:	6820      	ldr	r0, [r4, #0]
   1287e:	f7ff fa4f 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   12882:	4605      	mov	r5, r0
   12884:	2800      	cmp	r0, #0
   12886:	d1da      	bne.n	1283e <dir_register+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   12888:	6963      	ldr	r3, [r4, #20]
   1288a:	781b      	ldrb	r3, [r3, #0]
   1288c:	2be5      	cmp	r3, #229	; 0xe5
   1288e:	d001      	beq.n	12894 <dir_register+0x158>
   12890:	2b00      	cmp	r3, #0
   12892:	d1cd      	bne.n	12830 <dir_register+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   12894:	3701      	adds	r7, #1
   12896:	42be      	cmp	r6, r7
   12898:	d1cb      	bne.n	12832 <dir_register+0xf6>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   1289a:	3e01      	subs	r6, #1
   1289c:	d049      	beq.n	12932 <dir_register+0x1f6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   1289e:	88e1      	ldrh	r1, [r4, #6]
   128a0:	4620      	mov	r0, r4
   128a2:	1b89      	subs	r1, r1, r6
   128a4:	f7ff fc12 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   128a8:	4605      	mov	r5, r0
   128aa:	2800      	cmp	r0, #0
   128ac:	d19f      	bne.n	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   128ae:	69a0      	ldr	r0, [r4, #24]
   128b0:	f7ff f945 	bl	11b3e <sum_sfn>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128b4:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   128b8:	4607      	mov	r7, r0
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   128ba:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 12970 <dir_register+0x234>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   128be:	6921      	ldr	r1, [r4, #16]
   128c0:	6820      	ldr	r0, [r4, #0]
   128c2:	f7ff fa2d 	bl	11d20 <move_window>
   128c6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   128c8:	2800      	cmp	r0, #0
   128ca:	d190      	bne.n	127ee <dir_register+0xb2>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   128cc:	220f      	movs	r2, #15
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   128ce:	6963      	ldr	r3, [r4, #20]
   128d0:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   128d4:	72da      	strb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   128d6:	220d      	movs	r2, #13
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   128d8:	b2f1      	uxtb	r1, r6
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   128da:	1e4d      	subs	r5, r1, #1
   128dc:	436a      	muls	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   128de:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   128e0:	735f      	strb	r7, [r3, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   128e2:	7318      	strb	r0, [r3, #12]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   128e4:	8358      	strh	r0, [r3, #26]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128e6:	4548      	cmp	r0, r9
   128e8:	bf18      	it	ne
   128ea:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   128ee:	f815 c008 	ldrb.w	ip, [r5, r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   128f2:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   128f6:	bf18      	it	ne
   128f8:	3201      	addne	r2, #1
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   128fa:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   128fe:	2800      	cmp	r0, #0
   12900:	bf08      	it	eq
   12902:	4648      	moveq	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12904:	2d0d      	cmp	r5, #13
   12906:	d1ee      	bne.n	128e6 <dir_register+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   12908:	4548      	cmp	r0, r9
   1290a:	d002      	beq.n	12912 <dir_register+0x1d6>
   1290c:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   12910:	b90a      	cbnz	r2, 12916 <dir_register+0x1da>
   12912:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   12916:	2201      	movs	r2, #1
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   12918:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1291a:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   1291c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1291e:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   12920:	4620      	mov	r0, r4
   12922:	f7ff fccc 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   12926:	4605      	mov	r5, r0
   12928:	2800      	cmp	r0, #0
   1292a:	f47f af60 	bne.w	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   1292e:	3e01      	subs	r6, #1
   12930:	d1c5      	bne.n	128be <dir_register+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   12932:	6921      	ldr	r1, [r4, #16]
   12934:	6820      	ldr	r0, [r4, #0]
   12936:	f7ff f9f3 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   1293a:	4605      	mov	r5, r0
   1293c:	2800      	cmp	r0, #0
   1293e:	f47f af56 	bne.w	127ee <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   12942:	2220      	movs	r2, #32
   12944:	4629      	mov	r1, r5
   12946:	6960      	ldr	r0, [r4, #20]
   12948:	f7ff f8f2 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   1294c:	220b      	movs	r2, #11
   1294e:	69a1      	ldr	r1, [r4, #24]
   12950:	6960      	ldr	r0, [r4, #20]
   12952:	f7ff f8d1 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   12956:	69a3      	ldr	r3, [r4, #24]
   12958:	6962      	ldr	r2, [r4, #20]
   1295a:	7adb      	ldrb	r3, [r3, #11]
   1295c:	f003 0318 	and.w	r3, r3, #24
   12960:	7313      	strb	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   12962:	2201      	movs	r2, #1
   12964:	6823      	ldr	r3, [r4, #0]
   12966:	711a      	strb	r2, [r3, #4]
   12968:	e741      	b.n	127ee <dir_register+0xb2>
   1296a:	bf00      	nop
   1296c:	00011021 	.word	0x00011021
   12970:	00024f1c 	.word	0x00024f1c

00012974 <dir_remove>:
dir_remove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12974:	f64f 73ff 	movw	r3, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   12978:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   1297a:	8c01      	ldrh	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1696
	i = dp->index;	/* SFN index */
   1297c:	88c5      	ldrh	r5, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   1297e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12980:	4299      	cmp	r1, r3
   12982:	bf08      	it	eq
   12984:	4629      	moveq	r1, r5
   12986:	f7ff fba1 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1698
	if (res == FR_OK) {
   1298a:	4603      	mov	r3, r0
   1298c:	b9e8      	cbnz	r0, 129ca <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   1298e:	26e5      	movs	r6, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1700
			res = move_window(dp->fs, dp->sect);
   12990:	6921      	ldr	r1, [r4, #16]
   12992:	6820      	ldr	r0, [r4, #0]
   12994:	f7ff f9c4 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1701
			if (res != FR_OK) break;
   12998:	4603      	mov	r3, r0
   1299a:	b998      	cbnz	r0, 129c4 <dir_remove+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1702
			mem_set(dp->dir, 0, SZ_DIR);	/* Clear and mark the entry "deleted" */
   1299c:	4601      	mov	r1, r0
   1299e:	2220      	movs	r2, #32
   129a0:	6960      	ldr	r0, [r4, #20]
   129a2:	f7ff f8c5 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   129a6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   129a8:	6962      	ldr	r2, [r4, #20]
   129aa:	7016      	strb	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   129ac:	6822      	ldr	r2, [r4, #0]
   129ae:	7111      	strb	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1705
			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
   129b0:	88e2      	ldrh	r2, [r4, #6]
   129b2:	4295      	cmp	r5, r2
   129b4:	d909      	bls.n	129ca <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1706
			res = dir_next(dp, 0);		/* Next entry */
   129b6:	4619      	mov	r1, r3
   129b8:	4620      	mov	r0, r4
   129ba:	f7ff fc80 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1707
		} while (res == FR_OK);
   129be:	4603      	mov	r3, r0
   129c0:	2800      	cmp	r0, #0
   129c2:	d0e5      	beq.n	12990 <dir_remove+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1708
		if (res == FR_NO_FILE) res = FR_INT_ERR;
   129c4:	2b04      	cmp	r3, #4
   129c6:	bf08      	it	eq
   129c8:	2302      	moveq	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1724
}
   129ca:	4618      	mov	r0, r3
   129cc:	bd70      	pop	{r4, r5, r6, pc}
   129ce:	Address 0x00000000000129ce is out of bounds.


000129d0 <dir_read.constprop.11>:
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   129d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129d4:	27ff      	movs	r7, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1551
FRESULT dir_read (
   129d6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129d8:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1562
	res = FR_NO_FILE;
   129da:	2604      	movs	r6, #4
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   129dc:	f64f 79ff 	movw	r9, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   129e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 12ab4 <dir_read.constprop.11+0xe4>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1563
	while (dp->sect) {
   129e4:	6929      	ldr	r1, [r5, #16]
   129e6:	b911      	cbnz	r1, 129ee <dir_read.constprop.11+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   129e8:	2e00      	cmp	r6, #0
   129ea:	d058      	beq.n	12a9e <dir_read.constprop.11+0xce>
   129ec:	e04c      	b.n	12a88 <dir_read.constprop.11+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1564
		res = move_window(dp->fs, dp->sect);
   129ee:	6828      	ldr	r0, [r5, #0]
   129f0:	f7ff f996 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1565
		if (res != FR_OK) break;
   129f4:	4606      	mov	r6, r0
   129f6:	2800      	cmp	r0, #0
   129f8:	d146      	bne.n	12a88 <dir_read.constprop.11+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1566
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   129fa:	6968      	ldr	r0, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1567
		c = dir[DIR_Name];
   129fc:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   129fe:	2b00      	cmp	r3, #0
   12a00:	d055      	beq.n	12aae <dir_read.constprop.11+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a02:	2be5      	cmp	r3, #229	; 0xe5
   12a04:	d038      	beq.n	12a78 <dir_read.constprop.11+0xa8>
   12a06:	2b2e      	cmp	r3, #46	; 0x2e
   12a08:	d036      	beq.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1569
		a = dir[DIR_Attr] & AM_MASK;
   12a0a:	7ac2      	ldrb	r2, [r0, #11]
   12a0c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a10:	2a08      	cmp	r2, #8
   12a12:	d031      	beq.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1574
			if (a == AM_LFN) {			/* An LFN entry is found */
   12a14:	2a0f      	cmp	r2, #15
   12a16:	d13d      	bne.n	12a94 <dir_read.constprop.11+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1575
				if (c & LLE) {			/* Is it start of LFN sequence? */
   12a18:	0659      	lsls	r1, r3, #25
   12a1a:	d52b      	bpl.n	12a74 <dir_read.constprop.11+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1577
					c &= ~LLE; ord = c;
   12a1c:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a20:	88eb      	ldrh	r3, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1576
					sum = dir[LDIR_Chksum];
   12a22:	7b47      	ldrb	r7, [r0, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a24:	842b      	strh	r3, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a26:	7b43      	ldrb	r3, [r0, #13]
   12a28:	42bb      	cmp	r3, r7
   12a2a:	d125      	bne.n	12a78 <dir_read.constprop.11+0xa8>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a2c:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   12a2e:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a32:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12a36:	1e5a      	subs	r2, r3, #1
   12a38:	230d      	movs	r3, #13
   12a3a:	4353      	muls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351
	s = 0; wc = 1;
   12a3c:	2200      	movs	r2, #0
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a3e:	69ee      	ldr	r6, [r5, #28]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   12a40:	f812 1008 	ldrb.w	r1, [r2, r8]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   12a44:	5a41      	ldrh	r1, [r0, r1]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1354
		if (wc) {	/* Last character has not been processed */
   12a46:	f1be 0f00 	cmp.w	lr, #0
   12a4a:	d020      	beq.n	12a8e <dir_read.constprop.11+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1355
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
   12a4c:	2b7f      	cmp	r3, #127	; 0x7f
   12a4e:	d813      	bhi.n	12a78 <dir_read.constprop.11+0xa8>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   12a50:	468e      	mov	lr, r1
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1356
			lfnbuf[i++] = wc = uc;			/* Store it */
   12a52:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
   12a56:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1360
	} while (++s < 13);						/* Read all character in the entry */
   12a58:	3201      	adds	r2, #1
   12a5a:	2a0d      	cmp	r2, #13
   12a5c:	d1f0      	bne.n	12a40 <dir_read.constprop.11+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1362
	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
   12a5e:	7802      	ldrb	r2, [r0, #0]
   12a60:	0652      	lsls	r2, r2, #25
   12a62:	d504      	bpl.n	12a6e <dir_read.constprop.11+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1363
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
   12a64:	2b7f      	cmp	r3, #127	; 0x7f
   12a66:	d807      	bhi.n	12a78 <dir_read.constprop.11+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1364
		lfnbuf[i] = 0;
   12a68:	2200      	movs	r2, #0
   12a6a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a6e:	3c01      	subs	r4, #1
   12a70:	b2e4      	uxtb	r4, r4
   12a72:	e002      	b.n	12a7a <dir_read.constprop.11+0xaa>
   12a74:	42a3      	cmp	r3, r4
   12a76:	d0d6      	beq.n	12a26 <dir_read.constprop.11+0x56>
   12a78:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1592
		res = dir_next(dp, 0);				/* Next entry */
   12a7a:	2100      	movs	r1, #0
   12a7c:	4628      	mov	r0, r5
   12a7e:	f7ff fc1e 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1593
		if (res != FR_OK) break;
   12a82:	4606      	mov	r6, r0
   12a84:	2800      	cmp	r0, #0
   12a86:	d0ad      	beq.n	129e4 <dir_read.constprop.11+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   12a88:	2300      	movs	r3, #0
   12a8a:	612b      	str	r3, [r5, #16]
   12a8c:	e008      	b.n	12aa0 <dir_read.constprop.11+0xd0>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   12a8e:	4549      	cmp	r1, r9
   12a90:	d0e2      	beq.n	12a58 <dir_read.constprop.11+0x88>
   12a92:	e7f1      	b.n	12a78 <dir_read.constprop.11+0xa8>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1583
				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
   12a94:	b93c      	cbnz	r4, 12aa6 <dir_read.constprop.11+0xd6>
   12a96:	f7ff f852 	bl	11b3e <sum_sfn>
   12a9a:	42b8      	cmp	r0, r7
   12a9c:	d103      	bne.n	12aa6 <dir_read.constprop.11+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12a9e:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1599
}
   12aa0:	4630      	mov	r0, r6
   12aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1584
					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
   12aa6:	f64f 73ff 	movw	r3, #65535	; 0xffff
   12aaa:	842b      	strh	r3, [r5, #32]
   12aac:	e7f8      	b.n	12aa0 <dir_read.constprop.11+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12aae:	2604      	movs	r6, #4
   12ab0:	e7ea      	b.n	12a88 <dir_read.constprop.11+0xb8>
   12ab2:	bf00      	nop
   12ab4:	00024f1c 	.word	0x00024f1c

00012ab8 <remove_chain>:
remove_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ab8:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12aba:	b570      	push	{r4, r5, r6, lr}
   12abc:	4604      	mov	r4, r0
   12abe:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ac0:	d801      	bhi.n	12ac6 <remove_chain+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12ac2:	2002      	movs	r0, #2
   12ac4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12ac6:	6983      	ldr	r3, [r0, #24]
   12ac8:	4299      	cmp	r1, r3
   12aca:	d2fa      	bcs.n	12ac2 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   12acc:	69a3      	ldr	r3, [r4, #24]
   12ace:	429d      	cmp	r5, r3
   12ad0:	d205      	bcs.n	12ade <remove_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   12ad2:	4629      	mov	r1, r5
   12ad4:	4620      	mov	r0, r4
   12ad6:	f7ff faa6 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   12ada:	4606      	mov	r6, r0
   12adc:	b908      	cbnz	r0, 12ae2 <remove_chain+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12ade:	2000      	movs	r0, #0
   12ae0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   12ae2:	2801      	cmp	r0, #1
   12ae4:	d0ed      	beq.n	12ac2 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12ae6:	1c41      	adds	r1, r0, #1
   12ae8:	d010      	beq.n	12b0c <remove_chain+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   12aea:	2200      	movs	r2, #0
   12aec:	4629      	mov	r1, r5
   12aee:	4620      	mov	r0, r4
   12af0:	f7ff fb2c 	bl	1214c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   12af4:	b958      	cbnz	r0, 12b0e <remove_chain+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   12af6:	6963      	ldr	r3, [r4, #20]
   12af8:	1c5a      	adds	r2, r3, #1
   12afa:	d005      	beq.n	12b08 <remove_chain+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   12afc:	3301      	adds	r3, #1
   12afe:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   12b00:	7963      	ldrb	r3, [r4, #5]
   12b02:	f043 0301 	orr.w	r3, r3, #1
   12b06:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12b08:	4635      	mov	r5, r6
   12b0a:	e7df      	b.n	12acc <remove_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12b0c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   12b0e:	bd70      	pop	{r4, r5, r6, pc}

00012b10 <f_mount>:
f_mount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   12b10:	b5f0      	push	{r4, r5, r6, r7, lr}
   12b12:	b085      	sub	sp, #20
   12b14:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   12b16:	a804      	add	r0, sp, #16
   12b18:	f840 1d04 	str.w	r1, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   12b1c:	9100      	str	r1, [sp, #0]
   12b1e:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   12b20:	f7ff f81c 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12b24:	1e05      	subs	r5, r0, #0
   12b26:	db2a      	blt.n	12b7e <f_mount+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   12b28:	4f17      	ldr	r7, [pc, #92]	; (12b88 <f_mount+0x78>)
   12b2a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   12b2e:	b14c      	cbz	r4, 12b44 <f_mount+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   12b30:	68e0      	ldr	r0, [r4, #12]
   12b32:	f001 f83f 	bl	13bb4 <ff_del_syncobj>
   12b36:	b918      	cbnz	r0, 12b40 <f_mount+0x30>
   12b38:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   12b3a:	4620      	mov	r0, r4
   12b3c:	b005      	add	sp, #20
   12b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   12b40:	2300      	movs	r3, #0
   12b42:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   12b44:	9901      	ldr	r1, [sp, #4]
   12b46:	b989      	cbnz	r1, 12b6c <f_mount+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   12b48:	9c01      	ldr	r4, [sp, #4]
   12b4a:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12b4e:	2c00      	cmp	r4, #0
   12b50:	d0f3      	beq.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   12b52:	2e01      	cmp	r6, #1
   12b54:	d115      	bne.n	12b82 <f_mount+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   12b56:	4669      	mov	r1, sp
   12b58:	2200      	movs	r2, #0
   12b5a:	a801      	add	r0, sp, #4
   12b5c:	f7ff f920 	bl	11da0 <find_volume>
   12b60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   12b62:	4601      	mov	r1, r0
   12b64:	9801      	ldr	r0, [sp, #4]
   12b66:	f7ff fa46 	bl	11ff6 <unlock_fs>
   12b6a:	e7e6      	b.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12b6c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12b6e:	b2e8      	uxtb	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12b70:	f801 3b0c 	strb.w	r3, [r1], #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12b74:	f001 f814 	bl	13ba0 <ff_cre_syncobj>
   12b78:	2800      	cmp	r0, #0
   12b7a:	d0dd      	beq.n	12b38 <f_mount+0x28>
   12b7c:	e7e4      	b.n	12b48 <f_mount+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12b7e:	240b      	movs	r4, #11
   12b80:	e7db      	b.n	12b3a <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12b82:	2400      	movs	r4, #0
   12b84:	e7d9      	b.n	12b3a <f_mount+0x2a>
   12b86:	bf00      	nop
   12b88:	2007c45c 	.word	0x2007c45c

00012b8c <f_open>:
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   12b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12b90:	b0d1      	sub	sp, #324	; 0x144
   12b92:	9101      	str	r1, [sp, #4]
   12b94:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   12b96:	4606      	mov	r6, r0
   12b98:	2800      	cmp	r0, #0
   12b9a:	f000 808c 	beq.w	12cb6 <f_open+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12b9e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12ba0:	f002 021e 	and.w	r2, r2, #30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12ba4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12ba6:	a901      	add	r1, sp, #4
   12ba8:	a806      	add	r0, sp, #24
   12baa:	f7ff f8f9 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   12bae:	4605      	mov	r5, r0
   12bb0:	2800      	cmp	r0, #0
   12bb2:	d174      	bne.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bb4:	ab03      	add	r3, sp, #12
   12bb6:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bb8:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bba:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bbc:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12bbe:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12bc0:	f7ff fc84 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   12bc4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   12bc6:	b910      	cbnz	r0, 12bce <f_open+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   12bc8:	2c00      	cmp	r4, #0
   12bca:	bf08      	it	eq
   12bcc:	2006      	moveq	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12bce:	f018 0f1c 	tst.w	r8, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   12bd2:	f008 071f 	and.w	r7, r8, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12bd6:	d03d      	beq.n	12c54 <f_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   12bd8:	b398      	cbz	r0, 12c42 <f_open+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   12bda:	2804      	cmp	r0, #4
   12bdc:	d102      	bne.n	12be4 <f_open+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   12bde:	a806      	add	r0, sp, #24
   12be0:	f7ff fdac 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   12be4:	f047 0708 	orr.w	r7, r7, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12be8:	bb48      	cbnz	r0, 12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   12bea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12bec:	0738      	lsls	r0, r7, #28
   12bee:	d53b      	bpl.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   12bf0:	f001 feb2 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12bf4:	2300      	movs	r3, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12bf6:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   12bfa:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12bfc:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12bfe:	61e3      	str	r3, [r4, #28]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c00:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12c02:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c06:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c08:	bf08      	it	eq
   12c0a:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12c0c:	8363      	strh	r3, [r4, #26]
   12c0e:	82a3      	strh	r3, [r4, #20]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   12c10:	f04f 0301 	mov.w	r3, #1
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c14:	bf08      	it	eq
   12c16:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   12c1a:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   12c1c:	f1b8 0f00 	cmp.w	r8, #0
   12c20:	d022      	beq.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   12c22:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   12c24:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   12c28:	f7ff ff46 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   12c2c:	b938      	cbnz	r0, 12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   12c2e:	9806      	ldr	r0, [sp, #24]
   12c30:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   12c34:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   12c36:	4649      	mov	r1, r9
   12c38:	f7ff f872 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   12c3c:	b1a0      	cbz	r0, 12c68 <f_open+0xdc>
   12c3e:	4605      	mov	r5, r0
   12c40:	e02d      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   12c42:	7ae3      	ldrb	r3, [r4, #11]
   12c44:	f013 0f11 	tst.w	r3, #17
   12c48:	d133      	bne.n	12cb2 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   12c4a:	f018 0f04 	tst.w	r8, #4
   12c4e:	d0cd      	beq.n	12bec <f_open+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   12c50:	2508      	movs	r5, #8
   12c52:	e024      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   12c54:	2800      	cmp	r0, #0
   12c56:	d1f2      	bne.n	12c3e <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   12c58:	7ae3      	ldrb	r3, [r4, #11]
   12c5a:	06d9      	lsls	r1, r3, #27
   12c5c:	d427      	bmi.n	12cae <f_open+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   12c5e:	f018 0f02 	tst.w	r8, #2
   12c62:	d001      	beq.n	12c68 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   12c64:	07da      	lsls	r2, r3, #31
   12c66:	d424      	bmi.n	12cb2 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   12c68:	073b      	lsls	r3, r7, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c6a:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   12c6c:	bf48      	it	mi
   12c6e:	f047 0720 	orrmi.w	r7, r7, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   12c74:	71b7      	strb	r7, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12c76:	61f2      	str	r2, [r6, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12c78:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   12c7a:	6234      	str	r4, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12c7c:	71f2      	strb	r2, [r6, #7]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c7e:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12c80:	8b62      	ldrh	r2, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c82:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c84:	bf04      	itt	eq
   12c86:	8aa1      	ldrheq	r1, [r4, #20]
   12c88:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   12c8c:	6132      	str	r2, [r6, #16]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   12c8e:	69e2      	ldr	r2, [r4, #28]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   12c90:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   12c92:	60f2      	str	r2, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12c94:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12c96:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12c98:	60b2      	str	r2, [r6, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   12c9a:	61b2      	str	r2, [r6, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12c9c:	80b3      	strh	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   12c9e:	4629      	mov	r1, r5
   12ca0:	9806      	ldr	r0, [sp, #24]
   12ca2:	f7ff f9a8 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   12ca6:	4628      	mov	r0, r5
   12ca8:	b051      	add	sp, #324	; 0x144
   12caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   12cae:	2504      	movs	r5, #4
   12cb0:	e7f5      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   12cb2:	2507      	movs	r5, #7
   12cb4:	e7f3      	b.n	12c9e <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   12cb6:	2509      	movs	r5, #9
   12cb8:	e7f5      	b.n	12ca6 <f_open+0x11a>

00012cba <f_read>:
f_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   12cba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cbe:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   12cc0:	2300      	movs	r3, #0
   12cc2:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   12cc6:	4604      	mov	r4, r0
   12cc8:	4689      	mov	r9, r1
   12cca:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   12ccc:	f7ff f976 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12cd0:	4605      	mov	r5, r0
   12cd2:	b110      	cbz	r0, 12cda <f_read+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   12cd4:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   12cd6:	6820      	ldr	r0, [r4, #0]
   12cd8:	e04a      	b.n	12d70 <f_read+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   12cda:	79e1      	ldrb	r1, [r4, #7]
   12cdc:	b139      	cbz	r1, 12cee <f_read+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12cde:	6820      	ldr	r0, [r4, #0]
   12ce0:	f7ff f989 	bl	11ff6 <unlock_fs>
   12ce4:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   12ce6:	4628      	mov	r0, r5
   12ce8:	b003      	add	sp, #12
   12cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   12cee:	79a3      	ldrb	r3, [r4, #6]
   12cf0:	07d8      	lsls	r0, r3, #31
   12cf2:	d405      	bmi.n	12d00 <f_read+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   12cf4:	2107      	movs	r1, #7
   12cf6:	6820      	ldr	r0, [r4, #0]
   12cf8:	f7ff f97d 	bl	11ff6 <unlock_fs>
   12cfc:	2507      	movs	r5, #7
   12cfe:	e7f2      	b.n	12ce6 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   12d00:	68e3      	ldr	r3, [r4, #12]
   12d02:	68a7      	ldr	r7, [r4, #8]
   12d04:	1bdf      	subs	r7, r3, r7
   12d06:	42b7      	cmp	r7, r6
   12d08:	bf28      	it	cs
   12d0a:	4637      	movcs	r7, r6
   12d0c:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12d10:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   12d12:	b90f      	cbnz	r7, 12d18 <f_read+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12d14:	4639      	mov	r1, r7
   12d16:	e7de      	b.n	12cd6 <f_read+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   12d18:	68a2      	ldr	r2, [r4, #8]
   12d1a:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12d1e:	2b00      	cmp	r3, #0
   12d20:	d174      	bne.n	12e0c <f_read+0x152>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12d22:	6820      	ldr	r0, [r4, #0]
   12d24:	7883      	ldrb	r3, [r0, #2]
   12d26:	3b01      	subs	r3, #1
   12d28:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   12d2c:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12d30:	d111      	bne.n	12d56 <f_read+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   12d32:	b92a      	cbnz	r2, 12d40 <f_read+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   12d34:	6920      	ldr	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   12d36:	2801      	cmp	r0, #1
   12d38:	d808      	bhi.n	12d4c <f_read+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   12d3a:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12d3c:	71e5      	strb	r5, [r4, #7]
   12d3e:	e7c9      	b.n	12cd4 <f_read+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   12d40:	6961      	ldr	r1, [r4, #20]
   12d42:	9301      	str	r3, [sp, #4]
   12d44:	f7ff f96f 	bl	12026 <get_fat>
   12d48:	9b01      	ldr	r3, [sp, #4]
   12d4a:	e7f4      	b.n	12d36 <f_read+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12d4c:	1c41      	adds	r1, r0, #1
   12d4e:	d101      	bne.n	12d54 <f_read+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12d50:	2501      	movs	r5, #1
   12d52:	e7f3      	b.n	12d3c <f_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   12d54:	6160      	str	r0, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12d56:	f8d4 a000 	ldr.w	sl, [r4]
   12d5a:	6961      	ldr	r1, [r4, #20]
   12d5c:	4650      	mov	r0, sl
   12d5e:	9301      	str	r3, [sp, #4]
   12d60:	f7ff f956 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12d64:	9b01      	ldr	r3, [sp, #4]
   12d66:	b930      	cbnz	r0, 12d76 <f_read+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   12d68:	2502      	movs	r5, #2
   12d6a:	4650      	mov	r0, sl
   12d6c:	4629      	mov	r1, r5
   12d6e:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12d70:	f7ff f941 	bl	11ff6 <unlock_fs>
   12d74:	e7b7      	b.n	12ce6 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12d76:	0a7e      	lsrs	r6, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   12d78:	eb00 0803 	add.w	r8, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12d7c:	d029      	beq.n	12dd2 <f_read+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12d7e:	f89a 2002 	ldrb.w	r2, [sl, #2]
   12d82:	1999      	adds	r1, r3, r6
   12d84:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   12d86:	bf88      	it	hi
   12d88:	1ad6      	subhi	r6, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   12d8a:	b2f3      	uxtb	r3, r6
   12d8c:	4642      	mov	r2, r8
   12d8e:	4649      	mov	r1, r9
   12d90:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12d94:	f001 fb09 	bl	143aa <disk_read>
   12d98:	2800      	cmp	r0, #0
   12d9a:	d1d9      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   12d9c:	79a3      	ldrb	r3, [r4, #6]
   12d9e:	065a      	lsls	r2, r3, #25
   12da0:	d50b      	bpl.n	12dba <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   12da2:	69a0      	ldr	r0, [r4, #24]
   12da4:	eba0 0008 	sub.w	r0, r0, r8
   12da8:	4286      	cmp	r6, r0
   12daa:	d906      	bls.n	12dba <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   12dac:	f44f 7200 	mov.w	r2, #512	; 0x200
   12db0:	9900      	ldr	r1, [sp, #0]
   12db2:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   12db6:	f7fe fe9f 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   12dba:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   12dbc:	68a3      	ldr	r3, [r4, #8]
   12dbe:	44b1      	add	r9, r6
   12dc0:	4433      	add	r3, r6
   12dc2:	60a3      	str	r3, [r4, #8]
   12dc4:	f8db 3000 	ldr.w	r3, [fp]
   12dc8:	1bbf      	subs	r7, r7, r6
   12dca:	4433      	add	r3, r6
   12dcc:	f8cb 3000 	str.w	r3, [fp]
   12dd0:	e79f      	b.n	12d12 <f_read+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   12dd2:	69a2      	ldr	r2, [r4, #24]
   12dd4:	4590      	cmp	r8, r2
   12dd6:	d017      	beq.n	12e08 <f_read+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   12dd8:	79a3      	ldrb	r3, [r4, #6]
   12dda:	065b      	lsls	r3, r3, #25
   12ddc:	d50b      	bpl.n	12df6 <f_read+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12dde:	2301      	movs	r3, #1
   12de0:	9900      	ldr	r1, [sp, #0]
   12de2:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12de6:	f001 fafc 	bl	143e2 <disk_write>
   12dea:	2800      	cmp	r0, #0
   12dec:	d1b0      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   12dee:	79a3      	ldrb	r3, [r4, #6]
   12df0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12df4:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   12df6:	6820      	ldr	r0, [r4, #0]
   12df8:	2301      	movs	r3, #1
   12dfa:	4642      	mov	r2, r8
   12dfc:	9900      	ldr	r1, [sp, #0]
   12dfe:	7840      	ldrb	r0, [r0, #1]
   12e00:	f001 fad3 	bl	143aa <disk_read>
   12e04:	2800      	cmp	r0, #0
   12e06:	d1a3      	bne.n	12d50 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   12e08:	f8c4 8018 	str.w	r8, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e0c:	68a1      	ldr	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12e0e:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e10:	f3c1 0108 	ubfx	r1, r1, #0, #9
   12e14:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   12e18:	42be      	cmp	r6, r7
   12e1a:	bf28      	it	cs
   12e1c:	463e      	movcs	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12e1e:	3124      	adds	r1, #36	; 0x24
   12e20:	4632      	mov	r2, r6
   12e22:	4421      	add	r1, r4
   12e24:	f7fe fe68 	bl	11af8 <mem_cpy>
   12e28:	e7c8      	b.n	12dbc <f_read+0x102>

00012e2a <f_write>:
f_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   12e2a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e2e:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   12e30:	2300      	movs	r3, #0
   12e32:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   12e36:	4604      	mov	r4, r0
   12e38:	4689      	mov	r9, r1
   12e3a:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   12e3c:	f7ff f8be 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12e40:	4605      	mov	r5, r0
   12e42:	b110      	cbz	r0, 12e4a <f_write+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   12e44:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   12e46:	6820      	ldr	r0, [r4, #0]
   12e48:	e068      	b.n	12f1c <f_write+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   12e4a:	79e1      	ldrb	r1, [r4, #7]
   12e4c:	b139      	cbz	r1, 12e5e <f_write+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12e4e:	6820      	ldr	r0, [r4, #0]
   12e50:	f7ff f8d1 	bl	11ff6 <unlock_fs>
   12e54:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   12e56:	4628      	mov	r0, r5
   12e58:	b003      	add	sp, #12
   12e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   12e5e:	79a3      	ldrb	r3, [r4, #6]
   12e60:	0799      	lsls	r1, r3, #30
   12e62:	d405      	bmi.n	12e70 <f_write+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   12e64:	2107      	movs	r1, #7
   12e66:	6820      	ldr	r0, [r4, #0]
   12e68:	f7ff f8c5 	bl	11ff6 <unlock_fs>
   12e6c:	2507      	movs	r5, #7
   12e6e:	e7f2      	b.n	12e56 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   12e70:	68a3      	ldr	r3, [r4, #8]
   12e72:	eb13 0f08 	cmn.w	r3, r8
   12e76:	d205      	bcs.n	12e84 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12e78:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12e7c:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   12e7e:	f1b8 0f00 	cmp.w	r8, #0
   12e82:	d10a      	bne.n	12e9a <f_write+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12e84:	68a3      	ldr	r3, [r4, #8]
   12e86:	68e2      	ldr	r2, [r4, #12]
   12e88:	4293      	cmp	r3, r2
   12e8a:	f200 80a2 	bhi.w	12fd2 <f_write+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12e8e:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12e90:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12e92:	f043 0320 	orr.w	r3, r3, #32
   12e96:	71a3      	strb	r3, [r4, #6]
   12e98:	e7d5      	b.n	12e46 <f_write+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   12e9a:	68a2      	ldr	r2, [r4, #8]
   12e9c:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12ea0:	2b00      	cmp	r3, #0
   12ea2:	f040 8083 	bne.w	12fac <f_write+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12ea6:	6820      	ldr	r0, [r4, #0]
   12ea8:	7883      	ldrb	r3, [r0, #2]
   12eaa:	3b01      	subs	r3, #1
   12eac:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   12eb0:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12eb4:	9300      	str	r3, [sp, #0]
   12eb6:	d116      	bne.n	12ee6 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   12eb8:	b95a      	cbnz	r2, 12ed2 <f_write+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   12eba:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   12ebc:	b921      	cbnz	r1, 12ec8 <f_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12ebe:	f7ff f9ae 	bl	1221e <create_chain>
   12ec2:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   12ec4:	2800      	cmp	r0, #0
   12ec6:	d0dd      	beq.n	12e84 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12ec8:	2901      	cmp	r1, #1
   12eca:	d104      	bne.n	12ed6 <f_write+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   12ecc:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12ece:	71e5      	strb	r5, [r4, #7]
   12ed0:	e7b8      	b.n	12e44 <f_write+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12ed2:	6961      	ldr	r1, [r4, #20]
   12ed4:	e7f3      	b.n	12ebe <f_write+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12ed6:	1c4a      	adds	r2, r1, #1
   12ed8:	d101      	bne.n	12ede <f_write+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12eda:	2501      	movs	r5, #1
   12edc:	e7f7      	b.n	12ece <f_write+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12ede:	6923      	ldr	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   12ee0:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12ee2:	b903      	cbnz	r3, 12ee6 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   12ee4:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   12ee6:	79a3      	ldrb	r3, [r4, #6]
   12ee8:	065b      	lsls	r3, r3, #25
   12eea:	d50c      	bpl.n	12f06 <f_write+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12eec:	6820      	ldr	r0, [r4, #0]
   12eee:	2301      	movs	r3, #1
   12ef0:	69a2      	ldr	r2, [r4, #24]
   12ef2:	9901      	ldr	r1, [sp, #4]
   12ef4:	7840      	ldrb	r0, [r0, #1]
   12ef6:	f001 fa74 	bl	143e2 <disk_write>
   12efa:	2800      	cmp	r0, #0
   12efc:	d1ed      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   12efe:	79a3      	ldrb	r3, [r4, #6]
   12f00:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12f04:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12f06:	f8d4 a000 	ldr.w	sl, [r4]
   12f0a:	6961      	ldr	r1, [r4, #20]
   12f0c:	4650      	mov	r0, sl
   12f0e:	f7ff f87f 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12f12:	b930      	cbnz	r0, 12f22 <f_write+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   12f14:	2502      	movs	r5, #2
   12f16:	4650      	mov	r0, sl
   12f18:	4629      	mov	r1, r5
   12f1a:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12f1c:	f7ff f86b 	bl	11ff6 <unlock_fs>
   12f20:	e799      	b.n	12e56 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12f22:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12f24:	ea5f 2658 	movs.w	r6, r8, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12f28:	eb00 0703 	add.w	r7, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12f2c:	d02d      	beq.n	12f8a <f_write+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12f2e:	9a00      	ldr	r2, [sp, #0]
   12f30:	f89a 3002 	ldrb.w	r3, [sl, #2]
   12f34:	4432      	add	r2, r6
   12f36:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12f38:	bf88      	it	hi
   12f3a:	9a00      	ldrhi	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12f3c:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12f3e:	bf88      	it	hi
   12f40:	1a9e      	subhi	r6, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12f42:	b2f3      	uxtb	r3, r6
   12f44:	463a      	mov	r2, r7
   12f46:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12f4a:	f001 fa4a 	bl	143e2 <disk_write>
   12f4e:	2800      	cmp	r0, #0
   12f50:	d1c3      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   12f52:	69a1      	ldr	r1, [r4, #24]
   12f54:	1bc9      	subs	r1, r1, r7
   12f56:	428e      	cmp	r6, r1
   12f58:	d90a      	bls.n	12f70 <f_write+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   12f5a:	f44f 7200 	mov.w	r2, #512	; 0x200
   12f5e:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   12f62:	9801      	ldr	r0, [sp, #4]
   12f64:	f7fe fdc8 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   12f68:	79a3      	ldrb	r3, [r4, #6]
   12f6a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12f6e:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   12f70:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   12f72:	68a3      	ldr	r3, [r4, #8]
   12f74:	44b1      	add	r9, r6
   12f76:	4433      	add	r3, r6
   12f78:	60a3      	str	r3, [r4, #8]
   12f7a:	f8db 3000 	ldr.w	r3, [fp]
   12f7e:	eba8 0806 	sub.w	r8, r8, r6
   12f82:	4433      	add	r3, r6
   12f84:	f8cb 3000 	str.w	r3, [fp]
   12f88:	e779      	b.n	12e7e <f_write+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   12f8a:	69a3      	ldr	r3, [r4, #24]
   12f8c:	429f      	cmp	r7, r3
   12f8e:	d00c      	beq.n	12faa <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   12f90:	68a2      	ldr	r2, [r4, #8]
   12f92:	68e3      	ldr	r3, [r4, #12]
   12f94:	429a      	cmp	r2, r3
   12f96:	d208      	bcs.n	12faa <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12f98:	2301      	movs	r3, #1
   12f9a:	463a      	mov	r2, r7
   12f9c:	9901      	ldr	r1, [sp, #4]
   12f9e:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12fa2:	f001 fa02 	bl	143aa <disk_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   12fa6:	2800      	cmp	r0, #0
   12fa8:	d197      	bne.n	12eda <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   12faa:	61a7      	str	r7, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12fac:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12fae:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12fb0:	f3c0 0008 	ubfx	r0, r0, #0, #9
   12fb4:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   12fb8:	4546      	cmp	r6, r8
   12fba:	bf28      	it	cs
   12fbc:	4646      	movcs	r6, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12fbe:	3024      	adds	r0, #36	; 0x24
   12fc0:	4632      	mov	r2, r6
   12fc2:	4420      	add	r0, r4
   12fc4:	f7fe fd98 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   12fc8:	79a3      	ldrb	r3, [r4, #6]
   12fca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12fce:	71a3      	strb	r3, [r4, #6]
   12fd0:	e7cf      	b.n	12f72 <f_write+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12fd2:	60e3      	str	r3, [r4, #12]
   12fd4:	e75b      	b.n	12e8e <f_write+0x64>

00012fd6 <f_sync>:
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   12fd6:	b570      	push	{r4, r5, r6, lr}
   12fd8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   12fda:	f7fe ffef 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   12fde:	4605      	mov	r5, r0
   12fe0:	2800      	cmp	r0, #0
   12fe2:	d138      	bne.n	13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   12fe4:	79a3      	ldrb	r3, [r4, #6]
   12fe6:	069a      	lsls	r2, r3, #26
   12fe8:	d535      	bpl.n	13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   12fea:	065b      	lsls	r3, r3, #25
   12fec:	d513      	bpl.n	13016 <f_sync+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12fee:	6820      	ldr	r0, [r4, #0]
   12ff0:	2301      	movs	r3, #1
   12ff2:	69a2      	ldr	r2, [r4, #24]
   12ff4:	f104 0124 	add.w	r1, r4, #36	; 0x24
   12ff8:	7840      	ldrb	r0, [r0, #1]
   12ffa:	f001 f9f2 	bl	143e2 <disk_write>
   12ffe:	b130      	cbz	r0, 1300e <f_sync+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   13000:	2101      	movs	r1, #1
   13002:	6820      	ldr	r0, [r4, #0]
   13004:	f7fe fff7 	bl	11ff6 <unlock_fs>
   13008:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   1300a:	4628      	mov	r0, r5
   1300c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   1300e:	79a3      	ldrb	r3, [r4, #6]
   13010:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13014:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   13016:	69e1      	ldr	r1, [r4, #28]
   13018:	6820      	ldr	r0, [r4, #0]
   1301a:	f7fe fe81 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   1301e:	4605      	mov	r5, r0
   13020:	b9c8      	cbnz	r0, 13056 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   13022:	6a26      	ldr	r6, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   13024:	7af3      	ldrb	r3, [r6, #11]
   13026:	f043 0320 	orr.w	r3, r3, #32
   1302a:	72f3      	strb	r3, [r6, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   1302c:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1302e:	61f3      	str	r3, [r6, #28]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   13030:	6923      	ldr	r3, [r4, #16]
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   13032:	8373      	strh	r3, [r6, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13034:	0c1b      	lsrs	r3, r3, #16
   13036:	82b3      	strh	r3, [r6, #20]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   13038:	f001 fc8e 	bl	14958 <get_fattime>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1303c:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1303e:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   13042:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   13044:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   13046:	f023 0320 	bic.w	r3, r3, #32
   1304a:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   1304c:	2301      	movs	r3, #1
   1304e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   13050:	f7fe fe2c 	bl	11cac <sync_fs>
   13054:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   13056:	4629      	mov	r1, r5
   13058:	6820      	ldr	r0, [r4, #0]
   1305a:	f7fe ffcc 	bl	11ff6 <unlock_fs>
   1305e:	e7d4      	b.n	1300a <f_sync+0x34>

00013060 <f_close>:
f_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   13060:	b538      	push	{r3, r4, r5, lr}
   13062:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   13064:	f7ff ffb7 	bl	12fd6 <f_sync>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   13068:	4604      	mov	r4, r0
   1306a:	b948      	cbnz	r0, 13080 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   1306c:	4628      	mov	r0, r5
   1306e:	f7fe ffa5 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   13072:	4604      	mov	r4, r0
   13074:	b920      	cbnz	r0, 13080 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   13076:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   13078:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   1307a:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   1307c:	f7fe ffbb 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   13080:	4620      	mov	r0, r4
   13082:	bd38      	pop	{r3, r4, r5, pc}

00013084 <f_lseek>:
f_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   13084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13086:	4604      	mov	r4, r0
   13088:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   1308a:	f7fe ff97 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   1308e:	4605      	mov	r5, r0
   13090:	b110      	cbz	r0, 13098 <f_lseek+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   13092:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   13094:	6820      	ldr	r0, [r4, #0]
   13096:	e06a      	b.n	1316e <f_lseek+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   13098:	79e1      	ldrb	r1, [r4, #7]
   1309a:	b129      	cbz	r1, 130a8 <f_lseek+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   1309c:	6820      	ldr	r0, [r4, #0]
   1309e:	f7fe ffaa 	bl	11ff6 <unlock_fs>
   130a2:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   130a4:	4628      	mov	r0, r5
   130a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   130a8:	68e3      	ldr	r3, [r4, #12]
   130aa:	42b3      	cmp	r3, r6
   130ac:	d204      	bcs.n	130b8 <f_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   130ae:	79a2      	ldrb	r2, [r4, #6]
   130b0:	f012 0f02 	tst.w	r2, #2
   130b4:	bf08      	it	eq
   130b6:	461e      	moveq	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130b8:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   130ba:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130bc:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   130be:	2e00      	cmp	r6, #0
   130c0:	d130      	bne.n	13124 <f_lseek+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   130c2:	68a3      	ldr	r3, [r4, #8]
   130c4:	68e2      	ldr	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   130c6:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   130c8:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   130ca:	bf81      	itttt	hi
   130cc:	60e3      	strhi	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   130ce:	79a3      	ldrbhi	r3, [r4, #6]
   130d0:	f043 0320 	orrhi.w	r3, r3, #32
   130d4:	71a3      	strbhi	r3, [r4, #6]
   130d6:	e7dd      	b.n	13094 <f_lseek+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   130d8:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   130da:	68a3      	ldr	r3, [r4, #8]
   130dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
   130e0:	2b00      	cmp	r3, #0
   130e2:	d0ee      	beq.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   130e4:	69a2      	ldr	r2, [r4, #24]
   130e6:	4296      	cmp	r6, r2
   130e8:	d0eb      	beq.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   130ea:	79a3      	ldrb	r3, [r4, #6]
   130ec:	f104 0724 	add.w	r7, r4, #36	; 0x24
   130f0:	f013 0f40 	tst.w	r3, #64	; 0x40
   130f4:	d00b      	beq.n	1310e <f_lseek+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   130f6:	6820      	ldr	r0, [r4, #0]
   130f8:	2301      	movs	r3, #1
   130fa:	4639      	mov	r1, r7
   130fc:	7840      	ldrb	r0, [r0, #1]
   130fe:	f001 f970 	bl	143e2 <disk_write>
   13102:	2800      	cmp	r0, #0
   13104:	d142      	bne.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   13106:	79a3      	ldrb	r3, [r4, #6]
   13108:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   1310c:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   1310e:	6820      	ldr	r0, [r4, #0]
   13110:	2301      	movs	r3, #1
   13112:	4632      	mov	r2, r6
   13114:	4639      	mov	r1, r7
   13116:	7840      	ldrb	r0, [r0, #1]
   13118:	f001 f947 	bl	143aa <disk_read>
   1311c:	2800      	cmp	r0, #0
   1311e:	d135      	bne.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   13120:	61a6      	str	r6, [r4, #24]
   13122:	e7ce      	b.n	130c2 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   13124:	6820      	ldr	r0, [r4, #0]
   13126:	7887      	ldrb	r7, [r0, #2]
   13128:	027f      	lsls	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   1312a:	b31b      	cbz	r3, 13174 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   1312c:	3b01      	subs	r3, #1
   1312e:	1e72      	subs	r2, r6, #1
   13130:	fbb2 f2f7 	udiv	r2, r2, r7
   13134:	fbb3 f1f7 	udiv	r1, r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   13138:	428a      	cmp	r2, r1
   1313a:	d31b      	bcc.n	13174 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   1313c:	427a      	negs	r2, r7
   1313e:	4013      	ands	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   13140:	6961      	ldr	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   13142:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   13144:	1af6      	subs	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   13146:	2900      	cmp	r1, #0
   13148:	d0c6      	beq.n	130d8 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   1314a:	42be      	cmp	r6, r7
   1314c:	d823      	bhi.n	13196 <f_lseek+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   1314e:	68a3      	ldr	r3, [r4, #8]
   13150:	4433      	add	r3, r6
   13152:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   13154:	f3c6 0308 	ubfx	r3, r6, #0, #9
   13158:	2b00      	cmp	r3, #0
   1315a:	d0bd      	beq.n	130d8 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   1315c:	6822      	ldr	r2, [r4, #0]
   1315e:	4610      	mov	r0, r2
   13160:	f7fe ff56 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   13164:	bb90      	cbnz	r0, 131cc <f_lseek+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   13166:	2502      	movs	r5, #2
   13168:	4610      	mov	r0, r2
   1316a:	4629      	mov	r1, r5
   1316c:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   1316e:	f7fe ff42 	bl	11ff6 <unlock_fs>
   13172:	e797      	b.n	130a4 <f_lseek+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   13174:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   13176:	b961      	cbnz	r1, 13192 <f_lseek+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   13178:	f7ff f851 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   1317c:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   1317e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   13180:	d102      	bne.n	13188 <f_lseek+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   13182:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   13184:	71e5      	strb	r5, [r4, #7]
   13186:	e784      	b.n	13092 <f_lseek+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   13188:	3001      	adds	r0, #1
   1318a:	d101      	bne.n	13190 <f_lseek+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   1318c:	2501      	movs	r5, #1
   1318e:	e7f9      	b.n	13184 <f_lseek+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   13190:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   13192:	6161      	str	r1, [r4, #20]
   13194:	e7d7      	b.n	13146 <f_lseek+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   13196:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   13198:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1319a:	079a      	lsls	r2, r3, #30
   1319c:	d505      	bpl.n	131aa <f_lseek+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   1319e:	f7ff f83e 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   131a2:	4601      	mov	r1, r0
   131a4:	b920      	cbnz	r0, 131b0 <f_lseek+0x12c>
   131a6:	463e      	mov	r6, r7
   131a8:	e7d1      	b.n	1314e <f_lseek+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   131aa:	f7fe ff3c 	bl	12026 <get_fat>
   131ae:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   131b0:	1c4b      	adds	r3, r1, #1
   131b2:	d0eb      	beq.n	1318c <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   131b4:	2901      	cmp	r1, #1
   131b6:	d9e4      	bls.n	13182 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   131b8:	6823      	ldr	r3, [r4, #0]
   131ba:	699b      	ldr	r3, [r3, #24]
   131bc:	4299      	cmp	r1, r3
   131be:	d2e0      	bcs.n	13182 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   131c0:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   131c2:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   131c4:	443b      	add	r3, r7
   131c6:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   131c8:	1bf6      	subs	r6, r6, r7
   131ca:	e7be      	b.n	1314a <f_lseek+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   131cc:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   131d0:	e783      	b.n	130da <f_lseek+0x56>

000131d2 <f_opendir>:
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3156

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
   131d2:	b530      	push	{r4, r5, lr}
   131d4:	b0c9      	sub	sp, #292	; 0x124
   131d6:	9101      	str	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	FRESULT res;
	FATFS* fs;
	DEF_NAMEBUF;


	if (!dp) return FR_INVALID_OBJECT;
   131d8:	4605      	mov	r5, r0
   131da:	2800      	cmp	r0, #0
   131dc:	d037      	beq.n	1324e <f_opendir+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3165

	/* Get logical drive number */
	res = find_volume(&fs, &path, 0);
   131de:	2200      	movs	r2, #0
   131e0:	a901      	add	r1, sp, #4
   131e2:	a803      	add	r0, sp, #12
   131e4:	f7fe fddc 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3166
	if (res == FR_OK) {
   131e8:	4604      	mov	r4, r0
   131ea:	b988      	cbnz	r0, 13210 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   131ec:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		INIT_BUF(*dp);
		res = follow_path(dp, path);			/* Follow the path to the directory */
   131ee:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   131f0:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3168
		INIT_BUF(*dp);
   131f2:	ab04      	add	r3, sp, #16
   131f4:	61ab      	str	r3, [r5, #24]
   131f6:	ab07      	add	r3, sp, #28
   131f8:	61eb      	str	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		res = follow_path(dp, path);			/* Follow the path to the directory */
   131fa:	4628      	mov	r0, r5
   131fc:	f7ff f966 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3171
		FREE_BUF();
		if (res == FR_OK) {						/* Follow completed */
   13200:	4604      	mov	r4, r0
   13202:	bb30      	cbnz	r0, 13252 <f_opendir+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3172
			if (dp->dir) {						/* It is not the origin directory itself */
   13204:	696b      	ldr	r3, [r5, #20]
   13206:	b17b      	cbz	r3, 13228 <f_opendir+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3173
				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
   13208:	7ada      	ldrb	r2, [r3, #11]
   1320a:	06d2      	lsls	r2, r2, #27
   1320c:	d403      	bmi.n	13216 <f_opendir+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3176
					dp->sclust = ld_clust(fs, dp->dir);
				else							/* The object is a file */
					res = FR_NO_PATH;
   1320e:	2405      	movs	r4, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196 (discriminator 1)
#endif
			}
		}
		if (res == FR_NO_FILE) res = FR_NO_PATH;
	}
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   13210:	2300      	movs	r3, #0
   13212:	602b      	str	r3, [r5, #0]
   13214:	e014      	b.n	13240 <f_opendir+0x6e>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13216:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13218:	8b5a      	ldrh	r2, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1321a:	7809      	ldrb	r1, [r1, #0]
   1321c:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1321e:	bf04      	itt	eq
   13220:	8a9b      	ldrheq	r3, [r3, #20]
   13222:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3174
					dp->sclust = ld_clust(fs, dp->dir);
   13226:	60aa      	str	r2, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   13228:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1322a:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   1322c:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   1322e:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   13230:	80ab      	strh	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   13232:	f7fe ff4b 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   13236:	2804      	cmp	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   13238:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   1323a:	d0e8      	beq.n	1320e <f_opendir+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   1323c:	2c00      	cmp	r4, #0
   1323e:	d1e7      	bne.n	13210 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3198

	LEAVE_FF(fs, res);
   13240:	4621      	mov	r1, r4
   13242:	9803      	ldr	r0, [sp, #12]
   13244:	f7fe fed7 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3199
}
   13248:	4620      	mov	r0, r4
   1324a:	b049      	add	sp, #292	; 0x124
   1324c:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	if (!dp) return FR_INVALID_OBJECT;
   1324e:	2409      	movs	r4, #9
   13250:	e7fa      	b.n	13248 <f_opendir+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   13252:	2804      	cmp	r0, #4
   13254:	d0db      	beq.n	1320e <f_opendir+0x3c>
   13256:	e7db      	b.n	13210 <f_opendir+0x3e>

00013258 <f_readdir>:
f_readdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3244

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
   13258:	b570      	push	{r4, r5, r6, lr}
   1325a:	b0c4      	sub	sp, #272	; 0x110
   1325c:	4604      	mov	r4, r0
   1325e:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3249
	FRESULT res;
	DEF_NAMEBUF;


	res = validate(dp);						/* Check validity of the object */
   13260:	f7fe feac 	bl	11fbc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3250
	if (res == FR_OK) {
   13264:	4605      	mov	r5, r0
   13266:	b9e0      	cbnz	r0, 132a2 <f_readdir+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3251
		if (!fno) {
   13268:	b92e      	cbnz	r6, 13276 <f_readdir+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3252
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
   1326a:	4601      	mov	r1, r0
   1326c:	4620      	mov	r0, r4
   1326e:	f7fe ff2d 	bl	120cc <dir_sdi>
   13272:	4605      	mov	r5, r0
   13274:	e015      	b.n	132a2 <f_readdir+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3254
		} else {
			INIT_BUF(*dp);
   13276:	ab03      	add	r3, sp, #12
   13278:	f8c4 d018 	str.w	sp, [r4, #24]
   1327c:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3255
			res = dir_read(dp, 0);			/* Read an item */
   1327e:	4620      	mov	r0, r4
   13280:	f7ff fba6 	bl	129d0 <dir_read.constprop.11>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3256
			if (res == FR_NO_FILE) {		/* Reached end of directory */
   13284:	2804      	cmp	r0, #4
   13286:	d113      	bne.n	132b0 <f_readdir+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3257
				dp->sect = 0;
   13288:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3261
				res = FR_OK;
			}
			if (res == FR_OK) {				/* A valid entry is found */
				get_fileinfo(dp, fno);		/* Get the object information */
   1328a:	4631      	mov	r1, r6
   1328c:	4620      	mov	r0, r4
   1328e:	f7fe fc82 	bl	11b96 <get_fileinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3262
				res = dir_next(dp, 0);		/* Increment index for next */
   13292:	2100      	movs	r1, #0
   13294:	4620      	mov	r0, r4
   13296:	f7ff f812 	bl	122be <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3263
				if (res == FR_NO_FILE) {
   1329a:	2804      	cmp	r0, #4
   1329c:	d1e9      	bne.n	13272 <f_readdir+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3264
					dp->sect = 0;
   1329e:	2300      	movs	r3, #0
   132a0:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3272
			}
			FREE_BUF();
		}
	}

	LEAVE_FF(dp->fs, res);
   132a2:	6820      	ldr	r0, [r4, #0]
   132a4:	4629      	mov	r1, r5
   132a6:	f7fe fea6 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3273
}
   132aa:	4628      	mov	r0, r5
   132ac:	b044      	add	sp, #272	; 0x110
   132ae:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3260
			if (res == FR_OK) {				/* A valid entry is found */
   132b0:	2800      	cmp	r0, #0
   132b2:	d1de      	bne.n	13272 <f_readdir+0x1a>
   132b4:	e7e9      	b.n	1328a <f_readdir+0x32>

000132b6 <f_getfree>:
f_getfree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   132b6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   132ba:	4614      	mov	r4, r2
   132bc:	ab02      	add	r3, sp, #8
   132be:	f843 0d04 	str.w	r0, [r3, #-4]!
   132c2:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   132c4:	4620      	mov	r0, r4
   132c6:	2200      	movs	r2, #0
   132c8:	4619      	mov	r1, r3
   132ca:	f7fe fd69 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   132ce:	6824      	ldr	r4, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   132d0:	4605      	mov	r5, r0
   132d2:	b930      	cbnz	r0, 132e2 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   132d4:	69a7      	ldr	r7, [r4, #24]
   132d6:	6963      	ldr	r3, [r4, #20]
   132d8:	1eba      	subs	r2, r7, #2
   132da:	4293      	cmp	r3, r2
   132dc:	d809      	bhi.n	132f2 <f_getfree+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   132de:	f8c8 3000 	str.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   132e2:	4620      	mov	r0, r4
   132e4:	4629      	mov	r1, r5
   132e6:	f7fe fe86 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   132ea:	4628      	mov	r0, r5
   132ec:	b002      	add	sp, #8
   132ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   132f2:	f894 9000 	ldrb.w	r9, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   132f6:	f1b9 0f01 	cmp.w	r9, #1
   132fa:	d117      	bne.n	1332c <f_getfree+0x76>
   132fc:	2702      	movs	r7, #2
   132fe:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   13300:	4639      	mov	r1, r7
   13302:	4620      	mov	r0, r4
   13304:	f7fe fe8f 	bl	12026 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   13308:	1c43      	adds	r3, r0, #1
   1330a:	d032      	beq.n	13372 <f_getfree+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   1330c:	2801      	cmp	r0, #1
   1330e:	d032      	beq.n	13376 <f_getfree+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   13310:	b900      	cbnz	r0, 13314 <f_getfree+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   13312:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   13314:	69a3      	ldr	r3, [r4, #24]
   13316:	3701      	adds	r7, #1
   13318:	429f      	cmp	r7, r3
   1331a:	d3f1      	bcc.n	13300 <f_getfree+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   1331c:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   1331e:	6166      	str	r6, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   13320:	f043 0301 	orr.w	r3, r3, #1
   13324:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   13326:	f8c8 6000 	str.w	r6, [r8]
   1332a:	e7da      	b.n	132e2 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   1332c:	4603      	mov	r3, r0
   1332e:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   13330:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   13332:	6a61      	ldr	r1, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   13334:	b952      	cbnz	r2, 1334c <f_getfree+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   13336:	4620      	mov	r0, r4
   13338:	f101 0a01 	add.w	sl, r1, #1
   1333c:	f7fe fcf0 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   13340:	b9d8      	cbnz	r0, 1337a <f_getfree+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   13342:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   13344:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   13348:	f104 0334 	add.w	r3, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   1334c:	f1b9 0f02 	cmp.w	r9, #2
   13350:	d107      	bne.n	13362 <f_getfree+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   13352:	8818      	ldrh	r0, [r3, #0]
   13354:	b900      	cbnz	r0, 13358 <f_getfree+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   13356:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   13358:	3302      	adds	r3, #2
   1335a:	3a02      	subs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   1335c:	3f01      	subs	r7, #1
   1335e:	d1e9      	bne.n	13334 <f_getfree+0x7e>
   13360:	e7dc      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13362:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   13364:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13366:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   1336a:	bf08      	it	eq
   1336c:	3601      	addeq	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   1336e:	3304      	adds	r3, #4
   13370:	e7f4      	b.n	1335c <f_getfree+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   13372:	2501      	movs	r5, #1
   13374:	e7d2      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   13376:	2502      	movs	r5, #2
   13378:	e7d0      	b.n	1331c <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   1337a:	4605      	mov	r5, r0
   1337c:	e7ce      	b.n	1331c <f_getfree+0x66>

0001337e <f_unlink>:
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3443
/*-----------------------------------------------------------------------*/

FRESULT f_unlink (
	const TCHAR* path		/* Pointer to the file or directory path */
)
{
   1337e:	b530      	push	{r4, r5, lr}
   13380:	b0d9      	sub	sp, #356	; 0x164
   13382:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3452
	DWORD dclst;
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13384:	2201      	movs	r2, #1
   13386:	a901      	add	r1, sp, #4
   13388:	a805      	add	r0, sp, #20
   1338a:	f7fe fd09 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3453
	if (res == FR_OK) {
   1338e:	4604      	mov	r4, r0
   13390:	2800      	cmp	r0, #0
   13392:	d131      	bne.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   13394:	ab02      	add	r3, sp, #8
   13396:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   13398:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1339a:	ab17      	add	r3, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   1339c:	a805      	add	r0, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1339e:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   133a0:	f7ff f894 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3461
		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
#endif
		if (res == FR_OK) {					/* The object is accessible */
   133a4:	4604      	mov	r4, r0
   133a6:	bb38      	cbnz	r0, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3462
			dir = dj.dir;
   133a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3463
			if (!dir) {
   133aa:	b363      	cbz	r3, 13406 <f_unlink+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3466
				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
			} else {
				if (dir[DIR_Attr] & AM_RDO)
   133ac:	7ada      	ldrb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3467
					res = FR_DENIED;		/* Cannot remove R/O object */
   133ae:	f012 0f01 	tst.w	r2, #1
   133b2:	bf18      	it	ne
   133b4:	2407      	movne	r4, #7
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   133b6:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   133b8:	8b5d      	ldrh	r5, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   133ba:	7812      	ldrb	r2, [r2, #0]
   133bc:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   133be:	bf04      	itt	eq
   133c0:	8a9a      	ldrheq	r2, [r3, #20]
   133c2:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470
			}
			dclst = ld_clust(dj.fs, dir);
			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
   133c6:	b9bc      	cbnz	r4, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470 (discriminator 1)
   133c8:	7adb      	ldrb	r3, [r3, #11]
   133ca:	06db      	lsls	r3, r3, #27
   133cc:	d529      	bpl.n	13422 <f_unlink+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3471
				if (dclst < 2) {
   133ce:	2d01      	cmp	r5, #1
   133d0:	d923      	bls.n	1341a <f_unlink+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3474
					res = FR_INT_ERR;
				} else {
					mem_cpy(&sdj, &dj, sizeof (DIR));	/* Check if the sub-directory is empty or not */
   133d2:	2224      	movs	r2, #36	; 0x24
   133d4:	a905      	add	r1, sp, #20
   133d6:	a80e      	add	r0, sp, #56	; 0x38
   133d8:	f7fe fb8e 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					sdj.sclust = dclst;
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   133dc:	2102      	movs	r1, #2
   133de:	a80e      	add	r0, sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3475
					sdj.sclust = dclst;
   133e0:	9510      	str	r5, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   133e2:	f7fe fe73 	bl	120cc <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3477
					if (res == FR_OK) {
   133e6:	4604      	mov	r4, r0
   133e8:	b930      	cbnz	r0, 133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3478
						res = dir_read(&sdj, 0);	/* Read an item */
   133ea:	a80e      	add	r0, sp, #56	; 0x38
   133ec:	f7ff faf0 	bl	129d0 <dir_read.constprop.11>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3479
						if (res == FR_OK		/* Not empty directory */
   133f0:	4604      	mov	r4, r0
   133f2:	b1a0      	cbz	r0, 1341e <f_unlink+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3484
#if _FS_RPATH
						|| dclst == dj.fs->cdir	/* Current directory */
#endif
						) res = FR_DENIED;
						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
   133f4:	2804      	cmp	r0, #4
   133f6:	d014      	beq.n	13422 <f_unlink+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3500
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   133f8:	9805      	ldr	r0, [sp, #20]
   133fa:	4621      	mov	r1, r4
   133fc:	f7fe fdfb 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3501
}
   13400:	4620      	mov	r0, r4
   13402:	b059      	add	sp, #356	; 0x164
   13404:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3464
				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
   13406:	2406      	movs	r4, #6
   13408:	e7d5      	b.n	133b6 <f_unlink+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3492
						res = remove_chain(dj.fs, dclst);
   1340a:	4629      	mov	r1, r5
   1340c:	9805      	ldr	r0, [sp, #20]
   1340e:	f7ff fb53 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   13412:	4604      	mov	r4, r0
   13414:	2800      	cmp	r0, #0
   13416:	d1ef      	bne.n	133f8 <f_unlink+0x7a>
   13418:	e00b      	b.n	13432 <f_unlink+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3472
					res = FR_INT_ERR;
   1341a:	2402      	movs	r4, #2
   1341c:	e7ec      	b.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3483
						) res = FR_DENIED;
   1341e:	2407      	movs	r4, #7
   13420:	e7ea      	b.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3489
				res = dir_remove(&dj);		/* Remove the directory entry */
   13422:	a805      	add	r0, sp, #20
   13424:	f7ff faa6 	bl	12974 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3490
				if (res == FR_OK) {
   13428:	4604      	mov	r4, r0
   1342a:	2800      	cmp	r0, #0
   1342c:	d1e4      	bne.n	133f8 <f_unlink+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3491
					if (dclst)				/* Remove the cluster chain if exist */
   1342e:	2d00      	cmp	r5, #0
   13430:	d1eb      	bne.n	1340a <f_unlink+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   13432:	9805      	ldr	r0, [sp, #20]
   13434:	f7fe fc3a 	bl	11cac <sync_fs>
   13438:	4604      	mov	r4, r0
   1343a:	e7dd      	b.n	133f8 <f_unlink+0x7a>

0001343c <f_mkdir>:
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3513
/*-----------------------------------------------------------------------*/

FRESULT f_mkdir (
	const TCHAR* path		/* Pointer to the directory path */
)
{
   1343c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13440:	b0d1      	sub	sp, #324	; 0x144
   13442:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	FRESULT res;
	DIR dj;
	BYTE *dir, n;
	DWORD dsc, dcl, pcl, tm = get_fattime();
   13444:	f001 fa88 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13448:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	DWORD dsc, dcl, pcl, tm = get_fattime();
   1344a:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	res = find_volume(&dj.fs, &path, 1);
   1344c:	a901      	add	r1, sp, #4
   1344e:	a806      	add	r0, sp, #24
   13450:	f7fe fca6 	bl	11da0 <find_volume>
   13454:	4604      	mov	r4, r0
   13456:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3523
	if (res == FR_OK) {
   13458:	2800      	cmp	r0, #0
   1345a:	f040 808a 	bne.w	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   1345e:	ab03      	add	r3, sp, #12
   13460:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13462:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   13464:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13466:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   13468:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   1346a:	f7ff f82f 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   1346e:	4604      	mov	r4, r0
   13470:	2800      	cmp	r0, #0
   13472:	f000 808a 	beq.w	1358a <f_mkdir+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3529
		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;
		if (res == FR_NO_FILE) {				/* Can create a new directory */
   13476:	2804      	cmp	r0, #4
   13478:	d17b      	bne.n	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3530
			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
   1347a:	4629      	mov	r1, r5
   1347c:	9806      	ldr	r0, [sp, #24]
   1347e:	f7fe fece 	bl	1221e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			res = FR_OK;
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13482:	4605      	mov	r5, r0
   13484:	2800      	cmp	r0, #0
   13486:	d06f      	beq.n	13568 <f_mkdir+0x12c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   13488:	2801      	cmp	r0, #1
   1348a:	d07a      	beq.n	13582 <f_mkdir+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   1348c:	1c43      	adds	r3, r0, #1
   1348e:	d07a      	beq.n	13586 <f_mkdir+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3536
			if (res == FR_OK)					/* Flush FAT */
				res = sync_window(dj.fs);
   13490:	9806      	ldr	r0, [sp, #24]
   13492:	f7fe fc05 	bl	11ca0 <sync_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3537
			if (res == FR_OK) {					/* Initialize the new directory table */
   13496:	4604      	mov	r4, r0
   13498:	2800      	cmp	r0, #0
   1349a:	d166      	bne.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   1349c:	9e06      	ldr	r6, [sp, #24]
   1349e:	4629      	mov	r1, r5
   134a0:	4630      	mov	r0, r6
   134a2:	f7fe fdb5 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3539
				dir = dj.fs->win;
   134a6:	f106 0734 	add.w	r7, r6, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   134aa:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   134ac:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   134ae:	f44f 7200 	mov.w	r2, #512	; 0x200
   134b2:	4638      	mov	r0, r7
   134b4:	f7fe fb3c 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3541
				mem_set(dir+DIR_Name, ' ', 11);	/* Create "." entry */
   134b8:	220b      	movs	r2, #11
   134ba:	2120      	movs	r1, #32
   134bc:	4638      	mov	r0, r7
   134be:	f7fe fb37 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Name] = '.';
				dir[DIR_Attr] = AM_DIR;
   134c2:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   134c4:	242e      	movs	r4, #46	; 0x2e
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   134c6:	fa25 fa02 	lsr.w	sl, r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   134ca:	fa1f f985 	uxth.w	r9, r5
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Attr] = AM_DIR;
   134ce:	f886 203f 	strb.w	r2, [r6, #63]	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				ST_DWORD(dir+DIR_WrtTime, tm);
				st_clust(dir, dcl);
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   134d2:	4639      	mov	r1, r7
   134d4:	2220      	movs	r2, #32
   134d6:	f106 0054 	add.w	r0, r6, #84	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   134da:	f886 4034 	strb.w	r4, [r6, #52]	; 0x34
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   134de:	f8c6 804a 	str.w	r8, [r6, #74]	; 0x4a
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   134e2:	f8a6 904e 	strh.w	r9, [r6, #78]	; 0x4e
   134e6:	f8a6 a048 	strh.w	sl, [r6, #72]	; 0x48
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   134ea:	f7fe fb05 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134ee:	9906      	ldr	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   134f0:	f886 4055 	strb.w	r4, [r6, #85]	; 0x55
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134f4:	7808      	ldrb	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   134f6:	9a08      	ldr	r2, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   134f8:	2803      	cmp	r0, #3
   134fa:	9b00      	ldr	r3, [sp, #0]
   134fc:	d103      	bne.n	13506 <f_mkdir+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548 (discriminator 1)
   134fe:	6a88      	ldr	r0, [r1, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3549 (discriminator 1)
					pcl = 0;
   13500:	4282      	cmp	r2, r0
   13502:	bf08      	it	eq
   13504:	2200      	moveq	r2, #0
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   13506:	f8a6 206e 	strh.w	r2, [r6, #110]	; 0x6e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   1350a:	0c12      	lsrs	r2, r2, #16
   1350c:	f8a6 2068 	strh.w	r2, [r6, #104]	; 0x68
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551
				st_clust(dir+SZ_DIR, pcl);
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   13510:	788e      	ldrb	r6, [r1, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 1)
   13512:	b9a6      	cbnz	r6, 1353e <f_mkdir+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3559
					res = sync_window(dj.fs);
					if (res != FR_OK) break;
					mem_set(dir, 0, SS(dj.fs));
				}
			}
			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
   13514:	a806      	add	r0, sp, #24
   13516:	f7ff f911 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3560
			if (res != FR_OK) {
   1351a:	4604      	mov	r4, r0
   1351c:	bb28      	cbnz	r0, 1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
			} else {
				dir = dj.dir;
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   1351e:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3563
				dir = dj.dir;
   13520:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				ST_DWORD(dir+DIR_WrtTime, tm);		/* Created time */
				st_clust(dir, dcl);					/* Table start cluster */
				dj.fs->wflag = 1;
   13522:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   13524:	72da      	strb	r2, [r3, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13526:	f8c3 8016 	str.w	r8, [r3, #22]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1352a:	f8a3 901a 	strh.w	r9, [r3, #26]
   1352e:	f8a3 a014 	strh.w	sl, [r3, #20]
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				dj.fs->wflag = 1;
   13532:	2301      	movs	r3, #1
   13534:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3568
				res = sync_fs(dj.fs);
   13536:	f7fe fbb9 	bl	11cac <sync_fs>
   1353a:	4604      	mov	r4, r0
   1353c:	e019      	b.n	13572 <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552
					dj.fs->winsect = dsc++;
   1353e:	9806      	ldr	r0, [sp, #24]
   13540:	f103 0b01 	add.w	fp, r3, #1
   13544:	6303      	str	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3553
					dj.fs->wflag = 1;
   13546:	f04f 0301 	mov.w	r3, #1
   1354a:	7103      	strb	r3, [r0, #4]
sync_window():
   1354c:	f7fe fb85 	bl	11c5a <sync_window.part.1>
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3555
					if (res != FR_OK) break;
   13550:	4604      	mov	r4, r0
   13552:	b950      	cbnz	r0, 1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   13554:	4601      	mov	r1, r0
   13556:	f44f 7200 	mov.w	r2, #512	; 0x200
   1355a:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   1355c:	3e01      	subs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   1355e:	f7fe fae7 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   13562:	b2f6      	uxtb	r6, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552 (discriminator 2)
					dj.fs->winsect = dsc++;
   13564:	465b      	mov	r3, fp
   13566:	e7d4      	b.n	13512 <f_mkdir+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13568:	2407      	movs	r4, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3561
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
   1356a:	4629      	mov	r1, r5
   1356c:	9806      	ldr	r0, [sp, #24]
   1356e:	f7ff faa3 	bl	12ab8 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3574
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   13572:	9806      	ldr	r0, [sp, #24]
   13574:	4621      	mov	r1, r4
   13576:	f7fe fd3e 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3575
}
   1357a:	4620      	mov	r0, r4
   1357c:	b051      	add	sp, #324	; 0x144
   1357e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   13582:	2402      	movs	r4, #2
   13584:	e7f1      	b.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   13586:	2401      	movs	r4, #1
   13588:	e7ef      	b.n	1356a <f_mkdir+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   1358a:	2408      	movs	r4, #8
   1358c:	e7f1      	b.n	13572 <f_mkdir+0x136>

0001358e <f_rename>:
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3673

FRESULT f_rename (
	const TCHAR* path_old,	/* Pointer to the object to be renamed */
	const TCHAR* path_new	/* Pointer to the new name */
)
{
   1358e:	b510      	push	{r4, lr}
   13590:	b0de      	sub	sp, #376	; 0x178
   13592:	9001      	str	r0, [sp, #4]
   13594:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3682
	DWORD dw;
	DEF_NAMEBUF;


	/* Get logical drive number of the source object */
	res = find_volume(&djo.fs, &path_old, 1);
   13596:	2201      	movs	r2, #1
   13598:	a901      	add	r1, sp, #4
   1359a:	a80b      	add	r0, sp, #44	; 0x2c
   1359c:	f7fe fc00 	bl	11da0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3683
	if (res == FR_OK) {
   135a0:	4604      	mov	r4, r0
   135a2:	2800      	cmp	r0, #0
   135a4:	d173      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   135a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		INIT_BUF(djo);
		res = follow_path(&djo, path_old);		/* Check old object */
   135a8:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   135aa:	9314      	str	r3, [sp, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   135ac:	ab02      	add	r3, sp, #8
   135ae:	9311      	str	r3, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   135b0:	a80b      	add	r0, sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   135b2:	ab1d      	add	r3, sp, #116	; 0x74
   135b4:	9312      	str	r3, [sp, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   135b6:	f7fe ff89 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3692
		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
			res = FR_INVALID_NAME;
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&djo, 2);
#endif
		if (res == FR_OK) {						/* Old object is found */
   135ba:	4604      	mov	r4, r0
   135bc:	2800      	cmp	r0, #0
   135be:	d166      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3693
			if (!djo.dir) {						/* Is root dir? */
   135c0:	9910      	ldr	r1, [sp, #64]	; 0x40
   135c2:	2900      	cmp	r1, #0
   135c4:	d06a      	beq.n	1369c <f_rename+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3696
				res = FR_NO_FILE;
			} else {
				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except name */
   135c6:	2215      	movs	r2, #21
   135c8:	310b      	adds	r1, #11
   135ca:	a805      	add	r0, sp, #20
   135cc:	f7fe fa94 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3697
				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
   135d0:	2224      	movs	r2, #36	; 0x24
   135d2:	a90b      	add	r1, sp, #44	; 0x2c
   135d4:	a814      	add	r0, sp, #80	; 0x50
   135d6:	f7fe fa8f 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3698
				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
   135da:	4668      	mov	r0, sp
   135dc:	f7fe fabe 	bl	11b5c <get_ldnumber>
   135e0:	2800      	cmp	r0, #0
   135e2:	db5d      	blt.n	136a0 <f_rename+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3699
					res = follow_path(&djn, path_new);	/* and check if new object is exist */
   135e4:	9900      	ldr	r1, [sp, #0]
   135e6:	a814      	add	r0, sp, #80	; 0x50
   135e8:	f7fe ff70 	bl	124cc <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				else
					res = FR_INVALID_DRIVE;
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   135ec:	4604      	mov	r4, r0
   135ee:	2800      	cmp	r0, #0
   135f0:	d058      	beq.n	136a4 <f_rename+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3703
				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
   135f2:	2804      	cmp	r0, #4
   135f4:	d14b      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3705
/* Start critical section that any interruption can cause a cross-link */
					res = dir_register(&djn);			/* Register the new entry */
   135f6:	a814      	add	r0, sp, #80	; 0x50
   135f8:	f7ff f8a0 	bl	1273c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3706
					if (res == FR_OK) {
   135fc:	4604      	mov	r4, r0
   135fe:	2800      	cmp	r0, #0
   13600:	d145      	bne.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3707
						dir = djn.dir;					/* Copy object information except name */
   13602:	9c19      	ldr	r4, [sp, #100]	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3708
						mem_cpy(dir+13, buf+2, 19);
   13604:	2213      	movs	r2, #19
   13606:	f10d 0116 	add.w	r1, sp, #22
   1360a:	f104 000d 	add.w	r0, r4, #13
   1360e:	f7fe fa73 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   13612:	f89d 3014 	ldrb.w	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   13616:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   13618:	f043 0320 	orr.w	r3, r3, #32
   1361c:	72e3      	strb	r3, [r4, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   1361e:	2301      	movs	r3, #1
   13620:	7113      	strb	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711
						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the directory if needed */
   13622:	990d      	ldr	r1, [sp, #52]	; 0x34
   13624:	9b16      	ldr	r3, [sp, #88]	; 0x58
   13626:	4299      	cmp	r1, r3
   13628:	d028      	beq.n	1367c <f_rename+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711 (discriminator 1)
   1362a:	7ae3      	ldrb	r3, [r4, #11]
   1362c:	06db      	lsls	r3, r3, #27
   1362e:	d525      	bpl.n	1367c <f_rename+0xee>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13630:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13632:	8b61      	ldrh	r1, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13634:	2b03      	cmp	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   13636:	bf08      	it	eq
   13638:	8aa3      	ldrheq	r3, [r4, #20]
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   1363a:	4610      	mov	r0, r2
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1363c:	bf08      	it	eq
   1363e:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   13642:	f7fe fce5 	bl	12010 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3713
							if (!dw) {
   13646:	4601      	mov	r1, r0
   13648:	b370      	cbz	r0, 136a8 <f_rename+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3716
								res = FR_INT_ERR;
							} else {
								res = move_window(djo.fs, dw);
   1364a:	4610      	mov	r0, r2
   1364c:	f7fe fb68 	bl	11d20 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
								if (res == FR_OK && dir[1] == '.') {
   13650:	4604      	mov	r4, r0
   13652:	b9e0      	cbnz	r0, 1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3717 (discriminator 1)
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
   13654:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718 (discriminator 1)
								if (res == FR_OK && dir[1] == '.') {
   13656:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
   1365a:	2a2e      	cmp	r2, #46	; 0x2e
   1365c:	d10e      	bne.n	1367c <f_rename+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719
									dw = (djo.fs->fs_type == FS_FAT32 && djn.sclust == djo.fs->dirbase) ? 0 : djn.sclust;
   1365e:	781a      	ldrb	r2, [r3, #0]
   13660:	2a03      	cmp	r2, #3
   13662:	d103      	bne.n	1366c <f_rename+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 2)
   13664:	9916      	ldr	r1, [sp, #88]	; 0x58
   13666:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   13668:	4291      	cmp	r1, r2
   1366a:	d000      	beq.n	1366e <f_rename+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 3)
   1366c:	9c16      	ldr	r4, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									st_clust(dir, dw);
									djo.fs->wflag = 1;
   1366e:	2201      	movs	r2, #1
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292 (discriminator 6)
	ST_WORD(dir+DIR_FstClusLO, cl);
   13670:	f8a3 406e 	strh.w	r4, [r3, #110]	; 0x6e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293 (discriminator 6)
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13674:	0c24      	lsrs	r4, r4, #16
   13676:	f8a3 4068 	strh.w	r4, [r3, #104]	; 0x68
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									djo.fs->wflag = 1;
   1367a:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3726
								}
							}
						}
						if (res == FR_OK) {
							res = dir_remove(&djo);		/* Remove old entry */
   1367c:	a80b      	add	r0, sp, #44	; 0x2c
   1367e:	f7ff f979 	bl	12974 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3727
							if (res == FR_OK)
   13682:	4604      	mov	r4, r0
   13684:	b918      	cbnz	r0, 1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3728
								res = sync_fs(djo.fs);
   13686:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13688:	f7fe fb10 	bl	11cac <sync_fs>
   1368c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3738
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(djo.fs, res);
   1368e:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13690:	4621      	mov	r1, r4
   13692:	f7fe fcb0 	bl	11ff6 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3739
}
   13696:	4620      	mov	r0, r4
   13698:	b05e      	add	sp, #376	; 0x178
   1369a:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3694
				res = FR_NO_FILE;
   1369c:	2404      	movs	r4, #4
   1369e:	e7f6      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3701
					res = FR_INVALID_DRIVE;
   136a0:	240b      	movs	r4, #11
   136a2:	e7f4      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   136a4:	2408      	movs	r4, #8
   136a6:	e7f2      	b.n	1368e <f_rename+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3714
								res = FR_INT_ERR;
   136a8:	2402      	movs	r4, #2
   136aa:	e7f0      	b.n	1368e <f_rename+0x100>

000136ac <f_mkfs>:
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   136ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136b0:	b089      	sub	sp, #36	; 0x24
   136b2:	ab08      	add	r3, sp, #32
   136b4:	f843 0d0c 	str.w	r0, [r3, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   136b8:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   136ba:	460e      	mov	r6, r1
   136bc:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   136be:	f7fe fa4d 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   136c2:	2800      	cmp	r0, #0
   136c4:	f2c0 81f7 	blt.w	13ab6 <f_mkfs+0x40a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   136c8:	2e01      	cmp	r6, #1
   136ca:	f200 81f6 	bhi.w	13aba <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   136ce:	1e6b      	subs	r3, r5, #1
   136d0:	402b      	ands	r3, r5
   136d2:	9302      	str	r3, [sp, #8]
   136d4:	f040 81f1 	bne.w	13aba <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   136d8:	4b50      	ldr	r3, [pc, #320]	; (1381c <f_mkfs+0x170>)
   136da:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   136de:	2c00      	cmp	r4, #0
   136e0:	f000 81ed 	beq.w	13abe <f_mkfs+0x412>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   136e4:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   136e8:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   136ea:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   136ec:	4638      	mov	r0, r7
   136ee:	f000 fe41 	bl	14374 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   136f2:	07c2      	lsls	r2, r0, #31
   136f4:	f100 81e5 	bmi.w	13ac2 <f_mkfs+0x416>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   136f8:	0743      	lsls	r3, r0, #29
   136fa:	f100 81e4 	bmi.w	13ac6 <f_mkfs+0x41a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   136fe:	aa07      	add	r2, sp, #28
   13700:	2101      	movs	r1, #1
   13702:	4638      	mov	r0, r7
   13704:	f000 fe89 	bl	1441a <disk_ioctl>
   13708:	b118      	cbz	r0, 13712 <f_mkfs+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   1370a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   1370c:	b009      	add	sp, #36	; 0x24
   1370e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   13712:	9907      	ldr	r1, [sp, #28]
   13714:	297f      	cmp	r1, #127	; 0x7f
   13716:	d9f8      	bls.n	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   13718:	2e00      	cmp	r6, #0
   1371a:	bf14      	ite	ne
   1371c:	f04f 0a00 	movne.w	sl, #0
   13720:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   13724:	eba1 010a 	sub.w	r1, r1, sl
   13728:	9107      	str	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   1372a:	b95d      	cbnz	r5, 13744 <f_mkfs+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   1372c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   13730:	fbb1 f3f3 	udiv	r3, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   13734:	483a      	ldr	r0, [pc, #232]	; (13820 <f_mkfs+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   13736:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   1373a:	4293      	cmp	r3, r2
   1373c:	d318      	bcc.n	13770 <f_mkfs+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1373e:	4b39      	ldr	r3, [pc, #228]	; (13824 <f_mkfs+0x178>)
   13740:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13744:	0a6d      	lsrs	r5, r5, #9
   13746:	d015      	beq.n	13774 <f_mkfs+0xc8>
   13748:	2d80      	cmp	r5, #128	; 0x80
   1374a:	bf28      	it	cs
   1374c:	2580      	movcs	r5, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   1374e:	fbb1 f3f5 	udiv	r3, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   13752:	f640 72f5 	movw	r2, #4085	; 0xff5
   13756:	4293      	cmp	r3, r2
   13758:	f240 81f8 	bls.w	13b4c <f_mkfs+0x4a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   1375c:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   13760:	4293      	cmp	r3, r2
   13762:	f200 81b2 	bhi.w	13aca <f_mkfs+0x41e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13766:	3302      	adds	r3, #2
   13768:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1376a:	f04f 0802 	mov.w	r8, #2
   1376e:	e1f4      	b.n	13b5a <f_mkfs+0x4ae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   13770:	3501      	adds	r5, #1
   13772:	e7e0      	b.n	13736 <f_mkfs+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13774:	2501      	movs	r5, #1
   13776:	e7ea      	b.n	1374e <f_mkfs+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   13778:	aa06      	add	r2, sp, #24
   1377a:	2103      	movs	r1, #3
   1377c:	4638      	mov	r0, r7
   1377e:	f000 fe4c 	bl	1441a <disk_ioctl>
   13782:	b920      	cbnz	r0, 1378e <f_mkfs+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   13784:	9b06      	ldr	r3, [sp, #24]
   13786:	3b01      	subs	r3, #1
   13788:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   1378c:	d301      	bcc.n	13792 <f_mkfs+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   1378e:	2301      	movs	r3, #1
   13790:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   13792:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   13794:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   13798:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1379c:	444b      	add	r3, r9
   1379e:	f1c2 0200 	rsb	r2, r2, #0
   137a2:	ea03 0302 	and.w	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   137a6:	eba3 0309 	sub.w	r3, r3, r9
   137aa:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   137ac:	d122      	bne.n	137f4 <f_mkfs+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   137ae:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   137b0:	449b      	add	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   137b2:	441a      	add	r2, r3
   137b4:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   137b6:	9a07      	ldr	r2, [sp, #28]
   137b8:	9900      	ldr	r1, [sp, #0]
   137ba:	eba2 030b 	sub.w	r3, r2, fp
   137be:	1a5b      	subs	r3, r3, r1
   137c0:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   137c2:	f1b8 0f02 	cmp.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   137c6:	eba3 0301 	sub.w	r3, r3, r1
   137ca:	fbb3 f3f5 	udiv	r3, r3, r5
   137ce:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   137d0:	d114      	bne.n	137fc <f_mkfs+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   137d2:	f640 73f5 	movw	r3, #4085	; 0xff5
   137d6:	9904      	ldr	r1, [sp, #16]
   137d8:	4299      	cmp	r1, r3
   137da:	f240 81d5 	bls.w	13b88 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   137de:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   137e2:	bf34      	ite	cc
   137e4:	f04f 0904 	movcc.w	r9, #4
   137e8:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   137ec:	b34e      	cbz	r6, 13842 <f_mkfs+0x196>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   137ee:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   137f2:	e05d      	b.n	138b0 <f_mkfs+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   137f4:	9a00      	ldr	r2, [sp, #0]
   137f6:	441a      	add	r2, r3
   137f8:	9200      	str	r2, [sp, #0]
   137fa:	e7dc      	b.n	137b6 <f_mkfs+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   137fc:	f1b8 0f03 	cmp.w	r8, #3
   13800:	d112      	bne.n	13828 <f_mkfs+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   13802:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   13806:	9a04      	ldr	r2, [sp, #16]
   13808:	429a      	cmp	r2, r3
   1380a:	f240 81bd 	bls.w	13b88 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1380e:	2e00      	cmp	r6, #0
   13810:	f040 8167 	bne.w	13ae2 <f_mkfs+0x436>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   13814:	f04f 090c 	mov.w	r9, #12
   13818:	e013      	b.n	13842 <f_mkfs+0x196>
   1381a:	bf00      	nop
   1381c:	2007c45c 	.word	0x2007c45c
   13820:	00024f84 	.word	0x00024f84
   13824:	00024f2a 	.word	0x00024f2a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   13828:	f1b8 0f01 	cmp.w	r8, #1
   1382c:	d1d7      	bne.n	137de <f_mkfs+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1382e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   13832:	bf34      	ite	cc
   13834:	f04f 0901 	movcc.w	r9, #1
   13838:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   1383c:	2e00      	cmp	r6, #0
   1383e:	f040 816b 	bne.w	13b18 <f_mkfs+0x46c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   13842:	f104 0634 	add.w	r6, r4, #52	; 0x34
   13846:	f44f 7200 	mov.w	r2, #512	; 0x200
   1384a:	2100      	movs	r1, #0
   1384c:	4630      	mov	r0, r6
   1384e:	f7fe f96f 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   13852:	21fe      	movs	r1, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13854:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   13858:	f8dd e01c 	ldr.w	lr, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   1385c:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13860:	eb0a 010e 	add.w	r1, sl, lr
   13864:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   13868:	0888      	lsrs	r0, r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1386a:	9106      	str	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   1386c:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13870:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   13872:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   13874:	2200      	movs	r2, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13876:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1387a:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   1387e:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   13882:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13886:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   1388a:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   1388e:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   13892:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   13896:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1389a:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   1389e:	4631      	mov	r1, r6
   138a0:	4638      	mov	r0, r7
   138a2:	f000 fd9e 	bl	143e2 <disk_write>
   138a6:	2800      	cmp	r0, #0
   138a8:	f47f af2f 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   138ac:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   138b0:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   138b4:	f44f 7200 	mov.w	r2, #512	; 0x200
   138b8:	2100      	movs	r1, #0
   138ba:	4630      	mov	r0, r6
   138bc:	f7fe f938 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   138c0:	220b      	movs	r2, #11
   138c2:	49b2      	ldr	r1, [pc, #712]	; (13b8c <f_mkfs+0x4e0>)
   138c4:	4630      	mov	r0, r6
   138c6:	f7fe f917 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   138ca:	f44f 7300 	mov.w	r3, #512	; 0x200
   138ce:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   138d2:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138d4:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   138d8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138dc:	9b02      	ldr	r3, [sp, #8]
   138de:	bf18      	it	ne
   138e0:	f44f 7300 	movne.w	r3, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   138e4:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   138e8:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   138ec:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   138ee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   138f2:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   138f6:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   138fa:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   138fc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   13900:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   13904:	bf34      	ite	cc
   13906:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   1390a:	6563      	strcs	r3, [r4, #84]	; 0x54
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1390c:	233f      	movs	r3, #63	; 0x3f
   1390e:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   13912:	23ff      	movs	r3, #255	; 0xff
   13914:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13918:	f001 f81e 	bl	14958 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   1391c:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13920:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   13922:	f040 809c 	bne.w	13a5e <f_mkfs+0x3b2>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13926:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13928:	2213      	movs	r2, #19
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1392a:	65a3      	str	r3, [r4, #88]	; 0x58
   1392c:	2302      	movs	r3, #2
   1392e:	6623      	str	r3, [r4, #96]	; 0x60
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13930:	2301      	movs	r3, #1
   13932:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   13936:	2306      	movs	r3, #6
   13938:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   1393c:	2380      	movs	r3, #128	; 0x80
   1393e:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13942:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13944:	4992      	ldr	r1, [pc, #584]	; (13b90 <f_mkfs+0x4e4>)
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13946:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1394a:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   1394e:	f104 007b 	add.w	r0, r4, #123	; 0x7b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13952:	f7fe f8d1 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13956:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   1395a:	4652      	mov	r2, sl
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1395c:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   13960:	4631      	mov	r1, r6
   13962:	2301      	movs	r3, #1
   13964:	4638      	mov	r0, r7
   13966:	f000 fd3c 	bl	143e2 <disk_write>
   1396a:	2800      	cmp	r0, #0
   1396c:	f47f aecd 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   13970:	f1b8 0f03 	cmp.w	r8, #3
   13974:	d106      	bne.n	13984 <f_mkfs+0x2d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   13976:	2301      	movs	r3, #1
   13978:	f10a 0206 	add.w	r2, sl, #6
   1397c:	4631      	mov	r1, r6
   1397e:	4638      	mov	r0, r7
   13980:	f000 fd2f 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   13984:	f44f 7200 	mov.w	r2, #512	; 0x200
   13988:	2100      	movs	r1, #0
   1398a:	4630      	mov	r0, r6
   1398c:	f7fe f8d0 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   13990:	f1b8 0f03 	cmp.w	r8, #3
   13994:	d074      	beq.n	13a80 <f_mkfs+0x3d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   13996:	f1b8 0f01 	cmp.w	r8, #1
   1399a:	4b7e      	ldr	r3, [pc, #504]	; (13b94 <f_mkfs+0x4e8>)
   1399c:	bf18      	it	ne
   1399e:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   139a2:	ea43 0309 	orr.w	r3, r3, r9
   139a6:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   139a8:	6363      	str	r3, [r4, #52]	; 0x34
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   139aa:	9b01      	ldr	r3, [sp, #4]
   139ac:	4631      	mov	r1, r6
   139ae:	f103 0901 	add.w	r9, r3, #1
   139b2:	9a01      	ldr	r2, [sp, #4]
   139b4:	2301      	movs	r3, #1
   139b6:	4638      	mov	r0, r7
   139b8:	f000 fd13 	bl	143e2 <disk_write>
   139bc:	4601      	mov	r1, r0
   139be:	2800      	cmp	r0, #0
   139c0:	f47f aea3 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   139c4:	f44f 7200 	mov.w	r2, #512	; 0x200
   139c8:	4630      	mov	r0, r6
   139ca:	f7fe f8b1 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   139ce:	2301      	movs	r3, #1
   139d0:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   139d2:	9b06      	ldr	r3, [sp, #24]
   139d4:	9a00      	ldr	r2, [sp, #0]
   139d6:	429a      	cmp	r2, r3
   139d8:	d85d      	bhi.n	13a96 <f_mkfs+0x3ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   139da:	9b03      	ldr	r3, [sp, #12]
   139dc:	464a      	mov	r2, r9
   139de:	f1b8 0f03 	cmp.w	r8, #3
   139e2:	bf18      	it	ne
   139e4:	461d      	movne	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   139e6:	444d      	add	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   139e8:	2301      	movs	r3, #1
   139ea:	4631      	mov	r1, r6
   139ec:	4638      	mov	r0, r7
   139ee:	f102 0b01 	add.w	fp, r2, #1
   139f2:	f000 fcf6 	bl	143e2 <disk_write>
   139f6:	2800      	cmp	r0, #0
   139f8:	f47f ae87 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   139fc:	45ab      	cmp	fp, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   139fe:	465a      	mov	r2, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   13a00:	d1f2      	bne.n	139e8 <f_mkfs+0x33c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   13a02:	f1b8 0f03 	cmp.w	r8, #3
   13a06:	d121      	bne.n	13a4c <f_mkfs+0x3a0>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a08:	4b63      	ldr	r3, [pc, #396]	; (13b98 <f_mkfs+0x4ec>)
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a0a:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a0c:	6363      	str	r3, [r4, #52]	; 0x34
   13a0e:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   13a12:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   13a16:	3320      	adds	r3, #32
   13a18:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13a1c:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a1e:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13a20:	3b01      	subs	r3, #1
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a22:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   13a26:	2302      	movs	r3, #2
   13a28:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13a2c:	f64a 2355 	movw	r3, #43605	; 0xaa55
   13a30:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13a34:	2301      	movs	r3, #1
   13a36:	eb0a 0203 	add.w	r2, sl, r3
   13a3a:	f000 fcd2 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   13a3e:	2301      	movs	r3, #1
   13a40:	f10a 0207 	add.w	r2, sl, #7
   13a44:	4631      	mov	r1, r6
   13a46:	4638      	mov	r0, r7
   13a48:	f000 fccb 	bl	143e2 <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   13a4c:	2200      	movs	r2, #0
   13a4e:	4638      	mov	r0, r7
   13a50:	4611      	mov	r1, r2
   13a52:	f000 fce2 	bl	1441a <disk_ioctl>
   13a56:	3000      	adds	r0, #0
   13a58:	bf18      	it	ne
   13a5a:	2001      	movne	r0, #1
   13a5c:	e656      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   13a5e:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13a62:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   13a66:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   13a6a:	2380      	movs	r3, #128	; 0x80
   13a6c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13a70:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13a72:	2213      	movs	r2, #19
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13a74:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13a78:	4948      	ldr	r1, [pc, #288]	; (13b9c <f_mkfs+0x4f0>)
   13a7a:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   13a7e:	e768      	b.n	13952 <f_mkfs+0x2a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   13a80:	f069 03ff 	orn	r3, r9, #255	; 0xff
   13a84:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a86:	6363      	str	r3, [r4, #52]	; 0x34
   13a88:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13a8c:	63a3      	str	r3, [r4, #56]	; 0x38
   13a8e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   13a92:	63e3      	str	r3, [r4, #60]	; 0x3c
   13a94:	e789      	b.n	139aa <f_mkfs+0x2fe>
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   13a96:	2301      	movs	r3, #1
   13a98:	464a      	mov	r2, r9
   13a9a:	4631      	mov	r1, r6
   13a9c:	4638      	mov	r0, r7
   13a9e:	f109 0b01 	add.w	fp, r9, #1
   13aa2:	f000 fc9e 	bl	143e2 <disk_write>
   13aa6:	2800      	cmp	r0, #0
   13aa8:	f47f ae2f 	bne.w	1370a <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13aac:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   13aae:	46d9      	mov	r9, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13ab0:	3301      	adds	r3, #1
   13ab2:	9306      	str	r3, [sp, #24]
   13ab4:	e78d      	b.n	139d2 <f_mkfs+0x326>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   13ab6:	200b      	movs	r0, #11
   13ab8:	e628      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13aba:	2013      	movs	r0, #19
   13abc:	e626      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   13abe:	200c      	movs	r0, #12
   13ac0:	e624      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   13ac2:	2003      	movs	r0, #3
   13ac4:	e622      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13ac6:	200a      	movs	r0, #10
   13ac8:	e620      	b.n	1370c <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   13aca:	009b      	lsls	r3, r3, #2
   13acc:	f203 2307 	addw	r3, r3, #519	; 0x207
   13ad0:	0a5b      	lsrs	r3, r3, #9
   13ad2:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13ad4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13ad6:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13ada:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   13adc:	f04f 0b20 	mov.w	fp, #32
   13ae0:	e043      	b.n	13b6a <f_mkfs+0x4be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13ae2:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13ae6:	f44f 7200 	mov.w	r2, #512	; 0x200
   13aea:	2100      	movs	r1, #0
   13aec:	4630      	mov	r0, r6
   13aee:	f7fe f81f 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13af2:	220b      	movs	r2, #11
   13af4:	4925      	ldr	r1, [pc, #148]	; (13b8c <f_mkfs+0x4e0>)
   13af6:	4630      	mov	r0, r6
   13af8:	f7fd fffe 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13afc:	f44f 7300 	mov.w	r3, #512	; 0x200
   13b00:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b04:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13b06:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13b0a:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b0e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13b12:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13b16:	e6ea      	b.n	138ee <f_mkfs+0x242>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13b18:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13b1c:	f44f 7200 	mov.w	r2, #512	; 0x200
   13b20:	2100      	movs	r1, #0
   13b22:	4630      	mov	r0, r6
   13b24:	f7fe f804 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13b28:	220b      	movs	r2, #11
   13b2a:	4918      	ldr	r1, [pc, #96]	; (13b8c <f_mkfs+0x4e0>)
   13b2c:	4630      	mov	r0, r6
   13b2e:	f7fd ffe3 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13b32:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13b36:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13b3a:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13b3e:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13b42:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13b46:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13b4a:	e6cf      	b.n	138ec <f_mkfs+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   13b4c:	f04f 0801 	mov.w	r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13b50:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   13b54:	3301      	adds	r3, #1
   13b56:	085b      	lsrs	r3, r3, #1
   13b58:	3303      	adds	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   13b5a:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   13b5e:	0a5b      	lsrs	r3, r3, #9
   13b60:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13b62:	2320      	movs	r3, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   13b64:	f04f 0b01 	mov.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13b68:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   13b6a:	eb0b 030a 	add.w	r3, fp, sl
   13b6e:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   13b70:	9a03      	ldr	r2, [sp, #12]
   13b72:	9b00      	ldr	r3, [sp, #0]
   13b74:	eb03 0902 	add.w	r9, r3, r2
   13b78:	9b01      	ldr	r3, [sp, #4]
   13b7a:	4499      	add	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   13b7c:	eba5 030a 	sub.w	r3, r5, sl
   13b80:	444b      	add	r3, r9
   13b82:	4299      	cmp	r1, r3
   13b84:	f4bf adf8 	bcs.w	13778 <f_mkfs+0xcc>
   13b88:	200e      	movs	r0, #14
   13b8a:	e5bf      	b.n	1370c <f_mkfs+0x60>
   13b8c:	00024f40 	.word	0x00024f40
   13b90:	00024f4c 	.word	0x00024f4c
   13b94:	00ffff00 	.word	0x00ffff00
   13b98:	41615252 	.word	0x41615252
   13b9c:	00024f60 	.word	0x00024f60

00013ba0 <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   13ba0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13ba2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   13ba4:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13ba6:	f005 f86d 	bl	18c84 <xQueueCreateMutex>
   13baa:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   13bac:	3000      	adds	r0, #0
   13bae:	bf18      	it	ne
   13bb0:	2001      	movne	r0, #1
   13bb2:	bd10      	pop	{r4, pc}

00013bb4 <ff_del_syncobj>:
ff_del_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   13bb4:	2001      	movs	r0, #1
   13bb6:	4770      	bx	lr

00013bb8 <ff_req_grant>:
ff_req_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   13bb8:	b510      	push	{r4, lr}
   13bba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13bbc:	f005 fedc 	bl	19978 <xTaskGetSchedulerState>
   13bc0:	2802      	cmp	r0, #2
   13bc2:	d10a      	bne.n	13bda <ff_req_grant+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   13bc4:	2300      	movs	r3, #0
   13bc6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13bca:	4619      	mov	r1, r3
   13bcc:	4620      	mov	r0, r4
   13bce:	f005 f8df 	bl	18d90 <xQueueGenericReceive>
   13bd2:	1e43      	subs	r3, r0, #1
   13bd4:	4258      	negs	r0, r3
   13bd6:	4158      	adcs	r0, r3
   13bd8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   13bda:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   13bdc:	bd10      	pop	{r4, pc}

00013bde <ff_rel_grant>:
ff_rel_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   13bde:	b510      	push	{r4, lr}
   13be0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13be2:	f005 fec9 	bl	19978 <xTaskGetSchedulerState>
   13be6:	2802      	cmp	r0, #2
   13be8:	d107      	bne.n	13bfa <ff_rel_grant+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13bea:	2300      	movs	r3, #0
   13bec:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   13bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13bf2:	461a      	mov	r2, r3
   13bf4:	4619      	mov	r1, r3
   13bf6:	f004 bfc3 	b.w	18b80 <xQueueGenericSend>
   13bfa:	bd10      	pop	{r4, pc}

00013bfc <ff_convert>:
ff_convert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   13bfc:	287f      	cmp	r0, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   13bfe:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   13c00:	d916      	bls.n	13c30 <ff_convert+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   13c02:	b131      	cbz	r1, 13c12 <ff_convert+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13c04:	28ff      	cmp	r0, #255	; 0xff
   13c06:	d812      	bhi.n	13c2e <ff_convert+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   13c08:	4b0a      	ldr	r3, [pc, #40]	; (13c34 <ff_convert+0x38>)
   13c0a:	3880      	subs	r0, #128	; 0x80
   13c0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   13c10:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   13c12:	4a08      	ldr	r2, [pc, #32]	; (13c34 <ff_convert+0x38>)
   13c14:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   13c18:	b28b      	uxth	r3, r1
   13c1a:	4284      	cmp	r4, r0
   13c1c:	d003      	beq.n	13c26 <ff_convert+0x2a>
   13c1e:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   13c20:	2980      	cmp	r1, #128	; 0x80
   13c22:	d1f7      	bne.n	13c14 <ff_convert+0x18>
   13c24:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   13c26:	f103 0080 	add.w	r0, r3, #128	; 0x80
   13c2a:	b2c0      	uxtb	r0, r0
   13c2c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13c2e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   13c30:	bd10      	pop	{r4, pc}
   13c32:	bf00      	nop
   13c34:	00024f9a 	.word	0x00024f9a

00013c38 <ff_wtoupper>:
ff_wtoupper():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13c38:	2300      	movs	r3, #0
   13c3a:	4906      	ldr	r1, [pc, #24]	; (13c54 <ff_wtoupper+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   13c3c:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   13c40:	b122      	cbz	r2, 13c4c <ff_wtoupper+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   13c42:	4282      	cmp	r2, r0
   13c44:	d103      	bne.n	13c4e <ff_wtoupper+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   13c46:	4a04      	ldr	r2, [pc, #16]	; (13c58 <ff_wtoupper+0x20>)
   13c48:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   13c4c:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13c4e:	3301      	adds	r3, #1
   13c50:	e7f4      	b.n	13c3c <ff_wtoupper+0x4>
   13c52:	bf00      	nop
   13c54:	0002509a 	.word	0x0002509a
   13c58:	0002527a 	.word	0x0002527a

00013c5c <sys_get_uptime_ms>:
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   13c5c:	b508      	push	{r3, lr}
   13c5e:	f7fc fc1d 	bl	1049c <sys_get_uptime_us>
   13c62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13c66:	2300      	movs	r3, #0
   13c68:	f009 fd08 	bl	1d67c <__aeabi_uldivmod>
   13c6c:	bd08      	pop	{r3, pc}
   13c6e:	Address 0x0000000000013c6e is out of bounds.


00013c70 <ssp1_set_max_clock>:
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   13c70:	b510      	push	{r4, lr}
   13c72:	4604      	mov	r4, r0
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   13c74:	f7fc fda0 	bl	107b8 <sys_get_cpu_clock>
   13c78:	4b07      	ldr	r3, [pc, #28]	; (13c98 <ssp1_set_max_clock+0x28>)
   13c7a:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   13c7e:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13c80:	fbb0 f2f3 	udiv	r2, r0, r3
   13c84:	4294      	cmp	r4, r2
   13c86:	d302      	bcc.n	13c8e <ssp1_set_max_clock+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   13c88:	4a04      	ldr	r2, [pc, #16]	; (13c9c <ssp1_set_max_clock+0x2c>)
   13c8a:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   13c8c:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13c8e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   13c92:	d0f9      	beq.n	13c88 <ssp1_set_max_clock+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   13c94:	3302      	adds	r3, #2
   13c96:	e7f3      	b.n	13c80 <ssp1_set_max_clock+0x10>
   13c98:	000f4240 	.word	0x000f4240
   13c9c:	40030000 	.word	0x40030000

00013ca0 <ssp1_exchange_byte>:
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13ca0:	4b03      	ldr	r3, [pc, #12]	; (13cb0 <ssp1_exchange_byte+0x10>)
   13ca2:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13ca4:	68da      	ldr	r2, [r3, #12]
   13ca6:	06d2      	lsls	r2, r2, #27
   13ca8:	d4fc      	bmi.n	13ca4 <ssp1_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13caa:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   13cac:	b2c0      	uxtb	r0, r0
   13cae:	4770      	bx	lr
   13cb0:	40030000 	.word	0x40030000

00013cb4 <wait_ready>:
wait_ready():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   13cb4:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   13cb6:	f7ff ffd1 	bl	13c5c <sys_get_uptime_ms>
   13cba:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   13cbe:	20ff      	movs	r0, #255	; 0xff
   13cc0:	f7ff ffee 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13cc4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13cc6:	20ff      	movs	r0, #255	; 0xff
   13cc8:	f7ff ffea 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13ccc:	28ff      	cmp	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13cce:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13cd0:	d005      	beq.n	13cde <wait_ready+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   13cd2:	f7ff ffc3 	bl	13c5c <sys_get_uptime_ms>
   13cd6:	42a9      	cmp	r1, r5
   13cd8:	bf08      	it	eq
   13cda:	42a0      	cmpeq	r0, r4
   13cdc:	d3f3      	bcc.n	13cc6 <wait_ready+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   13cde:	4630      	mov	r0, r6
   13ce0:	bd70      	pop	{r4, r5, r6, pc}
   13ce2:	Address 0x0000000000013ce2 is out of bounds.


00013ce4 <power_off>:
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   13ce4:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13ce6:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   13cea:	4c05      	ldr	r4, [pc, #20]	; (13d00 <power_off+0x1c>)
   13cec:	61e5      	str	r5, [r4, #28]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   13cee:	f7ff ffe1 	bl	13cb4 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   13cf2:	4a04      	ldr	r2, [pc, #16]	; (13d04 <power_off+0x20>)
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13cf4:	61a5      	str	r5, [r4, #24]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   13cf6:	7813      	ldrb	r3, [r2, #0]
   13cf8:	f043 0301 	orr.w	r3, r3, #1
   13cfc:	7013      	strb	r3, [r2, #0]
   13cfe:	bd38      	pop	{r3, r4, r5, pc}
   13d00:	2009c020 	.word	0x2009c020
   13d04:	2007c095 	.word	0x2007c095

00013d08 <rcvr_datablock>:
rcvr_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   13d08:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   13d0c:	4606      	mov	r6, r0
   13d0e:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   13d10:	f7ff ffa4 	bl	13c5c <sys_get_uptime_ms>
   13d14:	3064      	adds	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13d16:	4680      	mov	r8, r0
   13d18:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   13d1c:	20ff      	movs	r0, #255	; 0xff
   13d1e:	f7ff ffbf 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13d22:	28ff      	cmp	r0, #255	; 0xff
   13d24:	d108      	bne.n	13d38 <rcvr_datablock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   13d26:	f7ff ff99 	bl	13c5c <sys_get_uptime_ms>
   13d2a:	4549      	cmp	r1, r9
   13d2c:	bf08      	it	eq
   13d2e:	4540      	cmpeq	r0, r8
   13d30:	d3f4      	bcc.n	13d1c <rcvr_datablock+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   13d32:	2000      	movs	r0, #0
   13d34:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   13d38:	28fe      	cmp	r0, #254	; 0xfe
   13d3a:	d1fa      	bne.n	13d32 <rcvr_datablock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13d3c:	2d10      	cmp	r5, #16
   13d3e:	d90e      	bls.n	13d5e <rcvr_datablock+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   13d40:	2200      	movs	r2, #0
   13d42:	f44f 7100 	mov.w	r1, #512	; 0x200
   13d46:	4630      	mov	r0, r6
   13d48:	f004 fb10 	bl	1836c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   13d4c:	20ff      	movs	r0, #255	; 0xff
   13d4e:	f7ff ffa7 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   13d52:	20ff      	movs	r0, #255	; 0xff
   13d54:	f7ff ffa4 	bl	13ca0 <ssp1_exchange_byte>
   13d58:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   13d5a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   13d5e:	1d34      	adds	r4, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13d60:	3504      	adds	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   13d62:	20ff      	movs	r0, #255	; 0xff
   13d64:	f7ff ff9c 	bl	13ca0 <ssp1_exchange_byte>
   13d68:	f804 0c04 	strb.w	r0, [r4, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   13d6c:	20ff      	movs	r0, #255	; 0xff
   13d6e:	f7ff ff97 	bl	13ca0 <ssp1_exchange_byte>
   13d72:	f804 0c03 	strb.w	r0, [r4, #-3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   13d76:	20ff      	movs	r0, #255	; 0xff
   13d78:	f7ff ff92 	bl	13ca0 <ssp1_exchange_byte>
   13d7c:	f804 0c02 	strb.w	r0, [r4, #-2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   13d80:	20ff      	movs	r0, #255	; 0xff
   13d82:	f7ff ff8d 	bl	13ca0 <ssp1_exchange_byte>
   13d86:	3404      	adds	r4, #4
   13d88:	f804 0c05 	strb.w	r0, [r4, #-5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13d8c:	1b2b      	subs	r3, r5, r4
   13d8e:	42de      	cmn	r6, r3
   13d90:	d1e7      	bne.n	13d62 <rcvr_datablock+0x5a>
   13d92:	e7db      	b.n	13d4c <rcvr_datablock+0x44>

00013d94 <xmit_datablock>:
xmit_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   13d94:	b570      	push	{r4, r5, r6, lr}
   13d96:	4606      	mov	r6, r0
   13d98:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   13d9a:	f7ff ff8b 	bl	13cb4 <wait_ready>
   13d9e:	28ff      	cmp	r0, #255	; 0xff
   13da0:	4604      	mov	r4, r0
   13da2:	d119      	bne.n	13dd8 <xmit_datablock+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   13da4:	4628      	mov	r0, r5
   13da6:	f7ff ff7b 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   13daa:	2dfd      	cmp	r5, #253	; 0xfd
   13dac:	d016      	beq.n	13ddc <xmit_datablock+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   13dae:	4622      	mov	r2, r4
   13db0:	f44f 7100 	mov.w	r1, #512	; 0x200
   13db4:	4630      	mov	r0, r6
   13db6:	f004 fad9 	bl	1836c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   13dba:	4620      	mov	r0, r4
   13dbc:	f7ff ff70 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   13dc0:	4620      	mov	r0, r4
   13dc2:	f7ff ff6d 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   13dc6:	4620      	mov	r0, r4
   13dc8:	f7ff ff6a 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13dcc:	f000 001f 	and.w	r0, r0, #31
   13dd0:	1f43      	subs	r3, r0, #5
   13dd2:	4258      	negs	r0, r3
   13dd4:	4158      	adcs	r0, r3
   13dd6:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   13dd8:	2000      	movs	r0, #0
   13dda:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   13ddc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   13dde:	bd70      	pop	{r4, r5, r6, pc}

00013de0 <send_cmd>:
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   13de0:	0602      	lsls	r2, r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   13de2:	b538      	push	{r3, r4, r5, lr}
   13de4:	4604      	mov	r4, r0
   13de6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   13de8:	d507      	bpl.n	13dfa <send_cmd+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   13dea:	2100      	movs	r1, #0
   13dec:	2077      	movs	r0, #119	; 0x77
   13dee:	f7ff fff7 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   13df2:	2801      	cmp	r0, #1
   13df4:	d836      	bhi.n	13e64 <send_cmd+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   13df6:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13dfa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13dfe:	4b1a      	ldr	r3, [pc, #104]	; (13e68 <send_cmd+0x88>)
   13e00:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13e02:	61da      	str	r2, [r3, #28]
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   13e04:	f7ff ff56 	bl	13cb4 <wait_ready>
   13e08:	28ff      	cmp	r0, #255	; 0xff
   13e0a:	d12a      	bne.n	13e62 <send_cmd+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   13e0c:	4620      	mov	r0, r4
   13e0e:	f7ff ff47 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   13e12:	0e28      	lsrs	r0, r5, #24
   13e14:	f7ff ff44 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   13e18:	f3c5 4007 	ubfx	r0, r5, #16, #8
   13e1c:	f7ff ff40 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   13e20:	f3c5 2007 	ubfx	r0, r5, #8, #8
   13e24:	f7ff ff3c 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   13e28:	b2e8      	uxtb	r0, r5
   13e2a:	f7ff ff39 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   13e2e:	2c40      	cmp	r4, #64	; 0x40
   13e30:	d015      	beq.n	13e5e <send_cmd+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   13e32:	2c48      	cmp	r4, #72	; 0x48
   13e34:	bf14      	ite	ne
   13e36:	2001      	movne	r0, #1
   13e38:	2087      	moveq	r0, #135	; 0x87
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   13e3a:	f7ff ff31 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   13e3e:	2c4c      	cmp	r4, #76	; 0x4c
   13e40:	d102      	bne.n	13e48 <send_cmd+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   13e42:	20ff      	movs	r0, #255	; 0xff
   13e44:	f7ff ff2c 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   13e48:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   13e4a:	20ff      	movs	r0, #255	; 0xff
   13e4c:	f7ff ff28 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   13e50:	0603      	lsls	r3, r0, #24
   13e52:	d507      	bpl.n	13e64 <send_cmd+0x84>
   13e54:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   13e56:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   13e5a:	d1f6      	bne.n	13e4a <send_cmd+0x6a>
   13e5c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   13e5e:	2095      	movs	r0, #149	; 0x95
   13e60:	e7eb      	b.n	13e3a <send_cmd+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   13e62:	20ff      	movs	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   13e64:	bd38      	pop	{r3, r4, r5, pc}
   13e66:	bf00      	nop
   13e68:	2009c020 	.word	0x2009c020

00013e6c <sd_update_card_status>:
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   13e6c:	4a06      	ldr	r2, [pc, #24]	; (13e88 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13e6e:	4907      	ldr	r1, [pc, #28]	; (13e8c <sd_update_card_status+0x20>)
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13e70:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13e72:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13e74:	b2db      	uxtb	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   13e76:	0149      	lsls	r1, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   13e78:	bf54      	ite	pl
   13e7a:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   13e7e:	f043 0303 	orrmi.w	r3, r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   13e82:	7013      	strb	r3, [r2, #0]
   13e84:	4770      	bx	lr
   13e86:	bf00      	nop
   13e88:	2007c095 	.word	0x2007c095
   13e8c:	2009c020 	.word	0x2009c020

00013e90 <sd_initialize>:
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   13e90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   13e94:	f7ff ffea 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   13e98:	4b55      	ldr	r3, [pc, #340]	; (13ff0 <sd_initialize+0x160>)
   13e9a:	781a      	ldrb	r2, [r3, #0]
   13e9c:	461e      	mov	r6, r3
   13e9e:	f012 0f02 	tst.w	r2, #2
   13ea2:	d004      	beq.n	13eae <sd_initialize+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   13ea4:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13ea6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   13ea8:	b003      	add	sp, #12
   13eaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   13eae:	2001      	movs	r0, #1
   13eb0:	f7ff fede 	bl	13c70 <ssp1_set_max_clock>
   13eb4:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   13eb6:	20ff      	movs	r0, #255	; 0xff
   13eb8:	3c01      	subs	r4, #1
   13eba:	f7ff fef1 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   13ebe:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   13ec2:	d1f8      	bne.n	13eb6 <sd_initialize+0x26>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13ec4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13ec8:	4f4a      	ldr	r7, [pc, #296]	; (13ff4 <sd_initialize+0x164>)
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   13eca:	4621      	mov	r1, r4
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   13ecc:	61fb      	str	r3, [r7, #28]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   13ece:	2040      	movs	r0, #64	; 0x40
   13ed0:	f7ff ff86 	bl	13de0 <send_cmd>
   13ed4:	2801      	cmp	r0, #1
   13ed6:	4680      	mov	r8, r0
   13ed8:	d013      	beq.n	13f02 <sd_initialize+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   13eda:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   13ede:	4b46      	ldr	r3, [pc, #280]	; (13ff8 <sd_initialize+0x168>)
   13ee0:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13ee4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13ee8:	61bb      	str	r3, [r7, #24]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   13eea:	f1b8 0f00 	cmp.w	r8, #0
   13eee:	d07b      	beq.n	13fe8 <sd_initialize+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13ef0:	7833      	ldrb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13ef2:	2018      	movs	r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13ef4:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   13ef8:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13efa:	f7ff feb9 	bl	13c70 <ssp1_set_max_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13efe:	7830      	ldrb	r0, [r6, #0]
   13f00:	e7d1      	b.n	13ea6 <sd_initialize+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13f02:	f7ff feab 	bl	13c5c <sys_get_uptime_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13f06:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13f0a:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13f0e:	2048      	movs	r0, #72	; 0x48
   13f10:	f7ff ff66 	bl	13de0 <send_cmd>
   13f14:	2801      	cmp	r0, #1
   13f16:	d140      	bne.n	13f9a <sd_initialize+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   13f18:	f10d 0804 	add.w	r8, sp, #4
   13f1c:	20ff      	movs	r0, #255	; 0xff
   13f1e:	f7ff febf 	bl	13ca0 <ssp1_exchange_byte>
   13f22:	f808 0004 	strb.w	r0, [r8, r4]
   13f26:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   13f28:	2c04      	cmp	r4, #4
   13f2a:	d1f7      	bne.n	13f1c <sd_initialize+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   13f2c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   13f30:	2b01      	cmp	r3, #1
   13f32:	d1d2      	bne.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   13f34:	f89d 3007 	ldrb.w	r3, [sp, #7]
   13f38:	2baa      	cmp	r3, #170	; 0xaa
   13f3a:	d1ce      	bne.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   13f3c:	462c      	mov	r4, r5
   13f3e:	2500      	movs	r5, #0
   13f40:	f7ff fe8c 	bl	13c5c <sys_get_uptime_ms>
   13f44:	42a9      	cmp	r1, r5
   13f46:	bf08      	it	eq
   13f48:	42a0      	cmpeq	r0, r4
   13f4a:	d31e      	bcc.n	13f8a <sd_initialize+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   13f4c:	f7ff fe86 	bl	13c5c <sys_get_uptime_ms>
   13f50:	42a9      	cmp	r1, r5
   13f52:	bf08      	it	eq
   13f54:	42a0      	cmpeq	r0, r4
   13f56:	d2c0      	bcs.n	13eda <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   13f58:	2100      	movs	r1, #0
   13f5a:	207a      	movs	r0, #122	; 0x7a
   13f5c:	f7ff ff40 	bl	13de0 <send_cmd>
   13f60:	2800      	cmp	r0, #0
   13f62:	d1ba      	bne.n	13eda <sd_initialize+0x4a>
   13f64:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   13f66:	20ff      	movs	r0, #255	; 0xff
   13f68:	f7ff fe9a 	bl	13ca0 <ssp1_exchange_byte>
   13f6c:	f808 0001 	strb.w	r0, [r8, r1]
   13f70:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   13f72:	2904      	cmp	r1, #4
   13f74:	d1f7      	bne.n	13f66 <sd_initialize+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   13f76:	f89d 3004 	ldrb.w	r3, [sp, #4]
   13f7a:	f013 0f40 	tst.w	r3, #64	; 0x40
   13f7e:	bf14      	ite	ne
   13f80:	f04f 080c 	movne.w	r8, #12
   13f84:	f04f 0804 	moveq.w	r8, #4
   13f88:	e7a9      	b.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   13f8a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   13f8e:	20e9      	movs	r0, #233	; 0xe9
   13f90:	f7ff ff26 	bl	13de0 <send_cmd>
   13f94:	2800      	cmp	r0, #0
   13f96:	d1d3      	bne.n	13f40 <sd_initialize+0xb0>
   13f98:	e7d8      	b.n	13f4c <sd_initialize+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   13f9a:	4621      	mov	r1, r4
   13f9c:	20e9      	movs	r0, #233	; 0xe9
   13f9e:	f7ff ff1f 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   13fa2:	2802      	cmp	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fa4:	462c      	mov	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   13fa6:	bf36      	itet	cc
   13fa8:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   13fac:	f04f 0941 	movcs.w	r9, #65	; 0x41
   13fb0:	f04f 0802 	movcc.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fb4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   13fb6:	f7ff fe51 	bl	13c5c <sys_get_uptime_ms>
   13fba:	42a9      	cmp	r1, r5
   13fbc:	bf08      	it	eq
   13fbe:	42a0      	cmpeq	r0, r4
   13fc0:	d30b      	bcc.n	13fda <sd_initialize+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   13fc2:	f7ff fe4b 	bl	13c5c <sys_get_uptime_ms>
   13fc6:	42a9      	cmp	r1, r5
   13fc8:	bf08      	it	eq
   13fca:	42a0      	cmpeq	r0, r4
   13fcc:	d387      	bcc.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   13fce:	f44f 7100 	mov.w	r1, #512	; 0x200
   13fd2:	2050      	movs	r0, #80	; 0x50
   13fd4:	f7ff ff04 	bl	13de0 <send_cmd>
   13fd8:	e781      	b.n	13ede <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13fda:	2100      	movs	r1, #0
   13fdc:	4648      	mov	r0, r9
   13fde:	f7ff feff 	bl	13de0 <send_cmd>
   13fe2:	2800      	cmp	r0, #0
   13fe4:	d1e7      	bne.n	13fb6 <sd_initialize+0x126>
   13fe6:	e7ec      	b.n	13fc2 <sd_initialize+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   13fe8:	f7ff fe7c 	bl	13ce4 <power_off>
   13fec:	e787      	b.n	13efe <sd_initialize+0x6e>
   13fee:	bf00      	nop
   13ff0:	2007c095 	.word	0x2007c095
   13ff4:	2009c020 	.word	0x2009c020
   13ff8:	2007c466 	.word	0x2007c466

00013ffc <sd_status>:
sd_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   13ffc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   13ffe:	f7ff ff35 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   14002:	4b01      	ldr	r3, [pc, #4]	; (14008 <sd_status+0xc>)
   14004:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   14006:	bd08      	pop	{r3, pc}
   14008:	2007c095 	.word	0x2007c095

0001400c <sd_read>:
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   1400c:	b570      	push	{r4, r5, r6, lr}
   1400e:	4614      	mov	r4, r2
   14010:	4606      	mov	r6, r0
   14012:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   14014:	f7ff ff2a 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   14018:	2c00      	cmp	r4, #0
   1401a:	d038      	beq.n	1408e <sd_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   1401c:	4b1e      	ldr	r3, [pc, #120]	; (14098 <sd_read+0x8c>)
   1401e:	781b      	ldrb	r3, [r3, #0]
   14020:	07da      	lsls	r2, r3, #31
   14022:	d436      	bmi.n	14092 <sd_read+0x86>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   14024:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   14028:	4d1c      	ldr	r5, [pc, #112]	; (1409c <sd_read+0x90>)
   1402a:	61ea      	str	r2, [r5, #28]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   1402c:	4a1c      	ldr	r2, [pc, #112]	; (140a0 <sd_read+0x94>)
   1402e:	7812      	ldrb	r2, [r2, #0]
   14030:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   14032:	bf58      	it	pl
   14034:	0240      	lslpl	r0, r0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   14036:	2c01      	cmp	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   14038:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   1403a:	d112      	bne.n	14062 <sd_read+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   1403c:	2051      	movs	r0, #81	; 0x51
   1403e:	f7ff fecf 	bl	13de0 <send_cmd>
   14042:	b938      	cbnz	r0, 14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   14044:	f44f 7100 	mov.w	r1, #512	; 0x200
   14048:	4630      	mov	r0, r6
   1404a:	f7ff fe5d 	bl	13d08 <rcvr_datablock>
   1404e:	fab0 f480 	clz	r4, r0
   14052:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   14054:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   14058:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   1405a:	61ab      	str	r3, [r5, #24]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   1405c:	bf18      	it	ne
   1405e:	2001      	movne	r0, #1
   14060:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   14062:	2052      	movs	r0, #82	; 0x52
   14064:	f7ff febc 	bl	13de0 <send_cmd>
   14068:	2800      	cmp	r0, #0
   1406a:	d1f3      	bne.n	14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   1406c:	f44f 7100 	mov.w	r1, #512	; 0x200
   14070:	4630      	mov	r0, r6
   14072:	f7ff fe49 	bl	13d08 <rcvr_datablock>
   14076:	b128      	cbz	r0, 14084 <sd_read+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   14078:	3c01      	subs	r4, #1
   1407a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   1407e:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   14082:	d1f3      	bne.n	1406c <sd_read+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   14084:	2100      	movs	r1, #0
   14086:	204c      	movs	r0, #76	; 0x4c
   14088:	f7ff feaa 	bl	13de0 <send_cmd>
   1408c:	e7e2      	b.n	14054 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   1408e:	2004      	movs	r0, #4
   14090:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   14092:	2003      	movs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   14094:	bd70      	pop	{r4, r5, r6, pc}
   14096:	bf00      	nop
   14098:	2007c095 	.word	0x2007c095
   1409c:	2009c020 	.word	0x2009c020
   140a0:	2007c466 	.word	0x2007c466

000140a4 <sd_write>:
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   140a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   140a6:	4614      	mov	r4, r2
   140a8:	4606      	mov	r6, r0
   140aa:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   140ac:	f7ff fede 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   140b0:	2c00      	cmp	r4, #0
   140b2:	d044      	beq.n	1413e <sd_write+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   140b4:	4b25      	ldr	r3, [pc, #148]	; (1414c <sd_write+0xa8>)
   140b6:	781a      	ldrb	r2, [r3, #0]
   140b8:	07d1      	lsls	r1, r2, #31
   140ba:	d442      	bmi.n	14142 <sd_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   140bc:	781b      	ldrb	r3, [r3, #0]
   140be:	075a      	lsls	r2, r3, #29
   140c0:	d441      	bmi.n	14146 <sd_write+0xa2>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   140c2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   140c6:	4d22      	ldr	r5, [pc, #136]	; (14150 <sd_write+0xac>)
   140c8:	61ea      	str	r2, [r5, #28]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   140ca:	4a22      	ldr	r2, [pc, #136]	; (14154 <sd_write+0xb0>)
   140cc:	7812      	ldrb	r2, [r2, #0]
   140ce:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   140d0:	bf58      	it	pl
   140d2:	027f      	lslpl	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   140d4:	2c01      	cmp	r4, #1
   140d6:	d112      	bne.n	140fe <sd_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   140d8:	4639      	mov	r1, r7
   140da:	2058      	movs	r0, #88	; 0x58
   140dc:	f7ff fe80 	bl	13de0 <send_cmd>
   140e0:	bb58      	cbnz	r0, 1413a <sd_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   140e2:	21fe      	movs	r1, #254	; 0xfe
   140e4:	4630      	mov	r0, r6
   140e6:	f7ff fe55 	bl	13d94 <xmit_datablock>
   140ea:	fab0 f480 	clz	r4, r0
   140ee:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   140f0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   140f4:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   140f6:	61ab      	str	r3, [r5, #24]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   140f8:	bf18      	it	ne
   140fa:	2001      	movne	r0, #1
   140fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   140fe:	f012 0f06 	tst.w	r2, #6
   14102:	d003      	beq.n	1410c <sd_write+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   14104:	4621      	mov	r1, r4
   14106:	20d7      	movs	r0, #215	; 0xd7
   14108:	f7ff fe6a 	bl	13de0 <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   1410c:	4639      	mov	r1, r7
   1410e:	2059      	movs	r0, #89	; 0x59
   14110:	f7ff fe66 	bl	13de0 <send_cmd>
   14114:	2800      	cmp	r0, #0
   14116:	d1eb      	bne.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   14118:	21fc      	movs	r1, #252	; 0xfc
   1411a:	4630      	mov	r0, r6
   1411c:	f7ff fe3a 	bl	13d94 <xmit_datablock>
   14120:	b128      	cbz	r0, 1412e <sd_write+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   14122:	3c01      	subs	r4, #1
   14124:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   14128:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   1412c:	d1f4      	bne.n	14118 <sd_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   1412e:	21fd      	movs	r1, #253	; 0xfd
   14130:	2000      	movs	r0, #0
   14132:	f7ff fe2f 	bl	13d94 <xmit_datablock>
   14136:	2800      	cmp	r0, #0
   14138:	d1da      	bne.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   1413a:	2401      	movs	r4, #1
   1413c:	e7d8      	b.n	140f0 <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   1413e:	2004      	movs	r0, #4
   14140:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   14142:	2003      	movs	r0, #3
   14144:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   14146:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   14148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1414a:	bf00      	nop
   1414c:	2007c095 	.word	0x2007c095
   14150:	2009c020 	.word	0x2009c020
   14154:	2007c466 	.word	0x2007c466

00014158 <sd_ioctl>:
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   14158:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1415a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   1415c:	f7ff fe86 	bl	13e6c <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   14160:	2805      	cmp	r0, #5
   14162:	d11a      	bne.n	1419a <sd_ioctl+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   14164:	782b      	ldrb	r3, [r5, #0]
   14166:	2b01      	cmp	r3, #1
   14168:	d015      	beq.n	14196 <sd_ioctl+0x3e>
   1416a:	d305      	bcc.n	14178 <sd_ioctl+0x20>
   1416c:	2b02      	cmp	r3, #2
   1416e:	d00b      	beq.n	14188 <sd_ioctl+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   14170:	2404      	movs	r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   14172:	4620      	mov	r0, r4
   14174:	b004      	add	sp, #16
   14176:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   14178:	4b7b      	ldr	r3, [pc, #492]	; (14368 <sd_ioctl+0x210>)
   1417a:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   1417c:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   14180:	d109      	bne.n	14196 <sd_ioctl+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   14182:	f7ff fdaf 	bl	13ce4 <power_off>
   14186:	e7f4      	b.n	14172 <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   14188:	4b77      	ldr	r3, [pc, #476]	; (14368 <sd_ioctl+0x210>)
   1418a:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   1418c:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   14190:	f3c3 6380 	ubfx	r3, r3, #26, #1
   14194:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   14196:	2400      	movs	r4, #0
   14198:	e7eb      	b.n	14172 <sd_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   1419a:	4b74      	ldr	r3, [pc, #464]	; (1436c <sd_ioctl+0x214>)
   1419c:	781b      	ldrb	r3, [r3, #0]
   1419e:	07db      	lsls	r3, r3, #31
   141a0:	f100 80e0 	bmi.w	14364 <sd_ioctl+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   141a4:	280e      	cmp	r0, #14
   141a6:	f200 80db 	bhi.w	14360 <sd_ioctl+0x208>
   141aa:	e8df f000 	tbb	[pc, r0]
   141ae:	1708      	.short	0x1708
   141b0:	d9d95a55 	.word	0xd9d95a55
   141b4:	d9d9d9d9 	.word	0xd9d9d9d9
   141b8:	bdbaaba7 	.word	0xbdbaaba7
   141bc:	cd          	.byte	0xcd
   141bd:	00          	.byte	0x00
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   141be:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   141c2:	4b69      	ldr	r3, [pc, #420]	; (14368 <sd_ioctl+0x210>)
   141c4:	61da      	str	r2, [r3, #28]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   141c6:	f7ff fd75 	bl	13cb4 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   141ca:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   141ce:	bf18      	it	ne
   141d0:	2401      	movne	r4, #1
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   141d2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   141d6:	4b64      	ldr	r3, [pc, #400]	; (14368 <sd_ioctl+0x210>)
   141d8:	619a      	str	r2, [r3, #24]
   141da:	e7ca      	b.n	14172 <sd_ioctl+0x1a>
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   141dc:	2100      	movs	r1, #0
   141de:	2049      	movs	r0, #73	; 0x49
   141e0:	f7ff fdfe 	bl	13de0 <send_cmd>
   141e4:	4604      	mov	r4, r0
   141e6:	b108      	cbz	r0, 141ec <sd_ioctl+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   141e8:	2401      	movs	r4, #1
   141ea:	e7f2      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   141ec:	2110      	movs	r1, #16
   141ee:	4668      	mov	r0, sp
   141f0:	f7ff fd8a 	bl	13d08 <rcvr_datablock>
   141f4:	2800      	cmp	r0, #0
   141f6:	d0f7      	beq.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   141f8:	f89d 3000 	ldrb.w	r3, [sp]
   141fc:	f89d 1008 	ldrb.w	r1, [sp, #8]
   14200:	099b      	lsrs	r3, r3, #6
   14202:	2b01      	cmp	r3, #1
   14204:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14208:	d106      	bne.n	14218 <sd_ioctl+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   1420a:	1c5a      	adds	r2, r3, #1
   1420c:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   14210:	b292      	uxth	r2, r2
   14212:	0292      	lsls	r2, r2, #10
   14214:	602a      	str	r2, [r5, #0]
   14216:	e7dc      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14218:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1421c:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14220:	0092      	lsls	r2, r2, #2
   14222:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   14226:	f89d 1006 	ldrb.w	r1, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1422a:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   1422c:	0289      	lsls	r1, r1, #10
   1422e:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14232:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14234:	f89d 1005 	ldrb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   14238:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1423a:	f001 010f 	and.w	r1, r1, #15
   1423e:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   14242:	3102      	adds	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   14244:	f003 0306 	and.w	r3, r3, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14248:	440b      	add	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   1424a:	b2db      	uxtb	r3, r3
   1424c:	b292      	uxth	r2, r2
   1424e:	3b09      	subs	r3, #9
   14250:	fa02 f303 	lsl.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   14254:	602b      	str	r3, [r5, #0]
   14256:	e7bc      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   14258:	f44f 7300 	mov.w	r3, #512	; 0x200
   1425c:	802b      	strh	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   1425e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   14260:	e7b7      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   14262:	4e43      	ldr	r6, [pc, #268]	; (14370 <sd_ioctl+0x218>)
   14264:	7831      	ldrb	r1, [r6, #0]
   14266:	f011 0104 	ands.w	r1, r1, #4
   1426a:	d01c      	beq.n	142a6 <sd_ioctl+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   1426c:	2100      	movs	r1, #0
   1426e:	20cd      	movs	r0, #205	; 0xcd
   14270:	f7ff fdb6 	bl	13de0 <send_cmd>
   14274:	2800      	cmp	r0, #0
   14276:	d1b7      	bne.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   14278:	20ff      	movs	r0, #255	; 0xff
   1427a:	f7ff fd11 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   1427e:	2110      	movs	r1, #16
   14280:	4668      	mov	r0, sp
   14282:	f7ff fd41 	bl	13d08 <rcvr_datablock>
   14286:	2800      	cmp	r0, #0
   14288:	d0ae      	beq.n	141e8 <sd_ioctl+0x90>
   1428a:	2430      	movs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   1428c:	20ff      	movs	r0, #255	; 0xff
   1428e:	f7ff fd07 	bl	13ca0 <ssp1_exchange_byte>
   14292:	1e60      	subs	r0, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   14294:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   14298:	d1f8      	bne.n	1428c <sd_ioctl+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   1429a:	f89d 300a 	ldrb.w	r3, [sp, #10]
   1429e:	091a      	lsrs	r2, r3, #4
   142a0:	2310      	movs	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142a2:	4093      	lsls	r3, r2
   142a4:	e7d6      	b.n	14254 <sd_ioctl+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   142a6:	2049      	movs	r0, #73	; 0x49
   142a8:	f7ff fd9a 	bl	13de0 <send_cmd>
   142ac:	4604      	mov	r4, r0
   142ae:	2800      	cmp	r0, #0
   142b0:	d19a      	bne.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   142b2:	2110      	movs	r1, #16
   142b4:	4668      	mov	r0, sp
   142b6:	f7ff fd27 	bl	13d08 <rcvr_datablock>
   142ba:	2800      	cmp	r0, #0
   142bc:	d094      	beq.n	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   142be:	7830      	ldrb	r0, [r6, #0]
   142c0:	f89d 300a 	ldrb.w	r3, [sp, #10]
   142c4:	f010 0002 	ands.w	r0, r0, #2
   142c8:	f89d 100b 	ldrb.w	r1, [sp, #11]
   142cc:	d00a      	beq.n	142e4 <sd_ioctl+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   142ce:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142d0:	f89d 200d 	ldrb.w	r2, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   142d4:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   142d8:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142dc:	0992      	lsrs	r2, r2, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   142de:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   142e0:	3a01      	subs	r2, #1
   142e2:	e7de      	b.n	142a2 <sd_ioctl+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   142e4:	00ca      	lsls	r2, r1, #3
   142e6:	f002 0218 	and.w	r2, r2, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142ea:	f3c3 0384 	ubfx	r3, r3, #2, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   142ee:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142f2:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   142f4:	fb02 3303 	mla	r3, r2, r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   142f8:	602b      	str	r3, [r5, #0]
   142fa:	e7b0      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   142fc:	4b1c      	ldr	r3, [pc, #112]	; (14370 <sd_ioctl+0x218>)
   142fe:	781b      	ldrb	r3, [r3, #0]
   14300:	702b      	strb	r3, [r5, #0]
   14302:	e7ac      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   14304:	2100      	movs	r1, #0
   14306:	2049      	movs	r0, #73	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   14308:	f7ff fd6a 	bl	13de0 <send_cmd>
   1430c:	2800      	cmp	r0, #0
   1430e:	f47f af6b 	bne.w	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   14312:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   14314:	4628      	mov	r0, r5
   14316:	f7ff fcf7 	bl	13d08 <rcvr_datablock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   1431a:	fab0 f480 	clz	r4, r0
   1431e:	0964      	lsrs	r4, r4, #5
   14320:	e757      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   14322:	2100      	movs	r1, #0
   14324:	204a      	movs	r0, #74	; 0x4a
   14326:	e7ef      	b.n	14308 <sd_ioctl+0x1b0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   14328:	2100      	movs	r1, #0
   1432a:	207a      	movs	r0, #122	; 0x7a
   1432c:	f7ff fd58 	bl	13de0 <send_cmd>
   14330:	2800      	cmp	r0, #0
   14332:	f47f af59 	bne.w	141e8 <sd_ioctl+0x90>
   14336:	1d29      	adds	r1, r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   14338:	20ff      	movs	r0, #255	; 0xff
   1433a:	f7ff fcb1 	bl	13ca0 <ssp1_exchange_byte>
   1433e:	f805 0b01 	strb.w	r0, [r5], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   14342:	428d      	cmp	r5, r1
   14344:	d1f8      	bne.n	14338 <sd_ioctl+0x1e0>
   14346:	e78a      	b.n	1425e <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   14348:	2100      	movs	r1, #0
   1434a:	20cd      	movs	r0, #205	; 0xcd
   1434c:	f7ff fd48 	bl	13de0 <send_cmd>
   14350:	2800      	cmp	r0, #0
   14352:	f47f af49 	bne.w	141e8 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   14356:	20ff      	movs	r0, #255	; 0xff
   14358:	f7ff fca2 	bl	13ca0 <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   1435c:	2140      	movs	r1, #64	; 0x40
   1435e:	e7d9      	b.n	14314 <sd_ioctl+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   14360:	2404      	movs	r4, #4
   14362:	e736      	b.n	141d2 <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   14364:	2403      	movs	r4, #3
   14366:	e704      	b.n	14172 <sd_ioctl+0x1a>
   14368:	2009c020 	.word	0x2009c020
   1436c:	2007c095 	.word	0x2007c095
   14370:	2007c466 	.word	0x2007c466

00014374 <disk_initialize>:
disk_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   14374:	b510      	push	{r4, lr}
   14376:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14378:	f004 f858 	bl	1842c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   1437c:	b11c      	cbz	r4, 14386 <disk_initialize+0x12>
   1437e:	2c01      	cmp	r4, #1
   14380:	d008      	beq.n	14394 <disk_initialize+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   14382:	2404      	movs	r4, #4
   14384:	e002      	b.n	1438c <disk_initialize+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   14386:	f000 f957 	bl	14638 <flash_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   1438a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   1438c:	f004 f866 	bl	1845c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   14390:	4620      	mov	r0, r4
   14392:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   14394:	f7ff fd7c 	bl	13e90 <sd_initialize>
   14398:	e7f7      	b.n	1438a <disk_initialize+0x16>

0001439a <disk_status>:
disk_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   1439a:	b128      	cbz	r0, 143a8 <disk_status+0xe>
   1439c:	2801      	cmp	r0, #1
   1439e:	d001      	beq.n	143a4 <disk_status+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   143a0:	2004      	movs	r0, #4
   143a2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   143a4:	f7ff be2a 	b.w	13ffc <sd_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   143a8:	4770      	bx	lr

000143aa <disk_read>:
disk_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   143aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   143ac:	4607      	mov	r7, r0
   143ae:	460c      	mov	r4, r1
   143b0:	4615      	mov	r5, r2
   143b2:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   143b4:	f004 f83a 	bl	1842c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   143b8:	b11f      	cbz	r7, 143c2 <disk_read+0x18>
   143ba:	2f01      	cmp	r7, #1
   143bc:	d00b      	beq.n	143d6 <disk_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   143be:	2404      	movs	r4, #4
   143c0:	e005      	b.n	143ce <disk_read+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   143c2:	4632      	mov	r2, r6
   143c4:	4629      	mov	r1, r5
   143c6:	4620      	mov	r0, r4
   143c8:	f000 f982 	bl	146d0 <flash_read_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   143cc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   143ce:	f004 f845 	bl	1845c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   143d2:	4620      	mov	r0, r4
   143d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   143d6:	4632      	mov	r2, r6
   143d8:	4629      	mov	r1, r5
   143da:	4620      	mov	r0, r4
   143dc:	f7ff fe16 	bl	1400c <sd_read>
   143e0:	e7f4      	b.n	143cc <disk_read+0x22>

000143e2 <disk_write>:
disk_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   143e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   143e4:	4607      	mov	r7, r0
   143e6:	460c      	mov	r4, r1
   143e8:	4615      	mov	r5, r2
   143ea:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   143ec:	f004 f81e 	bl	1842c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   143f0:	b11f      	cbz	r7, 143fa <disk_write+0x18>
   143f2:	2f01      	cmp	r7, #1
   143f4:	d00b      	beq.n	1440e <disk_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   143f6:	2404      	movs	r4, #4
   143f8:	e005      	b.n	14406 <disk_write+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   143fa:	4632      	mov	r2, r6
   143fc:	4629      	mov	r1, r5
   143fe:	4620      	mov	r0, r4
   14400:	f000 f98e 	bl	14720 <flash_write_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   14404:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   14406:	f004 f829 	bl	1845c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   1440a:	4620      	mov	r0, r4
   1440c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   1440e:	4632      	mov	r2, r6
   14410:	4629      	mov	r1, r5
   14412:	4620      	mov	r0, r4
   14414:	f7ff fe46 	bl	140a4 <sd_write>
   14418:	e7f4      	b.n	14404 <disk_write+0x22>

0001441a <disk_ioctl>:
disk_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   1441a:	b570      	push	{r4, r5, r6, lr}
   1441c:	4606      	mov	r6, r0
   1441e:	460c      	mov	r4, r1
   14420:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14422:	f004 f803 	bl	1842c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   14426:	b11e      	cbz	r6, 14430 <disk_ioctl+0x16>
   14428:	2e01      	cmp	r6, #1
   1442a:	d00a      	beq.n	14442 <disk_ioctl+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   1442c:	2404      	movs	r4, #4
   1442e:	e004      	b.n	1443a <disk_ioctl+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   14430:	4629      	mov	r1, r5
   14432:	4620      	mov	r0, r4
   14434:	f000 f99a 	bl	1476c <flash_ioctl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   14438:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   1443a:	f004 f80f 	bl	1845c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   1443e:	4620      	mov	r0, r4
   14440:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   14442:	4629      	mov	r1, r5
   14444:	4620      	mov	r0, r4
   14446:	f7ff fe87 	bl	14158 <sd_ioctl>
   1444a:	e7f5      	b.n	14438 <disk_ioctl+0x1e>

0001444c <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   1444c:	4b05      	ldr	r3, [pc, #20]	; (14464 <flash_get_mem_size_bytes()+0x18>)
   1444e:	781b      	ldrb	r3, [r3, #0]
   14450:	3b25      	subs	r3, #37	; 0x25
   14452:	b2db      	uxtb	r3, r3
   14454:	2b03      	cmp	r3, #3
   14456:	bf9a      	itte	ls
   14458:	4a03      	ldrls	r2, [pc, #12]	; (14468 <flash_get_mem_size_bytes()+0x1c>)
   1445a:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   1445e:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   14460:	4770      	bx	lr
   14462:	bf00      	nop
   14464:	2007c46c 	.word	0x2007c46c
   14468:	00025464 	.word	0x00025464

0001446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   1446c:	4b1b      	ldr	r3, [pc, #108]	; (144dc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   1446e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   14472:	881d      	ldrh	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   14474:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   14476:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   1447a:	460f      	mov	r7, r1
   1447c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   1447e:	d103      	bne.n	14488 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   14480:	462a      	mov	r2, r5
   14482:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   14484:	4638      	mov	r0, r7
   14486:	e00b      	b.n	144a0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   14488:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   1448c:	d10c      	bne.n	144a8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   1448e:	462a      	mov	r2, r5
   14490:	4621      	mov	r1, r4
   14492:	4638      	mov	r0, r7
   14494:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   14496:	462a      	mov	r2, r5
   14498:	f504 7180 	add.w	r1, r4, #256	; 0x100
   1449c:	f507 7080 	add.w	r0, r7, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   144a0:	4633      	mov	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   144a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144a6:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   144a8:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   144ac:	d104      	bne.n	144b8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   144ae:	0a51      	lsrs	r1, r2, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   144b0:	0289      	lsls	r1, r1, #10
   144b2:	f44f 7200 	mov.w	r2, #512	; 0x200
   144b6:	e7e5      	b.n	14484 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   144b8:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   144bc:	d10b      	bne.n	144d6 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   144be:	0a14      	lsrs	r4, r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   144c0:	0261      	lsls	r1, r4, #9
   144c2:	f44f 7280 	mov.w	r2, #256	; 0x100
   144c6:	4638      	mov	r0, r7
   144c8:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144ca:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   144ce:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   144d0:	0261      	lsls	r1, r4, #9
   144d2:	18b8      	adds	r0, r7, r2
   144d4:	e7e4      	b.n	144a0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   144d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   144da:	bf00      	nop
   144dc:	2007c46e 	.word	0x2007c46e

000144e0 <ssp1_exchange_data>:
ssp1_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   144e0:	b510      	push	{r4, lr}
   144e2:	4b29      	ldr	r3, [pc, #164]	; (14588 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   144e4:	2900      	cmp	r1, #0
   144e6:	dd4d      	ble.n	14584 <ssp1_exchange_data+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   144e8:	2907      	cmp	r1, #7
   144ea:	7802      	ldrb	r2, [r0, #0]
   144ec:	dd29      	ble.n	14542 <ssp1_exchange_data+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144ee:	609a      	str	r2, [r3, #8]
   144f0:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   144f2:	3908      	subs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144f4:	609a      	str	r2, [r3, #8]
   144f6:	7882      	ldrb	r2, [r0, #2]
   144f8:	609a      	str	r2, [r3, #8]
   144fa:	78c2      	ldrb	r2, [r0, #3]
   144fc:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   144fe:	7902      	ldrb	r2, [r0, #4]
   14500:	609a      	str	r2, [r3, #8]
   14502:	7942      	ldrb	r2, [r0, #5]
   14504:	609a      	str	r2, [r3, #8]
   14506:	7982      	ldrb	r2, [r0, #6]
   14508:	609a      	str	r2, [r3, #8]
   1450a:	79c4      	ldrb	r4, [r0, #7]
   1450c:	f100 0208 	add.w	r2, r0, #8
   14510:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   14512:	699c      	ldr	r4, [r3, #24]
   14514:	0764      	lsls	r4, r4, #29
   14516:	d5fc      	bpl.n	14512 <ssp1_exchange_data+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   14518:	689c      	ldr	r4, [r3, #8]
   1451a:	7004      	strb	r4, [r0, #0]
   1451c:	689c      	ldr	r4, [r3, #8]
   1451e:	7044      	strb	r4, [r0, #1]
   14520:	689c      	ldr	r4, [r3, #8]
   14522:	7084      	strb	r4, [r0, #2]
   14524:	689c      	ldr	r4, [r3, #8]
   14526:	70c4      	strb	r4, [r0, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   14528:	68dc      	ldr	r4, [r3, #12]
   1452a:	06e4      	lsls	r4, r4, #27
   1452c:	d4fc      	bmi.n	14528 <ssp1_exchange_data+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1452e:	689c      	ldr	r4, [r3, #8]
   14530:	7104      	strb	r4, [r0, #4]
   14532:	689c      	ldr	r4, [r3, #8]
   14534:	7144      	strb	r4, [r0, #5]
   14536:	689c      	ldr	r4, [r3, #8]
   14538:	7184      	strb	r4, [r0, #6]
   1453a:	689c      	ldr	r4, [r3, #8]
   1453c:	71c4      	strb	r4, [r0, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1453e:	4610      	mov	r0, r2
   14540:	e7d0      	b.n	144e4 <ssp1_exchange_data+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   14542:	2903      	cmp	r1, #3
   14544:	dd14      	ble.n	14570 <ssp1_exchange_data+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   14546:	609a      	str	r2, [r3, #8]
   14548:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   1454a:	3904      	subs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1454c:	609a      	str	r2, [r3, #8]
   1454e:	7882      	ldrb	r2, [r0, #2]
   14550:	609a      	str	r2, [r3, #8]
   14552:	78c4      	ldrb	r4, [r0, #3]
   14554:	1d02      	adds	r2, r0, #4
   14556:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   14558:	68dc      	ldr	r4, [r3, #12]
   1455a:	06e4      	lsls	r4, r4, #27
   1455c:	d4fc      	bmi.n	14558 <ssp1_exchange_data+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1455e:	689c      	ldr	r4, [r3, #8]
   14560:	7004      	strb	r4, [r0, #0]
   14562:	689c      	ldr	r4, [r3, #8]
   14564:	7044      	strb	r4, [r0, #1]
   14566:	689c      	ldr	r4, [r3, #8]
   14568:	7084      	strb	r4, [r0, #2]
   1456a:	689c      	ldr	r4, [r3, #8]
   1456c:	70c4      	strb	r4, [r0, #3]
   1456e:	e7e6      	b.n	1453e <ssp1_exchange_data+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   14570:	1c44      	adds	r4, r0, #1
   14572:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   14574:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   14576:	68da      	ldr	r2, [r3, #12]
   14578:	06d2      	lsls	r2, r2, #27
   1457a:	d4fc      	bmi.n	14576 <ssp1_exchange_data+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   1457c:	689a      	ldr	r2, [r3, #8]
   1457e:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   14580:	4620      	mov	r0, r4
   14582:	e7af      	b.n	144e4 <ssp1_exchange_data+0x4>
   14584:	bd10      	pop	{r4, pc}
   14586:	bf00      	nop
   14588:	40030000 	.word	0x40030000

0001458c <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   1458c:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   1458e:	0c0b      	lsrs	r3, r1, #16
   14590:	f88d 3005 	strb.w	r3, [sp, #5]
   14594:	f88d 1007 	strb.w	r1, [sp, #7]
   14598:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1459a:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   1459c:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145a0:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   145a4:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145a8:	f7ff ff9a 	bl	144e0 <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   145ac:	b003      	add	sp, #12
   145ae:	f85d fb04 	ldr.w	pc, [sp], #4
   145b2:	Address 0x00000000000145b2 is out of bounds.


000145b4 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145b6:	2303      	movs	r3, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   145b8:	2540      	movs	r5, #64	; 0x40
   145ba:	4c0e      	ldr	r4, [pc, #56]	; (145f4 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145bc:	4617      	mov	r7, r2
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   145be:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145c0:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   145c4:	0c0b      	lsrs	r3, r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145c6:	f88d 3005 	strb.w	r3, [sp, #5]
   145ca:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   145ce:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145d0:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   145d2:	4606      	mov	r6, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145d4:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   145d8:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   145dc:	f7ff ff80 	bl	144e0 <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   145e0:	2200      	movs	r2, #0
   145e2:	4639      	mov	r1, r7
   145e4:	4630      	mov	r0, r6
   145e6:	f003 fec1 	bl	1836c <ssp1_dma_transfer_block>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   145ea:	61a5      	str	r5, [r4, #24]
   145ec:	61a5      	str	r5, [r4, #24]
   145ee:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   145f0:	b003      	add	sp, #12
   145f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   145f4:	2009c000 	.word	0x2009c000

000145f8 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   145f8:	2240      	movs	r2, #64	; 0x40
   145fa:	4b0d      	ldr	r3, [pc, #52]	; (14630 <flash_wait_for_ready()+0x38>)
   145fc:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   145fe:	22d7      	movs	r2, #215	; 0xd7
   14600:	4b0c      	ldr	r3, [pc, #48]	; (14634 <flash_wait_for_ready()+0x3c>)
   14602:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14604:	68da      	ldr	r2, [r3, #12]
   14606:	06d2      	lsls	r2, r2, #27
   14608:	d4fc      	bmi.n	14604 <flash_wait_for_ready()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1460a:	4a0a      	ldr	r2, [pc, #40]	; (14634 <flash_wait_for_ready()+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1460c:	689b      	ldr	r3, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1460e:	21ff      	movs	r1, #255	; 0xff
   14610:	4613      	mov	r3, r2
   14612:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14614:	68d8      	ldr	r0, [r3, #12]
   14616:	06c0      	lsls	r0, r0, #27
   14618:	d4fc      	bmi.n	14614 <flash_wait_for_ready()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1461a:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   1461c:	f010 0f80 	tst.w	r0, #128	; 0x80
   14620:	d0f7      	beq.n	14612 <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14622:	2240      	movs	r2, #64	; 0x40
   14624:	4b02      	ldr	r3, [pc, #8]	; (14630 <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   14626:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   14628:	619a      	str	r2, [r3, #24]
   1462a:	619a      	str	r2, [r3, #24]
   1462c:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   1462e:	4770      	bx	lr
   14630:	2009c000 	.word	0x2009c000
   14634:	40030000 	.word	0x40030000

00014638 <flash_initialize>:
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   14638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   1463a:	f7ff ffdd 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   1463e:	2300      	movs	r3, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14640:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   14642:	4c1e      	ldr	r4, [pc, #120]	; (146bc <flash_initialize+0x84>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14644:	4e1e      	ldr	r6, [pc, #120]	; (146c0 <flash_initialize+0x88>)
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   14646:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   14648:	4b1e      	ldr	r3, [pc, #120]	; (146c4 <flash_initialize+0x8c>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1464a:	61f7      	str	r7, [r6, #28]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   1464c:	881a      	ldrh	r2, [r3, #0]
   1464e:	789b      	ldrb	r3, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   14650:	4605      	mov	r5, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14652:	2103      	movs	r1, #3
   14654:	a801      	add	r0, sp, #4
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   14656:	f8ad 2004 	strh.w	r2, [sp, #4]
   1465a:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1465e:	f7ff ff3f 	bl	144e0 <ssp1_exchange_data>
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   14662:	f89d 2005 	ldrb.w	r2, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   14666:	f89d 3006 	ldrb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   1466a:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1466c:	61b7      	str	r7, [r6, #24]
   1466e:	61b7      	str	r7, [r6, #24]
   14670:	61b7      	str	r7, [r6, #24]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   14672:	d115      	bne.n	146a0 <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   14674:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   14678:	2a03      	cmp	r2, #3
   1467a:	d811      	bhi.n	146a0 <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   1467c:	4a12      	ldr	r2, [pc, #72]	; (146c8 <flash_initialize+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   1467e:	2b25      	cmp	r3, #37	; 0x25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   14680:	7013      	strb	r3, [r2, #0]
   14682:	f005 0001 	and.w	r0, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   14686:	d111      	bne.n	146ac <flash_initialize+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   14688:	2800      	cmp	r0, #0
   1468a:	bf14      	ite	ne
   1468c:	f44f 7380 	movne.w	r3, #256	; 0x100
   14690:	f44f 7384 	moveq.w	r3, #264	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   14694:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   14696:	f7ff fed9 	bl	1444c <flash_get_mem_size_bytes()>
   1469a:	4b0c      	ldr	r3, [pc, #48]	; (146cc <flash_initialize+0x94>)
   1469c:	0a40      	lsrs	r0, r0, #9
   1469e:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   146a0:	8820      	ldrh	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   146a2:	fab0 f080 	clz	r0, r0
   146a6:	0940      	lsrs	r0, r0, #5
   146a8:	b003      	add	sp, #12
   146aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   146ac:	2800      	cmp	r0, #0
   146ae:	bf14      	ite	ne
   146b0:	f44f 7300 	movne.w	r3, #512	; 0x200
   146b4:	f44f 7304 	moveq.w	r3, #528	; 0x210
   146b8:	e7ec      	b.n	14694 <flash_initialize+0x5c>
   146ba:	bf00      	nop
   146bc:	2007c46e 	.word	0x2007c46e
   146c0:	2009c000 	.word	0x2009c000
   146c4:	0002545a 	.word	0x0002545a
   146c8:	2007c46c 	.word	0x2007c46c
   146cc:	2007c468 	.word	0x2007c468

000146d0 <flash_read_sectors>:
flash_read_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   146d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146d4:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   146d6:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146d8:	4a0f      	ldr	r2, [pc, #60]	; (14718 <flash_read_sectors+0x48>)
   146da:	3b01      	subs	r3, #1
   146dc:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   146de:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   146e0:	4293      	cmp	r3, r2
   146e2:	d812      	bhi.n	1470a <flash_read_sectors+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   146e4:	024d      	lsls	r5, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   146e6:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   146e8:	f7ff ff86 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   146ec:	f8df 802c 	ldr.w	r8, [pc, #44]	; 1471c <flash_read_sectors+0x4c>
   146f0:	1b2d      	subs	r5, r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   146f2:	42be      	cmp	r6, r7
   146f4:	eb04 0205 	add.w	r2, r4, r5
   146f8:	da0a      	bge.n	14710 <flash_read_sectors+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   146fa:	4621      	mov	r1, r4
   146fc:	4640      	mov	r0, r8
   146fe:	f7ff feb5 	bl	1446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   14702:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14706:	3601      	adds	r6, #1
   14708:	e7f3      	b.n	146f2 <flash_read_sectors+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   1470a:	2001      	movs	r0, #1
   1470c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   14710:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   14712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14716:	bf00      	nop
   14718:	2007c468 	.word	0x2007c468
   1471c:	000145b5 	.word	0x000145b5

00014720 <flash_write_sectors>:
flash_write_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14720:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   14722:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14726:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14728:	4a0e      	ldr	r2, [pc, #56]	; (14764 <flash_write_sectors+0x44>)
   1472a:	3b01      	subs	r3, #1
   1472c:	6812      	ldr	r2, [r2, #0]
   1472e:	4293      	cmp	r3, r2
   14730:	d811      	bhi.n	14756 <flash_write_sectors+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   14732:	4604      	mov	r4, r0
   14734:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14736:	f8df 8030 	ldr.w	r8, [pc, #48]	; 14768 <flash_write_sectors+0x48>
   1473a:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1473e:	42be      	cmp	r6, r7
   14740:	eb04 0205 	add.w	r2, r4, r5
   14744:	da0a      	bge.n	1475c <flash_write_sectors+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14746:	4621      	mov	r1, r4
   14748:	4640      	mov	r0, r8
   1474a:	f7ff fe8f 	bl	1446c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1474e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14752:	3601      	adds	r6, #1
   14754:	e7f3      	b.n	1473e <flash_write_sectors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   14756:	2001      	movs	r0, #1
   14758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   1475c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   1475e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14762:	bf00      	nop
   14764:	2007c468 	.word	0x2007c468
   14768:	0001484d 	.word	0x0001484d

0001476c <flash_ioctl>:
flash_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   1476c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   1476e:	2807      	cmp	r0, #7
   14770:	d805      	bhi.n	1477e <flash_ioctl+0x12>
   14772:	e8df f000 	tbb	[pc, r0]
   14776:	0a06      	.short	0x0a06
   14778:	0808130f 	.word	0x0808130f
   1477c:	0808      	.short	0x0808
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   1477e:	2004      	movs	r0, #4
   14780:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   14782:	f7ff ff39 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   14786:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   14788:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   1478a:	f7ff fe5f 	bl	1444c <flash_get_mem_size_bytes()>
   1478e:	0a40      	lsrs	r0, r0, #9
   14790:	6008      	str	r0, [r1, #0]
   14792:	e7f8      	b.n	14786 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   14794:	f44f 7300 	mov.w	r3, #512	; 0x200
   14798:	800b      	strh	r3, [r1, #0]
   1479a:	e7f4      	b.n	14786 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   1479c:	2301      	movs	r3, #1
   1479e:	600b      	str	r3, [r1, #0]
   147a0:	e7f1      	b.n	14786 <flash_ioctl+0x1a>
   147a2:	Address 0x00000000000147a2 is out of bounds.


000147a4 <flash_write_permanent_id>:
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   147a4:	b570      	push	{r4, r5, r6, lr}
   147a6:	b090      	sub	sp, #64	; 0x40
   147a8:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   147aa:	466a      	mov	r2, sp
   147ac:	466e      	mov	r6, sp
   147ae:	f100 0540 	add.w	r5, r0, #64	; 0x40
   147b2:	4614      	mov	r4, r2
   147b4:	6818      	ldr	r0, [r3, #0]
   147b6:	6859      	ldr	r1, [r3, #4]
   147b8:	3308      	adds	r3, #8
   147ba:	c403      	stmia	r4!, {r0, r1}
   147bc:	42ab      	cmp	r3, r5
   147be:	4622      	mov	r2, r4
   147c0:	d1f7      	bne.n	147b2 <flash_write_permanent_id+0xe>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   147c2:	2440      	movs	r4, #64	; 0x40
   147c4:	4d07      	ldr	r5, [pc, #28]	; (147e4 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   147c6:	2100      	movs	r1, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147c8:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   147ca:	209b      	movs	r0, #155	; 0x9b
   147cc:	f7ff fede 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147d0:	4621      	mov	r1, r4
   147d2:	4630      	mov	r0, r6
   147d4:	f7ff fe84 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   147d8:	61ac      	str	r4, [r5, #24]
   147da:	61ac      	str	r4, [r5, #24]
   147dc:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   147de:	b010      	add	sp, #64	; 0x40
   147e0:	bd70      	pop	{r4, r5, r6, pc}
   147e2:	bf00      	nop
   147e4:	2009c000 	.word	0x2009c000

000147e8 <flash_read_permanent_id>:
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   147e8:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   147ea:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   147ec:	4606      	mov	r6, r0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147ee:	4d07      	ldr	r5, [pc, #28]	; (1480c <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   147f0:	2100      	movs	r1, #0
   147f2:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147f4:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   147f6:	f7ff fec9 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147fa:	4621      	mov	r1, r4
   147fc:	4630      	mov	r0, r6
   147fe:	f7ff fe6f 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14802:	61ac      	str	r4, [r5, #24]
   14804:	61ac      	str	r4, [r5, #24]
   14806:	61ac      	str	r4, [r5, #24]
   14808:	bd70      	pop	{r4, r5, r6, pc}
   1480a:	bf00      	nop
   1480c:	2009c000 	.word	0x2009c000

00014810 <flash_get_page_count>:
flash_get_page_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   14810:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   14812:	4b06      	ldr	r3, [pc, #24]	; (1482c <flash_get_page_count+0x1c>)
   14814:	8819      	ldrh	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   14816:	f031 011f 	bics.w	r1, r1, #31
   1481a:	d004      	beq.n	14826 <flash_get_page_count+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   1481c:	f7ff fe16 	bl	1444c <flash_get_mem_size_bytes()>
   14820:	fbb0 f0f1 	udiv	r0, r0, r1
   14824:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   14826:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   14828:	bd08      	pop	{r3, pc}
   1482a:	bf00      	nop
   1482c:	2007c46e 	.word	0x2007c46e

00014830 <flash_get_page_size>:
flash_get_page_size():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   14830:	4b01      	ldr	r3, [pc, #4]	; (14838 <flash_get_page_size+0x8>)
   14832:	8818      	ldrh	r0, [r3, #0]
   14834:	4770      	bx	lr
   14836:	bf00      	nop
   14838:	2007c46e 	.word	0x2007c46e

0001483c <flash_supports_metadata>:
flash_supports_metadata():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   1483c:	4b02      	ldr	r3, [pc, #8]	; (14848 <flash_supports_metadata+0xc>)
   1483e:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   14840:	3000      	adds	r0, #0
   14842:	bf18      	it	ne
   14844:	2001      	movne	r0, #1
   14846:	4770      	bx	lr
   14848:	2007c46e 	.word	0x2007c46e

0001484c <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   1484c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   14850:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14854:	460f      	mov	r7, r1
   14856:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14858:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   1485a:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   1485c:	f7ff fecc 	bl	145f8 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   14860:	f7ff ffec 	bl	1483c <flash_supports_metadata>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   14864:	4606      	mov	r6, r0
   14866:	b1b8      	cbz	r0, 14898 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14868:	2540      	movs	r5, #64	; 0x40
   1486a:	4c19      	ldr	r4, [pc, #100]	; (148d0 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   1486c:	4b19      	ldr	r3, [pc, #100]	; (148d4 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1486e:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   14870:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   14872:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14874:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14878:	bf0c      	ite	eq
   1487a:	f44f 7180 	moveq.w	r1, #256	; 0x100
   1487e:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   14882:	4339      	orrs	r1, r7
   14884:	f7ff fe82 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14888:	2104      	movs	r1, #4
   1488a:	eb0d 0001 	add.w	r0, sp, r1
   1488e:	f7ff fe27 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14892:	61a5      	str	r5, [r4, #24]
   14894:	61a5      	str	r5, [r4, #24]
   14896:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14898:	2340      	movs	r3, #64	; 0x40
   1489a:	4c0d      	ldr	r4, [pc, #52]	; (148d0 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   1489c:	4639      	mov	r1, r7
   1489e:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   148a0:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   148a2:	f7ff fe73 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   148a6:	2201      	movs	r2, #1
   148a8:	4649      	mov	r1, r9
   148aa:	4640      	mov	r0, r8
   148ac:	f003 fd5e 	bl	1836c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   148b0:	b13e      	cbz	r6, 148c2 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   148b2:	9b01      	ldr	r3, [sp, #4]
   148b4:	a802      	add	r0, sp, #8
   148b6:	3301      	adds	r3, #1
   148b8:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   148bc:	2104      	movs	r1, #4
   148be:	f7ff fe0f 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   148c2:	2340      	movs	r3, #64	; 0x40
   148c4:	61a3      	str	r3, [r4, #24]
   148c6:	61a3      	str	r3, [r4, #24]
   148c8:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   148ca:	b003      	add	sp, #12
   148cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   148d0:	2009c000 	.word	0x2009c000
   148d4:	2007c46e 	.word	0x2007c46e

000148d8 <flash_get_page_write_count>:
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   148d8:	4b12      	ldr	r3, [pc, #72]	; (14924 <flash_get_page_write_count+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:410

uint32_t flash_get_page_write_count(uint32_t page_number)
{
   148da:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   148dc:	881b      	ldrh	r3, [r3, #0]
   148de:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   148e2:	bf0c      	ite	eq
   148e4:	f44f 7180 	moveq.w	r1, #256	; 0x100
   148e8:	f44f 7100 	movne.w	r1, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    /* Metadata is at the end of the page */
    const uint32_t page_addr = (page_number << FLASH_PAGENUM_BIT_OFFSET);
    const uint32_t meta_data_addr = flash_get_metadata_addr_from_pageaddr(page_addr);
    uint32_t write_counter = UINT32_MAX;
   148ec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:136
    return (addr | byte_offset);
   148f0:	ea41 2140 	orr.w	r1, r1, r0, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    uint32_t write_counter = UINT32_MAX;
   148f4:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:416

    if (flash_supports_metadata())
   148f6:	f7ff ffa1 	bl	1483c <flash_supports_metadata>
   148fa:	b168      	cbz	r0, 14918 <flash_get_page_write_count+0x40>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   148fc:	2540      	movs	r5, #64	; 0x40
   148fe:	4c0a      	ldr	r4, [pc, #40]	; (14928 <flash_get_page_write_count+0x50>)
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
    {
        CHIP_SELECT_OP()
        {
            flash_send_op_addr(opcode_read_cont_lowfreq, meta_data_addr);
   14900:	2003      	movs	r0, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14902:	61e5      	str	r5, [r4, #28]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
   14904:	f7ff fe42 	bl	1458c <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14908:	2104      	movs	r1, #4
   1490a:	eb0d 0001 	add.w	r0, sp, r1
   1490e:	f7ff fde7 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14912:	61a5      	str	r5, [r4, #24]
   14914:	61a5      	str	r5, [r4, #24]
   14916:	61a5      	str	r5, [r4, #24]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:425
            flash_spi_multi_io(&write_counter, sizeof(write_counter));
        }
    }

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
   14918:	9801      	ldr	r0, [sp, #4]
   1491a:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:426
}
   1491c:	bf08      	it	eq
   1491e:	2000      	moveq	r0, #0
   14920:	b003      	add	sp, #12
   14922:	bd30      	pop	{r4, r5, pc}
   14924:	2007c46e 	.word	0x2007c46e
   14928:	2009c000 	.word	0x2009c000

0001492c <flash_chip_erase>:
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

void flash_chip_erase(void)
{
   1492c:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   1492e:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14930:	2104      	movs	r1, #4
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   14932:	4b07      	ldr	r3, [pc, #28]	; (14950 <flash_chip_erase+0x24>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14934:	4c07      	ldr	r4, [pc, #28]	; (14954 <flash_chip_erase+0x28>)
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   14936:	6818      	ldr	r0, [r3, #0]
   14938:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1493a:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1493c:	eb0d 0001 	add.w	r0, sp, r1
   14940:	f7ff fdce 	bl	144e0 <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14944:	61a5      	str	r5, [r4, #24]
   14946:	61a5      	str	r5, [r4, #24]
   14948:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   1494a:	b003      	add	sp, #12
   1494c:	bd30      	pop	{r4, r5, pc}
   1494e:	bf00      	nop
   14950:	0002545d 	.word	0x0002545d
   14954:	2009c000 	.word	0x2009c000

00014958 <get_fattime>:
get_fattime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   14958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   1495a:	a801      	add	r0, sp, #4
   1495c:	f003 f9a8 	bl	17cb0 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   14960:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14964:	f003 000f 	and.w	r0, r3, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   14968:	f89d 3008 	ldrb.w	r3, [sp, #8]
   1496c:	f003 031f 	and.w	r3, r3, #31
   14970:	041b      	lsls	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   14972:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   14976:	f89d 0006 	ldrb.w	r0, [sp, #6]
   1497a:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   1497e:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   14982:	f89d 0005 	ldrb.w	r0, [sp, #5]
   14986:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   1498a:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   1498e:	f89d 0004 	ldrb.w	r0, [sp, #4]
   14992:	f3c0 0044 	ubfx	r0, r0, #1, #5
   14996:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   14998:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   1499c:	0640      	lsls	r0, r0, #25
   1499e:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   149a2:	4318      	orrs	r0, r3
   149a4:	b005      	add	sp, #20
   149a6:	f85d fb04 	ldr.w	pc, [sp], #4

000149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29

FRESULT Storage::copy(const char* pExistingFile, const char* pNewFile,
                        unsigned int* pReadTime,
                        unsigned int* pWriteTime,
                        unsigned int* pBytesTransferred)
{
   149aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149ae:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   149b2:	460c      	mov	r4, r1
   149b4:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    FIL dstFile;
    unsigned int readTimeMs = 0;
    unsigned int writeTimeMs = 0;

    // Open Existing file
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   149b6:	4601      	mov	r1, r0
   149b8:	2201      	movs	r2, #1
   149ba:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29
{
   149bc:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   149be:	f7fe f8e5 	bl	12b8c <f_open>
   149c2:	4682      	mov	sl, r0
   149c4:	b950      	cbnz	r0, 149dc <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:42
        return status;
    }

    // Open new file - overwrite if one exists
    if (FR_OK != (status = f_open(&dstFile, pNewFile, FA_CREATE_ALWAYS | FA_WRITE))) {
   149c6:	220a      	movs	r2, #10
   149c8:	4621      	mov	r1, r4
   149ca:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   149ce:	f7fe f8dd 	bl	12b8c <f_open>
   149d2:	4682      	mov	sl, r0
   149d4:	b138      	cbz	r0, 149e6 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:43
        f_close(&srcFile);
   149d6:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    if(0 != pBytesTransferred) {
        *pBytesTransferred = totalBytesTransferred;
    }

    f_close(&srcFile);
    f_close(&dstFile);
   149d8:	f7fe fb42 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:86

    return status;
}
   149dc:	4650      	mov	r0, sl
   149de:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   149e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   149e6:	466c      	mov	r4, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:51
    unsigned int totalBytesTransferred = 0;
   149e8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:34
    unsigned int writeTimeMs = 0;
   149ea:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:33
    unsigned int readTimeMs = 0;
   149ec:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   149ee:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:50
    unsigned int bytesWritten = 0;
   149f0:	9001      	str	r0, [sp, #4]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   149f2:	f7fb fd53 	bl	1049c <sys_get_uptime_us>
   149f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   149fa:	2300      	movs	r3, #0
   149fc:	f008 fe3e 	bl	1d67c <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
        if(FR_OK != (status = f_read(&srcFile, buffer, sizeof(buffer), &bytesRead)) ||
   14a00:	4623      	mov	r3, r4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a02:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
   14a04:	f44f 7200 	mov.w	r2, #512	; 0x200
   14a08:	a902      	add	r1, sp, #8
   14a0a:	a882      	add	r0, sp, #520	; 0x208
   14a0c:	f7fe f955 	bl	12cba <f_read>
   14a10:	4682      	mov	sl, r0
   14a12:	b908      	cbnz	r0, 14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56 (discriminator 2)
   14a14:	6822      	ldr	r2, [r4, #0]
   14a16:	b99a      	cbnz	r2, 14a40 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:72
    if(0 != pReadTime) {
   14a18:	f1b8 0f00 	cmp.w	r8, #0
   14a1c:	d001      	beq.n	14a22 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:73
        *pReadTime = readTimeMs;
   14a1e:	f8c8 7000 	str.w	r7, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:75
    if(0 != pWriteTime) {
   14a22:	f1b9 0f00 	cmp.w	r9, #0
   14a26:	d001      	beq.n	14a2c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:76
        *pWriteTime = writeTimeMs;
   14a28:	f8c9 6000 	str.w	r6, [r9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:78
    if(0 != pBytesTransferred) {
   14a2c:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   14a30:	b103      	cbz	r3, 14a34 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:79
        *pBytesTransferred = totalBytesTransferred;
   14a32:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:82
    f_close(&srcFile);
   14a34:	a882      	add	r0, sp, #520	; 0x208
   14a36:	f7fe fb13 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    f_close(&dstFile);
   14a3a:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14a3e:	e7cb      	b.n	149d8 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x2e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a40:	f7fb fd2c 	bl	1049c <sys_get_uptime_us>
   14a44:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a48:	2300      	movs	r3, #0
   14a4a:	f008 fe17 	bl	1d67c <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:60
        readTimeMs += sys_get_uptime_ms() - startTime;
   14a4e:	ebb0 000b 	subs.w	r0, r0, fp
   14a52:	4407      	add	r7, r0
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a54:	f7fb fd22 	bl	1049c <sys_get_uptime_us>
   14a58:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a5c:	2300      	movs	r3, #0
   14a5e:	f008 fe0d 	bl	1d67c <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
        if(FR_OK != (status = f_write(&dstFile, buffer, bytesRead, &bytesWritten)) ||
   14a62:	ab01      	add	r3, sp, #4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a64:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
   14a66:	6822      	ldr	r2, [r4, #0]
   14a68:	a902      	add	r1, sp, #8
   14a6a:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14a6e:	f7fe f9dc 	bl	12e2a <f_write>
   14a72:	4682      	mov	sl, r0
   14a74:	2800      	cmp	r0, #0
   14a76:	d1cf      	bne.n	14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63 (discriminator 2)
   14a78:	9901      	ldr	r1, [sp, #4]
   14a7a:	6822      	ldr	r2, [r4, #0]
   14a7c:	4291      	cmp	r1, r2
   14a7e:	d1cb      	bne.n	14a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14a80:	f7fb fd0c 	bl	1049c <sys_get_uptime_us>
   14a84:	2300      	movs	r3, #0
   14a86:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14a8a:	f008 fdf7 	bl	1d67c <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14a8e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:67
        writeTimeMs += sys_get_uptime_ms() - startTime;
   14a90:	ebb0 000b 	subs.w	r0, r0, fp
   14a94:	4406      	add	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14a96:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:70
    }
   14a98:	e7ab      	b.n	149f2 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x48>

00014a9a <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   14a9a:	b5f0      	push	{r4, r5, r6, r7, lr}
   14a9c:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   14a9e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   14aa0:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14aa4:	460e      	mov	r6, r1
   14aa6:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14aa8:	4601      	mov	r1, r0
   14aaa:	2201      	movs	r2, #1
   14aac:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   14aae:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14ab0:	f7fe f86c 	bl	12b8c <f_open>
   14ab4:	4604      	mov	r4, r0
   14ab6:	b970      	cbnz	r0, 14ad6 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   14ab8:	b11d      	cbz	r5, 14ac2 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   14aba:	4629      	mov	r1, r5
   14abc:	a801      	add	r0, sp, #4
   14abe:	f7fe fae1 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   14ac2:	466b      	mov	r3, sp
   14ac4:	463a      	mov	r2, r7
   14ac6:	4631      	mov	r1, r6
   14ac8:	a801      	add	r0, sp, #4
   14aca:	f7fe f8f6 	bl	12cba <f_read>
   14ace:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   14ad0:	a801      	add	r0, sp, #4
   14ad2:	f7fe fac5 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   14ad6:	4620      	mov	r0, r4
   14ad8:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14adc:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014ade <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108

FRESULT Storage::write(const char* pFilename, void* pData, unsigned int bytesToWrite, unsigned int offset)
{
   14ade:	b5f0      	push	{r4, r5, r6, r7, lr}
   14ae0:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14ae2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108
{
   14ae4:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14ae8:	460e      	mov	r6, r1
   14aea:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113

    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14aec:	4601      	mov	r1, r0
   14aee:	220a      	movs	r2, #10
   14af0:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    unsigned int bytesWritten = 0;
   14af2:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113
    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14af4:	f7fe f84a 	bl	12b8c <f_open>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:114
    if(FR_OK == status)
   14af8:	4604      	mov	r4, r0
   14afa:	b970      	cbnz	r0, 14b1a <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:116
    {
        if(offset) {
   14afc:	b11d      	cbz	r5, 14b06 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:117
            f_lseek(&file, offset);
   14afe:	4629      	mov	r1, r5
   14b00:	a801      	add	r0, sp, #4
   14b02:	f7fe fabf 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:119
        }
        status = f_write(&file, pData, bytesToWrite, &bytesWritten);
   14b06:	466b      	mov	r3, sp
   14b08:	463a      	mov	r2, r7
   14b0a:	4631      	mov	r1, r6
   14b0c:	a801      	add	r0, sp, #4
   14b0e:	f7fe f98c 	bl	12e2a <f_write>
   14b12:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:120
        f_close(&file);
   14b14:	a801      	add	r0, sp, #4
   14b16:	f7fe faa3 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:124
    }

    return status;
}
   14b1a:	4620      	mov	r0, r4
   14b1c:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14b20:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014b22 <Storage::append(char const*, void const*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPKvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127

FRESULT Storage::append(const char* pFilename, const void* pData, unsigned int bytesToAppend, unsigned int offset)
{
   14b22:	b5f0      	push	{r4, r5, r6, r7, lr}
   14b24:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14b26:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127
{
   14b28:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14b2c:	460e      	mov	r6, r1
   14b2e:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14b30:	4601      	mov	r1, r0
   14b32:	2212      	movs	r2, #18
   14b34:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    unsigned int bytesWritten = 0;
   14b36:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14b38:	f7fe f828 	bl	12b8c <f_open>
   14b3c:	4604      	mov	r4, r0
   14b3e:	b970      	cbnz	r0, 14b5e <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:135
    {
        if(offset > 0) {
   14b40:	b18d      	cbz	r5, 14b66 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:136
            f_lseek(&file, offset);
   14b42:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
        }
        else {
            f_lseek(&file, f_size(&file));
   14b44:	a801      	add	r0, sp, #4
   14b46:	f7fe fa9d 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:142
        }

        status = f_write(&file, pData, bytesToAppend, &bytesWritten);
   14b4a:	466b      	mov	r3, sp
   14b4c:	463a      	mov	r2, r7
   14b4e:	4631      	mov	r1, r6
   14b50:	a801      	add	r0, sp, #4
   14b52:	f7fe f96a 	bl	12e2a <f_write>
   14b56:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:144

        f_close(&file);
   14b58:	a801      	add	r0, sp, #4
   14b5a:	f7fe fa81 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:148
    }

    return status;
}
   14b5e:	4620      	mov	r0, r4
   14b60:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
            f_lseek(&file, f_size(&file));
   14b66:	9904      	ldr	r1, [sp, #16]
   14b68:	e7ec      	b.n	14b44 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x22>

00014b6a <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   14b6a:	4613      	mov	r3, r2
   14b6c:	460a      	mov	r2, r1
   14b6e:	7901      	ldrb	r1, [r0, #4]
   14b70:	6800      	ldr	r0, [r0, #0]
   14b72:	f002 bd2e 	b.w	175d2 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

00014b76 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   14b76:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   14b78:	2200      	movs	r2, #0
   14b7a:	ab04      	add	r3, sp, #16
   14b7c:	f823 2d04 	strh.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   14b80:	2202      	movs	r2, #2
   14b82:	7904      	ldrb	r4, [r0, #4]
   14b84:	9200      	str	r2, [sp, #0]
   14b86:	6800      	ldr	r0, [r0, #0]
   14b88:	460a      	mov	r2, r1
   14b8a:	4621      	mov	r1, r4
   14b8c:	f002 fd0a 	bl	175a4 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   14b90:	f89d 000c 	ldrb.w	r0, [sp, #12]
   14b94:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   14b98:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14b9c:	b004      	add	sp, #16
   14b9e:	bd10      	pop	{r4, pc}

00014ba0 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   14ba0:	b510      	push	{r4, lr}
   14ba2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   14ba4:	2219      	movs	r2, #25
   14ba6:	212a      	movs	r1, #42	; 0x2a
   14ba8:	f7ff ffdf 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14bac:	220d      	movs	r2, #13
   14bae:	7921      	ldrb	r1, [r4, #4]
   14bb0:	6820      	ldr	r0, [r4, #0]
   14bb2:	f002 fce3 	bl	1757c <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   14bb6:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   14bba:	4258      	negs	r0, r3
   14bbc:	4158      	adcs	r0, r3
   14bbe:	bd10      	pop	{r4, pc}

00014bc0 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   14bc0:	4a04      	ldr	r2, [pc, #16]	; (14bd4 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   14bc2:	8813      	ldrh	r3, [r2, #0]
   14bc4:	2b1f      	cmp	r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   14bc6:	bfdf      	itttt	le
   14bc8:	1c58      	addle	r0, r3, #1
   14bca:	8010      	strhle	r0, [r2, #0]
   14bcc:	4a02      	ldrle	r2, [pc, #8]	; (14bd8 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   14bce:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   14bd2:	4770      	bx	lr
   14bd4:	2007c4f0 	.word	0x2007c4f0
   14bd8:	2007c470 	.word	0x2007c470

00014bdc <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   14bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   14bde:	4e15      	ldr	r6, [pc, #84]	; (14c34 <IR_Sensor::decodeIrCode()+0x58>)
   14be0:	8833      	ldrh	r3, [r6, #0]
   14be2:	2b01      	cmp	r3, #1
   14be4:	dd23      	ble.n	14c2e <IR_Sensor::decodeIrCode()+0x52>
   14be6:	4a14      	ldr	r2, [pc, #80]	; (14c38 <IR_Sensor::decodeIrCode()+0x5c>)
   14be8:	2000      	movs	r0, #0
   14bea:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   14bec:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   14bee:	4298      	cmp	r0, r3
   14bf0:	da08      	bge.n	14c04 <IR_Sensor::decodeIrCode()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   14bf2:	f852 1f04 	ldr.w	r1, [r2, #4]!
   14bf6:	3001      	adds	r0, #1
   14bf8:	f852 4c04 	ldr.w	r4, [r2, #-4]
   14bfc:	1b09      	subs	r1, r1, r4
   14bfe:	f842 1c04 	str.w	r1, [r2, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   14c02:	e7f4      	b.n	14bee <IR_Sensor::decodeIrCode()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14c04:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   14c06:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   14c0a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14c0c:	6868      	ldr	r0, [r5, #4]
   14c0e:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14c12:	b28a      	uxth	r2, r1
   14c14:	4293      	cmp	r3, r2
   14c16:	dd08      	ble.n	14c2a <IR_Sensor::decodeIrCode()+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   14c18:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   14c1c:	3101      	adds	r1, #1
   14c1e:	42b8      	cmp	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   14c20:	bf3c      	itt	cc
   14c22:	fa0e f202 	lslcc.w	r2, lr, r2
   14c26:	4314      	orrcc	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14c28:	e7f3      	b.n	14c12 <IR_Sensor::decodeIrCode()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   14c2a:	4b04      	ldr	r3, [pc, #16]	; (14c3c <IR_Sensor::decodeIrCode()+0x60>)
   14c2c:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   14c2e:	2300      	movs	r3, #0
   14c30:	8033      	strh	r3, [r6, #0]
   14c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14c34:	2007c4f0 	.word	0x2007c4f0
   14c38:	2007c470 	.word	0x2007c470
   14c3c:	2007c4f4 	.word	0x2007c4f4

00014c40 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   14c40:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   14c42:	2101      	movs	r1, #1
   14c44:	2002      	movs	r0, #2
   14c46:	f7fb fe69 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14c4a:	4b08      	ldr	r3, [pc, #32]	; (14c6c <IR_Sensor::init()+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   14c4c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14c4e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14c50:	f022 0207 	bic.w	r2, r2, #7
   14c54:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   14c56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14c58:	f042 0206 	orr.w	r2, r2, #6
   14c5c:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   14c5e:	4a04      	ldr	r2, [pc, #16]	; (14c70 <IR_Sensor::init()+0x30>)
   14c60:	68d3      	ldr	r3, [r2, #12]
   14c62:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   14c66:	60d3      	str	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   14c68:	bd08      	pop	{r3, pc}
   14c6a:	bf00      	nop
   14c6c:	40008000 	.word	0x40008000
   14c70:	4002c000 	.word	0x4002c000

00014c74 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   14c74:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c76:	4b04      	ldr	r3, [pc, #16]	; (14c88 <LED_Display::setLeftDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   14c78:	7141      	strb	r1, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c7a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14c7e:	5c5a      	ldrb	r2, [r3, r1]
   14c80:	2103      	movs	r1, #3
   14c82:	f7ff ff72 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
   14c86:	bd08      	pop	{r3, pc}
   14c88:	00025474 	.word	0x00025474

00014c8c <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14c8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c8e:	4b04      	ldr	r3, [pc, #16]	; (14ca0 <LED_Display::setRightDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   14c90:	7181      	strb	r1, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14c92:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14c96:	5c5a      	ldrb	r2, [r3, r1]
   14c98:	2102      	movs	r1, #2
   14c9a:	f7ff ff66 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
   14c9e:	bd08      	pop	{r3, pc}
   14ca0:	00025474 	.word	0x00025474

00014ca4 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   14ca4:	b538      	push	{r3, r4, r5, lr}
   14ca6:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   14ca8:	7901      	ldrb	r1, [r0, #4]
   14caa:	6800      	ldr	r0, [r0, #0]
   14cac:	f002 fca9 	bl	17602 <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   14cb0:	4605      	mov	r5, r0
   14cb2:	b188      	cbz	r0, 14cd8 <LED_Display::init()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   14cb4:	2200      	movs	r2, #0
   14cb6:	2106      	movs	r1, #6
   14cb8:	4620      	mov	r0, r4
   14cba:	f7ff ff56 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   14cbe:	2200      	movs	r2, #0
   14cc0:	2107      	movs	r1, #7
   14cc2:	4620      	mov	r0, r4
   14cc4:	f7ff ff51 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   14cc8:	212e      	movs	r1, #46	; 0x2e
   14cca:	4620      	mov	r0, r4
   14ccc:	f7ff ffd2 	bl	14c74 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   14cd0:	212e      	movs	r1, #46	; 0x2e
   14cd2:	4620      	mov	r0, r4
   14cd4:	f7ff ffda 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   14cd8:	4628      	mov	r0, r5
   14cda:	bd38      	pop	{r3, r4, r5, pc}

00014cdc <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14cdc:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14cde:	2464      	movs	r4, #100	; 0x64
   14ce0:	fbb1 f3f4 	udiv	r3, r1, r4
   14ce4:	fb03 1414 	mls	r4, r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14ce8:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14cea:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14cec:	fbb4 f5f1 	udiv	r5, r4, r1
   14cf0:	fb01 4115 	mls	r1, r1, r5, r4
   14cf4:	3130      	adds	r1, #48	; 0x30
   14cf6:	b2c9      	uxtb	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14cf8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14cfa:	f7ff ffc7 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   14cfe:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14d00:	bf88      	it	hi
   14d02:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   14d06:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   14d08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   14d0c:	bf94      	ite	ls
   14d0e:	2120      	movls	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14d10:	b2c9      	uxtbhi	r1, r1
   14d12:	f7ff bfaf 	b.w	14c74 <LED_Display::setLeftDigit(char)>

00014d16 <LED::init()>:
_ZN3LED4initEv():
   14d16:	2001      	movs	r0, #1
   14d18:	4770      	bx	lr
   14d1a:	Address 0x0000000000014d1a is out of bounds.


00014d1c <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   14d1c:	b538      	push	{r3, r4, r5, lr}
   14d1e:	460c      	mov	r4, r1
   14d20:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   14d22:	f003 fd09 	bl	18738 <vPortEnterCritical>
   14d26:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   14d28:	f004 030f 	and.w	r3, r4, #15
   14d2c:	702b      	strb	r3, [r5, #0]
   14d2e:	4b0e      	ldr	r3, [pc, #56]	; (14d68 <LED::setAll(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   14d30:	f014 0f01 	tst.w	r4, #1
   14d34:	bf14      	ite	ne
   14d36:	61da      	strne	r2, [r3, #28]
   14d38:	619a      	streq	r2, [r3, #24]
   14d3a:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   14d3c:	f014 0f02 	tst.w	r4, #2
   14d40:	bf14      	ite	ne
   14d42:	61da      	strne	r2, [r3, #28]
   14d44:	619a      	streq	r2, [r3, #24]
   14d46:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   14d48:	f014 0f04 	tst.w	r4, #4
   14d4c:	bf14      	ite	ne
   14d4e:	61da      	strne	r2, [r3, #28]
   14d50:	619a      	streq	r2, [r3, #24]
   14d52:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   14d56:	f014 0f08 	tst.w	r4, #8
   14d5a:	bf14      	ite	ne
   14d5c:	61da      	strne	r2, [r3, #28]
   14d5e:	619a      	streq	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   14d60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   14d64:	f003 bcf8 	b.w	18758 <vPortExitCritical>
   14d68:	2009c020 	.word	0x2009c020

00014d6c <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   14d6c:	2001      	movs	r0, #1
   14d6e:	4770      	bx	lr

00014d70 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   14d70:	2002      	movs	r0, #2
   14d72:	f003 b961 	b.w	18038 <adc0_get_reading>

00014d76 <Switches::init()>:
_ZN8Switches4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   14d76:	2001      	movs	r0, #1
   14d78:	4770      	bx	lr
   14d7a:	Address 0x0000000000014d7a is out of bounds.


00014d7c <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   14d7c:	4b04      	ldr	r3, [pc, #16]	; (14d90 <Switches::getSwitchValues()+0x14>)
   14d7e:	695b      	ldr	r3, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   14d80:	0b18      	lsrs	r0, r3, #12
   14d82:	f000 000c 	and.w	r0, r0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   14d86:	f3c3 2341 	ubfx	r3, r3, #9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   14d8a:	4318      	orrs	r0, r3
   14d8c:	4770      	bx	lr
   14d8e:	bf00      	nop
   14d90:	2009c020 	.word	0x2009c020

00014d94 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   14d94:	b510      	push	{r4, lr}
   14d96:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14d98:	2281      	movs	r2, #129	; 0x81
   14d9a:	2101      	movs	r1, #1
   14d9c:	f7ff fee5 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14da0:	2201      	movs	r2, #1
   14da2:	7921      	ldrb	r1, [r4, #4]
   14da4:	6820      	ldr	r0, [r4, #0]
   14da6:	f002 fbe9 	bl	1757c <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   14daa:	f010 0f60 	tst.w	r0, #96	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   14dae:	bf14      	ite	ne
   14db0:	2001      	movne	r0, #1
   14db2:	2000      	moveq	r0, #0
   14db4:	bd10      	pop	{r4, pc}

00014db6 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   14db6:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14db8:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   14dba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14dbc:	f7ff fedb 	bl	14b76 <i2c2_device::get16BitRegister(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14dc0:	2281      	movs	r2, #129	; 0x81
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14dc2:	b205      	sxth	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14dc4:	2101      	movs	r1, #1
   14dc6:	4620      	mov	r0, r4
   14dc8:	f7ff fecf 	bl	14b6a <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   14dcc:	2010      	movs	r0, #16
   14dce:	fb95 f0f0 	sdiv	r0, r5, r0
   14dd2:	f008 fa69 	bl	1d2a8 <__aeabi_i2f>
   14dd6:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   14dda:	f008 fab9 	bl	1d350 <__aeabi_fmul>
   14dde:	68a1      	ldr	r1, [r4, #8]
   14de0:	f008 f9ae 	bl	1d140 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   14de4:	bd38      	pop	{r3, r4, r5, pc}
   14de6:	Address 0x0000000000014de6 is out of bounds.


00014de8 <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   14de8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   14dea:	f7ff ffe4 	bl	14db6 <I2C_Temp::getCelsius()>
   14dee:	4905      	ldr	r1, [pc, #20]	; (14e04 <I2C_Temp::getFarenheit()+0x1c>)
   14df0:	f008 faae 	bl	1d350 <__aeabi_fmul>
   14df4:	4904      	ldr	r1, [pc, #16]	; (14e08 <I2C_Temp::getFarenheit()+0x20>)
   14df6:	f008 fb5f 	bl	1d4b8 <__aeabi_fdiv>
   14dfa:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   14dfe:	f008 f99f 	bl	1d140 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   14e02:	bd08      	pop	{r3, pc}
   14e04:	41100000 	.word	0x41100000
   14e08:	40a00000 	.word	0x40a00000

00014e0c <tlm_stream_for_each_component_var>:
tlm_stream_for_each_component_var():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:56

/**
 * Callback function for each component's variables
 */
static bool tlm_stream_for_each_component_var(void *elm_ptr, void *arg1, void *arg2, void *print_ascii)
{
   14e0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14e10:	4606      	mov	r6, r0
   14e12:	b0c1      	sub	sp, #260	; 0x104
   14e14:	4615      	mov	r5, r2
   14e16:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:64
    stream_callback_type stream = arg1;
    void *stream_arg = arg2;
    char *p = (char*)(var->data_ptr);
    uint32_t i = 0;

    if (NULL == stream || NULL == var) {
   14e18:	460c      	mov	r4, r1
   14e1a:	2900      	cmp	r1, #0
   14e1c:	d050      	beq.n	14ec0 <tlm_stream_for_each_component_var+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
        return false;
    }

    stream((var->name), stream_arg);
   14e1e:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:61
    char *p = (char*)(var->data_ptr);
   14e20:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
    stream((var->name), stream_arg);
   14e22:	6800      	ldr	r0, [r0, #0]
   14e24:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:69
    stream(":", stream_arg);
   14e26:	4629      	mov	r1, r5
   14e28:	4826      	ldr	r0, [pc, #152]	; (14ec4 <tlm_stream_for_each_component_var+0xb8>)
   14e2a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:70
    sprintf(buff, "%" PRIi32 ":", var->elm_size_bytes);
   14e2c:	68b2      	ldr	r2, [r6, #8]
   14e2e:	4926      	ldr	r1, [pc, #152]	; (14ec8 <tlm_stream_for_each_component_var+0xbc>)
   14e30:	4668      	mov	r0, sp
   14e32:	f00b f843 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:71
    stream(buff, stream_arg);
   14e36:	4629      	mov	r1, r5
   14e38:	4668      	mov	r0, sp
   14e3a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:72
    sprintf(buff, "%" PRIi32 ":", var->elm_arr_size);
   14e3c:	68f2      	ldr	r2, [r6, #12]
   14e3e:	4922      	ldr	r1, [pc, #136]	; (14ec8 <tlm_stream_for_each_component_var+0xbc>)
   14e40:	4668      	mov	r0, sp
   14e42:	f00b f83b 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:73
    stream(buff, stream_arg);
   14e46:	4629      	mov	r1, r5
   14e48:	4668      	mov	r0, sp
   14e4a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:74
    sprintf(buff, "%i:", var->elm_type);
   14e4c:	491f      	ldr	r1, [pc, #124]	; (14ecc <tlm_stream_for_each_component_var+0xc0>)
   14e4e:	7c32      	ldrb	r2, [r6, #16]
   14e50:	4668      	mov	r0, sp
   14e52:	f00b f833 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:75
    stream(buff, stream_arg);
   14e56:	4629      	mov	r1, r5
   14e58:	4668      	mov	r0, sp
   14e5a:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:77

    if (print_ascii)
   14e5c:	f1b8 0f00 	cmp.w	r8, #0
   14e60:	d00f      	beq.n	14e82 <tlm_stream_for_each_component_var+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:79
    {
        tlm_variable_print_value(var, buff, sizeof(buff));
   14e62:	4669      	mov	r1, sp
   14e64:	f44f 7280 	mov.w	r2, #256	; 0x100
   14e68:	4630      	mov	r0, r6
   14e6a:	f000 fb63 	bl	15534 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:80
        stream(buff, stream_arg);
   14e6e:	4629      	mov	r1, r5
   14e70:	4668      	mov	r0, sp
   14e72:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:96
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
            stream(buff, stream_arg);
        }
    }

    stream("\n", stream_arg);
   14e74:	4816      	ldr	r0, [pc, #88]	; (14ed0 <tlm_stream_for_each_component_var+0xc4>)
   14e76:	4629      	mov	r1, r5
   14e78:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:98

    return true;
   14e7a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:99
}
   14e7c:	b041      	add	sp, #260	; 0x104
   14e7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   14e82:	783a      	ldrb	r2, [r7, #0]
   14e84:	4913      	ldr	r1, [pc, #76]	; (14ed4 <tlm_stream_for_each_component_var+0xc8>)
   14e86:	4668      	mov	r0, sp
   14e88:	f00b f818 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:86
        stream(buff, stream_arg);
   14e8c:	4629      	mov	r1, r5
   14e8e:	4668      	mov	r0, sp
   14e90:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14e92:	68b3      	ldr	r3, [r6, #8]
   14e94:	68f6      	ldr	r6, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   14e96:	f8df 9040 	ldr.w	r9, [pc, #64]	; 14ed8 <tlm_stream_for_each_component_var+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14e9a:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   14e9c:	f107 0801 	add.w	r8, r7, #1
   14ea0:	3601      	adds	r6, #1
   14ea2:	eba6 0308 	sub.w	r3, r6, r8
   14ea6:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89 (discriminator 1)
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   14ea8:	2b01      	cmp	r3, #1
   14eaa:	d9e3      	bls.n	14e74 <tlm_stream_for_each_component_var+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   14eac:	4649      	mov	r1, r9
   14eae:	f818 2b01 	ldrb.w	r2, [r8], #1
   14eb2:	4668      	mov	r0, sp
   14eb4:	f00b f802 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:92
            stream(buff, stream_arg);
   14eb8:	4629      	mov	r1, r5
   14eba:	4668      	mov	r0, sp
   14ebc:	47a0      	blx	r4
   14ebe:	e7f0      	b.n	14ea2 <tlm_stream_for_each_component_var+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:65
        return false;
   14ec0:	4608      	mov	r0, r1
   14ec2:	e7db      	b.n	14e7c <tlm_stream_for_each_component_var+0x70>
   14ec4:	000264a8 	.word	0x000264a8
   14ec8:	000254f4 	.word	0x000254f4
   14ecc:	000254f9 	.word	0x000254f9
   14ed0:	00026c07 	.word	0x00026c07
   14ed4:	000254fe 	.word	0x000254fe
   14ed8:	000254fd 	.word	0x000254fd

00014edc <tlm_stream_file_ptr>:
tlm_stream_file_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:48
{
   14edc:	b570      	push	{r4, r5, r6, lr}
   14ede:	460d      	mov	r5, r1
   14ee0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   14ee2:	f00b f8cb 	bl	2007c <strlen>
   14ee6:	462b      	mov	r3, r5
   14ee8:	4602      	mov	r2, r0
   14eea:	2101      	movs	r1, #1
   14eec:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:50
}
   14eee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   14ef2:	f009 b93b 	b.w	1e16c <fwrite>
   14ef6:	Address 0x0000000000014ef6 is out of bounds.


00014ef8 <tlm_stream_one>:
tlm_stream_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:176
/**
 * Callback function for each component
 * @param sca  Stream callback argument
 */
void tlm_stream_one(tlm_component *comp, stream_callback_type stream, void *print_ascii, void *sca)
{
   14ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
   14efa:	460c      	mov	r4, r1
   14efc:	b087      	sub	sp, #28
   14efe:	4617      	mov	r7, r2
   14f00:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177
    if (NULL == comp || NULL == stream) {
   14f02:	4606      	mov	r6, r0
   14f04:	b348      	cbz	r0, 14f5a <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177 (discriminator 1)
   14f06:	b341      	cbz	r1, 14f5a <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:182
        return;
    }

    /* sca : stream callback argument */
    char buff[16] = { 0 };
   14f08:	2210      	movs	r2, #16
   14f0a:	2100      	movs	r1, #0
   14f0c:	a802      	add	r0, sp, #8
   14f0e:	f009 fb2f 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:183
    sprintf(buff, "%u\n", (unsigned int)c_list_node_count((comp->var_list)));
   14f12:	6870      	ldr	r0, [r6, #4]
   14f14:	f000 fda4 	bl	15a60 <c_list_node_count>
   14f18:	4911      	ldr	r1, [pc, #68]	; (14f60 <tlm_stream_one+0x68>)
   14f1a:	4602      	mov	r2, r0
   14f1c:	a802      	add	r0, sp, #8
   14f1e:	f00a ffcd 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:186

    /* Send: "START:<name>:<#>\n" */
    stream("START:", sca);
   14f22:	4629      	mov	r1, r5
   14f24:	480f      	ldr	r0, [pc, #60]	; (14f64 <tlm_stream_one+0x6c>)
   14f26:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:187
    stream(comp->name, sca);
   14f28:	4629      	mov	r1, r5
   14f2a:	6830      	ldr	r0, [r6, #0]
   14f2c:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:188
    stream(":", sca);
   14f2e:	4629      	mov	r1, r5
   14f30:	480d      	ldr	r0, [pc, #52]	; (14f68 <tlm_stream_one+0x70>)
   14f32:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:189
    stream(buff, sca);
   14f34:	4629      	mov	r1, r5
   14f36:	a802      	add	r0, sp, #8
   14f38:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:194

    /* Now for each variable list of this component, make a call-back to our
     * component for each function that will stream data of each variable
     */
    c_list_for_each_elm((comp->var_list), tlm_stream_for_each_component_var,
   14f3a:	9700      	str	r7, [sp, #0]
   14f3c:	462b      	mov	r3, r5
   14f3e:	4622      	mov	r2, r4
   14f40:	490a      	ldr	r1, [pc, #40]	; (14f6c <tlm_stream_one+0x74>)
   14f42:	6870      	ldr	r0, [r6, #4]
   14f44:	f000 fdd7 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:201
                        sca,        /* arg2 */
                        print_ascii /* arg3 */
                        );

    /* Send: "END:<name>\n" */
    stream("END:", sca);
   14f48:	4629      	mov	r1, r5
   14f4a:	4809      	ldr	r0, [pc, #36]	; (14f70 <tlm_stream_one+0x78>)
   14f4c:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:202
    stream((comp->name), sca);
   14f4e:	4629      	mov	r1, r5
   14f50:	6830      	ldr	r0, [r6, #0]
   14f52:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:203
    stream("\n", sca);
   14f54:	4629      	mov	r1, r5
   14f56:	4807      	ldr	r0, [pc, #28]	; (14f74 <tlm_stream_one+0x7c>)
   14f58:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:204
}
   14f5a:	b007      	add	sp, #28
   14f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14f5e:	bf00      	nop
   14f60:	00025e63 	.word	0x00025e63
   14f64:	00025503 	.word	0x00025503
   14f68:	000264a8 	.word	0x000264a8
   14f6c:	00014e0d 	.word	0x00014e0d
   14f70:	0002550a 	.word	0x0002550a
   14f74:	00026c07 	.word	0x00026c07

00014f78 <tlm_stream_all_args>:
tlm_stream_all_args():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:215
    stream_callback_type stream_func = args[0];
    void *user_arg = args[1];
    void *print_ascii_arg = args[2];

    /* Now pass the arguments to tlm_stream_one() */
    tlm_stream_one(comp_ptr, stream_func, print_ascii_arg, user_arg);
   14f78:	684b      	ldr	r3, [r1, #4]
   14f7a:	688a      	ldr	r2, [r1, #8]
   14f7c:	6809      	ldr	r1, [r1, #0]
   14f7e:	f7ff bfbb 	b.w	14ef8 <tlm_stream_one>
   14f82:	Address 0x0000000000014f82 is out of bounds.


00014f84 <tlm_stream_all>:
tlm_stream_all():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:219
}

void tlm_stream_all(stream_callback_type stream_func, void *arg, bool ascii)
{
   14f84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:224
    /* We need to pass 3 args, but only have 2 possible arguments that we can pass to
     * tlm_component_for_each() API, so use a double pointer here.
     */
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
    void *args[] = { (void*) stream_func, arg, print_ascii_arg };
   14f86:	9001      	str	r0, [sp, #4]
   14f88:	9102      	str	r1, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:223
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
   14f8a:	9203      	str	r2, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:232
     * Simply tell the telemetry component to call our call-back with our
     * stream function as the argument.  We will get the callback function
     * called with pointer to each telemetry component, along with our
     * argument which is the stream function itself
     */
    tlm_component_for_each((tlm_comp_callback)tlm_stream_all_args, args, NULL);
   14f8c:	a901      	add	r1, sp, #4
   14f8e:	2200      	movs	r2, #0
   14f90:	4802      	ldr	r0, [pc, #8]	; (14f9c <tlm_stream_all+0x18>)
   14f92:	f000 f943 	bl	1521c <tlm_component_for_each>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:233
}
   14f96:	b005      	add	sp, #20
   14f98:	f85d fb04 	ldr.w	pc, [sp], #4
   14f9c:	00014f79 	.word	0x00014f79

00014fa0 <tlm_stream_one_file>:
tlm_stream_one_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:238

void tlm_stream_one_file(tlm_component *comp_ptr, FILE *file)
{
    void * print_ascii = NULL; /* Do not print ASCII (print hex instead) */
    if(file) {
   14fa0:	460b      	mov	r3, r1
   14fa2:	b119      	cbz	r1, 14fac <tlm_stream_one_file+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:239
        tlm_stream_one(comp_ptr, tlm_stream_file_ptr, print_ascii, file);
   14fa4:	2200      	movs	r2, #0
   14fa6:	4902      	ldr	r1, [pc, #8]	; (14fb0 <tlm_stream_one_file+0x10>)
   14fa8:	f7ff bfa6 	b.w	14ef8 <tlm_stream_one>
   14fac:	4770      	bx	lr
   14fae:	bf00      	nop
   14fb0:	00014edd 	.word	0x00014edd

00014fb4 <tlm_stream_decode_file>:
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
                               );
    }
}

bool tlm_stream_decode_file(FILE *file)
{
   14fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fb8:	b0c9      	sub	sp, #292	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
     * A file can contain telemetry of multiple components so it may have
     * START ... END
     * START ... END
     * We will continue to decode till end of file.
     */
    char line[128] = { 0 };
   14fba:	ae08      	add	r6, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
{
   14fbc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
    char line[128] = { 0 };
   14fbe:	2280      	movs	r2, #128	; 0x80
   14fc0:	2100      	movs	r1, #0
   14fc2:	4630      	mov	r0, r6
   14fc4:	f009 fad4 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:270
    bool success = false;
   14fc8:	2400      	movs	r4, #0
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   14fca:	f8df a19c 	ldr.w	sl, [pc, #412]	; 15168 <tlm_stream_decode_file+0x1b4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:279
    while (fgets(line, sizeof(line)-1, file)) {
   14fce:	462a      	mov	r2, r5
   14fd0:	217f      	movs	r1, #127	; 0x7f
   14fd2:	4630      	mov	r0, r6
   14fd4:	f008 feb0 	bl	1dd38 <fgets>
   14fd8:	b918      	cbnz	r0, 14fe2 <tlm_stream_decode_file+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:310
        }
    } // fgets()

    /* success only changed to true if we got atleast one "START" in the file */
    return success;
}
   14fda:	4620      	mov	r0, r4
   14fdc:	b049      	add	sp, #292	; 0x124
   14fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:280
        if (line == strstr(line, "START:")) {
   14fe2:	4960      	ldr	r1, [pc, #384]	; (15164 <tlm_stream_decode_file+0x1b0>)
   14fe4:	4630      	mov	r0, r6
   14fe6:	f00b f8b2 	bl	2014e <strstr>
   14fea:	4286      	cmp	r6, r0
   14fec:	d1ef      	bne.n	14fce <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:281
            char *name = strstr(line, ":") + 1;
   14fee:	213a      	movs	r1, #58	; 0x3a
   14ff0:	f00b f824 	bl	2003c <strchr>
   14ff4:	f100 0801 	add.w	r8, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:282
            char *count = strstr(name, ":");
   14ff8:	213a      	movs	r1, #58	; 0x3a
   14ffa:	4640      	mov	r0, r8
   14ffc:	f00b f81e 	bl	2003c <strchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:283
            if (NULL != count) {
   15000:	4607      	mov	r7, r0
   15002:	2800      	cmp	r0, #0
   15004:	d0e3      	beq.n	14fce <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:284
                *count++ = '\0';
   15006:	2300      	movs	r3, #0
   15008:	7003      	strb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:285
                component = tlm_component_get_by_name(name);
   1500a:	4640      	mov	r0, r8
   1500c:	f000 f8be 	bl	1518c <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:286
                if (NULL != component) {
   15010:	9001      	str	r0, [sp, #4]
   15012:	2800      	cmp	r0, #0
   15014:	d0db      	beq.n	14fce <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:287
                    num_vars_in_stream = atoi(count);
   15016:	1c78      	adds	r0, r7, #1
   15018:	f008 fcbf 	bl	1d99a <atoi>
   1501c:	4680      	mov	r8, r0
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   1501e:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:297
        while (num_vars_in_stream > 0) {
   15022:	f1b8 0f00 	cmp.w	r8, #0
   15026:	d101      	bne.n	1502c <tlm_stream_decode_file+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:288
                    success = true;
   15028:	2401      	movs	r4, #1
   1502a:	e7d0      	b.n	14fce <tlm_stream_decode_file+0x1a>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   1502c:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   1502e:	2280      	movs	r2, #128	; 0x80
   15030:	2100      	movs	r1, #0
   15032:	4648      	mov	r0, r9
   15034:	f009 fa9c 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   15038:	4627      	mov	r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:111
        int c = fgetc(file);
   1503a:	4628      	mov	r0, r5
   1503c:	f008 fe12 	bl	1dc64 <fgetc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:112
        if (c == EOF) {
   15040:	1c43      	adds	r3, r0, #1
   15042:	d019      	beq.n	15078 <tlm_stream_decode_file+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:115
        if (c == ':' && (++colon_count) >= colon_count_of_hex_data) {
   15044:	283a      	cmp	r0, #58	; 0x3a
   15046:	d119      	bne.n	1507c <tlm_stream_decode_file+0xc8>
   15048:	3701      	adds	r7, #1
   1504a:	2f03      	cmp	r7, #3
   1504c:	dd16      	ble.n	1507c <tlm_stream_decode_file+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   1504e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15050:	aa07      	add	r2, sp, #28
   15052:	4651      	mov	r1, sl
   15054:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   15056:	9407      	str	r4, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15058:	f00b fee7 	bl	20e2a <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   1505c:	aa07      	add	r2, sp, #28
   1505e:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15060:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   15062:	4620      	mov	r0, r4
   15064:	f00b fee1 	bl	20e2a <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   15068:	aa07      	add	r2, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   1506a:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   1506c:	4651      	mov	r1, sl
   1506e:	4620      	mov	r0, r4
   15070:	f00b fedb 	bl	20e2a <strtok_r>
   15074:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   15076:	b93f      	cbnz	r7, 15088 <tlm_stream_decode_file+0xd4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:303
                return success;
   15078:	2400      	movs	r4, #0
   1507a:	e7ae      	b.n	14fda <tlm_stream_decode_file+0x26>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:118
        header[i] = c;
   1507c:	f809 0004 	strb.w	r0, [r9, r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:110
    for ( ; i < sizeof(header)-1; i++) {
   15080:	3401      	adds	r4, #1
   15082:	2c7f      	cmp	r4, #127	; 0x7f
   15084:	d1d9      	bne.n	1503a <tlm_stream_decode_file+0x86>
   15086:	e7e2      	b.n	1504e <tlm_stream_decode_file+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   15088:	f1bb 0f00 	cmp.w	fp, #0
   1508c:	d0f4      	beq.n	15078 <tlm_stream_decode_file+0xc4>
   1508e:	2800      	cmp	r0, #0
   15090:	d0f2      	beq.n	15078 <tlm_stream_decode_file+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   15092:	4658      	mov	r0, fp
   15094:	f008 fc81 	bl	1d99a <atoi>
   15098:	4683      	mov	fp, r0
   1509a:	4620      	mov	r0, r4
   1509c:	f008 fc7d 	bl	1d99a <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   150a0:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   150a2:	fb00 fb0b 	mul.w	fp, r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   150a6:	9801      	ldr	r0, [sp, #4]
   150a8:	f000 f922 	bl	152f0 <tlm_variable_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   150ac:	b180      	cbz	r0, 150d0 <tlm_stream_decode_file+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:136
        (reg_var->elm_size_bytes) * (reg_var->elm_arr_size) == exp_byte_cnt)
   150ae:	6882      	ldr	r2, [r0, #8]
   150b0:	68c3      	ldr	r3, [r0, #12]
   150b2:	4353      	muls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   150b4:	459b      	cmp	fp, r3
   150b6:	d10b      	bne.n	150d0 <tlm_stream_decode_file+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:138
        char *dst = (char*)(reg_var->data_ptr);
   150b8:	6847      	ldr	r7, [r0, #4]
   150ba:	eb07 030b 	add.w	r3, r7, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:139
        int terminator = EOF;
   150be:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
   150c2:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:141
        for ( ; exp_byte_cnt != 0; --exp_byte_cnt) {
   150c4:	9b03      	ldr	r3, [sp, #12]
   150c6:	429f      	cmp	r7, r3
   150c8:	d105      	bne.n	150d6 <tlm_stream_decode_file+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:159
        if ('\n' != terminator) {
   150ca:	f1bb 0f0a 	cmp.w	fp, #10
   150ce:	d1d3      	bne.n	15078 <tlm_stream_decode_file+0xc4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:299
                --num_vars_in_stream;
   150d0:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   150d4:	e7a5      	b.n	15022 <tlm_stream_decode_file+0x6e>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:142
            char byte1 = fgetc(file);
   150d6:	4628      	mov	r0, r5
   150d8:	f008 fdc4 	bl	1dc64 <fgetc>
   150dc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:143
            char byte2 = fgetc(file);
   150de:	4628      	mov	r0, r5
   150e0:	f008 fdc0 	bl	1dc64 <fgetc>
   150e4:	9002      	str	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   150e6:	4628      	mov	r0, r5
   150e8:	f008 fdbc 	bl	1dc64 <fgetc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   150ec:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   150f0:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   150f2:	d0c1      	beq.n	15078 <tlm_stream_decode_file+0xc4>
hex_to_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:36
    if (isdigit(d1)) value += d1 - '0';
   150f4:	f009 f966 	bl	1e3c4 <__locale_ctype_ptr>
   150f8:	b2e3      	uxtb	r3, r4
   150fa:	1c5a      	adds	r2, r3, #1
   150fc:	5c81      	ldrb	r1, [r0, r2]
   150fe:	0748      	lsls	r0, r1, #29
   15100:	d512      	bpl.n	15128 <tlm_stream_decode_file+0x174>
   15102:	3c30      	subs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15104:	f009 f95e 	bl	1e3c4 <__locale_ctype_ptr>
   15108:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   1510c:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   1510e:	1c5a      	adds	r2, r3, #1
   15110:	5c81      	ldrb	r1, [r0, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   15112:	0124      	lsls	r4, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15114:	0749      	lsls	r1, r1, #29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   15116:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15118:	d515      	bpl.n	15146 <tlm_stream_decode_file+0x192>
   1511a:	9b02      	ldr	r3, [sp, #8]
   1511c:	3b30      	subs	r3, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   1511e:	441c      	add	r4, r3
   15120:	b2e4      	uxtb	r4, r4
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:151
            memcpy(dst, &byte, sizeof(byte));
   15122:	f807 4b01 	strb.w	r4, [r7], #1
   15126:	e7cd      	b.n	150c4 <tlm_stream_decode_file+0x110>
   15128:	9305      	str	r3, [sp, #20]
   1512a:	9204      	str	r2, [sp, #16]
hex_to_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   1512c:	f009 f94a 	bl	1e3c4 <__locale_ctype_ptr>
   15130:	9a04      	ldr	r2, [sp, #16]
   15132:	9b05      	ldr	r3, [sp, #20]
   15134:	5c82      	ldrb	r2, [r0, r2]
   15136:	f002 0203 	and.w	r2, r2, #3
   1513a:	2a01      	cmp	r2, #1
   1513c:	bf08      	it	eq
   1513e:	3320      	addeq	r3, #32
   15140:	f1a3 0457 	sub.w	r4, r3, #87	; 0x57
   15144:	e7de      	b.n	15104 <tlm_stream_decode_file+0x150>
   15146:	9204      	str	r2, [sp, #16]
   15148:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   1514a:	f009 f93b 	bl	1e3c4 <__locale_ctype_ptr>
   1514e:	9a04      	ldr	r2, [sp, #16]
   15150:	9b02      	ldr	r3, [sp, #8]
   15152:	5c82      	ldrb	r2, [r0, r2]
   15154:	f002 0203 	and.w	r2, r2, #3
   15158:	2a01      	cmp	r2, #1
   1515a:	bf08      	it	eq
   1515c:	3320      	addeq	r3, #32
   1515e:	3b57      	subs	r3, #87	; 0x57
   15160:	e7dd      	b.n	1511e <tlm_stream_decode_file+0x16a>
   15162:	bf00      	nop
   15164:	00025503 	.word	0x00025503
   15168:	000264a8 	.word	0x000264a8

0001516c <tlm_component_for_each_callback>:
tlm_component_for_each_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:36
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
}

static bool tlm_component_for_each_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   1516c:	b510      	push	{r4, lr}
   1516e:	460c      	mov	r4, r1
   15170:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:38
    tlm_comp_callback callback = arg1;
    callback(elm_ptr, arg2, arg3);
   15172:	461a      	mov	r2, r3
   15174:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:40
    return true;
}
   15176:	2001      	movs	r0, #1
   15178:	bd10      	pop	{r4, pc}

0001517a <tlm_component_find_by_name>:
tlm_component_find_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29
{
   1517a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    return (0 != strcmp(comp->name, new_comp_name));
   1517c:	6800      	ldr	r0, [r0, #0]
   1517e:	f00a ff6b 	bl	20058 <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   15182:	3000      	adds	r0, #0
   15184:	bf18      	it	ne
   15186:	2001      	movne	r0, #1
   15188:	bd08      	pop	{r3, pc}
   1518a:	Address 0x000000000001518a is out of bounds.


0001518c <tlm_component_get_by_name>:
tlm_component_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   1518c:	b507      	push	{r0, r1, r2, lr}
   1518e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   15190:	b130      	cbz	r0, 151a0 <tlm_component_get_by_name+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   15192:	4602      	mov	r2, r0
   15194:	4804      	ldr	r0, [pc, #16]	; (151a8 <tlm_component_get_by_name+0x1c>)
   15196:	9300      	str	r3, [sp, #0]
   15198:	4904      	ldr	r1, [pc, #16]	; (151ac <tlm_component_get_by_name+0x20>)
   1519a:	6800      	ldr	r0, [r0, #0]
   1519c:	f000 fc95 	bl	15aca <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   151a0:	b003      	add	sp, #12
   151a2:	f85d fb04 	ldr.w	pc, [sp], #4
   151a6:	bf00      	nop
   151a8:	2007c4f8 	.word	0x2007c4f8
   151ac:	0001517b 	.word	0x0001517b

000151b0 <tlm_component_add>:
tlm_component_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   151b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   151b2:	4606      	mov	r6, r0
   151b4:	b910      	cbnz	r0, 151bc <tlm_component_add+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   151b6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   151b8:	4620      	mov	r0, r4
   151ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   151bc:	7803      	ldrb	r3, [r0, #0]
   151be:	2b00      	cmp	r3, #0
   151c0:	d0f9      	beq.n	151b6 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   151c2:	4d15      	ldr	r5, [pc, #84]	; (15218 <tlm_component_add+0x68>)
   151c4:	682b      	ldr	r3, [r5, #0]
   151c6:	b913      	cbnz	r3, 151ce <tlm_component_add+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   151c8:	f000 fc40 	bl	15a4c <c_list_create>
   151cc:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   151ce:	4630      	mov	r0, r6
   151d0:	f7ff ffdc 	bl	1518c <tlm_component_get_by_name>
   151d4:	4607      	mov	r7, r0
   151d6:	2800      	cmp	r0, #0
   151d8:	d1ed      	bne.n	151b6 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   151da:	2008      	movs	r0, #8
   151dc:	f009 f964 	bl	1e4a8 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   151e0:	4604      	mov	r4, r0
   151e2:	2800      	cmp	r0, #0
   151e4:	d0e7      	beq.n	151b6 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   151e6:	e880 00c0 	stmia.w	r0, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   151ea:	f000 fc2f 	bl	15a4c <c_list_create>
   151ee:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   151f0:	b918      	cbnz	r0, 151fa <tlm_component_add+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   151f2:	4620      	mov	r0, r4
   151f4:	f009 f960 	bl	1e4b8 <free>
   151f8:	e7dd      	b.n	151b6 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   151fa:	6828      	ldr	r0, [r5, #0]
   151fc:	4621      	mov	r1, r4
   151fe:	f000 fc32 	bl	15a66 <c_list_insert_elm_end>
   15202:	4605      	mov	r5, r0
   15204:	2800      	cmp	r0, #0
   15206:	d1d7      	bne.n	151b8 <tlm_component_add+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   15208:	6860      	ldr	r0, [r4, #4]
   1520a:	f009 f955 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   1520e:	4620      	mov	r0, r4
   15210:	f009 f952 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   15214:	462c      	mov	r4, r5
   15216:	e7cf      	b.n	151b8 <tlm_component_add+0x8>
   15218:	2007c4f8 	.word	0x2007c4f8

0001521c <tlm_component_for_each>:
tlm_component_for_each():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:97

void tlm_component_for_each(tlm_comp_callback callback, void *arg1, void *arg2)
{
   1521c:	b507      	push	{r0, r1, r2, lr}
   1521e:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:103
    /*
     * c_list_for_each_elm() callback only has room for 3 arguments:
     * We only take 2 customer arguments because one of the argument is
     * our own callback
     */
    if (NULL != callback) {
   15220:	b130      	cbz	r0, 15230 <tlm_component_for_each+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:104
        c_list_for_each_elm(mp_tlm_component_list, tlm_component_for_each_callback,
   15222:	9200      	str	r2, [sp, #0]
   15224:	4602      	mov	r2, r0
   15226:	4804      	ldr	r0, [pc, #16]	; (15238 <tlm_component_for_each+0x1c>)
   15228:	4904      	ldr	r1, [pc, #16]	; (1523c <tlm_component_for_each+0x20>)
   1522a:	6800      	ldr	r0, [r0, #0]
   1522c:	f000 fc63 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:107
                            callback, arg1, arg2);
    }
}
   15230:	b003      	add	sp, #12
   15232:	f85d fb04 	ldr.w	pc, [sp], #4
   15236:	bf00      	nop
   15238:	2007c4f8 	.word	0x2007c4f8
   1523c:	0001516d 	.word	0x0001516d

00015240 <tlm_variable_check_dup>:
tlm_variable_check_dup():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:32


/** Private function of this file */
static bool tlm_variable_check_dup(void *elm_ptr, void *arg1,
                                     void *arg2, void *arg3)
{
   15240:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36
    tlm_reg_var_type *reg_var = elm_ptr;
    tlm_reg_var_type *new_var = arg1;

    return (reg_var->data_ptr != new_var->data_ptr &&
   15242:	6842      	ldr	r2, [r0, #4]
   15244:	684b      	ldr	r3, [r1, #4]
   15246:	429a      	cmp	r2, r3
   15248:	d007      	beq.n	1525a <tlm_variable_check_dup+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:37 (discriminator 1)
            0 != strcmp(reg_var->name, new_var->name)
   1524a:	6809      	ldr	r1, [r1, #0]
   1524c:	6800      	ldr	r0, [r0, #0]
   1524e:	f00a ff03 	bl	20058 <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36 (discriminator 1)
    return (reg_var->data_ptr != new_var->data_ptr &&
   15252:	3000      	adds	r0, #0
   15254:	bf18      	it	ne
   15256:	2001      	movne	r0, #1
   15258:	bd08      	pop	{r3, pc}
   1525a:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:39
            );
}
   1525c:	bd08      	pop	{r3, pc}

0001525e <tlm_component_find_callback>:
tlm_component_find_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:43

/** Private function of this file */
static bool tlm_component_find_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   1525e:	b508      	push	{r3, lr}
   15260:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:50
    const char *name = arg1;

    /* If we locate the name, make copy of the pointer, and return false
     * to stop iterating further through the list
     */
    return (0 != strcmp(name, reg_var->name));
   15262:	6801      	ldr	r1, [r0, #0]
   15264:	4618      	mov	r0, r3
   15266:	f00a fef7 	bl	20058 <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:51
}
   1526a:	3000      	adds	r0, #0
   1526c:	bf18      	it	ne
   1526e:	2001      	movne	r0, #1
   15270:	bd08      	pop	{r3, pc}
   15272:	Address 0x0000000000015272 is out of bounds.


00015274 <tlm_variable_register>:
tlm_variable_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:61
                             const char *name,
                             const void *data_ptr,
                             const uint16_t data_size,
                             const uint16_t arr_size,
                             tlm_type type)
{
   15274:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15278:	4689      	mov	r9, r1
   1527a:	4690      	mov	r8, r2
   1527c:	461f      	mov	r7, r3
   1527e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   15282:	4606      	mov	r6, r0
   15284:	b920      	cbnz	r0, 15290 <tlm_variable_register+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:63
        return false;
   15286:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:92
        free(new_var);
        return false;
    }

    return true;
}
   15288:	4628      	mov	r0, r5
   1528a:	b003      	add	sp, #12
   1528c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 1)
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   15290:	2900      	cmp	r1, #0
   15292:	d0f8      	beq.n	15286 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 2)
   15294:	2a00      	cmp	r2, #0
   15296:	d0f6      	beq.n	15286 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 3)
   15298:	2b00      	cmp	r3, #0
   1529a:	d0f4      	beq.n	15286 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:66
    tlm_reg_var_type *new_var = malloc(sizeof(tlm_reg_var_type));
   1529c:	2014      	movs	r0, #20
   1529e:	f009 f903 	bl	1e4a8 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:67
    if(NULL == new_var) {
   152a2:	4604      	mov	r4, r0
   152a4:	2800      	cmp	r0, #0
   152a6:	d0ee      	beq.n	15286 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   152a8:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   152ac:	2d00      	cmp	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   152ae:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   152b0:	bf08      	it	eq
   152b2:	2501      	moveq	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   152b4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   152b6:	60c5      	str	r5, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:74
    new_var->name = name;
   152b8:	f8c0 9000 	str.w	r9, [r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:75
    new_var->data_ptr = data_ptr;
   152bc:	f8c0 8004 	str.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:76
    new_var->elm_size_bytes = data_size;
   152c0:	6087      	str	r7, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   152c2:	9300      	str	r3, [sp, #0]
   152c4:	4602      	mov	r2, r0
   152c6:	4909      	ldr	r1, [pc, #36]	; (152ec <tlm_variable_register+0x78>)
   152c8:	6870      	ldr	r0, [r6, #4]
   152ca:	f000 fc14 	bl	15af6 <c_list_for_each_elm>
   152ce:	4605      	mov	r5, r0
   152d0:	b918      	cbnz	r0, 152da <tlm_variable_register+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:87
        free(new_var);
   152d2:	4620      	mov	r0, r4
   152d4:	f009 f8f0 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:88
        return false;
   152d8:	e7d6      	b.n	15288 <tlm_variable_register+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:86
    if (!c_list_insert_elm_end(comp_ptr->var_list, new_var)) {
   152da:	4621      	mov	r1, r4
   152dc:	6870      	ldr	r0, [r6, #4]
   152de:	f000 fbc2 	bl	15a66 <c_list_insert_elm_end>
   152e2:	4605      	mov	r5, r0
   152e4:	2800      	cmp	r0, #0
   152e6:	d1cf      	bne.n	15288 <tlm_variable_register+0x14>
   152e8:	e7f3      	b.n	152d2 <tlm_variable_register+0x5e>
   152ea:	bf00      	nop
   152ec:	00015241 	.word	0x00015241

000152f0 <tlm_variable_get_by_name>:
tlm_variable_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:95

const tlm_reg_var_type* tlm_variable_get_by_name(tlm_component *comp_ptr, const char *name)
{
   152f0:	b513      	push	{r0, r1, r4, lr}
   152f2:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97
    tlm_reg_var_type *reg_var = NULL;
    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   152f4:	b140      	cbz	r0, 15308 <tlm_variable_get_by_name+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 1)
   152f6:	b149      	cbz	r1, 1530c <tlm_variable_get_by_name+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 2)
   152f8:	780c      	ldrb	r4, [r1, #0]
   152fa:	2300      	movs	r3, #0
   152fc:	b144      	cbz	r4, 15310 <tlm_variable_get_by_name+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:98
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   152fe:	9300      	str	r3, [sp, #0]
   15300:	4904      	ldr	r1, [pc, #16]	; (15314 <tlm_variable_get_by_name+0x24>)
   15302:	6840      	ldr	r0, [r0, #4]
   15304:	f000 fbe1 	bl	15aca <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:102
                                  (void*)name, NULL, NULL);
    }
    return reg_var;
}
   15308:	b002      	add	sp, #8
   1530a:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:96
    tlm_reg_var_type *reg_var = NULL;
   1530c:	4608      	mov	r0, r1
   1530e:	e7fb      	b.n	15308 <tlm_variable_get_by_name+0x18>
   15310:	4620      	mov	r0, r4
   15312:	e7f9      	b.n	15308 <tlm_variable_get_by_name+0x18>
   15314:	0001525f 	.word	0x0001525f

00015318 <tlm_variable_get_by_comp_and_name>:
tlm_variable_get_by_comp_and_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:105

const tlm_reg_var_type* tlm_variable_get_by_comp_and_name(const char *comp_name, const char *name)
{
   15318:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1531a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:107
    tlm_reg_var_type *reg_var = NULL;
    tlm_component *comp_ptr = tlm_component_get_by_name(comp_name);
   1531c:	f7ff ff36 	bl	1518c <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109

    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   15320:	b148      	cbz	r0, 15336 <tlm_variable_get_by_comp_and_name+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 1)
   15322:	b155      	cbz	r5, 1533a <tlm_variable_get_by_comp_and_name+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 2)
   15324:	782c      	ldrb	r4, [r5, #0]
   15326:	2300      	movs	r3, #0
   15328:	b14c      	cbz	r4, 1533e <tlm_variable_get_by_comp_and_name+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:110
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   1532a:	9300      	str	r3, [sp, #0]
   1532c:	462a      	mov	r2, r5
   1532e:	4905      	ldr	r1, [pc, #20]	; (15344 <tlm_variable_get_by_comp_and_name+0x2c>)
   15330:	6840      	ldr	r0, [r0, #4]
   15332:	f000 fbca 	bl	15aca <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:115
                                  (void*)name, NULL, NULL);
    }

    return reg_var;
}
   15336:	b003      	add	sp, #12
   15338:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:106
    tlm_reg_var_type *reg_var = NULL;
   1533a:	4628      	mov	r0, r5
   1533c:	e7fb      	b.n	15336 <tlm_variable_get_by_comp_and_name+0x1e>
   1533e:	4620      	mov	r0, r4
   15340:	e7f9      	b.n	15336 <tlm_variable_get_by_comp_and_name+0x1e>
   15342:	bf00      	nop
   15344:	0001525f 	.word	0x0001525f

00015348 <tlm_variable_set_value>:
tlm_variable_set_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:118

bool tlm_variable_set_value(const char *comp_name, const char *name, const char *value)
{
   15348:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1534c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:119
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   1534e:	f7ff ffe3 	bl	15318 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:120
    if (NULL == reg_var) {
   15352:	4680      	mov	r8, r0
   15354:	2800      	cmp	r0, #0
   15356:	f000 80df 	beq.w	15518 <tlm_variable_set_value+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
            } else {                \
                ++value;            \
        }   }

    bool success = false;
    switch(reg_var->elm_type) {
   1535a:	f898 3010 	ldrb.w	r3, [r8, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   1535e:	3004      	adds	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   15360:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   15362:	c885      	ldmia	r0, {r0, r2, r7}
   15364:	fb07 0702 	mla	r7, r7, r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   15368:	2b07      	cmp	r3, #7
   1536a:	f200 80d5 	bhi.w	15518 <tlm_variable_set_value+0x1d0>
   1536e:	e8df f003 	tbb	[pc, r3]
   15372:	4b22      	.short	0x4b22
   15374:	95d3ab70 	.word	0x95d3ab70
   15378:	04d3      	.short	0x04d3
   1537a:	4605      	mov	r5, r0
   1537c:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186

        case tlm_bit_or_bool:
            dst = (void*)reg_var->data_ptr;
            while (dst < end) {
                success = true;
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   15380:	4e67      	ldr	r6, [pc, #412]	; (15520 <tlm_variable_set_value+0x1d8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:184
            while (dst < end) {
   15382:	42bd      	cmp	r5, r7
   15384:	d228      	bcs.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   15386:	4621      	mov	r1, r4
   15388:	4630      	mov	r0, r6
   1538a:	f00a fee0 	bl	2014e <strstr>
   1538e:	1a22      	subs	r2, r4, r0
   15390:	f8d8 3004 	ldr.w	r3, [r8, #4]
   15394:	4250      	negs	r0, r2
   15396:	4150      	adcs	r0, r2
   15398:	7018      	strb	r0, [r3, #0]
   1539a:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   1539c:	781a      	ldrb	r2, [r3, #0]
   1539e:	461c      	mov	r4, r3
   153a0:	3301      	adds	r3, #1
   153a2:	b112      	cbz	r2, 153aa <tlm_variable_set_value+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 4)
   153a4:	2a2c      	cmp	r2, #44	; 0x2c
   153a6:	d1f9      	bne.n	1539c <tlm_variable_set_value+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 1)
   153a8:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   153aa:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:185
                success = true;
   153ae:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   153b2:	441d      	add	r5, r3
   153b4:	e7e5      	b.n	15382 <tlm_variable_set_value+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   153b6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:141
            dst = (void*)reg_var->data_ptr;
   153b8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   153ba:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   153bc:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   153be:	f8df a164 	ldr.w	sl, [pc, #356]	; 15524 <tlm_variable_set_value+0x1dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   153c2:	f845 3d04 	str.w	r3, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   153c6:	42be      	cmp	r6, r7
   153c8:	d206      	bcs.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142 (discriminator 1)
   153ca:	462a      	mov	r2, r5
   153cc:	4651      	mov	r1, sl
   153ce:	4620      	mov	r0, r4
   153d0:	f00a fd98 	bl	1ff04 <siscanf>
   153d4:	2801      	cmp	r0, #1
   153d6:	d003      	beq.n	153e0 <tlm_variable_set_value+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:216
            success = false;
            break;
    }

    return success;
}
   153d8:	4648      	mov	r0, r9
   153da:	b002      	add	sp, #8
   153dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:143
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   153e0:	f8d8 2008 	ldr.w	r2, [r8, #8]
   153e4:	4629      	mov	r1, r5
   153e6:	4630      	mov	r0, r6
   153e8:	f009 f89d 	bl	1e526 <memcpy>
   153ec:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   153ee:	781a      	ldrb	r2, [r3, #0]
   153f0:	461c      	mov	r4, r3
   153f2:	3301      	adds	r3, #1
   153f4:	b112      	cbz	r2, 153fc <tlm_variable_set_value+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 4)
   153f6:	2a2c      	cmp	r2, #44	; 0x2c
   153f8:	d1f9      	bne.n	153ee <tlm_variable_set_value+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 1)
   153fa:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   153fc:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:144
                success = true;
   15400:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   15404:	441e      	add	r6, r3
   15406:	e7de      	b.n	153c6 <tlm_variable_set_value+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15408:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:153
            dst = (void*)reg_var->data_ptr;
   1540a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   1540c:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   1540e:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   15410:	f8df a114 	ldr.w	sl, [pc, #276]	; 15528 <tlm_variable_set_value+0x1e0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15414:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   15418:	42bd      	cmp	r5, r7
   1541a:	d2dd      	bcs.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154 (discriminator 1)
   1541c:	4632      	mov	r2, r6
   1541e:	4651      	mov	r1, sl
   15420:	4620      	mov	r0, r4
   15422:	f00a fd6f 	bl	1ff04 <siscanf>
   15426:	2801      	cmp	r0, #1
   15428:	d1d6      	bne.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:155
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   1542a:	f8d8 2008 	ldr.w	r2, [r8, #8]
   1542e:	4631      	mov	r1, r6
   15430:	4628      	mov	r0, r5
   15432:	f009 f878 	bl	1e526 <memcpy>
   15436:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   15438:	781a      	ldrb	r2, [r3, #0]
   1543a:	461c      	mov	r4, r3
   1543c:	3301      	adds	r3, #1
   1543e:	b112      	cbz	r2, 15446 <tlm_variable_set_value+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 4)
   15440:	2a2c      	cmp	r2, #44	; 0x2c
   15442:	d1f9      	bne.n	15438 <tlm_variable_set_value+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 1)
   15444:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   15446:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:156
                success = true;
   1544a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   1544e:	441d      	add	r5, r3
   15450:	e7e2      	b.n	15418 <tlm_variable_set_value+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   15452:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:165
            dst = (void*)reg_var->data_ptr;
   15456:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   15458:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   1545a:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 1552c <tlm_variable_set_value+0x1e4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   1545e:	f806 9d04 	strb.w	r9, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   15462:	42bd      	cmp	r5, r7
   15464:	d2b8      	bcs.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166 (discriminator 1)
   15466:	4632      	mov	r2, r6
   15468:	4651      	mov	r1, sl
   1546a:	4620      	mov	r0, r4
   1546c:	f00a fd4a 	bl	1ff04 <siscanf>
   15470:	2801      	cmp	r0, #1
   15472:	d1b1      	bne.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:167
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   15474:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15478:	4631      	mov	r1, r6
   1547a:	4628      	mov	r0, r5
   1547c:	f009 f853 	bl	1e526 <memcpy>
   15480:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   15482:	781a      	ldrb	r2, [r3, #0]
   15484:	461c      	mov	r4, r3
   15486:	3301      	adds	r3, #1
   15488:	b112      	cbz	r2, 15490 <tlm_variable_set_value+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 4)
   1548a:	2a2c      	cmp	r2, #44	; 0x2c
   1548c:	d1f9      	bne.n	15482 <tlm_variable_set_value+0x13a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 1)
   1548e:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   15490:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:168
                success = true;
   15494:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   15498:	441d      	add	r5, r3
   1549a:	e7e2      	b.n	15462 <tlm_variable_set_value+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:176
            memset((void*)reg_var->data_ptr, 0, reg_var->elm_size_bytes);
   1549c:	2100      	movs	r1, #0
   1549e:	f009 f867 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   154a2:	4620      	mov	r0, r4
   154a4:	f00a fdea 	bl	2007c <strlen>
   154a8:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   154ac:	f8d8 5004 	ldr.w	r5, [r8, #4]
   154b0:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   154b2:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   154b4:	4621      	mov	r1, r4
   154b6:	bf28      	it	cs
   154b8:	f103 32ff 	addcs.w	r2, r3, #4294967295	; 0xffffffff
   154bc:	4628      	mov	r0, r5
   154be:	f009 f832 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:179
            success = true;
   154c2:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:180
            break;
   154c6:	e787      	b.n	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   154c8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:199
            dst = (void*)reg_var->data_ptr;
   154ca:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   154cc:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   154d0:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   154d2:	f8df a05c 	ldr.w	sl, [pc, #92]	; 15530 <tlm_variable_set_value+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   154d6:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   154da:	42bd      	cmp	r5, r7
   154dc:	f4bf af7c 	bcs.w	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200 (discriminator 1)
   154e0:	4632      	mov	r2, r6
   154e2:	4651      	mov	r1, sl
   154e4:	4620      	mov	r0, r4
   154e6:	f00a fd0d 	bl	1ff04 <siscanf>
   154ea:	2801      	cmp	r0, #1
   154ec:	f47f af74 	bne.w	153d8 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:201
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   154f0:	f8d8 2008 	ldr.w	r2, [r8, #8]
   154f4:	4631      	mov	r1, r6
   154f6:	4628      	mov	r0, r5
   154f8:	f009 f815 	bl	1e526 <memcpy>
   154fc:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   154fe:	781a      	ldrb	r2, [r3, #0]
   15500:	461c      	mov	r4, r3
   15502:	3301      	adds	r3, #1
   15504:	b112      	cbz	r2, 1550c <tlm_variable_set_value+0x1c4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 4)
   15506:	2a2c      	cmp	r2, #44	; 0x2c
   15508:	d1f9      	bne.n	154fe <tlm_variable_set_value+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 1)
   1550a:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   1550c:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:202
                success = true;
   15510:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   15514:	441d      	add	r5, r3
   15516:	e7e0      	b.n	154da <tlm_variable_set_value+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:193
            success = false;
   15518:	f04f 0900 	mov.w	r9, #0
   1551c:	e75c      	b.n	153d8 <tlm_variable_set_value+0x90>
   1551e:	bf00      	nop
   15520:	000255c6 	.word	0x000255c6
   15524:	00025535 	.word	0x00025535
   15528:	0002556d 	.word	0x0002556d
   1552c:	0002558c 	.word	0x0002558c
   15530:	000255b9 	.word	0x000255b9

00015534 <tlm_variable_print_value>:
tlm_variable_print_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
            size_t curr_len = strlen(buffer);                       \
            snprintf(buffer+curr_len, len-curr_len, format, *data); \
        } do{ } while(0)

    bool success = false;
    switch(reg_var->elm_type) {
   15534:	7c03      	ldrb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   15536:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   1553a:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   1553c:	4605      	mov	r5, r0
   1553e:	460c      	mov	r4, r1
   15540:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   15542:	2b07      	cmp	r3, #7
   15544:	f200 81f7 	bhi.w	15936 <tlm_variable_print_value+0x402>
   15548:	e8df f013 	tbh	[pc, r3, lsl #1]
   1554c:	008b0008 	.word	0x008b0008
   15550:	0178010d 	.word	0x0178010d
   15554:	014701d4 	.word	0x014701d4
   15558:	014e012a 	.word	0x014e012a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:246
        case tlm_int:
        {
            success = true;
            if (1 == reg_var->elm_size_bytes) {
   1555c:	6883      	ldr	r3, [r0, #8]
   1555e:	2b01      	cmp	r3, #1
   15560:	d120      	bne.n	155a4 <tlm_variable_print_value+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:247
                int8_t *data = (int8_t*)(reg_var->data_ptr);
   15562:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:248
                snprintf(buffer, len, "int8:%i", *data);
   15564:	4aca      	ldr	r2, [pc, #808]	; (15890 <tlm_variable_print_value+0x35c>)
   15566:	f997 3000 	ldrsb.w	r3, [r7]
   1556a:	4631      	mov	r1, r6
   1556c:	4620      	mov	r0, r4
   1556e:	f00a fc71 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249
                tlm_variable_print_array(",%i", data, buffer);
   15572:	f8df 9354 	ldr.w	r9, [pc, #852]	; 158c8 <tlm_variable_print_value+0x394>
   15576:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 1)
   1557a:	eb07 0308 	add.w	r3, r7, r8
   1557e:	68ea      	ldr	r2, [r5, #12]
   15580:	b29b      	uxth	r3, r3
   15582:	4293      	cmp	r3, r2
   15584:	d303      	bcc.n	1558e <tlm_variable_print_value+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:322
        }

        case tlm_string:
        {
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
            success = true;
   15586:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:363
            success = false;
            break;
    }

    return success;
}
   15588:	b003      	add	sp, #12
   1558a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 3)
                tlm_variable_print_array(",%i", data, buffer);
   1558e:	4620      	mov	r0, r4
   15590:	f00a fd74 	bl	2007c <strlen>
   15594:	f917 3f01 	ldrsb.w	r3, [r7, #1]!
   15598:	1a31      	subs	r1, r6, r0
   1559a:	464a      	mov	r2, r9
   1559c:	4420      	add	r0, r4
   1559e:	f00a fc59 	bl	1fe54 <sniprintf>
   155a2:	e7ea      	b.n	1557a <tlm_variable_print_value+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:251
            else if (2 == reg_var->elm_size_bytes) {
   155a4:	2b02      	cmp	r3, #2
   155a6:	d11b      	bne.n	155e0 <tlm_variable_print_value+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:252
                int16_t *data = (int16_t*)(reg_var->data_ptr);
   155a8:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:253
                snprintf(buffer, len, "int16:%i", *data);
   155ac:	4ab9      	ldr	r2, [pc, #740]	; (15894 <tlm_variable_print_value+0x360>)
   155ae:	f9b8 3000 	ldrsh.w	r3, [r8]
   155b2:	4631      	mov	r1, r6
   155b4:	4620      	mov	r0, r4
   155b6:	f00a fc4d 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254
                tlm_variable_print_array(",%i", data, buffer);
   155ba:	2701      	movs	r7, #1
   155bc:	f8df 9308 	ldr.w	r9, [pc, #776]	; 158c8 <tlm_variable_print_value+0x394>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 1)
   155c0:	68eb      	ldr	r3, [r5, #12]
   155c2:	429f      	cmp	r7, r3
   155c4:	d2df      	bcs.n	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 3)
   155c6:	4620      	mov	r0, r4
   155c8:	f00a fd58 	bl	2007c <strlen>
   155cc:	3701      	adds	r7, #1
   155ce:	1a31      	subs	r1, r6, r0
   155d0:	f938 3f02 	ldrsh.w	r3, [r8, #2]!
   155d4:	464a      	mov	r2, r9
   155d6:	4420      	add	r0, r4
   155d8:	f00a fc3c 	bl	1fe54 <sniprintf>
   155dc:	b2bf      	uxth	r7, r7
   155de:	e7ef      	b.n	155c0 <tlm_variable_print_value+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:256
            else if (4 == reg_var->elm_size_bytes) {
   155e0:	2b04      	cmp	r3, #4
   155e2:	d11b      	bne.n	1561c <tlm_variable_print_value+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:257
                int32_t *data = (int32_t*)(reg_var->data_ptr);
   155e4:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:258
                snprintf(buffer, len, "int32:%" PRIi32, *data);
   155e8:	4aab      	ldr	r2, [pc, #684]	; (15898 <tlm_variable_print_value+0x364>)
   155ea:	f8d8 3000 	ldr.w	r3, [r8]
   155ee:	4631      	mov	r1, r6
   155f0:	4620      	mov	r0, r4
   155f2:	f00a fc2f 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259
                tlm_variable_print_array(",%"PRIi32, data, buffer);
   155f6:	2701      	movs	r7, #1
   155f8:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 158cc <tlm_variable_print_value+0x398>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 1)
   155fc:	68eb      	ldr	r3, [r5, #12]
   155fe:	429f      	cmp	r7, r3
   15600:	d2c1      	bcs.n	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 3)
   15602:	4620      	mov	r0, r4
   15604:	f00a fd3a 	bl	2007c <strlen>
   15608:	3701      	adds	r7, #1
   1560a:	1a31      	subs	r1, r6, r0
   1560c:	f858 3f04 	ldr.w	r3, [r8, #4]!
   15610:	464a      	mov	r2, r9
   15612:	4420      	add	r0, r4
   15614:	f00a fc1e 	bl	1fe54 <sniprintf>
   15618:	b2bf      	uxth	r7, r7
   1561a:	e7ef      	b.n	155fc <tlm_variable_print_value+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:261
            else if (8 == reg_var->elm_size_bytes) {
   1561c:	2b08      	cmp	r3, #8
   1561e:	f040 818a 	bne.w	15936 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:262
                int64_t *data = (int64_t*)(reg_var->data_ptr);
   15622:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:263
                snprintf(buffer, len, "int64:%"PRIi64, *data);
   15626:	4631      	mov	r1, r6
   15628:	e9d8 2300 	ldrd	r2, r3, [r8]
   1562c:	4620      	mov	r0, r4
   1562e:	e9cd 2300 	strd	r2, r3, [sp]
   15632:	4a9a      	ldr	r2, [pc, #616]	; (1589c <tlm_variable_print_value+0x368>)
   15634:	f00a fc0e 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264
                tlm_variable_print_array(",%"PRIi64, data, buffer);
   15638:	2701      	movs	r7, #1
   1563a:	f8df 9294 	ldr.w	r9, [pc, #660]	; 158d0 <tlm_variable_print_value+0x39c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 1)
   1563e:	68eb      	ldr	r3, [r5, #12]
   15640:	429f      	cmp	r7, r3
   15642:	d2a0      	bcs.n	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 3)
   15644:	4620      	mov	r0, r4
   15646:	f00a fd19 	bl	2007c <strlen>
   1564a:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   1564e:	1a31      	subs	r1, r6, r0
   15650:	e9cd 2300 	strd	r2, r3, [sp]
   15654:	4420      	add	r0, r4
   15656:	464a      	mov	r2, r9
   15658:	3701      	adds	r7, #1
   1565a:	f00a fbfb 	bl	1fe54 <sniprintf>
   1565e:	b2bf      	uxth	r7, r7
   15660:	e7ed      	b.n	1563e <tlm_variable_print_value+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:275
            if (1 == reg_var->elm_size_bytes) {
   15662:	6883      	ldr	r3, [r0, #8]
   15664:	2b01      	cmp	r3, #1
   15666:	d11c      	bne.n	156a2 <tlm_variable_print_value+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:276
                uint8_t *data = (uint8_t*)(reg_var->data_ptr);
   15668:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:277
                snprintf(buffer, len, "uint8:%u", *data);
   1566a:	4a8d      	ldr	r2, [pc, #564]	; (158a0 <tlm_variable_print_value+0x36c>)
   1566c:	783b      	ldrb	r3, [r7, #0]
   1566e:	4631      	mov	r1, r6
   15670:	4620      	mov	r0, r4
   15672:	f00a fbef 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278
                tlm_variable_print_array(",%u", data, buffer);
   15676:	f8df 925c 	ldr.w	r9, [pc, #604]	; 158d4 <tlm_variable_print_value+0x3a0>
   1567a:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 1)
   1567e:	eb07 0308 	add.w	r3, r7, r8
   15682:	68ea      	ldr	r2, [r5, #12]
   15684:	b29b      	uxth	r3, r3
   15686:	4293      	cmp	r3, r2
   15688:	f4bf af7d 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 3)
   1568c:	4620      	mov	r0, r4
   1568e:	f00a fcf5 	bl	2007c <strlen>
   15692:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   15696:	1a31      	subs	r1, r6, r0
   15698:	464a      	mov	r2, r9
   1569a:	4420      	add	r0, r4
   1569c:	f00a fbda 	bl	1fe54 <sniprintf>
   156a0:	e7ed      	b.n	1567e <tlm_variable_print_value+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:280
            else if (2 == reg_var->elm_size_bytes) {
   156a2:	2b02      	cmp	r3, #2
   156a4:	d11c      	bne.n	156e0 <tlm_variable_print_value+0x1ac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:281
                uint16_t *data = (uint16_t*)(reg_var->data_ptr);
   156a6:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:282
                snprintf(buffer, len, "uint16:%u", *data);
   156aa:	4a7e      	ldr	r2, [pc, #504]	; (158a4 <tlm_variable_print_value+0x370>)
   156ac:	f8b8 3000 	ldrh.w	r3, [r8]
   156b0:	4631      	mov	r1, r6
   156b2:	4620      	mov	r0, r4
   156b4:	f00a fbce 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283
                tlm_variable_print_array(",%u", data, buffer);
   156b8:	2701      	movs	r7, #1
   156ba:	f8df 9218 	ldr.w	r9, [pc, #536]	; 158d4 <tlm_variable_print_value+0x3a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 1)
   156be:	68eb      	ldr	r3, [r5, #12]
   156c0:	429f      	cmp	r7, r3
   156c2:	f4bf af60 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 3)
   156c6:	4620      	mov	r0, r4
   156c8:	f00a fcd8 	bl	2007c <strlen>
   156cc:	3701      	adds	r7, #1
   156ce:	1a31      	subs	r1, r6, r0
   156d0:	f838 3f02 	ldrh.w	r3, [r8, #2]!
   156d4:	464a      	mov	r2, r9
   156d6:	4420      	add	r0, r4
   156d8:	f00a fbbc 	bl	1fe54 <sniprintf>
   156dc:	b2bf      	uxth	r7, r7
   156de:	e7ee      	b.n	156be <tlm_variable_print_value+0x18a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:285
            else if (4 == reg_var->elm_size_bytes) {
   156e0:	2b04      	cmp	r3, #4
   156e2:	d11c      	bne.n	1571e <tlm_variable_print_value+0x1ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:286
                uint32_t *data = (uint32_t*)(reg_var->data_ptr);
   156e4:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:287
                snprintf(buffer, len, "uint32:%"PRIu32, *data);
   156e8:	4a6f      	ldr	r2, [pc, #444]	; (158a8 <tlm_variable_print_value+0x374>)
   156ea:	f8d8 3000 	ldr.w	r3, [r8]
   156ee:	4631      	mov	r1, r6
   156f0:	4620      	mov	r0, r4
   156f2:	f00a fbaf 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288
                tlm_variable_print_array(",%"PRIu32, data, buffer);
   156f6:	2701      	movs	r7, #1
   156f8:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 158d8 <tlm_variable_print_value+0x3a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 1)
   156fc:	68eb      	ldr	r3, [r5, #12]
   156fe:	429f      	cmp	r7, r3
   15700:	f4bf af41 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 3)
   15704:	4620      	mov	r0, r4
   15706:	f00a fcb9 	bl	2007c <strlen>
   1570a:	3701      	adds	r7, #1
   1570c:	1a31      	subs	r1, r6, r0
   1570e:	f858 3f04 	ldr.w	r3, [r8, #4]!
   15712:	464a      	mov	r2, r9
   15714:	4420      	add	r0, r4
   15716:	f00a fb9d 	bl	1fe54 <sniprintf>
   1571a:	b2bf      	uxth	r7, r7
   1571c:	e7ee      	b.n	156fc <tlm_variable_print_value+0x1c8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:290
            else if (8 == reg_var->elm_size_bytes) {
   1571e:	2b08      	cmp	r3, #8
   15720:	f040 8109 	bne.w	15936 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:291
                uint64_t *data = (uint64_t*)(reg_var->data_ptr);
   15724:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:292
                snprintf(buffer, len, "uint64:%"PRIu64, *data);
   15728:	4631      	mov	r1, r6
   1572a:	e9d8 2300 	ldrd	r2, r3, [r8]
   1572e:	4620      	mov	r0, r4
   15730:	e9cd 2300 	strd	r2, r3, [sp]
   15734:	4a5d      	ldr	r2, [pc, #372]	; (158ac <tlm_variable_print_value+0x378>)
   15736:	f00a fb8d 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293
                tlm_variable_print_array(",%"PRIu64, data, buffer);
   1573a:	2701      	movs	r7, #1
   1573c:	f8df 919c 	ldr.w	r9, [pc, #412]	; 158dc <tlm_variable_print_value+0x3a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 1)
   15740:	68eb      	ldr	r3, [r5, #12]
   15742:	429f      	cmp	r7, r3
   15744:	f4bf af1f 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 3)
   15748:	4620      	mov	r0, r4
   1574a:	f00a fc97 	bl	2007c <strlen>
   1574e:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   15752:	1a31      	subs	r1, r6, r0
   15754:	e9cd 2300 	strd	r2, r3, [sp]
   15758:	4420      	add	r0, r4
   1575a:	464a      	mov	r2, r9
   1575c:	3701      	adds	r7, #1
   1575e:	f00a fb79 	bl	1fe54 <sniprintf>
   15762:	b2bf      	uxth	r7, r7
   15764:	e7ec      	b.n	15740 <tlm_variable_print_value+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:303
            char *data = (char*) (reg_var->data_ptr);
   15766:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:304
            snprintf(buffer, len, "char:%c", *data);
   15768:	4a51      	ldr	r2, [pc, #324]	; (158b0 <tlm_variable_print_value+0x37c>)
   1576a:	783b      	ldrb	r3, [r7, #0]
   1576c:	4631      	mov	r1, r6
   1576e:	4620      	mov	r0, r4
   15770:	f00a fb70 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305
            tlm_variable_print_array(",%c", data, buffer);
   15774:	f8df 9168 	ldr.w	r9, [pc, #360]	; 158e0 <tlm_variable_print_value+0x3ac>
   15778:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 1)
   1577c:	eb07 0308 	add.w	r3, r7, r8
   15780:	68ea      	ldr	r2, [r5, #12]
   15782:	b29b      	uxth	r3, r3
   15784:	4293      	cmp	r3, r2
   15786:	f4bf aefe 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 3)
   1578a:	4620      	mov	r0, r4
   1578c:	f00a fc76 	bl	2007c <strlen>
   15790:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   15794:	1a31      	subs	r1, r6, r0
   15796:	464a      	mov	r2, r9
   15798:	4420      	add	r0, r4
   1579a:	f00a fb5b 	bl	1fe54 <sniprintf>
   1579e:	e7ed      	b.n	1577c <tlm_variable_print_value+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:312
            char *data = (char*) (reg_var->data_ptr);
   157a0:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:313
            snprintf(buffer, len, "binary:%c", *data);
   157a2:	4a44      	ldr	r2, [pc, #272]	; (158b4 <tlm_variable_print_value+0x380>)
   157a4:	783b      	ldrb	r3, [r7, #0]
   157a6:	4631      	mov	r1, r6
   157a8:	4620      	mov	r0, r4
   157aa:	f00a fb53 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314
            tlm_variable_print_array("%c", data, buffer);
   157ae:	f8df 9134 	ldr.w	r9, [pc, #308]	; 158e4 <tlm_variable_print_value+0x3b0>
   157b2:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 1)
   157b6:	eb07 0308 	add.w	r3, r7, r8
   157ba:	68ea      	ldr	r2, [r5, #12]
   157bc:	b29b      	uxth	r3, r3
   157be:	4293      	cmp	r3, r2
   157c0:	f4bf aee1 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 3)
   157c4:	4620      	mov	r0, r4
   157c6:	f00a fc59 	bl	2007c <strlen>
   157ca:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   157ce:	1a31      	subs	r1, r6, r0
   157d0:	464a      	mov	r2, r9
   157d2:	4420      	add	r0, r4
   157d4:	f00a fb3e 	bl	1fe54 <sniprintf>
   157d8:	e7ed      	b.n	157b6 <tlm_variable_print_value+0x282>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:321
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
   157da:	6843      	ldr	r3, [r0, #4]
   157dc:	4a36      	ldr	r2, [pc, #216]	; (158b8 <tlm_variable_print_value+0x384>)
   157de:	4631      	mov	r1, r6
   157e0:	4620      	mov	r0, r4
   157e2:	f00a fb37 	bl	1fe54 <sniprintf>
   157e6:	e6ce      	b.n	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:328
            char *data = (char*) (reg_var->data_ptr);
   157e8:	f8d0 a004 	ldr.w	sl, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:329
            snprintf(buffer, len, "bool:%s", *data ? "true" : "false");
   157ec:	4f33      	ldr	r7, [pc, #204]	; (158bc <tlm_variable_print_value+0x388>)
   157ee:	f89a 3000 	ldrb.w	r3, [sl]
   157f2:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 158e8 <tlm_variable_print_value+0x3b4>
   157f6:	4a32      	ldr	r2, [pc, #200]	; (158c0 <tlm_variable_print_value+0x38c>)
   157f8:	2b00      	cmp	r3, #0
   157fa:	bf14      	ite	ne
   157fc:	463b      	movne	r3, r7
   157fe:	4643      	moveq	r3, r8
   15800:	4631      	mov	r1, r6
   15802:	4620      	mov	r0, r4
   15804:	f00a fb26 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330
            for (i=1; i < reg_var->elm_arr_size; i++) {
   15808:	46d1      	mov	r9, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   1580a:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 158ec <tlm_variable_print_value+0x3b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330 (discriminator 2)
            for (i=1; i < reg_var->elm_arr_size; i++) {
   1580e:	f1ca 0301 	rsb	r3, sl, #1
   15812:	444b      	add	r3, r9
   15814:	68ea      	ldr	r2, [r5, #12]
   15816:	b29b      	uxth	r3, r3
   15818:	4293      	cmp	r3, r2
   1581a:	f4bf aeb4 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:332
                size_t curr_len = strlen(buffer);
   1581e:	4620      	mov	r0, r4
   15820:	f00a fc2c 	bl	2007c <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   15824:	f819 3f01 	ldrb.w	r3, [r9, #1]!
   15828:	1a31      	subs	r1, r6, r0
   1582a:	2b00      	cmp	r3, #0
   1582c:	bf14      	ite	ne
   1582e:	463b      	movne	r3, r7
   15830:	4643      	moveq	r3, r8
   15832:	465a      	mov	r2, fp
   15834:	4420      	add	r0, r4
   15836:	f00a fb0d 	bl	1fe54 <sniprintf>
   1583a:	e7e8      	b.n	1580e <tlm_variable_print_value+0x2da>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:341
            float *data = (float*) (reg_var->data_ptr);
   1583c:	f8d0 9004 	ldr.w	r9, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15840:	2701      	movs	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:342
            snprintf(buffer, len, "float:%f", *data);
   15842:	f8d9 0000 	ldr.w	r0, [r9]
   15846:	f007 fbb1 	bl	1cfac <__aeabi_f2d>
   1584a:	4a1e      	ldr	r2, [pc, #120]	; (158c4 <tlm_variable_print_value+0x390>)
   1584c:	e9cd 0100 	strd	r0, r1, [sp]
   15850:	4631      	mov	r1, r6
   15852:	4620      	mov	r0, r4
   15854:	f00a fafe 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15858:	f8df a094 	ldr.w	sl, [pc, #148]	; 158f0 <tlm_variable_print_value+0x3bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 1)
   1585c:	68eb      	ldr	r3, [r5, #12]
   1585e:	429f      	cmp	r7, r3
   15860:	f4bf ae91 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 3)
   15864:	4620      	mov	r0, r4
   15866:	f00a fc09 	bl	2007c <strlen>
   1586a:	eba6 0b00 	sub.w	fp, r6, r0
   1586e:	eb04 0800 	add.w	r8, r4, r0
   15872:	f859 0f04 	ldr.w	r0, [r9, #4]!
   15876:	f007 fb99 	bl	1cfac <__aeabi_f2d>
   1587a:	3701      	adds	r7, #1
   1587c:	e9cd 0100 	strd	r0, r1, [sp]
   15880:	4652      	mov	r2, sl
   15882:	4659      	mov	r1, fp
   15884:	4640      	mov	r0, r8
   15886:	f00a fae5 	bl	1fe54 <sniprintf>
   1588a:	b2bf      	uxth	r7, r7
   1588c:	e7e6      	b.n	1585c <tlm_variable_print_value+0x328>
   1588e:	bf00      	nop
   15890:	00025515 	.word	0x00025515
   15894:	00025521 	.word	0x00025521
   15898:	0002552a 	.word	0x0002552a
   1589c:	00025539 	.word	0x00025539
   158a0:	0002554a 	.word	0x0002554a
   158a4:	00025557 	.word	0x00025557
   158a8:	00025561 	.word	0x00025561
   158ac:	00025571 	.word	0x00025571
   158b0:	00025583 	.word	0x00025583
   158b4:	0002558f 	.word	0x0002558f
   158b8:	00025599 	.word	0x00025599
   158bc:	000255c6 	.word	0x000255c6
   158c0:	000255a3 	.word	0x000255a3
   158c4:	000255af 	.word	0x000255af
   158c8:	0002551d 	.word	0x0002551d
   158cc:	00025534 	.word	0x00025534
   158d0:	00025544 	.word	0x00025544
   158d4:	00025553 	.word	0x00025553
   158d8:	0002556c 	.word	0x0002556c
   158dc:	0002557d 	.word	0x0002557d
   158e0:	0002558b 	.word	0x0002558b
   158e4:	0002558c 	.word	0x0002558c
   158e8:	0002550f 	.word	0x0002550f
   158ec:	000255ab 	.word	0x000255ab
   158f0:	000255b8 	.word	0x000255b8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:350
            double *data = (double*) (reg_var->data_ptr);
   158f4:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:351
            snprintf(buffer, len, "double:%f", *data);
   158f8:	4631      	mov	r1, r6
   158fa:	e9d8 2300 	ldrd	r2, r3, [r8]
   158fe:	4620      	mov	r0, r4
   15900:	e9cd 2300 	strd	r2, r3, [sp]
   15904:	4a0d      	ldr	r2, [pc, #52]	; (1593c <tlm_variable_print_value+0x408>)
   15906:	f00a faa5 	bl	1fe54 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352
            tlm_variable_print_array(",%f", data, buffer);
   1590a:	2701      	movs	r7, #1
   1590c:	f8df 9030 	ldr.w	r9, [pc, #48]	; 15940 <tlm_variable_print_value+0x40c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 1)
   15910:	68eb      	ldr	r3, [r5, #12]
   15912:	429f      	cmp	r7, r3
   15914:	f4bf ae37 	bcs.w	15586 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 3)
   15918:	4620      	mov	r0, r4
   1591a:	f00a fbaf 	bl	2007c <strlen>
   1591e:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   15922:	1a31      	subs	r1, r6, r0
   15924:	e9cd 2300 	strd	r2, r3, [sp]
   15928:	4420      	add	r0, r4
   1592a:	464a      	mov	r2, r9
   1592c:	3701      	adds	r7, #1
   1592e:	f00a fa91 	bl	1fe54 <sniprintf>
   15932:	b2bf      	uxth	r7, r7
   15934:	e7ec      	b.n	15910 <tlm_variable_print_value+0x3dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:267
                success = false;
   15936:	2000      	movs	r0, #0
   15938:	e626      	b.n	15588 <tlm_variable_print_value+0x54>
   1593a:	bf00      	nop
   1593c:	000255bc 	.word	0x000255bc
   15940:	000255b8 	.word	0x000255b8

00015944 <tlm_variable_get_value>:
tlm_variable_get_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:219
{
   15944:	b538      	push	{r3, r4, r5, lr}
   15946:	4614      	mov	r4, r2
   15948:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:220
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   1594a:	f7ff fce5 	bl	15318 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:223
    if (NULL != reg_var) {
   1594e:	b128      	cbz	r0, 1595c <tlm_variable_get_value+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15950:	462a      	mov	r2, r5
   15952:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   15954:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15958:	f7ff bdec 	b.w	15534 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   1595c:	bd38      	pop	{r3, r4, r5, pc}

0001595e <get_tlm_one_comp>:
get_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
 *                  the size of the telemetry in raw bytes
 * @param binary    If null, only the size of telemetry will be obtained.
 *                  If non-null, the telemetry will be saved into this data pointer.
 */
static void get_tlm_one_comp(tlm_component *comp_ptr, void *arg_size, void *binary)
{
   1595e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15962:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
{
   15964:	4607      	mov	r7, r0
   15966:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15968:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39
    tlm_reg_var_type *var = NULL;
    uint32_t *size = arg_size;
    uint32_t i = 0, sizeOfVar = 0;

    if (NULL != size && NULL != comp_ptr) {
   1596a:	460d      	mov	r5, r1
   1596c:	b129      	cbz	r1, 1597a <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39 (discriminator 1)
   1596e:	b120      	cbz	r0, 1597a <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15970:	6878      	ldr	r0, [r7, #4]
   15972:	f000 f875 	bl	15a60 <c_list_node_count>
   15976:	4284      	cmp	r4, r0
   15978:	d302      	bcc.n	15980 <get_tlm_one_comp+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:51
                }
                (*size) += sizeOfVar;
            }
        }
    }
}
   1597a:	b002      	add	sp, #8
   1597c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:41
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   15980:	aa01      	add	r2, sp, #4
   15982:	4621      	mov	r1, r4
   15984:	6878      	ldr	r0, [r7, #4]
   15986:	f000 f88a 	bl	15a9e <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:42
            if (NULL != var) {
   1598a:	b178      	cbz	r0, 159ac <get_tlm_one_comp+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:43
                sizeOfVar = (var->elm_arr_size) * (var->elm_size_bytes);
   1598c:	68c3      	ldr	r3, [r0, #12]
   1598e:	6886      	ldr	r6, [r0, #8]
   15990:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:44
                if (binary) {
   15992:	f1b8 0f00 	cmp.w	r8, #0
   15996:	d006      	beq.n	159a6 <get_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:45
                    memcpy(((char*)binary + (*size)), var->data_ptr, sizeOfVar);
   15998:	682b      	ldr	r3, [r5, #0]
   1599a:	6841      	ldr	r1, [r0, #4]
   1599c:	4632      	mov	r2, r6
   1599e:	eb08 0003 	add.w	r0, r8, r3
   159a2:	f008 fdc0 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:47
                (*size) += sizeOfVar;
   159a6:	682b      	ldr	r3, [r5, #0]
   159a8:	441e      	add	r6, r3
   159aa:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   159ac:	3401      	adds	r4, #1
   159ae:	e7df      	b.n	15970 <get_tlm_one_comp+0x12>

000159b0 <cmp_tlm_one_comp>:
cmp_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
 * Compare telemetry
 * @param binary      The binary telemetry to compare
 * @param offset_arg  When non-zero, then telemetry is the same as binary
 */
static void cmp_tlm_one_comp(tlm_component *comp_ptr, void *binary, void *offset_arg)
{
   159b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   159b4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
{
   159b6:	4688      	mov	r8, r1
   159b8:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   159ba:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:91
    tlm_reg_var_type *var = NULL;
    uint32_t size = 0, i = 0;
    uint32_t *offset = offset_arg;

    if (NULL != comp_ptr) {
   159bc:	4606      	mov	r6, r0
   159be:	b1c0      	cbz	r0, 159f2 <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   159c0:	6870      	ldr	r0, [r6, #4]
   159c2:	f000 f84d 	bl	15a60 <c_list_node_count>
   159c6:	4284      	cmp	r4, r0
   159c8:	d213      	bcs.n	159f2 <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:93
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   159ca:	aa01      	add	r2, sp, #4
   159cc:	4621      	mov	r1, r4
   159ce:	6870      	ldr	r0, [r6, #4]
   159d0:	f000 f865 	bl	15a9e <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:94
            if (NULL != var) {
   159d4:	b190      	cbz	r0, 159fc <cmp_tlm_one_comp+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   159d6:	68c3      	ldr	r3, [r0, #12]
   159d8:	6885      	ldr	r5, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   159da:	f8d7 9000 	ldr.w	r9, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   159de:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   159e0:	6841      	ldr	r1, [r0, #4]
   159e2:	462a      	mov	r2, r5
   159e4:	eb08 0009 	add.w	r0, r8, r9
   159e8:	f008 fd8e 	bl	1e508 <memcmp>
   159ec:	b120      	cbz	r0, 159f8 <cmp_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:97
                    *offset = 0;
   159ee:	2300      	movs	r3, #0
   159f0:	603b      	str	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:106
                    *offset += size;
                }
            }
        }
    }
}
   159f2:	b003      	add	sp, #12
   159f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:101
                    *offset += size;
   159f8:	444d      	add	r5, r9
   159fa:	603d      	str	r5, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   159fc:	3401      	adds	r4, #1
   159fe:	e7df      	b.n	159c0 <cmp_tlm_one_comp+0x10>

00015a00 <tlm_binary_get_size_one>:
tlm_binary_get_size_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:54
{
   15a00:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:55
    uint32_t size = 0;
   15a02:	2200      	movs	r2, #0
   15a04:	a902      	add	r1, sp, #8
   15a06:	f841 2d04 	str.w	r2, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:56
    get_tlm_one_comp(comp_ptr, &size, NULL);
   15a0a:	f7ff ffa8 	bl	1595e <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:58
}
   15a0e:	9801      	ldr	r0, [sp, #4]
   15a10:	b003      	add	sp, #12
   15a12:	f85d fb04 	ldr.w	pc, [sp], #4

00015a16 <tlm_binary_get_one>:
tlm_binary_get_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:67
{
   15a16:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:68
    uint32_t offset = 0;
   15a18:	2200      	movs	r2, #0
   15a1a:	ab02      	add	r3, sp, #8
   15a1c:	f843 2d04 	str.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:69
    get_tlm_one_comp(comp_ptr, &offset, binary);
   15a20:	460a      	mov	r2, r1
   15a22:	4619      	mov	r1, r3
   15a24:	f7ff ff9b 	bl	1595e <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:71
}
   15a28:	9801      	ldr	r0, [sp, #4]
   15a2a:	b003      	add	sp, #12
   15a2c:	f85d fb04 	ldr.w	pc, [sp], #4

00015a30 <tlm_binary_compare_one>:
tlm_binary_compare_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110

bool tlm_binary_compare_one(tlm_component *comp_ptr, char *binary)
{
    uint32_t offset = 0;
   15a30:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:109
{
   15a32:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110
    uint32_t offset = 0;
   15a34:	aa02      	add	r2, sp, #8
   15a36:	f842 3d04 	str.w	r3, [r2, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:111
    cmp_tlm_one_comp(comp_ptr, binary, &offset);
   15a3a:	f7ff ffb9 	bl	159b0 <cmp_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:113
    return (0 != offset);
}
   15a3e:	9801      	ldr	r0, [sp, #4]
   15a40:	3000      	adds	r0, #0
   15a42:	bf18      	it	ne
   15a44:	2001      	movne	r0, #1
   15a46:	b003      	add	sp, #12
   15a48:	f85d fb04 	ldr.w	pc, [sp], #4

00015a4c <c_list_create>:
c_list_create():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   15a4c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   15a4e:	200c      	movs	r0, #12
   15a50:	f008 fd2a 	bl	1e4a8 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   15a54:	b118      	cbz	r0, 15a5e <c_list_create+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   15a56:	2300      	movs	r3, #0
   15a58:	6003      	str	r3, [r0, #0]
   15a5a:	6043      	str	r3, [r0, #4]
   15a5c:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   15a5e:	bd08      	pop	{r3, pc}

00015a60 <c_list_node_count>:
c_list_node_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83
}

uint32_t c_list_node_count(const c_list_ptr p)
{
    const c_list_type *list = p;
    return list ? list->node_count : 0;
   15a60:	b100      	cbz	r0, 15a64 <c_list_node_count+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83 (discriminator 1)
   15a62:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:84
}
   15a64:	4770      	bx	lr

00015a66 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   15a66:	b538      	push	{r3, r4, r5, lr}
   15a68:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   15a6a:	4604      	mov	r4, r0
   15a6c:	b908      	cbnz	r0, 15a72 <c_list_insert_elm_end+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   15a6e:	2000      	movs	r0, #0
   15a70:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   15a72:	2008      	movs	r0, #8
   15a74:	f008 fd18 	bl	1e4a8 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   15a78:	2800      	cmp	r0, #0
   15a7a:	d0f8      	beq.n	15a6e <c_list_insert_elm_end+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   15a7c:	2300      	movs	r3, #0
   15a7e:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   15a80:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   15a82:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   15a84:	b933      	cbnz	r3, 15a94 <c_list_insert_elm_end+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   15a86:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   15a88:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   15a8a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   15a8c:	3301      	adds	r3, #1
   15a8e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   15a90:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   15a92:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   15a94:	6863      	ldr	r3, [r4, #4]
   15a96:	2b00      	cmp	r3, #0
   15a98:	d0f6      	beq.n	15a88 <c_list_insert_elm_end+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   15a9a:	6058      	str	r0, [r3, #4]
   15a9c:	e7f4      	b.n	15a88 <c_list_insert_elm_end+0x22>

00015a9e <c_list_get_elm_at>:
c_list_get_elm_at():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:144
}

void* c_list_get_elm_at(c_list_ptr p, uint32_t index, void **hint)
{
    c_list_type *list = p;
    if(!list) {
   15a9e:	b198      	cbz	r0, 15ac8 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149
        return false;
    }

    c_data_node_type **hint_node = (c_data_node_type**)hint;
    if (hint_node && 0 != index) {
   15aa0:	b12a      	cbz	r2, 15aae <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149 (discriminator 1)
   15aa2:	b121      	cbz	r1, 15aae <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:150
        c_data_node_type *node = *hint_node;
   15aa4:	6810      	ldr	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:151
        if (NULL != node) {
   15aa6:	b178      	cbz	r0, 15ac8 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:169
        if (!iterator || 0 != index) {
            return NULL;
        }
        else {
            if (hint_node) {
                *hint_node = iterator->next;
   15aa8:	6843      	ldr	r3, [r0, #4]
   15aaa:	6013      	str	r3, [r2, #0]
   15aac:	e008      	b.n	15ac0 <c_list_get_elm_at+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:157
        c_data_node_type *iterator = list->head;
   15aae:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158
        while (index != 0 && NULL != iterator)
   15ab0:	b141      	cbz	r1, 15ac4 <c_list_get_elm_at+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158 (discriminator 1)
   15ab2:	b900      	cbnz	r0, 15ab6 <c_list_get_elm_at+0x18>
   15ab4:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:160
            iterator = iterator->next;
   15ab6:	6840      	ldr	r0, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:161
            --index;
   15ab8:	3901      	subs	r1, #1
   15aba:	e7f9      	b.n	15ab0 <c_list_get_elm_at+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:168
            if (hint_node) {
   15abc:	2a00      	cmp	r2, #0
   15abe:	d1f3      	bne.n	15aa8 <c_list_get_elm_at+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:171
            }
            return iterator->data_ptr;
   15ac0:	6800      	ldr	r0, [r0, #0]
   15ac2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:164
        if (!iterator || 0 != index) {
   15ac4:	2800      	cmp	r0, #0
   15ac6:	d1f9      	bne.n	15abc <c_list_get_elm_at+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:174
        }
    }
}
   15ac8:	4770      	bx	lr

00015aca <c_list_find_elm>:
c_list_find_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   15aca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15acc:	460d      	mov	r5, r1
   15ace:	4616      	mov	r6, r2
   15ad0:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   15ad2:	b908      	cbnz	r0, 15ad8 <c_list_find_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   15ad4:	2000      	movs	r0, #0
   15ad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   15ad8:	2900      	cmp	r1, #0
   15ada:	d0fb      	beq.n	15ad4 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   15adc:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   15ade:	2c00      	cmp	r4, #0
   15ae0:	d0f8      	beq.n	15ad4 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   15ae2:	9b06      	ldr	r3, [sp, #24]
   15ae4:	463a      	mov	r2, r7
   15ae6:	4631      	mov	r1, r6
   15ae8:	6820      	ldr	r0, [r4, #0]
   15aea:	47a8      	blx	r5
   15aec:	b908      	cbnz	r0, 15af2 <c_list_find_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   15aee:	6820      	ldr	r0, [r4, #0]
   15af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   15af2:	6864      	ldr	r4, [r4, #4]
   15af4:	e7f3      	b.n	15ade <c_list_find_elm+0x14>

00015af6 <c_list_for_each_elm>:
c_list_for_each_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   15af6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15af8:	460d      	mov	r5, r1
   15afa:	4616      	mov	r6, r2
   15afc:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   15afe:	b908      	cbnz	r0, 15b04 <c_list_for_each_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   15b00:	2001      	movs	r0, #1
   15b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   15b04:	2900      	cmp	r1, #0
   15b06:	d0fb      	beq.n	15b00 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   15b08:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   15b0a:	2c00      	cmp	r4, #0
   15b0c:	d0f8      	beq.n	15b00 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   15b0e:	9b06      	ldr	r3, [sp, #24]
   15b10:	463a      	mov	r2, r7
   15b12:	4631      	mov	r1, r6
   15b14:	6820      	ldr	r0, [r4, #0]
   15b16:	47a8      	blx	r5
   15b18:	b108      	cbz	r0, 15b1e <c_list_for_each_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   15b1a:	6864      	ldr	r4, [r4, #4]
   15b1c:	e7f5      	b.n	15b0a <c_list_for_each_elm+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   15b1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
static const char* const NO_HELP_STR_PTR        = "";


void CommandProcessor::addHandler(CmdHandlerFuncPtr pFunc, const char* pPersistantCmdStr,
                                  const char* pPersistentCmdHelpStr,  void* pDataParam)
{
   15b20:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
    handler.pCmdHelpText = pPersistentCmdHelpStr;
    handler.pFunc = pFunc;
    handler.pDataParam = pDataParam;

    if (0 == handler.pCmdHelpText) {
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   15b24:	4f1c      	ldr	r7, [pc, #112]	; (15b98 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
{
   15b26:	4604      	mov	r4, r0
   15b28:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   15b2a:	2b00      	cmp	r3, #0
   15b2c:	bf18      	it	ne
   15b2e:	461f      	movne	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46
    }
    if (0 != handler.pCommandStr && 0 != handler.pFunc) {
   15b30:	4691      	mov	r9, r2
   15b32:	b372      	cbz	r2, 15b92 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46 (discriminator 1)
   15b34:	b369      	cbz	r1, 15b92 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
}

template <typename TYPE>
void VECTOR<TYPE>::push_back(const TYPE& element)
{
    if(mVectorSize >= mVectorCapacity)
   15b36:	6843      	ldr	r3, [r0, #4]
   15b38:	6882      	ldr	r2, [r0, #8]
   15b3a:	429a      	cmp	r2, r3
   15b3c:	d31c      	bcc.n	15b78 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
    {
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   15b3e:	6805      	ldr	r5, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418

// ******* PRIVATE FUNCTIONS:
template <typename TYPE>
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
{
    if(newSize < mVectorCapacity)
   15b40:	195d      	adds	r5, r3, r5
   15b42:	d219      	bcs.n	15b78 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443

    // Point data to new memory
    mpObjPtrs = newData;
#else
    // Allocate pointers of the datatype
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   15b44:	00a9      	lsls	r1, r5, #2
   15b46:	68c0      	ldr	r0, [r0, #12]
   15b48:	f009 ff9c 	bl	1fa84 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446

    // Allocate new objects ONLY at each of the new pointers
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15b4c:	68a6      	ldr	r6, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   15b4e:	60e0      	str	r0, [r4, #12]
   15b50:	ea4f 0a86 	mov.w	sl, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15b54:	42b5      	cmp	r5, r6
   15b56:	d90e      	bls.n	15b76 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   15b58:	2010      	movs	r0, #16
   15b5a:	f001 f989 	bl	16e70 <operator new(unsigned int)>
   15b5e:	4683      	mov	fp, r0
   15b60:	2210      	movs	r2, #16
   15b62:	2100      	movs	r1, #0
   15b64:	f008 fd04 	bl	1e570 <memset>
   15b68:	68e3      	ldr	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15b6a:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   15b6c:	f843 b00a 	str.w	fp, [r3, sl]
   15b70:	f10a 0a04 	add.w	sl, sl, #4
   15b74:	e7ee      	b.n	15b54 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    }
#endif

    mVectorCapacity = newSize;
   15b76:	6065      	str	r5, [r4, #4]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   15b78:	68a3      	ldr	r3, [r4, #8]
   15b7a:	68e2      	ldr	r2, [r4, #12]
   15b7c:	1c59      	adds	r1, r3, #1
   15b7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   15b82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   15b84:	60a1      	str	r1, [r4, #8]
   15b86:	f8c3 9000 	str.w	r9, [r3]
   15b8a:	605f      	str	r7, [r3, #4]
   15b8c:	f8c3 8008 	str.w	r8, [r3, #8]
   15b90:	60da      	str	r2, [r3, #12]
   15b92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b96:	bf00      	nop
   15b98:	00026c08 	.word	0x00026c08

00015b9c <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:126
    }
    return found;
}

void CommandProcessor::getRegisteredCommandList(CharDev& output)
{
   15b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba0:	460c      	mov	r4, r1
   15ba2:	b093      	sub	sp, #76	; 0x4c
   15ba4:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:128
    char buffer[64];
    output.put(SUPPORTED_COMMANDS_STR);
   15ba6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15baa:	491f      	ldr	r1, [pc, #124]	; (15c28 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   15bac:	4620      	mov	r0, r4
   15bae:	f001 ffcf 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131
    char *ptr = NULL;

    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15bb2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
                strcpy(ptr, "...");
            }
            output.printf(buffer);
        } else {
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   15bb4:	f8df 9078 	ldr.w	r9, [pc, #120]	; 15c30 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   15bb8:	f8df a078 	ldr.w	sl, [pc, #120]	; 15c34 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   15bbc:	f8df b078 	ldr.w	fp, [pc, #120]	; 15c38 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 1)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15bc0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15bc4:	429d      	cmp	r5, r3
   15bc6:	d226      	bcs.n	15c16 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x7a>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   15bc8:	f8d8 300c 	ldr.w	r3, [r8, #12]
   15bcc:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:134
        if (strlen(c.pCmdHelpText) > 32) {
   15bd0:	687b      	ldr	r3, [r7, #4]
   15bd2:	4618      	mov	r0, r3
   15bd4:	9301      	str	r3, [sp, #4]
   15bd6:	f00a fa51 	bl	2007c <strlen>
   15bda:	2820      	cmp	r0, #32
   15bdc:	9b01      	ldr	r3, [sp, #4]
   15bde:	d914      	bls.n	15c0a <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   15be0:	ae02      	add	r6, sp, #8
   15be2:	683a      	ldr	r2, [r7, #0]
   15be4:	4651      	mov	r1, sl
   15be6:	4630      	mov	r0, r6
   15be8:	f00a f968 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:138
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
   15bec:	210a      	movs	r1, #10
   15bee:	4630      	mov	r0, r6
   15bf0:	f00a fa9a 	bl	20128 <strrchr>
   15bf4:	4286      	cmp	r6, r0
   15bf6:	d202      	bcs.n	15bfe <CommandProcessor::getRegisteredCommandList(CharDev&)+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   15bf8:	4659      	mov	r1, fp
   15bfa:	f00a fa37 	bl	2006c <strcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:141
            output.printf(buffer);
   15bfe:	4631      	mov	r1, r6
   15c00:	4620      	mov	r0, r4
   15c02:	f001 ffef 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 2)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15c06:	3501      	adds	r5, #1
   15c08:	e7da      	b.n	15bc0 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   15c0a:	683a      	ldr	r2, [r7, #0]
   15c0c:	4649      	mov	r1, r9
   15c0e:	4620      	mov	r0, r4
   15c10:	f001 ffe8 	bl	17be4 <CharDev::printf(char const*, ...)>
   15c14:	e7f7      	b.n	15c06 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:147
        }
    }

    output.putline("\n 'help <command>' to get help of a command");
   15c16:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15c1a:	4904      	ldr	r1, [pc, #16]	; (15c2c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   15c1c:	4620      	mov	r0, r4
   15c1e:	f001 ffab 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:148
}
   15c22:	b013      	add	sp, #76	; 0x4c
   15c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c28:	00025646 	.word	0x00025646
   15c2c:	00025679 	.word	0x00025679
   15c30:	0002566d 	.word	0x0002566d
   15c34:	0002565a 	.word	0x0002565a
   15c38:	00024cb1 	.word	0x00024cb1

00015c3c <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151

void CommandProcessor::getHelpText(str& helpForCmd, CharDev& output)
{
   15c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15c40:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    // If there is a parameter, get help for this specific command
    // where this parameter itself is a command name
    if(helpForCmd.getLen() > 0)
   15c42:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151
{
   15c44:	460f      	mov	r7, r1
   15c46:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    if(helpForCmd.getLen() > 0)
   15c48:	f000 fe8f 	bl	1696a <str::getLen() const>
   15c4c:	2800      	cmp	r0, #0
   15c4e:	dd23      	ble.n	15c98 <CommandProcessor::getHelpText(str&, CharDev&)+0x5c>
   15c50:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 1)
    {
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15c52:	68ab      	ldr	r3, [r5, #8]
   15c54:	429c      	cmp	r4, r3
   15c56:	d21b      	bcs.n	15c90 <CommandProcessor::getHelpText(str&, CharDev&)+0x54>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15c58:	68eb      	ldr	r3, [r5, #12]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
        {
            CmdProcessorType &cp = mCmdHandlerVector[i];
            if(helpForCmd.compareToIgnoreCase(cp.pCommandStr))
   15c5a:	4638      	mov	r0, r7
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15c5c:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
   15c60:	f8d8 1000 	ldr.w	r1, [r8]
   15c64:	f000 fec8 	bl	169f8 <str::compareToIgnoreCase(char const*) const>
   15c68:	b180      	cbz	r0, 15c8c <CommandProcessor::getHelpText(str&, CharDev&)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
            {
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15c6a:	f8d8 3004 	ldr.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15c6e:	b15b      	cbz	r3, 15c88 <CommandProcessor::getHelpText(str&, CharDev&)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15c70:	781a      	ldrb	r2, [r3, #0]
   15c72:	490c      	ldr	r1, [pc, #48]	; (15ca4 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15c74:	2a00      	cmp	r2, #0
   15c76:	bf18      	it	ne
   15c78:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:163 (discriminator 3)
                output.putline(out);
   15c7a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
                return;
            }
        }
        output.putline(CMD_INVALID_STR);
   15c7e:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
    }
    else {
        getRegisteredCommandList(output);
    }
}
   15c80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15c84:	f001 bf78 	b.w	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15c88:	4906      	ldr	r1, [pc, #24]	; (15ca4 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15c8a:	e7f6      	b.n	15c7a <CommandProcessor::getHelpText(str&, CharDev&)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 2)
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15c8c:	3401      	adds	r4, #1
   15c8e:	e7e0      	b.n	15c52 <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15c90:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15c94:	4904      	ldr	r1, [pc, #16]	; (15ca8 <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   15c96:	e7f2      	b.n	15c7e <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15c98:	4631      	mov	r1, r6
   15c9a:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
}
   15c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15ca0:	f7ff bf7c 	b.w	15b9c <CommandProcessor::getRegisteredCommandList(CharDev&)>
   15ca4:	000255cb 	.word	0x000255cb
   15ca8:	000255ef 	.word	0x000255ef

00015cac <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:175

void CommandProcessor::prepareCmdParam(str& input, const char* pCmdToRemove)
{
   15cac:	b538      	push	{r3, r4, r5, lr}
   15cae:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177
    int i = 0;
    for (i=0; i<input.getLen(); i++) {
   15cb0:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 1)
   15cb2:	4628      	mov	r0, r5
   15cb4:	f000 fe59 	bl	1696a <str::getLen() const>
   15cb8:	4284      	cmp	r4, r0
   15cba:	da08      	bge.n	15cce <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:178
        if (input[i] == ' ') {
   15cbc:	4621      	mov	r1, r4
   15cbe:	4628      	mov	r0, r5
   15cc0:	f000 ffea 	bl	16c98 <str::operator[](int)>
   15cc4:	7803      	ldrb	r3, [r0, #0]
   15cc6:	2b20      	cmp	r3, #32
   15cc8:	d001      	beq.n	15cce <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 2)
    for (i=0; i<input.getLen(); i++) {
   15cca:	3401      	adds	r4, #1
   15ccc:	e7f1      	b.n	15cb2 <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:182
            break;
        }
    }
    input.eraseFirst(i);
   15cce:	4621      	mov	r1, r4
   15cd0:	4628      	mov	r0, r5
   15cd2:	f000 ff35 	bl	16b40 <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15cd6:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:184
}
   15cd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15cdc:	4901      	ldr	r1, [pc, #4]	; (15ce4 <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   15cde:	f000 bf97 	b.w	16c10 <str::trimStart(char const*)>
   15ce2:	bf00      	nop
   15ce4:	00026c6f 	.word	0x00026c6f

00015ce8 <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cec:	460c      	mov	r4, r1
   15cee:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15cf0:	4951      	ldr	r1, [pc, #324]	; (15e38 <CommandProcessor::handleCommand(str&, CharDev&)+0x150>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15cf2:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15cf4:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15cf6:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15cf8:	f000 ffaa 	bl	16c50 <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:58
    if(cmd.beginsWithWholeWordIgnoreCase(HELP_STR))
   15cfc:	2220      	movs	r2, #32
   15cfe:	494f      	ldr	r1, [pc, #316]	; (15e3c <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   15d00:	4620      	mov	r0, r4
   15d02:	f000 ff01 	bl	16b08 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   15d06:	4607      	mov	r7, r0
   15d08:	2800      	cmp	r0, #0
   15d0a:	d14c      	bne.n	15da6 <CommandProcessor::handleCommand(str&, CharDev&)+0xbe>
   15d0c:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 1)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   15d0e:	68b3      	ldr	r3, [r6, #8]
   15d10:	4599      	cmp	r9, r3
   15d12:	d356      	bcc.n	15dc2 <CommandProcessor::handleCommand(str&, CharDev&)+0xda>
   15d14:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102 (discriminator 1)
                cmd.scanf("%7s ", shortCmd);
   15d18:	f8df b12c 	ldr.w	fp, [pc, #300]	; 15e48 <CommandProcessor::handleCommand(str&, CharDev&)+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90 (discriminator 1)
            for(i=0; i < mCmdHandlerVector.size(); i++)
   15d1c:	68b3      	ldr	r3, [r6, #8]
   15d1e:	4599      	cmp	r9, r3
   15d20:	f080 8082 	bcs.w	15e28 <CommandProcessor::handleCommand(str&, CharDev&)+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   15d24:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15d26:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15d28:	eb0d 0102 	add.w	r1, sp, r2
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15d2c:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15d30:	a803      	add	r0, sp, #12
   15d32:	f000 fdf3 	bl	1691c <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:94
                regCmd = cp.pCommandStr;  /* Set to the command text */
   15d36:	f8d8 1000 	ldr.w	r1, [r8]
   15d3a:	a803      	add	r0, sp, #12
   15d3c:	f001 f860 	bl	16e00 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15d40:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15d42:	aa01      	add	r2, sp, #4
   15d44:	4659      	mov	r1, fp
   15d46:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15d48:	9301      	str	r3, [sp, #4]
   15d4a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15d4c:	f000 fe16 	bl	1697c <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103
                if(strlen(shortCmd) >= 2 && regCmd.beginsWithIgnoreCase(shortCmd))
   15d50:	a801      	add	r0, sp, #4
   15d52:	f00a f993 	bl	2007c <strlen>
   15d56:	2801      	cmp	r0, #1
   15d58:	d960      	bls.n	15e1c <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103 (discriminator 1)
   15d5a:	a901      	add	r1, sp, #4
   15d5c:	a803      	add	r0, sp, #12
   15d5e:	f000 febc 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   15d62:	4682      	mov	sl, r0
   15d64:	2800      	cmp	r0, #0
   15d66:	d059      	beq.n	15e1c <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:105
                    prepareCmdParam(cmd, cp.pCommandStr);
   15d68:	f8d8 2000 	ldr.w	r2, [r8]
   15d6c:	4621      	mov	r1, r4
   15d6e:	4630      	mov	r0, r6
   15d70:	f7ff ff9c 	bl	15cac <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:106
                    if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   15d74:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15d78:	f8d8 200c 	ldr.w	r2, [r8, #12]
   15d7c:	4629      	mov	r1, r5
   15d7e:	4620      	mov	r0, r4
   15d80:	4798      	blx	r3
   15d82:	b960      	cbnz	r0, 15d9e <CommandProcessor::handleCommand(str&, CharDev&)+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:107
                        output.putline(COMMAND_FAILURE_HELP);
   15d84:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15d88:	492d      	ldr	r1, [pc, #180]	; (15e40 <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   15d8a:	4628      	mov	r0, r5
   15d8c:	f001 fef4 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:108
                        output.putline(cp.pCmdHelpText);
   15d90:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15d94:	f8d8 1004 	ldr.w	r1, [r8, #4]
   15d98:	4628      	mov	r0, r5
   15d9a:	f001 feed 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:112
                    break;
   15d9e:	a803      	add	r0, sp, #12
   15da0:	f000 fdd0 	bl	16944 <str::~str()>
   15da4:	e035      	b.n	15e12 <CommandProcessor::handleCommand(str&, CharDev&)+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:60
        prepareCmdParam(cmd, HELP_STR);
   15da6:	4a25      	ldr	r2, [pc, #148]	; (15e3c <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   15da8:	4621      	mov	r1, r4
   15daa:	4630      	mov	r0, r6
   15dac:	f7ff ff7e 	bl	15cac <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:61
        getHelpText(cmd, output);
   15db0:	462a      	mov	r2, r5
   15db2:	4621      	mov	r1, r4
   15db4:	4630      	mov	r0, r6
   15db6:	f7ff ff41 	bl	15c3c <CommandProcessor::getHelpText(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:123
}
   15dba:	4638      	mov	r0, r7
   15dbc:	b011      	add	sp, #68	; 0x44
   15dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15dc2:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
            if(cmd.beginsWithWholeWordIgnoreCase(cp.pCommandStr))
   15dc4:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15dc6:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
   15dca:	4620      	mov	r0, r4
   15dcc:	f8d8 1000 	ldr.w	r1, [r8]
   15dd0:	f000 fe9a 	bl	16b08 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   15dd4:	4682      	mov	sl, r0
   15dd6:	b1f0      	cbz	r0, 15e16 <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:74
                prepareCmdParam(cmd, cp.pCommandStr);
   15dd8:	f8d8 2000 	ldr.w	r2, [r8]
   15ddc:	4621      	mov	r1, r4
   15dde:	4630      	mov	r0, r6
   15de0:	f7ff ff64 	bl	15cac <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:75
                if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   15de4:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15de8:	f8d8 200c 	ldr.w	r2, [r8, #12]
   15dec:	4629      	mov	r1, r5
   15dee:	4620      	mov	r0, r4
   15df0:	4798      	blx	r3
   15df2:	4607      	mov	r7, r0
   15df4:	2800      	cmp	r0, #0
   15df6:	d1e0      	bne.n	15dba <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:76
                    output.putline(COMMAND_FAILURE_HELP);
   15df8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15dfc:	4910      	ldr	r1, [pc, #64]	; (15e40 <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   15dfe:	4628      	mov	r0, r5
   15e00:	f001 feba 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:77
                    output.putline(cp.pCmdHelpText);
   15e04:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15e08:	f8d8 1004 	ldr.w	r1, [r8, #4]
   15e0c:	4628      	mov	r0, r5
   15e0e:	f001 feb3 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
   15e12:	4657      	mov	r7, sl
   15e14:	e7d1      	b.n	15dba <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 2)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   15e16:	f109 0901 	add.w	r9, r9, #1
   15e1a:	e778      	b.n	15d0e <CommandProcessor::handleCommand(str&, CharDev&)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   15e1c:	a803      	add	r0, sp, #12
   15e1e:	f000 fd91 	bl	16944 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90
            for(i=0; i < mCmdHandlerVector.size(); i++)
   15e22:	f109 0901 	add.w	r9, r9, #1
   15e26:	e779      	b.n	15d1c <CommandProcessor::handleCommand(str&, CharDev&)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:119
            output.putline(CMD_INVALID_STR);
   15e28:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15e2c:	4905      	ldr	r1, [pc, #20]	; (15e44 <CommandProcessor::handleCommand(str&, CharDev&)+0x15c>)
   15e2e:	4628      	mov	r0, r5
   15e30:	f001 fea2 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:122
    return found;
   15e34:	e7c1      	b.n	15dba <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
   15e36:	bf00      	nop
   15e38:	00025614 	.word	0x00025614
   15e3c:	00025617 	.word	0x00025617
   15e40:	0002561c 	.word	0x0002561c
   15e44:	000255ef 	.word	0x000255ef
   15e48:	00025641 	.word	0x00025641

00015e4c <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:249
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         * @note You should use init() instead of the constructor to initialize and allocate memory
         *       because the status of init() is checked and reported, but a failure at constructor
         *       will not be easily caught (or reported).
         */
        virtual bool init(void)   { return true; }
   15e4c:	2001      	movs	r0, #1
   15e4e:	4770      	bx	lr

00015e50 <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:256
        /**
         * Optional: Override this function to register your telemetry before FreeRTOS starts.
         * @return   true upon success.
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         */
        virtual bool regTlm(void) { return true; }
   15e50:	2001      	movs	r0, #1
   15e52:	4770      	bx	lr

00015e54 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:268
         * taskEntry() to take place before the run() method is called.
         *
         * @warning  Do not suspend your task otherwise all tasks will get suspended.
         * @return   true upon success.
         */
        virtual bool taskEntry(void) { return true; }
   15e54:	2001      	movs	r0, #1
   15e56:	4770      	bx	lr

00015e58 <__sputc_r>:
__sputc_r():
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
#ifdef __SCLE
	if ((_p->_flags & __SCLE) && _c == '\n')
	  __sputc_r (_ptr, '\r', _p);
#endif
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   15e58:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:684
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
   15e5a:	b410      	push	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   15e5c:	3b01      	subs	r3, #1
   15e5e:	2b00      	cmp	r3, #0
   15e60:	6093      	str	r3, [r2, #8]
   15e62:	da08      	bge.n	15e76 <__sputc_r+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 2)
   15e64:	6994      	ldr	r4, [r2, #24]
   15e66:	42a3      	cmp	r3, r4
   15e68:	db02      	blt.n	15e70 <__sputc_r+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 3)
   15e6a:	b2cb      	uxtb	r3, r1
   15e6c:	2b0a      	cmp	r3, #10
   15e6e:	d102      	bne.n	15e76 <__sputc_r+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
		return (*_p->_p++ = _c);
	else
		return (__swbuf_r(_ptr, _c, _p));
}
   15e70:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:692
		return (__swbuf_r(_ptr, _c, _p));
   15e72:	f00b bb4d 	b.w	21510 <__swbuf_r>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:690
		return (*_p->_p++ = _c);
   15e76:	6813      	ldr	r3, [r2, #0]
   15e78:	1c58      	adds	r0, r3, #1
   15e7a:	6010      	str	r0, [r2, #0]
   15e7c:	7019      	strb	r1, [r3, #0]
   15e7e:	b2c8      	uxtb	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
}
   15e80:	bc10      	pop	{r4}
   15e82:	4770      	bx	lr

00015e84 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
 * puts() uses very little stack space.
 */
static bool g_dbg_print = false;
static void dbg_print(const char *one, const char *two=NULL)
{
    if (g_dbg_print)
   15e84:	4b0a      	ldr	r3, [pc, #40]	; (15eb0 <dbg_print(char const*, char const*)+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   15e86:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   15e88:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   15e8a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   15e8c:	b17b      	cbz	r3, 15eae <dbg_print(char const*, char const*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
    {
        while(*one) {
            putchar(*one++);
   15e8e:	4e09      	ldr	r6, [pc, #36]	; (15eb4 <dbg_print(char const*, char const*)+0x30>)
   15e90:	1e44      	subs	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:90
        while(*one) {
   15e92:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   15e96:	b121      	cbz	r1, 15ea2 <dbg_print(char const*, char const*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
            putchar(*one++);
   15e98:	6830      	ldr	r0, [r6, #0]
   15e9a:	6882      	ldr	r2, [r0, #8]
   15e9c:	f7ff ffdc 	bl	15e58 <__sputc_r>
   15ea0:	e7f7      	b.n	15e92 <dbg_print(char const*, char const*)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:93
        }
        if (two) {
   15ea2:	b125      	cbz	r5, 15eae <dbg_print(char const*, char const*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   15ea4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:97
        }
    }
}
   15ea6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   15eaa:	f009 bd81 	b.w	1f9b0 <puts>
   15eae:	bd70      	pop	{r4, r5, r6, pc}
   15eb0:	2007c500 	.word	0x2007c500
   15eb4:	2007c0e0 	.word	0x2007c0e0

00015eb8 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:100

static void printline(const char *one, const char *two=NULL)
{
   15eb8:	b570      	push	{r4, r5, r6, lr}
   15eba:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
    while(*one) {
        putchar(*one++);
   15ebc:	4e0b      	ldr	r6, [pc, #44]	; (15eec <printline(char const*, char const*)+0x34>)
   15ebe:	1e45      	subs	r5, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   15ec0:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   15ec4:	b121      	cbz	r1, 15ed0 <printline(char const*, char const*)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
        putchar(*one++);
   15ec6:	6830      	ldr	r0, [r6, #0]
   15ec8:	6882      	ldr	r2, [r0, #8]
   15eca:	f7ff ffc5 	bl	15e58 <__sputc_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   15ece:	e7f7      	b.n	15ec0 <printline(char const*, char const*)+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:105
    }

    if (two) {
   15ed0:	b124      	cbz	r4, 15edc <printline(char const*, char const*)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   15ed2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
    }
    else {
        putchar('\n');
    }
}
   15ed4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   15ed8:	f009 bd6a 	b.w	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   15edc:	4b03      	ldr	r3, [pc, #12]	; (15eec <printline(char const*, char const*)+0x34>)
   15ede:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
}
   15ee0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   15ee4:	6818      	ldr	r0, [r3, #0]
   15ee6:	6882      	ldr	r2, [r0, #8]
   15ee8:	f7ff bfb6 	b.w	15e58 <__sputc_r>
   15eec:	2007c0e0 	.word	0x2007c0e0

00015ef0 <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
void scheduler_c_task_private(void *task_ptr)
{
    scheduler_task& task = *(scheduler_task*)task_ptr;

    /* Have the responsible task call taskEntry() for each task */
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   15ef0:	4b3f      	ldr	r3, [pc, #252]	; (15ff0 <scheduler_c_task_private(void*)+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   15ef2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   15ef6:	681a      	ldr	r2, [r3, #0]
   15ef8:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   15efa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   15efc:	429a      	cmp	r2, r3
   15efe:	d136      	bne.n	15f6e <scheduler_c_task_private(void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:124
        bool failure = false;
        uint32_t taskCount = 0;
   15f00:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:123
        bool failure = false;
   15f02:	463d      	mov	r5, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:126

        dbg_print("*  ");
   15f04:	2100      	movs	r1, #0
   15f06:	483b      	ldr	r0, [pc, #236]	; (15ff4 <scheduler_c_task_private(void*)+0x104>)
   15f08:	f7ff ffbc 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:127
        dbg_print(task.mName, " task calling taskEntry() for all tasks ... ");
   15f0c:	493a      	ldr	r1, [pc, #232]	; (15ff8 <scheduler_c_task_private(void*)+0x108>)
   15f0e:	6a60      	ldr	r0, [r4, #36]	; 0x24
   15f10:	f7ff ffb8 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:128
        dbg_print("*  Each task will then enter the run() loop\n");
   15f14:	2100      	movs	r1, #0
   15f16:	4839      	ldr	r0, [pc, #228]	; (15ffc <scheduler_c_task_private(void*)+0x10c>)
   15f18:	f7ff ffb4 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130

        task_list_t *e = gpTaskList;
   15f1c:	4b38      	ldr	r3, [pc, #224]	; (16000 <scheduler_c_task_private(void*)+0x110>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
            scheduler_task *t = e->task;
            e = e->next;
            ++taskCount;

            if (!t->taskEntry()) {
                printline(t->mName, "  --> FAILED taskEntry()");
   15f1e:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 1600c <scheduler_c_task_private(void*)+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130
        task_list_t *e = gpTaskList;
   15f22:	681e      	ldr	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:131
        while (NULL != e) {
   15f24:	b18e      	cbz	r6, 15f4a <scheduler_c_task_private(void*)+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:132
            scheduler_task *t = e->task;
   15f26:	f8d6 8000 	ldr.w	r8, [r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:134
            ++taskCount;
   15f2a:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   15f2c:	f8d8 3000 	ldr.w	r3, [r8]
   15f30:	4640      	mov	r0, r8
   15f32:	691b      	ldr	r3, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:133
            e = e->next;
   15f34:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   15f36:	4798      	blx	r3
   15f38:	2800      	cmp	r0, #0
   15f3a:	d1f3      	bne.n	15f24 <scheduler_c_task_private(void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
                printline(t->mName, "  --> FAILED taskEntry()");
   15f3c:	4649      	mov	r1, r9
   15f3e:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   15f42:	f7ff ffb9 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:138
                failure = true;
   15f46:	2501      	movs	r5, #1
   15f48:	e7ec      	b.n	15f24 <scheduler_c_task_private(void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:142
            }
        }

        if (failure) {
   15f4a:	b955      	cbnz	r5, 15f62 <scheduler_c_task_private(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 3)
            vTaskEndScheduler();
        }
        else {
            /* Give permission for everyone to start the run() loop */
            for (uint32_t i=0; i < taskCount; i++) {
                xSemaphoreGive(gRunTaskSemaphore);
   15f4c:	4e2d      	ldr	r6, [pc, #180]	; (16004 <scheduler_c_task_private(void*)+0x114>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 3)
            for (uint32_t i=0; i < taskCount; i++) {
   15f4e:	42af      	cmp	r7, r5
   15f50:	d00d      	beq.n	15f6e <scheduler_c_task_private(void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 2)
                xSemaphoreGive(gRunTaskSemaphore);
   15f52:	2300      	movs	r3, #0
   15f54:	6830      	ldr	r0, [r6, #0]
   15f56:	461a      	mov	r2, r3
   15f58:	4619      	mov	r1, r3
   15f5a:	f002 fe11 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 2)
            for (uint32_t i=0; i < taskCount; i++) {
   15f5e:	3501      	adds	r5, #1
   15f60:	e7f5      	b.n	15f4e <scheduler_c_task_private(void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:143
            printline("ERROR: Killing FreeRTOS due to error(s)");
   15f62:	4631      	mov	r1, r6
   15f64:	4828      	ldr	r0, [pc, #160]	; (16008 <scheduler_c_task_private(void*)+0x118>)
   15f66:	f7ff ffa7 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:144
            vTaskEndScheduler();
   15f6a:	f003 f9a7 	bl	192bc <vTaskEndScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:155
            }
        }
    }

    // Wait until we're given the go ahead by the task giving semaphore above
    xSemaphoreTake(gRunTaskSemaphore, portMAX_DELAY);
   15f6e:	2300      	movs	r3, #0
   15f70:	4824      	ldr	r0, [pc, #144]	; (16004 <scheduler_c_task_private(void*)+0x114>)
   15f72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15f76:	4619      	mov	r1, r3
   15f78:	6800      	ldr	r0, [r0, #0]
   15f7a:	f002 ff09 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:157

    TickType_t xLastWakeTime = xTaskGetTickCount();
   15f7e:	f003 f9b5 	bl	192ec <xTaskGetTickCount>
   15f82:	ae02      	add	r6, sp, #8
   15f84:	f846 0d04 	str.w	r0, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:158
    TickType_t xNextStatTime = xTaskGetTickCount();
   15f88:	f003 f9b0 	bl	192ec <xTaskGetTickCount>
   15f8c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
        }
        #endif

        // Run the task code and suspend when an error occurs
        if (!task.run((void*)task.mParam)) {
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   15f8e:	f8df 8080 	ldr.w	r8, [pc, #128]	; 16010 <scheduler_c_task_private(void*)+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:163
        if (task.mQueueSet) {
   15f92:	6860      	ldr	r0, [r4, #4]
   15f94:	b118      	cbz	r0, 15f9e <scheduler_c_task_private(void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:164
            task.mQueueSetType = xQueueSelectFromSet(task.mQueueSet, task.mQueueSetBlockTime);
   15f96:	68e1      	ldr	r1, [r4, #12]
   15f98:	f002 ffd3 	bl	18f42 <xQueueSelectFromSet>
   15f9c:	60a0      	str	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:169
        if (!task.run((void*)task.mParam)) {
   15f9e:	6823      	ldr	r3, [r4, #0]
   15fa0:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   15fa2:	695b      	ldr	r3, [r3, #20]
   15fa4:	4620      	mov	r0, r4
   15fa6:	4798      	blx	r3
   15fa8:	4607      	mov	r7, r0
   15faa:	b930      	cbnz	r0, 15fba <scheduler_c_task_private(void*)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   15fac:	6a60      	ldr	r0, [r4, #36]	; 0x24
   15fae:	4641      	mov	r1, r8
   15fb0:	f7ff ff82 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:171
            vTaskSuspend(0);
   15fb4:	4638      	mov	r0, r7
   15fb6:	f003 fb3d 	bl	19634 <vTaskSuspend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:173
        }
        ++(task.mRunCount);
   15fba:	69a3      	ldr	r3, [r4, #24]
   15fbc:	3301      	adds	r3, #1
   15fbe:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176

        // Update the task statistics once in a short while :
        if (0 != task.mStatUpdateRateMs && xTaskGetTickCount() > xNextStatTime) {
   15fc0:	6a23      	ldr	r3, [r4, #32]
   15fc2:	b11b      	cbz	r3, 15fcc <scheduler_c_task_private(void*)+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176 (discriminator 1)
   15fc4:	f003 f992 	bl	192ec <xTaskGetTickCount>
   15fc8:	4285      	cmp	r5, r0
   15fca:	d306      	bcc.n	15fda <scheduler_c_task_private(void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:184
            // Convert to stack size in bytes instead of 4 bytes for this ARM CPU
            task.mFreeStack *= sizeof(int);
        }

        // Delay if set
        if (task.mTaskDelayMs) {
   15fcc:	69e1      	ldr	r1, [r4, #28]
   15fce:	2900      	cmp	r1, #0
   15fd0:	d0df      	beq.n	15f92 <scheduler_c_task_private(void*)+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:185
            vTaskDelayUntil( &xLastWakeTime, OS_MS(task.mTaskDelayMs));
   15fd2:	4630      	mov	r0, r6
   15fd4:	f003 fa8e 	bl	194f4 <vTaskDelayUntil>
   15fd8:	e7db      	b.n	15f92 <scheduler_c_task_private(void*)+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:177
            xNextStatTime = xTaskGetTickCount() + (task.mStatUpdateRateMs / MS_PER_TICK());
   15fda:	f003 f987 	bl	192ec <xTaskGetTickCount>
   15fde:	6a25      	ldr	r5, [r4, #32]
   15fe0:	4405      	add	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:178
            task.mFreeStack = uxTaskGetStackHighWaterMark(task.mHandle);
   15fe2:	6920      	ldr	r0, [r4, #16]
   15fe4:	f003 fcb8 	bl	19958 <uxTaskGetStackHighWaterMark>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:180
            task.mFreeStack *= sizeof(int);
   15fe8:	0080      	lsls	r0, r0, #2
   15fea:	6160      	str	r0, [r4, #20]
   15fec:	e7ee      	b.n	15fcc <scheduler_c_task_private(void*)+0xdc>
   15fee:	bf00      	nop
   15ff0:	2007c510 	.word	0x2007c510
   15ff4:	00025882 	.word	0x00025882
   15ff8:	00025886 	.word	0x00025886
   15ffc:	000258b3 	.word	0x000258b3
   16000:	2007c4fc 	.word	0x2007c4fc
   16004:	2007c50c 	.word	0x2007c50c
   16008:	000258f9 	.word	0x000258f9
   1600c:	000258e0 	.word	0x000258e0
   16010:	00025921 	.word	0x00025921

00016014 <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
        }
    }
}

bool scheduler_init_all(bool register_internal_tlm)
{
   16014:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    bool failure = false;
    uint32_t taskCount = 0;

    /* If no tasks ... */
    if (NULL == gpTaskList) {
   16018:	4d59      	ldr	r5, [pc, #356]	; (16180 <scheduler_init_all(bool)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
{
   1601a:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    if (NULL == gpTaskList) {
   1601c:	6829      	ldr	r1, [r5, #0]
   1601e:	b939      	cbnz	r1, 16030 <scheduler_init_all(bool)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:197
        printline("ERROR: NO tasks added by scheduler_add_task()");
   16020:	4858      	ldr	r0, [pc, #352]	; (16184 <scheduler_init_all(bool)+0x170>)
   16022:	f7ff ff49 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:199
        failure = true;
        return failure;
   16026:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:314
            }
        }
    } while(0);

    return failure;
}
   16028:	4620      	mov	r0, r4
   1602a:	b003      	add	sp, #12
   1602c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:193
    uint32_t taskCount = 0;
   16030:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:192
    bool failure = false;
   16034:	464c      	mov	r4, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:202
    dbg_print("*  Creating tasks ...\n");
   16036:	2100      	movs	r1, #0
   16038:	4853      	ldr	r0, [pc, #332]	; (16188 <scheduler_init_all(bool)+0x174>)
   1603a:	f7ff ff23 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1603e:	f8df b178 	ldr.w	fp, [pc, #376]	; 161b8 <scheduler_init_all(bool)+0x1a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:204
        task_list_t *e = gpTaskList;
   16042:	682e      	ldr	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   16044:	f8df a174 	ldr.w	sl, [pc, #372]	; 161bc <scheduler_init_all(bool)+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:205
        while (NULL != e) {
   16048:	b1ce      	cbz	r6, 1607e <scheduler_init_all(bool)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:207
            scheduler_task *task = e->task;
   1604a:	6837      	ldr	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:208
            e = e->next;
   1604c:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1604e:	f107 0310 	add.w	r3, r7, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:216
                             STACK_BYTES(task->mStackSize),  /* Stack */
   16052:	6afa      	ldr	r2, [r7, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   16054:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   16056:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1605a:	f3c2 028f 	ubfx	r2, r2, #2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   1605e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   16060:	6a79      	ldr	r1, [r7, #36]	; 0x24
   16062:	463b      	mov	r3, r7
   16064:	4658      	mov	r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:206
            ++taskCount;
   16066:	f109 0901 	add.w	r9, r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   1606a:	f002 fff9 	bl	19060 <xTaskCreate>
   1606e:	2800      	cmp	r0, #0
   16070:	d1ea      	bne.n	16048 <scheduler_init_all(bool)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   16072:	4651      	mov	r1, sl
   16074:	6a78      	ldr	r0, [r7, #36]	; 0x24
   16076:	f7ff ff1f 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:222
                failure = true;
   1607a:	2401      	movs	r4, #1
   1607c:	e7e4      	b.n	16048 <scheduler_init_all(bool)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:227
    gRunTaskSemaphore = xSemaphoreCreateCounting(taskCount, 0);
   1607e:	4631      	mov	r1, r6
   16080:	4648      	mov	r0, r9
   16082:	f002 fd74 	bl	18b6e <xQueueCreateCountingSemaphore>
   16086:	4b41      	ldr	r3, [pc, #260]	; (1618c <scheduler_init_all(bool)+0x178>)
   16088:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:228
    if (NULL == gRunTaskSemaphore) {
   1608a:	b920      	cbnz	r0, 16096 <scheduler_init_all(bool)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:229
        printline("ERROR: Creating counting semaphore");
   1608c:	4631      	mov	r1, r6
   1608e:	4840      	ldr	r0, [pc, #256]	; (16190 <scheduler_init_all(bool)+0x17c>)
   16090:	f7ff ff12 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:230
        failure = true;
   16094:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:237
    dbg_print("*  Initializing tasks ...\n");
   16096:	2100      	movs	r1, #0
   16098:	483e      	ldr	r0, [pc, #248]	; (16194 <scheduler_init_all(bool)+0x180>)
   1609a:	f7ff fef3 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   1609e:	f8df 9120 	ldr.w	r9, [pc, #288]	; 161c0 <scheduler_init_all(bool)+0x1ac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:239
        task_list_t *e = gpTaskList;
   160a2:	682e      	ldr	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:240
        while (NULL != e)
   160a4:	b16e      	cbz	r6, 160c2 <scheduler_init_all(bool)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:242
            scheduler_task *task = e->task;
   160a6:	6837      	ldr	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:243
            e = e->next;
   160a8:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:245
            if (!task->init()) {
   160aa:	683b      	ldr	r3, [r7, #0]
   160ac:	4638      	mov	r0, r7
   160ae:	689b      	ldr	r3, [r3, #8]
   160b0:	4798      	blx	r3
   160b2:	2800      	cmp	r0, #0
   160b4:	d1f6      	bne.n	160a4 <scheduler_init_all(bool)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   160b6:	4649      	mov	r1, r9
   160b8:	6a78      	ldr	r0, [r7, #36]	; 0x24
   160ba:	f7ff fefd 	bl	15eb8 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:247
                failure = true;
   160be:	2401      	movs	r4, #1
   160c0:	e7f0      	b.n	160a4 <scheduler_init_all(bool)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:254
    dbg_print("*  Registering tasks' telemetry ...\n");
   160c2:	4631      	mov	r1, r6
   160c4:	4834      	ldr	r0, [pc, #208]	; (16198 <scheduler_init_all(bool)+0x184>)
   160c6:	f7ff fedd 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:256
        task_list_t *e = gpTaskList;
   160ca:	682f      	ldr	r7, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:257
        while (NULL != e)
   160cc:	b387      	cbz	r7, 16130 <scheduler_init_all(bool)+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:260
            e = e->next;
   160ce:	cfc0      	ldmia	r7, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:262
            if (!task->regTlm()) {
   160d0:	6833      	ldr	r3, [r6, #0]
   160d2:	4630      	mov	r0, r6
   160d4:	68db      	ldr	r3, [r3, #12]
   160d6:	4798      	blx	r3
   160d8:	2800      	cmp	r0, #0
   160da:	d04c      	beq.n	16176 <scheduler_init_all(bool)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   160dc:	f1b8 0f00 	cmp.w	r8, #0
   160e0:	d023      	beq.n	1612a <scheduler_init_all(bool)+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   160e2:	f04f 0901 	mov.w	r9, #1
   160e6:	f04f 0a02 	mov.w	sl, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   160ea:	6a70      	ldr	r0, [r6, #36]	; 0x24
   160ec:	f7ff f860 	bl	151b0 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   160f0:	2304      	movs	r3, #4
   160f2:	f106 0214 	add.w	r2, r6, #20
   160f6:	4929      	ldr	r1, [pc, #164]	; (1619c <scheduler_init_all(bool)+0x188>)
   160f8:	e88d 0600 	stmia.w	sp, {r9, sl}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   160fc:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   160fe:	f7ff f8b9 	bl	15274 <tlm_variable_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16102:	e88d 0600 	stmia.w	sp, {r9, sl}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16106:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16108:	f04f 0304 	mov.w	r3, #4
   1610c:	f106 0218 	add.w	r2, r6, #24
   16110:	4923      	ldr	r1, [pc, #140]	; (161a0 <scheduler_init_all(bool)+0x18c>)
   16112:	4658      	mov	r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16114:	bf08      	it	eq
   16116:	464c      	moveq	r4, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16118:	f7ff f8ac 	bl	15274 <tlm_variable_register>
   1611c:	b928      	cbnz	r0, 1612a <scheduler_init_all(bool)+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:279
                printline(task->mName, "  --> FAILED telemetry registration");
   1611e:	4921      	ldr	r1, [pc, #132]	; (161a4 <scheduler_init_all(bool)+0x190>)
   16120:	6a70      	ldr	r0, [r6, #36]	; 0x24
   16122:	f7ff fec9 	bl	15eb8 <printline(char const*, char const*)>
   16126:	2401      	movs	r4, #1
   16128:	e7d0      	b.n	160cc <scheduler_init_all(bool)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:278
            if (failure) {
   1612a:	2c00      	cmp	r4, #0
   1612c:	d0ce      	beq.n	160cc <scheduler_init_all(bool)+0xb8>
   1612e:	e7f6      	b.n	1611e <scheduler_init_all(bool)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:283
        dbg_print("*  Restoring disk telemetry\n");
   16130:	4639      	mov	r1, r7
   16132:	481d      	ldr	r0, [pc, #116]	; (161a8 <scheduler_init_all(bool)+0x194>)
   16134:	f7ff fea6 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:285
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "r");
   16138:	491c      	ldr	r1, [pc, #112]	; (161ac <scheduler_init_all(bool)+0x198>)
   1613a:	481d      	ldr	r0, [pc, #116]	; (161b0 <scheduler_init_all(bool)+0x19c>)
   1613c:	f007 fef4 	bl	1df28 <fopen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:286
        if (fd) {
   16140:	4606      	mov	r6, r0
   16142:	b120      	cbz	r0, 1614e <scheduler_init_all(bool)+0x13a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:287
            tlm_stream_decode_file(fd);
   16144:	f7fe ff36 	bl	14fb4 <tlm_stream_decode_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:288
            fclose(fd);
   16148:	4630      	mov	r0, r6
   1614a:	f007 fc93 	bl	1da74 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:301
        task_list_t *e = gpTaskList;
   1614e:	2100      	movs	r1, #0
   16150:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:300
        uint32_t highestStack = 0;
   16152:	460d      	mov	r5, r1
   16154:	4b17      	ldr	r3, [pc, #92]	; (161b4 <scheduler_init_all(bool)+0x1a0>)
   16156:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:302
        while (NULL != e) {
   16158:	b142      	cbz	r2, 1616c <scheduler_init_all(bool)+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:303
            scheduler_task *task = e->task;
   1615a:	6817      	ldr	r7, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:304
            e = e->next;
   1615c:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:306
            if (task->mStackSize > highestStack) {
   1615e:	6afe      	ldr	r6, [r7, #44]	; 0x2c
   16160:	42b5      	cmp	r5, r6
   16162:	d2f9      	bcs.n	16158 <scheduler_init_all(bool)+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:308
                gTaskEntryTaskHandle = task->mHandle;
   16164:	6938      	ldr	r0, [r7, #16]
   16166:	4635      	mov	r5, r6
   16168:	2101      	movs	r1, #1
   1616a:	e7f5      	b.n	16158 <scheduler_init_all(bool)+0x144>
   1616c:	2900      	cmp	r1, #0
   1616e:	f43f af5b 	beq.w	16028 <scheduler_init_all(bool)+0x14>
   16172:	6018      	str	r0, [r3, #0]
   16174:	e758      	b.n	16028 <scheduler_init_all(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   16176:	f1b8 0f00 	cmp.w	r8, #0
   1617a:	d0d0      	beq.n	1611e <scheduler_init_all(bool)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:263
                failure = true;
   1617c:	4644      	mov	r4, r8
   1617e:	e7b0      	b.n	160e2 <scheduler_init_all(bool)+0xce>
   16180:	2007c4fc 	.word	0x2007c4fc
   16184:	00025755 	.word	0x00025755
   16188:	00025783 	.word	0x00025783
   1618c:	2007c50c 	.word	0x2007c50c
   16190:	000257b5 	.word	0x000257b5
   16194:	000257d8 	.word	0x000257d8
   16198:	00025807 	.word	0x00025807
   1619c:	0002582c 	.word	0x0002582c
   161a0:	00025837 	.word	0x00025837
   161a4:	00025841 	.word	0x00025841
   161a8:	00025865 	.word	0x00025865
   161ac:	000275d3 	.word	0x000275d3
   161b0:	000263ae 	.word	0x000263ae
   161b4:	2007c510 	.word	0x2007c510
   161b8:	00015ef1 	.word	0x00015ef1
   161bc:	0002579a 	.word	0x0002579a
   161c0:	000257f3 	.word	0x000257f3

000161c4 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:317

void scheduler_add_task(scheduler_task* task)
{
   161c4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:318
    if (NULL != task)
   161c6:	4604      	mov	r4, r0
   161c8:	b138      	cbz	r0, 161da <scheduler_add_task(scheduler_task*)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:321
    {
        /* Insert new task at the beginning */
        task_list_t *newEntry = new task_list_t;
   161ca:	2008      	movs	r0, #8
   161cc:	f000 fe50 	bl	16e70 <operator new(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
        if (NULL != newEntry) {
            newEntry->next = gpTaskList;
   161d0:	4b02      	ldr	r3, [pc, #8]	; (161dc <scheduler_add_task(scheduler_task*)+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:324
            newEntry->task = task;
   161d2:	6004      	str	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   161d4:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:325
            gpTaskList = newEntry;
   161d6:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   161d8:	6042      	str	r2, [r0, #4]
   161da:	bd10      	pop	{r4, pc}
   161dc:	2007c4fc 	.word	0x2007c4fc

000161e0 <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    }
}

void scheduler_start(bool dp, bool register_internal_tlm)
{
    g_dbg_print = dp;
   161e0:	4b0b      	ldr	r3, [pc, #44]	; (16210 <scheduler_start(bool, bool)+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:331
{
   161e2:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    g_dbg_print = dp;
   161e4:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:335

    /* If no failure, start the FreeRTOS scheduler */
    if (!scheduler_init_all(register_internal_tlm))
   161e6:	4608      	mov	r0, r1
   161e8:	f7ff ff14 	bl	16014 <scheduler_init_all(bool)>
   161ec:	4604      	mov	r4, r0
   161ee:	b958      	cbnz	r0, 16208 <scheduler_start(bool, bool)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:337
    {
        dbg_print("*  Starting scheduler ...\n");
   161f0:	4601      	mov	r1, r0
   161f2:	4808      	ldr	r0, [pc, #32]	; (16214 <scheduler_start(bool, bool)+0x34>)
   161f4:	f7ff fe46 	bl	15e84 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:340

        // vTaskStartScheduler() should not return
        vTaskStartScheduler();
   161f8:	f003 f82e 	bl	19258 <vTaskStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:341
        printline("ERROR: Someone killed the scheduler");
   161fc:	4621      	mov	r1, r4
   161fe:	4806      	ldr	r0, [pc, #24]	; (16218 <scheduler_start(bool, bool)+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:346
    }
    else {
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
    }
}
   16200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:344
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
   16204:	f7ff be58 	b.w	15eb8 <printline(char const*, char const*)>
   16208:	2100      	movs	r1, #0
   1620a:	4804      	ldr	r0, [pc, #16]	; (1621c <scheduler_start(bool, bool)+0x3c>)
   1620c:	e7f8      	b.n	16200 <scheduler_start(bool, bool)+0x20>
   1620e:	bf00      	nop
   16210:	2007c500 	.word	0x2007c500
   16214:	000256e0 	.word	0x000256e0
   16218:	000256fb 	.word	0x000256fb
   1621c:	0002571f 	.word	0x0002571f

00016220 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:350



scheduler_task::scheduler_task(const char *name, uint32_t stack, uint8_t priority, void *param) :
   16220:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:364
   mTaskDelayMs(0),
   mStatUpdateRateMs(60 * 1000),
   mName(name),
   mParam(param),
   mStackSize(stack),
   mPriority(priority)
   16222:	4d0b      	ldr	r5, [pc, #44]	; (16250 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   16224:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   16228:	6005      	str	r5, [r0, #0]
   1622a:	2500      	movs	r5, #0
   1622c:	6045      	str	r5, [r0, #4]
   1622e:	6085      	str	r5, [r0, #8]
   16230:	6105      	str	r5, [r0, #16]
   16232:	6145      	str	r5, [r0, #20]
   16234:	6185      	str	r5, [r0, #24]
   16236:	61c5      	str	r5, [r0, #28]
   16238:	f64e 2560 	movw	r5, #60000	; 0xea60
   1623c:	6241      	str	r1, [r0, #36]	; 0x24
   1623e:	9904      	ldr	r1, [sp, #16]
   16240:	60c6      	str	r6, [r0, #12]
   16242:	6205      	str	r5, [r0, #32]
   16244:	6281      	str	r1, [r0, #40]	; 0x28
   16246:	62c2      	str	r2, [r0, #44]	; 0x2c
   16248:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:367
{

}
   1624c:	bd70      	pop	{r4, r5, r6, pc}
   1624e:	bf00      	nop
   16250:	000256c8 	.word	0x000256c8

00016254 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:498
    return true;
}

void* scheduler_task::getSharedObject(uint8_t index)
{
    return (index < gEnumObjects.count) ? gEnumObjects.pointers[index] : NULL;
   16254:	4b04      	ldr	r3, [pc, #16]	; (16268 <scheduler_task::getSharedObject(unsigned char)+0x14>)
   16256:	681a      	ldr	r2, [r3, #0]
   16258:	4290      	cmp	r0, r2
   1625a:	bf3a      	itte	cc
   1625c:	685b      	ldrcc	r3, [r3, #4]
   1625e:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   16262:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:499
}
   16264:	4770      	bx	lr
   16266:	bf00      	nop
   16268:	2007c504 	.word	0x2007c504

0001626c <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
 *             otherwise it will return a buffer pointer without blocking since buffer will always be
 *             available if OS is not running since no multi-threaded operation is going on.
 */
static char * logger_get_buffer_ptr(const bool os_running)
{
    char * buffer = NULL;
   1626c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:125
{
   1626e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
    char * buffer = NULL;
   16270:	ac02      	add	r4, sp, #8
   16272:	f844 3d04 	str.w	r3, [r4, #-4]!
   16276:	4d0d      	ldr	r5, [pc, #52]	; (162ac <logger_get_buffer_ptr+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:129

    /* Get an available buffer to write the data to, and if OS is not running, we will always get a buffer */
    if (!os_running) {
   16278:	b940      	cbnz	r0, 1628c <logger_get_buffer_ptr+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:130
        xQueueReceive(g_empty_buffer_queue, &buffer, 0);
   1627a:	4603      	mov	r3, r0
   1627c:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
    }
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
        ++g_blocked_calls;

        /* This time, just block forever until we get a buffer */
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   1627e:	4621      	mov	r1, r4
   16280:	6828      	ldr	r0, [r5, #0]
   16282:	f002 fd85 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:140
    }

    return buffer;
}
   16286:	9801      	ldr	r0, [sp, #4]
   16288:	b003      	add	sp, #12
   1628a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:132
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
   1628c:	220a      	movs	r2, #10
   1628e:	4621      	mov	r1, r4
   16290:	6828      	ldr	r0, [r5, #0]
   16292:	f002 fd7d 	bl	18d90 <xQueueGenericReceive>
   16296:	4603      	mov	r3, r0
   16298:	2800      	cmp	r0, #0
   1629a:	d1f4      	bne.n	16286 <logger_get_buffer_ptr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:133
        ++g_blocked_calls;
   1629c:	4904      	ldr	r1, [pc, #16]	; (162b0 <logger_get_buffer_ptr+0x44>)
   1629e:	880a      	ldrh	r2, [r1, #0]
   162a0:	3201      	adds	r2, #1
   162a2:	800a      	strh	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   162a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   162a8:	e7e9      	b.n	1627e <logger_get_buffer_ptr+0x12>
   162aa:	bf00      	nop
   162ac:	2007c518 	.word	0x2007c518
   162b0:	2007c514 	.word	0x2007c514

000162b4 <logger_write_to_file>:
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   162b4:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   162b6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   162b8:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   162bc:	460d      	mov	r5, r1
   162be:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   162c0:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   162c2:	f7fa f8eb 	bl	1049c <sys_get_uptime_us>
   162c6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   162ca:	2300      	movs	r3, #0
   162cc:	f007 f9d6 	bl	1d67c <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    FIL fatfs_file = { 0 };
   162d0:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   162d4:	4606      	mov	r6, r0
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   162d6:	4621      	mov	r1, r4
   162d8:	a803      	add	r0, sp, #12
   162da:	f008 f949 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    if (0 == bytes_to_write_uint) {
   162de:	2d00      	cmp	r5, #0
   162e0:	d038      	beq.n	16354 <logger_write_to_file+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   162e2:	2212      	movs	r2, #18
   162e4:	491c      	ldr	r1, [pc, #112]	; (16358 <logger_write_to_file+0xa4>)
   162e6:	a803      	add	r0, sp, #12
   162e8:	f7fc fc50 	bl	12b8c <f_open>
   162ec:	4604      	mov	r4, r0
   162ee:	bb68      	cbnz	r0, 1634c <logger_write_to_file+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   162f0:	9906      	ldr	r1, [sp, #24]
   162f2:	a803      	add	r0, sp, #12
   162f4:	f7fc fec6 	bl	13084 <f_lseek>
   162f8:	4604      	mov	r4, r0
   162fa:	b930      	cbnz	r0, 1630a <logger_write_to_file+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   162fc:	ab02      	add	r3, sp, #8
   162fe:	462a      	mov	r2, r5
   16300:	4639      	mov	r1, r7
   16302:	a803      	add	r0, sp, #12
   16304:	f7fc fd91 	bl	12e2a <f_write>
   16308:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        f_close(&fatfs_file);
   1630a:	a803      	add	r0, sp, #12
   1630c:	f7fc fea8 	bl	13060 <f_close>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   16310:	f7fa f8c4 	bl	1049c <sys_get_uptime_us>
   16314:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16318:	2300      	movs	r3, #0
   1631a:	f007 f9af 	bl	1d67c <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   1631e:	4b0f      	ldr	r3, [pc, #60]	; (1635c <logger_write_to_file+0xa8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   16320:	1b80      	subs	r0, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   16322:	881a      	ldrh	r2, [r3, #0]
   16324:	4290      	cmp	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   16326:	9a02      	ldr	r2, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   16328:	bf88      	it	hi
   1632a:	8018      	strhhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   1632c:	4295      	cmp	r5, r2
   1632e:	bf0c      	ite	eq
   16330:	2601      	moveq	r6, #1
   16332:	2600      	movne	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106
    if (!success) {
   16334:	d006      	beq.n	16344 <logger_write_to_file+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   16336:	9b05      	ldr	r3, [sp, #20]
   16338:	4621      	mov	r1, r4
   1633a:	9300      	str	r3, [sp, #0]
   1633c:	4808      	ldr	r0, [pc, #32]	; (16360 <logger_write_to_file+0xac>)
   1633e:	462b      	mov	r3, r5
   16340:	f009 fac2 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
}
   16344:	4630      	mov	r0, r6
   16346:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   1634a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   1634c:	4805      	ldr	r0, [pc, #20]	; (16364 <logger_write_to_file+0xb0>)
   1634e:	f009 fabb 	bl	1f8c8 <iprintf>
   16352:	e7dd      	b.n	16310 <logger_write_to_file+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   16354:	462c      	mov	r4, r5
   16356:	e7db      	b.n	16310 <logger_write_to_file+0x5c>
   16358:	000259b7 	.word	0x000259b7
   1635c:	2007c51c 	.word	0x2007c51c
   16360:	000259d5 	.word	0x000259d5
   16364:	000259c1 	.word	0x000259c1

00016368 <logger_task>:
logger_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   16368:	4b2f      	ldr	r3, [pc, #188]	; (16428 <logger_task+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   1636a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   1636e:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   16370:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 16430 <logger_task+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   16374:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   16376:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 16434 <logger_task+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   1637a:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   1637e:	2300      	movs	r3, #0
   16380:	af02      	add	r7, sp, #8
   16382:	f847 3d04 	str.w	r3, [r7, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   16386:	f64e 2260 	movw	r2, #60000	; 0xea60
   1638a:	4639      	mov	r1, r7
   1638c:	f8d9 0000 	ldr.w	r0, [r9]
   16390:	f002 fcfe 	bl	18d90 <xQueueGenericReceive>
   16394:	b108      	cbz	r0, 1639a <logger_task+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   16396:	9b01      	ldr	r3, [sp, #4]
   16398:	b92b      	cbnz	r3, 163a6 <logger_task+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   1639a:	1b71      	subs	r1, r6, r5
   1639c:	4628      	mov	r0, r5
   1639e:	f7ff ff89 	bl	162b4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   163a2:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   163a4:	e7eb      	b.n	1637e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   163a6:	f8d9 0000 	ldr.w	r0, [r9]
   163aa:	f002 fdbf 	bl	18f2c <uxQueueMessagesWaiting>
   163ae:	f8ba 3000 	ldrh.w	r3, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   163b2:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   163b4:	3001      	adds	r0, #1
   163b6:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   163b8:	bf88      	it	hi
   163ba:	f8aa 0000 	strhhi.w	r0, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   163be:	4620      	mov	r0, r4
   163c0:	f009 fe5c 	bl	2007c <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   163c4:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   163c6:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   163c8:	5423      	strb	r3, [r4, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   163ca:	f100 0b01 	add.w	fp, r0, #1
   163ce:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   163d0:	eb06 040b 	add.w	r4, r6, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   163d4:	f802 100b 	strb.w	r1, [r2, fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   163d8:	45a0      	cmp	r8, r4
   163da:	9901      	ldr	r1, [sp, #4]
   163dc:	d81f      	bhi.n	1641e <logger_task+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   163de:	eba8 0206 	sub.w	r2, r8, r6
   163e2:	4630      	mov	r0, r6
   163e4:	f008 f89f 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   163e8:	eba4 0408 	sub.w	r4, r4, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   163ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
   163f0:	4628      	mov	r0, r5
   163f2:	f7ff ff5f 	bl	162b4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   163f6:	b13c      	cbz	r4, 16408 <logger_task+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   163f8:	9901      	ldr	r1, [sp, #4]
   163fa:	ebab 0b04 	sub.w	fp, fp, r4
   163fe:	4622      	mov	r2, r4
   16400:	4459      	add	r1, fp
   16402:	4628      	mov	r0, r5
   16404:	f008 f88f 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   16408:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   1640a:	4808      	ldr	r0, [pc, #32]	; (1642c <logger_task+0xc4>)
   1640c:	2300      	movs	r3, #0
   1640e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16412:	4639      	mov	r1, r7
   16414:	6800      	ldr	r0, [r0, #0]
   16416:	f002 fbb3 	bl	18b80 <xQueueGenericSend>
   1641a:	4626      	mov	r6, r4
   1641c:	e7af      	b.n	1637e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   1641e:	465a      	mov	r2, fp
   16420:	4630      	mov	r0, r6
   16422:	f008 f880 	bl	1e526 <memcpy>
   16426:	e7f0      	b.n	1640a <logger_task+0xa2>
   16428:	2007c534 	.word	0x2007c534
   1642c:	2007c518 	.word	0x2007c518
   16430:	2007c530 	.word	0x2007c530
   16434:	2007c516 	.word	0x2007c516

00016438 <logger_write_log_message>:
logger_write_log_message():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:148
{
   16438:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1643a:	ac02      	add	r4, sp, #8
   1643c:	f844 0d04 	str.w	r0, [r4, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:150
    if (os_running) {
   16440:	460d      	mov	r5, r1
   16442:	b149      	cbz	r1, 16458 <logger_write_log_message+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:151
        xQueueSend(g_write_buffer_queue, &buffer, portMAX_DELAY);
   16444:	2300      	movs	r3, #0
   16446:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1644a:	4621      	mov	r1, r4
   1644c:	480a      	ldr	r0, [pc, #40]	; (16478 <logger_write_log_message+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   1644e:	6800      	ldr	r0, [r0, #0]
   16450:	f002 fb96 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:163
}
   16454:	b002      	add	sp, #8
   16456:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:155
        size_t len = strlen(buffer);
   16458:	4606      	mov	r6, r0
   1645a:	f009 fe0f 	bl	2007c <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:156
        buffer[len] = '\n';
   1645e:	230a      	movs	r3, #10
   16460:	5433      	strb	r3, [r6, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:157
        buffer[++len] = '\0';
   16462:	9b01      	ldr	r3, [sp, #4]
   16464:	1c41      	adds	r1, r0, #1
   16466:	545d      	strb	r5, [r3, r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:158
        logger_write_to_file(buffer, len);
   16468:	9801      	ldr	r0, [sp, #4]
   1646a:	f7ff ff23 	bl	162b4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   1646e:	462b      	mov	r3, r5
   16470:	462a      	mov	r2, r5
   16472:	4621      	mov	r1, r4
   16474:	4801      	ldr	r0, [pc, #4]	; (1647c <logger_write_log_message+0x44>)
   16476:	e7ea      	b.n	1644e <logger_write_log_message+0x16>
   16478:	2007c530 	.word	0x2007c530
   1647c:	2007c518 	.word	0x2007c518

00016480 <logger_send_flush_request>:
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:347

        return (!success);
}

void logger_send_flush_request(void)
{
   16480:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   16482:	f003 fa79 	bl	19978 <xTaskGetSchedulerState>
   16486:	2802      	cmp	r0, #2
   16488:	d10c      	bne.n	164a4 <logger_send_flush_request+0x24>
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1648a:	4b08      	ldr	r3, [pc, #32]	; (164ac <logger_send_flush_request+0x2c>)
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   1648c:	681b      	ldr	r3, [r3, #0]
   1648e:	b14b      	cbz	r3, 164a4 <logger_send_flush_request+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
    {
        char * null_ptr_to_flush = NULL;
   16490:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   16492:	4807      	ldr	r0, [pc, #28]	; (164b0 <logger_send_flush_request+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
        char * null_ptr_to_flush = NULL;
   16494:	a902      	add	r1, sp, #8
   16496:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   1649a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1649e:	6800      	ldr	r0, [r0, #0]
   164a0:	f002 fb6e 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:353
    }
}
   164a4:	b003      	add	sp, #12
   164a6:	f85d fb04 	ldr.w	pc, [sp], #4
   164aa:	bf00      	nop
   164ac:	2007c534 	.word	0x2007c534
   164b0:	2007c530 	.word	0x2007c530

000164b4 <logger_get_logged_call_count>:
logger_get_logged_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:357

uint32_t logger_get_logged_call_count(logger_msg_t severity)
{
    return (severity < log_last) ? g_logger_calls[severity] : 0;
   164b4:	2803      	cmp	r0, #3
   164b6:	bf9a      	itte	ls
   164b8:	4b02      	ldrls	r3, [pc, #8]	; (164c4 <logger_get_logged_call_count+0x10>)
   164ba:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
   164be:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:358
}
   164c0:	4770      	bx	lr
   164c2:	bf00      	nop
   164c4:	2007c520 	.word	0x2007c520

000164c8 <logger_get_blocked_call_count>:
logger_get_blocked_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:363

uint16_t logger_get_blocked_call_count(void)
{
    return g_blocked_calls;
}
   164c8:	4b01      	ldr	r3, [pc, #4]	; (164d0 <logger_get_blocked_call_count+0x8>)
   164ca:	8818      	ldrh	r0, [r3, #0]
   164cc:	4770      	bx	lr
   164ce:	bf00      	nop
   164d0:	2007c514 	.word	0x2007c514

000164d4 <logger_get_highest_file_write_time_ms>:
logger_get_highest_file_write_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:368

uint16_t logger_get_highest_file_write_time_ms(void)
{
    return g_highest_file_write_time;
}
   164d4:	4b01      	ldr	r3, [pc, #4]	; (164dc <logger_get_highest_file_write_time_ms+0x8>)
   164d6:	8818      	ldrh	r0, [r3, #0]
   164d8:	4770      	bx	lr
   164da:	bf00      	nop
   164dc:	2007c51c 	.word	0x2007c51c

000164e0 <logger_get_num_buffers_watermark>:
logger_get_num_buffers_watermark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:373

uint16_t logger_get_num_buffers_watermark(void)
{
    return g_buffer_watermark;
}
   164e0:	4b01      	ldr	r3, [pc, #4]	; (164e8 <logger_get_num_buffers_watermark+0x8>)
   164e2:	8818      	ldrh	r0, [r3, #0]
   164e4:	4770      	bx	lr
   164e6:	bf00      	nop
   164e8:	2007c516 	.word	0x2007c516

000164ec <logger_init>:
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376

void logger_init(uint8_t logger_priority)
{
   164ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   164f0:	4c2b      	ldr	r4, [pc, #172]	; (165a0 <logger_init+0xb4>)
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   164f2:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   164f4:	6825      	ldr	r5, [r4, #0]
   164f6:	2d00      	cmp	r5, #0
   164f8:	d14a      	bne.n	16590 <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   164fa:	f44f 6080 	mov.w	r0, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   164fe:	9503      	str	r5, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   16500:	f007 ffd2 	bl	1e4a8 <malloc>
   16504:	4e27      	ldr	r6, [pc, #156]	; (165a4 <logger_init+0xb8>)
   16506:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   16508:	b9a8      	cbnz	r0, 16536 <logger_init+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   1650a:	6820      	ldr	r0, [r4, #0]
   1650c:	2800      	cmp	r0, #0
   1650e:	d142      	bne.n	16596 <logger_init+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   16510:	6833      	ldr	r3, [r6, #0]
   16512:	b163      	cbz	r3, 1652e <logger_init+0x42>
   16514:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   16516:	2300      	movs	r3, #0
   16518:	a903      	add	r1, sp, #12
   1651a:	461a      	mov	r2, r3
   1651c:	6830      	ldr	r0, [r6, #0]
   1651e:	f002 fc37 	bl	18d90 <xQueueGenericReceive>
   16522:	b110      	cbz	r0, 1652a <logger_init+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   16524:	9803      	ldr	r0, [sp, #12]
   16526:	f007 ffc7 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   1652a:	3c01      	subs	r4, #1
   1652c:	d1f3      	bne.n	16516 <logger_init+0x2a>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   1652e:	481e      	ldr	r0, [pc, #120]	; (165a8 <logger_init+0xbc>)
   16530:	f009 fa3e 	bl	1f9b0 <puts>
   16534:	e02c      	b.n	16590 <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   16536:	462a      	mov	r2, r5
   16538:	2104      	movs	r1, #4
   1653a:	200a      	movs	r0, #10
   1653c:	f002 fafe 	bl	18b3c <xQueueGenericCreate>
   16540:	4f1a      	ldr	r7, [pc, #104]	; (165ac <logger_init+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   16542:	462a      	mov	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   16544:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   16546:	2104      	movs	r1, #4
   16548:	200a      	movs	r0, #10
   1654a:	f002 faf7 	bl	18b3c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   1654e:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   16550:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   16552:	2b00      	cmp	r3, #0
   16554:	d0d9      	beq.n	1650a <logger_init+0x1e>
   16556:	2800      	cmp	r0, #0
   16558:	d0d7      	beq.n	1650a <logger_init+0x1e>
   1655a:	250a      	movs	r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   1655c:	2096      	movs	r0, #150	; 0x96
   1655e:	f007 ffa3 	bl	1e4a8 <malloc>
   16562:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   16564:	2800      	cmp	r0, #0
   16566:	d0d0      	beq.n	1650a <logger_init+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   16568:	2300      	movs	r3, #0
   1656a:	a903      	add	r1, sp, #12
   1656c:	461a      	mov	r2, r3
   1656e:	6830      	ldr	r0, [r6, #0]
   16570:	f002 fb06 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   16574:	3d01      	subs	r5, #1
   16576:	d1f1      	bne.n	1655c <logger_init+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   16578:	9501      	str	r5, [sp, #4]
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   1657a:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   1657e:	462b      	mov	r3, r5
   16580:	f44f 72c0 	mov.w	r2, #384	; 0x180
   16584:	490a      	ldr	r1, [pc, #40]	; (165b0 <logger_init+0xc4>)
   16586:	480b      	ldr	r0, [pc, #44]	; (165b4 <logger_init+0xc8>)
   16588:	f002 fd6a 	bl	19060 <xTaskCreate>
   1658c:	2800      	cmp	r0, #0
   1658e:	d0bc      	beq.n	1650a <logger_init+0x1e>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   16590:	b004      	add	sp, #16
   16592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   16596:	f007 ff8f 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   1659a:	2300      	movs	r3, #0
   1659c:	6023      	str	r3, [r4, #0]
   1659e:	e7b7      	b.n	16510 <logger_init+0x24>
   165a0:	2007c534 	.word	0x2007c534
   165a4:	2007c518 	.word	0x2007c518
   165a8:	0002596b 	.word	0x0002596b
   165ac:	2007c530 	.word	0x2007c530
   165b0:	00025964 	.word	0x00025964
   165b4:	00016369 	.word	0x00016369

000165b8 <logger_set_printf>:
logger_set_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:388

void logger_set_printf(logger_msg_t type, bool enable)
{
    const uint8_t mask = (1 << type);
   165b8:	2301      	movs	r3, #1
   165ba:	fa03 f000 	lsl.w	r0, r3, r0
   165be:	4b04      	ldr	r3, [pc, #16]	; (165d0 <logger_set_printf+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
    if (enable) {
        g_logger_printf_mask |= mask;
   165c0:	781a      	ldrb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:389
    if (enable) {
   165c2:	b111      	cbz	r1, 165ca <logger_set_printf+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
        g_logger_printf_mask |= mask;
   165c4:	4310      	orrs	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:393
    }
    else {
        g_logger_printf_mask &= ~mask;
   165c6:	7018      	strb	r0, [r3, #0]
   165c8:	4770      	bx	lr
   165ca:	ea22 0000 	bic.w	r0, r2, r0
   165ce:	e7fa      	b.n	165c6 <logger_set_printf+0xe>
   165d0:	2007c096 	.word	0x2007c096

000165d4 <logger_log>:
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
    }
}

void logger_log(logger_msg_t type, const char * filename, const char * func_name, unsigned line_num,
                const char * msg, ...)
{
   165d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165d8:	469a      	mov	sl, r3
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   165da:	4b45      	ldr	r3, [pc, #276]	; (166f0 <logger_log+0x11c>)
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   165dc:	b097      	sub	sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   165de:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   165e0:	4606      	mov	r6, r0
   165e2:	460c      	mov	r4, r1
   165e4:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   165e6:	2b00      	cmp	r3, #0
   165e8:	d07c      	beq.n	166e4 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:407
    }

    uint32_t len = 0;
    char * buffer = NULL;
    char * temp_ptr = NULL;
    const rtc_t time = rtc_gettime();
   165ea:	a80f      	add	r0, sp, #60	; 0x3c
   165ec:	f001 fb60 	bl	17cb0 <rtc_gettime>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   165f0:	f7f9 ff54 	bl	1049c <sys_get_uptime_us>
   165f4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   165f8:	2300      	movs	r3, #0
   165fa:	f007 f83f 	bl	1d67c <__aeabi_uldivmod>
   165fe:	4681      	mov	r9, r0
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const unsigned int uptime = sys_get_uptime_ms();
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16600:	f003 f9ba 	bl	19978 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412

    /* This must match up with the logger_msg_t enumeration */
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16604:	4b3b      	ldr	r3, [pc, #236]	; (166f4 <logger_log+0x120>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16606:	1e82      	subs	r2, r0, #2
   16608:	f1d2 0800 	rsbs	r8, r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   1660c:	af16      	add	r7, sp, #88	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   1660e:	eb48 0802 	adc.w	r8, r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16612:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   16614:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:415

    // Find the back-slash or forward-slash to get filename only, not absolute or relative path
    if(0 != filename) {
   16618:	2c00      	cmp	r4, #0
   1661a:	d066      	beq.n	166ea <logger_log+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:416
        temp_ptr = strrchr(filename, '/');
   1661c:	212f      	movs	r1, #47	; 0x2f
   1661e:	4620      	mov	r0, r4
   16620:	f009 fd82 	bl	20128 <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418
        // If forward-slash not found, find back-slash
        if(0 == temp_ptr) temp_ptr = strrchr(filename, '\\');
   16624:	b920      	cbnz	r0, 16630 <logger_log+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418 (discriminator 1)
   16626:	215c      	movs	r1, #92	; 0x5c
   16628:	4620      	mov	r0, r4
   1662a:	f009 fd7d 	bl	20128 <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:419 (discriminator 1)
        if(0 != temp_ptr) filename = temp_ptr+1;
   1662e:	b100      	cbz	r0, 16632 <logger_log+0x5e>
   16630:	1c44      	adds	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
    else {
        filename = "";
    }

    if (0 == func_name) {
        func_name = "";
   16632:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 16708 <logger_log+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    }

    /* Get an available buffer */
    buffer = logger_get_buffer_ptr(os_running);
   16636:	4640      	mov	r0, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
        func_name = "";
   16638:	2d00      	cmp	r5, #0
   1663a:	bf08      	it	eq
   1663c:	465d      	moveq	r5, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   1663e:	f7ff fe15 	bl	1626c <logger_get_buffer_ptr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435

    do {
        int mon = time.month;
        int day = time.day;
        int hr = time.hour;
   16642:	f89d 103e 	ldrb.w	r1, [sp, #62]	; 0x3e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        int min = time.min;
        int sec = time.sec;
        unsigned int up = uptime;
        const char *log_type_str = type_str[type];
        const char *func_parens  = func_name[0] ? "()" : "";
   16646:	f895 c000 	ldrb.w	ip, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435
        int hr = time.hour;
   1664a:	f001 0e1f 	and.w	lr, r1, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   1664e:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:433
        int mon = time.month;
   16652:	f89d 2041 	ldrb.w	r2, [sp, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   16656:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   1665a:	910b      	str	r1, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   1665c:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:434
        int day = time.day;
   16660:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   16664:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   16668:	910c      	str	r1, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   1666a:	a916      	add	r1, sp, #88	; 0x58
   1666c:	eb01 0186 	add.w	r1, r1, r6, lsl #2
   16670:	f851 1c10 	ldr.w	r1, [r1, #-16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443

        /* Write the header including time, filename, function name etc */
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   16674:	f003 031f 	and.w	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   16678:	910d      	str	r1, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   1667a:	491f      	ldr	r1, [pc, #124]	; (166f8 <logger_log+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   1667c:	f8cd e000 	str.w	lr, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   16680:	f1bc 0f00 	cmp.w	ip, #0
   16684:	bf08      	it	eq
   16686:	4659      	moveq	r1, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   16688:	9107      	str	r1, [sp, #28]
   1668a:	990d      	ldr	r1, [sp, #52]	; 0x34
   1668c:	f002 020f 	and.w	r2, r2, #15
   16690:	9104      	str	r1, [sp, #16]
   16692:	990c      	ldr	r1, [sp, #48]	; 0x30
   16694:	f8cd a020 	str.w	sl, [sp, #32]
   16698:	9102      	str	r1, [sp, #8]
   1669a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1669c:	9506      	str	r5, [sp, #24]
   1669e:	9101      	str	r1, [sp, #4]
   166a0:	9405      	str	r4, [sp, #20]
   166a2:	4916      	ldr	r1, [pc, #88]	; (166fc <logger_log+0x128>)
   166a4:	f8cd 900c 	str.w	r9, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   166a8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   166aa:	f009 fc07 	bl	1febc <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
     *
     * Note: "size" of snprintf() includes the NULL character
     */
    do {
        va_list args;
        va_start(args, msg);
   166ae:	ab21      	add	r3, sp, #132	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   166b0:	f1c0 0195 	rsb	r1, r0, #149	; 0x95
   166b4:	9a20      	ldr	r2, [sp, #128]	; 0x80
   166b6:	4438      	add	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
        va_start(args, msg);
   166b8:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   166ba:	f00a feed 	bl	21498 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
        va_end(args);
    } while (0);

    ++g_logger_calls[type];
   166be:	4a10      	ldr	r2, [pc, #64]	; (16700 <logger_log+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   166c0:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   166c2:	f852 3026 	ldr.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   166c6:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   166c8:	3301      	adds	r3, #1
   166ca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   166ce:	f7ff feb3 	bl	16438 <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:471

    /* Print the message out if the printf mask was set */
    if (g_logger_printf_mask & (1 << type)) {
   166d2:	4b0c      	ldr	r3, [pc, #48]	; (16704 <logger_log+0x130>)
   166d4:	781b      	ldrb	r3, [r3, #0]
   166d6:	fa43 f606 	asr.w	r6, r3, r6
   166da:	07f3      	lsls	r3, r6, #31
   166dc:	d502      	bpl.n	166e4 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:472
        puts(buffer);
   166de:	4638      	mov	r0, r7
   166e0:	f009 f966 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:474
    }
}
   166e4:	b017      	add	sp, #92	; 0x5c
   166e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:422
        filename = "";
   166ea:	4c07      	ldr	r4, [pc, #28]	; (16708 <logger_log+0x134>)
   166ec:	e7a1      	b.n	16632 <logger_log+0x5e>
   166ee:	bf00      	nop
   166f0:	2007c534 	.word	0x2007c534
   166f4:	00025954 	.word	0x00025954
   166f8:	000257b2 	.word	0x000257b2
   166fc:	00025990 	.word	0x00025990
   16700:	2007c520 	.word	0x2007c520
   16704:	2007c096 	.word	0x2007c096
   16708:	00026c08 	.word	0x00026c08

0001670c <logger_log_raw>:
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477

void logger_log_raw(const char * msg, ...)
{
   1670c:	b40f      	push	{r0, r1, r2, r3}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1670e:	4b0e      	ldr	r3, [pc, #56]	; (16748 <logger_log_raw+0x3c>)
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477
{
   16710:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:478
    if (!logger_initialized()) {
   16712:	681b      	ldr	r3, [r3, #0]
   16714:	b193      	cbz	r3, 1673c <logger_log_raw+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:482
        return;
    }

    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16716:	f003 f92f 	bl	19978 <xTaskGetSchedulerState>
   1671a:	1e83      	subs	r3, r0, #2
   1671c:	425c      	negs	r4, r3
   1671e:	415c      	adcs	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:483
    char * buffer = logger_get_buffer_ptr(os_running);
   16720:	4620      	mov	r0, r4
   16722:	f7ff fda3 	bl	1626c <logger_get_buffer_ptr>
   16726:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488

    /* Print the actual user message to the buffer */
    do {
        va_list args;
        va_start(args, msg);
   16728:	ab07      	add	r3, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   1672a:	2195      	movs	r1, #149	; 0x95
   1672c:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488
        va_start(args, msg);
   1672e:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   16730:	f00a feb2 	bl	21498 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:493
        va_end(args);
    } while (0);

    logger_write_log_message(buffer, os_running);
   16734:	4621      	mov	r1, r4
   16736:	4628      	mov	r0, r5
   16738:	f7ff fe7e 	bl	16438 <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:494
}
   1673c:	b003      	add	sp, #12
   1673e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   16742:	b004      	add	sp, #16
   16744:	4770      	bx	lr
   16746:	bf00      	nop
   16748:	2007c534 	.word	0x2007c534

0001674c <u0_dbg_put>:
u0_dbg_put():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   1674c:	b510      	push	{r4, lr}
   1674e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   16750:	f001 fff2 	bl	18738 <vPortEnterCritical>
   16754:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   16756:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   1675a:	b918      	cbnz	r0, 16764 <u0_dbg_put+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   1675c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   16760:	f001 bffa 	b.w	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   16764:	f7fa f8b8 	bl	108d8 <uart0_putchar>
   16768:	e7f5      	b.n	16756 <u0_dbg_put+0xa>

0001676a <u0_dbg_printf>:
u0_dbg_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   1676a:	b40f      	push	{r0, r1, r2, r3}
   1676c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   1676e:	f44f 7580 	mov.w	r5, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   16772:	b0c2      	sub	sp, #264	; 0x108
   16774:	ac46      	add	r4, sp, #280	; 0x118
   16776:	f854 6b04 	ldr.w	r6, [r4], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   1677a:	462a      	mov	r2, r5
   1677c:	2100      	movs	r1, #0
   1677e:	a802      	add	r0, sp, #8
   16780:	f007 fef6 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   16784:	4623      	mov	r3, r4
   16786:	4632      	mov	r2, r6
   16788:	4629      	mov	r1, r5
   1678a:	a802      	add	r0, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   1678c:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   1678e:	f00a fe83 	bl	21498 <vsniprintf>
   16792:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   16794:	a802      	add	r0, sp, #8
   16796:	f7ff ffd9 	bl	1674c <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   1679a:	4620      	mov	r0, r4
   1679c:	b042      	add	sp, #264	; 0x108
   1679e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   167a2:	b004      	add	sp, #16
   167a4:	4770      	bx	lr

000167a6 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   167a6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   167a8:	b513      	push	{r0, r1, r4, lr}
   167aa:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   167ac:	a902      	add	r1, sp, #8
   167ae:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   167b2:	6800      	ldr	r0, [r0, #0]
   167b4:	f002 fab8 	bl	18d28 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   167b8:	9b01      	ldr	r3, [sp, #4]
   167ba:	b11b      	cbz	r3, 167c4 <for_each_recur_alarm_callback+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   167bc:	6823      	ldr	r3, [r4, #0]
   167be:	f043 0301 	orr.w	r3, r3, #1
   167c2:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   167c4:	2001      	movs	r0, #1
   167c6:	b002      	add	sp, #8
   167c8:	bd10      	pop	{r4, pc}

000167ca <for_each_alarm_callback>:
for_each_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   167ca:	b530      	push	{r4, r5, lr}
   167cc:	4604      	mov	r4, r0
   167ce:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   167d0:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   167d2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   167d4:	f001 fa6c 	bl	17cb0 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   167d8:	f89d 3006 	ldrb.w	r3, [sp, #6]
   167dc:	7922      	ldrb	r2, [r4, #4]
   167de:	f003 031f 	and.w	r3, r3, #31
   167e2:	429a      	cmp	r2, r3
   167e4:	d11b      	bne.n	1681e <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   167e6:	f89d 3005 	ldrb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   167ea:	7962      	ldrb	r2, [r4, #5]
   167ec:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   167f0:	429a      	cmp	r2, r3
   167f2:	d114      	bne.n	1681e <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   167f4:	f89d 3004 	ldrb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   167f8:	79a2      	ldrb	r2, [r4, #6]
   167fa:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   167fe:	429a      	cmp	r2, r3
   16800:	d10d      	bne.n	1681e <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   16802:	2300      	movs	r3, #0
   16804:	a904      	add	r1, sp, #16
   16806:	f841 3d10 	str.w	r3, [r1, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   1680a:	6823      	ldr	r3, [r4, #0]
   1680c:	6818      	ldr	r0, [r3, #0]
   1680e:	f002 fa8b 	bl	18d28 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   16812:	9b00      	ldr	r3, [sp, #0]
   16814:	b11b      	cbz	r3, 1681e <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   16816:	682b      	ldr	r3, [r5, #0]
   16818:	f043 0301 	orr.w	r3, r3, #1
   1681c:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   1681e:	2001      	movs	r0, #1
   16820:	b005      	add	sp, #20
   16822:	bd30      	pop	{r4, r5, pc}

00016824 <RTC_IRQHandler>:
RTC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   16824:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   16826:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   16828:	4a23      	ldr	r2, [pc, #140]	; (168b8 <RTC_IRQHandler+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   1682a:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   1682c:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   1682e:	4c23      	ldr	r4, [pc, #140]	; (168bc <RTC_IRQHandler+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   16830:	f043 0301 	orr.w	r3, r3, #1
   16834:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   16836:	a803      	add	r0, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   16838:	9502      	str	r5, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   1683a:	f001 fa39 	bl	17cb0 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   1683e:	462b      	mov	r3, r5
   16840:	9500      	str	r5, [sp, #0]
   16842:	aa02      	add	r2, sp, #8
   16844:	491e      	ldr	r1, [pc, #120]	; (168c0 <RTC_IRQHandler+0x9c>)
   16846:	6820      	ldr	r0, [r4, #0]
   16848:	f7ff f955 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   1684c:	f89d 300c 	ldrb.w	r3, [sp, #12]
   16850:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   16854:	d11b      	bne.n	1688e <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16856:	9300      	str	r3, [sp, #0]
   16858:	aa02      	add	r2, sp, #8
   1685a:	4919      	ldr	r1, [pc, #100]	; (168c0 <RTC_IRQHandler+0x9c>)
   1685c:	6860      	ldr	r0, [r4, #4]
   1685e:	f7ff f94a 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   16862:	f89d 300d 	ldrb.w	r3, [sp, #13]
   16866:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   1686a:	d110      	bne.n	1688e <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   1686c:	9300      	str	r3, [sp, #0]
   1686e:	aa02      	add	r2, sp, #8
   16870:	4913      	ldr	r1, [pc, #76]	; (168c0 <RTC_IRQHandler+0x9c>)
   16872:	68a0      	ldr	r0, [r4, #8]
   16874:	f7ff f93f 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   16878:	f89d 300e 	ldrb.w	r3, [sp, #14]
   1687c:	f013 031f 	ands.w	r3, r3, #31
   16880:	d105      	bne.n	1688e <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16882:	9300      	str	r3, [sp, #0]
   16884:	aa02      	add	r2, sp, #8
   16886:	490e      	ldr	r1, [pc, #56]	; (168c0 <RTC_IRQHandler+0x9c>)
   16888:	68e0      	ldr	r0, [r4, #12]
   1688a:	f7ff f934 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   1688e:	2300      	movs	r3, #0
   16890:	480c      	ldr	r0, [pc, #48]	; (168c4 <RTC_IRQHandler+0xa0>)
   16892:	9300      	str	r3, [sp, #0]
   16894:	aa02      	add	r2, sp, #8
   16896:	490c      	ldr	r1, [pc, #48]	; (168c8 <RTC_IRQHandler+0xa4>)
   16898:	6800      	ldr	r0, [r0, #0]
   1689a:	f7ff f92c 	bl	15af6 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   1689e:	9b02      	ldr	r3, [sp, #8]
   168a0:	b13b      	cbz	r3, 168b2 <RTC_IRQHandler+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   168a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   168a6:	4b09      	ldr	r3, [pc, #36]	; (168cc <RTC_IRQHandler+0xa8>)
   168a8:	601a      	str	r2, [r3, #0]
   168aa:	f3bf 8f4f 	dsb	sy
   168ae:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   168b2:	b007      	add	sp, #28
   168b4:	bd30      	pop	{r4, r5, pc}
   168b6:	bf00      	nop
   168b8:	40024000 	.word	0x40024000
   168bc:	2007c538 	.word	0x2007c538
   168c0:	000167a7 	.word	0x000167a7
   168c4:	2007c548 	.word	0x2007c548
   168c8:	000167cb 	.word	0x000167cb
   168cc:	e000ed04 	.word	0xe000ed04

000168d0 <delay_us>:
delay_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   168d0:	b570      	push	{r4, r5, r6, lr}
   168d2:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   168d4:	f7f9 fde2 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   168d8:	1984      	adds	r4, r0, r6
   168da:	f141 0500 	adc.w	r5, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   168de:	f7f9 fddd 	bl	1049c <sys_get_uptime_us>
   168e2:	42a9      	cmp	r1, r5
   168e4:	bf08      	it	eq
   168e6:	42a0      	cmpeq	r0, r4
   168e8:	d3f9      	bcc.n	168de <delay_us+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   168ea:	bd70      	pop	{r4, r5, r6, pc}

000168ec <is_freertos_running>:
is_freertos_running():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   168ec:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   168ee:	f003 f843 	bl	19978 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   168f2:	1e83      	subs	r3, r0, #2
   168f4:	4258      	negs	r0, r3
   168f6:	4158      	adcs	r0, r3
   168f8:	bd08      	pop	{r3, pc}

000168fa <delay_ms>:
delay_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   168fa:	b510      	push	{r4, lr}
   168fc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   168fe:	f7ff fff5 	bl	168ec <is_freertos_running>
   16902:	b120      	cbz	r0, 1690e <delay_ms+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   16904:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16906:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   1690a:	f002 be1f 	b.w	1954c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   1690e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   16912:	4360      	muls	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   16918:	f7ff bfda 	b.w	168d0 <delay_us>

0001691c <str::str(char*, int)>:
_ZN3strC2EPci():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
{
    init(strlen(pString)); // Init with enough memory allocation needed to store pString's length
    copyFrom(pString);
}
/// Cannot call init() for this constructor
str::str(char *buff, int size) :
   1691c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mStackMem(true),
        mCapacity(0),
        mpStr(buff),
        mpTempStr(NULL),
        mpTokenPtr(NULL)
   1691e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   16920:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16922:	7023      	strb	r3, [r4, #0]
   16924:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
{
    mCapacity = (size > 0) ? (size - 1) : 0;
   16926:	2a00      	cmp	r2, #0
   16928:	bfd4      	ite	le
   1692a:	461a      	movle	r2, r3
   1692c:	f102 32ff 	addgt.w	r2, r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16930:	60a1      	str	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   16932:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16934:	60e3      	str	r3, [r4, #12]
   16936:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
    mCapacity = (size > 0) ? (size - 1) : 0;
   16938:	6062      	str	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:53
    memset(mpStr, 0, mCapacity);
   1693a:	2100      	movs	r1, #0
   1693c:	f007 fe18 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:54
}
   16940:	4620      	mov	r0, r4
   16942:	bd10      	pop	{r4, pc}

00016944 <str::~str()>:
_ZN3strD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:55
str::~str()
   16944:	b538      	push	{r3, r4, r5, lr}
   16946:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58
{
    //printf("Delete %u bytes @ %p\n", mCapacity, mpStr);
    if(0 != mpStr && !mStackMem) {
   16948:	6880      	ldr	r0, [r0, #8]
   1694a:	b118      	cbz	r0, 16954 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58 (discriminator 1)
   1694c:	7823      	ldrb	r3, [r4, #0]
   1694e:	b90b      	cbnz	r3, 16954 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:59
        free(mpStr);
   16950:	f007 fdb2 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:61
    }
    if (mpTempStr) {
   16954:	68e5      	ldr	r5, [r4, #12]
   16956:	b135      	cbz	r5, 16966 <str::~str()+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:62 (discriminator 1)
        delete mpTempStr;
   16958:	4628      	mov	r0, r5
   1695a:	f7ff fff3 	bl	16944 <str::~str()>
   1695e:	2114      	movs	r1, #20
   16960:	4628      	mov	r0, r5
   16962:	f005 feae 	bl	1c6c2 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:64
    }
}
   16966:	4620      	mov	r0, r4
   16968:	bd38      	pop	{r3, r4, r5, pc}

0001696a <str::getLen() const>:
_ZNK3str6getLenEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:69


int str::getLen() const
{
    return strlen(mpStr);
   1696a:	6880      	ldr	r0, [r0, #8]
   1696c:	f009 bb86 	b.w	2007c <strlen>

00016970 <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:74
}
int str::getCapacity() const
{
    return mCapacity;
}
   16970:	6840      	ldr	r0, [r0, #4]
   16972:	4770      	bx	lr

00016974 <str::clear()>:
_ZN3str5clearEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:87
        return true;
    }
}
void str::clear()
{
    *mpStr = '\0';
   16974:	2200      	movs	r2, #0
   16976:	6883      	ldr	r3, [r0, #8]
   16978:	701a      	strb	r2, [r3, #0]
   1697a:	4770      	bx	lr

0001697c <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:144
    va_end(args);
    return len;
}

int str::scanf(const char* pFormat, ...)
{
   1697c:	b40e      	push	{r1, r2, r3}
   1697e:	b503      	push	{r0, r1, lr}
   16980:	aa03      	add	r2, sp, #12
   16982:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    va_list args;
    va_start(args, pFormat);
    int parsedParams = vsscanf (mpStr, pFormat, args);
   16986:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:146
    va_start(args, pFormat);
   16988:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    int parsedParams = vsscanf (mpStr, pFormat, args);
   1698a:	f00a fdb7 	bl	214fc <vsiscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:151
    va_end(args);

    return parsedParams;
}
   1698e:	b002      	add	sp, #8
   16990:	f85d eb04 	ldr.w	lr, [sp], #4
   16994:	b003      	add	sp, #12
   16996:	4770      	bx	lr

00016998 <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154

int str::tokenize(const char* delimators, int char_ptr_count, ...)
{
   16998:	b40c      	push	{r2, r3}
   1699a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    va_list args;
    va_start(args, char_ptr_count);

    int token_count = 0;
    char *it = NULL;
   1699c:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   1699e:	ab08      	add	r3, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   169a0:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   169a2:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   169a6:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   169aa:	462a      	mov	r2, r5
   169ac:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   169ae:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:156
    va_start(args, char_ptr_count);
   169b0:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   169b2:	f00a fa3a 	bl	20e2a <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162

    while(token != NULL && char_ptr_count > 0) {
   169b6:	b178      	cbz	r0, 169d8 <str::tokenize(char const*, int, ...)+0x40>
   169b8:	1b3b      	subs	r3, r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162 (discriminator 1)
   169ba:	2b00      	cmp	r3, #0
   169bc:	dd0c      	ble.n	169d8 <str::tokenize(char const*, int, ...)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:163
        char **p = va_arg(args, char**);
   169be:	9b00      	ldr	r3, [sp, #0]
   169c0:	1d1a      	adds	r2, r3, #4
   169c2:	681b      	ldr	r3, [r3, #0]
   169c4:	9200      	str	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:164
        if (p) {
   169c6:	b103      	cbz	r3, 169ca <str::tokenize(char const*, int, ...)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:165
            *p = token;
   169c8:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:169
        }

        // Get next token
        token = strtok_r(NULL, delimators, &it);
   169ca:	462a      	mov	r2, r5
   169cc:	4631      	mov	r1, r6
   169ce:	2000      	movs	r0, #0
   169d0:	f00a fa2b 	bl	20e2a <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:172

        --char_ptr_count;
        ++token_count;
   169d4:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162
    while(token != NULL && char_ptr_count > 0) {
   169d6:	e7ee      	b.n	169b6 <str::tokenize(char const*, int, ...)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:177
    }
    va_end(args);

    return token_count;
}
   169d8:	4620      	mov	r0, r4
   169da:	b003      	add	sp, #12
   169dc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   169e0:	b002      	add	sp, #8
   169e2:	4770      	bx	lr

000169e4 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:241
    append(hexVal);
}


bool str::compareTo(const char* pString) const
{
   169e4:	b508      	push	{r3, lr}
   169e6:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:242
    return (0 == strcmp(pString, mpStr));
   169e8:	6881      	ldr	r1, [r0, #8]
   169ea:	4618      	mov	r0, r3
   169ec:	f009 fb34 	bl	20058 <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:243
}
   169f0:	fab0 f080 	clz	r0, r0
   169f4:	0940      	lsrs	r0, r0, #5
   169f6:	bd08      	pop	{r3, pc}

000169f8 <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:245
bool str::compareToIgnoreCase(const char* pString) const
{
   169f8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:246
    return (0 == strcasecmp(mpStr, pString));
   169fa:	6880      	ldr	r0, [r0, #8]
   169fc:	f009 faf1 	bl	1ffe2 <strcasecmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:247
}
   16a00:	fab0 f080 	clz	r0, r0
   16a04:	0940      	lsrs	r0, r0, #5
   16a06:	bd08      	pop	{r3, pc}

00016a08 <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
    return firstIndexOf(pString) != mInvalidIndex;
}


int str::firstIndexOfIgnoreCase(const char* pString) const
{
   16a08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    int findIndex = mInvalidIndex;
    char* firstChar;

    if(0 != *pString && 0 != *mpStr)
   16a0c:	780f      	ldrb	r7, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
{
   16a0e:	468a      	mov	sl, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    if(0 != *pString && 0 != *mpStr)
   16a10:	b3a7      	cbz	r7, 16a7c <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   16a12:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259 (discriminator 1)
   16a16:	6886      	ldr	r6, [r0, #8]
   16a18:	7833      	ldrb	r3, [r6, #0]
   16a1a:	b38b      	cbz	r3, 16a80 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:261 (discriminator 1)
    {
        for(char* pSearchLoc = mpStr; 0 != *pSearchLoc; pSearchLoc = firstChar + 1)
   16a1c:	7833      	ldrb	r3, [r6, #0]
   16a1e:	b37b      	cbz	r3, 16a80 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:264
        {
            // First, find first char match ignoring the case.
            if(0 == (firstChar = strchr(pSearchLoc, tolower(*pString)))) {
   16a20:	4638      	mov	r0, r7
   16a22:	f00a fac1 	bl	20fa8 <tolower>
   16a26:	4601      	mov	r1, r0
   16a28:	4630      	mov	r0, r6
   16a2a:	f009 fb07 	bl	2003c <strchr>
   16a2e:	b938      	cbnz	r0, 16a40 <str::firstIndexOfIgnoreCase(char const*) const+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:265
                if(0 == (firstChar = strchr(pSearchLoc, toupper(*pString)))) {
   16a30:	4638      	mov	r0, r7
   16a32:	f00a fac6 	bl	20fc2 <toupper>
   16a36:	4601      	mov	r1, r0
   16a38:	4630      	mov	r0, r6
   16a3a:	f009 faff 	bl	2003c <strchr>
   16a3e:	b1e8      	cbz	r0, 16a7c <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   16a40:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:273
                }
            }

            // First char matched, now match remaining string
            char* i2 = (char*)pString + 1;
            findIndex = firstChar - pSearchLoc;
   16a42:	1b85      	subs	r5, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:272
            char* i2 = (char*)pString + 1;
   16a44:	f10a 0801 	add.w	r8, sl, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275

            for(char* i1 = firstChar + 1; *i1 && *i2; i1++, i2++)
   16a48:	1c46      	adds	r6, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 1)
   16a4a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   16a4e:	46c1      	mov	r9, r8
   16a50:	b188      	cbz	r0, 16a76 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 2)
   16a52:	f898 b000 	ldrb.w	fp, [r8]
   16a56:	f108 0801 	add.w	r8, r8, #1
   16a5a:	f1bb 0f00 	cmp.w	fp, #0
   16a5e:	d00a      	beq.n	16a76 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:277
            {
                if(tolower(*i1) != tolower(*i2))
   16a60:	f00a faa2 	bl	20fa8 <tolower>
   16a64:	9001      	str	r0, [sp, #4]
   16a66:	4658      	mov	r0, fp
   16a68:	f00a fa9e 	bl	20fa8 <tolower>
   16a6c:	9b01      	ldr	r3, [sp, #4]
   16a6e:	4283      	cmp	r3, r0
   16a70:	d0eb      	beq.n	16a4a <str::firstIndexOfIgnoreCase(char const*) const+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:279
                {
                    findIndex = mInvalidIndex;
   16a72:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:285
                    break;
                }
            }

            // If iterator2 reached null char, we matched entire string!
            if(0 == *i2) {
   16a76:	f899 3000 	ldrb.w	r3, [r9]
   16a7a:	e7ce      	b.n	16a1a <str::firstIndexOfIgnoreCase(char const*) const+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:256
    int findIndex = mInvalidIndex;
   16a7c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:292
            }
        };
    }

    return findIndex;
}
   16a80:	4628      	mov	r0, r5
   16a82:	b003      	add	sp, #12
   16a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016a88 <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:294
bool str::containsIgnoreCase(const char* pString) const
{
   16a88:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:295
    return firstIndexOfIgnoreCase(pString) != mInvalidIndex;
   16a8a:	f7ff ffbd 	bl	16a08 <str::firstIndexOfIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:296
}
   16a8e:	3001      	adds	r0, #1
   16a90:	bf18      	it	ne
   16a92:	2001      	movne	r0, #1
   16a94:	bd08      	pop	{r3, pc}

00016a96 <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:298
int str::firstIndexOf(const char* pString) const
{
   16a96:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:299
    char* pFindPtr = strstr(mpStr, pString);
   16a98:	6884      	ldr	r4, [r0, #8]
   16a9a:	4620      	mov	r0, r4
   16a9c:	f009 fb57 	bl	2014e <strstr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
    return (0 == pFindPtr) ? mInvalidIndex : (pFindPtr - mpStr);
   16aa0:	b108      	cbz	r0, 16aa6 <str::firstIndexOf(char const*) const+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300 (discriminator 1)
   16aa2:	1b00      	subs	r0, r0, r4
   16aa4:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
   16aa6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:301
}
   16aaa:	bd10      	pop	{r4, pc}

00016aac <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
    return count;
}


bool str::beginsWith(const char* pString) const
{
   16aac:	b570      	push	{r4, r5, r6, lr}
   16aae:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16ab0:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
{
   16ab2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16ab4:	f009 fae2 	bl	2007c <strlen>
   16ab8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && (0 == strncmp(mpStr, pString, theirLen)));
   16aba:	4620      	mov	r0, r4
   16abc:	f7ff ff55 	bl	1696a <str::getLen() const>
   16ac0:	4286      	cmp	r6, r0
   16ac2:	dc08      	bgt.n	16ad6 <str::beginsWith(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343 (discriminator 1)
   16ac4:	4632      	mov	r2, r6
   16ac6:	4629      	mov	r1, r5
   16ac8:	68a0      	ldr	r0, [r4, #8]
   16aca:	f009 fb06 	bl	200da <strncmp>
   16ace:	fab0 f080 	clz	r0, r0
   16ad2:	0940      	lsrs	r0, r0, #5
   16ad4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343
   16ad6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:344
}
   16ad8:	bd70      	pop	{r4, r5, r6, pc}

00016ada <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
bool str::beginsWithIgnoreCase(const char* pString) const
{
   16ada:	b570      	push	{r4, r5, r6, lr}
   16adc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16ade:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
{
   16ae0:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16ae2:	f009 facb 	bl	2007c <strlen>
   16ae6:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && 0 == strncasecmp(pString, mpStr, theirLen));
   16ae8:	4628      	mov	r0, r5
   16aea:	f7ff ff3e 	bl	1696a <str::getLen() const>
   16aee:	4286      	cmp	r6, r0
   16af0:	dc08      	bgt.n	16b04 <str::beginsWithIgnoreCase(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350 (discriminator 1)
   16af2:	4632      	mov	r2, r6
   16af4:	68a9      	ldr	r1, [r5, #8]
   16af6:	4620      	mov	r0, r4
   16af8:	f009 fac8 	bl	2008c <strncasecmp>
   16afc:	fab0 f080 	clz	r0, r0
   16b00:	0940      	lsrs	r0, r0, #5
   16b02:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350
   16b04:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:351
}
   16b06:	bd70      	pop	{r4, r5, r6, pc}

00016b08 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364

    const char c = mpStr[len];
    return beginsWith(pString) && (seperator == c || '\0' == c);
}
bool str::beginsWithWholeWordIgnoreCase(const char* pString, char seperator) const
{
   16b08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16b0a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    // After comparison, the char must be a space or null terminated
    int len = strlen(pString);
   16b0c:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364
{
   16b0e:	460e      	mov	r6, r1
   16b10:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    int len = strlen(pString);
   16b12:	f009 fab3 	bl	2007c <strlen>
   16b16:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:367
    if (len > getLen()) {
   16b18:	4620      	mov	r0, r4
   16b1a:	f7ff ff26 	bl	1696a <str::getLen() const>
   16b1e:	4285      	cmp	r5, r0
   16b20:	dc0c      	bgt.n	16b3c <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
        return false;
    }

    const char c = mpStr[len];
   16b22:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   16b24:	4631      	mov	r1, r6
   16b26:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
    const char c = mpStr[len];
   16b28:	5d5d      	ldrb	r5, [r3, r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   16b2a:	f7ff ffd6 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   16b2e:	b130      	cbz	r0, 16b3e <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 1)
   16b30:	42bd      	cmp	r5, r7
   16b32:	d004      	beq.n	16b3e <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 4)
   16b34:	fab5 f085 	clz	r0, r5
   16b38:	0940      	lsrs	r0, r0, #5
   16b3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
   16b3c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:373
}
   16b3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016b40 <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:418
        return eraseAfter(findIndex, strlen(pString));
    }
    return false;
}
bool str::eraseFirst(int nChars)
{
   16b40:	b538      	push	{r3, r4, r5, lr}
   16b42:	460c      	mov	r4, r1
   16b44:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   16b46:	f7ff ff10 	bl	1696a <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    bool ok = false;
    if(nChars > 0 && nChars <= len)
   16b4a:	2c00      	cmp	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   16b4c:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    if(nChars > 0 && nChars <= len)
   16b4e:	dd09      	ble.n	16b64 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421 (discriminator 1)
   16b50:	42a0      	cmp	r0, r4
   16b52:	db07      	blt.n	16b64 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:423
    {
        memmove(mpStr, mpStr + nChars, len - nChars + 1);
   16b54:	68a8      	ldr	r0, [r5, #8]
   16b56:	1b12      	subs	r2, r2, r4
   16b58:	3201      	adds	r2, #1
   16b5a:	1901      	adds	r1, r0, r4
   16b5c:	f007 fcee 	bl	1e53c <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:424
        ok = true;
   16b60:	2001      	movs	r0, #1
   16b62:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:420
    bool ok = false;
   16b64:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:427
    }
    return ok;
}
   16b66:	bd38      	pop	{r3, r4, r5, pc}

00016b68 <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:429
bool str::eraseLast(int nChars)
{
   16b68:	b538      	push	{r3, r4, r5, lr}
   16b6a:	460c      	mov	r4, r1
   16b6c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:430
    const int len = getLen();
   16b6e:	f7ff fefc 	bl	1696a <str::getLen() const>
   16b72:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:432
    bool ok = false;
    if(nChars <= len)
   16b74:	42a0      	cmp	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:434
    {
        mpStr[len-nChars] = '\0';
   16b76:	bfa1      	itttt	ge
   16b78:	68aa      	ldrge	r2, [r5, #8]
   16b7a:	1b00      	subge	r0, r0, r4
   16b7c:	5413      	strbge	r3, [r2, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:435
        ok = true;
   16b7e:	2001      	movge	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:431
    bool ok = false;
   16b80:	bfb8      	it	lt
   16b82:	4618      	movlt	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:438
    }
    return ok;
}
   16b84:	bd38      	pop	{r3, r4, r5, pc}

00016b86 <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:454
        ok = true;
    }
    return ok;
}
bool str::eraseAfter(int index, int nChars)
{
   16b86:	b570      	push	{r4, r5, r6, lr}
   16b88:	460d      	mov	r5, r1
   16b8a:	4606      	mov	r6, r0
   16b8c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:455
    const int ourLen = getLen();
   16b8e:	f7ff feec 	bl	1696a <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458
    bool ok = false;

    if(index >= 0 && index < ourLen && nChars > 0)
   16b92:	2d00      	cmp	r5, #0
   16b94:	db11      	blt.n	16bba <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 1)
   16b96:	42a8      	cmp	r0, r5
   16b98:	dd0f      	ble.n	16bba <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 2)
   16b9a:	2c00      	cmp	r4, #0
   16b9c:	dd0d      	ble.n	16bba <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:461
    {
        // "012345", index = 2, nChars = 6
        if(nChars > ourLen - index) {
   16b9e:	1b42      	subs	r2, r0, r5
   16ba0:	4294      	cmp	r4, r2
   16ba2:	bfa8      	it	ge
   16ba4:	4614      	movge	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:464
            nChars = ourLen - index;
        }
        memmove(mpStr+index, mpStr+index+nChars, ourLen - index - nChars + 1);
   16ba6:	68b0      	ldr	r0, [r6, #8]
   16ba8:	1b12      	subs	r2, r2, r4
   16baa:	442c      	add	r4, r5
   16bac:	1901      	adds	r1, r0, r4
   16bae:	3201      	adds	r2, #1
   16bb0:	4428      	add	r0, r5
   16bb2:	f007 fcc3 	bl	1e53c <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:465
        ok = true;
   16bb6:	2001      	movs	r0, #1
   16bb8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:456
    bool ok = false;
   16bba:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:468
    }
    return ok;
}
   16bbc:	bd70      	pop	{r4, r5, r6, pc}

00016bbe <str::erase(char const*)>:
_ZN3str5eraseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:409
{
   16bbe:	b570      	push	{r4, r5, r6, lr}
   16bc0:	4605      	mov	r5, r0
   16bc2:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   16bc4:	f7ff ff67 	bl	16a96 <str::firstIndexOf(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   16bc8:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   16bca:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   16bcc:	d009      	beq.n	16be2 <str::erase(char const*)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16bce:	4630      	mov	r0, r6
   16bd0:	f009 fa54 	bl	2007c <strlen>
   16bd4:	4621      	mov	r1, r4
   16bd6:	4602      	mov	r2, r0
   16bd8:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   16bda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16bde:	f7ff bfd2 	b.w	16b86 <str::eraseAfter(int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   16be2:	2000      	movs	r0, #0
   16be4:	bd70      	pop	{r4, r5, r6, pc}

00016be6 <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:470
bool str::eraseFirstWords(int words, char separator)
{
   16be6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16be8:	6885      	ldr	r5, [r0, #8]
   16bea:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    int n = 0;
    int found = 0;

    // test one two
    for (n = 0; mpStr[n] && found != words; n++) {
   16bec:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:472
    int found = 0;
   16bee:	2400      	movs	r4, #0
   16bf0:	1b59      	subs	r1, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 1)
    for (n = 0; mpStr[n] && found != words; n++) {
   16bf2:	f813 6b01 	ldrb.w	r6, [r3], #1
   16bf6:	b13e      	cbz	r6, 16c08 <str::eraseFirstWords(int, char)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 2)
   16bf8:	42bc      	cmp	r4, r7
   16bfa:	d003      	beq.n	16c04 <str::eraseFirstWords(int, char)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:476
        if (mpStr[n] == separator) {
   16bfc:	4296      	cmp	r6, r2
   16bfe:	d1f7      	bne.n	16bf0 <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:477
            found++;
   16c00:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    for (n = 0; mpStr[n] && found != words; n++) {
   16c02:	e7f5      	b.n	16bf0 <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:482
        }
    }

    if (found == words && mpStr[n]) {
        eraseFirst(n);
   16c04:	f7ff ff9c 	bl	16b40 <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:486
    }

    return !!found;
}
   16c08:	1c20      	adds	r0, r4, #0
   16c0a:	bf18      	it	ne
   16c0c:	2001      	movne	r0, #1
   16c0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016c10 <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:508
    return count;
}


void str::trimStart(const char* pChars)
{
   16c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16c12:	4606      	mov	r6, r0
   16c14:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    int numBegCharsToRemove = 0;
    const int ourLen = getLen();
   16c16:	f7ff fea8 	bl	1696a <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:509
    int numBegCharsToRemove = 0;
   16c1a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    const int ourLen = getLen();
   16c1c:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512 (discriminator 1)

    for(int i = 0; i < ourLen; i++)
   16c1e:	42bc      	cmp	r4, r7
   16c20:	da0e      	bge.n	16c40 <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:514
    {
        const int len = strlen(pChars);
   16c22:	4628      	mov	r0, r5
   16c24:	f009 fa2a 	bl	2007c <strlen>
   16c28:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:517 (discriminator 1)
        bool trimDone = false;

        for(int j = 0 ; j < len; j++)
   16c2a:	1b5a      	subs	r2, r3, r5
   16c2c:	4290      	cmp	r0, r2
   16c2e:	dd07      	ble.n	16c40 <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:519
        {
            if(pChars[j] == mpStr[i]) {
   16c30:	68b1      	ldr	r1, [r6, #8]
   16c32:	f813 2b01 	ldrb.w	r2, [r3], #1
   16c36:	5d09      	ldrb	r1, [r1, r4]
   16c38:	4291      	cmp	r1, r2
   16c3a:	d1f6      	bne.n	16c2a <str::trimStart(char const*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:521
                trimDone = true;
                numBegCharsToRemove++;
   16c3c:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512
    for(int i = 0; i < ourLen; i++)
   16c3e:	e7ee      	b.n	16c1e <str::trimStart(char const*)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:531
        if(!trimDone) {
            break;
        }
    }

    if(numBegCharsToRemove > 0) {
   16c40:	b12c      	cbz	r4, 16c4e <str::trimStart(char const*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   16c42:	4621      	mov	r1, r4
   16c44:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:534
    }
}
   16c46:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   16c4a:	f7ff bf79 	b.w	16b40 <str::eraseFirst(int)>
   16c4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016c50 <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
void str::trimEnd(const char* pChars)
{
   16c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16c52:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   16c54:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
{
   16c56:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   16c58:	f009 fa10 	bl	2007c <strlen>
   16c5c:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16c5e:	4628      	mov	r0, r5
   16c60:	f7ff fe83 	bl	1696a <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
        for(int j = 0 ; j < trimLen; j++)
        {
            if(pChars[j] == mpStr[i])
            {
                trimDone = true;
                mpStr[i] = '\0';
   16c64:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16c66:	3801      	subs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538 (discriminator 1)
   16c68:	2800      	cmp	r0, #0
   16c6a:	db0d      	blt.n	16c88 <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
   16c6c:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:541 (discriminator 1)
        for(int j = 0 ; j < trimLen; j++)
   16c6e:	1b1a      	subs	r2, r3, r4
   16c70:	4297      	cmp	r7, r2
   16c72:	dd09      	ble.n	16c88 <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:543
            if(pChars[j] == mpStr[i])
   16c74:	68aa      	ldr	r2, [r5, #8]
   16c76:	f813 eb01 	ldrb.w	lr, [r3], #1
   16c7a:	1811      	adds	r1, r2, r0
   16c7c:	5c12      	ldrb	r2, [r2, r0]
   16c7e:	4572      	cmp	r2, lr
   16c80:	d1f5      	bne.n	16c6e <str::trimEnd(char const*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
                mpStr[i] = '\0';
   16c82:	700e      	strb	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16c84:	3801      	subs	r0, #1
   16c86:	e7ef      	b.n	16c68 <str::trimEnd(char const*)+0x18>
   16c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016c8a <str::operator==(char const*) const>:
_ZNK3streqEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:918
        (*this) = str::toInt(mpStr) - n; // Call Assignment Operator for int
    }
}
bool str::operator==(const char* pString) const
{
    return compareTo(pString);
   16c8a:	f7ff beab 	b.w	169e4 <str::compareTo(char const*) const>

00016c8e <str::operator()() const>:
_ZNK3strclEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:968
bool str::operator>(float x) const             { return (float)(*this) > x;         }

const char* str::operator()() const
{
    return mpStr;
}
   16c8e:	6880      	ldr	r0, [r0, #8]
   16c90:	4770      	bx	lr

00016c92 <str::operator int() const>:
_ZN3str5toIntEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:28
int str::toInt(const char* pString)     {   return atoi(pString);   }
   16c92:	6880      	ldr	r0, [r0, #8]
   16c94:	f006 be81 	b.w	1d99a <atoi>

00016c98 <str::operator[](int)>:
_ZN3strixEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:981
{
    return str::toFloat(mpStr);
}

char& str::operator[](int pos)
{
   16c98:	b538      	push	{r3, r4, r5, lr}
   16c9a:	460c      	mov	r4, r1
   16c9c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:982
    return pos < getLen() ? mpStr[pos] : mpStr[0];
   16c9e:	f7ff fe64 	bl	1696a <str::getLen() const>
   16ca2:	42a0      	cmp	r0, r4
   16ca4:	68a8      	ldr	r0, [r5, #8]
   16ca6:	bfc8      	it	gt
   16ca8:	1900      	addgt	r0, r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:983
}
   16caa:	bd38      	pop	{r3, r4, r5, pc}

00016cac <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    }
}

bool str::reAllocateMem(const int size)
{
    if (mStackMem) {
   16cac:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1027
{
   16cae:	b570      	push	{r4, r5, r6, lr}
   16cb0:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    if (mStackMem) {
   16cb2:	b9fb      	cbnz	r3, 16cf4 <str::reAllocateMem(int)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
        return false;
    }

    // Minimum size is 4 bytes, but we need 1 extra char for NULL
    mCapacity = (0 == size) ? 4 : (1 + size);
   16cb4:	b1b1      	cbz	r1, 16ce4 <str::reAllocateMem(int)+0x38>
   16cb6:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036

    // Align the size to minimize memory fragmentation
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   16cb8:	2410      	movs	r4, #16
   16cba:	fb91 f4f4 	sdiv	r4, r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038

    if(0 == mpStr){
   16cbe:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   16cc0:	3401      	adds	r4, #1
   16cc2:	0124      	lsls	r4, r4, #4
   16cc4:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038
    if(0 == mpStr){
   16cc6:	b97e      	cbnz	r6, 16ce8 <str::reAllocateMem(int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1039
        mpStr = (char*)malloc(mCapacity);
   16cc8:	4620      	mov	r0, r4
   16cca:	f007 fbed 	bl	1e4a8 <malloc>
   16cce:	60a8      	str	r0, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1040
        if (NULL != mpStr) {
   16cd0:	b118      	cbz	r0, 16cda <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1041
            memset(mpStr, 0, mCapacity);
   16cd2:	4622      	mov	r2, r4
   16cd4:	4631      	mov	r1, r6
   16cd6:	f007 fc4b 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1048
    }
    else {
        mpStr = (char*)realloc(mpStr, mCapacity+1);
    }

    return (NULL != mpStr);
   16cda:	68a8      	ldr	r0, [r5, #8]
   16cdc:	3000      	adds	r0, #0
   16cde:	bf18      	it	ne
   16ce0:	2001      	movne	r0, #1
   16ce2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
    mCapacity = (0 == size) ? 4 : (1 + size);
   16ce4:	2104      	movs	r1, #4
   16ce6:	e7e7      	b.n	16cb8 <str::reAllocateMem(int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1045
        mpStr = (char*)realloc(mpStr, mCapacity+1);
   16ce8:	1c61      	adds	r1, r4, #1
   16cea:	4630      	mov	r0, r6
   16cec:	f008 feca 	bl	1fa84 <realloc>
   16cf0:	60a8      	str	r0, [r5, #8]
   16cf2:	e7f2      	b.n	16cda <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1029
        return false;
   16cf4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1049
}
   16cf6:	bd70      	pop	{r4, r5, r6, pc}

00016cf8 <str::init(int)>:
_ZN3str4initEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:453
        static const int mAllocSize = 16;

        /// init() is called by constructors to initialize the string
        void init(int initialLength=mAllocSize)
        {
            mStackMem = false;
   16cf8:	2200      	movs	r2, #0
   16cfa:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:454
            mCapacity = 0;
   16cfc:	6042      	str	r2, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:455
            mpStr = 0;
   16cfe:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:456
            mpTempStr = 0;
   16d00:	60c2      	str	r2, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:457
            mpTokenPtr = 0;
   16d02:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:459

            reAllocateMem(initialLength);
   16d04:	f7ff bfd2 	b.w	16cac <str::reAllocateMem(int)>

00016d08 <str::str(int)>:
_ZN3strC2Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:35
str::str(int capacity)
   16d08:	b510      	push	{r4, lr}
   16d0a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:37
    init(capacity);
   16d0c:	f7ff fff4 	bl	16cf8 <str::init(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:38
}
   16d10:	4620      	mov	r0, r4
   16d12:	bd10      	pop	{r4, pc}

00016d14 <str::reserve(int)>:
_ZN3str7reserveEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:77
    if(mCapacity < n)
   16d14:	6843      	ldr	r3, [r0, #4]
   16d16:	428b      	cmp	r3, r1
   16d18:	da01      	bge.n	16d1e <str::reserve(int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:79
        return reAllocateMem(n);
   16d1a:	f7ff bfc7 	b.w	16cac <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:84
}
   16d1e:	2001      	movs	r0, #1
   16d20:	4770      	bx	lr

00016d22 <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   16d22:	b40e      	push	{r1, r2, r3}
   16d24:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   16d26:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:113
    int len = 0;
   16d28:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   16d2a:	ab07      	add	r3, sp, #28
   16d2c:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:116
    va_start(args, format);
   16d30:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:118
    while (mpStr)
   16d32:	68b0      	ldr	r0, [r6, #8]
   16d34:	b180      	cbz	r0, 16d58 <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   16d36:	6875      	ldr	r5, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   16d38:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   16d3a:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16d3c:	463a      	mov	r2, r7
   16d3e:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   16d40:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16d42:	f00a fba9 	bl	21498 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   16d46:	4285      	cmp	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16d48:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   16d4a:	dc05      	bgt.n	16d58 <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:132
            break_loop = !reserve(len + 1);
   16d4c:	1c41      	adds	r1, r0, #1
   16d4e:	4630      	mov	r0, r6
   16d50:	f7ff ffe0 	bl	16d14 <str::reserve(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:134
        if (break_loop) {
   16d54:	2800      	cmp	r0, #0
   16d56:	d1ec      	bne.n	16d32 <str::printf(char const*, ...)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:141
}
   16d58:	4620      	mov	r0, r4
   16d5a:	b002      	add	sp, #8
   16d5c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   16d60:	b003      	add	sp, #12
   16d62:	4770      	bx	lr

00016d64 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1011
{
   16d64:	b538      	push	{r3, r4, r5, lr}
   16d66:	4605      	mov	r5, r0
   16d68:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1013
    const int existingLen = getLen();
   16d6a:	f7ff fdfe 	bl	1696a <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   16d6e:	686b      	ldr	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1014
    const int requiredMem = newLen + existingLen;
   16d70:	1821      	adds	r1, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   16d72:	4299      	cmp	r1, r3
   16d74:	dd05      	ble.n	16d82 <str::ensureMemoryToInsertNChars(int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   16d76:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   16d78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   16d7c:	3120      	adds	r1, #32
   16d7e:	f7ff bf95 	b.w	16cac <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   16d82:	2001      	movs	r0, #1
   16d84:	bd38      	pop	{r3, r4, r5, pc}

00016d86 <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   16d86:	b570      	push	{r4, r5, r6, lr}
   16d88:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   16d8a:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   16d8c:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   16d8e:	f009 f975 	bl	2007c <strlen>
   16d92:	4601      	mov	r1, r0
   16d94:	4628      	mov	r0, r5
   16d96:	f7ff ffe5 	bl	16d64 <str::ensureMemoryToInsertNChars(int)>
   16d9a:	4604      	mov	r4, r0
   16d9c:	b118      	cbz	r0, 16da6 <str::insertAtEnd(char const*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:187
        strcat(mpStr, pString);
   16d9e:	4631      	mov	r1, r6
   16da0:	68a8      	ldr	r0, [r5, #8]
   16da2:	f009 f93c 	bl	2001e <strcat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:191
}
   16da6:	4620      	mov	r0, r4
   16da8:	bd70      	pop	{r4, r5, r6, pc}

00016daa <str::operator+=(char)>:
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   16daa:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:876
{
   16dac:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   16dae:	f8ad 3004 	strh.w	r3, [sp, #4]
   16db2:	ab02      	add	r3, sp, #8
   16db4:	f803 1d04 	strb.w	r1, [r3, #-4]!
_ZN3str6appendEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:216
    insertAtEnd(pString);
   16db8:	4619      	mov	r1, r3
   16dba:	f7ff ffe4 	bl	16d86 <str::insertAtEnd(char const*)>
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:879
}
   16dbe:	b003      	add	sp, #12
   16dc0:	f85d fb04 	ldr.w	pc, [sp], #4

00016dc4 <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052

void str::copyFrom(const char* pString)
{
   16dc4:	b570      	push	{r4, r5, r6, lr}
   16dc6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   16dc8:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052
{
   16dca:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   16dcc:	f009 f956 	bl	2007c <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055

    if(strLen > mCapacity) {
   16dd0:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   16dd2:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055
    if(strLen > mCapacity) {
   16dd4:	4298      	cmp	r0, r3
   16dd6:	dd0d      	ble.n	16df4 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1057
        // If we can't allocate memory, only copy up to capacity
        if (!reAllocateMem(strLen)) {
   16dd8:	4620      	mov	r0, r4
   16dda:	f7ff ff67 	bl	16cac <str::reAllocateMem(int)>
   16dde:	4606      	mov	r6, r0
   16de0:	b940      	cbnz	r0, 16df4 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1058
            strncpy(mpStr, pString, mCapacity);
   16de2:	6862      	ldr	r2, [r4, #4]
   16de4:	4629      	mov	r1, r5
   16de6:	68a0      	ldr	r0, [r4, #8]
   16de8:	f009 f989 	bl	200fe <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1059
            mpStr[mCapacity] = '\0';
   16dec:	68a2      	ldr	r2, [r4, #8]
   16dee:	6863      	ldr	r3, [r4, #4]
   16df0:	54d6      	strb	r6, [r2, r3]
   16df2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
            return;
        }
    }

    strcpy(mpStr, pString);
   16df4:	4629      	mov	r1, r5
   16df6:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1065
}
   16df8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
    strcpy(mpStr, pString);
   16dfc:	f009 b936 	b.w	2006c <strcpy>

00016e00 <str::operator=(char const*)>:
_ZN3straSEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:831
    copyFrom(pString);
   16e00:	f7ff bfe0 	b.w	16dc4 <str::copyFrom(char const*)>

00016e04 <_sbrk>:
_sbrk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   16e04:	4b12      	ldr	r3, [pc, #72]	; (16e50 <_sbrk+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   16e06:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   16e08:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   16e0a:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   16e0c:	b912      	cbnz	r2, 16e14 <_sbrk+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   16e0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16e12:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   16e14:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   16e16:	4a0f      	ldr	r2, [pc, #60]	; (16e54 <_sbrk+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   16e18:	1844      	adds	r4, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   16e1a:	4d0f      	ldr	r5, [pc, #60]	; (16e58 <_sbrk+0x54>)
   16e1c:	4422      	add	r2, r4
   16e1e:	42aa      	cmp	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   16e20:	bf97      	itett	ls
   16e22:	4a0e      	ldrls	r2, [pc, #56]	; (16e5c <_sbrk+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   16e24:	601c      	strhi	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   16e26:	1888      	addls	r0, r1, r2
   16e28:	6018      	strls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   16e2a:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   16e2c:	bf98      	it	ls
   16e2e:	4610      	movls	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   16e30:	4a0b      	ldr	r2, [pc, #44]	; (16e60 <_sbrk+0x5c>)
   16e32:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   16e34:	bf82      	ittt	hi
   16e36:	3201      	addhi	r2, #1
   16e38:	601a      	strhi	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   16e3a:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   16e3c:	b139      	cbz	r1, 16e4e <_sbrk+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   16e3e:	4a09      	ldr	r2, [pc, #36]	; (16e64 <_sbrk+0x60>)
   16e40:	6813      	ldr	r3, [r2, #0]
   16e42:	3301      	adds	r3, #1
   16e44:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   16e46:	4b08      	ldr	r3, [pc, #32]	; (16e68 <_sbrk+0x64>)
   16e48:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   16e4a:	4b08      	ldr	r3, [pc, #32]	; (16e6c <_sbrk+0x68>)
   16e4c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   16e4e:	bd30      	pop	{r4, r5, pc}
   16e50:	2007c554 	.word	0x2007c554
   16e54:	efff7fff 	.word	0xefff7fff
   16e58:	10073ffe 	.word	0x10073ffe
   16e5c:	2007c8f0 	.word	0x2007c8f0
   16e60:	20083fff 	.word	0x20083fff
   16e64:	2007c54c 	.word	0x2007c54c
   16e68:	2007c550 	.word	0x2007c550
   16e6c:	2007c558 	.word	0x2007c558

00016e70 <operator new(unsigned int)>:
_Znwj():
   16e70:	f007 bb1a 	b.w	1e4a8 <malloc>

00016e74 <operator new[](unsigned int)>:
_Znaj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:104

/** @{ Redirect C++ memory functions to C */
void *operator new(size_t size)     {   return malloc(size);    }
void *operator new[](size_t size)   {   return malloc(size);    }
   16e74:	f007 bb18 	b.w	1e4a8 <malloc>

00016e78 <operator delete(void*)>:
_ZdlPv():
   16e78:	f007 bb1e 	b.w	1e4b8 <free>

00016e7c <operator delete[](void*)>:
_ZdaPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:106
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
   16e7c:	f007 bb1c 	b.w	1e4b8 <free>

00016e80 <sys_get_mem_info>:
sys_get_mem_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   16e80:	b530      	push	{r4, r5, lr}
   16e82:	4604      	mov	r4, r0
   16e84:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   16e86:	4668      	mov	r0, sp
   16e88:	f007 fdd6 	bl	1ea38 <mallinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   16e8c:	4b21      	ldr	r3, [pc, #132]	; (16f14 <sys_get_mem_info+0x94>)
   16e8e:	4d22      	ldr	r5, [pc, #136]	; (16f18 <sys_get_mem_info+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   16e90:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   16e92:	9b08      	ldr	r3, [sp, #32]
   16e94:	4a21      	ldr	r2, [pc, #132]	; (16f1c <sys_get_mem_info+0x9c>)
   16e96:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   16e98:	9b07      	ldr	r3, [sp, #28]
   16e9a:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   16e9c:	b953      	cbnz	r3, 16eb4 <sys_get_mem_info+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   16e9e:	6813      	ldr	r3, [r2, #0]
   16ea0:	491f      	ldr	r1, [pc, #124]	; (16f20 <sys_get_mem_info+0xa0>)
   16ea2:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   16ea4:	bf8a      	itet	hi
   16ea6:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   16eaa:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   16eae:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   16eb2:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   16eb4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   16eb6:	6861      	ldr	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   16eb8:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   16eba:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   16ebe:	bf82      	ittt	hi
   16ec0:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   16ec4:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   16ec8:	6061      	strhi	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   16eca:	6811      	ldr	r1, [r2, #0]
   16ecc:	4a14      	ldr	r2, [pc, #80]	; (16f20 <sys_get_mem_info+0xa0>)
   16ece:	4291      	cmp	r1, r2
   16ed0:	d813      	bhi.n	16efa <sys_get_mem_info+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   16ed2:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   16ed6:	1a52      	subs	r2, r2, r1
   16ed8:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   16edc:	441a      	add	r2, r3
   16ede:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   16ee0:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   16ee2:	4b10      	ldr	r3, [pc, #64]	; (16f24 <sys_get_mem_info+0xa4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   16ee4:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   16ee6:	681b      	ldr	r3, [r3, #0]
   16ee8:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   16eea:	4b0f      	ldr	r3, [pc, #60]	; (16f28 <sys_get_mem_info+0xa8>)
   16eec:	681b      	ldr	r3, [r3, #0]
   16eee:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   16ef0:	4b0e      	ldr	r3, [pc, #56]	; (16f2c <sys_get_mem_info+0xac>)
   16ef2:	681b      	ldr	r3, [r3, #0]
   16ef4:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   16ef6:	b00b      	add	sp, #44	; 0x2c
   16ef8:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   16efa:	4b0d      	ldr	r3, [pc, #52]	; (16f30 <sys_get_mem_info+0xb0>)
   16efc:	4299      	cmp	r1, r3
   16efe:	d8ef      	bhi.n	16ee0 <sys_get_mem_info+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   16f00:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   16f04:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   16f08:	1b5b      	subs	r3, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   16f0a:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   16f0c:	bfc8      	it	gt
   16f0e:	60e3      	strgt	r3, [r4, #12]
   16f10:	e7e6      	b.n	16ee0 <sys_get_mem_info+0x60>
   16f12:	bf00      	nop
   16f14:	000008f0 	.word	0x000008f0
   16f18:	2007c8f0 	.word	0x2007c8f0
   16f1c:	2007c554 	.word	0x2007c554
   16f20:	10008000 	.word	0x10008000
   16f24:	2007c550 	.word	0x2007c550
   16f28:	2007c558 	.word	0x2007c558
   16f2c:	2007c54c 	.word	0x2007c54c
   16f30:	20083fff 	.word	0x20083fff

00016f34 <__malloc_lock>:
__malloc_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   16f34:	f001 bc00 	b.w	18738 <vPortEnterCritical>

00016f38 <__malloc_unlock>:
__malloc_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   16f38:	f001 bc0e 	b.w	18758 <vPortExitCritical>

00016f3c <_gettimeofday>:
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   16f3c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   16f3e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   16f40:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   16f42:	b3a8      	cbz	r0, 16fb0 <_gettimeofday+0x74>
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   16f44:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   16f46:	4668      	mov	r0, sp
   16f48:	f000 feb2 	bl	17cb0 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   16f4c:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   16f50:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   16f52:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16f56:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   16f58:	f89d 3001 	ldrb.w	r3, [sp, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   16f5c:	950b      	str	r5, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   16f5e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16f62:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   16f64:	f89d 3002 	ldrb.w	r3, [sp, #2]
   16f68:	f003 031f 	and.w	r3, r3, #31
   16f6c:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   16f6e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16f72:	f003 031f 	and.w	r3, r3, #31
   16f76:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   16f78:	f89d 3005 	ldrb.w	r3, [sp, #5]
   16f7c:	f003 030f 	and.w	r3, r3, #15
   16f80:	3b01      	subs	r3, #1
   16f82:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   16f84:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   16f88:	f3c3 030b 	ubfx	r3, r3, #0, #12
   16f8c:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   16f90:	9308      	str	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   16f92:	f89d 3003 	ldrb.w	r3, [sp, #3]
   16f96:	f003 0307 	and.w	r3, r3, #7
   16f9a:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   16f9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   16fa0:	f3c3 030b 	ubfx	r3, r3, #0, #12
   16fa4:	3b01      	subs	r3, #1
   16fa6:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   16fa8:	f007 fbca 	bl	1e740 <mktime>
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   16fac:	e884 0021 	stmia.w	r4, {r0, r5}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   16fb0:	2000      	movs	r0, #0
   16fb2:	b00d      	add	sp, #52	; 0x34
   16fb4:	bd30      	pop	{r4, r5, pc}

00016fb6 <remap_fatfs_errors>:
remap_fatfs_errors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   16fb6:	3803      	subs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   16fb8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   16fba:	280a      	cmp	r0, #10
   16fbc:	d822      	bhi.n	17004 <remap_fatfs_errors+0x4e>
   16fbe:	e8df f000 	tbb	[pc, r0]
   16fc2:	0621      	.short	0x0621
   16fc4:	15190d06 	.word	0x15190d06
   16fc8:	2111191d 	.word	0x2111191d
   16fcc:	21          	.byte	0x21
   16fcd:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   16fce:	f006 fcf9 	bl	1d9c4 <__errno>
   16fd2:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   16fd4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   16fd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16fda:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   16fdc:	f006 fcf2 	bl	1d9c4 <__errno>
   16fe0:	2316      	movs	r3, #22
   16fe2:	e7f7      	b.n	16fd4 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   16fe4:	f006 fcee 	bl	1d9c4 <__errno>
   16fe8:	2313      	movs	r3, #19
   16fea:	e7f3      	b.n	16fd4 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   16fec:	f006 fcea 	bl	1d9c4 <__errno>
   16ff0:	2311      	movs	r3, #17
   16ff2:	e7ef      	b.n	16fd4 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   16ff4:	f006 fce6 	bl	1d9c4 <__errno>
   16ff8:	230d      	movs	r3, #13
   16ffa:	e7eb      	b.n	16fd4 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   16ffc:	f006 fce2 	bl	1d9c4 <__errno>
   17000:	2309      	movs	r3, #9
   17002:	e7e7      	b.n	16fd4 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   17004:	f006 fcde 	bl	1d9c4 <__errno>
   17008:	2305      	movs	r3, #5
   1700a:	e7e3      	b.n	16fd4 <remap_fatfs_errors+0x1e>

0001700c <findslot>:
findslot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   1700c:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   1700e:	b570      	push	{r4, r5, r6, lr}
   17010:	490e      	ldr	r1, [pc, #56]	; (1704c <findslot+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   17012:	d006      	beq.n	17022 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   17014:	4b0e      	ldr	r3, [pc, #56]	; (17050 <findslot+0x44>)
   17016:	681b      	ldr	r3, [r3, #0]
   17018:	4298      	cmp	r0, r3
   1701a:	d102      	bne.n	17022 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   1701c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   1701e:	4610      	mov	r0, r2
   17020:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   17022:	2300      	movs	r3, #0
   17024:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   17026:	4d0b      	ldr	r5, [pc, #44]	; (17054 <findslot+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   17028:	600b      	str	r3, [r1, #0]
   1702a:	2b06      	cmp	r3, #6
   1702c:	461a      	mov	r2, r3
   1702e:	d006      	beq.n	1703e <findslot+0x32>
   17030:	1c53      	adds	r3, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   17032:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   17036:	f856 6c10 	ldr.w	r6, [r6, #-16]
   1703a:	42b0      	cmp	r0, r6
   1703c:	d104      	bne.n	17048 <findslot+0x3c>
   1703e:	b104      	cbz	r4, 17042 <findslot+0x36>
   17040:	600a      	str	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   17042:	4b03      	ldr	r3, [pc, #12]	; (17050 <findslot+0x44>)
   17044:	6018      	str	r0, [r3, #0]
   17046:	e7ea      	b.n	1701e <findslot+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   17048:	2401      	movs	r4, #1
   1704a:	e7ee      	b.n	1702a <findslot+0x1e>
   1704c:	2007c5c8 	.word	0x2007c5c8
   17050:	2007c098 	.word	0x2007c098
   17054:	2007c568 	.word	0x2007c568

00017058 <remap_handle>:
remap_handle():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   17058:	4b08      	ldr	r3, [pc, #32]	; (1707c <remap_handle+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   1705a:	b510      	push	{r4, lr}
   1705c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   1705e:	6818      	ldr	r0, [r3, #0]
   17060:	b118      	cbz	r0, 1706a <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   17062:	6b83      	ldr	r3, [r0, #56]	; 0x38
   17064:	b90b      	cbnz	r3, 1706a <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   17066:	f006 feb1 	bl	1ddcc <__sinit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   1706a:	b124      	cbz	r4, 17076 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   1706c:	2c01      	cmp	r4, #1
   1706e:	d002      	beq.n	17076 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   17070:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   17072:	bf18      	it	ne
   17074:	3c20      	subne	r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   17076:	4620      	mov	r0, r4
   17078:	bd10      	pop	{r4, pc}
   1707a:	bf00      	nop
   1707c:	2007c0e0 	.word	0x2007c0e0

00017080 <sys_set_outchar_func>:
sys_set_outchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   17080:	4b01      	ldr	r3, [pc, #4]	; (17088 <sys_set_outchar_func+0x8>)
   17082:	6018      	str	r0, [r3, #0]
   17084:	4770      	bx	lr
   17086:	bf00      	nop
   17088:	2007c560 	.word	0x2007c560

0001708c <sys_set_inchar_func>:
sys_set_inchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   1708c:	4b01      	ldr	r3, [pc, #4]	; (17094 <sys_set_inchar_func+0x8>)
   1708e:	6018      	str	r0, [r3, #0]
   17090:	4770      	bx	lr
   17092:	bf00      	nop
   17094:	2007c55c 	.word	0x2007c55c

00017098 <_kill>:
_kill():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   17098:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   1709a:	4802      	ldr	r0, [pc, #8]	; (170a4 <_kill+0xc>)
   1709c:	f008 fc88 	bl	1f9b0 <puts>
   170a0:	e7fe      	b.n	170a0 <_kill+0x8>
   170a2:	bf00      	nop
   170a4:	00025a33 	.word	0x00025a33

000170a8 <_exit>:
_exit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   170a8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   170aa:	4802      	ldr	r0, [pc, #8]	; (170b4 <_exit+0xc>)
   170ac:	f008 fc80 	bl	1f9b0 <puts>
   170b0:	e7fe      	b.n	170b0 <_exit+0x8>
   170b2:	bf00      	nop
   170b4:	00025a19 	.word	0x00025a19

000170b8 <_getpid>:
_getpid():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   170b8:	2000      	movs	r0, #0
   170ba:	4770      	bx	lr

000170bc <_init>:
_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   170bc:	2001      	movs	r0, #1
   170be:	4770      	bx	lr

000170c0 <syscalls_init>:
syscalls_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   170c0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   170c2:	4b0a      	ldr	r3, [pc, #40]	; (170ec <syscalls_init+0x2c>)
   170c4:	781d      	ldrb	r5, [r3, #0]
   170c6:	b985      	cbnz	r5, 170ea <syscalls_init+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   170c8:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   170ca:	4c09      	ldr	r4, [pc, #36]	; (170f0 <syscalls_init+0x30>)
   170cc:	2260      	movs	r2, #96	; 0x60
   170ce:	4629      	mov	r1, r5
   170d0:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   170d2:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   170d4:	f007 fa4c 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   170d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   170dc:	6323      	str	r3, [r4, #48]	; 0x30
   170de:	6423      	str	r3, [r4, #64]	; 0x40
   170e0:	6523      	str	r3, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   170e2:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   170e4:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   170e6:	6126      	str	r6, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   170e8:	6223      	str	r3, [r4, #32]
   170ea:	bd70      	pop	{r4, r5, r6, pc}
   170ec:	2007c564 	.word	0x2007c564
   170f0:	2007c568 	.word	0x2007c568

000170f4 <_read>:
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   170f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   170f8:	4689      	mov	r9, r1
   170fa:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   170fc:	f7ff ffac 	bl	17058 <remap_handle>
   17100:	4605      	mov	r5, r0
   17102:	f7ff ff83 	bl	1700c <findslot>
   17106:	2806      	cmp	r0, #6
   17108:	d106      	bne.n	17118 <_read+0x24>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1710a:	f006 fc5b 	bl	1d9c4 <__errno>
   1710e:	2309      	movs	r3, #9
   17110:	6003      	str	r3, [r0, #0]
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   17112:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17116:	e016      	b.n	17146 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   17118:	4e1b      	ldr	r6, [pc, #108]	; (17188 <_read+0x94>)
   1711a:	0107      	lsls	r7, r0, #4
   1711c:	19f3      	adds	r3, r6, r7
   1711e:	689b      	ldr	r3, [r3, #8]
   17120:	07db      	lsls	r3, r3, #31
   17122:	d4f2      	bmi.n	1710a <_read+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   17124:	2d00      	cmp	r5, #0
   17126:	d011      	beq.n	1714c <_read+0x58>
   17128:	db01      	blt.n	1712e <_read+0x3a>
   1712a:	2d05      	cmp	r5, #5
   1712c:	ddf1      	ble.n	17112 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   1712e:	19f3      	adds	r3, r6, r7
   17130:	68d8      	ldr	r0, [r3, #12]
   17132:	2800      	cmp	r0, #0
   17134:	d0ed      	beq.n	17112 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   17136:	ab01      	add	r3, sp, #4
   17138:	4622      	mov	r2, r4
   1713a:	4649      	mov	r1, r9
   1713c:	f7fb fdbd 	bl	12cba <f_read>
   17140:	b1f8      	cbz	r0, 17182 <_read+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   17142:	f7ff ff38 	bl	16fb6 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   17146:	b003      	add	sp, #12
   17148:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   1714c:	4b0f      	ldr	r3, [pc, #60]	; (1718c <_read+0x98>)
   1714e:	681a      	ldr	r2, [r3, #0]
   17150:	4698      	mov	r8, r3
   17152:	b132      	cbz	r2, 17162 <_read+0x6e>
   17154:	464d      	mov	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   17156:	eba5 0309 	sub.w	r3, r5, r9
   1715a:	429c      	cmp	r4, r3
   1715c:	dc0a      	bgt.n	17174 <_read+0x80>
   1715e:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   17162:	1b60      	subs	r0, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   17164:	2800      	cmp	r0, #0
   17166:	dbd4      	blt.n	17112 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   17168:	443e      	add	r6, r7
   1716a:	6873      	ldr	r3, [r6, #4]
   1716c:	1a20      	subs	r0, r4, r0
   1716e:	4403      	add	r3, r0
   17170:	6073      	str	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   17172:	e7e8      	b.n	17146 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   17174:	f8d8 3000 	ldr.w	r3, [r8]
   17178:	2000      	movs	r0, #0
   1717a:	4798      	blx	r3
   1717c:	f805 0b01 	strb.w	r0, [r5], #1
   17180:	e7e9      	b.n	17156 <_read+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   17182:	9801      	ldr	r0, [sp, #4]
   17184:	1a20      	subs	r0, r4, r0
   17186:	e7ed      	b.n	17164 <_read+0x70>
   17188:	2007c568 	.word	0x2007c568
   1718c:	2007c55c 	.word	0x2007c55c

00017190 <_lseek>:
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   17190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17192:	460e      	mov	r6, r1
   17194:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   17196:	f7ff ff5f 	bl	17058 <remap_handle>
   1719a:	f7ff ff37 	bl	1700c <findslot>
   1719e:	2806      	cmp	r0, #6
   171a0:	d004      	beq.n	171ac <_lseek+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   171a2:	4c12      	ldr	r4, [pc, #72]	; (171ec <_lseek+0x5c>)
   171a4:	0105      	lsls	r5, r0, #4
   171a6:	1962      	adds	r2, r4, r5
   171a8:	68d0      	ldr	r0, [r2, #12]
   171aa:	b930      	cbnz	r0, 171ba <_lseek+0x2a>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   171ac:	f006 fc0a 	bl	1d9c4 <__errno>
   171b0:	2309      	movs	r3, #9
   171b2:	6003      	str	r3, [r0, #0]
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   171b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   171b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   171ba:	b93f      	cbnz	r7, 171cc <_lseek+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   171bc:	4631      	mov	r1, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   171be:	f7fb ff61 	bl	13084 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   171c2:	b170      	cbz	r0, 171e2 <_lseek+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   171c4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   171c8:	f7ff bef5 	b.w	16fb6 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   171cc:	2f01      	cmp	r7, #1
   171ce:	d102      	bne.n	171d6 <_lseek+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   171d0:	6881      	ldr	r1, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   171d2:	4431      	add	r1, r6
   171d4:	e7f3      	b.n	171be <_lseek+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   171d6:	2f02      	cmp	r7, #2
   171d8:	d101      	bne.n	171de <_lseek+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   171da:	68c1      	ldr	r1, [r0, #12]
   171dc:	e7f9      	b.n	171d2 <_lseek+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   171de:	2009      	movs	r0, #9
   171e0:	e7f0      	b.n	171c4 <_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   171e2:	1963      	adds	r3, r4, r5
   171e4:	68da      	ldr	r2, [r3, #12]
   171e6:	6890      	ldr	r0, [r2, #8]
   171e8:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   171ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   171ec:	2007c568 	.word	0x2007c568

000171f0 <_write>:
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   171f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   171f4:	460f      	mov	r7, r1
   171f6:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   171f8:	f7ff ff2e 	bl	17058 <remap_handle>
   171fc:	4606      	mov	r6, r0
   171fe:	f7ff ff05 	bl	1700c <findslot>
   17202:	2806      	cmp	r0, #6
   17204:	4605      	mov	r5, r0
   17206:	d104      	bne.n	17212 <_write+0x22>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17208:	f006 fbdc 	bl	1d9c4 <__errno>
   1720c:	2309      	movs	r3, #9
   1720e:	6003      	str	r3, [r0, #0]
   17210:	e006      	b.n	17220 <_write+0x30>
   17212:	2e05      	cmp	r6, #5
   17214:	d826      	bhi.n	17264 <_write+0x74>
   17216:	2001      	movs	r0, #1
   17218:	40b0      	lsls	r0, r6
   1721a:	f010 0f39 	tst.w	r0, #57	; 0x39
   1721e:	d002      	beq.n	17226 <_write+0x36>
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   17220:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17224:	e02c      	b.n	17280 <_write+0x90>
   17226:	f010 0f06 	tst.w	r0, #6
   1722a:	d01b      	beq.n	17264 <_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   1722c:	4e17      	ldr	r6, [pc, #92]	; (1728c <_write+0x9c>)
   1722e:	6830      	ldr	r0, [r6, #0]
   17230:	b130      	cbz	r0, 17240 <_write+0x50>
   17232:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   17234:	eba8 0307 	sub.w	r3, r8, r7
   17238:	429c      	cmp	r4, r3
   1723a:	dc0e      	bgt.n	1725a <_write+0x6a>
   1723c:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   17240:	1a20      	subs	r0, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   17242:	1c43      	adds	r3, r0, #1
   17244:	d0ec      	beq.n	17220 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   17246:	42a0      	cmp	r0, r4
   17248:	d0ea      	beq.n	17220 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   1724a:	4b11      	ldr	r3, [pc, #68]	; (17290 <_write+0xa0>)
   1724c:	1a20      	subs	r0, r4, r0
   1724e:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   17252:	685a      	ldr	r2, [r3, #4]
   17254:	4402      	add	r2, r0
   17256:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   17258:	e012      	b.n	17280 <_write+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   1725a:	6833      	ldr	r3, [r6, #0]
   1725c:	f818 0b01 	ldrb.w	r0, [r8], #1
   17260:	4798      	blx	r3
   17262:	e7e7      	b.n	17234 <_write+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   17264:	4b0a      	ldr	r3, [pc, #40]	; (17290 <_write+0xa0>)
   17266:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   1726a:	68d8      	ldr	r0, [r3, #12]
   1726c:	2800      	cmp	r0, #0
   1726e:	d0cb      	beq.n	17208 <_write+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   17270:	ab01      	add	r3, sp, #4
   17272:	4622      	mov	r2, r4
   17274:	4639      	mov	r1, r7
   17276:	f7fb fdd8 	bl	12e2a <f_write>
   1727a:	b120      	cbz	r0, 17286 <_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   1727c:	f7ff fe9b 	bl	16fb6 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   17280:	b002      	add	sp, #8
   17282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   17286:	9801      	ldr	r0, [sp, #4]
   17288:	e7da      	b.n	17240 <_write+0x50>
   1728a:	bf00      	nop
   1728c:	2007c560 	.word	0x2007c560
   17290:	2007c568 	.word	0x2007c568

00017294 <_open>:
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554

int _open(const char *path, int flags, ...)
{
   17294:	b40e      	push	{r1, r2, r3}
   17296:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
   1729a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    int fh = 0;
    int slot;

    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   1729c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554
{
   172a0:	9d07      	ldr	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   172a2:	f7ff feb3 	bl	1700c <findslot>
   172a6:	2806      	cmp	r0, #6
   172a8:	4606      	mov	r6, r0
   172aa:	d109      	bne.n	172c0 <_open+0x2c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   172ac:	f006 fb8a 	bl	1d9c4 <__errno>
   172b0:	2317      	movs	r3, #23
   172b2:	6003      	str	r3, [r0, #0]
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    {
        free(openfiles[slot].fatfsFCB);
        openfiles[slot].fatfsFCB = NULL;
    }

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   172b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:646
}
   172b8:	e8bd 41f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, lr}
   172bc:	b003      	add	sp, #12
   172be:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:561
    if (flags & O_APPEND)
   172c0:	0728      	lsls	r0, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   172c2:	4943      	ldr	r1, [pc, #268]	; (173d0 <_open+0x13c>)
   172c4:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:562
        flags &= ~O_TRUNC;
   172c6:	bf48      	it	mi
   172c8:	f425 6580 	bicmi.w	r5, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   172cc:	f008 fec4 	bl	20058 <strcmp>
   172d0:	2800      	cmp	r0, #0
   172d2:	d076      	beq.n	173c2 <_open+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:566
    else if (!__builtin_strcmp(path, "/dev/uart1"))
   172d4:	493f      	ldr	r1, [pc, #252]	; (173d4 <_open+0x140>)
   172d6:	4638      	mov	r0, r7
   172d8:	f008 febe 	bl	20058 <strcmp>
   172dc:	2800      	cmp	r0, #0
   172de:	d072      	beq.n	173c6 <_open+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:568
    else if (!__builtin_strcmp(path, "/dev/usb"))
   172e0:	493d      	ldr	r1, [pc, #244]	; (173d8 <_open+0x144>)
   172e2:	4638      	mov	r0, r7
   172e4:	f008 feb8 	bl	20058 <strcmp>
   172e8:	2800      	cmp	r0, #0
   172ea:	d06e      	beq.n	173ca <_open+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:586
        if (((flags & (O_CREAT | O_TRUNC)) == (O_CREAT | O_TRUNC))
   172ec:	f405 63c0 	and.w	r3, r5, #1536	; 0x600
   172f0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
   172f4:	d101      	bne.n	172fa <_open+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:587
                && (flags & (O_RDWR | O_WRONLY)))
   172f6:	07a9      	lsls	r1, r5, #30
   172f8:	d10d      	bne.n	17316 <_open+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:589
        else if ((flags & (O_CREAT | O_EXCL)) == (O_CREAT | O_EXCL))
   172fa:	f405 6320 	and.w	r3, r5, #2560	; 0xa00
   172fe:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
   17302:	d039      	beq.n	17378 <_open+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:591
        else if ((flags & O_CREAT) == O_CREAT)
   17304:	f415 7200 	ands.w	r2, r5, #512	; 0x200
   17308:	d138      	bne.n	1737c <_open+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:593
        else if ((flags == O_RDONLY) || (flags == O_WRONLY)
   1730a:	2d02      	cmp	r5, #2
   1730c:	d904      	bls.n	17318 <_open+0x84>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1730e:	f006 fb59 	bl	1d9c4 <__errno>
   17312:	2316      	movs	r3, #22
   17314:	e7cd      	b.n	172b2 <_open+0x1e>
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:588
            fatfsFlags = FA_CREATE_ALWAYS;
   17316:	2208      	movs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:599
        if ((flags & O_ACCMODE) == O_RDONLY)
   17318:	f015 0303 	ands.w	r3, r5, #3
   1731c:	d130      	bne.n	17380 <_open+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:600
            fatfsFlags |= FA_READ;
   1731e:	f042 0401 	orr.w	r4, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:609
        errno = EIO;
   17322:	f006 fb4f 	bl	1d9c4 <__errno>
   17326:	2305      	movs	r3, #5
   17328:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:611
        if (!openfiles[slot].fatfsFCB)
   1732a:	4b2c      	ldr	r3, [pc, #176]	; (173dc <_open+0x148>)
   1732c:	eb03 1806 	add.w	r8, r3, r6, lsl #4
   17330:	f8d8 000c 	ldr.w	r0, [r8, #12]
   17334:	b9c0      	cbnz	r0, 17368 <_open+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:612
            if ((openfiles[slot].fatfsFCB = __builtin_calloc(1, sizeof(FIL))))
   17336:	f44f 7109 	mov.w	r1, #548	; 0x224
   1733a:	2001      	movs	r0, #1
   1733c:	f006 fb32 	bl	1d9a4 <calloc>
   17340:	f8c8 000c 	str.w	r0, [r8, #12]
   17344:	2800      	cmp	r0, #0
   17346:	d0b5      	beq.n	172b4 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615
                                == FR_OK) ? (slot + MONITOR_FATFS) : -1) == -1)
   17348:	b2e2      	uxtb	r2, r4
   1734a:	4639      	mov	r1, r7
   1734c:	f7fb fc1e 	bl	12b8c <f_open>
   17350:	b910      	cbnz	r0, 17358 <_open+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615 (discriminator 1)
   17352:	1db4      	adds	r4, r6, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:613 (discriminator 1)
                if ((fh =
   17354:	1c62      	adds	r2, r4, #1
   17356:	d11d      	bne.n	17394 <_open+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:616
                    remap_fatfs_errors(f);
   17358:	f7ff fe2d 	bl	16fb6 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:639
    if ((fh < 0) && openfiles[slot].fatfsFCB)
   1735c:	4b1f      	ldr	r3, [pc, #124]	; (173dc <_open+0x148>)
   1735e:	eb03 1306 	add.w	r3, r3, r6, lsl #4
   17362:	68d8      	ldr	r0, [r3, #12]
   17364:	2800      	cmp	r0, #0
   17366:	d0a5      	beq.n	172b4 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:641
        free(openfiles[slot].fatfsFCB);
   17368:	f007 f8a6 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:642
        openfiles[slot].fatfsFCB = NULL;
   1736c:	4b1b      	ldr	r3, [pc, #108]	; (173dc <_open+0x148>)
   1736e:	eb03 1606 	add.w	r6, r3, r6, lsl #4
   17372:	2300      	movs	r3, #0
   17374:	60f3      	str	r3, [r6, #12]
   17376:	e79d      	b.n	172b4 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:590
            fatfsFlags = FA_OPEN_EXISTING;
   17378:	2200      	movs	r2, #0
   1737a:	e7cd      	b.n	17318 <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:592
            fatfsFlags = FA_OPEN_ALWAYS;
   1737c:	2210      	movs	r2, #16
   1737e:	e7cb      	b.n	17318 <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:601
        else if ((flags & O_ACCMODE) == O_WRONLY)
   17380:	2b01      	cmp	r3, #1
   17382:	d102      	bne.n	1738a <_open+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:602
            fatfsFlags |= FA_WRITE;
   17384:	f042 0402 	orr.w	r4, r2, #2
   17388:	e7cb      	b.n	17322 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:603
        else if ((flags & O_ACCMODE) == O_RDWR)
   1738a:	2b02      	cmp	r3, #2
   1738c:	d1bf      	bne.n	1730e <_open+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:604
            fatfsFlags |= (FA_READ | FA_WRITE);
   1738e:	f042 0403 	orr.w	r4, r2, #3
   17392:	e7c6      	b.n	17322 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:623
    if (fh >= 0)
   17394:	2c00      	cmp	r4, #0
   17396:	dbe1      	blt.n	1735c <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:625
        openfiles[slot].handle = fh;
   17398:	4a10      	ldr	r2, [pc, #64]	; (173dc <_open+0x148>)
   1739a:	0133      	lsls	r3, r6, #4
   1739c:	18d7      	adds	r7, r2, r3
   1739e:	50d4      	str	r4, [r2, r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:626
        openfiles[slot].pos = 0;
   173a0:	2300      	movs	r3, #0
   173a2:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   173a4:	072b      	lsls	r3, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:627
        openfiles[slot].flags = flags;
   173a6:	60bd      	str	r5, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   173a8:	d508      	bpl.n	173bc <_open+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:631
            if (f_lseek(openfiles[slot].fatfsFCB,
   173aa:	68f8      	ldr	r0, [r7, #12]
   173ac:	68c1      	ldr	r1, [r0, #12]
   173ae:	f7fb fe69 	bl	13084 <f_lseek>
   173b2:	2800      	cmp	r0, #0
   173b4:	d1d2      	bne.n	1735c <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:635
                openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   173b6:	68fb      	ldr	r3, [r7, #12]
   173b8:	689b      	ldr	r3, [r3, #8]
   173ba:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   173bc:	f104 0020 	add.w	r0, r4, #32
   173c0:	e77a      	b.n	172b8 <_open+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:565
        fh = MONITOR_UART0;
   173c2:	2403      	movs	r4, #3
   173c4:	e7e8      	b.n	17398 <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:567
        fh = MONITOR_UART1;
   173c6:	2404      	movs	r4, #4
   173c8:	e7e6      	b.n	17398 <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:569
        fh = MONITOR_USB;
   173ca:	2405      	movs	r4, #5
   173cc:	e7e4      	b.n	17398 <_open+0x104>
   173ce:	bf00      	nop
   173d0:	00025a4d 	.word	0x00025a4d
   173d4:	00025a58 	.word	0x00025a58
   173d8:	00025a63 	.word	0x00025a63
   173dc:	2007c568 	.word	0x2007c568

000173e0 <_close>:
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

int _close(int fd)
{
   173e0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   173e2:	f7ff fe39 	bl	17058 <remap_handle>
   173e6:	f7ff fe11 	bl	1700c <findslot>
   173ea:	2806      	cmp	r0, #6
   173ec:	d106      	bne.n	173fc <_close+0x1c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   173ee:	f006 fae9 	bl	1d9c4 <__errno>
   173f2:	2309      	movs	r3, #9
   173f4:	6003      	str	r3, [r0, #0]
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   173f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   173fa:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   173fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17400:	4b0b      	ldr	r3, [pc, #44]	; (17430 <_close+0x50>)
   17402:	0100      	lsls	r0, r0, #4
   17404:	181c      	adds	r4, r3, r0
   17406:	501a      	str	r2, [r3, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   17408:	68e0      	ldr	r0, [r4, #12]
   1740a:	b908      	cbnz	r0, 17410 <_close+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   1740c:	2000      	movs	r0, #0
   1740e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   17410:	f7fb fe26 	bl	13060 <f_close>
   17414:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   17416:	68e0      	ldr	r0, [r4, #12]
   17418:	f007 f84e 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   1741c:	2300      	movs	r3, #0
   1741e:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   17420:	2d00      	cmp	r5, #0
   17422:	d0f3      	beq.n	1740c <_close+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   17424:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   17426:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   1742a:	f7ff bdc4 	b.w	16fb6 <remap_fatfs_errors>
   1742e:	bf00      	nop
   17430:	2007c568 	.word	0x2007c568

00017434 <_fstat>:
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   17434:	b508      	push	{r3, lr}
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17436:	f006 fac5 	bl	1d9c4 <__errno>
   1743a:	2358      	movs	r3, #88	; 0x58
   1743c:	6003      	str	r3, [r0, #0]
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   1743e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17442:	bd08      	pop	{r3, pc}

00017444 <_isatty>:
_isatty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   17444:	4b07      	ldr	r3, [pc, #28]	; (17464 <_isatty+0x20>)
   17446:	681b      	ldr	r3, [r3, #0]
   17448:	689a      	ldr	r2, [r3, #8]
   1744a:	4282      	cmp	r2, r0
   1744c:	d007      	beq.n	1745e <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   1744e:	685a      	ldr	r2, [r3, #4]
   17450:	4282      	cmp	r2, r0
   17452:	d004      	beq.n	1745e <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   17454:	68db      	ldr	r3, [r3, #12]
   17456:	1a1b      	subs	r3, r3, r0
   17458:	4258      	negs	r0, r3
   1745a:	4158      	adcs	r0, r3
   1745c:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   1745e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   17460:	4770      	bx	lr
   17462:	bf00      	nop
   17464:	2007c0e0 	.word	0x2007c0e0

00017468 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
    I2C_SET_READ_MODE(address);
    return transfer(address, NULL, 0, rdata, rlength);
}

bool I2C_Base::transfer(uint8_t address, uint8_t * wdata, uint32_t wlength, uint8_t * rdata, uint32_t rlength)
{
   17468:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    bool status = false;
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   1746c:	f890 5105 	ldrb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
{
   17470:	4604      	mov	r4, r0
   17472:	468a      	mov	sl, r1
   17474:	4617      	mov	r7, r2
   17476:	4699      	mov	r9, r3
   17478:	9e08      	ldr	r6, [sp, #32]
   1747a:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   1747e:	b11d      	cbz	r5, 17488 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    {
        return status;
   17480:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:130

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   17482:	4628      	mov	r0, r5
   17484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 1)
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   17488:	b90a      	cbnz	r2, 1748e <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 2)
   1748a:	2e00      	cmp	r6, #0
   1748c:	d0f8      	beq.n	17480 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:98
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   1748e:	f002 fa73 	bl	19978 <xTaskGetSchedulerState>
   17492:	2802      	cmp	r0, #2
   17494:	d035      	beq.n	17502 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x9a>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
/// Private ///

void I2C_Base::i2cKickOffTransfer(uint8_t addr, uint8_t * wbytes, uint32_t wlength, uint8_t * rbytes, uint32_t rlength)
{
    mTransaction.slaveAddr      = addr;
    mTransaction.error          = 0;
   17496:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mTransaction.dataWrite      = wbytes;
    mTransaction.writeLength    = wlength;
    mTransaction.dataRead       = rbytes;
    mTransaction.readLength     = rlength;
    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   17498:	2220      	movs	r2, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   1749a:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   1749e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   174a2:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   174a6:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   174aa:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   174ae:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   174b2:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   174b6:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   174b8:	f7f8 fff0 	bl	1049c <sys_get_uptime_us>
   174bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   174c0:	2300      	movs	r3, #0
   174c2:	f006 f8db 	bl	1d67c <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:103
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   174c6:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   174ca:	f141 0700 	adc.w	r7, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:104
        while (!xSemaphoreTake(mTransferCompleteSignal, 0))
   174ce:	2300      	movs	r3, #0
   174d0:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   174d4:	461a      	mov	r2, r3
   174d6:	4619      	mov	r1, r3
   174d8:	f001 fc5a 	bl	18d90 <xQueueGenericReceive>
   174dc:	b128      	cbz	r0, 174ea <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
        status = (0 == mTransaction.error);
   174de:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   174e2:	fab5 f585 	clz	r5, r5
   174e6:	096d      	lsrs	r5, r5, #5
   174e8:	e7cb      	b.n	17482 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   174ea:	f7f8 ffd7 	bl	1049c <sys_get_uptime_us>
   174ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   174f2:	2300      	movs	r3, #0
   174f4:	f006 f8c2 	bl	1d67c <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:106
            if (sys_get_uptime_ms() > timeout)
   174f8:	428f      	cmp	r7, r1
   174fa:	bf08      	it	eq
   174fc:	4286      	cmpeq	r6, r0
   174fe:	d2e6      	bcs.n	174ce <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x66>
   17500:	e7ed      	b.n	174de <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   17502:	2300      	movs	r3, #0
   17504:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17508:	4619      	mov	r1, r3
   1750a:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   1750e:	f001 fc3f 	bl	18d90 <xQueueGenericReceive>
   17512:	2800      	cmp	r0, #0
   17514:	d0b4      	beq.n	17480 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:117
        xSemaphoreTake(mTransferCompleteSignal, 0);
   17516:	2300      	movs	r3, #0
   17518:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   1751c:	461a      	mov	r2, r3
   1751e:	4619      	mov	r1, r3
   17520:	f001 fc36 	bl	18d90 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   17524:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   17526:	2120      	movs	r1, #32
   17528:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   1752c:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   17530:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   17534:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   17538:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   1753c:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   17540:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   17544:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   17548:	6011      	str	r1, [r2, #0]
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   1754a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1754e:	4619      	mov	r1, r3
   17550:	f001 fc1e 	bl	18d90 <xQueueGenericReceive>
   17554:	b120      	cbz	r0, 17560 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:123
            status = (0 == mTransaction.error);
   17556:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   1755a:	fab5 f585 	clz	r5, r5
   1755e:	096d      	lsrs	r5, r5, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
        xSemaphoreGive(mI2CMutex);
   17560:	2300      	movs	r3, #0
   17562:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   17566:	461a      	mov	r2, r3
   17568:	4619      	mov	r1, r3
   1756a:	f001 fb09 	bl	18b80 <xQueueGenericSend>
   1756e:	e788      	b.n	17482 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>

00017570 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base21writeRegisterThenReadEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   17570:	b410      	push	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   17572:	f041 0101 	orr.w	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:65
}
   17576:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   17578:	f7ff bf76 	b.w	17468 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>

0001757c <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   1757c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:48
    uint8_t register_return = 0;
   1757e:	2300      	movs	r3, #0
   17580:	f88d 3017 	strb.w	r3, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   17584:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   17586:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   1758a:	f10d 0217 	add.w	r2, sp, #23
   1758e:	9200      	str	r2, [sp, #0]
   17590:	9301      	str	r3, [sp, #4]
   17592:	f10d 020f 	add.w	r2, sp, #15
   17596:	f7ff ffeb 	bl	17570 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
}
   1759a:	f89d 0017 	ldrb.w	r0, [sp, #23]
   1759e:	b007      	add	sp, #28
   175a0:	f85d fb04 	ldr.w	pc, [sp], #4

000175a4 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
{
   175a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   175a6:	ac04      	add	r4, sp, #16
   175a8:	f804 2d01 	strb.w	r2, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:81
    return writeRegisterThenRead(deviceAddress, &firstReg, 1, pData, transferSize);
   175ac:	9a06      	ldr	r2, [sp, #24]
   175ae:	9300      	str	r3, [sp, #0]
   175b0:	9201      	str	r2, [sp, #4]
   175b2:	2301      	movs	r3, #1
   175b4:	4622      	mov	r2, r4
   175b6:	f7ff ffdb 	bl	17570 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:82
}
   175ba:	b004      	add	sp, #16
   175bc:	bd10      	pop	{r4, pc}

000175be <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
{
   175be:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:77
    return transfer(address, wdata, wlength, NULL, 0);
   175c0:	2400      	movs	r4, #0
   175c2:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   175c6:	9401      	str	r4, [sp, #4]
   175c8:	9400      	str	r4, [sp, #0]
   175ca:	f7ff ff4d 	bl	17468 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:78
}
   175ce:	b002      	add	sp, #8
   175d0:	bd10      	pop	{r4, pc}

000175d2 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
{
   175d2:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:55
    writeBytes[0] = registerAddress;
   175d4:	f88d 2004 	strb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:56
    writeBytes[1] = value;
   175d8:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return writeRegisters(deviceAddress, writeBytes, 2);
   175dc:	aa01      	add	r2, sp, #4
   175de:	2302      	movs	r3, #2
   175e0:	f7ff ffed 	bl	175be <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:59
}
   175e4:	b003      	add	sp, #12
   175e6:	f85d fb04 	ldr.w	pc, [sp], #4

000175ea <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:84
{
   175ea:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
    return transfer(address, NULL, 0, rdata, rlength);
   175ec:	e88d 000c 	stmia.w	sp, {r2, r3}
   175f0:	2300      	movs	r3, #0
   175f2:	f041 0101 	orr.w	r1, r1, #1
   175f6:	461a      	mov	r2, r3
   175f8:	f7ff ff36 	bl	17468 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
}
   175fc:	b003      	add	sp, #12
   175fe:	f85d fb04 	ldr.w	pc, [sp], #4

00017602 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   17602:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
{
   17604:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   17606:	aa02      	add	r2, sp, #8
   17608:	f802 3d01 	strb.w	r3, [r2, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
    return readRegisters(address, &notUsed, lenZeroToTestDeviceReady);
   1760c:	f7ff ffed 	bl	175ea <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:140
}
   17610:	b003      	add	sp, #12
   17612:	f85d fb04 	ldr.w	pc, [sp], #4
   17616:	Address 0x0000000000017616 is out of bounds.


00017618 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   17618:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   1761a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   1761c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   1761e:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
   17622:	f880 5105 	strb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   17626:	2001      	movs	r0, #1
   17628:	f001 fb2c 	bl	18c84 <xQueueCreateMutex>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   1762c:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   1762e:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   17632:	4629      	mov	r1, r5
   17634:	2001      	movs	r0, #1
   17636:	f001 fa81 	bl	18b3c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   1763a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   1763e:	4a0c      	ldr	r2, [pc, #48]	; (17670 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   17640:	f8c4 010c 	str.w	r0, [r4, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   17644:	4293      	cmp	r3, r2
   17646:	d00c      	beq.n	17662 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4a>
   17648:	f502 2288 	add.w	r2, r2, #278528	; 0x44000
   1764c:	4293      	cmp	r3, r2
   1764e:	d00a      	beq.n	17666 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4e>
   17650:	f5a2 2204 	sub.w	r2, r2, #540672	; 0x84000
   17654:	4293      	cmp	r3, r2
   17656:	d108      	bne.n	1766a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:156
            mIRQ = I2C0_IRQn;
   17658:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   1765a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:168
}
   1765e:	4620      	mov	r0, r4
   17660:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:159
            mIRQ = I2C1_IRQn;
   17662:	230b      	movs	r3, #11
   17664:	e7f9      	b.n	1765a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:162
            mIRQ = I2C2_IRQn;
   17666:	230c      	movs	r3, #12
   17668:	e7f7      	b.n	1765a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   1766a:	2363      	movs	r3, #99	; 0x63
   1766c:	e7f5      	b.n	1765a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
   1766e:	bf00      	nop
   17670:	4005c000 	.word	0x4005c000

00017674 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   17674:	f990 3104 	ldrsb.w	r3, [r0, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   17678:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   1767a:	2b0b      	cmp	r3, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   1767c:	4605      	mov	r5, r0
   1767e:	460c      	mov	r4, r1
   17680:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   17682:	d035      	beq.n	176f0 <I2C_Base::init(unsigned long, unsigned long)+0x7c>
   17684:	2b0c      	cmp	r3, #12
   17686:	d036      	beq.n	176f6 <I2C_Base::init(unsigned long, unsigned long)+0x82>
   17688:	2b0a      	cmp	r3, #10
   1768a:	d137      	bne.n	176fc <I2C_Base::init(unsigned long, unsigned long)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:175
        case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   1768c:	2101      	movs	r1, #1
   1768e:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   17690:	f7f9 f944 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   17694:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   17698:	bf98      	it	ls
   1769a:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   1769e:	f04f 026c 	mov.w	r2, #108	; 0x6c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   176a2:	bf94      	ite	ls
   176a4:	4371      	mulls	r1, r6
   176a6:	4916      	ldrhi	r1, [pc, #88]	; (17700 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   176a8:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   176ac:	fbb4 f1f1 	udiv	r1, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   176b0:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   176b2:	2228      	movs	r2, #40	; 0x28
   176b4:	2064      	movs	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   176b6:	0849      	lsrs	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   176b8:	434a      	muls	r2, r1
   176ba:	fbb2 f2f0 	udiv	r2, r2, r0
   176be:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   176c0:	223c      	movs	r2, #60	; 0x3c
   176c2:	4351      	muls	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   176c4:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   176c6:	fbb1 f1f0 	udiv	r1, r1, r0
   176ca:	6159      	str	r1, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   176cc:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2ADR1 = 0;
   176ce:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:202
    mpI2CRegs->I2ADR2 = 0;
   176d0:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    mpI2CRegs->I2ADR3 = 0;
   176d2:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
    mpI2CRegs->I2CONSET = 0x40;
   176d4:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   176d6:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
   176d8:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:208
    NVIC_EnableIRQ(mIRQ);
   176da:	f995 3104 	ldrsb.w	r3, [r5, #260]	; 0x104
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   176de:	4a09      	ldr	r2, [pc, #36]	; (17704 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   176e0:	0959      	lsrs	r1, r3, #5
   176e2:	f003 031f 	and.w	r3, r3, #31
   176e6:	fa00 f303 	lsl.w	r3, r0, r3
   176ea:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   176ee:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
        case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   176f0:	2101      	movs	r1, #1
   176f2:	2013      	movs	r0, #19
   176f4:	e7cc      	b.n	17690 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   176f6:	2101      	movs	r1, #1
   176f8:	201a      	movs	r0, #26
   176fa:	e7c9      	b.n	17690 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:178
        default: return false;
   176fc:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:211
}
   176fe:	bd70      	pop	{r4, r5, r6, pc}
   17700:	000186a0 	.word	0x000186a0
   17704:	e000e100 	.word	0xe000e100

00017708 <I2C_Base::setStop()>:
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
{
    mpI2CRegs->I2CONSET = (1 << 5);
}
inline void I2C_Base::clearSTARTFlag()
{
    mpI2CRegs->I2CONCLR = (1 << 5);
   17708:	2220      	movs	r2, #32
   1770a:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
   1770e:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:250
    mpI2CRegs->I2CONCLR = (1 << 2);
}
inline void I2C_Base::setStop()
{
    clearSTARTFlag();
    mpI2CRegs->I2CONSET = (1 << 4);
   17710:	2210      	movs	r2, #16
   17712:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   17714:	2208      	movs	r2, #8
   17716:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:252
    clearSIFlag();
    while ((mpI2CRegs->I2CONSET & (1 << 4)));
   17718:	681a      	ldr	r2, [r3, #0]
   1771a:	06d2      	lsls	r2, r2, #27
   1771c:	d4fc      	bmi.n	17718 <I2C_Base::setStop()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:253
    if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   1771e:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
   17722:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:255
    {
        state = readComplete;
   17724:	bf4c      	ite	mi
   17726:	2301      	movmi	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:259
    }
    else
    {
        state = writeComplete;
   17728:	2302      	movpl	r3, #2
   1772a:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
   1772e:	4770      	bx	lr

00017730 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
        readModeNackedBySlave = 0x48,
        dataAvailableAckSent  = 0x50,
        dataAvailableNackSent = 0x58,
    };

    state = busy;
   17730:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   17732:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
    state = busy;
   17734:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
     *  For 2+ bytes:  dataAvailableAckSent --> ... (dataAvailableAckSent) --> dataAvailableNackSent --> (stop)
     *  For 1  byte :  dataAvailableNackSent --> (stop)
     ***********************************************************************************************************
     */

    switch (mpI2CRegs->I2STAT)
   17738:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   1773c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   1773e:	685a      	ldr	r2, [r3, #4]
   17740:	2a28      	cmp	r2, #40	; 0x28
   17742:	d044      	beq.n	177ce <I2C_Base::i2cStateMachine()+0x9e>
   17744:	d80d      	bhi.n	17762 <I2C_Base::i2cStateMachine()+0x32>
   17746:	2a10      	cmp	r2, #16
   17748:	d027      	beq.n	1779a <I2C_Base::i2cStateMachine()+0x6a>
   1774a:	2a18      	cmp	r2, #24
   1774c:	d028      	beq.n	177a0 <I2C_Base::i2cStateMachine()+0x70>
   1774e:	2a08      	cmp	r2, #8
   17750:	d10c      	bne.n	1776c <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:318
    {
        case start:
            //u0_dbg_printf("sta\n");
            if(mTransaction.writeLength == 0)
   17752:	f8d0 1118 	ldr.w	r1, [r0, #280]	; 0x118
   17756:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   1775a:	b9b1      	cbnz	r1, 1778a <I2C_Base::i2cStateMachine()+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            }
            clearSIFlag();
            break;
        case repeatStart:
            //u0_dbg_printf("rsta-%X\n", I2C_READ_ADDR(mTransaction.slaveAddr));
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   1775c:	f042 0201 	orr.w	r2, r2, #1
   17760:	e015      	b.n	1778e <I2C_Base::i2cStateMachine()+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   17762:	2a40      	cmp	r2, #64	; 0x40
   17764:	d03e      	beq.n	177e4 <I2C_Base::i2cStateMachine()+0xb4>
   17766:	d805      	bhi.n	17774 <I2C_Base::i2cStateMachine()+0x44>
   17768:	2a38      	cmp	r2, #56	; 0x38
   1776a:	d059      	beq.n	17820 <I2C_Base::i2cStateMachine()+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:436
        case slaveAddressNacked:    // no break
        case dataNackedBySlave:     // no break
        case readModeNackedBySlave: // no break
        case busError:              // no break
        default:
            mTransaction.error = mpI2CRegs->I2STAT;
   1776c:	685b      	ldr	r3, [r3, #4]
   1776e:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
   17772:	e01d      	b.n	177b0 <I2C_Base::i2cStateMachine()+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   17774:	2a50      	cmp	r2, #80	; 0x50
   17776:	d03f      	beq.n	177f8 <I2C_Base::i2cStateMachine()+0xc8>
   17778:	2a58      	cmp	r2, #88	; 0x58
   1777a:	d1f7      	bne.n	1776c <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:421
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   1777c:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   17780:	689b      	ldr	r3, [r3, #8]
   17782:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   17784:	f7ff ffc0 	bl	17708 <I2C_Base::setStop()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:438
            break;
   17788:	e004      	b.n	17794 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
                mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   1778a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   1778e:	609a      	str	r2, [r3, #8]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   17790:	2208      	movs	r2, #8
   17792:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:442
    }

    return state;
}
   17794:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
   17798:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   1779a:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   1779e:	e7dd      	b.n	1775c <I2C_Base::i2cStateMachine()+0x2c>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   177a0:	2220      	movs	r2, #32
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   177a2:	f8d0 1120 	ldr.w	r1, [r0, #288]	; 0x120
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   177a6:	619a      	str	r2, [r3, #24]
   177a8:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   177ac:	b911      	cbnz	r1, 177b4 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340 (discriminator 1)
   177ae:	b90a      	cbnz	r2, 177b4 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   177b0:	4620      	mov	r0, r4
   177b2:	e7e7      	b.n	17784 <I2C_Base::i2cStateMachine()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:345
            else if(0 != mTransaction.writeLength)
   177b4:	2a00      	cmp	r2, #0
   177b6:	d0ed      	beq.n	17794 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   177b8:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   177bc:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   177be:	f811 0b01 	ldrb.w	r0, [r1], #1
   177c2:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
                ++mTransaction.dataWrite;
   177c4:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   177c8:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
   177cc:	e7e0      	b.n	17790 <I2C_Base::i2cStateMachine()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:357
            if (0 == mTransaction.writeLength)
   177ce:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
   177d2:	2a00      	cmp	r2, #0
   177d4:	d1f0      	bne.n	177b8 <I2C_Base::i2cStateMachine()+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:360
                if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   177d6:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   177da:	07d2      	lsls	r2, r2, #31
   177dc:	d5e8      	bpl.n	177b0 <I2C_Base::i2cStateMachine()+0x80>
_ZN8I2C_Base12setSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:233
    mpI2CRegs->I2CONSET = (1 << 5);
   177de:	2220      	movs	r2, #32
   177e0:	601a      	str	r2, [r3, #0]
   177e2:	e7d5      	b.n	17790 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   177e4:	2220      	movs	r2, #32
   177e6:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:387
            if (mTransaction.readLength > 1)
   177e8:	f8d0 2120 	ldr.w	r2, [r0, #288]	; 0x120
   177ec:	2a01      	cmp	r2, #1
   177ee:	f04f 0204 	mov.w	r2, #4
   177f2:	d8f5      	bhi.n	177e0 <I2C_Base::i2cStateMachine()+0xb0>
_ZN8I2C_Base11setNackFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:245
    mpI2CRegs->I2CONCLR = (1 << 2);
   177f4:	619a      	str	r2, [r3, #24]
   177f6:	e7cb      	b.n	17790 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:400
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   177f8:	689b      	ldr	r3, [r3, #8]
   177fa:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   177fe:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
            ++mTransaction.dataRead;
   17800:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
   17804:	2204      	movs	r2, #4
   17806:	3301      	adds	r3, #1
   17808:	f8c0 311c 	str.w	r3, [r0, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   1780c:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
   17810:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   17812:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   17814:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   17818:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   1781c:	d1e0      	bne.n	177e0 <I2C_Base::i2cStateMachine()+0xb0>
   1781e:	e7e9      	b.n	177f4 <I2C_Base::i2cStateMachine()+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17820:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   17824:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17826:	f012 0f01 	tst.w	r2, #1
   1782a:	bf14      	ite	ne
   1782c:	2201      	movne	r2, #1
   1782e:	2202      	moveq	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   17830:	f880 3111 	strb.w	r3, [r0, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17834:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:429
            break;
   17838:	e7ac      	b.n	17794 <I2C_Base::i2cStateMachine()+0x64>
   1783a:	Address 0x000000000001783a is out of bounds.


0001783c <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:36
{
   1783c:	b513      	push	{r0, r1, r4, lr}
   1783e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:38
    if (busy != i2cStateMachine())
   17840:	f7ff ff76 	bl	17730 <I2C_Base::i2cStateMachine()>
   17844:	b188      	cbz	r0, 1786a <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:40
        long higherPriorityTaskWaiting = 0;
   17846:	2300      	movs	r3, #0
   17848:	a902      	add	r1, sp, #8
   1784a:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   1784e:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   17852:	f001 fa69 	bl	18d28 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   17856:	9b01      	ldr	r3, [sp, #4]
   17858:	b13b      	cbz	r3, 1786a <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42 (discriminator 1)
   1785a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1785e:	4b04      	ldr	r3, [pc, #16]	; (17870 <I2C_Base::handleInterrupt()+0x34>)
   17860:	601a      	str	r2, [r3, #0]
   17862:	f3bf 8f4f 	dsb	sy
   17866:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
}
   1786a:	b002      	add	sp, #8
   1786c:	bd10      	pop	{r4, pc}
   1786e:	bf00      	nop
   17870:	e000ed04 	.word	0xe000ed04

00017874 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   17874:	b537      	push	{r0, r1, r2, r4, r5, lr}
   17876:	4604      	mov	r4, r0
   17878:	4615      	mov	r5, r2
   1787a:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   1787e:	f002 f87b 	bl	19978 <xTaskGetSchedulerState>
   17882:	2802      	cmp	r0, #2
   17884:	d009      	beq.n	1789a <UartDev::putChar(char, unsigned int)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   17886:	6963      	ldr	r3, [r4, #20]
   17888:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1788c:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   1788e:	7d1a      	ldrb	r2, [r3, #20]
   17890:	0652      	lsls	r2, r2, #25
   17892:	d5fc      	bpl.n	1788e <UartDev::putChar(char, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   17894:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   17896:	b003      	add	sp, #12
   17898:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   1789a:	2300      	movs	r3, #0
   1789c:	462a      	mov	r2, r5
   1789e:	f10d 0107 	add.w	r1, sp, #7
   178a2:	69e0      	ldr	r0, [r4, #28]
   178a4:	f001 f96c 	bl	18b80 <xQueueGenericSend>
   178a8:	2800      	cmp	r0, #0
   178aa:	d0f4      	beq.n	17896 <UartDev::putChar(char, unsigned int)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   178ac:	6963      	ldr	r3, [r4, #20]
   178ae:	7d1b      	ldrb	r3, [r3, #20]
   178b0:	065b      	lsls	r3, r3, #25
   178b2:	d5ef      	bpl.n	17894 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   178b4:	2300      	movs	r3, #0
   178b6:	f10d 0107 	add.w	r1, sp, #7
   178ba:	461a      	mov	r2, r3
   178bc:	69e0      	ldr	r0, [r4, #28]
   178be:	f001 fa67 	bl	18d90 <xQueueGenericReceive>
   178c2:	2800      	cmp	r0, #0
   178c4:	d0e6      	beq.n	17894 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   178c6:	6963      	ldr	r3, [r4, #20]
   178c8:	f89d 2007 	ldrb.w	r2, [sp, #7]
   178cc:	701a      	strb	r2, [r3, #0]
   178ce:	e7e1      	b.n	17894 <UartDev::putChar(char, unsigned int)+0x20>

000178d0 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   178d0:	b510      	push	{r4, lr}
   178d2:	4604      	mov	r4, r0
   178d4:	4b02      	ldr	r3, [pc, #8]	; (178e0 <UartDev::~UartDev()+0x10>)
   178d6:	6003      	str	r3, [r0, #0]
   178d8:	f000 f9d0 	bl	17c7c <CharDev::~CharDev()>
   178dc:	4620      	mov	r0, r4
   178de:	bd10      	pop	{r4, pc}
   178e0:	00025a8c 	.word	0x00025a8c

000178e4 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   178e4:	b510      	push	{r4, lr}
   178e6:	4604      	mov	r4, r0
   178e8:	f7ff fff2 	bl	178d0 <UartDev::~UartDev()>
   178ec:	4620      	mov	r0, r4
   178ee:	212c      	movs	r1, #44	; 0x2c
   178f0:	f004 fee7 	bl	1c6c2 <operator delete(void*, unsigned int)>
   178f4:	4620      	mov	r0, r4
   178f6:	bd10      	pop	{r4, pc}

000178f8 <UartDev::flush()>:
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   178f8:	b510      	push	{r4, lr}
   178fa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   178fc:	f002 f83c 	bl	19978 <xTaskGetSchedulerState>
   17900:	2802      	cmp	r0, #2
   17902:	d107      	bne.n	17914 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   17904:	69e0      	ldr	r0, [r4, #28]
   17906:	f001 fb11 	bl	18f2c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   1790a:	b118      	cbz	r0, 17914 <UartDev::flush()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   1790c:	2001      	movs	r0, #1
   1790e:	f001 fe1d 	bl	1954c <vTaskDelay>
   17912:	e7f7      	b.n	17904 <UartDev::flush()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   17914:	2001      	movs	r0, #1
   17916:	bd10      	pop	{r4, pc}

00017918 <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   17918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1791a:	4606      	mov	r6, r0
   1791c:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   1791e:	460f      	mov	r7, r1
   17920:	b909      	cbnz	r1, 17926 <UartDev::getChar(char*, unsigned int)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   17922:	2000      	movs	r0, #0
   17924:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   17926:	6983      	ldr	r3, [r0, #24]
   17928:	2b00      	cmp	r3, #0
   1792a:	d0fa      	beq.n	17922 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1792c:	f002 f824 	bl	19978 <xTaskGetSchedulerState>
   17930:	2802      	cmp	r0, #2
   17932:	d109      	bne.n	17948 <UartDev::getChar(char*, unsigned int)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   17934:	2300      	movs	r3, #0
   17936:	4622      	mov	r2, r4
   17938:	4639      	mov	r1, r7
   1793a:	69b0      	ldr	r0, [r6, #24]
   1793c:	f001 fa28 	bl	18d90 <xQueueGenericReceive>
   17940:	3000      	adds	r0, #0
   17942:	bf18      	it	ne
   17944:	2001      	movne	r0, #1
   17946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17948:	f7f8 fda8 	bl	1049c <sys_get_uptime_us>
   1794c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17950:	2300      	movs	r3, #0
   17952:	f005 fe93 	bl	1d67c <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   17956:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   17958:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   1795a:	2300      	movs	r3, #0
   1795c:	4639      	mov	r1, r7
   1795e:	461a      	mov	r2, r3
   17960:	69b0      	ldr	r0, [r6, #24]
   17962:	f001 fa15 	bl	18d90 <xQueueGenericReceive>
   17966:	b958      	cbnz	r0, 17980 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17968:	f7f8 fd98 	bl	1049c <sys_get_uptime_us>
   1796c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17970:	2300      	movs	r3, #0
   17972:	f005 fe83 	bl	1d67c <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   17976:	428d      	cmp	r5, r1
   17978:	bf08      	it	eq
   1797a:	4284      	cmpeq	r4, r0
   1797c:	d2ed      	bcs.n	1795a <UartDev::getChar(char*, unsigned int)+0x42>
   1797e:	e7d0      	b.n	17922 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   17980:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   17982:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00017984 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
{
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */

    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17984:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:97
{
   17986:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17988:	6944      	ldr	r4, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
    {
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   1798a:	0109      	lsls	r1, r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   1798c:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   1798e:	6a00      	ldr	r0, [r0, #32]
   17990:	fbb0 f0f1 	udiv	r0, r0, r1
   17994:	f005 fae8 	bl	1cf68 <__aeabi_ui2d>
   17998:	4b06      	ldr	r3, [pc, #24]	; (179b4 <UartDev::setBaudRate(unsigned int)+0x30>)
   1799a:	2200      	movs	r2, #0
   1799c:	f005 f9a8 	bl	1ccf0 <__adddf3>
   179a0:	f005 fb58 	bl	1d054 <__aeabi_d2uiz>
   179a4:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:105
        mpUARTRegBase->DLM = (bd >> 8);
   179a6:	0a03      	lsrs	r3, r0, #8
   179a8:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
        mpUARTRegBase->DLL = (bd >> 0);
    }
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   179aa:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:106
        mpUARTRegBase->DLL = (bd >> 0);
   179ac:	b2c0      	uxtb	r0, r0
   179ae:	7020      	strb	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   179b0:	7323      	strb	r3, [r4, #12]
   179b2:	bd10      	pop	{r4, pc}
   179b4:	3fe00000 	.word	0x3fe00000

000179b8 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   179b8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   179ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   179bc:	6942      	ldr	r2, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   179be:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   179c0:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   179c4:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   179c6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   179c8:	f003 030e 	and.w	r3, r3, #14
   179cc:	2b04      	cmp	r3, #4
   179ce:	d021      	beq.n	17a14 <UartDev::handleInterrupt()+0x5c>
   179d0:	2b0c      	cmp	r3, #12
   179d2:	d01f      	beq.n	17a14 <UartDev::handleInterrupt()+0x5c>
   179d4:	2b02      	cmp	r3, #2
   179d6:	d13f      	bne.n	17a58 <UartDev::handleInterrupt()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   179d8:	69c0      	ldr	r0, [r0, #28]
   179da:	f001 fab0 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   179de:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   179e0:	4298      	cmp	r0, r3
   179e2:	d903      	bls.n	179ec <UartDev::handleInterrupt()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   179e4:	69e0      	ldr	r0, [r4, #28]
   179e6:	f001 faaa 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   179ea:	84e0      	strh	r0, [r4, #38]	; 0x26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   179ec:	2610      	movs	r6, #16
   179ee:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   179f0:	aa01      	add	r2, sp, #4
   179f2:	f10d 0103 	add.w	r1, sp, #3
   179f6:	69e0      	ldr	r0, [r4, #28]
   179f8:	f001 fa64 	bl	18ec4 <xQueueReceiveFromISR>
   179fc:	2800      	cmp	r0, #0
   179fe:	d12e      	bne.n	17a5e <UartDev::handleInterrupt()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   17a00:	b35d      	cbz	r5, 17a5a <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   17a02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17a06:	4b1b      	ldr	r3, [pc, #108]	; (17a74 <UartDev::handleInterrupt()+0xbc>)
   17a08:	601a      	str	r2, [r3, #0]
   17a0a:	f3bf 8f4f 	dsb	sy
   17a0e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   17a12:	e022      	b.n	17a5a <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   17a14:	f001 fc70 	bl	192f8 <xTaskGetTickCountFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   17a18:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   17a1a:	62a0      	str	r0, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   17a1c:	6963      	ldr	r3, [r4, #20]
   17a1e:	7d1a      	ldrb	r2, [r3, #20]
   17a20:	07d2      	lsls	r2, r2, #31
   17a22:	d50e      	bpl.n	17a42 <UartDev::handleInterrupt()+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   17a24:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   17a26:	aa01      	add	r2, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   17a28:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   17a2c:	f10d 0103 	add.w	r1, sp, #3
   17a30:	2300      	movs	r3, #0
   17a32:	69a0      	ldr	r0, [r4, #24]
   17a34:	f001 f938 	bl	18ca8 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   17a38:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   17a3a:	2b00      	cmp	r3, #0
   17a3c:	bf18      	it	ne
   17a3e:	2501      	movne	r5, #1
   17a40:	e7ec      	b.n	17a1c <UartDev::handleInterrupt()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   17a42:	69a0      	ldr	r0, [r4, #24]
   17a44:	f001 fa7b 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   17a48:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   17a4a:	4298      	cmp	r0, r3
   17a4c:	d9d8      	bls.n	17a00 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   17a4e:	69a0      	ldr	r0, [r4, #24]
   17a50:	f001 fa75 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   17a54:	84a0      	strh	r0, [r4, #36]	; 0x24
   17a56:	e7d3      	b.n	17a00 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   17a58:	7d13      	ldrb	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   17a5a:	b002      	add	sp, #8
   17a5c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   17a5e:	6963      	ldr	r3, [r4, #20]
   17a60:	f89d 2003 	ldrb.w	r2, [sp, #3]
   17a64:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   17a66:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   17a68:	2b00      	cmp	r3, #0
   17a6a:	bf18      	it	ne
   17a6c:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   17a6e:	3e01      	subs	r6, #1
   17a70:	d0c6      	beq.n	17a00 <UartDev::handleInterrupt()+0x48>
   17a72:	e7bd      	b.n	179f0 <UartDev::handleInterrupt()+0x38>
   17a74:	e000ed04 	.word	0xe000ed04

00017a78 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   17a78:	b538      	push	{r3, r4, r5, lr}
   17a7a:	4604      	mov	r4, r0
   17a7c:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   17a7e:	f000 f8ed 	bl	17c5c <CharDev::CharDev()>
   17a82:	4b06      	ldr	r3, [pc, #24]	; (17a9c <UartDev::UartDev(unsigned int*)+0x24>)
   17a84:	6165      	str	r5, [r4, #20]
   17a86:	6023      	str	r3, [r4, #0]
   17a88:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   17a8a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   17a8c:	61a3      	str	r3, [r4, #24]
   17a8e:	61e3      	str	r3, [r4, #28]
   17a90:	6223      	str	r3, [r4, #32]
   17a92:	84a3      	strh	r3, [r4, #36]	; 0x24
   17a94:	84e3      	strh	r3, [r4, #38]	; 0x26
   17a96:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   17a98:	bd38      	pop	{r3, r4, r5, pc}
   17a9a:	bf00      	nop
   17a9c:	00025a8c 	.word	0x00025a8c

00017aa0 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208

bool UartDev::init(unsigned int pclk, unsigned int baudRate,
                   int rxQSize, int txQSize)
{
   17aa0:	b570      	push	{r4, r5, r6, lr}
   17aa2:	4616      	mov	r6, r2
   17aa4:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    mPeripheralClock = pclk;

    // Configure UART Hardware: Baud rate, FIFOs etc.
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17aa6:	4a25      	ldr	r2, [pc, #148]	; (17b3c <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>)
   17aa8:	6943      	ldr	r3, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208
{
   17aaa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17aac:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:209
    mPeripheralClock = pclk;
   17aae:	6201      	str	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17ab0:	d12f      	bne.n	17b12 <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:214
    {
        lpc_pconp(pconp_uart0, true);
   17ab2:	2101      	movs	r1, #1
   17ab4:	2003      	movs	r0, #3
   17ab6:	f7f8 ff31 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17aba:	2220      	movs	r2, #32
   17abc:	4b20      	ldr	r3, [pc, #128]	; (17b40 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246

    // Enable & Reset FIFOs and set 4 char timeout for Rx
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);

    setBaudRate(baudRate);
   17abe:	4631      	mov	r1, r6
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17ac0:	601a      	str	r2, [r3, #0]
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   17ac2:	2241      	movs	r2, #65	; 0x41
   17ac4:	6963      	ldr	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   17ac6:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   17ac8:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:244
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);
   17aca:	7a1a      	ldrb	r2, [r3, #8]
   17acc:	f042 0206 	orr.w	r2, r2, #6
   17ad0:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   17ad2:	f7ff ff57 	bl	17984 <UartDev::setBaudRate(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253
    // Set minimum queue size?
    if (rxQSize < 9) rxQSize = 8;
    if (txQSize < 9) txQSize = 8;

    // Create the receive and transmit queues
    if (!mRxQueue) mRxQueue = xQueueCreate(rxQSize, sizeof(char));
   17ad6:	69a2      	ldr	r2, [r4, #24]
   17ad8:	b942      	cbnz	r2, 17aec <UartDev::init(unsigned int, unsigned int, int, int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253 (discriminator 1)
   17ada:	2d08      	cmp	r5, #8
   17adc:	4628      	mov	r0, r5
   17ade:	f04f 0101 	mov.w	r1, #1
   17ae2:	bfb8      	it	lt
   17ae4:	2008      	movlt	r0, #8
   17ae6:	f001 f829 	bl	18b3c <xQueueGenericCreate>
   17aea:	61a0      	str	r0, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254
    if (!mTxQueue) mTxQueue = xQueueCreate(txQSize, sizeof(char));
   17aec:	69e2      	ldr	r2, [r4, #28]
   17aee:	b93a      	cbnz	r2, 17b00 <UartDev::init(unsigned int, unsigned int, int, int)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254 (discriminator 1)
   17af0:	9804      	ldr	r0, [sp, #16]
   17af2:	2101      	movs	r1, #1
   17af4:	2808      	cmp	r0, #8
   17af6:	bfb8      	it	lt
   17af8:	2008      	movlt	r0, #8
   17afa:	f001 f81f 	bl	18b3c <xQueueGenericCreate>
   17afe:	61e0      	str	r0, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:261
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetQueueName(mRxQueue, "UART RX-Q");
    vTraceSetQueueName(mTxQueue, "UART TX-Q");

    // Enable Rx/Tx and line status Interrupts:
    mpUARTRegBase->IER = (1 << 0) | (1 << 1) | (1 << 2); // B0:Rx, B1: Tx
   17b00:	2207      	movs	r2, #7
   17b02:	6963      	ldr	r3, [r4, #20]
   17b04:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263

    return (0 != mRxQueue && 0 != mTxQueue);
   17b06:	69a3      	ldr	r3, [r4, #24]
   17b08:	b10b      	cbz	r3, 17b0e <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 1)
   17b0a:	69e3      	ldr	r3, [r4, #28]
   17b0c:	b9a3      	cbnz	r3, 17b38 <UartDev::init(unsigned int, unsigned int, int, int)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 4)
   17b0e:	2000      	movs	r0, #0
   17b10:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:225
    else if (LPC_UART2_BASE == (unsigned int) mpUARTRegBase)
   17b12:	4a0c      	ldr	r2, [pc, #48]	; (17b44 <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   17b14:	4293      	cmp	r3, r2
   17b16:	d105      	bne.n	17b24 <UartDev::init(unsigned int, unsigned int, int, int)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:227
        lpc_pconp(pconp_uart2, true);
   17b18:	2101      	movs	r1, #1
   17b1a:	2018      	movs	r0, #24
   17b1c:	f7f8 fefe 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17b20:	2280      	movs	r2, #128	; 0x80
   17b22:	e7cb      	b.n	17abc <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:231
    else if (LPC_UART3_BASE == (unsigned int) mpUARTRegBase)
   17b24:	4a08      	ldr	r2, [pc, #32]	; (17b48 <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   17b26:	4293      	cmp	r3, r2
   17b28:	d1f1      	bne.n	17b0e <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:233
        lpc_pconp(pconp_uart3, true);
   17b2a:	2101      	movs	r1, #1
   17b2c:	2019      	movs	r0, #25
   17b2e:	f7f8 fef5 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17b32:	f44f 7280 	mov.w	r2, #256	; 0x100
   17b36:	e7c1      	b.n	17abc <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263
    return (0 != mRxQueue && 0 != mTxQueue);
   17b38:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:264
}
   17b3a:	bd70      	pop	{r4, r5, r6, pc}
   17b3c:	4000c000 	.word	0x4000c000
   17b40:	e000e100 	.word	0xe000e100
   17b44:	40098000 	.word	0x40098000
   17b48:	4009c000 	.word	0x4009c000

00017b4c <CharDev::flush()>:
_ZN7CharDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   17b4c:	2001      	movs	r0, #1
   17b4e:	4770      	bx	lr

00017b50 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:34
#include "utilities.h"      // system_get_timer_ms();



bool CharDev::put(const char* pString, unsigned int timeout)
{
   17b50:	b570      	push	{r4, r5, r6, lr}
   17b52:	4605      	mov	r5, r0
   17b54:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:35
    if (!pString) {
   17b56:	b909      	cbnz	r1, 17b5c <CharDev::put(char const*, unsigned int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:36
        return false;
   17b58:	2000      	movs	r0, #0
   17b5a:	bd70      	pop	{r4, r5, r6, pc}
   17b5c:	1e4c      	subs	r4, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:39
    }

    while(*pString) {
   17b5e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   17b62:	b139      	cbz	r1, 17b74 <CharDev::put(char const*, unsigned int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:40
        if(!putChar(*pString++, timeout)) {
   17b64:	682b      	ldr	r3, [r5, #0]
   17b66:	4632      	mov	r2, r6
   17b68:	685b      	ldr	r3, [r3, #4]
   17b6a:	4628      	mov	r0, r5
   17b6c:	4798      	blx	r3
   17b6e:	2800      	cmp	r0, #0
   17b70:	d1f5      	bne.n	17b5e <CharDev::put(char const*, unsigned int)+0xe>
   17b72:	e7f1      	b.n	17b58 <CharDev::put(char const*, unsigned int)+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:45
            return false;
        }
    }

    return true;
   17b74:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:46
}
   17b76:	bd70      	pop	{r4, r5, r6, pc}

00017b78 <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:49

void CharDev::putline(const char* pBuff, unsigned int timeout)
{
   17b78:	b538      	push	{r3, r4, r5, lr}
   17b7a:	4604      	mov	r4, r0
   17b7c:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:50
    this->put(pBuff, timeout);
   17b7e:	f7ff ffe7 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   17b82:	462a      	mov	r2, r5
   17b84:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:52
}
   17b86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   17b8a:	4901      	ldr	r1, [pc, #4]	; (17b90 <CharDev::putline(char const*, unsigned int)+0x18>)
   17b8c:	f7ff bfe0 	b.w	17b50 <CharDev::put(char const*, unsigned int)>
   17b90:	00025614 	.word	0x00025614

00017b94 <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55

bool CharDev::gets(char* pBuff, int maxLen, unsigned int timeout)
{
   17b94:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   17b98:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55
{
   17b9a:	4607      	mov	r7, r0
   17b9c:	460d      	mov	r5, r1
   17b9e:	4690      	mov	r8, r2
   17ba0:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   17ba2:	ae02      	add	r6, sp, #8
   17ba4:	f806 4d01 	strb.w	r4, [r6, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:60
    int charCount = 0;
    bool success = false;

    while(getChar(&c, timeout)) {
   17ba8:	683b      	ldr	r3, [r7, #0]
   17baa:	464a      	mov	r2, r9
   17bac:	681b      	ldr	r3, [r3, #0]
   17bae:	4631      	mov	r1, r6
   17bb0:	4638      	mov	r0, r7
   17bb2:	4798      	blx	r3
   17bb4:	b178      	cbz	r0, 17bd6 <CharDev::gets(char*, int, unsigned int)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61
        if ('\r' != c && '\n' != c) {
   17bb6:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17bba:	2a0d      	cmp	r2, #13
   17bbc:	d003      	beq.n	17bc6 <CharDev::gets(char*, int, unsigned int)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61 (discriminator 1)
   17bbe:	2a0a      	cmp	r2, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:62 (discriminator 1)
            *pBuff++ = c;
   17bc0:	bf1c      	itt	ne
   17bc2:	702a      	strbne	r2, [r5, #0]
   17bc4:	3501      	addne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:64
        }
        if(++charCount >= maxLen) {
   17bc6:	3401      	adds	r4, #1
   17bc8:	4544      	cmp	r4, r8
   17bca:	da09      	bge.n	17be0 <CharDev::gets(char*, int, unsigned int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:67
            break;
        }
        if('\n' == c) {
   17bcc:	2a0a      	cmp	r2, #10
   17bce:	d1eb      	bne.n	17ba8 <CharDev::gets(char*, int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:75
        }
    }

    // If we didn't get any characters, don't null terminate the string
    if(charCount > 0) {
        *pBuff = '\0';
   17bd0:	2300      	movs	r3, #0
   17bd2:	702b      	strb	r3, [r5, #0]
   17bd4:	e001      	b.n	17bda <CharDev::gets(char*, int, unsigned int)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:74
    if(charCount > 0) {
   17bd6:	2c00      	cmp	r4, #0
   17bd8:	d1fa      	bne.n	17bd0 <CharDev::gets(char*, int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:79
    }

    return success;
}
   17bda:	b003      	add	sp, #12
   17bdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:58
    bool success = false;
   17be0:	2000      	movs	r0, #0
   17be2:	e7f5      	b.n	17bd0 <CharDev::gets(char*, int, unsigned int)+0x3c>

00017be4 <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:82

int CharDev::printf(const char *format, ...)
{
   17be4:	b40e      	push	{r1, r2, r3}
   17be6:	b533      	push	{r0, r1, r4, r5, lr}
   17be8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:83
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17bea:	f001 fec5 	bl	19978 <xTaskGetSchedulerState>
   17bee:	2802      	cmp	r0, #2
   17bf0:	d106      	bne.n	17c00 <CharDev::printf(char const*, ...)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:84
        xSemaphoreTake(mPrintfSemaphore, portMAX_DELAY);
   17bf2:	2300      	movs	r3, #0
   17bf4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17bf8:	4619      	mov	r1, r3
   17bfa:	68e0      	ldr	r0, [r4, #12]
   17bfc:	f001 f8c8 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:89
    }

        int len = 0;
        va_list args;
        va_start(args, format);
   17c00:	ab06      	add	r3, sp, #24
   17c02:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93

        do {
            va_list args_copy;
            va_copy(args_copy, args);
   17c04:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17c06:	9a05      	ldr	r2, [sp, #20]
   17c08:	8921      	ldrh	r1, [r4, #8]
   17c0a:	6860      	ldr	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93
            va_copy(args_copy, args);
   17c0c:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17c0e:	f009 fc43 	bl	21498 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            va_end(args_copy);

            if (len >= mPrintfMemSize) {
   17c12:	8923      	ldrh	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17c14:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            if (len >= mPrintfMemSize) {
   17c16:	4298      	cmp	r0, r3
   17c18:	db0a      	blt.n	17c30 <CharDev::printf(char const*, ...)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:99
                const int align = 16;
                mPrintfMemSize = (align + ((len/align) * align));
   17c1a:	f020 010f 	bic.w	r1, r0, #15
   17c1e:	3110      	adds	r1, #16
   17c20:	b289      	uxth	r1, r1
   17c22:	8121      	strh	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:112
                        free(mpPrintfMem);
                    }
                    mpPrintfMem = (char*) malloc(mPrintfMemSize);
                }
                else {
                    mpPrintfMem = (char*) realloc(mpPrintfMem, mPrintfMemSize);
   17c24:	6860      	ldr	r0, [r4, #4]
   17c26:	f007 ff2d 	bl	1fa84 <realloc>
   17c2a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:118
                }
            }
            else {
                break;
            }
        } while (mpPrintfMem);
   17c2c:	2800      	cmp	r0, #0
   17c2e:	d1e9      	bne.n	17c04 <CharDev::printf(char const*, ...)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:121

        va_end(args);
        this->put(mpPrintfMem);
   17c30:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17c34:	6861      	ldr	r1, [r4, #4]
   17c36:	4620      	mov	r0, r4
   17c38:	f7ff ff8a 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:123

    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17c3c:	f001 fe9c 	bl	19978 <xTaskGetSchedulerState>
   17c40:	2802      	cmp	r0, #2
   17c42:	d105      	bne.n	17c50 <CharDev::printf(char const*, ...)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:124
        xSemaphoreGive(mPrintfSemaphore);
   17c44:	2300      	movs	r3, #0
   17c46:	68e0      	ldr	r0, [r4, #12]
   17c48:	461a      	mov	r2, r3
   17c4a:	4619      	mov	r1, r3
   17c4c:	f000 ff98 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:128
    }

    return len;
}
   17c50:	4628      	mov	r0, r5
   17c52:	b002      	add	sp, #8
   17c54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   17c58:	b003      	add	sp, #12
   17c5a:	4770      	bx	lr

00017c5c <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   17c5c:	4b06      	ldr	r3, [pc, #24]	; (17c78 <CharDev::CharDev()+0x1c>)
   17c5e:	b510      	push	{r4, lr}
   17c60:	6003      	str	r3, [r0, #0]
   17c62:	2300      	movs	r3, #0
   17c64:	4604      	mov	r4, r0
   17c66:	6043      	str	r3, [r0, #4]
   17c68:	8103      	strh	r3, [r0, #8]
   17c6a:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   17c6c:	2001      	movs	r0, #1
   17c6e:	f001 f809 	bl	18c84 <xQueueCreateMutex>
   17c72:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   17c74:	4620      	mov	r0, r4
   17c76:	bd10      	pop	{r4, pc}
   17c78:	00025abc 	.word	0x00025abc

00017c7c <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   17c7c:	4b04      	ldr	r3, [pc, #16]	; (17c90 <CharDev::~CharDev()+0x14>)
   17c7e:	b510      	push	{r4, lr}
   17c80:	4604      	mov	r4, r0
   17c82:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   17c84:	6840      	ldr	r0, [r0, #4]
   17c86:	b108      	cbz	r0, 17c8c <CharDev::~CharDev()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   17c88:	f006 fc16 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   17c8c:	4620      	mov	r0, r4
   17c8e:	bd10      	pop	{r4, pc}
   17c90:	00025abc 	.word	0x00025abc

00017c94 <RIT_IRQHandler>:
RIT_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   17c94:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   17c96:	4b04      	ldr	r3, [pc, #16]	; (17ca8 <RIT_IRQHandler+0x14>)
   17c98:	681b      	ldr	r3, [r3, #0]
   17c9a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   17c9c:	4a03      	ldr	r2, [pc, #12]	; (17cac <RIT_IRQHandler+0x18>)
   17c9e:	7a13      	ldrb	r3, [r2, #8]
   17ca0:	f043 0301 	orr.w	r3, r3, #1
   17ca4:	7213      	strb	r3, [r2, #8]
   17ca6:	bd08      	pop	{r3, pc}
   17ca8:	2007c5cc 	.word	0x2007c5cc
   17cac:	400b0000 	.word	0x400b0000

00017cb0 <rtc_gettime>:
rtc_gettime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   17cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
   17cb2:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17cb4:	466c      	mov	r4, sp
   17cb6:	4d0f      	ldr	r5, [pc, #60]	; (17cf4 <rtc_gettime+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   17cb8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17cba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17cbe:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17cc2:	ae03      	add	r6, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17cc4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17cc8:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   17ccc:	220c      	movs	r2, #12
   17cce:	4631      	mov	r1, r6
   17cd0:	4620      	mov	r0, r4
   17cd2:	f006 fc19 	bl	1e508 <memcmp>
   17cd6:	b938      	cbnz	r0, 17ce8 <rtc_gettime+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   17cd8:	cc03      	ldmia	r4!, {r0, r1}
   17cda:	6038      	str	r0, [r7, #0]
   17cdc:	6820      	ldr	r0, [r4, #0]
   17cde:	6079      	str	r1, [r7, #4]
   17ce0:	60b8      	str	r0, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   17ce2:	4638      	mov	r0, r7
   17ce4:	b007      	add	sp, #28
   17ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17ce8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17cec:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   17cf0:	e7e8      	b.n	17cc4 <rtc_gettime+0x14>
   17cf2:	bf00      	nop
   17cf4:	40024014 	.word	0x40024014

00017cf8 <rtc_settime>:
rtc_settime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   17cf8:	2200      	movs	r2, #0
   17cfa:	4b18      	ldr	r3, [pc, #96]	; (17d5c <rtc_settime+0x64>)
   17cfc:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   17cfe:	7802      	ldrb	r2, [r0, #0]
   17d00:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17d04:	f883 2020 	strb.w	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   17d08:	7842      	ldrb	r2, [r0, #1]
   17d0a:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17d0e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   17d12:	7882      	ldrb	r2, [r0, #2]
   17d14:	f3c2 0204 	ubfx	r2, r2, #0, #5
   17d18:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   17d1c:	78c2      	ldrb	r2, [r0, #3]
   17d1e:	f3c2 0202 	ubfx	r2, r2, #0, #3
   17d22:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   17d26:	7902      	ldrb	r2, [r0, #4]
   17d28:	f3c2 0204 	ubfx	r2, r2, #0, #5
   17d2c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   17d30:	7942      	ldrb	r2, [r0, #5]
   17d32:	f3c2 0203 	ubfx	r2, r2, #0, #4
   17d36:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   17d3a:	79c1      	ldrb	r1, [r0, #7]
   17d3c:	7982      	ldrb	r2, [r0, #6]
   17d3e:	f001 010f 	and.w	r1, r1, #15
   17d42:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   17d46:	7a41      	ldrb	r1, [r0, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   17d48:	879a      	strh	r2, [r3, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   17d4a:	7a02      	ldrb	r2, [r0, #8]
   17d4c:	f001 010f 	and.w	r1, r1, #15
   17d50:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   17d54:	869a      	strh	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   17d56:	2201      	movs	r2, #1
   17d58:	721a      	strb	r2, [r3, #8]
   17d5a:	4770      	bx	lr
   17d5c:	40024000 	.word	0x40024000

00017d60 <rtc_init>:
rtc_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   17d60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   17d62:	2101      	movs	r1, #1
   17d64:	2009      	movs	r0, #9
   17d66:	f7f8 fdd9 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   17d6a:	2201      	movs	r2, #1
   17d6c:	4b2f      	ldr	r3, [pc, #188]	; (17e2c <rtc_init+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   17d6e:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   17d70:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   17d72:	f7ff ff9d 	bl	17cb0 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   17d76:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   17d7a:	f603 0326 	addw	r3, r3, #2086	; 0x826
   17d7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17d82:	2b0f      	cmp	r3, #15
   17d84:	d81e      	bhi.n	17dc4 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17d86:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17d8a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   17d8e:	2b3b      	cmp	r3, #59	; 0x3b
   17d90:	dc18      	bgt.n	17dc4 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17d92:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17d96:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   17d9a:	2b3b      	cmp	r3, #59	; 0x3b
   17d9c:	dc12      	bgt.n	17dc4 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   17d9e:	f89d 3006 	ldrb.w	r3, [sp, #6]
   17da2:	f003 031f 	and.w	r3, r3, #31
   17da6:	2b17      	cmp	r3, #23
   17da8:	dc0c      	bgt.n	17dc4 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   17daa:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   17dae:	f3c3 030b 	ubfx	r3, r3, #0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17db2:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   17db6:	da05      	bge.n	17dc4 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   17db8:	f89d 3009 	ldrb.w	r3, [sp, #9]
   17dbc:	f003 030f 	and.w	r3, r3, #15
   17dc0:	2b0c      	cmp	r3, #12
   17dc2:	dd2f      	ble.n	17e24 <rtc_init+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   17dc4:	2201      	movs	r2, #1
   17dc6:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   17dca:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   17dcc:	f362 0304 	bfi	r3, r2, #0, #5
   17dd0:	f88d 3008 	strb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   17dd4:	f89d 3009 	ldrb.w	r3, [sp, #9]
   17dd8:	f362 0303 	bfi	r3, r2, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   17ddc:	f240 72da 	movw	r2, #2010	; 0x7da
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   17de0:	f88d 3009 	strb.w	r3, [sp, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   17de4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   17de8:	f362 030b 	bfi	r3, r2, #0, #12
   17dec:	f8ad 300a 	strh.w	r3, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   17df0:	f89d 3007 	ldrb.w	r3, [sp, #7]
   17df4:	f36f 0302 	bfc	r3, #0, #3
   17df8:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   17dfc:	f89d 3006 	ldrb.w	r3, [sp, #6]
   17e00:	f36f 0304 	bfc	r3, #0, #5
   17e04:	f88d 3006 	strb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   17e08:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17e0c:	f36f 0305 	bfc	r3, #0, #6
   17e10:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   17e14:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17e18:	f36f 0305 	bfc	r3, #0, #6
   17e1c:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   17e20:	f7ff ff6a 	bl	17cf8 <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   17e24:	b005      	add	sp, #20
   17e26:	f85d fb04 	ldr.w	pc, [sp], #4
   17e2a:	bf00      	nop
   17e2c:	40024000 	.word	0x40024000

00017e30 <rtc_get_date_time_str>:
rtc_get_date_time_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:94
}

const char* rtc_get_date_time_str(void)
{
   17e30:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:96
    time_t rawtime;
    time (&rawtime);
   17e32:	a801      	add	r0, sp, #4
   17e34:	f009 f8a4 	bl	20f80 <time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:98

    return ctime (&rawtime);
   17e38:	a801      	add	r0, sp, #4
   17e3a:	f005 fdbb 	bl	1d9b4 <ctime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:99
}
   17e3e:	b003      	add	sp, #12
   17e40:	f85d fb04 	ldr.w	pc, [sp], #4

00017e44 <handle_eint_list>:
handle_eint_list():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   17e44:	b570      	push	{r4, r5, r6, lr}
   17e46:	4605      	mov	r5, r0
   17e48:	460e      	mov	r6, r1
   17e4a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   17e4c:	b10c      	cbz	r4, 17e52 <handle_eint_list+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   17e4e:	682b      	ldr	r3, [r5, #0]
   17e50:	b903      	cbnz	r3, 17e54 <handle_eint_list+0x10>
   17e52:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   17e54:	6822      	ldr	r2, [r4, #0]
   17e56:	4213      	tst	r3, r2
   17e58:	d008      	beq.n	17e6c <handle_eint_list+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   17e5a:	6863      	ldr	r3, [r4, #4]
   17e5c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   17e5e:	6822      	ldr	r2, [r4, #0]
   17e60:	682b      	ldr	r3, [r5, #0]
   17e62:	ea23 0302 	bic.w	r3, r3, r2
   17e66:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   17e68:	6823      	ldr	r3, [r4, #0]
   17e6a:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   17e6c:	68a4      	ldr	r4, [r4, #8]
   17e6e:	e7ed      	b.n	17e4c <handle_eint_list+0x8>

00017e70 <eint3_enable.isra.0>:
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   17e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   17e72:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   17e74:	4084      	lsls	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   17e76:	460f      	mov	r7, r1
   17e78:	4616      	mov	r6, r2
   17e7a:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   17e7c:	d010      	beq.n	17ea0 <eint3_enable.isra.0+0x30>
   17e7e:	b179      	cbz	r1, 17ea0 <eint3_enable.isra.0+0x30>
   17e80:	200c      	movs	r0, #12
   17e82:	f006 fb11 	bl	1e4a8 <malloc>
   17e86:	b158      	cbz	r0, 17ea0 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17e88:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   17e8c:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   17e8e:	e880 0090 	stmia.w	r0, {r4, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   17e92:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   17e94:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   17e96:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   17e98:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17e9a:	4b02      	ldr	r3, [pc, #8]	; (17ea4 <eint3_enable.isra.0+0x34>)
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   17e9c:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17e9e:	601a      	str	r2, [r3, #0]
   17ea0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17ea2:	bf00      	nop
   17ea4:	e000e100 	.word	0xe000e100

00017ea8 <EINT3_IRQHandler>:
EINT3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   17ea8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   17eaa:	4c18      	ldr	r4, [pc, #96]	; (17f0c <EINT3_IRQHandler+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17eac:	4918      	ldr	r1, [pc, #96]	; (17f10 <EINT3_IRQHandler+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   17eae:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17eb0:	4668      	mov	r0, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   17eb2:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   17eb4:	68a3      	ldr	r3, [r4, #8]
   17eb6:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   17eb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
   17eba:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   17ebc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   17ebe:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   17ec0:	4b14      	ldr	r3, [pc, #80]	; (17f14 <EINT3_IRQHandler+0x6c>)
   17ec2:	681a      	ldr	r2, [r3, #0]
   17ec4:	f7ff ffbe 	bl	17e44 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   17ec8:	4b13      	ldr	r3, [pc, #76]	; (17f18 <EINT3_IRQHandler+0x70>)
   17eca:	4911      	ldr	r1, [pc, #68]	; (17f10 <EINT3_IRQHandler+0x68>)
   17ecc:	681a      	ldr	r2, [r3, #0]
   17ece:	a801      	add	r0, sp, #4
   17ed0:	f7ff ffb8 	bl	17e44 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   17ed4:	4b11      	ldr	r3, [pc, #68]	; (17f1c <EINT3_IRQHandler+0x74>)
   17ed6:	4912      	ldr	r1, [pc, #72]	; (17f20 <EINT3_IRQHandler+0x78>)
   17ed8:	681a      	ldr	r2, [r3, #0]
   17eda:	a802      	add	r0, sp, #8
   17edc:	f7ff ffb2 	bl	17e44 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   17ee0:	4b10      	ldr	r3, [pc, #64]	; (17f24 <EINT3_IRQHandler+0x7c>)
   17ee2:	490f      	ldr	r1, [pc, #60]	; (17f20 <EINT3_IRQHandler+0x78>)
   17ee4:	681a      	ldr	r2, [r3, #0]
   17ee6:	a803      	add	r0, sp, #12
   17ee8:	f7ff ffac 	bl	17e44 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   17eec:	9b00      	ldr	r3, [sp, #0]
   17eee:	b90b      	cbnz	r3, 17ef4 <EINT3_IRQHandler+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   17ef0:	9b01      	ldr	r3, [sp, #4]
   17ef2:	b113      	cbz	r3, 17efa <EINT3_IRQHandler+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   17ef4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   17ef8:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   17efa:	9b02      	ldr	r3, [sp, #8]
   17efc:	b90b      	cbnz	r3, 17f02 <EINT3_IRQHandler+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   17efe:	9b03      	ldr	r3, [sp, #12]
   17f00:	b113      	cbz	r3, 17f08 <EINT3_IRQHandler+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   17f02:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   17f06:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   17f08:	b004      	add	sp, #16
   17f0a:	bd10      	pop	{r4, pc}
   17f0c:	40028080 	.word	0x40028080
   17f10:	4002808c 	.word	0x4002808c
   17f14:	2007c5d4 	.word	0x2007c5d4
   17f18:	2007c5d0 	.word	0x2007c5d0
   17f1c:	2007c5dc 	.word	0x2007c5dc
   17f20:	400280ac 	.word	0x400280ac
   17f24:	2007c5d8 	.word	0x2007c5d8

00017f28 <eint3_enable_port0>:
eint3_enable_port0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   17f28:	b410      	push	{r4}
   17f2a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   17f2c:	2900      	cmp	r1, #0
   17f2e:	4a06      	ldr	r2, [pc, #24]	; (17f48 <eint3_enable_port0+0x20>)
   17f30:	4906      	ldr	r1, [pc, #24]	; (17f4c <eint3_enable_port0+0x24>)
   17f32:	4b07      	ldr	r3, [pc, #28]	; (17f50 <eint3_enable_port0+0x28>)
   17f34:	bf18      	it	ne
   17f36:	4613      	movne	r3, r2
   17f38:	4a06      	ldr	r2, [pc, #24]	; (17f54 <eint3_enable_port0+0x2c>)
   17f3a:	bf18      	it	ne
   17f3c:	460a      	movne	r2, r1
   17f3e:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   17f40:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   17f42:	f7ff bf95 	b.w	17e70 <eint3_enable.isra.0>
   17f46:	bf00      	nop
   17f48:	40028094 	.word	0x40028094
   17f4c:	2007c5d0 	.word	0x2007c5d0
   17f50:	40028090 	.word	0x40028090
   17f54:	2007c5d4 	.word	0x2007c5d4

00017f58 <adc0_start_conversion>:
adc0_start_conversion():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   17f58:	4a07      	ldr	r2, [pc, #28]	; (17f78 <adc0_start_conversion+0x20>)
   17f5a:	6813      	ldr	r3, [r2, #0]
   17f5c:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   17f60:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   17f64:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   17f66:	2301      	movs	r3, #1
   17f68:	6811      	ldr	r1, [r2, #0]
   17f6a:	fa03 f000 	lsl.w	r0, r3, r0
   17f6e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   17f72:	4308      	orrs	r0, r1
   17f74:	6010      	str	r0, [r2, #0]
   17f76:	4770      	bx	lr
   17f78:	40034000 	.word	0x40034000

00017f7c <ADC_IRQHandler>:
ADC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   17f7c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   17f7e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   17f80:	4a0d      	ldr	r2, [pc, #52]	; (17fb8 <ADC_IRQHandler+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   17f82:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   17f84:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   17f86:	480d      	ldr	r0, [pc, #52]	; (17fbc <ADC_IRQHandler+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   17f88:	f3c2 120b 	ubfx	r2, r2, #4, #12
   17f8c:	f8ad 2002 	strh.w	r2, [sp, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   17f90:	f10d 0102 	add.w	r1, sp, #2
   17f94:	aa01      	add	r2, sp, #4
   17f96:	6800      	ldr	r0, [r0, #0]
   17f98:	f000 fe86 	bl	18ca8 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   17f9c:	9b01      	ldr	r3, [sp, #4]
   17f9e:	b13b      	cbz	r3, 17fb0 <ADC_IRQHandler+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   17fa0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17fa4:	4b06      	ldr	r3, [pc, #24]	; (17fc0 <ADC_IRQHandler+0x44>)
   17fa6:	601a      	str	r2, [r3, #0]
   17fa8:	f3bf 8f4f 	dsb	sy
   17fac:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   17fb0:	b003      	add	sp, #12
   17fb2:	f85d fb04 	ldr.w	pc, [sp], #4
   17fb6:	bf00      	nop
   17fb8:	40034000 	.word	0x40034000
   17fbc:	2007c5e4 	.word	0x2007c5e4
   17fc0:	e000ed04 	.word	0xe000ed04

00017fc4 <adc0_init>:
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   17fc4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   17fc6:	f7f8 fbf7 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   17fca:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   17fcc:	08c4      	lsrs	r4, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   17fce:	200c      	movs	r0, #12
   17fd0:	f7f8 fca4 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   17fd4:	2103      	movs	r1, #3
   17fd6:	200c      	movs	r0, #12
   17fd8:	f7f8 fcba 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   17fdc:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   17fe0:	4a10      	ldr	r2, [pc, #64]	; (18024 <adc0_init+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   17fe2:	4911      	ldr	r1, [pc, #68]	; (18028 <adc0_init+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   17fe4:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   17fe6:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   17fe8:	fbb4 f0f3 	udiv	r0, r4, r3
   17fec:	4288      	cmp	r0, r1
   17fee:	d814      	bhi.n	1801a <adc0_init+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   17ff0:	6811      	ldr	r1, [r2, #0]
   17ff2:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   17ff6:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   17ff8:	2001      	movs	r0, #1
   17ffa:	f000 fe43 	bl	18c84 <xQueueCreateMutex>
   17ffe:	4b0b      	ldr	r3, [pc, #44]	; (1802c <adc0_init+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   18000:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   18002:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   18004:	2102      	movs	r1, #2
   18006:	2001      	movs	r0, #1
   18008:	f000 fd98 	bl	18b3c <xQueueGenericCreate>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1800c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   18010:	4b07      	ldr	r3, [pc, #28]	; (18030 <adc0_init+0x6c>)
   18012:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   18014:	4b07      	ldr	r3, [pc, #28]	; (18034 <adc0_init+0x70>)
   18016:	601a      	str	r2, [r3, #0]
   18018:	bd10      	pop	{r4, pc}
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   1801a:	3302      	adds	r3, #2
   1801c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   18020:	d1e2      	bne.n	17fe8 <adc0_init+0x24>
   18022:	e7e9      	b.n	17ff8 <adc0_init+0x34>
   18024:	40034000 	.word	0x40034000
   18028:	00c65d3f 	.word	0x00c65d3f
   1802c:	2007c5e0 	.word	0x2007c5e0
   18030:	2007c5e4 	.word	0x2007c5e4
   18034:	e000e100 	.word	0xe000e100

00018038 <adc0_get_reading>:
adc0_get_reading():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   18038:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   1803a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   1803c:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   1803e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   18040:	f8ad 4006 	strh.w	r4, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   18044:	d81d      	bhi.n	18082 <adc0_get_reading+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   18046:	f001 fc97 	bl	19978 <xTaskGetSchedulerState>
   1804a:	2802      	cmp	r0, #2
   1804c:	4e15      	ldr	r6, [pc, #84]	; (180a4 <adc0_get_reading+0x6c>)
   1804e:	d11c      	bne.n	1808a <adc0_get_reading+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   18050:	4f15      	ldr	r7, [pc, #84]	; (180a8 <adc0_get_reading+0x70>)
   18052:	4623      	mov	r3, r4
   18054:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18058:	4621      	mov	r1, r4
   1805a:	6838      	ldr	r0, [r7, #0]
   1805c:	f000 fe98 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   18060:	4628      	mov	r0, r5
   18062:	f7ff ff79 	bl	17f58 <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   18066:	4623      	mov	r3, r4
   18068:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1806c:	f10d 0106 	add.w	r1, sp, #6
   18070:	6830      	ldr	r0, [r6, #0]
   18072:	f000 fe8d 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   18076:	4623      	mov	r3, r4
   18078:	4622      	mov	r2, r4
   1807a:	4621      	mov	r1, r4
   1807c:	6838      	ldr	r0, [r7, #0]
   1807e:	f000 fd7f 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   18082:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   18086:	b003      	add	sp, #12
   18088:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   1808a:	4628      	mov	r0, r5
   1808c:	f7ff ff64 	bl	17f58 <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   18090:	2300      	movs	r3, #0
   18092:	f10d 0106 	add.w	r1, sp, #6
   18096:	461a      	mov	r2, r3
   18098:	6830      	ldr	r0, [r6, #0]
   1809a:	f000 fe79 	bl	18d90 <xQueueGenericReceive>
   1809e:	2800      	cmp	r0, #0
   180a0:	d0f6      	beq.n	18090 <adc0_get_reading+0x58>
   180a2:	e7ee      	b.n	18082 <adc0_get_reading+0x4a>
   180a4:	2007c5e4 	.word	0x2007c5e4
   180a8:	2007c5e0 	.word	0x2007c5e0

000180ac <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   180ac:	b510      	push	{r4, lr}
   180ae:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   180b0:	4b02      	ldr	r3, [pc, #8]	; (180bc <Uart3::~Uart3()+0x10>)
   180b2:	6003      	str	r3, [r0, #0]
   180b4:	f7ff fde2 	bl	17c7c <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   180b8:	4620      	mov	r0, r4
   180ba:	bd10      	pop	{r4, pc}
   180bc:	00025a8c 	.word	0x00025a8c

000180c0 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   180c0:	b510      	push	{r4, lr}
   180c2:	4604      	mov	r4, r0
   180c4:	f7ff fff2 	bl	180ac <Uart3::~Uart3()>
   180c8:	4620      	mov	r0, r4
   180ca:	212c      	movs	r1, #44	; 0x2c
   180cc:	f004 faf9 	bl	1c6c2 <operator delete(void*, unsigned int)>
   180d0:	4620      	mov	r0, r4
   180d2:	bd10      	pop	{r4, pc}

000180d4 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   180d4:	b510      	push	{r4, lr}
   180d6:	4604      	mov	r4, r0
   180d8:	4903      	ldr	r1, [pc, #12]	; (180e8 <Uart3::Uart3()+0x14>)
   180da:	f7ff fccd 	bl	17a78 <UartDev::UartDev(unsigned int*)>
   180de:	4b03      	ldr	r3, [pc, #12]	; (180ec <Uart3::Uart3()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   180e0:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   180e2:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   180e4:	bd10      	pop	{r4, pc}
   180e6:	bf00      	nop
   180e8:	4009c000 	.word	0x4009c000
   180ec:	00025b24 	.word	0x00025b24

000180f0 <UART3_IRQHandler>:
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   180f0:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   180f2:	4c07      	ldr	r4, [pc, #28]	; (18110 <UART3_IRQHandler+0x20>)
   180f4:	6823      	ldr	r3, [r4, #0]
   180f6:	b933      	cbnz	r3, 18106 <UART3_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   180f8:	202c      	movs	r0, #44	; 0x2c
   180fa:	f7fe feb9 	bl	16e70 <operator new(unsigned int)>
   180fe:	4605      	mov	r5, r0
   18100:	f7ff ffe8 	bl	180d4 <Uart3::Uart3()>
   18104:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   18106:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   18108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   1810c:	f7ff bc54 	b.w	179b8 <UartDev::handleInterrupt()>
   18110:	2007c5e8 	.word	0x2007c5e8

00018114 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   18114:	b510      	push	{r4, lr}
   18116:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   18118:	4b02      	ldr	r3, [pc, #8]	; (18124 <Uart2::~Uart2()+0x10>)
   1811a:	6003      	str	r3, [r0, #0]
   1811c:	f7ff fdae 	bl	17c7c <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   18120:	4620      	mov	r0, r4
   18122:	bd10      	pop	{r4, pc}
   18124:	00025a8c 	.word	0x00025a8c

00018128 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   18128:	b510      	push	{r4, lr}
   1812a:	4604      	mov	r4, r0
   1812c:	f7ff fff2 	bl	18114 <Uart2::~Uart2()>
   18130:	4620      	mov	r0, r4
   18132:	212c      	movs	r1, #44	; 0x2c
   18134:	f004 fac5 	bl	1c6c2 <operator delete(void*, unsigned int)>
   18138:	4620      	mov	r0, r4
   1813a:	bd10      	pop	{r4, pc}

0001813c <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   1813c:	b510      	push	{r4, lr}
   1813e:	4604      	mov	r4, r0
   18140:	4903      	ldr	r1, [pc, #12]	; (18150 <Uart2::Uart2()+0x14>)
   18142:	f7ff fc99 	bl	17a78 <UartDev::UartDev(unsigned int*)>
   18146:	4b03      	ldr	r3, [pc, #12]	; (18154 <Uart2::Uart2()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   18148:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   1814a:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   1814c:	bd10      	pop	{r4, pc}
   1814e:	bf00      	nop
   18150:	40098000 	.word	0x40098000
   18154:	00025b8c 	.word	0x00025b8c

00018158 <UART2_IRQHandler>:
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   18158:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1815a:	4c07      	ldr	r4, [pc, #28]	; (18178 <UART2_IRQHandler+0x20>)
   1815c:	6823      	ldr	r3, [r4, #0]
   1815e:	b933      	cbnz	r3, 1816e <UART2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   18160:	202c      	movs	r0, #44	; 0x2c
   18162:	f7fe fe85 	bl	16e70 <operator new(unsigned int)>
   18166:	4605      	mov	r5, r0
   18168:	f7ff ffe8 	bl	1813c <Uart2::Uart2()>
   1816c:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   1816e:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   18170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   18174:	f7ff bc20 	b.w	179b8 <UartDev::handleInterrupt()>
   18178:	2007c5ec 	.word	0x2007c5ec

0001817c <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
    ok = true;
    return ok;
}

bool NordicStream::flush(void)
{
   1817c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    bool ok = false;
    mesh_packet_t ackPkt;

    /* If destination address is not set, use the last source as destination */
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   1817e:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
{
   18182:	b08a      	sub	sp, #40	; 0x28
   18184:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   18186:	b905      	cbnz	r5, 1818a <NordicStream::flush()+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86 (discriminator 1)
   18188:	7c45      	ldrb	r5, [r0, #17]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   1818a:	4628      	mov	r0, r5
   1818c:	f7f9 fc98 	bl	11ac0 <mesh_get_max_timeout_before_packet_fails>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)

    void *data = &(mTxBuffer.pkt.data[0]);
    uint8_t len = mTxBuffer.dataPtr;
    mTxBuffer.dataPtr = 0;
   18190:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:90 (discriminator 4)
    uint8_t len = mTxBuffer.dataPtr;
   18192:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)
    mTxBuffer.dataPtr = 0;
   18196:	f884 2052 	strb.w	r2, [r4, #82]	; 0x52
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
    return mesh_is_ack_required(pkt);
}

/// Just a wrapper around mesh_send() to put all wireless related API at this file.
static inline bool wireless_send(uint8_t dst_addr, mesh_protocol_t protocol, const void *data, uint8_t len, uint8_t max_hops) {
    return mesh_send(dst_addr, protocol, data, len, max_hops);
   1819a:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   1819e:	4606      	mov	r6, r0
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
   181a0:	9200      	str	r2, [sp, #0]
   181a2:	2101      	movs	r1, #1
   181a4:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   181a8:	4628      	mov	r0, r5
   181aa:	f7f9 fab7 	bl	1171c <mesh_send>
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:94 (discriminator 4)

    /* Send the packet and wait for the ACK */
    if ((ok = wireless_send(dst, mesh_pkt_ack, data, len, mHops)))
   181ae:	4604      	mov	r4, r0
   181b0:	b170      	cbz	r0, 181d0 <NordicStream::flush()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:96
    {
        if ((ok = wireless_get_ack_pkt(&ackPkt, ackTimeoutMs)))
   181b2:	4631      	mov	r1, r6
   181b4:	a802      	add	r0, sp, #8
   181b6:	f7f8 ff59 	bl	1106c <wireless_get_ack_pkt>
   181ba:	b148      	cbz	r0, 181d0 <NordicStream::flush()+0x54>
mesh_is_ack_ok():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:263
    return (mesh_pkt_ack_rsp == pRxPkt->info.pkt_type && pRxPkt->nwk.src == sentDstAddr);
   181bc:	f89d 300c 	ldrb.w	r3, [sp, #12]
   181c0:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   181c4:	2bc0      	cmp	r3, #192	; 0xc0
   181c6:	d103      	bne.n	181d0 <NordicStream::flush()+0x54>
   181c8:	f89d 3008 	ldrb.w	r3, [sp, #8]
   181cc:	42ab      	cmp	r3, r5
   181ce:	d000      	beq.n	181d2 <NordicStream::flush()+0x56>
   181d0:	2400      	movs	r4, #0
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:103
            ok = mesh_is_ack_ok(&ackPkt, dst);
        }
    }

    return ok;
}
   181d2:	4620      	mov	r0, r4
   181d4:	b00a      	add	sp, #40	; 0x28
   181d6:	bd70      	pop	{r4, r5, r6, pc}

000181d8 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/nrf_stream.hpp:44
 * You can use printf(), scanf() etc, and all the data will be sent to the
 * address set by setDestAddr().  If the destination address is not set, then
 * it will be sent to the last source that sent us data on nordic.
 *
 */
class NordicStream : public CharDev, public SingletonTemplate<NordicStream>
   181d8:	b510      	push	{r4, lr}
   181da:	4604      	mov	r4, r0
   181dc:	4b02      	ldr	r3, [pc, #8]	; (181e8 <NordicStream::~NordicStream()+0x10>)
   181de:	6003      	str	r3, [r0, #0]
   181e0:	f7ff fd4c 	bl	17c7c <CharDev::~CharDev()>
   181e4:	4620      	mov	r0, r4
   181e6:	bd10      	pop	{r4, pc}
   181e8:	00025c04 	.word	0x00025c04

000181ec <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   181ec:	b510      	push	{r4, lr}
   181ee:	4604      	mov	r4, r0
   181f0:	f7ff fff2 	bl	181d8 <NordicStream::~NordicStream()>
   181f4:	4620      	mov	r0, r4
   181f6:	2158      	movs	r1, #88	; 0x58
   181f8:	f004 fa63 	bl	1c6c2 <operator delete(void*, unsigned int)>
   181fc:	4620      	mov	r0, r4
   181fe:	bd10      	pop	{r4, pc}

00018200 <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:64
{
   18200:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   18202:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   18206:	1c62      	adds	r2, r4, #1
   18208:	b2d2      	uxtb	r2, r2
   1820a:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   1820c:	2a17      	cmp	r2, #23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   1820e:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   18212:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   18216:	d902      	bls.n	1821e <NordicStream::putChar(char, unsigned int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:72
        ok = flush();
   18218:	6803      	ldr	r3, [r0, #0]
   1821a:	689b      	ldr	r3, [r3, #8]
   1821c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:78
}
   1821e:	2001      	movs	r0, #1
   18220:	bd10      	pop	{r4, pc}

00018222 <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   18222:	b570      	push	{r4, r5, r6, lr}
   18224:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   18226:	7e03      	ldrb	r3, [r0, #24]
   18228:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   1822c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   1822e:	4299      	cmp	r1, r3
   18230:	bfb4      	ite	lt
   18232:	2501      	movlt	r5, #1
   18234:	2500      	movge	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:49
    if (!dataAvailable) {
   18236:	db0b      	blt.n	18250 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:50
        if (wireless_get_rx_pkt(&(mRxBuffer.pkt), timeout)) {
   18238:	4611      	mov	r1, r2
   1823a:	3011      	adds	r0, #17
   1823c:	f7f8 ff0e 	bl	1105c <wireless_get_rx_pkt>
   18240:	b130      	cbz	r0, 18250 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   18242:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   18244:	7e25      	ldrb	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   18246:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   1824a:	1aed      	subs	r5, r5, r3
   1824c:	bf18      	it	ne
   1824e:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:56
    if (dataAvailable) {
   18250:	b13d      	cbz	r5, 18262 <NordicStream::getChar(char*, unsigned int)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:57
        *pInputChar = mRxBuffer.pkt.data[mRxBuffer.dataPtr++];
   18252:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   18256:	1c5a      	adds	r2, r3, #1
   18258:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   1825c:	441c      	add	r4, r3
   1825e:	7e63      	ldrb	r3, [r4, #25]
   18260:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:61
}
   18262:	4628      	mov	r0, r5
   18264:	bd70      	pop	{r4, r5, r6, pc}
   18266:	Address 0x0000000000018266 is out of bounds.


00018268 <NordicStream::NordicStream()>:
_ZN12NordicStreamC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   18268:	b570      	push	{r4, r5, r6, lr}
   1826a:	4604      	mov	r4, r0
   1826c:	f7ff fcf6 	bl	17c5c <CharDev::CharDev()>
   18270:	4b0c      	ldr	r3, [pc, #48]	; (182a4 <NordicStream::NordicStream()+0x3c>)
   18272:	2500      	movs	r5, #0
   18274:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   18276:	2621      	movs	r6, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   18278:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   1827a:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   1827c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   18280:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   18282:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   18286:	f104 0011 	add.w	r0, r4, #17
   1828a:	f006 f971 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:34
    memset(&mTxBuffer, 0, sizeof(mTxBuffer));
   1828e:	4632      	mov	r2, r6
   18290:	4629      	mov	r1, r5
   18292:	f104 0032 	add.w	r0, r4, #50	; 0x32
   18296:	f006 f96b 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:41
    mesh_set_retry_count(MESH_RETRY_COUNT_MAX);
   1829a:	2007      	movs	r0, #7
   1829c:	f7f9 f90e 	bl	114bc <mesh_set_retry_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:42
}
   182a0:	4620      	mov	r0, r4
   182a2:	bd70      	pop	{r4, r5, r6, pc}
   182a4:	00025c04 	.word	0x00025c04

000182a8 <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   182a8:	b510      	push	{r4, lr}
   182aa:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   182ac:	4b02      	ldr	r3, [pc, #8]	; (182b8 <Uart0::~Uart0()+0x10>)
   182ae:	6003      	str	r3, [r0, #0]
   182b0:	f7ff fce4 	bl	17c7c <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   182b4:	4620      	mov	r0, r4
   182b6:	bd10      	pop	{r4, pc}
   182b8:	00025a8c 	.word	0x00025a8c

000182bc <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   182bc:	b510      	push	{r4, lr}
   182be:	4604      	mov	r4, r0
   182c0:	f7ff fff2 	bl	182a8 <Uart0::~Uart0()>
   182c4:	4620      	mov	r0, r4
   182c6:	212c      	movs	r1, #44	; 0x2c
   182c8:	f004 f9fb 	bl	1c6c2 <operator delete(void*, unsigned int)>
   182cc:	4620      	mov	r0, r4
   182ce:	bd10      	pop	{r4, pc}

000182d0 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
        Uart0::getInstance().handleInterrupt();
    }
}

bool Uart0::init(unsigned int baudRate, int rxQSize, int txQSize)
{
   182d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   182d2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    // Configure PINSEL for UART0
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   182d4:	490d      	ldr	r1, [pc, #52]	; (1830c <Uart0::init(unsigned int, int, int)+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   182d6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   182d8:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   182da:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   182dc:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   182e0:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   182e2:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   182e4:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   182e6:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   182ea:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:46

    // Set UART0 Peripheral Clock divider to 1
    lpc_pclk(pclk_uart0, clkdiv_1);
   182ec:	2101      	movs	r1, #1
   182ee:	2003      	movs	r0, #3
   182f0:	f7f8 fb2e 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:47
    const unsigned int pclk = sys_get_cpu_clock();
   182f4:	f7f8 fa60 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:49

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
   182f8:	9700      	str	r7, [sp, #0]
   182fa:	4601      	mov	r1, r0
   182fc:	4633      	mov	r3, r6
   182fe:	462a      	mov	r2, r5
   18300:	4620      	mov	r0, r4
   18302:	f7ff fbcd 	bl	17aa0 <UartDev::init(unsigned int, unsigned int, int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:50
}
   18306:	b003      	add	sp, #12
   18308:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1830a:	bf00      	nop
   1830c:	4002c000 	.word	0x4002c000

00018310 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   18310:	b510      	push	{r4, lr}
   18312:	4604      	mov	r4, r0
   18314:	4903      	ldr	r1, [pc, #12]	; (18324 <Uart0::Uart0()+0x14>)
   18316:	f7ff fbaf 	bl	17a78 <UartDev::UartDev(unsigned int*)>
   1831a:	4b03      	ldr	r3, [pc, #12]	; (18328 <Uart0::Uart0()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   1831c:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   1831e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   18320:	bd10      	pop	{r4, pc}
   18322:	bf00      	nop
   18324:	4000c000 	.word	0x4000c000
   18328:	00025c6c 	.word	0x00025c6c

0001832c <UART0_IRQHandler>:
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   1832c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1832e:	4c07      	ldr	r4, [pc, #28]	; (1834c <UART0_IRQHandler+0x20>)
   18330:	6823      	ldr	r3, [r4, #0]
   18332:	b933      	cbnz	r3, 18342 <UART0_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   18334:	202c      	movs	r0, #44	; 0x2c
   18336:	f7fe fd9b 	bl	16e70 <operator new(unsigned int)>
   1833a:	4605      	mov	r5, r0
   1833c:	f7ff ffe8 	bl	18310 <Uart0::Uart0()>
   18340:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   18342:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   18344:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   18348:	f7ff bb36 	b.w	179b8 <UartDev::handleInterrupt()>
   1834c:	2007c5f0 	.word	0x2007c5f0

00018350 <ssp1_dma_init>:
ssp1_dma_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   18350:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   18352:	2101      	movs	r1, #1
   18354:	201d      	movs	r0, #29
   18356:	f7f8 fae1 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   1835a:	2201      	movs	r2, #1
   1835c:	4b02      	ldr	r3, [pc, #8]	; (18368 <ssp1_dma_init+0x18>)
   1835e:	631a      	str	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   18360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   18362:	07d2      	lsls	r2, r2, #31
   18364:	d5fc      	bpl.n	18360 <ssp1_dma_init+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   18366:	bd08      	pop	{r3, pc}
   18368:	50004000 	.word	0x50004000

0001836c <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   1836c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   18370:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   18372:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   18376:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   18378:	d24a      	bcs.n	18410 <ssp1_dma_transfer_block+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   1837a:	4b27      	ldr	r3, [pc, #156]	; (18418 <ssp1_dma_transfer_block+0xac>)
   1837c:	691c      	ldr	r4, [r3, #16]
   1837e:	07e5      	lsls	r5, r4, #31
   18380:	d448      	bmi.n	18414 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   18382:	4c26      	ldr	r4, [pc, #152]	; (1841c <ssp1_dma_transfer_block+0xb0>)
   18384:	6924      	ldr	r4, [r4, #16]
   18386:	07e4      	lsls	r4, r4, #31
   18388:	d444      	bmi.n	18414 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   1838a:	4c25      	ldr	r4, [pc, #148]	; (18420 <ssp1_dma_transfer_block+0xb4>)
   1838c:	68e5      	ldr	r5, [r4, #12]
   1838e:	076d      	lsls	r5, r5, #29
   18390:	d435      	bmi.n	183fe <ssp1_dma_transfer_block+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   18392:	2503      	movs	r5, #3
   18394:	4c23      	ldr	r4, [pc, #140]	; (18424 <ssp1_dma_transfer_block+0xb8>)
   18396:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   18398:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   1839a:	4d23      	ldr	r5, [pc, #140]	; (18428 <ssp1_dma_transfer_block+0xbc>)
   1839c:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   1839e:	2a00      	cmp	r2, #0
   183a0:	d02f      	beq.n	18402 <ssp1_dma_transfer_block+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   183a2:	ac01      	add	r4, sp, #4
   183a4:	605c      	str	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   183a6:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   183aa:	60dc      	str	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   183ac:	2400      	movs	r4, #0
   183ae:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   183b0:	f241 0406 	movw	r4, #4102	; 0x1006
   183b4:	611c      	str	r4, [r3, #16]
   183b6:	4c19      	ldr	r4, [pc, #100]	; (1841c <ssp1_dma_transfer_block+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   183b8:	b33a      	cbz	r2, 1840a <ssp1_dma_transfer_block+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   183ba:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   183bc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   183c0:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   183c2:	60e1      	str	r1, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   183c4:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   183c6:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   183c8:	f44f 6208 	mov.w	r2, #2176	; 0x880
   183cc:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   183ce:	691a      	ldr	r2, [r3, #16]
   183d0:	f042 0201 	orr.w	r2, r2, #1
   183d4:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   183d6:	6922      	ldr	r2, [r4, #16]
   183d8:	f042 0201 	orr.w	r2, r2, #1
   183dc:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   183de:	4a10      	ldr	r2, [pc, #64]	; (18420 <ssp1_dma_transfer_block+0xb4>)
   183e0:	6a51      	ldr	r1, [r2, #36]	; 0x24
   183e2:	f041 0103 	orr.w	r1, r1, #3
   183e6:	6251      	str	r1, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   183e8:	68d8      	ldr	r0, [r3, #12]
   183ea:	f3c0 000b 	ubfx	r0, r0, #0, #12
   183ee:	2800      	cmp	r0, #0
   183f0:	d1fa      	bne.n	183e8 <ssp1_dma_transfer_block+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   183f2:	6a53      	ldr	r3, [r2, #36]	; 0x24
   183f4:	f023 0303 	bic.w	r3, r3, #3
   183f8:	6253      	str	r3, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   183fa:	b003      	add	sp, #12
   183fc:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   183fe:	68a5      	ldr	r5, [r4, #8]
   18400:	e7c4      	b.n	1838c <ssp1_dma_transfer_block+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   18402:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   18404:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   18408:	e7cf      	b.n	183aa <ssp1_dma_transfer_block+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   1840a:	aa01      	add	r2, sp, #4
   1840c:	6022      	str	r2, [r4, #0]
   1840e:	e7d7      	b.n	183c0 <ssp1_dma_transfer_block+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   18410:	2001      	movs	r0, #1
   18412:	e7f2      	b.n	183fa <ssp1_dma_transfer_block+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   18414:	2002      	movs	r0, #2
   18416:	e7f0      	b.n	183fa <ssp1_dma_transfer_block+0x8e>
   18418:	50004120 	.word	0x50004120
   1841c:	50004100 	.word	0x50004100
   18420:	40030000 	.word	0x40030000
   18424:	50004000 	.word	0x50004000
   18428:	40030008 	.word	0x40030008

0001842c <spi1_lock>:
spi1_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   1842c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   1842e:	4c0a      	ldr	r4, [pc, #40]	; (18458 <spi1_lock+0x2c>)
   18430:	6823      	ldr	r3, [r4, #0]
   18432:	b91b      	cbnz	r3, 1843c <spi1_lock+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   18434:	2001      	movs	r0, #1
   18436:	f000 fc25 	bl	18c84 <xQueueCreateMutex>
   1843a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1843c:	f001 fa9c 	bl	19978 <xTaskGetSchedulerState>
   18440:	2802      	cmp	r0, #2
   18442:	d108      	bne.n	18456 <spi1_lock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   18444:	2300      	movs	r3, #0
   18446:	6820      	ldr	r0, [r4, #0]
   18448:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   1844c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   18450:	4619      	mov	r1, r3
   18452:	f000 bc9d 	b.w	18d90 <xQueueGenericReceive>
   18456:	bd10      	pop	{r4, pc}
   18458:	2007c5f4 	.word	0x2007c5f4

0001845c <spi1_unlock>:
spi1_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   1845c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1845e:	f001 fa8b 	bl	19978 <xTaskGetSchedulerState>
   18462:	2802      	cmp	r0, #2
   18464:	d108      	bne.n	18478 <spi1_unlock+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   18466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   1846a:	2300      	movs	r3, #0
   1846c:	4803      	ldr	r0, [pc, #12]	; (1847c <spi1_unlock+0x20>)
   1846e:	461a      	mov	r2, r3
   18470:	4619      	mov	r1, r3
   18472:	6800      	ldr	r0, [r0, #0]
   18474:	f000 bb84 	b.w	18b80 <xQueueGenericSend>
   18478:	bd10      	pop	{r4, pc}
   1847a:	bf00      	nop
   1847c:	2007c5f4 	.word	0x2007c5f4

00018480 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   18480:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   18482:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   18484:	4b05      	ldr	r3, [pc, #20]	; (1849c <lpc_timer_get_struct+0x1c>)
   18486:	f10d 0e10 	add.w	lr, sp, #16
   1848a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1848c:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   18490:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   18494:	f854 0c10 	ldr.w	r0, [r4, #-16]
   18498:	b004      	add	sp, #16
   1849a:	bd10      	pop	{r4, pc}
   1849c:	00025c80 	.word	0x00025c80

000184a0 <lpc_timer_enable>:
lpc_timer_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   184a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   184a2:	460f      	mov	r7, r1
   184a4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   184a6:	f7ff ffeb 	bl	18480 <lpc_timer_get_struct>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   184aa:	2317      	movs	r3, #23
   184ac:	2401      	movs	r4, #1
   184ae:	2216      	movs	r2, #22
   184b0:	2102      	movs	r1, #2
   184b2:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   184b6:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   184ba:	ab02      	add	r3, sp, #8
   184bc:	441e      	add	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   184be:	f88d 2002 	strb.w	r2, [sp, #2]
   184c2:	f88d 1001 	strb.w	r1, [sp, #1]
   184c6:	f88d 4000 	strb.w	r4, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   184ca:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   184cc:	f88d 1005 	strb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   184d0:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   184d4:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   184d6:	f88d 2006 	strb.w	r2, [sp, #6]
   184da:	f88d 4004 	strb.w	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   184de:	f7f8 fa1d 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   184e2:	4621      	mov	r1, r4
   184e4:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   184e8:	f7f8 fa32 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   184ec:	2300      	movs	r3, #0
   184ee:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   184f0:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   184f2:	672b      	str	r3, [r5, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   184f4:	f7f8 f960 	bl	107b8 <sys_get_cpu_clock>
   184f8:	4b03      	ldr	r3, [pc, #12]	; (18508 <lpc_timer_enable+0x68>)
   184fa:	fbb0 f0f3 	udiv	r0, r0, r3
   184fe:	4347      	muls	r7, r0
   18500:	60ef      	str	r7, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   18502:	b003      	add	sp, #12
   18504:	bdf0      	pop	{r4, r5, r6, r7, pc}
   18506:	bf00      	nop
   18508:	000f4240 	.word	0x000f4240

0001850c <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
}



bool I2C2::init(unsigned int speedInKhz)
{
   1850c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   1850e:	4b18      	ldr	r3, [pc, #96]	; (18570 <I2C2::init(unsigned int)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   18510:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   18512:	695c      	ldr	r4, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   18514:	4b17      	ldr	r3, [pc, #92]	; (18574 <I2C2::init(unsigned int)+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   18516:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   18518:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   1851a:	201a      	movs	r0, #26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   1851c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   18520:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   18522:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   18524:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   18528:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   1852c:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   1852e:	6e99      	ldr	r1, [r3, #104]	; 0x68
   18530:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   18534:	6699      	str	r1, [r3, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   18536:	6819      	ldr	r1, [r3, #0]
   18538:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   1853c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   1853e:	6819      	ldr	r1, [r3, #0]
   18540:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   18544:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   18546:	2103      	movs	r1, #3
   18548:	f7f8 fa02 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   1854c:	f7f8 f934 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   18550:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   18554:	d106      	bne.n	18564 <I2C2::init(unsigned int)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   18556:	4632      	mov	r2, r6
   18558:	08c1      	lsrs	r1, r0, #3
   1855a:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   1855c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   18560:	f7ff b888 	b.w	17674 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
        /**
         * Disables I2C operation
         * This can be used to disable all I2C operations in case of severe I2C Bus Failure
         * @warning Once disabled, I2C cannot be enabled again
         */
        void disableOperation() { mDisableOperation = true; }
   18564:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   18566:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
   18568:	f885 3105 	strb.w	r3, [r5, #261]	; 0x105
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   1856c:	bd70      	pop	{r4, r5, r6, pc}
   1856e:	bf00      	nop
   18570:	2009c000 	.word	0x2009c000
   18574:	4002c000 	.word	0x4002c000

00018578 <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   18578:	b510      	push	{r4, lr}
   1857a:	4604      	mov	r4, r0
   1857c:	4902      	ldr	r1, [pc, #8]	; (18588 <I2C2::I2C2()+0x10>)
   1857e:	f7ff f84b 	bl	17618 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   18582:	4620      	mov	r0, r4
   18584:	bd10      	pop	{r4, pc}
   18586:	bf00      	nop
   18588:	400a0000 	.word	0x400a0000

0001858c <I2C2_IRQHandler>:
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   1858c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1858e:	4c08      	ldr	r4, [pc, #32]	; (185b0 <I2C2_IRQHandler+0x24>)
   18590:	6823      	ldr	r3, [r4, #0]
   18592:	b93b      	cbnz	r3, 185a4 <I2C2_IRQHandler+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   18594:	f44f 7094 	mov.w	r0, #296	; 0x128
   18598:	f7fe fc6a 	bl	16e70 <operator new(unsigned int)>
   1859c:	4605      	mov	r5, r0
   1859e:	f7ff ffeb 	bl	18578 <I2C2::I2C2()>
   185a2:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   185a4:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   185a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   185aa:	f7ff b947 	b.w	1783c <I2C_Base::handleInterrupt()>
   185ae:	bf00      	nop
   185b0:	2007c5f8 	.word	0x2007c5f8

000185b4 <CAN_tx_now>:
CAN_tx_now():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   185b4:	6802      	ldr	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   185b6:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   185b8:	69d3      	ldr	r3, [r2, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   185ba:	f013 0304 	ands.w	r3, r3, #4
   185be:	d010      	beq.n	185e2 <CAN_tx_now+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   185c0:	f102 0330 	add.w	r3, r2, #48	; 0x30
   185c4:	f101 0410 	add.w	r4, r1, #16
   185c8:	f851 5b04 	ldr.w	r5, [r1], #4
   185cc:	42a1      	cmp	r1, r4
   185ce:	f843 5b04 	str.w	r5, [r3], #4
   185d2:	d1f9      	bne.n	185c8 <CAN_tx_now+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   185d4:	8a43      	ldrh	r3, [r0, #18]
   185d6:	3301      	adds	r3, #1
   185d8:	8243      	strh	r3, [r0, #18]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   185da:	2321      	movs	r3, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   185dc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   185de:	6053      	str	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   185e0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   185e2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   185e4:	bd30      	pop	{r4, r5, pc}
   185e6:	Address 0x00000000000185e6 is out of bounds.


000185e8 <CAN_handle_isr>:
CAN_handle_isr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   185e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   185ec:	4c26      	ldr	r4, [pc, #152]	; (18688 <CAN_handle_isr+0xa0>)
   185ee:	0145      	lsls	r5, r0, #5
   185f0:	f854 8005 	ldr.w	r8, [r4, r5]
   185f4:	1967      	adds	r7, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   185f6:	f8d8 600c 	ldr.w	r6, [r8, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   185fa:	f8d8 3008 	ldr.w	r3, [r8, #8]
   185fe:	4333      	orrs	r3, r6
   18600:	07d9      	lsls	r1, r3, #31
   18602:	d516      	bpl.n	18632 <CAN_handle_isr+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   18604:	6878      	ldr	r0, [r7, #4]
   18606:	f000 fc9a 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   1860a:	89fb      	ldrh	r3, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   1860c:	f108 0120 	add.w	r1, r8, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   18610:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   18612:	f04f 0300 	mov.w	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   18616:	bf88      	it	hi
   18618:	81f8      	strhhi	r0, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   1861a:	1967      	adds	r7, r4, r5
   1861c:	461a      	mov	r2, r3
   1861e:	6878      	ldr	r0, [r7, #4]
   18620:	f000 fb42 	bl	18ca8 <xQueueGenericSendFromISR>
   18624:	b358      	cbz	r0, 1867e <CAN_handle_isr+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   18626:	8abb      	ldrh	r3, [r7, #20]
   18628:	3301      	adds	r3, #1
   1862a:	82bb      	strh	r3, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   1862c:	2304      	movs	r3, #4
   1862e:	f8c8 3004 	str.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   18632:	f240 6302 	movw	r3, #1538	; 0x602
   18636:	421e      	tst	r6, r3
   18638:	d012      	beq.n	18660 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   1863a:	1967      	adds	r7, r4, r5
   1863c:	68b8      	ldr	r0, [r7, #8]
   1863e:	f000 fc7e 	bl	18f3e <uxQueueMessagesWaitingFromISR>
   18642:	8a3b      	ldrh	r3, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   18644:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   18646:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   18648:	bf88      	it	hi
   1864a:	8238      	strhhi	r0, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   1864c:	1967      	adds	r7, r4, r5
   1864e:	4669      	mov	r1, sp
   18650:	68b8      	ldr	r0, [r7, #8]
   18652:	f000 fc37 	bl	18ec4 <xQueueReceiveFromISR>
   18656:	b118      	cbz	r0, 18660 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   18658:	4669      	mov	r1, sp
   1865a:	4638      	mov	r0, r7
   1865c:	f7ff ffaa 	bl	185b4 <CAN_tx_now>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   18660:	06b2      	lsls	r2, r6, #26
   18662:	d503      	bpl.n	1866c <CAN_handle_isr+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   18664:	1963      	adds	r3, r4, r5
   18666:	699b      	ldr	r3, [r3, #24]
   18668:	4630      	mov	r0, r6
   1866a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   1866c:	0733      	lsls	r3, r6, #28
   1866e:	d503      	bpl.n	18678 <CAN_handle_isr+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   18670:	442c      	add	r4, r5
   18672:	69e3      	ldr	r3, [r4, #28]
   18674:	4630      	mov	r0, r6
   18676:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   18678:	b004      	add	sp, #16
   1867a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   1867e:	89bb      	ldrh	r3, [r7, #12]
   18680:	3301      	adds	r3, #1
   18682:	81bb      	strh	r3, [r7, #12]
   18684:	e7d2      	b.n	1862c <CAN_handle_isr+0x44>
   18686:	bf00      	nop
   18688:	2007c09c 	.word	0x2007c09c

0001868c <CAN_IRQHandler>:
CAN_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   1868c:	4b08      	ldr	r3, [pc, #32]	; (186b0 <CAN_IRQHandler+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   1868e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   18690:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   18694:	04a2      	lsls	r2, r4, #18
   18696:	d502      	bpl.n	1869e <CAN_IRQHandler+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   18698:	2000      	movs	r0, #0
   1869a:	f7ff ffa5 	bl	185e8 <CAN_handle_isr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   1869e:	0463      	lsls	r3, r4, #17
   186a0:	d504      	bpl.n	186ac <CAN_IRQHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   186a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   186a6:	2001      	movs	r0, #1
   186a8:	f7ff bf9e 	b.w	185e8 <CAN_handle_isr>
   186ac:	bd10      	pop	{r4, pc}
   186ae:	bf00      	nop
   186b0:	400fc000 	.word	0x400fc000

000186b4 <prvTaskExitError>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   186b4:	f04f 0310 	mov.w	r3, #16
   186b8:	f383 8811 	msr	BASEPRI, r3
   186bc:	f3bf 8f6f 	isb	sy
   186c0:	f3bf 8f4f 	dsb	sy
   186c4:	e7fe      	b.n	186c4 <prvTaskExitError+0x10>
prvTaskExitError():
   186c6:	Address 0x00000000000186c6 is out of bounds.


000186c8 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:270
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
   186c8:	4806      	ldr	r0, [pc, #24]	; (186e4 <prvPortStartFirstTask+0x1c>)
   186ca:	6800      	ldr	r0, [r0, #0]
   186cc:	6800      	ldr	r0, [r0, #0]
   186ce:	f380 8808 	msr	MSP, r0
   186d2:	b662      	cpsie	i
   186d4:	b661      	cpsie	f
   186d6:	f3bf 8f4f 	dsb	sy
   186da:	f3bf 8f6f 	isb	sy
   186de:	df00      	svc	0
   186e0:	bf00      	nop
   186e2:	0000      	.short	0x0000
   186e4:	e000ed08 	.word	0xe000ed08

000186e8 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   186e8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   186ec:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   186f0:	4b05      	ldr	r3, [pc, #20]	; (18708 <pxPortInitialiseStack+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   186f2:	f021 0101 	bic.w	r1, r1, #1
   186f6:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   186fa:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   186fe:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
}
   18702:	3840      	subs	r0, #64	; 0x40
   18704:	4770      	bx	lr
   18706:	bf00      	nop
   18708:	000186b5 	.word	0x000186b5
   1870c:	ffffffff 	.word	0xffffffff

00018710 <vPortSVCHandler>:
vPortSVCHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
	__asm volatile (
   18710:	4b07      	ldr	r3, [pc, #28]	; (18730 <pxCurrentTCBConst2>)
   18712:	6819      	ldr	r1, [r3, #0]
   18714:	6808      	ldr	r0, [r1, #0]
   18716:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1871a:	f380 8809 	msr	PSP, r0
   1871e:	f3bf 8f6f 	isb	sy
   18722:	f04f 0000 	mov.w	r0, #0
   18726:	f380 8811 	msr	BASEPRI, r0
   1872a:	f04e 0e0d 	orr.w	lr, lr, #13
   1872e:	4770      	bx	lr

00018730 <pxCurrentTCBConst2>:
   18730:	2007c608 	.word	0x2007c608

00018734 <vPortEndScheduler>:
vPortEndScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:364
	return 0;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
   18734:	4770      	bx	lr
   18736:	Address 0x0000000000018736 is out of bounds.


00018738 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   18738:	f04f 0310 	mov.w	r3, #16
   1873c:	f383 8811 	msr	BASEPRI, r3
   18740:	f3bf 8f6f 	isb	sy
   18744:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   18748:	4a02      	ldr	r2, [pc, #8]	; (18754 <vPortEnterCritical+0x1c>)
   1874a:	6813      	ldr	r3, [r2, #0]
   1874c:	3301      	adds	r3, #1
   1874e:	6013      	str	r3, [r2, #0]
   18750:	4770      	bx	lr
   18752:	bf00      	nop
   18754:	2007c5fc 	.word	0x2007c5fc

00018758 <vPortExitCritical>:
vPortExitCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   18758:	4a03      	ldr	r2, [pc, #12]	; (18768 <vPortExitCritical+0x10>)
   1875a:	6813      	ldr	r3, [r2, #0]
   1875c:	3b01      	subs	r3, #1
   1875e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   18760:	b90b      	cbnz	r3, 18766 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   18762:	f383 8811 	msr	BASEPRI, r3
   18766:	4770      	bx	lr
   18768:	2007c5fc 	.word	0x2007c5fc
vPortExitCritical():
   1876c:	ffffffff 	.word	0xffffffff

00018770 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   18770:	f3ef 8009 	mrs	r0, PSP
   18774:	f3bf 8f6f 	isb	sy
   18778:	4b0d      	ldr	r3, [pc, #52]	; (187b0 <pxCurrentTCBConst>)
   1877a:	681a      	ldr	r2, [r3, #0]
   1877c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   18780:	6010      	str	r0, [r2, #0]
   18782:	e92d 4008 	stmdb	sp!, {r3, lr}
   18786:	f04f 0010 	mov.w	r0, #16
   1878a:	f380 8811 	msr	BASEPRI, r0
   1878e:	f000 fef5 	bl	1957c <vTaskSwitchContext>
   18792:	f04f 0000 	mov.w	r0, #0
   18796:	f380 8811 	msr	BASEPRI, r0
   1879a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1879e:	6819      	ldr	r1, [r3, #0]
   187a0:	6808      	ldr	r0, [r1, #0]
   187a2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   187a6:	f380 8809 	msr	PSP, r0
   187aa:	f3bf 8f6f 	isb	sy
   187ae:	4770      	bx	lr

000187b0 <pxCurrentTCBConst>:
   187b0:	2007c608 	.word	0x2007c608

000187b4 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   187b4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   187b6:	f04f 0310 	mov.w	r3, #16
   187ba:	f383 8811 	msr	BASEPRI, r3
   187be:	f3bf 8f6f 	isb	sy
   187c2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   187c6:	f000 fda3 	bl	19310 <xTaskIncrementTick>
   187ca:	b118      	cbz	r0, 187d4 <xPortSysTickHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   187cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   187d0:	4b02      	ldr	r3, [pc, #8]	; (187dc <xPortSysTickHandler+0x28>)
   187d2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   187d4:	2300      	movs	r3, #0
   187d6:	f383 8811 	msr	BASEPRI, r3
   187da:	bd08      	pop	{r3, pc}
   187dc:	e000ed04 	.word	0xe000ed04

000187e0 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:626
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
   187e0:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   187e4:	4b02      	ldr	r3, [pc, #8]	; (187f0 <vPortSetupTimerInterrupt+0x10>)
   187e6:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:627
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
   187e8:	2207      	movs	r2, #7
   187ea:	f843 2c04 	str.w	r2, [r3, #-4]
   187ee:	4770      	bx	lr
   187f0:	e000e014 	.word	0xe000e014

000187f4 <xPortStartScheduler>:
xPortStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:289
{
   187f4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:339
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
   187f6:	4b09      	ldr	r3, [pc, #36]	; (1881c <xPortStartScheduler+0x28>)
   187f8:	681a      	ldr	r2, [r3, #0]
   187fa:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   187fe:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:340
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
   18800:	681a      	ldr	r2, [r3, #0]
   18802:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   18806:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:344
	vPortSetupTimerInterrupt();
   18808:	f7ff ffea 	bl	187e0 <vPortSetupTimerInterrupt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:347
	uxCriticalNesting = 0;
   1880c:	2200      	movs	r2, #0
   1880e:	4b04      	ldr	r3, [pc, #16]	; (18820 <xPortStartScheduler+0x2c>)
   18810:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:350
	prvPortStartFirstTask();
   18812:	f7ff ff59 	bl	186c8 <prvPortStartFirstTask>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:356
	prvTaskExitError();
   18816:	f7ff ff4d 	bl	186b4 <prvTaskExitError>
   1881a:	bf00      	nop
   1881c:	e000ed20 	.word	0xe000ed20
   18820:	2007c5fc 	.word	0x2007c5fc

00018824 <rts_not_full_trace_init>:
rts_not_full_trace_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:36



// Init the run time counter that is not used by the full trace
void rts_not_full_trace_init( void )
{
   18824:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:38
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   18826:	f7f7 fe39 	bl	1049c <sys_get_uptime_us>
   1882a:	4b02      	ldr	r3, [pc, #8]	; (18834 <rts_not_full_trace_init+0x10>)
   1882c:	e9c3 0100 	strd	r0, r1, [r3]
   18830:	bd08      	pop	{r3, pc}
   18832:	bf00      	nop
   18834:	2007c600 	.word	0x2007c600

00018838 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
}

unsigned int rts_not_full_trace_get()
{
   18838:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   1883a:	f7f7 fe2f 	bl	1049c <sys_get_uptime_us>
   1883e:	4b02      	ldr	r3, [pc, #8]	; (18848 <rts_not_full_trace_get+0x10>)
   18840:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   18842:	1ac0      	subs	r0, r0, r3
   18844:	bd08      	pop	{r3, pc}
   18846:	bf00      	nop
   18848:	2007c600 	.word	0x2007c600

0001884c <rts_not_full_trace_reset>:
rts_not_full_trace_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:46
void rts_not_full_trace_reset()
{
   1884c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:47
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   1884e:	f7f7 fe25 	bl	1049c <sys_get_uptime_us>
   18852:	4b02      	ldr	r3, [pc, #8]	; (1885c <rts_not_full_trace_reset+0x10>)
   18854:	e9c3 0100 	strd	r0, r1, [r3]
   18858:	bd08      	pop	{r3, pc}
   1885a:	bf00      	nop
   1885c:	2007c600 	.word	0x2007c600

00018860 <vApplicationIdleHook>:
__WFI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1196
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   18860:	bf30      	wfi
   18862:	4770      	bx	lr

00018864 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   18864:	b510      	push	{r4, lr}
   18866:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   18868:	4809      	ldr	r0, [pc, #36]	; (18890 <vApplicationStackOverflowHook+0x2c>)
   1886a:	f7fd ff6f 	bl	1674c <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   1886e:	4620      	mov	r0, r4
   18870:	f7fd ff6c 	bl	1674c <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   18874:	4807      	ldr	r0, [pc, #28]	; (18894 <vApplicationStackOverflowHook+0x30>)
   18876:	f7fd ff69 	bl	1674c <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   1887a:	4807      	ldr	r0, [pc, #28]	; (18898 <vApplicationStackOverflowHook+0x34>)
   1887c:	f7fe f828 	bl	168d0 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   18880:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   18884:	22aa      	movs	r2, #170	; 0xaa
   18886:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   18888:	2200      	movs	r2, #0
   1888a:	701a      	strb	r2, [r3, #0]
   1888c:	bd10      	pop	{r4, pc}
   1888e:	bf00      	nop
   18890:	00025cc6 	.word	0x00025cc6
   18894:	00025cef 	.word	0x00025cef
   18898:	002dc6c0 	.word	0x002dc6c0

0001889c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   1889c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   1889e:	4806      	ldr	r0, [pc, #24]	; (188b8 <vApplicationMallocFailedHook+0x1c>)
   188a0:	f7fd ff54 	bl	1674c <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   188a4:	4805      	ldr	r0, [pc, #20]	; (188bc <vApplicationMallocFailedHook+0x20>)
   188a6:	f7fe f813 	bl	168d0 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   188aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   188ae:	22aa      	movs	r2, #170	; 0xaa
   188b0:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   188b2:	2200      	movs	r2, #0
   188b4:	701a      	strb	r2, [r3, #0]
   188b6:	bd08      	pop	{r3, pc}
   188b8:	00025c90 	.word	0x00025c90
   188bc:	002dc6c0 	.word	0x002dc6c0

000188c0 <pvPortMalloc>:
pvPortMalloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   188c0:	b510      	push	{r4, lr}
   188c2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   188c4:	f000 fd0a 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   188c8:	4620      	mov	r0, r4
   188ca:	f005 fded 	bl	1e4a8 <malloc>
   188ce:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   188d0:	f000 fda4 	bl	1941c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   188d4:	b90c      	cbnz	r4, 188da <pvPortMalloc+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   188d6:	f7ff ffe1 	bl	1889c <vApplicationMallocFailedHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   188da:	4620      	mov	r0, r4
   188dc:	bd10      	pop	{r4, pc}

000188de <vPortFree>:
vPortFree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   188de:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   188e0:	4604      	mov	r4, r0
   188e2:	b140      	cbz	r0, 188f6 <vPortFree+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   188e4:	f000 fcfa 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   188e8:	4620      	mov	r0, r4
   188ea:	f005 fde5 	bl	1e4b8 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   188ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   188f2:	f000 bd93 	b.w	1941c <xTaskResumeAll>
   188f6:	bd10      	pop	{r4, pc}

000188f8 <vListInitialise>:
vListInitialise():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   188f8:	f100 0308 	add.w	r3, r0, #8
   188fc:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   188fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18902:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18904:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   18906:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   18908:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   1890a:	6003      	str	r3, [r0, #0]
   1890c:	4770      	bx	lr

0001890e <vListInitialiseItem>:
vListInitialiseItem():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   1890e:	2300      	movs	r3, #0
   18910:	6103      	str	r3, [r0, #16]
   18912:	4770      	bx	lr

00018914 <vListInsertEnd>:
vListInsertEnd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   18914:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   18916:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   18918:	604b      	str	r3, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   1891a:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   1891c:	689a      	ldr	r2, [r3, #8]
   1891e:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   18920:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   18922:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   18924:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   18926:	3301      	adds	r3, #1
   18928:	6003      	str	r3, [r0, #0]
   1892a:	4770      	bx	lr

0001892c <vListInsert>:
vListInsert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   1892c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   1892e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   18930:	1c53      	adds	r3, r2, #1
   18932:	d10a      	bne.n	1894a <vListInsert+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   18934:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   18936:	685a      	ldr	r2, [r3, #4]
   18938:	604a      	str	r2, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   1893a:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   1893c:	608b      	str	r3, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   1893e:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   18940:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   18942:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   18944:	3301      	adds	r3, #1
   18946:	6003      	str	r3, [r0, #0]
   18948:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   1894a:	f100 0308 	add.w	r3, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   1894e:	685c      	ldr	r4, [r3, #4]
   18950:	6825      	ldr	r5, [r4, #0]
   18952:	42aa      	cmp	r2, r5
   18954:	d3ef      	bcc.n	18936 <vListInsert+0xa>
   18956:	4623      	mov	r3, r4
   18958:	e7f9      	b.n	1894e <vListInsert+0x22>

0001895a <uxListRemove>:
uxListRemove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   1895a:	6841      	ldr	r1, [r0, #4]
   1895c:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   1895e:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   18960:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   18962:	6882      	ldr	r2, [r0, #8]
   18964:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   18966:	6859      	ldr	r1, [r3, #4]
   18968:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   1896a:	bf08      	it	eq
   1896c:	605a      	streq	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   1896e:	2200      	movs	r2, #0
   18970:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   18972:	6818      	ldr	r0, [r3, #0]
   18974:	3801      	subs	r0, #1
   18976:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   18978:	4770      	bx	lr

0001897a <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   1897a:	b570      	push	{r4, r5, r6, lr}
   1897c:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   1897e:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   18980:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18982:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   18984:	b942      	cbnz	r2, 18998 <prvCopyDataToQueue+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18986:	6805      	ldr	r5, [r0, #0]
   18988:	b99d      	cbnz	r5, 189b2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   1898a:	6840      	ldr	r0, [r0, #4]
   1898c:	f001 f84c 	bl	19a28 <xTaskPriorityDisinherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   18990:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18992:	3601      	adds	r6, #1
   18994:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   18996:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   18998:	b96d      	cbnz	r5, 189b6 <prvCopyDataToQueue+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   1899a:	6880      	ldr	r0, [r0, #8]
   1899c:	f005 fdc3 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   189a0:	68a3      	ldr	r3, [r4, #8]
   189a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
   189a4:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   189a6:	6862      	ldr	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   189a8:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   189aa:	4293      	cmp	r3, r2
   189ac:	d301      	bcc.n	189b2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   189ae:	6823      	ldr	r3, [r4, #0]
   189b0:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   189b2:	2000      	movs	r0, #0
   189b4:	e7ed      	b.n	18992 <prvCopyDataToQueue+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   189b6:	68c0      	ldr	r0, [r0, #12]
   189b8:	f005 fdb5 	bl	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   189bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
   189be:	68e2      	ldr	r2, [r4, #12]
   189c0:	425b      	negs	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   189c2:	6821      	ldr	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   189c4:	441a      	add	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   189c6:	428a      	cmp	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   189c8:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   189ca:	bf3e      	ittt	cc
   189cc:	6862      	ldrcc	r2, [r4, #4]
   189ce:	189b      	addcc	r3, r3, r2
   189d0:	60e3      	strcc	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   189d2:	2d02      	cmp	r5, #2
   189d4:	d1ed      	bne.n	189b2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   189d6:	b10e      	cbz	r6, 189dc <prvCopyDataToQueue+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   189d8:	3e01      	subs	r6, #1
   189da:	e7ea      	b.n	189b2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   189dc:	4630      	mov	r0, r6
   189de:	e7d8      	b.n	18992 <prvCopyDataToQueue+0x18>

000189e0 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   189e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   189e2:	6c85      	ldr	r5, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   189e4:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   189e6:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   189e8:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   189ea:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   189ec:	4299      	cmp	r1, r3
   189ee:	d21a      	bcs.n	18a26 <prvNotifyQueueSetContainer+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   189f0:	a901      	add	r1, sp, #4
   189f2:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   189f4:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   189f8:	f7ff ffbf 	bl	1897a <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   189fc:	b264      	sxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   189fe:	1c63      	adds	r3, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18a00:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   18a02:	d10b      	bne.n	18a1c <prvNotifyQueueSetContainer+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   18a04:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   18a06:	b133      	cbz	r3, 18a16 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   18a08:	f105 0024 	add.w	r0, r5, #36	; 0x24
   18a0c:	f000 fe7a 	bl	19704 <xTaskRemoveFromEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   18a10:	2800      	cmp	r0, #0
   18a12:	bf18      	it	ne
   18a14:	2601      	movne	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   18a16:	4630      	mov	r0, r6
   18a18:	b002      	add	sp, #8
   18a1a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18a1c:	3401      	adds	r4, #1
   18a1e:	b264      	sxtb	r4, r4
   18a20:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   18a24:	e7f7      	b.n	18a16 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   18a26:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   18a28:	e7f5      	b.n	18a16 <prvNotifyQueueSetContainer+0x36>

00018a2a <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   18a2a:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   18a2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   18a2e:	b410      	push	{r4}
   18a30:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   18a32:	b162      	cbz	r2, 18a4e <prvCopyDataFromQueue+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18a34:	68d9      	ldr	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   18a36:	685c      	ldr	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18a38:	4411      	add	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   18a3a:	42a1      	cmp	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18a3c:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   18a3e:	bf28      	it	cs
   18a40:	6819      	ldrcs	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   18a42:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   18a44:	bf28      	it	cs
   18a46:	60d9      	strcs	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   18a48:	68d9      	ldr	r1, [r3, #12]
   18a4a:	f005 bd6c 	b.w	1e526 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   18a4e:	bc10      	pop	{r4}
   18a50:	4770      	bx	lr

00018a52 <prvUnlockQueue>:
prvUnlockQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   18a52:	b570      	push	{r4, r5, r6, lr}
   18a54:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   18a56:	f7ff fe6f 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   18a5a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18a5e:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   18a62:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   18a64:	2d00      	cmp	r5, #0
   18a66:	dc14      	bgt.n	18a92 <prvUnlockQueue+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   18a68:	23ff      	movs	r3, #255	; 0xff
   18a6a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   18a6e:	f7ff fe73 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   18a72:	f7ff fe61 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   18a76:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18a7a:	f104 0610 	add.w	r6, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   18a7e:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   18a80:	2d00      	cmp	r5, #0
   18a82:	dc19      	bgt.n	18ab8 <prvUnlockQueue+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   18a84:	23ff      	movs	r3, #255	; 0xff
   18a86:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   18a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   18a8e:	f7ff be63 	b.w	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   18a92:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18a94:	b14b      	cbz	r3, 18aaa <prvUnlockQueue+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   18a96:	2100      	movs	r1, #0
   18a98:	4620      	mov	r0, r4
   18a9a:	f7ff ffa1 	bl	189e0 <prvNotifyQueueSetContainer>
   18a9e:	b108      	cbz	r0, 18aa4 <prvUnlockQueue+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   18aa0:	f000 fe9a 	bl	197d8 <vTaskMissedYield>
   18aa4:	3d01      	subs	r5, #1
   18aa6:	b26d      	sxtb	r5, r5
   18aa8:	e7dc      	b.n	18a64 <prvUnlockQueue+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18aaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18aac:	2b00      	cmp	r3, #0
   18aae:	d0db      	beq.n	18a68 <prvUnlockQueue+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18ab0:	4630      	mov	r0, r6
   18ab2:	f000 fe27 	bl	19704 <xTaskRemoveFromEventList>
   18ab6:	e7f2      	b.n	18a9e <prvUnlockQueue+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18ab8:	6923      	ldr	r3, [r4, #16]
   18aba:	2b00      	cmp	r3, #0
   18abc:	d0e2      	beq.n	18a84 <prvUnlockQueue+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18abe:	4630      	mov	r0, r6
   18ac0:	f000 fe20 	bl	19704 <xTaskRemoveFromEventList>
   18ac4:	b108      	cbz	r0, 18aca <prvUnlockQueue+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   18ac6:	f000 fe87 	bl	197d8 <vTaskMissedYield>
   18aca:	3d01      	subs	r5, #1
   18acc:	b26d      	sxtb	r5, r5
   18ace:	e7d7      	b.n	18a80 <prvUnlockQueue+0x2e>

00018ad0 <xQueueGenericReset>:
xQueueGenericReset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   18ad0:	b538      	push	{r3, r4, r5, lr}
   18ad2:	4604      	mov	r4, r0
   18ad4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   18ad6:	f7ff fe2f 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   18ada:	6c20      	ldr	r0, [r4, #64]	; 0x40
   18adc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   18ade:	6822      	ldr	r2, [r4, #0]
   18ae0:	4343      	muls	r3, r0
   18ae2:	18d1      	adds	r1, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   18ae4:	1a1b      	subs	r3, r3, r0
   18ae6:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   18ae8:	6061      	str	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   18aea:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   18aec:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   18aee:	23ff      	movs	r3, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   18af0:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   18af2:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   18af4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   18af8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   18afc:	b995      	cbnz	r5, 18b24 <xQueueGenericReset+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18afe:	6923      	ldr	r3, [r4, #16]
   18b00:	b163      	cbz	r3, 18b1c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18b02:	f104 0010 	add.w	r0, r4, #16
   18b06:	f000 fdfd 	bl	19704 <xTaskRemoveFromEventList>
   18b0a:	b138      	cbz	r0, 18b1c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   18b0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18b10:	4b09      	ldr	r3, [pc, #36]	; (18b38 <xQueueGenericReset+0x68>)
   18b12:	601a      	str	r2, [r3, #0]
   18b14:	f3bf 8f4f 	dsb	sy
   18b18:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   18b1c:	f7ff fe1c 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   18b20:	2001      	movs	r0, #1
   18b22:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   18b24:	f104 0010 	add.w	r0, r4, #16
   18b28:	f7ff fee6 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   18b2c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18b30:	f7ff fee2 	bl	188f8 <vListInitialise>
   18b34:	e7f2      	b.n	18b1c <xQueueGenericReset+0x4c>
   18b36:	bf00      	nop
   18b38:	e000ed04 	.word	0xe000ed04

00018b3c <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   18b3c:	b570      	push	{r4, r5, r6, lr}
   18b3e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18b40:	4348      	muls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   18b42:	304c      	adds	r0, #76	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   18b44:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   18b46:	f7ff febb 	bl	188c0 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   18b4a:	4604      	mov	r4, r0
   18b4c:	b148      	cbz	r0, 18b62 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   18b4e:	b955      	cbnz	r5, 18b66 <xQueueGenericCreate+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   18b50:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   18b52:	63e6      	str	r6, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   18b54:	6425      	str	r5, [r4, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   18b56:	2101      	movs	r1, #1
   18b58:	4620      	mov	r0, r4
   18b5a:	f7ff ffb9 	bl	18ad0 <xQueueGenericReset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   18b5e:	2300      	movs	r3, #0
   18b60:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   18b62:	4620      	mov	r0, r4
   18b64:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   18b66:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   18b6a:	6003      	str	r3, [r0, #0]
   18b6c:	e7f1      	b.n	18b52 <xQueueGenericCreate+0x16>

00018b6e <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   18b6e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   18b70:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   18b72:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   18b74:	2100      	movs	r1, #0
   18b76:	f7ff ffe1 	bl	18b3c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:706
		if( xHandle != NULL )
   18b7a:	b100      	cbz	r0, 18b7e <xQueueCreateCountingSemaphore+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:708
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
   18b7c:	6384      	str	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:718
	}
   18b7e:	bd10      	pop	{r4, pc}

00018b80 <xQueueGenericSend>:
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18b80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   18b84:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18b86:	4604      	mov	r4, r0
   18b88:	4689      	mov	r9, r1
   18b8a:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   18b8c:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   18b8e:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 18c80 <xQueueGenericSend+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18b92:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   18b94:	f7ff fdd0 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   18b98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   18b9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   18b9c:	429a      	cmp	r2, r3
   18b9e:	d301      	bcc.n	18ba4 <xQueueGenericSend+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   18ba0:	2e02      	cmp	r6, #2
   18ba2:	d121      	bne.n	18be8 <xQueueGenericSend+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18ba4:	4632      	mov	r2, r6
   18ba6:	4649      	mov	r1, r9
   18ba8:	4620      	mov	r0, r4
   18baa:	f7ff fee6 	bl	1897a <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   18bae:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18bb0:	b193      	cbz	r3, 18bd8 <xQueueGenericSend+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18bb2:	4631      	mov	r1, r6
   18bb4:	4620      	mov	r0, r4
   18bb6:	f7ff ff13 	bl	189e0 <prvNotifyQueueSetContainer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   18bba:	b138      	cbz	r0, 18bcc <xQueueGenericSend+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   18bbc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18bc0:	4b2f      	ldr	r3, [pc, #188]	; (18c80 <xQueueGenericSend+0x100>)
   18bc2:	601a      	str	r2, [r3, #0]
   18bc4:	f3bf 8f4f 	dsb	sy
   18bc8:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   18bcc:	f7ff fdc4 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   18bd0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   18bd2:	b004      	add	sp, #16
   18bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18bd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18bda:	2b00      	cmp	r3, #0
   18bdc:	d0ed      	beq.n	18bba <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18bde:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18be2:	f000 fd8f 	bl	19704 <xTaskRemoveFromEventList>
   18be6:	e7e8      	b.n	18bba <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   18be8:	9d01      	ldr	r5, [sp, #4]
   18bea:	b91d      	cbnz	r5, 18bf4 <xQueueGenericSend+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   18bec:	f7ff fdb4 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   18bf0:	2000      	movs	r0, #0
   18bf2:	e7ee      	b.n	18bd2 <xQueueGenericSend+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   18bf4:	b917      	cbnz	r7, 18bfc <xQueueGenericSend+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   18bf6:	a802      	add	r0, sp, #8
   18bf8:	f000 fdbc 	bl	19774 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   18bfc:	f7ff fdac 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   18c00:	f000 fb6c 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   18c04:	f7ff fd98 	bl	18738 <vPortEnterCritical>
   18c08:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   18c0c:	2bff      	cmp	r3, #255	; 0xff
   18c0e:	bf08      	it	eq
   18c10:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   18c14:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   18c18:	2bff      	cmp	r3, #255	; 0xff
   18c1a:	bf08      	it	eq
   18c1c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   18c20:	f7ff fd9a 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   18c24:	a901      	add	r1, sp, #4
   18c26:	a802      	add	r0, sp, #8
   18c28:	f000 fdb0 	bl	1978c <xTaskCheckForTimeOut>
   18c2c:	bb10      	cbnz	r0, 18c74 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   18c2e:	f7ff fd83 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   18c32:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   18c34:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   18c36:	f7ff fd8f 	bl	18758 <vPortExitCritical>
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   18c3a:	42af      	cmp	r7, r5
   18c3c:	d114      	bne.n	18c68 <xQueueGenericSend+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   18c3e:	9901      	ldr	r1, [sp, #4]
   18c40:	f104 0010 	add.w	r0, r4, #16
   18c44:	f000 fd4e 	bl	196e4 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   18c48:	4620      	mov	r0, r4
   18c4a:	f7ff ff02 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   18c4e:	f000 fbe5 	bl	1941c <xTaskResumeAll>
   18c52:	b938      	cbnz	r0, 18c64 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   18c54:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   18c58:	f8ca 3000 	str.w	r3, [sl]
   18c5c:	f3bf 8f4f 	dsb	sy
   18c60:	f3bf 8f6f 	isb	sy
   18c64:	2701      	movs	r7, #1
   18c66:	e795      	b.n	18b94 <xQueueGenericSend+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   18c68:	4620      	mov	r0, r4
   18c6a:	f7ff fef2 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   18c6e:	f000 fbd5 	bl	1941c <xTaskResumeAll>
   18c72:	e7f7      	b.n	18c64 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   18c74:	4620      	mov	r0, r4
   18c76:	f7ff feec 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   18c7a:	f000 fbcf 	bl	1941c <xTaskResumeAll>
   18c7e:	e7b7      	b.n	18bf0 <xQueueGenericSend+0x70>
   18c80:	e000ed04 	.word	0xe000ed04

00018c84 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   18c84:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   18c86:	4602      	mov	r2, r0
   18c88:	2100      	movs	r1, #0
   18c8a:	2001      	movs	r0, #1
   18c8c:	f7ff ff56 	bl	18b3c <xQueueGenericCreate>
prvInitialiseMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   18c90:	4604      	mov	r4, r0
   18c92:	b138      	cbz	r0, 18ca4 <xQueueCreateMutex+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   18c94:	2300      	movs	r3, #0
   18c96:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   18c98:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   18c9a:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   18c9c:	461a      	mov	r2, r3
   18c9e:	4619      	mov	r1, r3
   18ca0:	f7ff ff6e 	bl	18b80 <xQueueGenericSend>
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   18ca4:	4620      	mov	r0, r4
   18ca6:	bd10      	pop	{r4, pc}

00018ca8 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   18ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18cac:	4604      	mov	r4, r0
   18cae:	4690      	mov	r8, r2
   18cb0:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18cb2:	f3ef 8611 	mrs	r6, BASEPRI
   18cb6:	f04f 0310 	mov.w	r3, #16
   18cba:	f383 8811 	msr	BASEPRI, r3
   18cbe:	f3bf 8f6f 	isb	sy
   18cc2:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   18cc6:	6b82      	ldr	r2, [r0, #56]	; 0x38
   18cc8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   18cca:	429a      	cmp	r2, r3
   18ccc:	d301      	bcc.n	18cd2 <xQueueGenericSendFromISR+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   18cce:	2f02      	cmp	r7, #2
   18cd0:	d128      	bne.n	18d24 <xQueueGenericSendFromISR+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18cd2:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18cd6:	463a      	mov	r2, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18cd8:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18cda:	4620      	mov	r0, r4
   18cdc:	f7ff fe4d 	bl	1897a <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   18ce0:	1c6b      	adds	r3, r5, #1
   18ce2:	d11a      	bne.n	18d1a <xQueueGenericSendFromISR+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   18ce4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18ce6:	b183      	cbz	r3, 18d0a <xQueueGenericSendFromISR+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18ce8:	4639      	mov	r1, r7
   18cea:	4620      	mov	r0, r4
   18cec:	f7ff fe78 	bl	189e0 <prvNotifyQueueSetContainer>
   18cf0:	b908      	cbnz	r0, 18cf6 <xQueueGenericSendFromISR+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   18cf2:	2001      	movs	r0, #1
   18cf4:	e005      	b.n	18d02 <xQueueGenericSendFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   18cf6:	f1b8 0f00 	cmp.w	r8, #0
   18cfa:	d0fa      	beq.n	18cf2 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   18cfc:	2001      	movs	r0, #1
   18cfe:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18d02:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   18d06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18d0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18d0c:	2b00      	cmp	r3, #0
   18d0e:	d0f0      	beq.n	18cf2 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18d10:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18d14:	f000 fcf6 	bl	19704 <xTaskRemoveFromEventList>
   18d18:	e7ea      	b.n	18cf0 <xQueueGenericSendFromISR+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18d1a:	3501      	adds	r5, #1
   18d1c:	b26d      	sxtb	r5, r5
   18d1e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   18d22:	e7e6      	b.n	18cf2 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   18d24:	2000      	movs	r0, #0
   18d26:	e7ec      	b.n	18d02 <xQueueGenericSendFromISR+0x5a>

00018d28 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   18d28:	b538      	push	{r3, r4, r5, lr}
   18d2a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18d2c:	f3ef 8411 	mrs	r4, BASEPRI
   18d30:	f04f 0210 	mov.w	r2, #16
   18d34:	f382 8811 	msr	BASEPRI, r2
   18d38:	f3bf 8f6f 	isb	sy
   18d3c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18d40:	6b81      	ldr	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   18d42:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   18d44:	4291      	cmp	r1, r2
   18d46:	d221      	bcs.n	18d8c <xQueueGiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   18d48:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18d4c:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   18d4e:	b252      	sxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18d50:	6381      	str	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   18d52:	1c51      	adds	r1, r2, #1
   18d54:	d115      	bne.n	18d82 <xQueueGiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   18d56:	6c82      	ldr	r2, [r0, #72]	; 0x48
   18d58:	b162      	cbz	r2, 18d74 <xQueueGiveFromISR+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   18d5a:	2100      	movs	r1, #0
   18d5c:	f7ff fe40 	bl	189e0 <prvNotifyQueueSetContainer>
   18d60:	b908      	cbnz	r0, 18d66 <xQueueGiveFromISR+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   18d62:	2001      	movs	r0, #1
   18d64:	e003      	b.n	18d6e <xQueueGiveFromISR+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   18d66:	2d00      	cmp	r5, #0
   18d68:	d0fb      	beq.n	18d62 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   18d6a:	2001      	movs	r0, #1
   18d6c:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18d6e:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   18d72:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18d74:	6a42      	ldr	r2, [r0, #36]	; 0x24
   18d76:	2a00      	cmp	r2, #0
   18d78:	d0f3      	beq.n	18d62 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18d7a:	3024      	adds	r0, #36	; 0x24
   18d7c:	f000 fcc2 	bl	19704 <xTaskRemoveFromEventList>
   18d80:	e7ee      	b.n	18d60 <xQueueGiveFromISR+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18d82:	3201      	adds	r2, #1
   18d84:	b252      	sxtb	r2, r2
   18d86:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   18d8a:	e7ea      	b.n	18d62 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   18d8c:	2000      	movs	r0, #0
   18d8e:	e7ee      	b.n	18d6e <xQueueGiveFromISR+0x46>

00018d90 <xQueueGenericReceive>:
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   18d90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   18d94:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   18d98:	4604      	mov	r4, r0
   18d9a:	460f      	mov	r7, r1
   18d9c:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   18d9e:	4656      	mov	r6, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   18da0:	f8df 911c 	ldr.w	r9, [pc, #284]	; 18ec0 <xQueueGenericReceive+0x130>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   18da4:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   18da6:	f7ff fcc7 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18daa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   18dac:	b355      	cbz	r5, 18e04 <xQueueGenericReceive+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   18dae:	4639      	mov	r1, r7
   18db0:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   18db2:	68e6      	ldr	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   18db4:	f7ff fe39 	bl	18a2a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   18db8:	f1b8 0f00 	cmp.w	r8, #0
   18dbc:	d11b      	bne.n	18df6 <xQueueGenericReceive+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18dbe:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18dc0:	3d01      	subs	r5, #1
   18dc2:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18dc4:	b913      	cbnz	r3, 18dcc <xQueueGenericReceive+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   18dc6:	f000 fe67 	bl	19a98 <pvTaskIncrementMutexHeldCount>
   18dca:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18dcc:	6923      	ldr	r3, [r4, #16]
   18dce:	b163      	cbz	r3, 18dea <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18dd0:	f104 0010 	add.w	r0, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18dd4:	f000 fc96 	bl	19704 <xTaskRemoveFromEventList>
   18dd8:	b138      	cbz	r0, 18dea <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   18dda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18dde:	4b38      	ldr	r3, [pc, #224]	; (18ec0 <xQueueGenericReceive+0x130>)
   18de0:	601a      	str	r2, [r3, #0]
   18de2:	f3bf 8f4f 	dsb	sy
   18de6:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   18dea:	f7ff fcb5 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   18dee:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   18df0:	b004      	add	sp, #16
   18df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18df6:	6a63      	ldr	r3, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   18df8:	60e6      	str	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18dfa:	2b00      	cmp	r3, #0
   18dfc:	d0f5      	beq.n	18dea <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18dfe:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18e02:	e7e7      	b.n	18dd4 <xQueueGenericReceive+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   18e04:	9d01      	ldr	r5, [sp, #4]
   18e06:	b91d      	cbnz	r5, 18e10 <xQueueGenericReceive+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   18e08:	f7ff fca6 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   18e0c:	4628      	mov	r0, r5
   18e0e:	e7ef      	b.n	18df0 <xQueueGenericReceive+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   18e10:	f1ba 0f00 	cmp.w	sl, #0
   18e14:	d102      	bne.n	18e1c <xQueueGenericReceive+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   18e16:	a802      	add	r0, sp, #8
   18e18:	f000 fcac 	bl	19774 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   18e1c:	f7ff fc9c 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   18e20:	f000 fa5c 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   18e24:	f7ff fc88 	bl	18738 <vPortEnterCritical>
   18e28:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   18e2c:	2bff      	cmp	r3, #255	; 0xff
   18e2e:	bf08      	it	eq
   18e30:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   18e34:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   18e38:	2bff      	cmp	r3, #255	; 0xff
   18e3a:	bf08      	it	eq
   18e3c:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   18e40:	f7ff fc8a 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   18e44:	a901      	add	r1, sp, #4
   18e46:	a802      	add	r0, sp, #8
   18e48:	f000 fca0 	bl	1978c <xTaskCheckForTimeOut>
   18e4c:	bb50      	cbnz	r0, 18ea4 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   18e4e:	f7ff fc73 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   18e52:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   18e54:	f7ff fc80 	bl	18758 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   18e58:	b9f5      	cbnz	r5, 18e98 <xQueueGenericReceive+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18e5a:	6823      	ldr	r3, [r4, #0]
   18e5c:	b933      	cbnz	r3, 18e6c <xQueueGenericReceive+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   18e5e:	f7ff fc6b 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   18e62:	6860      	ldr	r0, [r4, #4]
   18e64:	f000 fd98 	bl	19998 <vTaskPriorityInherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   18e68:	f7ff fc76 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   18e6c:	9901      	ldr	r1, [sp, #4]
   18e6e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18e72:	f000 fc37 	bl	196e4 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   18e76:	4620      	mov	r0, r4
   18e78:	f7ff fdeb 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   18e7c:	f000 face 	bl	1941c <xTaskResumeAll>
   18e80:	b938      	cbnz	r0, 18e92 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   18e82:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   18e86:	f8c9 3000 	str.w	r3, [r9]
   18e8a:	f3bf 8f4f 	dsb	sy
   18e8e:	f3bf 8f6f 	isb	sy
   18e92:	f04f 0a01 	mov.w	sl, #1
   18e96:	e786      	b.n	18da6 <xQueueGenericReceive+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   18e98:	4620      	mov	r0, r4
   18e9a:	f7ff fdda 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   18e9e:	f000 fabd 	bl	1941c <xTaskResumeAll>
   18ea2:	e7f6      	b.n	18e92 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   18ea4:	4620      	mov	r0, r4
   18ea6:	f7ff fdd4 	bl	18a52 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   18eaa:	f000 fab7 	bl	1941c <xTaskResumeAll>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   18eae:	f7ff fc43 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   18eb2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   18eb4:	f7ff fc50 	bl	18758 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   18eb8:	2d00      	cmp	r5, #0
   18eba:	d1ea      	bne.n	18e92 <xQueueGenericReceive+0x102>
   18ebc:	e7a6      	b.n	18e0c <xQueueGenericReceive+0x7c>
   18ebe:	bf00      	nop
   18ec0:	e000ed04 	.word	0xe000ed04

00018ec4 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   18ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18ec8:	4607      	mov	r7, r0
   18eca:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18ecc:	f3ef 8611 	mrs	r6, BASEPRI
   18ed0:	f04f 0310 	mov.w	r3, #16
   18ed4:	f383 8811 	msr	BASEPRI, r3
   18ed8:	f3bf 8f6f 	isb	sy
   18edc:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18ee0:	6b84      	ldr	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   18ee2:	b30c      	cbz	r4, 18f28 <xQueueReceiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   18ee4:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18ee8:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   18eea:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   18eec:	f7ff fd9d 	bl	18a2a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   18ef0:	1c6b      	adds	r3, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   18ef2:	63bc      	str	r4, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   18ef4:	d113      	bne.n	18f1e <xQueueReceiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18ef6:	693b      	ldr	r3, [r7, #16]
   18ef8:	b90b      	cbnz	r3, 18efe <xQueueReceiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   18efa:	2001      	movs	r0, #1
   18efc:	e00b      	b.n	18f16 <xQueueReceiveFromISR+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18efe:	f107 0010 	add.w	r0, r7, #16
   18f02:	f000 fbff 	bl	19704 <xTaskRemoveFromEventList>
   18f06:	2800      	cmp	r0, #0
   18f08:	d0f7      	beq.n	18efa <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   18f0a:	f1b8 0f00 	cmp.w	r8, #0
   18f0e:	d0f4      	beq.n	18efa <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   18f10:	2001      	movs	r0, #1
   18f12:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18f16:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   18f1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   18f1e:	3501      	adds	r5, #1
   18f20:	b26d      	sxtb	r5, r5
   18f22:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   18f26:	e7e8      	b.n	18efa <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   18f28:	4620      	mov	r0, r4
   18f2a:	e7f4      	b.n	18f16 <xQueueReceiveFromISR+0x52>

00018f2c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   18f2c:	b510      	push	{r4, lr}
   18f2e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   18f30:	f7ff fc02 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   18f34:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   18f36:	f7ff fc0f 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   18f3a:	4620      	mov	r0, r4
   18f3c:	bd10      	pop	{r4, pc}

00018f3e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   18f3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   18f40:	4770      	bx	lr

00018f42 <xQueueSelectFromSet>:
xQueueSelectFromSet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   18f42:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2478
	{
   18f44:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   18f46:	ac02      	add	r4, sp, #8
   18f48:	f844 3d04 	str.w	r3, [r4, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2481
		( void ) xQueueGenericReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait, pdFALSE ); /*lint !e961 Casting from one typedef to another is not redundant. */
   18f4c:	460a      	mov	r2, r1
   18f4e:	4621      	mov	r1, r4
   18f50:	f7ff ff1e 	bl	18d90 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2483
	}
   18f54:	9801      	ldr	r0, [sp, #4]
   18f56:	b002      	add	sp, #8
   18f58:	bd10      	pop	{r4, pc}

00018f5a <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:39

    return (taskRunTime * 100) / totalRunTime;
}

static void prvResetRunTimeStatsInList(List_t *pxList)
{
   18f5a:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46

    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
    do
    {
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
        pxNextTCB->ulRunTimeCounter = 0;
   18f5c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:42
    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   18f5e:	6843      	ldr	r3, [r0, #4]
   18f60:	f100 0108 	add.w	r1, r0, #8
   18f64:	685b      	ldr	r3, [r3, #4]
   18f66:	428b      	cmp	r3, r1
   18f68:	6043      	str	r3, [r0, #4]
   18f6a:	bf04      	itt	eq
   18f6c:	68c3      	ldreq	r3, [r0, #12]
   18f6e:	6043      	streq	r3, [r0, #4]
   18f70:	6843      	ldr	r3, [r0, #4]
   18f72:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:45
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   18f74:	685b      	ldr	r3, [r3, #4]
   18f76:	4299      	cmp	r1, r3
   18f78:	bf08      	it	eq
   18f7a:	68c3      	ldreq	r3, [r0, #12]
   18f7c:	68da      	ldr	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   18f7e:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46
        pxNextTCB->ulRunTimeCounter = 0;
   18f80:	64d5      	str	r5, [r2, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   18f82:	d1f7      	bne.n	18f74 <prvResetRunTimeStatsInList+0x1a>
   18f84:	6043      	str	r3, [r0, #4]
   18f86:	bd30      	pop	{r4, r5, pc}

00018f88 <prvIdleTask>:
prvIdleTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
   18f88:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3132
{
   18f8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   18f8e:	4c06      	ldr	r4, [pc, #24]	; (18fa8 <prvIdleTask+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   18f90:	4d06      	ldr	r5, [pc, #24]	; (18fac <prvIdleTask+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   18f92:	6823      	ldr	r3, [r4, #0]
   18f94:	2b01      	cmp	r3, #1
   18f96:	d904      	bls.n	18fa2 <prvIdleTask+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   18f98:	602e      	str	r6, [r5, #0]
   18f9a:	f3bf 8f4f 	dsb	sy
   18f9e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3186
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
   18fa2:	f7ff fc5d 	bl	18860 <vApplicationIdleHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3143
		prvCheckTasksWaitingTermination();
   18fa6:	e7f4      	b.n	18f92 <prvIdleTask+0xa>
   18fa8:	2007c614 	.word	0x2007c614
   18fac:	e000ed04 	.word	0xe000ed04

00018fb0 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   18fb0:	4a06      	ldr	r2, [pc, #24]	; (18fcc <prvResetNextTaskUnblockTime+0x1c>)
   18fb2:	6813      	ldr	r3, [r2, #0]
   18fb4:	6819      	ldr	r1, [r3, #0]
   18fb6:	4b06      	ldr	r3, [pc, #24]	; (18fd0 <prvResetNextTaskUnblockTime+0x20>)
   18fb8:	b919      	cbnz	r1, 18fc2 <prvResetNextTaskUnblockTime+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   18fba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   18fbe:	601a      	str	r2, [r3, #0]
   18fc0:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   18fc2:	6812      	ldr	r2, [r2, #0]
   18fc4:	68d2      	ldr	r2, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   18fc6:	68d2      	ldr	r2, [r2, #12]
   18fc8:	6852      	ldr	r2, [r2, #4]
   18fca:	e7f8      	b.n	18fbe <prvResetNextTaskUnblockTime+0xe>
   18fcc:	2007c60c 	.word	0x2007c60c
   18fd0:	2007c720 	.word	0x2007c720

00018fd4 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   18fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   18fd6:	4b1b      	ldr	r3, [pc, #108]	; (19044 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18fd8:	4e1b      	ldr	r6, [pc, #108]	; (19048 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   18fda:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   18fdc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18fde:	6830      	ldr	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   18fe0:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   18fe2:	3004      	adds	r0, #4
   18fe4:	f7ff fcb9 	bl	1895a <uxListRemove>
   18fe8:	4633      	mov	r3, r6
   18fea:	b940      	cbnz	r0, 18ffe <prvAddCurrentTaskToDelayedList+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   18fec:	2001      	movs	r0, #1
   18fee:	6831      	ldr	r1, [r6, #0]
   18ff0:	4e16      	ldr	r6, [pc, #88]	; (1904c <prvAddCurrentTaskToDelayedList+0x78>)
   18ff2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   18ff4:	6832      	ldr	r2, [r6, #0]
   18ff6:	4088      	lsls	r0, r1
   18ff8:	ea22 0200 	bic.w	r2, r2, r0
   18ffc:	6032      	str	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   18ffe:	1c62      	adds	r2, r4, #1
   19000:	d107      	bne.n	19012 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   19002:	b137      	cbz	r7, 19012 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   19004:	6819      	ldr	r1, [r3, #0]
   19006:	4812      	ldr	r0, [pc, #72]	; (19050 <prvAddCurrentTaskToDelayedList+0x7c>)
   19008:	3104      	adds	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   1900a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1900e:	f7ff bc81 	b.w	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   19012:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   19014:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   19016:	42a5      	cmp	r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   19018:	6054      	str	r4, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   1901a:	d907      	bls.n	1902c <prvAddCurrentTaskToDelayedList+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1901c:	4a0d      	ldr	r2, [pc, #52]	; (19054 <prvAddCurrentTaskToDelayedList+0x80>)
   1901e:	6810      	ldr	r0, [r2, #0]
   19020:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   19022:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   19026:	3104      	adds	r1, #4
   19028:	f7ff bc80 	b.w	1892c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1902c:	4a0a      	ldr	r2, [pc, #40]	; (19058 <prvAddCurrentTaskToDelayedList+0x84>)
   1902e:	6810      	ldr	r0, [r2, #0]
   19030:	6819      	ldr	r1, [r3, #0]
   19032:	3104      	adds	r1, #4
   19034:	f7ff fc7a 	bl	1892c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   19038:	4b08      	ldr	r3, [pc, #32]	; (1905c <prvAddCurrentTaskToDelayedList+0x88>)
   1903a:	681a      	ldr	r2, [r3, #0]
   1903c:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   1903e:	bf38      	it	cc
   19040:	601c      	strcc	r4, [r3, #0]
   19042:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19044:	2007c754 	.word	0x2007c754
   19048:	2007c608 	.word	0x2007c608
   1904c:	2007c6f0 	.word	0x2007c6f0
   19050:	2007c740 	.word	0x2007c740
   19054:	2007c610 	.word	0x2007c610
   19058:	2007c60c 	.word	0x2007c60c
   1905c:	2007c720 	.word	0x2007c720

00019060 <xTaskCreate>:
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   19060:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19064:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   19068:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1906a:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   1906c:	460d      	mov	r5, r1
   1906e:	4699      	mov	r9, r3
   19070:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19072:	f7ff fc25 	bl	188c0 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   19076:	4607      	mov	r7, r0
   19078:	2800      	cmp	r0, #0
   1907a:	f000 809b 	beq.w	191b4 <xTaskCreate+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   1907e:	2058      	movs	r0, #88	; 0x58
   19080:	f7ff fc1e 	bl	188c0 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   19084:	4604      	mov	r4, r0
   19086:	2800      	cmp	r0, #0
   19088:	f000 8091 	beq.w	191ae <xTaskCreate+0x14e>
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   1908c:	4652      	mov	r2, sl
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   1908e:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   19090:	21a5      	movs	r1, #165	; 0xa5
   19092:	4638      	mov	r0, r7
   19094:	f005 fa6c 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   19098:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1909a:	f1aa 0a04 	sub.w	sl, sl, #4
   1909e:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   190a0:	f02a 0a07 	bic.w	sl, sl, #7
   190a4:	1e6b      	subs	r3, r5, #1
   190a6:	f104 0234 	add.w	r2, r4, #52	; 0x34
   190aa:	3507      	adds	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   190ac:	7859      	ldrb	r1, [r3, #1]
   190ae:	f802 1b01 	strb.w	r1, [r2], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   190b2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   190b6:	b109      	cbz	r1, 190bc <xTaskCreate+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   190b8:	42ab      	cmp	r3, r5
   190ba:	d1f7      	bne.n	190ac <xTaskCreate+0x4c>
   190bc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   190be:	f04f 0b00 	mov.w	fp, #0
   190c2:	2d09      	cmp	r5, #9
   190c4:	bf28      	it	cs
   190c6:	2509      	movcs	r5, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   190c8:	1d27      	adds	r7, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   190ca:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   190cc:	6465      	str	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   190ce:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   190d0:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   190d4:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   190d8:	f7ff fc19 	bl	1890e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   190dc:	f1c5 050a 	rsb	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   190e0:	f104 0018 	add.w	r0, r4, #24
   190e4:	f7ff fc13 	bl	1890e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   190e8:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   190ec:	6124      	str	r4, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   190ee:	61a5      	str	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   190f0:	6264      	str	r4, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   190f2:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   190f6:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   190fa:	464a      	mov	r2, r9
   190fc:	4641      	mov	r1, r8
   190fe:	4650      	mov	r0, sl
   19100:	f7ff faf2 	bl	186e8 <pxPortInitialiseStack>
   19104:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   19106:	b106      	cbz	r6, 1910a <xTaskCreate+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   19108:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   1910a:	f7ff fb15 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   1910e:	4b30      	ldr	r3, [pc, #192]	; (191d0 <xTaskCreate+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   19110:	4e30      	ldr	r6, [pc, #192]	; (191d4 <xTaskCreate+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   19112:	681a      	ldr	r2, [r3, #0]
   19114:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 191fc <xTaskCreate+0x19c>
   19118:	3201      	adds	r2, #1
   1911a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   1911c:	6835      	ldr	r5, [r6, #0]
   1911e:	2d00      	cmp	r5, #0
   19120:	d14b      	bne.n	191ba <xTaskCreate+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   19122:	6034      	str	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   19124:	681b      	ldr	r3, [r3, #0]
   19126:	2b01      	cmp	r3, #1
   19128:	d11a      	bne.n	19160 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   1912a:	eb08 0005 	add.w	r0, r8, r5
   1912e:	3514      	adds	r5, #20
   19130:	f7ff fbe2 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   19134:	2dc8      	cmp	r5, #200	; 0xc8
   19136:	d1f8      	bne.n	1912a <xTaskCreate+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   19138:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 19200 <xTaskCreate+0x1a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   1913c:	4d26      	ldr	r5, [pc, #152]	; (191d8 <xTaskCreate+0x178>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   1913e:	4648      	mov	r0, r9
   19140:	f7ff fbda 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   19144:	4628      	mov	r0, r5
   19146:	f7ff fbd7 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   1914a:	4824      	ldr	r0, [pc, #144]	; (191dc <xTaskCreate+0x17c>)
   1914c:	f7ff fbd4 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   19150:	4823      	ldr	r0, [pc, #140]	; (191e0 <xTaskCreate+0x180>)
   19152:	f7ff fbd1 	bl	188f8 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   19156:	4b23      	ldr	r3, [pc, #140]	; (191e4 <xTaskCreate+0x184>)
   19158:	f8c3 9000 	str.w	r9, [r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   1915c:	4b22      	ldr	r3, [pc, #136]	; (191e8 <xTaskCreate+0x188>)
   1915e:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   19160:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   19162:	4a22      	ldr	r2, [pc, #136]	; (191ec <xTaskCreate+0x18c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   19164:	4922      	ldr	r1, [pc, #136]	; (191f0 <xTaskCreate+0x190>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   19166:	6813      	ldr	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   19168:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   1916a:	3301      	adds	r3, #1
   1916c:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   1916e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19170:	fa05 f302 	lsl.w	r3, r5, r2
   19174:	4303      	orrs	r3, r0
   19176:	2014      	movs	r0, #20
   19178:	600b      	str	r3, [r1, #0]
   1917a:	fb00 8002 	mla	r0, r0, r2, r8
   1917e:	4639      	mov	r1, r7
   19180:	f7ff fbc8 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   19184:	f7ff fae8 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   19188:	4b1a      	ldr	r3, [pc, #104]	; (191f4 <xTaskCreate+0x194>)
   1918a:	681b      	ldr	r3, [r3, #0]
   1918c:	b163      	cbz	r3, 191a8 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   1918e:	6833      	ldr	r3, [r6, #0]
   19190:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   19192:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   19194:	429a      	cmp	r2, r3
   19196:	d207      	bcs.n	191a8 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   19198:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1919c:	4b16      	ldr	r3, [pc, #88]	; (191f8 <xTaskCreate+0x198>)
   1919e:	601a      	str	r2, [r3, #0]
   191a0:	f3bf 8f4f 	dsb	sy
   191a4:	f3bf 8f6f 	isb	sy
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   191a8:	4628      	mov	r0, r5
   191aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   191ae:	4638      	mov	r0, r7
   191b0:	f7ff fb95 	bl	188de <vPortFree>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   191b4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   191b8:	e7f6      	b.n	191a8 <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   191ba:	4b0e      	ldr	r3, [pc, #56]	; (191f4 <xTaskCreate+0x194>)
   191bc:	681b      	ldr	r3, [r3, #0]
   191be:	2b00      	cmp	r3, #0
   191c0:	d1ce      	bne.n	19160 <xTaskCreate+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   191c2:	6833      	ldr	r3, [r6, #0]
   191c4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   191c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   191c8:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   191ca:	bf98      	it	ls
   191cc:	6034      	strls	r4, [r6, #0]
   191ce:	e7c7      	b.n	19160 <xTaskCreate+0x100>
   191d0:	2007c6e0 	.word	0x2007c6e0
   191d4:	2007c608 	.word	0x2007c608
   191d8:	2007c708 	.word	0x2007c708
   191dc:	2007c728 	.word	0x2007c728
   191e0:	2007c740 	.word	0x2007c740
   191e4:	2007c60c 	.word	0x2007c60c
   191e8:	2007c610 	.word	0x2007c610
   191ec:	2007c6ec 	.word	0x2007c6ec
   191f0:	2007c6f0 	.word	0x2007c6f0
   191f4:	2007c73c 	.word	0x2007c73c
   191f8:	e000ed04 	.word	0xe000ed04
   191fc:	2007c614 	.word	0x2007c614
   19200:	2007c6f4 	.word	0x2007c6f4

00019204 <eTaskGetState>:
eTaskGetState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   19204:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   19206:	4b10      	ldr	r3, [pc, #64]	; (19248 <eTaskGetState+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   19208:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   1920a:	681b      	ldr	r3, [r3, #0]
   1920c:	4298      	cmp	r0, r3
   1920e:	d015      	beq.n	1923c <eTaskGetState+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1284
			taskENTER_CRITICAL();
   19210:	f7ff fa92 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1286
				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
   19214:	6965      	ldr	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1288
			taskEXIT_CRITICAL();
   19216:	f7ff fa9f 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290
			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
   1921a:	4b0c      	ldr	r3, [pc, #48]	; (1924c <eTaskGetState+0x48>)
   1921c:	681b      	ldr	r3, [r3, #0]
   1921e:	429d      	cmp	r5, r3
   19220:	d00e      	beq.n	19240 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290 (discriminator 1)
   19222:	4b0b      	ldr	r3, [pc, #44]	; (19250 <eTaskGetState+0x4c>)
   19224:	681b      	ldr	r3, [r3, #0]
   19226:	429d      	cmp	r5, r3
   19228:	d00a      	beq.n	19240 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1298
				else if( pxStateList == &xSuspendedTaskList )
   1922a:	4b0a      	ldr	r3, [pc, #40]	; (19254 <eTaskGetState+0x50>)
   1922c:	429d      	cmp	r5, r3
   1922e:	d109      	bne.n	19244 <eTaskGetState+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1303
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
   19230:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   19232:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1305
						eReturn = eSuspended;
   19234:	bf14      	ite	ne
   19236:	2002      	movne	r0, #2
   19238:	2003      	moveq	r0, #3
   1923a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1280
			eReturn = eRunning;
   1923c:	2000      	movs	r0, #0
   1923e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1309
						eReturn = eBlocked;
   19240:	2002      	movs	r0, #2
   19242:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1328
				eReturn = eReady;
   19244:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1333
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
   19246:	bd38      	pop	{r3, r4, r5, pc}
   19248:	2007c608 	.word	0x2007c608
   1924c:	2007c60c 	.word	0x2007c60c
   19250:	2007c610 	.word	0x2007c610
   19254:	2007c740 	.word	0x2007c740

00019258 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1827
{
   19258:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1860
		xReturn = xTaskCreate(	prvIdleTask,
   1925a:	2400      	movs	r4, #0
   1925c:	4b11      	ldr	r3, [pc, #68]	; (192a4 <vTaskStartScheduler+0x4c>)
   1925e:	9400      	str	r4, [sp, #0]
   19260:	9301      	str	r3, [sp, #4]
   19262:	2280      	movs	r2, #128	; 0x80
   19264:	4623      	mov	r3, r4
   19266:	4910      	ldr	r1, [pc, #64]	; (192a8 <vTaskStartScheduler+0x50>)
   19268:	4810      	ldr	r0, [pc, #64]	; (192ac <vTaskStartScheduler+0x54>)
   1926a:	f7ff fef9 	bl	19060 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1881
	if( xReturn == pdPASS )
   1926e:	2801      	cmp	r0, #1
   19270:	d116      	bne.n	192a0 <vTaskStartScheduler+0x48>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   19272:	f04f 0310 	mov.w	r3, #16
   19276:	f383 8811 	msr	BASEPRI, r3
   1927a:	f3bf 8f6f 	isb	sy
   1927e:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1898
		xNextTaskUnblockTime = portMAX_DELAY;
   19282:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19286:	4b0a      	ldr	r3, [pc, #40]	; (192b0 <vTaskStartScheduler+0x58>)
   19288:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1899
		xSchedulerRunning = pdTRUE;
   1928a:	4b0a      	ldr	r3, [pc, #40]	; (192b4 <vTaskStartScheduler+0x5c>)
   1928c:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1900
		xTickCount = ( TickType_t ) 0U;
   1928e:	4b0a      	ldr	r3, [pc, #40]	; (192b8 <vTaskStartScheduler+0x60>)
   19290:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1905
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
   19292:	f7ff fac7 	bl	18824 <rts_not_full_trace_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   19296:	b002      	add	sp, #8
   19298:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1909
		if( xPortStartScheduler() != pdFALSE )
   1929c:	f7ff baaa 	b.w	187f4 <xPortStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   192a0:	b002      	add	sp, #8
   192a2:	bd10      	pop	{r4, pc}
   192a4:	2007c71c 	.word	0x2007c71c
   192a8:	00025d1b 	.word	0x00025d1b
   192ac:	00018f89 	.word	0x00018f89
   192b0:	2007c720 	.word	0x2007c720
   192b4:	2007c73c 	.word	0x2007c73c
   192b8:	2007c754 	.word	0x2007c754

000192bc <vTaskEndScheduler>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   192bc:	f04f 0310 	mov.w	r3, #16
   192c0:	f383 8811 	msr	BASEPRI, r3
   192c4:	f3bf 8f6f 	isb	sy
   192c8:	f3bf 8f4f 	dsb	sy
vTaskEndScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1939
	xSchedulerRunning = pdFALSE;
   192cc:	2200      	movs	r2, #0
   192ce:	4b02      	ldr	r3, [pc, #8]	; (192d8 <vTaskEndScheduler+0x1c>)
   192d0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1940
	vPortEndScheduler();
   192d2:	f7ff ba2f 	b.w	18734 <vPortEndScheduler>
   192d6:	bf00      	nop
   192d8:	2007c73c 	.word	0x2007c73c

000192dc <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   192dc:	4a02      	ldr	r2, [pc, #8]	; (192e8 <vTaskSuspendAll+0xc>)
   192de:	6813      	ldr	r3, [r2, #0]
   192e0:	3301      	adds	r3, #1
   192e2:	6013      	str	r3, [r2, #0]
   192e4:	4770      	bx	lr
   192e6:	bf00      	nop
   192e8:	2007c6e8 	.word	0x2007c6e8

000192ec <xTaskGetTickCount>:
xTaskGetTickCount():
   192ec:	4b01      	ldr	r3, [pc, #4]	; (192f4 <xTaskGetTickCount+0x8>)
   192ee:	6818      	ldr	r0, [r3, #0]
   192f0:	4770      	bx	lr
   192f2:	bf00      	nop
   192f4:	2007c754 	.word	0x2007c754

000192f8 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   192f8:	4b01      	ldr	r3, [pc, #4]	; (19300 <xTaskGetTickCountFromISR+0x8>)
   192fa:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   192fc:	4770      	bx	lr
   192fe:	bf00      	nop
   19300:	2007c754 	.word	0x2007c754

00019304 <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2177
	return uxCurrentNumberOfTasks;
   19304:	4b01      	ldr	r3, [pc, #4]	; (1930c <uxTaskGetNumberOfTasks+0x8>)
   19306:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2178
}
   19308:	4770      	bx	lr
   1930a:	bf00      	nop
   1930c:	2007c6e0 	.word	0x2007c6e0

00019310 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   19310:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19314:	4b36      	ldr	r3, [pc, #216]	; (193f0 <xTaskIncrementTick+0xe0>)
   19316:	681b      	ldr	r3, [r3, #0]
   19318:	2b00      	cmp	r3, #0
   1931a:	d147      	bne.n	193ac <xTaskIncrementTick+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   1931c:	4b35      	ldr	r3, [pc, #212]	; (193f4 <xTaskIncrementTick+0xe4>)
   1931e:	681c      	ldr	r4, [r3, #0]
   19320:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   19322:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   19324:	b95c      	cbnz	r4, 1933e <xTaskIncrementTick+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   19326:	4a34      	ldr	r2, [pc, #208]	; (193f8 <xTaskIncrementTick+0xe8>)
   19328:	4b34      	ldr	r3, [pc, #208]	; (193fc <xTaskIncrementTick+0xec>)
   1932a:	6811      	ldr	r1, [r2, #0]
   1932c:	6818      	ldr	r0, [r3, #0]
   1932e:	6010      	str	r0, [r2, #0]
   19330:	4a33      	ldr	r2, [pc, #204]	; (19400 <xTaskIncrementTick+0xf0>)
   19332:	6019      	str	r1, [r3, #0]
   19334:	6813      	ldr	r3, [r2, #0]
   19336:	3301      	adds	r3, #1
   19338:	6013      	str	r3, [r2, #0]
   1933a:	f7ff fe39 	bl	18fb0 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   1933e:	4d31      	ldr	r5, [pc, #196]	; (19404 <xTaskIncrementTick+0xf4>)
   19340:	f04f 0b00 	mov.w	fp, #0
   19344:	682b      	ldr	r3, [r5, #0]
   19346:	4f30      	ldr	r7, [pc, #192]	; (19408 <xTaskIncrementTick+0xf8>)
   19348:	429c      	cmp	r4, r3
   1934a:	d33e      	bcc.n	193ca <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   1934c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 193f8 <xTaskIncrementTick+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   19350:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 19418 <xTaskIncrementTick+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   19354:	f8d8 2000 	ldr.w	r2, [r8]
   19358:	6812      	ldr	r2, [r2, #0]
   1935a:	bb72      	cbnz	r2, 193ba <xTaskIncrementTick+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1935c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19360:	602a      	str	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   19362:	e032      	b.n	193ca <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   19364:	f106 0a04 	add.w	sl, r6, #4
   19368:	4650      	mov	r0, sl
   1936a:	f7ff faf6 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   1936e:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   19370:	b119      	cbz	r1, 1937a <xTaskIncrementTick+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   19372:	f106 0018 	add.w	r0, r6, #24
   19376:	f7ff faf0 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   1937a:	2201      	movs	r2, #1
   1937c:	f04f 0e14 	mov.w	lr, #20
   19380:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   19382:	f8d9 3000 	ldr.w	r3, [r9]
   19386:	fa02 f100 	lsl.w	r1, r2, r0
   1938a:	4319      	orrs	r1, r3
   1938c:	4b1f      	ldr	r3, [pc, #124]	; (1940c <xTaskIncrementTick+0xfc>)
   1938e:	f8c9 1000 	str.w	r1, [r9]
   19392:	fb0e 3000 	mla	r0, lr, r0, r3
   19396:	4651      	mov	r1, sl
   19398:	f7ff fabc 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1939c:	6838      	ldr	r0, [r7, #0]
   1939e:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   193a0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   193a2:	4291      	cmp	r1, r2
   193a4:	bf28      	it	cs
   193a6:	f04f 0b01 	movcs.w	fp, #1
   193aa:	e7d3      	b.n	19354 <xTaskIncrementTick+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   193ac:	4a18      	ldr	r2, [pc, #96]	; (19410 <xTaskIncrementTick+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   193ae:	f04f 0b00 	mov.w	fp, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   193b2:	6813      	ldr	r3, [r2, #0]
   193b4:	3301      	adds	r3, #1
   193b6:	6013      	str	r3, [r2, #0]
   193b8:	e011      	b.n	193de <xTaskIncrementTick+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   193ba:	f8d8 2000 	ldr.w	r2, [r8]
   193be:	68d2      	ldr	r2, [r2, #12]
   193c0:	68d6      	ldr	r6, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   193c2:	6871      	ldr	r1, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   193c4:	428c      	cmp	r4, r1
   193c6:	d2cd      	bcs.n	19364 <xTaskIncrementTick+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   193c8:	6029      	str	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   193ca:	683a      	ldr	r2, [r7, #0]
   193cc:	4b0f      	ldr	r3, [pc, #60]	; (1940c <xTaskIncrementTick+0xfc>)
   193ce:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   193d0:	2214      	movs	r2, #20
   193d2:	434a      	muls	r2, r1
   193d4:	589a      	ldr	r2, [r3, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   193d6:	2a02      	cmp	r2, #2
   193d8:	bf28      	it	cs
   193da:	f04f 0b01 	movcs.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   193de:	4a0d      	ldr	r2, [pc, #52]	; (19414 <xTaskIncrementTick+0x104>)
   193e0:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   193e2:	2a00      	cmp	r2, #0
   193e4:	bf18      	it	ne
   193e6:	f04f 0b01 	movne.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   193ea:	4658      	mov	r0, fp
   193ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193f0:	2007c6e8 	.word	0x2007c6e8
   193f4:	2007c754 	.word	0x2007c754
   193f8:	2007c60c 	.word	0x2007c60c
   193fc:	2007c610 	.word	0x2007c610
   19400:	2007c724 	.word	0x2007c724
   19404:	2007c720 	.word	0x2007c720
   19408:	2007c608 	.word	0x2007c608
   1940c:	2007c614 	.word	0x2007c614
   19410:	2007c6e4 	.word	0x2007c6e4
   19414:	2007c758 	.word	0x2007c758
   19418:	2007c6f0 	.word	0x2007c6f0

0001941c <xTaskResumeAll>:
xTaskResumeAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   1941c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   19420:	f7ff f98a 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   19424:	4b2a      	ldr	r3, [pc, #168]	; (194d0 <xTaskResumeAll+0xb4>)
   19426:	681a      	ldr	r2, [r3, #0]
   19428:	3a01      	subs	r2, #1
   1942a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1942c:	681c      	ldr	r4, [r3, #0]
   1942e:	b12c      	cbz	r4, 1943c <xTaskResumeAll+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   19430:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   19432:	f7ff f991 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   19436:	4620      	mov	r0, r4
   19438:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   1943c:	4b25      	ldr	r3, [pc, #148]	; (194d4 <xTaskResumeAll+0xb8>)
   1943e:	681b      	ldr	r3, [r3, #0]
   19440:	2b00      	cmp	r3, #0
   19442:	d0f5      	beq.n	19430 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   19444:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 194ec <xTaskResumeAll+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   19448:	4f23      	ldr	r7, [pc, #140]	; (194d8 <xTaskResumeAll+0xbc>)
   1944a:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 194f0 <xTaskResumeAll+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   1944e:	f8d9 3000 	ldr.w	r3, [r9]
   19452:	b9e3      	cbnz	r3, 1948e <xTaskResumeAll+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   19454:	b10c      	cbz	r4, 1945a <xTaskResumeAll+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   19456:	f7ff fdab 	bl	18fb0 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   1945a:	4d20      	ldr	r5, [pc, #128]	; (194dc <xTaskResumeAll+0xc0>)
   1945c:	682c      	ldr	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   1945e:	b144      	cbz	r4, 19472 <xTaskResumeAll+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   19460:	2701      	movs	r7, #1
   19462:	4e1f      	ldr	r6, [pc, #124]	; (194e0 <xTaskResumeAll+0xc4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   19464:	f7ff ff54 	bl	19310 <xTaskIncrementTick>
   19468:	b100      	cbz	r0, 1946c <xTaskResumeAll+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   1946a:	6037      	str	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   1946c:	3c01      	subs	r4, #1
   1946e:	d1f9      	bne.n	19464 <xTaskResumeAll+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   19470:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   19472:	4b1b      	ldr	r3, [pc, #108]	; (194e0 <xTaskResumeAll+0xc4>)
   19474:	681b      	ldr	r3, [r3, #0]
   19476:	2b00      	cmp	r3, #0
   19478:	d0da      	beq.n	19430 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   1947a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1947e:	4b19      	ldr	r3, [pc, #100]	; (194e4 <xTaskResumeAll+0xc8>)
   19480:	601a      	str	r2, [r3, #0]
   19482:	f3bf 8f4f 	dsb	sy
   19486:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   1948a:	2401      	movs	r4, #1
   1948c:	e7d1      	b.n	19432 <xTaskResumeAll+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   1948e:	f8d9 300c 	ldr.w	r3, [r9, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   19492:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   19494:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   19496:	1d26      	adds	r6, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   19498:	f104 0018 	add.w	r0, r4, #24
   1949c:	f7ff fa5d 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   194a0:	4630      	mov	r0, r6
   194a2:	f7ff fa5a 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   194a6:	2014      	movs	r0, #20
   194a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   194aa:	6839      	ldr	r1, [r7, #0]
   194ac:	fa05 f302 	lsl.w	r3, r5, r2
   194b0:	430b      	orrs	r3, r1
   194b2:	fb00 8002 	mla	r0, r0, r2, r8
   194b6:	4631      	mov	r1, r6
   194b8:	603b      	str	r3, [r7, #0]
   194ba:	f7ff fa2b 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   194be:	4b0a      	ldr	r3, [pc, #40]	; (194e8 <xTaskResumeAll+0xcc>)
   194c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   194c2:	681b      	ldr	r3, [r3, #0]
   194c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   194c6:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   194c8:	bf24      	itt	cs
   194ca:	4b05      	ldrcs	r3, [pc, #20]	; (194e0 <xTaskResumeAll+0xc4>)
   194cc:	601d      	strcs	r5, [r3, #0]
   194ce:	e7be      	b.n	1944e <xTaskResumeAll+0x32>
   194d0:	2007c6e8 	.word	0x2007c6e8
   194d4:	2007c6e0 	.word	0x2007c6e0
   194d8:	2007c6f0 	.word	0x2007c6f0
   194dc:	2007c6e4 	.word	0x2007c6e4
   194e0:	2007c758 	.word	0x2007c758
   194e4:	e000ed04 	.word	0xe000ed04
   194e8:	2007c608 	.word	0x2007c608
   194ec:	2007c728 	.word	0x2007c728
   194f0:	2007c614 	.word	0x2007c614

000194f4 <vTaskDelayUntil>:
vTaskDelayUntil():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1141
	{
   194f4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1149
		vTaskSuspendAll();
   194f6:	f7ff fef1 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   194fa:	4b12      	ldr	r3, [pc, #72]	; (19544 <vTaskDelayUntil+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   194fc:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   194fe:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   19500:	1863      	adds	r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1158
			if( xConstTickCount < *pxPreviousWakeTime )
   19502:	42a2      	cmp	r2, r4
   19504:	d217      	bcs.n	19536 <vTaskDelayUntil+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1165
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
   19506:	429c      	cmp	r4, r3
   19508:	d919      	bls.n	1953e <vTaskDelayUntil+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179 (discriminator 1)
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   1950a:	429a      	cmp	r2, r3
   1950c:	bf2c      	ite	cs
   1950e:	2100      	movcs	r1, #0
   19510:	2101      	movcc	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1190
			*pxPreviousWakeTime = xTimeToWake;
   19512:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1192
			if( xShouldDelay != pdFALSE )
   19514:	b119      	cbz	r1, 1951e <vTaskDelayUntil+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1198
				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
   19516:	2100      	movs	r1, #0
   19518:	1a98      	subs	r0, r3, r2
   1951a:	f7ff fd5b 	bl	18fd4 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1205
		xAlreadyYielded = xTaskResumeAll();
   1951e:	f7ff ff7d 	bl	1941c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1209
		if( xAlreadyYielded == pdFALSE )
   19522:	b938      	cbnz	r0, 19534 <vTaskDelayUntil+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1211
			portYIELD_WITHIN_API();
   19524:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19528:	4b07      	ldr	r3, [pc, #28]	; (19548 <vTaskDelayUntil+0x54>)
   1952a:	601a      	str	r2, [r3, #0]
   1952c:	f3bf 8f4f 	dsb	sy
   19530:	f3bf 8f6f 	isb	sy
   19534:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   19536:	429c      	cmp	r4, r3
   19538:	d9e7      	bls.n	1950a <vTaskDelayUntil+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1181
					xShouldDelay = pdTRUE;
   1953a:	2101      	movs	r1, #1
   1953c:	e7e9      	b.n	19512 <vTaskDelayUntil+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1143
	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
   1953e:	2100      	movs	r1, #0
   19540:	e7e7      	b.n	19512 <vTaskDelayUntil+0x1e>
   19542:	bf00      	nop
   19544:	2007c754 	.word	0x2007c754
   19548:	e000ed04 	.word	0xe000ed04

0001954c <vTaskDelay>:
vTaskDelay():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   1954c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   1954e:	b940      	cbnz	r0, 19562 <vTaskDelay+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   19550:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19554:	4b08      	ldr	r3, [pc, #32]	; (19578 <vTaskDelay+0x2c>)
   19556:	601a      	str	r2, [r3, #0]
   19558:	f3bf 8f4f 	dsb	sy
   1955c:	f3bf 8f6f 	isb	sy
   19560:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   19562:	f7ff febb 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   19566:	2100      	movs	r1, #0
   19568:	f7ff fd34 	bl	18fd4 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   1956c:	f7ff ff56 	bl	1941c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   19570:	2800      	cmp	r0, #0
   19572:	d0ed      	beq.n	19550 <vTaskDelay+0x4>
   19574:	bd08      	pop	{r3, pc}
   19576:	bf00      	nop
   19578:	e000ed04 	.word	0xe000ed04

0001957c <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   1957c:	4b26      	ldr	r3, [pc, #152]	; (19618 <vTaskSwitchContext+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   1957e:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   19580:	681a      	ldr	r2, [r3, #0]
   19582:	4b26      	ldr	r3, [pc, #152]	; (1961c <vTaskSwitchContext+0xa0>)
   19584:	b112      	cbz	r2, 1958c <vTaskSwitchContext+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   19586:	2201      	movs	r2, #1
   19588:	601a      	str	r2, [r3, #0]
   1958a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   1958c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   1958e:	f7ff f953 	bl	18838 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   19592:	4a23      	ldr	r2, [pc, #140]	; (19620 <vTaskSwitchContext+0xa4>)
   19594:	4c23      	ldr	r4, [pc, #140]	; (19624 <vTaskSwitchContext+0xa8>)
   19596:	6815      	ldr	r5, [r2, #0]
   19598:	42a8      	cmp	r0, r5
   1959a:	d904      	bls.n	195a6 <vTaskSwitchContext+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   1959c:	6821      	ldr	r1, [r4, #0]
   1959e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   195a0:	1b5b      	subs	r3, r3, r5
   195a2:	4403      	add	r3, r0
   195a4:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   195a6:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   195a8:	6010      	str	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   195aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   195ac:	681a      	ldr	r2, [r3, #0]
   195ae:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   195b2:	d10b      	bne.n	195cc <vTaskSwitchContext+0x50>
   195b4:	685a      	ldr	r2, [r3, #4]
   195b6:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   195ba:	d107      	bne.n	195cc <vTaskSwitchContext+0x50>
   195bc:	689a      	ldr	r2, [r3, #8]
   195be:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   195c2:	d103      	bne.n	195cc <vTaskSwitchContext+0x50>
   195c4:	68db      	ldr	r3, [r3, #12]
   195c6:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   195ca:	d004      	beq.n	195d6 <vTaskSwitchContext+0x5a>
   195cc:	6820      	ldr	r0, [r4, #0]
   195ce:	6821      	ldr	r1, [r4, #0]
   195d0:	3134      	adds	r1, #52	; 0x34
   195d2:	f7ff f947 	bl	18864 <vApplicationStackOverflowHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   195d6:	4b14      	ldr	r3, [pc, #80]	; (19628 <vTaskSwitchContext+0xac>)
   195d8:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   195da:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   195de:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   195e0:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   195e2:	f1c3 031f 	rsb	r3, r3, #31
   195e6:	fb00 f203 	mul.w	r2, r0, r3
   195ea:	4910      	ldr	r1, [pc, #64]	; (1962c <vTaskSwitchContext+0xb0>)
   195ec:	188d      	adds	r5, r1, r2
   195ee:	686e      	ldr	r6, [r5, #4]
   195f0:	3208      	adds	r2, #8
   195f2:	6876      	ldr	r6, [r6, #4]
   195f4:	440a      	add	r2, r1
   195f6:	4296      	cmp	r6, r2
   195f8:	fb00 1303 	mla	r3, r0, r3, r1
   195fc:	bf08      	it	eq
   195fe:	6872      	ldreq	r2, [r6, #4]
   19600:	606e      	str	r6, [r5, #4]
   19602:	bf08      	it	eq
   19604:	606a      	streq	r2, [r5, #4]
   19606:	685b      	ldr	r3, [r3, #4]
   19608:	68db      	ldr	r3, [r3, #12]
   1960a:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   1960c:	6823      	ldr	r3, [r4, #0]
   1960e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   19610:	4b07      	ldr	r3, [pc, #28]	; (19630 <vTaskSwitchContext+0xb4>)
   19612:	645a      	str	r2, [r3, #68]	; 0x44
   19614:	bd70      	pop	{r4, r5, r6, pc}
   19616:	bf00      	nop
   19618:	2007c6e8 	.word	0x2007c6e8
   1961c:	2007c758 	.word	0x2007c758
   19620:	2007c6dc 	.word	0x2007c6dc
   19624:	2007c608 	.word	0x2007c608
   19628:	2007c6f0 	.word	0x2007c6f0
   1962c:	2007c614 	.word	0x2007c614
   19630:	40024000 	.word	0x40024000

00019634 <vTaskSuspend>:
vTaskSuspend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1567
	{
   19634:	b570      	push	{r4, r5, r6, lr}
   19636:	4604      	mov	r4, r0
   19638:	4e23      	ldr	r6, [pc, #140]	; (196c8 <vTaskSuspend+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1570
		taskENTER_CRITICAL();
   1963a:	f7ff f87d 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
   1963e:	b904      	cbnz	r4, 19642 <vTaskSuspend+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574 (discriminator 1)
   19640:	6834      	ldr	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1580 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19642:	1d25      	adds	r5, r4, #4
   19644:	4628      	mov	r0, r5
   19646:	f7ff f988 	bl	1895a <uxListRemove>
   1964a:	b960      	cbnz	r0, 19666 <vTaskSuspend+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   1964c:	2114      	movs	r1, #20
   1964e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   19650:	4b1e      	ldr	r3, [pc, #120]	; (196cc <vTaskSuspend+0x98>)
   19652:	4341      	muls	r1, r0
   19654:	585b      	ldr	r3, [r3, r1]
   19656:	b933      	cbnz	r3, 19666 <vTaskSuspend+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582 (discriminator 1)
   19658:	2201      	movs	r2, #1
   1965a:	491d      	ldr	r1, [pc, #116]	; (196d0 <vTaskSuspend+0x9c>)
   1965c:	4082      	lsls	r2, r0
   1965e:	680b      	ldr	r3, [r1, #0]
   19660:	ea23 0302 	bic.w	r3, r3, r2
   19664:	600b      	str	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1590
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   19666:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   19668:	b11b      	cbz	r3, 19672 <vTaskSuspend+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1592
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   1966a:	f104 0018 	add.w	r0, r4, #24
   1966e:	f7ff f974 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   19672:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   19674:	4d17      	ldr	r5, [pc, #92]	; (196d4 <vTaskSuspend+0xa0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   19676:	4818      	ldr	r0, [pc, #96]	; (196d8 <vTaskSuspend+0xa4>)
   19678:	f7ff f94c 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1601
		taskEXIT_CRITICAL();
   1967c:	f7ff f86c 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   19680:	682a      	ldr	r2, [r5, #0]
   19682:	b12a      	cbz	r2, 19690 <vTaskSuspend+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1607
			taskENTER_CRITICAL();
   19684:	f7ff f858 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1609
				prvResetNextTaskUnblockTime();
   19688:	f7ff fc92 	bl	18fb0 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1611
			taskEXIT_CRITICAL();
   1968c:	f7ff f864 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1618
		if( pxTCB == pxCurrentTCB )
   19690:	6833      	ldr	r3, [r6, #0]
   19692:	429c      	cmp	r4, r3
   19694:	d116      	bne.n	196c4 <vTaskSuspend+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1620
			if( xSchedulerRunning != pdFALSE )
   19696:	682b      	ldr	r3, [r5, #0]
   19698:	b143      	cbz	r3, 196ac <vTaskSuspend+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1624
				portYIELD_WITHIN_API();
   1969a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1969e:	4b0f      	ldr	r3, [pc, #60]	; (196dc <vTaskSuspend+0xa8>)
   196a0:	601a      	str	r2, [r3, #0]
   196a2:	f3bf 8f4f 	dsb	sy
   196a6:	f3bf 8f6f 	isb	sy
   196aa:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1631
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
   196ac:	4a0c      	ldr	r2, [pc, #48]	; (196e0 <vTaskSuspend+0xac>)
   196ae:	490a      	ldr	r1, [pc, #40]	; (196d8 <vTaskSuspend+0xa4>)
   196b0:	6812      	ldr	r2, [r2, #0]
   196b2:	6809      	ldr	r1, [r1, #0]
   196b4:	4291      	cmp	r1, r2
   196b6:	d101      	bne.n	196bc <vTaskSuspend+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1637
					pxCurrentTCB = NULL;
   196b8:	6033      	str	r3, [r6, #0]
   196ba:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1649
	}
   196bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1641
					vTaskSwitchContext();
   196c0:	f7ff bf5c 	b.w	1957c <vTaskSwitchContext>
   196c4:	bd70      	pop	{r4, r5, r6, pc}
   196c6:	bf00      	nop
   196c8:	2007c608 	.word	0x2007c608
   196cc:	2007c614 	.word	0x2007c614
   196d0:	2007c6f0 	.word	0x2007c6f0
   196d4:	2007c73c 	.word	0x2007c73c
   196d8:	2007c740 	.word	0x2007c740
   196dc:	e000ed04 	.word	0xe000ed04
   196e0:	2007c6e0 	.word	0x2007c6e0

000196e4 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   196e4:	b510      	push	{r4, lr}
   196e6:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   196e8:	4b05      	ldr	r3, [pc, #20]	; (19700 <vTaskPlaceOnEventList+0x1c>)
   196ea:	6819      	ldr	r1, [r3, #0]
   196ec:	3118      	adds	r1, #24
   196ee:	f7ff f91d 	bl	1892c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   196f2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   196f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   196f8:	2101      	movs	r1, #1
   196fa:	f7ff bc6b 	b.w	18fd4 <prvAddCurrentTaskToDelayedList>
   196fe:	bf00      	nop
   19700:	2007c608 	.word	0x2007c608

00019704 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   19704:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   19706:	68c3      	ldr	r3, [r0, #12]
   19708:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   1970a:	f104 0518 	add.w	r5, r4, #24
   1970e:	4628      	mov	r0, r5
   19710:	f7ff f923 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19714:	4b11      	ldr	r3, [pc, #68]	; (1975c <xTaskRemoveFromEventList+0x58>)
   19716:	681b      	ldr	r3, [r3, #0]
   19718:	b9e3      	cbnz	r3, 19754 <xTaskRemoveFromEventList+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   1971a:	1d25      	adds	r5, r4, #4
   1971c:	4628      	mov	r0, r5
   1971e:	f7ff f91c 	bl	1895a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   19722:	2301      	movs	r3, #1
   19724:	490e      	ldr	r1, [pc, #56]	; (19760 <xTaskRemoveFromEventList+0x5c>)
   19726:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19728:	6808      	ldr	r0, [r1, #0]
   1972a:	4093      	lsls	r3, r2
   1972c:	4303      	orrs	r3, r0
   1972e:	2014      	movs	r0, #20
   19730:	600b      	str	r3, [r1, #0]
   19732:	4629      	mov	r1, r5
   19734:	4b0b      	ldr	r3, [pc, #44]	; (19764 <xTaskRemoveFromEventList+0x60>)
   19736:	fb00 3002 	mla	r0, r0, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   1973a:	f7ff f8eb 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   1973e:	4b0a      	ldr	r3, [pc, #40]	; (19768 <xTaskRemoveFromEventList+0x64>)
   19740:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19742:	681b      	ldr	r3, [r3, #0]
   19744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19746:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   19748:	bf85      	ittet	hi
   1974a:	2001      	movhi	r0, #1
   1974c:	4b07      	ldrhi	r3, [pc, #28]	; (1976c <xTaskRemoveFromEventList+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   1974e:	2000      	movls	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   19750:	6018      	strhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   19752:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   19754:	4629      	mov	r1, r5
   19756:	4806      	ldr	r0, [pc, #24]	; (19770 <xTaskRemoveFromEventList+0x6c>)
   19758:	e7ef      	b.n	1973a <xTaskRemoveFromEventList+0x36>
   1975a:	bf00      	nop
   1975c:	2007c6e8 	.word	0x2007c6e8
   19760:	2007c6f0 	.word	0x2007c6f0
   19764:	2007c614 	.word	0x2007c614
   19768:	2007c608 	.word	0x2007c608
   1976c:	2007c758 	.word	0x2007c758
   19770:	2007c728 	.word	0x2007c728

00019774 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   19774:	4b03      	ldr	r3, [pc, #12]	; (19784 <vTaskSetTimeOutState+0x10>)
   19776:	681b      	ldr	r3, [r3, #0]
   19778:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   1977a:	4b03      	ldr	r3, [pc, #12]	; (19788 <vTaskSetTimeOutState+0x14>)
   1977c:	681b      	ldr	r3, [r3, #0]
   1977e:	6043      	str	r3, [r0, #4]
   19780:	4770      	bx	lr
   19782:	bf00      	nop
   19784:	2007c724 	.word	0x2007c724
   19788:	2007c754 	.word	0x2007c754

0001978c <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   1978c:	b538      	push	{r3, r4, r5, lr}
   1978e:	460d      	mov	r5, r1
   19790:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   19792:	f7fe ffd1 	bl	18738 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   19796:	4b0e      	ldr	r3, [pc, #56]	; (197d0 <xTaskCheckForTimeOut+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   19798:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   1979a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   1979c:	1c53      	adds	r3, r2, #1
   1979e:	d010      	beq.n	197c2 <xTaskCheckForTimeOut+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   197a0:	4b0c      	ldr	r3, [pc, #48]	; (197d4 <xTaskCheckForTimeOut+0x48>)
   197a2:	6821      	ldr	r1, [r4, #0]
   197a4:	681b      	ldr	r3, [r3, #0]
   197a6:	4299      	cmp	r1, r3
   197a8:	6863      	ldr	r3, [r4, #4]
   197aa:	d001      	beq.n	197b0 <xTaskCheckForTimeOut+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   197ac:	4298      	cmp	r0, r3
   197ae:	d20d      	bcs.n	197cc <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   197b0:	1ac1      	subs	r1, r0, r3
   197b2:	428a      	cmp	r2, r1
   197b4:	d90a      	bls.n	197cc <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   197b6:	1a1b      	subs	r3, r3, r0
   197b8:	4413      	add	r3, r2
   197ba:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   197bc:	4620      	mov	r0, r4
   197be:	f7ff ffd9 	bl	19774 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   197c2:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   197c4:	f7fe ffc8 	bl	18758 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   197c8:	4620      	mov	r0, r4
   197ca:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   197cc:	2401      	movs	r4, #1
   197ce:	e7f9      	b.n	197c4 <xTaskCheckForTimeOut+0x38>
   197d0:	2007c754 	.word	0x2007c754
   197d4:	2007c724 	.word	0x2007c724

000197d8 <vTaskMissedYield>:
vTaskMissedYield():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   197d8:	2201      	movs	r2, #1
   197da:	4b01      	ldr	r3, [pc, #4]	; (197e0 <vTaskMissedYield+0x8>)
   197dc:	601a      	str	r2, [r3, #0]
   197de:	4770      	bx	lr
   197e0:	2007c758 	.word	0x2007c758

000197e4 <vTaskGetInfo>:
vTaskGetInfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3412
	{
   197e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   197e8:	460c      	mov	r4, r1
   197ea:	4617      	mov	r7, r2
   197ec:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416
		pxTCB = prvGetTCBFromHandle( xTask );
   197ee:	4606      	mov	r6, r0
   197f0:	bb58      	cbnz	r0, 1984a <vTaskGetInfo+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416 (discriminator 1)
   197f2:	4b1b      	ldr	r3, [pc, #108]	; (19860 <vTaskGetInfo+0x7c>)
   197f4:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3419 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
   197f6:	f105 0334 	add.w	r3, r5, #52	; 0x34
   197fa:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   197fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3418 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
   197fe:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   19800:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3421 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
   19802:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   19804:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3422 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
   19806:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   19808:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3429 (discriminator 4)
			if( pxTaskStatus->eCurrentState == eSuspended )
   1980a:	7b23      	ldrb	r3, [r4, #12]
   1980c:	2b03      	cmp	r3, #3
   1980e:	d107      	bne.n	19820 <vTaskGetInfo+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3431
				vTaskSuspendAll();
   19810:	f7ff fd64 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3433
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   19814:	6aab      	ldr	r3, [r5, #40]	; 0x28
   19816:	b10b      	cbz	r3, 1981c <vTaskGetInfo+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3435
						pxTaskStatus->eCurrentState = eBlocked;
   19818:	2302      	movs	r3, #2
   1981a:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3438
				xTaskResumeAll();
   1981c:	f7ff fdfe 	bl	1941c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19820:	6c6b      	ldr	r3, [r5, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   19822:	f1b8 0f05 	cmp.w	r8, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19826:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3455
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
   19828:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   1982a:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   1982c:	d00f      	beq.n	1984e <vTaskGetInfo+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3468
			pxTaskStatus->eCurrentState = eState;
   1982e:	f884 800c 	strb.w	r8, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3477
		if( xGetFreeStackSpace != pdFALSE )
   19832:	b18f      	cbz	r7, 19858 <vTaskGetInfo+0x74>
   19834:	6b29      	ldr	r1, [r5, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3485
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
   19836:	460a      	mov	r2, r1
   19838:	1a53      	subs	r3, r2, r1
prvTaskCheckFreeStackSpace():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   1983a:	f812 0b01 	ldrb.w	r0, [r2], #1
   1983e:	28a5      	cmp	r0, #165	; 0xa5
   19840:	d0fa      	beq.n	19838 <vTaskGetInfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3543
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
   19842:	089b      	lsrs	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3545
		return ( uint16_t ) ulCount;
   19844:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
   19846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1984a:	4605      	mov	r5, r0
   1984c:	e7d3      	b.n	197f6 <vTaskGetInfo+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3472
			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
   1984e:	4630      	mov	r0, r6
   19850:	f7ff fcd8 	bl	19204 <eTaskGetState>
   19854:	7320      	strb	r0, [r4, #12]
   19856:	e7ec      	b.n	19832 <vTaskGetInfo+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3491
			pxTaskStatus->usStackHighWaterMark = 0;
   19858:	8427      	strh	r7, [r4, #32]
   1985a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1985e:	bf00      	nop
   19860:	2007c608 	.word	0x2007c608

00019864 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   19864:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19868:	680d      	ldr	r5, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   1986a:	4681      	mov	r9, r0
   1986c:	460c      	mov	r4, r1
   1986e:	4693      	mov	fp, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19870:	b31d      	cbz	r5, 198ba <prvListTasksWithinSingleList+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3503
	UBaseType_t uxTask = 0;
   19872:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19874:	f04f 0a24 	mov.w	sl, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3507
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   19878:	684b      	ldr	r3, [r1, #4]
   1987a:	f101 0708 	add.w	r7, r1, #8
   1987e:	685b      	ldr	r3, [r3, #4]
   19880:	42bb      	cmp	r3, r7
   19882:	604b      	str	r3, [r1, #4]
   19884:	bf04      	itt	eq
   19886:	68cb      	ldreq	r3, [r1, #12]
   19888:	604b      	streq	r3, [r1, #4]
   1988a:	684b      	ldr	r3, [r1, #4]
   1988c:	f8d3 800c 	ldr.w	r8, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19890:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19892:	fb0a 9105 	mla	r1, sl, r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19896:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19898:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   1989a:	429f      	cmp	r7, r3
   1989c:	6063      	str	r3, [r4, #4]
   1989e:	bf08      	it	eq
   198a0:	68e3      	ldreq	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3517
				uxTask++;
   198a2:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   198a6:	bf08      	it	eq
   198a8:	6063      	streq	r3, [r4, #4]
   198aa:	6863      	ldr	r3, [r4, #4]
   198ac:	68de      	ldr	r6, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   198ae:	465b      	mov	r3, fp
   198b0:	4630      	mov	r0, r6
   198b2:	f7ff ff97 	bl	197e4 <vTaskGetInfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3518
			} while( pxNextTCB != pxFirstTCB );
   198b6:	45b0      	cmp	r8, r6
   198b8:	d1ea      	bne.n	19890 <prvListTasksWithinSingleList+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3526
	}
   198ba:	4628      	mov	r0, r5
   198bc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000198c0 <uxTaskGetSystemState>:
uxTaskGetSystemState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2322
	{
   198c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   198c4:	4606      	mov	r6, r0
   198c6:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2325
		vTaskSuspendAll();
   198c8:	f7ff fd08 	bl	192dc <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2328
			if( uxArraySize >= uxCurrentNumberOfTasks )
   198cc:	4b1d      	ldr	r3, [pc, #116]	; (19944 <uxTaskGetSystemState+0x84>)
   198ce:	681b      	ldr	r3, [r3, #0]
   198d0:	428b      	cmp	r3, r1
   198d2:	d834      	bhi.n	1993e <uxTaskGetSystemState+0x7e>
   198d4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   198d6:	2724      	movs	r7, #36	; 0x24
   198d8:	462c      	mov	r4, r5
   198da:	f8df 9078 	ldr.w	r9, [pc, #120]	; 19954 <uxTaskGetSystemState+0x94>
   198de:	f105 01b4 	add.w	r1, r5, #180	; 0xb4
   198e2:	fb07 6004 	mla	r0, r7, r4, r6
   198e6:	2201      	movs	r2, #1
   198e8:	4449      	add	r1, r9
   198ea:	f7ff ffbb 	bl	19864 <prvListTasksWithinSingleList>
   198ee:	3d14      	subs	r5, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   198f0:	f115 0fc8 	cmn.w	r5, #200	; 0xc8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   198f4:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   198f6:	d1f2      	bne.n	198de <uxTaskGetSystemState+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   198f8:	4b13      	ldr	r3, [pc, #76]	; (19948 <uxTaskGetSystemState+0x88>)
   198fa:	2202      	movs	r2, #2
   198fc:	6819      	ldr	r1, [r3, #0]
   198fe:	fb07 6004 	mla	r0, r7, r4, r6
   19902:	f7ff ffaf 	bl	19864 <prvListTasksWithinSingleList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   19906:	4b11      	ldr	r3, [pc, #68]	; (1994c <uxTaskGetSystemState+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   19908:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   1990a:	6819      	ldr	r1, [r3, #0]
   1990c:	2202      	movs	r2, #2
   1990e:	fb07 6004 	mla	r0, r7, r4, r6
   19912:	f7ff ffa7 	bl	19864 <prvListTasksWithinSingleList>
   19916:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2356
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
   19918:	fb07 6004 	mla	r0, r7, r4, r6
   1991c:	2203      	movs	r2, #3
   1991e:	490c      	ldr	r1, [pc, #48]	; (19950 <uxTaskGetSystemState+0x90>)
   19920:	f7ff ffa0 	bl	19864 <prvListTasksWithinSingleList>
   19924:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2362
					if( pulTotalRunTime != NULL )
   19926:	f1b8 0f00 	cmp.w	r8, #0
   1992a:	d003      	beq.n	19934 <uxTaskGetSystemState+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2367
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   1992c:	f7fe ff84 	bl	18838 <rts_not_full_trace_get>
   19930:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2385
		( void ) xTaskResumeAll();
   19934:	f7ff fd72 	bl	1941c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2388
	}
   19938:	4620      	mov	r0, r4
   1993a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2323
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
   1993e:	2400      	movs	r4, #0
   19940:	e7f8      	b.n	19934 <uxTaskGetSystemState+0x74>
   19942:	bf00      	nop
   19944:	2007c6e0 	.word	0x2007c6e0
   19948:	2007c60c 	.word	0x2007c60c
   1994c:	2007c610 	.word	0x2007c610
   19950:	2007c740 	.word	0x2007c740
   19954:	2007c614 	.word	0x2007c614

00019958 <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559
		pxTCB = prvGetTCBFromHandle( xTask );
   19958:	b908      	cbnz	r0, 1995e <uxTaskGetStackHighWaterMark+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559 (discriminator 1)
   1995a:	4b06      	ldr	r3, [pc, #24]	; (19974 <uxTaskGetStackHighWaterMark+0x1c>)
   1995c:	6818      	ldr	r0, [r3, #0]
   1995e:	6b02      	ldr	r2, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3563 (discriminator 4)
			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
   19960:	4613      	mov	r3, r2
   19962:	1a98      	subs	r0, r3, r2
prvTaskCheckFreeStackSpace():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   19964:	f813 1b01 	ldrb.w	r1, [r3], #1
   19968:	29a5      	cmp	r1, #165	; 0xa5
   1996a:	d0fa      	beq.n	19962 <uxTaskGetStackHighWaterMark+0xa>
uxTaskGetStackHighWaterMark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3574
	}
   1996c:	f3c0 008f 	ubfx	r0, r0, #2, #16
   19970:	4770      	bx	lr
   19972:	bf00      	nop
   19974:	2007c608 	.word	0x2007c608

00019978 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   19978:	4b05      	ldr	r3, [pc, #20]	; (19990 <xTaskGetSchedulerState+0x18>)
   1997a:	681b      	ldr	r3, [r3, #0]
   1997c:	b133      	cbz	r3, 1998c <xTaskGetSchedulerState+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1997e:	4b05      	ldr	r3, [pc, #20]	; (19994 <xTaskGetSchedulerState+0x1c>)
   19980:	681b      	ldr	r3, [r3, #0]
   19982:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   19984:	bf0c      	ite	eq
   19986:	2002      	moveq	r0, #2
   19988:	2000      	movne	r0, #0
   1998a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   1998c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   1998e:	4770      	bx	lr
   19990:	2007c73c 	.word	0x2007c73c
   19994:	2007c6e8 	.word	0x2007c6e8

00019998 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   19998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   1999c:	4604      	mov	r4, r0
   1999e:	2800      	cmp	r0, #0
   199a0:	d039      	beq.n	19a16 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   199a2:	4d1e      	ldr	r5, [pc, #120]	; (19a1c <vTaskPriorityInherit+0x84>)
   199a4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   199a6:	682a      	ldr	r2, [r5, #0]
   199a8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   199aa:	4293      	cmp	r3, r2
   199ac:	d233      	bcs.n	19a16 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   199ae:	2714      	movs	r7, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   199b0:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   199b2:	4e1b      	ldr	r6, [pc, #108]	; (19a20 <vTaskPriorityInherit+0x88>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   199b4:	2a00      	cmp	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   199b6:	bfa8      	it	ge
   199b8:	682a      	ldrge	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   199ba:	fb07 6303 	mla	r3, r7, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   199be:	bfa2      	ittt	ge
   199c0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   199c2:	f1c2 020a 	rsbge	r2, r2, #10
   199c6:	6182      	strge	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   199c8:	6942      	ldr	r2, [r0, #20]
   199ca:	429a      	cmp	r2, r3
   199cc:	d120      	bne.n	19a10 <vTaskPriorityInherit+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   199ce:	f100 0804 	add.w	r8, r0, #4
   199d2:	4640      	mov	r0, r8
   199d4:	f7fe ffc1 	bl	1895a <uxListRemove>
   199d8:	4a12      	ldr	r2, [pc, #72]	; (19a24 <vTaskPriorityInherit+0x8c>)
   199da:	b948      	cbnz	r0, 199f0 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   199dc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   199de:	4347      	muls	r7, r0
   199e0:	59f3      	ldr	r3, [r6, r7]
   199e2:	b92b      	cbnz	r3, 199f0 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   199e4:	2101      	movs	r1, #1
   199e6:	6813      	ldr	r3, [r2, #0]
   199e8:	4081      	lsls	r1, r0
   199ea:	ea23 0301 	bic.w	r3, r3, r1
   199ee:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   199f0:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   199f2:	6811      	ldr	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   199f4:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   199f6:	2301      	movs	r3, #1
   199f8:	4083      	lsls	r3, r0
   199fa:	430b      	orrs	r3, r1
   199fc:	6013      	str	r3, [r2, #0]
   199fe:	2314      	movs	r3, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19a00:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19a02:	4641      	mov	r1, r8
   19a04:	fb03 6000 	mla	r0, r3, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   19a08:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19a0c:	f7fe bf82 	b.w	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19a10:	682b      	ldr	r3, [r5, #0]
   19a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19a14:	62c3      	str	r3, [r0, #44]	; 0x2c
   19a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19a1a:	bf00      	nop
   19a1c:	2007c608 	.word	0x2007c608
   19a20:	2007c614 	.word	0x2007c614
   19a24:	2007c6f0 	.word	0x2007c6f0

00019a28 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   19a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   19a2a:	4604      	mov	r4, r0
   19a2c:	b908      	cbnz	r0, 19a32 <xTaskPriorityDisinherit+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   19a2e:	2000      	movs	r0, #0
   19a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19a32:	6c83      	ldr	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19a34:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   19a36:	6c42      	ldr	r2, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19a38:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19a3a:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19a3c:	6483      	str	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19a3e:	d0f6      	beq.n	19a2e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   19a40:	2b00      	cmp	r3, #0
   19a42:	d1f4      	bne.n	19a2e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19a44:	1d05      	adds	r5, r0, #4
   19a46:	4628      	mov	r0, r5
   19a48:	f7fe ff87 	bl	1895a <uxListRemove>
   19a4c:	4e10      	ldr	r6, [pc, #64]	; (19a90 <xTaskPriorityDisinherit+0x68>)
   19a4e:	4a11      	ldr	r2, [pc, #68]	; (19a94 <xTaskPriorityDisinherit+0x6c>)
   19a50:	b950      	cbnz	r0, 19a68 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   19a52:	2114      	movs	r1, #20
   19a54:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   19a56:	4379      	muls	r1, r7
   19a58:	5873      	ldr	r3, [r6, r1]
   19a5a:	b92b      	cbnz	r3, 19a68 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   19a5c:	2001      	movs	r0, #1
   19a5e:	6813      	ldr	r3, [r2, #0]
   19a60:	40b8      	lsls	r0, r7
   19a62:	ea23 0300 	bic.w	r3, r3, r0
   19a66:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   19a68:	6c63      	ldr	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19a6a:	f1c3 010a 	rsb	r1, r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   19a6e:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19a70:	61a1      	str	r1, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   19a72:	2401      	movs	r4, #1
   19a74:	6811      	ldr	r1, [r2, #0]
   19a76:	fa04 f003 	lsl.w	r0, r4, r3
   19a7a:	4308      	orrs	r0, r1
   19a7c:	6010      	str	r0, [r2, #0]
   19a7e:	2014      	movs	r0, #20
   19a80:	4629      	mov	r1, r5
   19a82:	fb00 6003 	mla	r0, r0, r3, r6
   19a86:	f7fe ff45 	bl	18914 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   19a8a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   19a8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19a8e:	bf00      	nop
   19a90:	2007c614 	.word	0x2007c614
   19a94:	2007c6f0 	.word	0x2007c6f0

00019a98 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   19a98:	4b04      	ldr	r3, [pc, #16]	; (19aac <pvTaskIncrementMutexHeldCount+0x14>)
   19a9a:	681a      	ldr	r2, [r3, #0]
   19a9c:	b11a      	cbz	r2, 19aa6 <pvTaskIncrementMutexHeldCount+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   19a9e:	6819      	ldr	r1, [r3, #0]
   19aa0:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   19aa2:	3201      	adds	r2, #1
   19aa4:	648a      	str	r2, [r1, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   19aa6:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   19aa8:	4770      	bx	lr
   19aaa:	bf00      	nop
   19aac:	2007c608 	.word	0x2007c608

00019ab0 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:51
}

void vTaskResetRunTimeStats(void)
{
   19ab0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:53
    BaseType_t uxQueue = configMAX_PRIORITIES;
    vTaskSuspendAll();
   19ab2:	f7ff fc13 	bl	192dc <vTaskSuspendAll>
   19ab6:	24b4      	movs	r4, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:58
    {
        do
        {
            uxQueue--;
            if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE)
   19ab8:	4d12      	ldr	r5, [pc, #72]	; (19b04 <vTaskResetRunTimeStats+0x54>)
   19aba:	5963      	ldr	r3, [r4, r5]
   19abc:	b113      	cbz	r3, 19ac4 <vTaskResetRunTimeStats+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:60
            {
                prvResetRunTimeStatsInList(
   19abe:	1928      	adds	r0, r5, r4
   19ac0:	f7ff fa4b 	bl	18f5a <prvResetRunTimeStatsInList>
   19ac4:	3c14      	subs	r4, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:63
                        (List_t *) &(pxReadyTasksLists[uxQueue]));
            }
        } while (uxQueue > ( unsigned portBASE_TYPE ) tskIDLE_PRIORITY);
   19ac6:	f114 0f14 	cmn.w	r4, #20
   19aca:	d1f6      	bne.n	19aba <vTaskResetRunTimeStats+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:65

        if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE)
   19acc:	4b0e      	ldr	r3, [pc, #56]	; (19b08 <vTaskResetRunTimeStats+0x58>)
   19ace:	681a      	ldr	r2, [r3, #0]
   19ad0:	6812      	ldr	r2, [r2, #0]
   19ad2:	b112      	cbz	r2, 19ada <vTaskResetRunTimeStats+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:67
        {
            prvResetRunTimeStatsInList((List_t *) pxDelayedTaskList);
   19ad4:	6818      	ldr	r0, [r3, #0]
   19ad6:	f7ff fa40 	bl	18f5a <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:70
        }

        if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE)
   19ada:	4b0c      	ldr	r3, [pc, #48]	; (19b0c <vTaskResetRunTimeStats+0x5c>)
   19adc:	681a      	ldr	r2, [r3, #0]
   19ade:	6812      	ldr	r2, [r2, #0]
   19ae0:	b112      	cbz	r2, 19ae8 <vTaskResetRunTimeStats+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:72
        {
            prvResetRunTimeStatsInList((List_t *) pxOverflowDelayedTaskList);
   19ae2:	6818      	ldr	r0, [r3, #0]
   19ae4:	f7ff fa39 	bl	18f5a <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:86
        }
#endif

#if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
   19ae8:	4809      	ldr	r0, [pc, #36]	; (19b10 <vTaskResetRunTimeStats+0x60>)
   19aea:	6803      	ldr	r3, [r0, #0]
   19aec:	b10b      	cbz	r3, 19af2 <vTaskResetRunTimeStats+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:88
            {
                prvResetRunTimeStatsInList(( List_t * ) &xSuspendedTaskList );
   19aee:	f7ff fa34 	bl	18f5a <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:92
            }
        }
#endif
        ulTaskSwitchedInTime = 0;
   19af2:	2200      	movs	r2, #0
   19af4:	4b07      	ldr	r3, [pc, #28]	; (19b14 <vTaskResetRunTimeStats+0x64>)
   19af6:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:93
        portRESET_TIMER_FOR_RUN_TIME_STATS();
   19af8:	f7fe fea8 	bl	1884c <rts_not_full_trace_reset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:96
    }
    xTaskResumeAll();
}
   19afc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:95
    xTaskResumeAll();
   19b00:	f7ff bc8c 	b.w	1941c <xTaskResumeAll>
   19b04:	2007c614 	.word	0x2007c614
   19b08:	2007c60c 	.word	0x2007c60c
   19b0c:	2007c610 	.word	0x2007c610
   19b10:	2007c740 	.word	0x2007c740
   19b14:	2007c6dc 	.word	0x2007c6dc

00019b18 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99

    void vRunTimeStatIsrEntry()
    {
   19b18:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   19b1a:	f7fe fe8d 	bl	18838 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   19b1e:	4b06      	ldr	r3, [pc, #24]	; (19b38 <vRunTimeStatIsrEntry+0x20>)
   19b20:	4a06      	ldr	r2, [pc, #24]	; (19b3c <vRunTimeStatIsrEntry+0x24>)
   19b22:	6819      	ldr	r1, [r3, #0]
   19b24:	b129      	cbz	r1, 19b32 <vRunTimeStatIsrEntry+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   19b26:	6819      	ldr	r1, [r3, #0]
   19b28:	6814      	ldr	r4, [r2, #0]
   19b2a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   19b2c:	1b1b      	subs	r3, r3, r4
   19b2e:	4403      	add	r3, r0
   19b30:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   19b32:	6010      	str	r0, [r2, #0]
   19b34:	bd10      	pop	{r4, pc}
   19b36:	bf00      	nop
   19b38:	2007c608 	.word	0x2007c608
   19b3c:	2007c6dc 	.word	0x2007c6dc

00019b40 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   19b40:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   19b42:	f7fe fe79 	bl	18838 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   19b46:	4b01      	ldr	r3, [pc, #4]	; (19b4c <vRunTimeStatIsrExit+0xc>)
   19b48:	6018      	str	r0, [r3, #0]
   19b4a:	bd08      	pop	{r3, pc}
   19b4c:	2007c6dc 	.word	0x2007c6dc

00019b50 <stream_tlm(char const*, void*)>:
_ZL10stream_tlmPKcPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:609
    return true;
}

#if (SYS_CFG_ENABLE_TLM)
static void stream_tlm(const char *s, void *arg)
{
   19b50:	b538      	push	{r3, r4, r5, lr}
   19b52:	460c      	mov	r4, r1
   19b54:	1e45      	subs	r5, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    CharDev *out = (CharDev*) arg;
    while (*s) {
   19b56:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   19b5a:	b131      	cbz	r1, 19b6a <stream_tlm(char const*, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:612
        out->putChar(*s);
   19b5c:	6823      	ldr	r3, [r4, #0]
   19b5e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19b62:	685b      	ldr	r3, [r3, #4]
   19b64:	4620      	mov	r0, r4
   19b66:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    while (*s) {
   19b68:	e7f5      	b.n	19b56 <stream_tlm(char const*, void*)+0x6>
   19b6a:	bd38      	pop	{r3, r4, r5, pc}

00019b6c <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   19b6c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   19b6e:	4d10      	ldr	r5, [pc, #64]	; (19bb0 <Storage::getFlashDrive()+0x44>)
   19b70:	4e10      	ldr	r6, [pc, #64]	; (19bb4 <Storage::getFlashDrive()+0x48>)
   19b72:	782c      	ldrb	r4, [r5, #0]
   19b74:	f3bf 8f5b 	dmb	ish
   19b78:	f014 0401 	ands.w	r4, r4, #1
   19b7c:	d115      	bne.n	19baa <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   19b7e:	4628      	mov	r0, r5
   19b80:	f002 fda1 	bl	1c6c6 <__cxa_guard_acquire>
   19b84:	b188      	cbz	r0, 19baa <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   19b86:	f44f 700e 	mov.w	r0, #568	; 0x238
   19b8a:	f7fd f971 	bl	16e70 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   19b8e:	2330      	movs	r3, #48	; 0x30
   19b90:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19b94:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   19b96:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19b9a:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   19b9e:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   19ba2:	6030      	str	r0, [r6, #0]
   19ba4:	4628      	mov	r0, r5
   19ba6:	f002 fd9a 	bl	1c6de <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   19baa:	6830      	ldr	r0, [r6, #0]
   19bac:	bd70      	pop	{r4, r5, r6, pc}
   19bae:	bf00      	nop
   19bb0:	2007c76c 	.word	0x2007c76c
   19bb4:	2007c770 	.word	0x2007c770

00019bb8 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:55

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
   19bb8:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   19bba:	4d10      	ldr	r5, [pc, #64]	; (19bfc <Storage::getSDDrive()+0x44>)
   19bbc:	4e10      	ldr	r6, [pc, #64]	; (19c00 <Storage::getSDDrive()+0x48>)
   19bbe:	782b      	ldrb	r3, [r5, #0]
   19bc0:	f3bf 8f5b 	dmb	ish
   19bc4:	f013 0401 	ands.w	r4, r3, #1
   19bc8:	d116      	bne.n	19bf8 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 1)
   19bca:	4628      	mov	r0, r5
   19bcc:	f002 fd7b 	bl	1c6c6 <__cxa_guard_acquire>
   19bd0:	b190      	cbz	r0, 19bf8 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   19bd2:	f44f 700e 	mov.w	r0, #568	; 0x238
   19bd6:	f7fd f94b 	bl	16e70 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   19bda:	2301      	movs	r3, #1
   19bdc:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)
            mVolStr[0] = volumeNum + '0';
   19be0:	2331      	movs	r3, #49	; 0x31
   19be2:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19be6:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   19be8:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19bec:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   19bf0:	6030      	str	r0, [r6, #0]
   19bf2:	4628      	mov	r0, r5
   19bf4:	f002 fd73 	bl	1c6de <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:59
            return *pSDCardDrive;
        }
   19bf8:	6830      	ldr	r0, [r6, #0]
   19bfa:	bd70      	pop	{r4, r5, r6, pc}
   19bfc:	2007c764 	.word	0x2007c764
   19c00:	2007c768 	.word	0x2007c768

00019c04 <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:51
{
   19c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c08:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
   19c0c:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:54
    const int delayInMs = (int)cmdParams;  // cast parameter str to integer
   19c0e:	f7fd f840 	bl	16c92 <str::operator int() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:56
    if(delayInMs > 0) {
   19c12:	1e04      	subs	r4, r0, #0
   19c14:	dd04      	ble.n	19c20 <taskListHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:57
        vTaskResetRunTimeStats();
   19c16:	f7ff ff4b 	bl	19ab0 <vTaskResetRunTimeStats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:58
        vTaskDelayMs(delayInMs);
   19c1a:	4620      	mov	r0, r4
   19c1c:	f7ff fc96 	bl	1954c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19c20:	f10d 0914 	add.w	r9, sp, #20
   19c24:	464c      	mov	r4, r9
   19c26:	4d2a      	ldr	r5, [pc, #168]	; (19cd0 <taskListHandler(str&, CharDev&, void*)+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19c28:	f04f 0b64 	mov.w	fp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19c2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19c2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19c30:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19c32:	aa04      	add	r2, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19c34:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   19c36:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19c38:	2110      	movs	r1, #16
   19c3a:	a80a      	add	r0, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   19c3c:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19c3e:	f7ff fe3f 	bl	198c0 <uxTaskGetSystemState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19c42:	4a24      	ldr	r2, [pc, #144]	; (19cd4 <taskListHandler(str&, CharDev&, void*)+0xd0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19c44:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19c46:	4924      	ldr	r1, [pc, #144]	; (19cd8 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   19c48:	4638      	mov	r0, r7
   19c4a:	f7fd ffcb 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:68
    uint32_t tasksRunTime = 0;
   19c4e:	4626      	mov	r6, r4
   19c50:	f04f 0800 	mov.w	r8, #0
   19c54:	ad0a      	add	r5, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 1)
        for (unsigned i = 0; i < uxArraySize; i++) {
   19c56:	45d0      	cmp	r8, sl
   19c58:	d01c      	beq.n	19c94 <taskListHandler(str&, CharDev&, void*)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:78
            if (e->uxBasePriority == priorityNum) {
   19c5a:	696b      	ldr	r3, [r5, #20]
   19c5c:	42a3      	cmp	r3, r4
   19c5e:	d115      	bne.n	19c8c <taskListHandler(str&, CharDev&, void*)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19c60:	69aa      	ldr	r2, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19c62:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19c64:	4416      	add	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19c66:	b11b      	cbz	r3, 19c70 <taskListHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81 (discriminator 1)
   19c68:	fbb3 f3fb 	udiv	r3, r3, fp
   19c6c:	fbb2 f3f3 	udiv	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:86 (discriminator 4)
                              e->pcTaskName, taskStatusTbl[e->eCurrentState], e->uxBasePriority,
   19c70:	7b29      	ldrb	r1, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19c72:	9203      	str	r2, [sp, #12]
   19c74:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   19c76:	8c2b      	ldrh	r3, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19c78:	9400      	str	r4, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   19c7a:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19c7c:	9301      	str	r3, [sp, #4]
   19c7e:	f859 3021 	ldr.w	r3, [r9, r1, lsl #2]
   19c82:	686a      	ldr	r2, [r5, #4]
   19c84:	4915      	ldr	r1, [pc, #84]	; (19cdc <taskListHandler(str&, CharDev&, void*)+0xd8>)
   19c86:	4638      	mov	r0, r7
   19c88:	f7fd ffac 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 2)
        for (unsigned i = 0; i < uxArraySize; i++) {
   19c8c:	f108 0801 	add.w	r8, r8, #1
   19c90:	3524      	adds	r5, #36	; 0x24
   19c92:	e7e0      	b.n	19c56 <taskListHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:73 (discriminator 2)
    for(unsigned priorityNum = 0; priorityNum < configMAX_PRIORITIES; priorityNum++)
   19c94:	3401      	adds	r4, #1
   19c96:	2c0a      	cmp	r4, #10
   19c98:	d1da      	bne.n	19c50 <taskListHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   19c9a:	2264      	movs	r2, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   19c9c:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   19c9e:	4910      	ldr	r1, [pc, #64]	; (19ce0 <taskListHandler(str&, CharDev&, void*)+0xdc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   19ca0:	1b9e      	subs	r6, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   19ca2:	fbb3 f3f2 	udiv	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   19ca6:	9600      	str	r6, [sp, #0]
   19ca8:	fbb6 f3f3 	udiv	r3, r6, r3
   19cac:	4a0d      	ldr	r2, [pc, #52]	; (19ce4 <taskListHandler(str&, CharDev&, void*)+0xe0>)
   19cae:	4638      	mov	r0, r7
   19cb0:	f7fd ff98 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:100
    if (uxTaskGetNumberOfTasks() > maxTasks) {
   19cb4:	f7ff fb26 	bl	19304 <uxTaskGetNumberOfTasks>
   19cb8:	2810      	cmp	r0, #16
   19cba:	d904      	bls.n	19cc6 <taskListHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:101
        output.printf("** WARNING: Only reported first %u tasks\n", maxTasks);
   19cbc:	2210      	movs	r2, #16
   19cbe:	490a      	ldr	r1, [pc, #40]	; (19ce8 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   19cc0:	4638      	mov	r0, r7
   19cc2:	f7fd ff8f 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:105
}
   19cc6:	2001      	movs	r0, #1
   19cc8:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
   19ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cd0:	00025d20 	.word	0x00025d20
   19cd4:	000262ef 	.word	0x000262ef
   19cd8:	000262f4 	.word	0x000262f4
   19cdc:	0002631b 	.word	0x0002631b
   19ce0:	00026343 	.word	0x00026343
   19ce4:	00026338 	.word	0x00026338
   19ce8:	00026362 	.word	0x00026362

00019cec <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:108
{
   19cec:	b510      	push	{r4, lr}
   19cee:	460c      	mov	r4, r1
   19cf0:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:118
    sys_get_mem_info_str(buffer);
   19cf4:	4668      	mov	r0, sp
   19cf6:	f7f6 fbe7 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:119
    output.putline(buffer);
   19cfa:	4620      	mov	r0, r4
   19cfc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19d00:	4669      	mov	r1, sp
   19d02:	f7fd ff39 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:121
}
   19d06:	2001      	movs	r0, #1
   19d08:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   19d0c:	bd10      	pop	{r4, pc}
   19d0e:	Address 0x0000000000019d0e is out of bounds.


00019d10 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19d10:	b530      	push	{r4, r5, lr}
   19d12:	460c      	mov	r4, r1
   19d14:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   19d16:	492c      	ldr	r1, [pc, #176]	; (19dc8 <timeHandler(str&, CharDev&, void*)+0xb8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19d18:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   19d1a:	f7fc fec7 	bl	16aac <str::beginsWith(char const*) const>
   19d1e:	2800      	cmp	r0, #0
   19d20:	d048      	beq.n	19db4 <timeHandler(str&, CharDev&, void*)+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:190
        if( 7 != cmdParams.scanf("%*s %u %u %u %u %u %u %u", &m, &d, &y, &hr, &mn, &sc, &w))
   19d22:	ab0c      	add	r3, sp, #48	; 0x30
   19d24:	9304      	str	r3, [sp, #16]
   19d26:	ab0b      	add	r3, sp, #44	; 0x2c
   19d28:	9303      	str	r3, [sp, #12]
   19d2a:	ab0a      	add	r3, sp, #40	; 0x28
   19d2c:	9302      	str	r3, [sp, #8]
   19d2e:	ab09      	add	r3, sp, #36	; 0x24
   19d30:	9301      	str	r3, [sp, #4]
   19d32:	ab08      	add	r3, sp, #32
   19d34:	9300      	str	r3, [sp, #0]
   19d36:	aa06      	add	r2, sp, #24
   19d38:	ab07      	add	r3, sp, #28
   19d3a:	4924      	ldr	r1, [pc, #144]	; (19dcc <timeHandler(str&, CharDev&, void*)+0xbc>)
   19d3c:	4628      	mov	r0, r5
   19d3e:	f7fc fe1d 	bl	1697c <str::scanf(char const*, ...)>
   19d42:	2807      	cmp	r0, #7
   19d44:	d002      	beq.n	19d4c <timeHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:192
            return false;
   19d46:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:203
}
   19d48:	b011      	add	sp, #68	; 0x44
   19d4a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   19d4c:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   19d50:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   19d52:	a80d      	add	r0, sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   19d54:	f362 0303 	bfi	r3, r2, #0, #4
   19d58:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   19d5c:	9a07      	ldr	r2, [sp, #28]
   19d5e:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   19d62:	f362 0304 	bfi	r3, r2, #0, #5
   19d66:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   19d6a:	9a08      	ldr	r2, [sp, #32]
   19d6c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   19d70:	f362 030b 	bfi	r3, r2, #0, #12
   19d74:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:196
        time.hour = hr, time.min = mn; time.sec = sc;
   19d78:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19d7a:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   19d7e:	f362 0304 	bfi	r3, r2, #0, #5
   19d82:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   19d86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19d88:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   19d8c:	f362 0305 	bfi	r3, r2, #0, #6
   19d90:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   19d94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   19d96:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   19d9a:	f362 0305 	bfi	r3, r2, #0, #6
   19d9e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:197
        time.dow = w;
   19da2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   19da4:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   19da8:	f362 0302 	bfi	r3, r2, #0, #3
   19dac:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   19db0:	f7fd ffa2 	bl	17cf8 <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:201
    output.printf("%s", rtc_get_date_time_str());
   19db4:	f7fe f83c 	bl	17e30 <rtc_get_date_time_str>
   19db8:	4905      	ldr	r1, [pc, #20]	; (19dd0 <timeHandler(str&, CharDev&, void*)+0xc0>)
   19dba:	4602      	mov	r2, r0
   19dbc:	4620      	mov	r0, r4
   19dbe:	f7fd ff11 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:202
    return true;
   19dc2:	2001      	movs	r0, #1
   19dc4:	e7c0      	b.n	19d48 <timeHandler(str&, CharDev&, void*)+0x38>
   19dc6:	bf00      	nop
   19dc8:	00025f6a 	.word	0x00025f6a
   19dcc:	00025f6e 	.word	0x00025f6e
   19dd0:	00025676 	.word	0x00025676

00019dd4 <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   19dd4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19dd6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   19dd8:	4950      	ldr	r1, [pc, #320]	; (19f1c <logHandler(str&, CharDev&, void*)+0x148>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   19dda:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   19ddc:	f7fc ff55 	bl	16c8a <str::operator==(char const*) const>
   19de0:	4606      	mov	r6, r0
   19de2:	b150      	cbz	r0, 19dfa <logHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:210
        LOG_FLUSH();
   19de4:	f7fc fb4c 	bl	16480 <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:211
        output.putline("Log(s) have been flushed");
   19de8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19dec:	494c      	ldr	r1, [pc, #304]	; (19f20 <logHandler(str&, CharDev&, void*)+0x14c>)
   19dee:	4628      	mov	r0, r5
   19df0:	f7fd fec2 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:248
}
   19df4:	2001      	movs	r0, #1
   19df6:	b003      	add	sp, #12
   19df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:213
    else if (cmdParams == "status") {
   19dfa:	494a      	ldr	r1, [pc, #296]	; (19f24 <logHandler(str&, CharDev&, void*)+0x150>)
   19dfc:	4620      	mov	r0, r4
   19dfe:	f7fc ff44 	bl	16c8a <str::operator==(char const*) const>
   19e02:	b360      	cbz	r0, 19e5e <logHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:214
        output.printf("Blocked calls  : %u\n", logger_get_blocked_call_count());
   19e04:	f7fc fb60 	bl	164c8 <logger_get_blocked_call_count>
   19e08:	4947      	ldr	r1, [pc, #284]	; (19f28 <logHandler(str&, CharDev&, void*)+0x154>)
   19e0a:	4602      	mov	r2, r0
   19e0c:	4628      	mov	r0, r5
   19e0e:	f7fd fee9 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:215
        output.printf("Queue watermark: %u\n", logger_get_num_buffers_watermark());
   19e12:	f7fc fb65 	bl	164e0 <logger_get_num_buffers_watermark>
   19e16:	4945      	ldr	r1, [pc, #276]	; (19f2c <logHandler(str&, CharDev&, void*)+0x158>)
   19e18:	4602      	mov	r2, r0
   19e1a:	4628      	mov	r0, r5
   19e1c:	f7fd fee2 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:216
        output.printf("Highest file write time: %ums\n", logger_get_highest_file_write_time_ms());
   19e20:	f7fc fb58 	bl	164d4 <logger_get_highest_file_write_time_ms>
   19e24:	4942      	ldr	r1, [pc, #264]	; (19f30 <logHandler(str&, CharDev&, void*)+0x15c>)
   19e26:	4602      	mov	r2, r0
   19e28:	4628      	mov	r0, r5
   19e2a:	f7fd fedb 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:217
        output.printf("Call counts    : %u dgb %u info %u warn %u err\n",
   19e2e:	4630      	mov	r0, r6
   19e30:	f7fc fb40 	bl	164b4 <logger_get_logged_call_count>
   19e34:	4604      	mov	r4, r0
   19e36:	2001      	movs	r0, #1
   19e38:	f7fc fb3c 	bl	164b4 <logger_get_logged_call_count>
   19e3c:	4606      	mov	r6, r0
   19e3e:	2002      	movs	r0, #2
   19e40:	f7fc fb38 	bl	164b4 <logger_get_logged_call_count>
   19e44:	4607      	mov	r7, r0
   19e46:	2003      	movs	r0, #3
   19e48:	f7fc fb34 	bl	164b4 <logger_get_logged_call_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:221
                      logger_get_logged_call_count(log_error));
   19e4c:	9700      	str	r7, [sp, #0]
   19e4e:	9001      	str	r0, [sp, #4]
   19e50:	4633      	mov	r3, r6
   19e52:	4622      	mov	r2, r4
   19e54:	4937      	ldr	r1, [pc, #220]	; (19f34 <logHandler(str&, CharDev&, void*)+0x160>)
   19e56:	4628      	mov	r0, r5
   19e58:	f7fd fec4 	bl	17be4 <CharDev::printf(char const*, ...)>
   19e5c:	e7ca      	b.n	19df4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:223
    else if (cmdParams.beginsWith("raw")) {
   19e5e:	4936      	ldr	r1, [pc, #216]	; (19f38 <logHandler(str&, CharDev&, void*)+0x164>)
   19e60:	4620      	mov	r0, r4
   19e62:	f7fc fe23 	bl	16aac <str::beginsWith(char const*) const>
   19e66:	b150      	cbz	r0, 19e7e <logHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:224
        cmdParams.eraseFirstWords(1);
   19e68:	2220      	movs	r2, #32
   19e6a:	2101      	movs	r1, #1
   19e6c:	4620      	mov	r0, r4
   19e6e:	f7fc feba 	bl	16be6 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:225
        logger_log_raw(cmdParams());
   19e72:	4620      	mov	r0, r4
   19e74:	f7fc ff0b 	bl	16c8e <str::operator()() const>
   19e78:	f7fc fc48 	bl	1670c <logger_log_raw>
   19e7c:	e7ba      	b.n	19df4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227
    else if ( (enablePrintf = cmdParams.beginsWith("enable ")) || cmdParams.beginsWith("disable ")) {
   19e7e:	492f      	ldr	r1, [pc, #188]	; (19f3c <logHandler(str&, CharDev&, void*)+0x168>)
   19e80:	4620      	mov	r0, r4
   19e82:	f7fc fe13 	bl	16aac <str::beginsWith(char const*) const>
   19e86:	4606      	mov	r6, r0
   19e88:	b9f8      	cbnz	r0, 19eca <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227 (discriminator 2)
   19e8a:	492d      	ldr	r1, [pc, #180]	; (19f40 <logHandler(str&, CharDev&, void*)+0x16c>)
   19e8c:	4620      	mov	r0, r4
   19e8e:	f7fc fe0d 	bl	16aac <str::beginsWith(char const*) const>
   19e92:	b9d0      	cbnz	r0, 19eca <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:243
            LOG_INFO(cmdParams());
   19e94:	4620      	mov	r0, r4
   19e96:	f7fc fefa 	bl	16c8e <str::operator()() const>
   19e9a:	23f3      	movs	r3, #243	; 0xf3
   19e9c:	9000      	str	r0, [sp, #0]
   19e9e:	4a29      	ldr	r2, [pc, #164]	; (19f44 <logHandler(str&, CharDev&, void*)+0x170>)
   19ea0:	4929      	ldr	r1, [pc, #164]	; (19f48 <logHandler(str&, CharDev&, void*)+0x174>)
   19ea2:	2001      	movs	r0, #1
   19ea4:	f7fc fb96 	bl	165d4 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:245
        output.printf("Logged: |%s|\n", cmdParams());
   19ea8:	4620      	mov	r0, r4
   19eaa:	f7fc fef0 	bl	16c8e <str::operator()() const>
   19eae:	4927      	ldr	r1, [pc, #156]	; (19f4c <logHandler(str&, CharDev&, void*)+0x178>)
   19eb0:	4602      	mov	r2, r0
   19eb2:	4628      	mov	r0, r5
   19eb4:	f7fd fe96 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:247
    return true;
   19eb8:	e79c      	b.n	19df4 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   19eba:	2403      	movs	r4, #3
   19ebc:	e016      	b.n	19eec <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   19ebe:	2402      	movs	r4, #2
   19ec0:	e014      	b.n	19eec <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   19ec2:	4b23      	ldr	r3, [pc, #140]	; (19f50 <logHandler(str&, CharDev&, void*)+0x17c>)
   19ec4:	e024      	b.n	19f10 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   19ec6:	4b23      	ldr	r3, [pc, #140]	; (19f54 <logHandler(str&, CharDev&, void*)+0x180>)
   19ec8:	e022      	b.n	19f10 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   19eca:	4923      	ldr	r1, [pc, #140]	; (19f58 <logHandler(str&, CharDev&, void*)+0x184>)
   19ecc:	4620      	mov	r0, r4
   19ece:	f7fc fddb 	bl	16a88 <str::containsIgnoreCase(char const*) const>
   19ed2:	2800      	cmp	r0, #0
   19ed4:	d1f3      	bne.n	19ebe <logHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   19ed6:	4921      	ldr	r1, [pc, #132]	; (19f5c <logHandler(str&, CharDev&, void*)+0x188>)
   19ed8:	4620      	mov	r0, r4
   19eda:	f7fc fdd5 	bl	16a88 <str::containsIgnoreCase(char const*) const>
   19ede:	2800      	cmp	r0, #0
   19ee0:	d1eb      	bne.n	19eba <logHandler(str&, CharDev&, void*)+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:231
                            cmdParams.containsIgnoreCase("info")  ? log_info  : log_debug;
   19ee2:	4620      	mov	r0, r4
   19ee4:	491b      	ldr	r1, [pc, #108]	; (19f54 <logHandler(str&, CharDev&, void*)+0x180>)
   19ee6:	f7fc fdcf 	bl	16a88 <str::containsIgnoreCase(char const*) const>
   19eea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:233
        logger_set_printf(type, enablePrintf);
   19eec:	4631      	mov	r1, r6
   19eee:	4620      	mov	r0, r4
   19ef0:	f7fc fb62 	bl	165b8 <logger_set_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   19ef4:	4b1a      	ldr	r3, [pc, #104]	; (19f60 <logHandler(str&, CharDev&, void*)+0x18c>)
   19ef6:	4a1b      	ldr	r2, [pc, #108]	; (19f64 <logHandler(str&, CharDev&, void*)+0x190>)
   19ef8:	2e00      	cmp	r6, #0
   19efa:	bf08      	it	eq
   19efc:	461a      	moveq	r2, r3
   19efe:	2c00      	cmp	r4, #0
   19f00:	d0df      	beq.n	19ec2 <logHandler(str&, CharDev&, void*)+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   19f02:	2c01      	cmp	r4, #1
   19f04:	d0df      	beq.n	19ec6 <logHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236 (discriminator 1)
   19f06:	4915      	ldr	r1, [pc, #84]	; (19f5c <logHandler(str&, CharDev&, void*)+0x188>)
   19f08:	4b13      	ldr	r3, [pc, #76]	; (19f58 <logHandler(str&, CharDev&, void*)+0x184>)
   19f0a:	2c02      	cmp	r4, #2
   19f0c:	bf18      	it	ne
   19f0e:	460b      	movne	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
   19f10:	4915      	ldr	r1, [pc, #84]	; (19f68 <logHandler(str&, CharDev&, void*)+0x194>)
   19f12:	4628      	mov	r0, r5
   19f14:	f7fd fe66 	bl	17be4 <CharDev::printf(char const*, ...)>
   19f18:	e76c      	b.n	19df4 <logHandler(str&, CharDev&, void*)+0x20>
   19f1a:	bf00      	nop
   19f1c:	00025e2c 	.word	0x00025e2c
   19f20:	00025e32 	.word	0x00025e32
   19f24:	00025e4b 	.word	0x00025e4b
   19f28:	00025e52 	.word	0x00025e52
   19f2c:	00025e67 	.word	0x00025e67
   19f30:	00025e7c 	.word	0x00025e7c
   19f34:	00025e9b 	.word	0x00025e9b
   19f38:	00025ecb 	.word	0x00025ecb
   19f3c:	00025ecf 	.word	0x00025ecf
   19f40:	00025ed7 	.word	0x00025ed7
   19f44:	00026582 	.word	0x00026582
   19f48:	00025ef9 	.word	0x00025ef9
   19f4c:	00025f5c 	.word	0x00025f5c
   19f50:	00025a08 	.word	0x00025a08
   19f54:	00026cea 	.word	0x00026cea
   19f58:	00025a0e 	.word	0x00025a0e
   19f5c:	00025a13 	.word	0x00025a13
   19f60:	00025e23 	.word	0x00025e23
   19f64:	00025e1b 	.word	0x00025e1b
   19f68:	00025ee0 	.word	0x00025ee0

00019f6c <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   19f6c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   19f6e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   19f70:	b089      	sub	sp, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19f72:	ab04      	add	r3, sp, #16
   19f74:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   19f76:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19f78:	ab03      	add	r3, sp, #12
   19f7a:	2202      	movs	r2, #2
   19f7c:	4918      	ldr	r1, [pc, #96]	; (19fe0 <cpHandler(str&, CharDev&, void*)+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   19f7e:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:253
    char *dstFile = NULL;
   19f80:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   19f82:	f7fc fd09 	bl	16998 <str::tokenize(char const*, int, ...)>
   19f86:	2802      	cmp	r0, #2
   19f88:	d128      	bne.n	19fdc <cpHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   19f8a:	ab07      	add	r3, sp, #28
   19f8c:	9300      	str	r3, [sp, #0]
   19f8e:	aa05      	add	r2, sp, #20
   19f90:	ab06      	add	r3, sp, #24
   19f92:	9904      	ldr	r1, [sp, #16]
   19f94:	9803      	ldr	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:258
    unsigned int readTimeMs = 0;
   19f96:	9405      	str	r4, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:259
    unsigned int writeTimeMs = 0;
   19f98:	9406      	str	r4, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:260
    unsigned int bytesTransferred = 0;
   19f9a:	9407      	str	r4, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   19f9c:	f7fa fd05 	bl	149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:264
    if(FR_OK != copyStatus) {
   19fa0:	4602      	mov	r2, r0
   19fa2:	b148      	cbz	r0, 19fb8 <cpHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:265
        output.printf("Error %u copying |%s| -> |%s|\n", copyStatus, srcFile, dstFile);
   19fa4:	9b04      	ldr	r3, [sp, #16]
   19fa6:	490f      	ldr	r1, [pc, #60]	; (19fe4 <cpHandler(str&, CharDev&, void*)+0x78>)
   19fa8:	9300      	str	r3, [sp, #0]
   19faa:	4628      	mov	r0, r5
   19fac:	9b03      	ldr	r3, [sp, #12]
   19fae:	f7fd fe19 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:272
    return true;
   19fb2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:273
}
   19fb4:	b009      	add	sp, #36	; 0x24
   19fb6:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   19fb8:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   19fba:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   19fbc:	2a00      	cmp	r2, #0
   19fbe:	bf08      	it	eq
   19fc0:	2201      	moveq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   19fc2:	2b00      	cmp	r3, #0
   19fc4:	bf08      	it	eq
   19fc6:	2301      	moveq	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:268
        output.printf("Finished!  Read: %u Kb/sec, Write: %u Kb/sec\n",
   19fc8:	9907      	ldr	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   19fca:	4628      	mov	r0, r5
   19fcc:	fbb1 f3f3 	udiv	r3, r1, r3
   19fd0:	fbb1 f2f2 	udiv	r2, r1, r2
   19fd4:	4904      	ldr	r1, [pc, #16]	; (19fe8 <cpHandler(str&, CharDev&, void*)+0x7c>)
   19fd6:	f7fd fe05 	bl	17be4 <CharDev::printf(char const*, ...)>
   19fda:	e7ea      	b.n	19fb2 <cpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:255
        return false;
   19fdc:	4620      	mov	r0, r4
   19fde:	e7e9      	b.n	19fb4 <cpHandler(str&, CharDev&, void*)+0x48>
   19fe0:	00026c6f 	.word	0x00026c6f
   19fe4:	0002645a 	.word	0x0002645a
   19fe8:	00026479 	.word	0x00026479

00019fec <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   19fec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   19ff0:	460e      	mov	r6, r1
   19ff2:	f5ad 6d85 	sub.w	sp, sp, #1064	; 0x428
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   19ff6:	4938      	ldr	r1, [pc, #224]	; (1a0d8 <catHandler(str&, CharDev&, void*)+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   19ff8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   19ffa:	f7fc fde0 	bl	16bbe <str::erase(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   19ffe:	4937      	ldr	r1, [pc, #220]	; (1a0dc <catHandler(str&, CharDev&, void*)+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   1a000:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   1a002:	4628      	mov	r0, r5
   1a004:	f7fc fe04 	bl	16c10 <str::trimStart(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:280
    cmdParams.trimEnd(" ");
   1a008:	4934      	ldr	r1, [pc, #208]	; (1a0dc <catHandler(str&, CharDev&, void*)+0xf0>)
   1a00a:	4628      	mov	r0, r5
   1a00c:	f7fc fe20 	bl	16c50 <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:290
    if(FR_OK != f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   1a010:	4628      	mov	r0, r5
   1a012:	f7fc fe3c 	bl	16c8e <str::operator()() const>
   1a016:	2201      	movs	r2, #1
   1a018:	4601      	mov	r1, r0
   1a01a:	a881      	add	r0, sp, #516	; 0x204
   1a01c:	f7f8 fdb6 	bl	12b8c <f_open>
   1a020:	4604      	mov	r4, r0
   1a022:	b160      	cbz	r0, 1a03e <catHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:292
        output.printf("Failed to open: %s\n", cmdParams());
   1a024:	4628      	mov	r0, r5
   1a026:	f7fc fe32 	bl	16c8e <str::operator()() const>
   1a02a:	492d      	ldr	r1, [pc, #180]	; (1a0e0 <catHandler(str&, CharDev&, void*)+0xf4>)
   1a02c:	4602      	mov	r2, r0
   1a02e:	4630      	mov	r0, r6
   1a030:	f7fd fdd8 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:327
}
   1a034:	2001      	movs	r0, #1
   1a036:	f50d 6d85 	add.w	sp, sp, #1064	; 0x428
   1a03a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:297
        char buffer[512] = { 0 };
   1a03e:	f10d 0a04 	add.w	sl, sp, #4
   1a042:	4601      	mov	r1, r0
   1a044:	f44f 7200 	mov.w	r2, #512	; 0x200
   1a048:	4650      	mov	r0, sl
   1a04a:	f004 fa91 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:298
        UINT bytesRead = 0;
   1a04e:	9400      	str	r4, [sp, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   1a050:	f7f6 fa24 	bl	1049c <sys_get_uptime_us>
   1a054:	4680      	mov	r8, r0
   1a056:	4689      	mov	r9, r1
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302
        while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   1a058:	466b      	mov	r3, sp
   1a05a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1a05e:	4651      	mov	r1, sl
   1a060:	a881      	add	r0, sp, #516	; 0x204
   1a062:	f7f8 fe2a 	bl	12cba <f_read>
   1a066:	b908      	cbnz	r0, 1a06c <catHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302 (discriminator 1)
   1a068:	9b00      	ldr	r3, [sp, #0]
   1a06a:	bb23      	cbnz	r3, 1a0b6 <catHandler(str&, CharDev&, void*)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:317
        f_close(&file);
   1a06c:	a881      	add	r0, sp, #516	; 0x204
   1a06e:	f7f8 fff7 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:319
        if(!printToScreen) {
   1a072:	b1cf      	cbz	r7, 1a0a8 <catHandler(str&, CharDev&, void*)+0xbc>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1a074:	f7f6 fa12 	bl	1049c <sys_get_uptime_us>
   1a078:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a07c:	2300      	movs	r3, #0
   1a07e:	f003 fafd 	bl	1d67c <__aeabi_uldivmod>
   1a082:	2300      	movs	r3, #0
   1a084:	4605      	mov	r5, r0
   1a086:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a08a:	4640      	mov	r0, r8
   1a08c:	4649      	mov	r1, r9
   1a08e:	f003 faf5 	bl	1d67c <__aeabi_uldivmod>
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:322
                          totalBytesRead/(0 == timeTaken  ? 1 : timeTaken));
   1a092:	1a28      	subs	r0, r5, r0
   1a094:	bf14      	ite	ne
   1a096:	4603      	movne	r3, r0
   1a098:	2301      	moveq	r3, #1
   1a09a:	4622      	mov	r2, r4
   1a09c:	fbb4 f3f3 	udiv	r3, r4, r3
   1a0a0:	4910      	ldr	r1, [pc, #64]	; (1a0e4 <catHandler(str&, CharDev&, void*)+0xf8>)
   1a0a2:	4630      	mov	r0, r6
   1a0a4:	f7fd fd9e 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:324
        output.putline("");
   1a0a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a0ac:	490e      	ldr	r1, [pc, #56]	; (1a0e8 <catHandler(str&, CharDev&, void*)+0xfc>)
   1a0ae:	4630      	mov	r0, r6
   1a0b0:	f7fd fd62 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
   1a0b4:	e7be      	b.n	1a034 <catHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:304
            totalBytesRead += bytesRead;
   1a0b6:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:306
            if(printToScreen) {
   1a0b8:	2f00      	cmp	r7, #0
   1a0ba:	d1cd      	bne.n	1a058 <catHandler(str&, CharDev&, void*)+0x6c>
   1a0bc:	463d      	mov	r5, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 3)
                for (UINT i = 0; i < bytesRead; i++) {
   1a0be:	9b00      	ldr	r3, [sp, #0]
   1a0c0:	429d      	cmp	r5, r3
   1a0c2:	d2c9      	bcs.n	1a058 <catHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:308 (discriminator 2)
                    output.putChar(buffer[i]);
   1a0c4:	6833      	ldr	r3, [r6, #0]
   1a0c6:	f81a 1005 	ldrb.w	r1, [sl, r5]
   1a0ca:	685b      	ldr	r3, [r3, #4]
   1a0cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a0d0:	4630      	mov	r0, r6
   1a0d2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 2)
                for (UINT i = 0; i < bytesRead; i++) {
   1a0d4:	3501      	adds	r5, #1
   1a0d6:	e7f2      	b.n	1a0be <catHandler(str&, CharDev&, void*)+0xd2>
   1a0d8:	00025d34 	.word	0x00025d34
   1a0dc:	00026c6f 	.word	0x00026c6f
   1a0e0:	00025d3d 	.word	0x00025d3d
   1a0e4:	00025d51 	.word	0x00025d51
   1a0e8:	00026c08 	.word	0x00026c08

0001a0ec <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a0ec:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   1a0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0f2:	460c      	mov	r4, r1
   1a0f4:	b0c1      	sub	sp, #260	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a0f6:	4956      	ldr	r1, [pc, #344]	; (1a250 <lsHandler(str&, CharDev&, void*)+0x164>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   1a0f8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a0fa:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a0fc:	f7fc fdc5 	bl	16c8a <str::operator==(char const*) const>
   1a100:	b998      	cbnz	r0, 1a12a <lsHandler(str&, CharDev&, void*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341 (discriminator 2)
   1a102:	4628      	mov	r0, r5
   1a104:	f7fc fdc3 	bl	16c8e <str::operator()() const>
   1a108:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:342 (discriminator 4)
    if (FR_OK != (returnCode = f_opendir(&Dir, dirPath))) {
   1a10a:	4631      	mov	r1, r6
   1a10c:	a817      	add	r0, sp, #92	; 0x5c
   1a10e:	f7f9 f860 	bl	131d2 <f_opendir>
   1a112:	4605      	mov	r5, r0
   1a114:	b158      	cbz	r0, 1a12e <lsHandler(str&, CharDev&, void*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:343
        output.printf("Invalid directory: |%s| (Error %i)\n", dirPath, returnCode);
   1a116:	4603      	mov	r3, r0
   1a118:	4632      	mov	r2, r6
   1a11a:	494e      	ldr	r1, [pc, #312]	; (1a254 <lsHandler(str&, CharDev&, void*)+0x168>)
   1a11c:	4620      	mov	r0, r4
   1a11e:	f7fd fd61 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:404
}
   1a122:	2001      	movs	r0, #1
   1a124:	b041      	add	sp, #260	; 0x104
   1a126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a12a:	4e4b      	ldr	r6, [pc, #300]	; (1a258 <lsHandler(str&, CharDev&, void*)+0x16c>)
   1a12c:	e7ed      	b.n	1a10a <lsHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:360
    output.printf("Directory listing of: %s\n\n", dirPath);
   1a12e:	4632      	mov	r2, r6
   1a130:	494a      	ldr	r1, [pc, #296]	; (1a25c <lsHandler(str&, CharDev&, void*)+0x170>)
   1a132:	4620      	mov	r0, r4
   1a134:	f7fd fd56 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a138:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a13a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 1a26c <lsHandler(str&, CharDev&, void*)+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   1a13e:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a140:	f10d 0880 	add.w	r8, sp, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   1a144:	a90f      	add	r1, sp, #60	; 0x3c
   1a146:	a817      	add	r0, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a148:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   1a14c:	9316      	str	r3, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   1a14e:	f7f9 f883 	bl	13258 <f_readdir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369
        if ( (FR_OK != returnCode) || !Finfo.fname[0]) {
   1a152:	2800      	cmp	r0, #0
   1a154:	d163      	bne.n	1a21e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369 (discriminator 1)
   1a156:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
   1a15a:	2b00      	cmp	r3, #0
   1a15c:	d05f      	beq.n	1a21e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   1a15e:	f89d 1044 	ldrb.w	r1, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:387
                (Finfo.ftime >> 11), (Finfo.ftime >> 5) & 63,
   1a162:	f8bd 0042 	ldrh.w	r0, [sp, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   1a166:	06ca      	lsls	r2, r1, #27
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   1a168:	bf5b      	ittet	pl
   1a16a:	9b0e      	ldrpl	r3, [sp, #56]	; 0x38
   1a16c:	9a0f      	ldrpl	r2, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a16e:	2244      	movmi	r2, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   1a170:	189b      	addpl	r3, r3, r2
   1a172:	bf5b      	ittet	pl
   1a174:	930e      	strpl	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a176:	222d      	movpl	r2, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:374
            numDirs++;
   1a178:	3501      	addmi	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:377
            numFiles++;
   1a17a:	3701      	addpl	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a17c:	f011 0f01 	tst.w	r1, #1
   1a180:	bf14      	ite	ne
   1a182:	2352      	movne	r3, #82	; 0x52
   1a184:	232d      	moveq	r3, #45	; 0x2d
   1a186:	f011 0f02 	tst.w	r1, #2
   1a18a:	bf14      	ite	ne
   1a18c:	f04f 0e48 	movne.w	lr, #72	; 0x48
   1a190:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   1a194:	f011 0f04 	tst.w	r1, #4
   1a198:	bf14      	ite	ne
   1a19a:	f04f 0c53 	movne.w	ip, #83	; 0x53
   1a19e:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   1a1a2:	f011 0f20 	tst.w	r1, #32
   1a1a6:	bf14      	ite	ne
   1a1a8:	f04f 0a41 	movne.w	sl, #65	; 0x41
   1a1ac:	f04f 0a2d 	moveq.w	sl, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   1a1b0:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a1b4:	f10d 0b45 	add.w	fp, sp, #69	; 0x45
   1a1b8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a1bc:	f3c0 1b45 	ubfx	fp, r0, #5, #6
   1a1c0:	12c0      	asrs	r0, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a1c2:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a1c4:	f001 001f 	and.w	r0, r1, #31
   1a1c8:	930b      	str	r3, [sp, #44]	; 0x2c
   1a1ca:	9005      	str	r0, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a1cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a1ce:	f3c1 1043 	ubfx	r0, r1, #5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   1a1d2:	1249      	asrs	r1, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a1d4:	f201 71bc 	addw	r1, r1, #1980	; 0x7bc
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a1d8:	f8cd c004 	str.w	ip, [sp, #4]
   1a1dc:	f8cd e000 	str.w	lr, [sp]
   1a1e0:	9308      	str	r3, [sp, #32]
   1a1e2:	9004      	str	r0, [sp, #16]
   1a1e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a1e6:	9103      	str	r1, [sp, #12]
   1a1e8:	f8cd b01c 	str.w	fp, [sp, #28]
   1a1ec:	4649      	mov	r1, r9
   1a1ee:	f8cd a008 	str.w	sl, [sp, #8]
   1a1f2:	4620      	mov	r0, r4
   1a1f4:	f7fd fcf6 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:392
        output.put(" - ");
   1a1f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a1fc:	4918      	ldr	r1, [pc, #96]	; (1a260 <lsHandler(str&, CharDev&, void*)+0x174>)
   1a1fe:	4620      	mov	r0, r4
   1a200:	f7fd fca6 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:393
        output.put(Lfname);
   1a204:	4641      	mov	r1, r8
   1a206:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a20a:	4620      	mov	r0, r4
   1a20c:	f7fd fca0 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:395
        output.putline("");
   1a210:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a214:	490e      	ldr	r1, [pc, #56]	; (1a250 <lsHandler(str&, CharDev&, void*)+0x164>)
   1a216:	4620      	mov	r0, r4
   1a218:	f7fd fcae 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a21c:	e78f      	b.n	1a13e <lsHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:397
    output.printf("\n%4u File(s), %10d bytes total\n%4d Dir(s)", numFiles, fileBytesTotal, numDirs);
   1a21e:	463a      	mov	r2, r7
   1a220:	4910      	ldr	r1, [pc, #64]	; (1a264 <lsHandler(str&, CharDev&, void*)+0x178>)
   1a222:	9500      	str	r5, [sp, #0]
   1a224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a226:	4620      	mov	r0, r4
   1a228:	f7fd fcdc 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:399
    if (f_getfree(dirPath, (DWORD*) &fileBytesTotal, &fs) == FR_OK)
   1a22c:	aa0d      	add	r2, sp, #52	; 0x34
   1a22e:	a90e      	add	r1, sp, #56	; 0x38
   1a230:	4630      	mov	r0, r6
   1a232:	f7f9 f840 	bl	132b6 <f_getfree>
   1a236:	2800      	cmp	r0, #0
   1a238:	f47f af73 	bne.w	1a122 <lsHandler(str&, CharDev&, void*)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:401
        output.printf(", %10dK bytes free\n", fileBytesTotal * fs->csize / 2);
   1a23c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a23e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a240:	789b      	ldrb	r3, [r3, #2]
   1a242:	4909      	ldr	r1, [pc, #36]	; (1a268 <lsHandler(str&, CharDev&, void*)+0x17c>)
   1a244:	435a      	muls	r2, r3
   1a246:	4620      	mov	r0, r4
   1a248:	0852      	lsrs	r2, r2, #1
   1a24a:	f7fd fccb 	bl	17be4 <CharDev::printf(char const*, ...)>
   1a24e:	e768      	b.n	1a122 <lsHandler(str&, CharDev&, void*)+0x36>
   1a250:	00026c08 	.word	0x00026c08
   1a254:	000264aa 	.word	0x000264aa
   1a258:	000264a7 	.word	0x000264a7
   1a25c:	000264ce 	.word	0x000264ce
   1a260:	00026516 	.word	0x00026516
   1a264:	0002651a 	.word	0x0002651a
   1a268:	00026544 	.word	0x00026544
   1a26c:	000264e9 	.word	0x000264e9

0001a270 <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:407
{
   1a270:	b570      	push	{r4, r5, r6, lr}
   1a272:	460c      	mov	r4, r1
   1a274:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:408
    output.printf("Create directory '%s' : %s\n",
   1a276:	f7fc fd0a 	bl	16c8e <str::operator()() const>
   1a27a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:409
                   cmdParams(), (FR_OK == f_mkdir(cmdParams())) ? "OK" : "ERROR");
   1a27c:	4630      	mov	r0, r6
   1a27e:	f7fc fd06 	bl	16c8e <str::operator()() const>
   1a282:	f7f9 f8db 	bl	1343c <f_mkdir>
   1a286:	4a06      	ldr	r2, [pc, #24]	; (1a2a0 <mkdirHandler(str&, CharDev&, void*)+0x30>)
   1a288:	4b06      	ldr	r3, [pc, #24]	; (1a2a4 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   1a28a:	4907      	ldr	r1, [pc, #28]	; (1a2a8 <mkdirHandler(str&, CharDev&, void*)+0x38>)
   1a28c:	2800      	cmp	r0, #0
   1a28e:	bf08      	it	eq
   1a290:	4613      	moveq	r3, r2
   1a292:	462a      	mov	r2, r5
   1a294:	4620      	mov	r0, r4
   1a296:	f7fd fca5 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:411
}
   1a29a:	2001      	movs	r0, #1
   1a29c:	bd70      	pop	{r4, r5, r6, pc}
   1a29e:	bf00      	nop
   1a2a0:	00026262 	.word	0x00026262
   1a2a4:	0002626c 	.word	0x0002626c
   1a2a8:	0002608e 	.word	0x0002608e

0001a2ac <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:414
{
   1a2ac:	b570      	push	{r4, r5, r6, lr}
   1a2ae:	460c      	mov	r4, r1
   1a2b0:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:415
    output.printf("Delete '%s' : %s\n",
   1a2b2:	f7fc fcec 	bl	16c8e <str::operator()() const>
   1a2b6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:416
                  cmdParams(), (FR_OK == f_unlink(cmdParams())) ? "OK" : "ERROR");
   1a2b8:	4630      	mov	r0, r6
   1a2ba:	f7fc fce8 	bl	16c8e <str::operator()() const>
   1a2be:	f7f9 f85e 	bl	1337e <f_unlink>
   1a2c2:	4a06      	ldr	r2, [pc, #24]	; (1a2dc <rmHandler(str&, CharDev&, void*)+0x30>)
   1a2c4:	4b06      	ldr	r3, [pc, #24]	; (1a2e0 <rmHandler(str&, CharDev&, void*)+0x34>)
   1a2c6:	4907      	ldr	r1, [pc, #28]	; (1a2e4 <rmHandler(str&, CharDev&, void*)+0x38>)
   1a2c8:	2800      	cmp	r0, #0
   1a2ca:	bf08      	it	eq
   1a2cc:	4613      	moveq	r3, r2
   1a2ce:	462a      	mov	r2, r5
   1a2d0:	4620      	mov	r0, r4
   1a2d2:	f7fd fc87 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:418
}
   1a2d6:	2001      	movs	r0, #1
   1a2d8:	bd70      	pop	{r4, r5, r6, pc}
   1a2da:	bf00      	nop
   1a2dc:	00026262 	.word	0x00026262
   1a2e0:	0002626c 	.word	0x0002626c
   1a2e4:	00026570 	.word	0x00026570

0001a2e8 <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   1a2e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   1a2ea:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a2ec:	ab03      	add	r3, sp, #12
   1a2ee:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   1a2f0:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a2f2:	ab02      	add	r3, sp, #8
   1a2f4:	2202      	movs	r2, #2
   1a2f6:	490f      	ldr	r1, [pc, #60]	; (1a334 <mvHandler(str&, CharDev&, void*)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   1a2f8:	9402      	str	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:478
    char *dstFile = NULL;
   1a2fa:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a2fc:	f7fc fb4c 	bl	16998 <str::tokenize(char const*, int, ...)>
   1a300:	2802      	cmp	r0, #2
   1a302:	d115      	bne.n	1a330 <mvHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a304:	9c02      	ldr	r4, [sp, #8]
   1a306:	9d03      	ldr	r5, [sp, #12]
   1a308:	4620      	mov	r0, r4
   1a30a:	4629      	mov	r1, r5
   1a30c:	f7f9 f93f 	bl	1358e <f_rename>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   1a310:	4b09      	ldr	r3, [pc, #36]	; (1a338 <mvHandler(str&, CharDev&, void*)+0x50>)
   1a312:	490a      	ldr	r1, [pc, #40]	; (1a33c <mvHandler(str&, CharDev&, void*)+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a314:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   1a316:	2800      	cmp	r0, #0
   1a318:	bf0c      	ite	eq
   1a31a:	4608      	moveq	r0, r1
   1a31c:	4618      	movne	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a31e:	462b      	mov	r3, r5
   1a320:	9000      	str	r0, [sp, #0]
   1a322:	4907      	ldr	r1, [pc, #28]	; (1a340 <mvHandler(str&, CharDev&, void*)+0x58>)
   1a324:	4630      	mov	r0, r6
   1a326:	f7fd fc5d 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:487
    return true;
   1a32a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:488
}
   1a32c:	b004      	add	sp, #16
   1a32e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:480
        return false;
   1a330:	4620      	mov	r0, r4
   1a332:	e7fb      	b.n	1a32c <mvHandler(str&, CharDev&, void*)+0x44>
   1a334:	00026c6f 	.word	0x00026c6f
   1a338:	0002626c 	.word	0x0002626c
   1a33c:	00026262 	.word	0x00026262
   1a340:	00026558 	.word	0x00026558

0001a344 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:491
{
   1a344:	b530      	push	{r4, r5, lr}
   1a346:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   1a34a:	460c      	mov	r4, r1
   1a34c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:496
    if (FR_OK != f_open(&file, cmdParams(), FA_WRITE | FA_CREATE_ALWAYS)) {
   1a34e:	f7fc fc9e 	bl	16c8e <str::operator()() const>
   1a352:	220a      	movs	r2, #10
   1a354:	4601      	mov	r1, r0
   1a356:	a803      	add	r0, sp, #12
   1a358:	f7f8 fc18 	bl	12b8c <f_open>
   1a35c:	b158      	cbz	r0, 1a376 <newFileHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:497
        output.printf("Unable to open '%s' to write the file\n", cmdParams());
   1a35e:	4628      	mov	r0, r5
   1a360:	f7fc fc95 	bl	16c8e <str::operator()() const>
   1a364:	4921      	ldr	r1, [pc, #132]	; (1a3ec <newFileHandler(str&, CharDev&, void*)+0xa8>)
   1a366:	4602      	mov	r2, r0
   1a368:	4620      	mov	r0, r4
   1a36a:	f7fd fc3b 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:517
}
   1a36e:	2001      	movs	r0, #1
   1a370:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   1a374:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:501
    char c = 0;
   1a376:	f88d 0007 	strb.w	r0, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:502
    UINT bw = 0;
   1a37a:	9002      	str	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:503
    output.printf("End the file by using %c character.  %i is the timeout\n", end_file, timeout_ms);
   1a37c:	f242 7310 	movw	r3, #10000	; 0x2710
   1a380:	227e      	movs	r2, #126	; 0x7e
   1a382:	491b      	ldr	r1, [pc, #108]	; (1a3f0 <newFileHandler(str&, CharDev&, void*)+0xac>)
   1a384:	4620      	mov	r0, r4
   1a386:	f7fd fc2d 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:504
    output.printf("Sorry, no backspace support :(\n");
   1a38a:	491a      	ldr	r1, [pc, #104]	; (1a3f4 <newFileHandler(str&, CharDev&, void*)+0xb0>)
   1a38c:	4620      	mov	r0, r4
   1a38e:	f7fd fc29 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   1a392:	4d19      	ldr	r5, [pc, #100]	; (1a3f8 <newFileHandler(str&, CharDev&, void*)+0xb4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506
    while (output.getChar(&c, timeout_ms) && c != end_file) {
   1a394:	6823      	ldr	r3, [r4, #0]
   1a396:	f242 7210 	movw	r2, #10000	; 0x2710
   1a39a:	681b      	ldr	r3, [r3, #0]
   1a39c:	f10d 0107 	add.w	r1, sp, #7
   1a3a0:	4620      	mov	r0, r4
   1a3a2:	4798      	blx	r3
   1a3a4:	b118      	cbz	r0, 1a3ae <newFileHandler(str&, CharDev&, void*)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506 (discriminator 1)
   1a3a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1a3aa:	2b7e      	cmp	r3, #126	; 0x7e
   1a3ac:	d10f      	bne.n	1a3ce <newFileHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:515
    f_close(&file);
   1a3ae:	a803      	add	r0, sp, #12
   1a3b0:	f7f8 fe56 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:516
    return true;
   1a3b4:	e7db      	b.n	1a36e <newFileHandler(str&, CharDev&, void*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507 (discriminator 2)
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   1a3b6:	9b02      	ldr	r3, [sp, #8]
   1a3b8:	2b01      	cmp	r3, #1
   1a3ba:	d111      	bne.n	1a3e0 <newFileHandler(str&, CharDev&, void*)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:511
            output.putChar(c);
   1a3bc:	6823      	ldr	r3, [r4, #0]
   1a3be:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a3c2:	685b      	ldr	r3, [r3, #4]
   1a3c4:	f89d 1007 	ldrb.w	r1, [sp, #7]
   1a3c8:	4620      	mov	r0, r4
   1a3ca:	4798      	blx	r3
   1a3cc:	e7e2      	b.n	1a394 <newFileHandler(str&, CharDev&, void*)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   1a3ce:	ab02      	add	r3, sp, #8
   1a3d0:	2201      	movs	r2, #1
   1a3d2:	f10d 0107 	add.w	r1, sp, #7
   1a3d6:	a803      	add	r0, sp, #12
   1a3d8:	f7f8 fd27 	bl	12e2a <f_write>
   1a3dc:	2800      	cmp	r0, #0
   1a3de:	d0ea      	beq.n	1a3b6 <newFileHandler(str&, CharDev&, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   1a3e0:	4629      	mov	r1, r5
   1a3e2:	4620      	mov	r0, r4
   1a3e4:	f7fd fbfe 	bl	17be4 <CharDev::printf(char const*, ...)>
   1a3e8:	e7d4      	b.n	1a394 <newFileHandler(str&, CharDev&, void*)+0x50>
   1a3ea:	bf00      	nop
   1a3ec:	000261b5 	.word	0x000261b5
   1a3f0:	000261dc 	.word	0x000261dc
   1a3f4:	00026214 	.word	0x00026214
   1a3f8:	00026234 	.word	0x00026234

0001a3fc <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   1a3fc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   1a3fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a402:	f5ad 7d43 	sub.w	sp, sp, #780	; 0x30c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:529
    char *dstDir = NULL;
   1a406:	ac06      	add	r4, sp, #24
   1a408:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   1a40a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   1a40c:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:530
    if(2 != cmdParams.tokenize(" ", 2, &srcDir, &dstDir)) {
   1a40e:	9400      	str	r4, [sp, #0]
   1a410:	ab05      	add	r3, sp, #20
   1a412:	2202      	movs	r2, #2
   1a414:	4940      	ldr	r1, [pc, #256]	; (1a518 <dcpHandler(str&, CharDev&, void*)+0x11c>)
   1a416:	f7fc fabf 	bl	16998 <str::tokenize(char const*, int, ...)>
   1a41a:	2802      	cmp	r0, #2
   1a41c:	d00a      	beq.n	1a434 <dcpHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:531
        output.putline("ERROR: Give me source and destination directory separated by a space");
   1a41e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a422:	493e      	ldr	r1, [pc, #248]	; (1a51c <dcpHandler(str&, CharDev&, void*)+0x120>)
   1a424:	4630      	mov	r0, r6
   1a426:	f7fd fba7 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:572
}
   1a42a:	2001      	movs	r0, #1
   1a42c:	f50d 7d43 	add.w	sp, sp, #780	; 0x30c
   1a430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:536
    if (FR_OK != (returnCode = f_opendir(&Dir, dstDir))) {
   1a434:	6821      	ldr	r1, [r4, #0]
   1a436:	a819      	add	r0, sp, #100	; 0x64
   1a438:	f7f8 fecb 	bl	131d2 <f_opendir>
   1a43c:	b128      	cbz	r0, 1a44a <dcpHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:537
        output.printf("Invalid destination directory: |%s|\n", dstDir);
   1a43e:	6822      	ldr	r2, [r4, #0]
   1a440:	4937      	ldr	r1, [pc, #220]	; (1a520 <dcpHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   1a442:	4630      	mov	r0, r6
   1a444:	f7fd fbce 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:543
        return true;
   1a448:	e7ef      	b.n	1a42a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:541
    if (FR_OK != (returnCode = f_opendir(&Dir, srcDir))) {
   1a44a:	9905      	ldr	r1, [sp, #20]
   1a44c:	a819      	add	r0, sp, #100	; 0x64
   1a44e:	f7f8 fec0 	bl	131d2 <f_opendir>
   1a452:	b110      	cbz	r0, 1a45a <dcpHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   1a454:	9a05      	ldr	r2, [sp, #20]
   1a456:	4933      	ldr	r1, [pc, #204]	; (1a524 <dcpHandler(str&, CharDev&, void*)+0x128>)
   1a458:	e7f3      	b.n	1a442 <dcpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   1a45a:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a45e:	a942      	add	r1, sp, #264	; 0x108
   1a460:	a807      	add	r0, sp, #28
   1a462:	f7fc fa5b 	bl	1691c <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   1a466:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a46a:	a982      	add	r1, sp, #520	; 0x208
   1a46c:	a80c      	add	r0, sp, #48	; 0x30
   1a46e:	f7fc fa55 	bl	1691c <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   1a472:	4f2d      	ldr	r7, [pc, #180]	; (1a528 <dcpHandler(str&, CharDev&, void*)+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   1a474:	f10d 0a88 	add.w	sl, sp, #136	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   1a478:	f04f 0880 	mov.w	r8, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   1a47c:	a911      	add	r1, sp, #68	; 0x44
   1a47e:	a819      	add	r0, sp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   1a480:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   1a484:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   1a488:	f7f8 fee6 	bl	13258 <f_readdir>
   1a48c:	b910      	cbnz	r0, 1a494 <dcpHandler(str&, CharDev&, void*)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556 (discriminator 2)
   1a48e:	f89d 304d 	ldrb.w	r3, [sp, #77]	; 0x4d
   1a492:	b933      	cbnz	r3, 1a4a2 <dcpHandler(str&, CharDev&, void*)+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   1a494:	a80c      	add	r0, sp, #48	; 0x30
   1a496:	f7fc fa55 	bl	16944 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   1a49a:	a807      	add	r0, sp, #28
   1a49c:	f7fc fa52 	bl	16944 <str::~str()>
   1a4a0:	e7c3      	b.n	1a42a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:561
        if (!(Finfo.fattrib & AM_DIR))
   1a4a2:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
   1a4a6:	f015 0510 	ands.w	r5, r5, #16
   1a4aa:	d1e7      	bne.n	1a47c <dcpHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   1a4ac:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   1a4b0:	9a05      	ldr	r2, [sp, #20]
   1a4b2:	4639      	mov	r1, r7
   1a4b4:	a807      	add	r0, sp, #28
   1a4b6:	f7fc fc34 	bl	16d22 <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:564
            dst.printf("%s/%s", dstDir, Finfo.fname);
   1a4ba:	6822      	ldr	r2, [r4, #0]
   1a4bc:	4639      	mov	r1, r7
   1a4be:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   1a4c2:	a80c      	add	r0, sp, #48	; 0x30
   1a4c4:	f7fc fc2d 	bl	16d22 <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a4c8:	a807      	add	r0, sp, #28
   1a4ca:	f7fc fbe0 	bl	16c8e <str::operator()() const>
   1a4ce:	4680      	mov	r8, r0
   1a4d0:	a80c      	add	r0, sp, #48	; 0x30
   1a4d2:	f7fc fbdc 	bl	16c8e <str::operator()() const>
   1a4d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1a4d8:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a4da:	a807      	add	r0, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a4dc:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a4de:	f7fc fbd6 	bl	16c8e <str::operator()() const>
   1a4e2:	4683      	mov	fp, r0
   1a4e4:	a80c      	add	r0, sp, #48	; 0x30
   1a4e6:	f7fc fbd2 	bl	16c8e <str::operator()() const>
   1a4ea:	462b      	mov	r3, r5
   1a4ec:	462a      	mov	r2, r5
   1a4ee:	4601      	mov	r1, r0
   1a4f0:	9500      	str	r5, [sp, #0]
   1a4f2:	4658      	mov	r0, fp
   1a4f4:	f7fa fa59 	bl	149aa <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a4f8:	4b0c      	ldr	r3, [pc, #48]	; (1a52c <dcpHandler(str&, CharDev&, void*)+0x130>)
   1a4fa:	4a0d      	ldr	r2, [pc, #52]	; (1a530 <dcpHandler(str&, CharDev&, void*)+0x134>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a4fc:	490d      	ldr	r1, [pc, #52]	; (1a534 <dcpHandler(str&, CharDev&, void*)+0x138>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a4fe:	2800      	cmp	r0, #0
   1a500:	bf18      	it	ne
   1a502:	461a      	movne	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a504:	9b03      	ldr	r3, [sp, #12]
   1a506:	9201      	str	r2, [sp, #4]
   1a508:	9300      	str	r3, [sp, #0]
   1a50a:	4642      	mov	r2, r8
   1a50c:	464b      	mov	r3, r9
   1a50e:	4630      	mov	r0, r6
   1a510:	f7fd fb68 	bl	17be4 <CharDev::printf(char const*, ...)>
   1a514:	e7b0      	b.n	1a478 <dcpHandler(str&, CharDev&, void*)+0x7c>
   1a516:	bf00      	nop
   1a518:	00026c6f 	.word	0x00026c6f
   1a51c:	00025d6c 	.word	0x00025d6c
   1a520:	00025db1 	.word	0x00025db1
   1a524:	00025dd6 	.word	0x00025dd6
   1a528:	00025df6 	.word	0x00025df6
   1a52c:	0002626c 	.word	0x0002626c
   1a530:	00026262 	.word	0x00026262
   1a534:	00025dfc 	.word	0x00025dfc

0001a538 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   1a538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a53a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   1a53c:	4923      	ldr	r1, [pc, #140]	; (1a5cc <storageHandler(str&, CharDev&, void*)+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   1a53e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   1a540:	f7fc fba3 	bl	16c8a <str::operator==(char const*) const>
   1a544:	4604      	mov	r4, r0
   1a546:	b198      	cbz	r0, 1a570 <storageHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
        output.putline((FR_OK == Storage::getSDDrive().format()) ? "Format OK" : "Format ERROR");
   1a548:	f7ff fb36 	bl	19bb8 <Storage::getSDDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1a54c:	2200      	movs	r2, #0
   1a54e:	f200 2035 	addw	r0, r0, #565	; 0x235
   1a552:	4611      	mov	r1, r2
   1a554:	f7f9 f8aa 	bl	136ac <f_mkfs>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
   1a558:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a55c:	4b1c      	ldr	r3, [pc, #112]	; (1a5d0 <storageHandler(str&, CharDev&, void*)+0x98>)
   1a55e:	491d      	ldr	r1, [pc, #116]	; (1a5d4 <storageHandler(str&, CharDev&, void*)+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   1a560:	2800      	cmp	r0, #0
   1a562:	bf18      	it	ne
   1a564:	4619      	movne	r1, r3
   1a566:	4628      	mov	r0, r5
   1a568:	f7fd fb06 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:592
}
   1a56c:	4620      	mov	r0, r4
   1a56e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:579
    else if(cmdParams == "format flash") {
   1a570:	4919      	ldr	r1, [pc, #100]	; (1a5d8 <storageHandler(str&, CharDev&, void*)+0xa0>)
   1a572:	4630      	mov	r0, r6
   1a574:	f7fc fb89 	bl	16c8a <str::operator==(char const*) const>
   1a578:	4604      	mov	r4, r0
   1a57a:	b110      	cbz	r0, 1a582 <storageHandler(str&, CharDev&, void*)+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:580
        output.putline((FR_OK == Storage::getFlashDrive().format()) ? "Format OK" : "Format ERROR");
   1a57c:	f7ff faf6 	bl	19b6c <Storage::getFlashDrive()>
   1a580:	e7e4      	b.n	1a54c <storageHandler(str&, CharDev&, void*)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:582
    else if(cmdParams == "mount sd") {
   1a582:	4916      	ldr	r1, [pc, #88]	; (1a5dc <storageHandler(str&, CharDev&, void*)+0xa4>)
   1a584:	4630      	mov	r0, r6
   1a586:	f7fc fb80 	bl	16c8a <str::operator==(char const*) const>
   1a58a:	4604      	mov	r4, r0
   1a58c:	b158      	cbz	r0, 1a5a6 <storageHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
        output.putline(FR_OK == Storage::getSDDrive().mount() ? "SD Card mounted" : "Error mounting SD Card");
   1a58e:	f7ff fb13 	bl	19bb8 <Storage::getSDDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   1a592:	2201      	movs	r2, #1
   1a594:	f200 2135 	addw	r1, r0, #565	; 0x235
   1a598:	f7f8 faba 	bl	12b10 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
   1a59c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a5a0:	4b0f      	ldr	r3, [pc, #60]	; (1a5e0 <storageHandler(str&, CharDev&, void*)+0xa8>)
   1a5a2:	4910      	ldr	r1, [pc, #64]	; (1a5e4 <storageHandler(str&, CharDev&, void*)+0xac>)
   1a5a4:	e7dc      	b.n	1a560 <storageHandler(str&, CharDev&, void*)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:585
    else if(cmdParams == "mount flash") {
   1a5a6:	4910      	ldr	r1, [pc, #64]	; (1a5e8 <storageHandler(str&, CharDev&, void*)+0xb0>)
   1a5a8:	4630      	mov	r0, r6
   1a5aa:	f7fc fb6e 	bl	16c8a <str::operator==(char const*) const>
   1a5ae:	4604      	mov	r4, r0
   1a5b0:	2800      	cmp	r0, #0
   1a5b2:	d0db      	beq.n	1a56c <storageHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   1a5b4:	f7ff fada 	bl	19b6c <Storage::getFlashDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
   1a5b8:	2201      	movs	r2, #1
   1a5ba:	f200 2135 	addw	r1, r0, #565	; 0x235
   1a5be:	f7f8 faa7 	bl	12b10 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
   1a5c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a5c6:	4b09      	ldr	r3, [pc, #36]	; (1a5ec <storageHandler(str&, CharDev&, void*)+0xb4>)
   1a5c8:	4909      	ldr	r1, [pc, #36]	; (1a5f0 <storageHandler(str&, CharDev&, void*)+0xb8>)
   1a5ca:	e7c9      	b.n	1a560 <storageHandler(str&, CharDev&, void*)+0x28>
   1a5cc:	000262c3 	.word	0x000262c3
   1a5d0:	00026265 	.word	0x00026265
   1a5d4:	0002625b 	.word	0x0002625b
   1a5d8:	000262cd 	.word	0x000262cd
   1a5dc:	000262da 	.word	0x000262da
   1a5e0:	00026282 	.word	0x00026282
   1a5e4:	00026272 	.word	0x00026272
   1a5e8:	000262e3 	.word	0x000262e3
   1a5ec:	000262a7 	.word	0x000262a7
   1a5f0:	00026299 	.word	0x00026299

0001a5f4 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:595
{
   1a5f4:	b508      	push	{r3, lr}
   1a5f6:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:596
    output.putline("Rebooting System");
   1a5f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a5fc:	4908      	ldr	r1, [pc, #32]	; (1a620 <rebootHandler(str&, CharDev&, void*)+0x2c>)
   1a5fe:	f7fd fabb 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:599
    LOG_FLUSH();
   1a602:	f7fb ff3d 	bl	16480 <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:601
    vTaskDelayMs(2000);
   1a606:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1a60a:	f7fe ff9f 	bl	1954c <vTaskDelay>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1a60e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1a612:	22aa      	movs	r2, #170	; 0xaa
   1a614:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1a616:	2200      	movs	r2, #0
   1a618:	701a      	strb	r2, [r3, #0]
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:605
}
   1a61a:	2001      	movs	r0, #1
   1a61c:	bd08      	pop	{r3, pc}
   1a61e:	bf00      	nop
   1a620:	00026155 	.word	0x00026155

0001a624 <telemetryHandler(str&, CharDev&, void*)>:
_Z16telemetryHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:618
        s++;
    }
}

CMD_HANDLER_FUNC(telemetryHandler)
{
   1a624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a628:	b0c4      	sub	sp, #272	; 0x110
   1a62a:	4607      	mov	r7, r0
   1a62c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:619
    if(cmdParams.getLen() == 0)
   1a62e:	f7fc f99c 	bl	1696a <str::getLen() const>
   1a632:	4602      	mov	r2, r0
   1a634:	b938      	cbnz	r0, 1a646 <telemetryHandler(str&, CharDev&, void*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
    {
        tlm_stream_all(stream_tlm, &output, false);
    }
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
    {
        tlm_stream_all(stream_tlm, &output, true);
   1a636:	4621      	mov	r1, r4
   1a638:	483e      	ldr	r0, [pc, #248]	; (1a734 <telemetryHandler(str&, CharDev&, void*)+0x110>)
   1a63a:	f7fa fca3 	bl	14f84 <tlm_stream_all>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:665
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
            }
        }
    }
    return true;
}
   1a63e:	2001      	movs	r0, #1
   1a640:	b044      	add	sp, #272	; 0x110
   1a642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:623
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
   1a646:	493c      	ldr	r1, [pc, #240]	; (1a738 <telemetryHandler(str&, CharDev&, void*)+0x114>)
   1a648:	4638      	mov	r0, r7
   1a64a:	f7fc fa46 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   1a64e:	b108      	cbz	r0, 1a654 <telemetryHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
        tlm_stream_all(stream_tlm, &output, true);
   1a650:	2201      	movs	r2, #1
   1a652:	e7f0      	b.n	1a636 <telemetryHandler(str&, CharDev&, void*)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:627
    else if(cmdParams == "save") {
   1a654:	4939      	ldr	r1, [pc, #228]	; (1a73c <telemetryHandler(str&, CharDev&, void*)+0x118>)
   1a656:	4638      	mov	r0, r7
   1a658:	f7fc fb17 	bl	16c8a <str::operator==(char const*) const>
   1a65c:	4680      	mov	r8, r0
   1a65e:	b1a0      	cbz	r0, 1a68a <telemetryHandler(str&, CharDev&, void*)+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:628
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   1a660:	4937      	ldr	r1, [pc, #220]	; (1a740 <telemetryHandler(str&, CharDev&, void*)+0x11c>)
   1a662:	4838      	ldr	r0, [pc, #224]	; (1a744 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   1a664:	f003 fc60 	bl	1df28 <fopen>
   1a668:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:629
        tlm_stream_one_file(tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME), fd);
   1a66a:	4836      	ldr	r0, [pc, #216]	; (1a744 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   1a66c:	f7fa fd8e 	bl	1518c <tlm_component_get_by_name>
   1a670:	4629      	mov	r1, r5
   1a672:	f7fa fc95 	bl	14fa0 <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:630
        fclose(fd);
   1a676:	4628      	mov	r0, r5
   1a678:	f003 f9fc 	bl	1da74 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:631
        output.putline("Telemetry was saved to disk");
   1a67c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a680:	4931      	ldr	r1, [pc, #196]	; (1a748 <telemetryHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   1a682:	4620      	mov	r0, r4
   1a684:	f7fd fa78 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
   1a688:	e7d9      	b.n	1a63e <telemetryHandler(str&, CharDev&, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:633
    else if(cmdParams.beginsWithIgnoreCase("get")) {
   1a68a:	4930      	ldr	r1, [pc, #192]	; (1a74c <telemetryHandler(str&, CharDev&, void*)+0x128>)
   1a68c:	4638      	mov	r0, r7
   1a68e:	f7fc fa24 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   1a692:	ad02      	add	r5, sp, #8
   1a694:	ae03      	add	r6, sp, #12
   1a696:	b328      	cbz	r0, 1a6e4 <telemetryHandler(str&, CharDev&, void*)+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:634
        char *compName = NULL;
   1a698:	f8c5 8000 	str.w	r8, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:635
        char *varName = NULL;
   1a69c:	f8c6 8000 	str.w	r8, [r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:636
        if (3 == cmdParams.tokenize(" ", 3, NULL, &compName, &varName)) {
   1a6a0:	4643      	mov	r3, r8
   1a6a2:	e88d 0060 	stmia.w	sp, {r5, r6}
   1a6a6:	2203      	movs	r2, #3
   1a6a8:	4929      	ldr	r1, [pc, #164]	; (1a750 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   1a6aa:	4638      	mov	r0, r7
   1a6ac:	f7fc f974 	bl	16998 <str::tokenize(char const*, int, ...)>
   1a6b0:	2803      	cmp	r0, #3
   1a6b2:	d113      	bne.n	1a6dc <telemetryHandler(str&, CharDev&, void*)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:637
            char buffer[256] = { 0 };
   1a6b4:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a6b8:	4641      	mov	r1, r8
   1a6ba:	a804      	add	r0, sp, #16
   1a6bc:	f003 ff58 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   1a6c0:	aa04      	add	r2, sp, #16
   1a6c2:	f44f 7380 	mov.w	r3, #256	; 0x100
   1a6c6:	6831      	ldr	r1, [r6, #0]
   1a6c8:	6828      	ldr	r0, [r5, #0]
   1a6ca:	f7fb f93b 	bl	15944 <tlm_variable_get_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   1a6ce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   1a6d2:	b108      	cbz	r0, 1a6d8 <telemetryHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   1a6d4:	a904      	add	r1, sp, #16
   1a6d6:	e7d4      	b.n	1a682 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:642
                output.putline("Error locating or printing variable value");
   1a6d8:	491e      	ldr	r1, [pc, #120]	; (1a754 <telemetryHandler(str&, CharDev&, void*)+0x130>)
   1a6da:	e7d2      	b.n	1a682 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:646
            output.putline("Required parameters: 'get <comp name> <var name>");
   1a6dc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a6e0:	491d      	ldr	r1, [pc, #116]	; (1a758 <telemetryHandler(str&, CharDev&, void*)+0x134>)
   1a6e2:	e7ce      	b.n	1a682 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   1a6e4:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:650
        char *compName = NULL;
   1a6e8:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:651
        char *varName = NULL;
   1a6ea:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   1a6ec:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:653
        if (3 != cmdParams.tokenize(" ", 3, &compName, &varName, &varVal)) {
   1a6f0:	462b      	mov	r3, r5
   1a6f2:	e88d 0140 	stmia.w	sp, {r6, r8}
   1a6f6:	2203      	movs	r2, #3
   1a6f8:	4915      	ldr	r1, [pc, #84]	; (1a750 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   1a6fa:	4638      	mov	r0, r7
   1a6fc:	f7fc f94c 	bl	16998 <str::tokenize(char const*, int, ...)>
   1a700:	2803      	cmp	r0, #3
   1a702:	d003      	beq.n	1a70c <telemetryHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   1a704:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a708:	4914      	ldr	r1, [pc, #80]	; (1a75c <telemetryHandler(str&, CharDev&, void*)+0x138>)
   1a70a:	e7ba      	b.n	1a682 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a70c:	f8d8 2000 	ldr.w	r2, [r8]
   1a710:	6831      	ldr	r1, [r6, #0]
   1a712:	6828      	ldr	r0, [r5, #0]
   1a714:	f7fa fe18 	bl	15348 <tlm_variable_set_value>
   1a718:	f8d8 3000 	ldr.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a71c:	9300      	str	r3, [sp, #0]
   1a71e:	6833      	ldr	r3, [r6, #0]
   1a720:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a722:	b120      	cbz	r0, 1a72e <telemetryHandler(str&, CharDev&, void*)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a724:	490e      	ldr	r1, [pc, #56]	; (1a760 <telemetryHandler(str&, CharDev&, void*)+0x13c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:660
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
   1a726:	4620      	mov	r0, r4
   1a728:	f7fd fa5c 	bl	17be4 <CharDev::printf(char const*, ...)>
   1a72c:	e787      	b.n	1a63e <telemetryHandler(str&, CharDev&, void*)+0x1a>
   1a72e:	490d      	ldr	r1, [pc, #52]	; (1a764 <telemetryHandler(str&, CharDev&, void*)+0x140>)
   1a730:	e7f9      	b.n	1a726 <telemetryHandler(str&, CharDev&, void*)+0x102>
   1a732:	bf00      	nop
   1a734:	00019b51 	.word	0x00019b51
   1a738:	0002638c 	.word	0x0002638c
   1a73c:	00026392 	.word	0x00026392
   1a740:	00025ecd 	.word	0x00025ecd
   1a744:	000263ae 	.word	0x000263ae
   1a748:	00026397 	.word	0x00026397
   1a74c:	000263b3 	.word	0x000263b3
   1a750:	00026c6f 	.word	0x00026c6f
   1a754:	000263b7 	.word	0x000263b7
   1a758:	000263e1 	.word	0x000263e1
   1a75c:	00026412 	.word	0x00026412
   1a760:	0002642e 	.word	0x0002642e
   1a764:	0002643f 	.word	0x0002643f

0001a768 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
#endif

CMD_HANDLER_FUNC(learnIrHandler)
{
   1a768:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a76a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
{
   1a76c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a76e:	f7fb fd71 	bl	16254 <scheduler_task::getSharedObject(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:672

    if (learn_sem)
   1a772:	b160      	cbz	r0, 1a78e <learnIrHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:674
    {
        xSemaphoreGive(learn_sem);
   1a774:	2300      	movs	r3, #0
   1a776:	461a      	mov	r2, r3
   1a778:	4619      	mov	r1, r3
   1a77a:	f7fe fa01 	bl	18b80 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:675
        output.putline("Learning mode enabled");
   1a77e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a782:	4905      	ldr	r1, [pc, #20]	; (1a798 <learnIrHandler(str&, CharDev&, void*)+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
    }
    else
    {
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a784:	4620      	mov	r0, r4
   1a786:	f7fd f9f7 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:683
    }

    return true;
}
   1a78a:	2001      	movs	r0, #1
   1a78c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a78e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a792:	4902      	ldr	r1, [pc, #8]	; (1a79c <learnIrHandler(str&, CharDev&, void*)+0x34>)
   1a794:	e7f6      	b.n	1a784 <learnIrHandler(str&, CharDev&, void*)+0x1c>
   1a796:	bf00      	nop
   1a798:	00026166 	.word	0x00026166
   1a79c:	0002617c 	.word	0x0002617c

0001a7a0 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1a7a0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a7a2:	4c06      	ldr	r4, [pc, #24]	; (1a7bc <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   1a7a4:	6823      	ldr	r3, [r4, #0]
   1a7a6:	b93b      	cbnz	r3, 1a7b8 <SingletonTemplate<I2C2>::getInstance()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a7a8:	f44f 7094 	mov.w	r0, #296	; 0x128
   1a7ac:	f7fc fb60 	bl	16e70 <operator new(unsigned int)>
   1a7b0:	4605      	mov	r5, r0
   1a7b2:	f7fd fee1 	bl	18578 <I2C2::I2C2()>
   1a7b6:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1a7b8:	6820      	ldr	r0, [r4, #0]
   1a7ba:	bd38      	pop	{r3, r4, r5, pc}
   1a7bc:	2007c5f8 	.word	0x2007c5f8

0001a7c0 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
{
   1a7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a7c4:	4c60      	ldr	r4, [pc, #384]	; (1a948 <healthHandler(str&, CharDev&, void*)+0x188>)
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1a7c6:	b091      	sub	sp, #68	; 0x44
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1a7c8:	6823      	ldr	r3, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1a7ca:	460e      	mov	r6, r1
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1a7cc:	b933      	cbnz	r3, 1a7dc <healthHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a7ce:	202c      	movs	r0, #44	; 0x2c
   1a7d0:	f7fc fb4e 	bl	16e70 <operator new(unsigned int)>
   1a7d4:	4605      	mov	r5, r0
   1a7d6:	f7fd fd9b 	bl	18310 <Uart0::Uart0()>
   1a7da:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:107
        return *(classType*)mpSingletonInstance;
   1a7dc:	6827      	ldr	r7, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:129
    Storage::getFlashDrive().getDriveInfo(&total, &available);
   1a7de:	f7ff f9c5 	bl	19b6c <Storage::getFlashDrive()>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1a7e2:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1a7e4:	aa0c      	add	r2, sp, #48	; 0x30
   1a7e6:	a90d      	add	r1, sp, #52	; 0x34
   1a7e8:	f200 2035 	addw	r0, r0, #565	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1a7ec:	940d      	str	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1a7ee:	f7f8 fd62 	bl	132b6 <f_getfree>
   1a7f2:	2800      	cmp	r0, #0
   1a7f4:	d14f      	bne.n	1a896 <healthHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a7f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1a7f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a7fa:	789d      	ldrb	r5, [r3, #2]
   1a7fc:	699b      	ldr	r3, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1a7fe:	436c      	muls	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1a800:	3b02      	subs	r3, #2
   1a802:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1a804:	0864      	lsrs	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1a806:	086d      	lsrs	r5, r5, #1
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a808:	4b50      	ldr	r3, [pc, #320]	; (1a94c <healthHandler(str&, CharDev&, void*)+0x18c>)
   1a80a:	681a      	ldr	r2, [r3, #0]
   1a80c:	4698      	mov	r8, r3
   1a80e:	b97a      	cbnz	r2, 1a830 <healthHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a810:	200c      	movs	r0, #12
   1a812:	f7fc fb2d 	bl	16e70 <operator new(unsigned int)>
   1a816:	4681      	mov	r9, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   1a818:	f7ff ffc2 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1a81c:	2390      	movs	r3, #144	; 0x90
   1a81e:	f889 3004 	strb.w	r3, [r9, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   1a822:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1a824:	f8c9 0000 	str.w	r0, [r9]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1a828:	f8c9 3008 	str.w	r3, [r9, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1a82c:	f8c8 9000 	str.w	r9, [r8]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:131
    float floatTemp = TS.getFarenheit();
   1a830:	f8d8 0000 	ldr.w	r0, [r8]
   1a834:	f7fa fad8 	bl	14de8 <I2C_Temp::getFarenheit()>
   1a838:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:132
    int floatSig1 = (int) floatTemp;
   1a83a:	f002 fed9 	bl	1d5f0 <__aeabi_f2iz>
   1a83e:	900a      	str	r0, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:133
    int floatDec1 = ((floatTemp - floatSig1) * 10);
   1a840:	f002 fd32 	bl	1d2a8 <__aeabi_i2f>
   1a844:	4601      	mov	r1, r0
   1a846:	4648      	mov	r0, r9
   1a848:	f002 fc78 	bl	1d13c <__aeabi_fsub>
   1a84c:	4940      	ldr	r1, [pc, #256]	; (1a950 <healthHandler(str&, CharDev&, void*)+0x190>)
   1a84e:	f002 fd7f 	bl	1d350 <__aeabi_fmul>
   1a852:	f002 fecd 	bl	1d5f0 <__aeabi_f2iz>
   1a856:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:134
    rtc_t bt = sys_get_boot_time();
   1a858:	a80d      	add	r0, sp, #52	; 0x34
   1a85a:	f7f5 fcd7 	bl	1020c <sys_get_boot_time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:138
    if (flash_supports_metadata())
   1a85e:	f7f9 ffed 	bl	1483c <flash_supports_metadata>
   1a862:	2800      	cmp	r0, #0
   1a864:	d069      	beq.n	1a93a <healthHandler(str&, CharDev&, void*)+0x17a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:140
        spi1_lock();
   1a866:	f7fd fde1 	bl	1842c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1a86a:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1a86e:	f7f9 ffcf 	bl	14810 <flash_get_page_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:137
    unsigned int highestPageWrCnt = 0;
   1a872:	46d3      	mov	fp, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1a874:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:136
    unsigned int highestWrCnt = 0;
   1a876:	46d0      	mov	r8, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144 (discriminator 1)
        for (unsigned int i = 0; i < pages; i++) {
   1a878:	459a      	cmp	sl, r3
   1a87a:	930b      	str	r3, [sp, #44]	; 0x2c
   1a87c:	d00d      	beq.n	1a89a <healthHandler(str&, CharDev&, void*)+0xda>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:145
            const unsigned int wrCount = flash_get_page_write_count(i);
   1a87e:	4650      	mov	r0, sl
   1a880:	f7fa f82a 	bl	148d8 <flash_get_page_write_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:146
            if (wrCount > highestWrCnt) {
   1a884:	4580      	cmp	r8, r0
   1a886:	bf38      	it	cc
   1a888:	46d3      	movcc	fp, sl
   1a88a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a88c:	bf38      	it	cc
   1a88e:	4680      	movcc	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1a890:	f10a 0a01 	add.w	sl, sl, #1
   1a894:	e7f0      	b.n	1a878 <healthHandler(str&, CharDev&, void*)+0xb8>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:70
            *pTotalDriveSpaceKB = 0;
   1a896:	4625      	mov	r5, r4
   1a898:	e7b6      	b.n	1a808 <healthHandler(str&, CharDev&, void*)+0x48>
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:151
        spi1_unlock();
   1a89a:	f7fd fddf 	bl	1845c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1a89e:	2364      	movs	r3, #100	; 0x64
   1a8a0:	fb03 f308 	mul.w	r3, r3, r8
   1a8a4:	4a2b      	ldr	r2, [pc, #172]	; (1a954 <healthHandler(str&, CharDev&, void*)+0x194>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1a8a6:	f8cd 8008 	str.w	r8, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1a8aa:	fbb3 f3f2 	udiv	r3, r3, r2
   1a8ae:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1a8b2:	9300      	str	r3, [sp, #0]
   1a8b4:	f8cd b004 	str.w	fp, [sp, #4]
   1a8b8:	462b      	mov	r3, r5
   1a8ba:	4622      	mov	r2, r4
   1a8bc:	4926      	ldr	r1, [pc, #152]	; (1a958 <healthHandler(str&, CharDev&, void*)+0x198>)
   1a8be:	4630      	mov	r0, r6
   1a8c0:	f7fd f990 	bl	17be4 <CharDev::printf(char const*, ...)>
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1a8c4:	4c25      	ldr	r4, [pc, #148]	; (1a95c <healthHandler(str&, CharDev&, void*)+0x19c>)
   1a8c6:	6823      	ldr	r3, [r4, #0]
   1a8c8:	b91b      	cbnz	r3, 1a8d2 <healthHandler(str&, CharDev&, void*)+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1a8ca:	2001      	movs	r0, #1
   1a8cc:	f7fc fad0 	bl	16e70 <operator new(unsigned int)>
   1a8d0:	6020      	str	r0, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:168
                    LS.getRawValue(),
   1a8d2:	6820      	ldr	r0, [r4, #0]
   1a8d4:	f7fa fa4c 	bl	14d70 <Light_Sensor::getRawValue()>
   1a8d8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a8da:	f7fd faa9 	bl	17e30 <rtc_get_date_time_str>
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
        inline unsigned int getTxQueueWatermark() const { return mTxQWatermark; }
   1a8de:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a8e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
   1a8e2:	9309      	str	r3, [sp, #36]	; 0x24
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
        inline unsigned int getRxQueueWatermark() const { return mRxQWatermark; }
   1a8e4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
   1a8e6:	491e      	ldr	r1, [pc, #120]	; (1a960 <healthHandler(str&, CharDev&, void*)+0x1a0>)
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
   1a8e8:	9308      	str	r3, [sp, #32]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a8ea:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a8ee:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a8f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a8f4:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a8f6:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a8fa:	9400      	str	r4, [sp, #0]
   1a8fc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a900:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a902:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a906:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a908:	f003 031f 	and.w	r3, r3, #31
   1a90c:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a90e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a912:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1a916:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a918:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a91c:	f003 031f 	and.w	r3, r3, #31
   1a920:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1a922:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1a926:	f003 030f 	and.w	r3, r3, #15
   1a92a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1a92c:	464b      	mov	r3, r9
   1a92e:	f7fd f959 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:177
}
   1a932:	2001      	movs	r0, #1
   1a934:	b011      	add	sp, #68	; 0x44
   1a936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:159
        output.printf("Flash: %u/%u\n", available, total);
   1a93a:	462b      	mov	r3, r5
   1a93c:	4622      	mov	r2, r4
   1a93e:	4909      	ldr	r1, [pc, #36]	; (1a964 <healthHandler(str&, CharDev&, void*)+0x1a4>)
   1a940:	4630      	mov	r0, r6
   1a942:	f7fd f94f 	bl	17be4 <CharDev::printf(char const*, ...)>
   1a946:	e7bd      	b.n	1a8c4 <healthHandler(str&, CharDev&, void*)+0x104>
   1a948:	2007c5f0 	.word	0x2007c5f0
   1a94c:	2007c75c 	.word	0x2007c75c
   1a950:	41200000 	.word	0x41200000
   1a954:	000186a0 	.word	0x000186a0
   1a958:	000260aa 	.word	0x000260aa
   1a95c:	2007c760 	.word	0x2007c760
   1a960:	000260ec 	.word	0x000260ec
   1a964:	000260de 	.word	0x000260de

0001a968 <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1a968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a96c:	460c      	mov	r4, r1
   1a96e:	b0c7      	sub	sp, #284	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a970:	4957      	ldr	r1, [pc, #348]	; (1aad0 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1a972:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a974:	f7fc f8b1 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a978:	4956      	ldr	r1, [pc, #344]	; (1aad4 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1a97a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a97c:	4648      	mov	r0, r9
   1a97e:	f7fc f8ac 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a982:	4955      	ldr	r1, [pc, #340]	; (1aad8 <i2cIoHandler(str&, CharDev&, void*)+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1a984:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a986:	4648      	mov	r0, r9
   1a988:	f7fc f8a7 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1a98c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1a98e:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1a992:	ad05      	add	r5, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1a994:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1a996:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:427
    int reg = 0;
   1a998:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1a99a:	f8c8 6000 	str.w	r6, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1a99e:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:431
    if (read) {
   1a9a0:	2f00      	cmp	r7, #0
   1a9a2:	d04b      	beq.n	1aa3c <i2cIoHandler(str&, CharDev&, void*)+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:432
        if (cmdParams.scanf("%*s %0x %0x %u", &addr, &reg, &count) < 2) {
   1a9a4:	9500      	str	r5, [sp, #0]
   1a9a6:	ab03      	add	r3, sp, #12
   1a9a8:	aa02      	add	r2, sp, #8
   1a9aa:	494c      	ldr	r1, [pc, #304]	; (1aadc <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   1a9ac:	4648      	mov	r0, r9
   1a9ae:	f7fb ffe5 	bl	1697c <str::scanf(char const*, ...)>
   1a9b2:	2801      	cmp	r0, #1
   1a9b4:	dc0a      	bgt.n	1a9cc <i2cIoHandler(str&, CharDev&, void*)+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:433
            output.putline("Need device and register address");
   1a9b6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a9ba:	4949      	ldr	r1, [pc, #292]	; (1aae0 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   1a9bc:	4620      	mov	r0, r4
   1a9be:	f7fd f8db 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:434
            return false;
   1a9c2:	4637      	mov	r7, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:473
}
   1a9c4:	4638      	mov	r0, r7
   1a9c6:	b047      	add	sp, #284	; 0x11c
   1a9c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:437
        uint8_t buffer[256] = { 0 };
   1a9cc:	f44f 7980 	mov.w	r9, #256	; 0x100
   1a9d0:	f10d 0818 	add.w	r8, sp, #24
   1a9d4:	464a      	mov	r2, r9
   1a9d6:	4631      	mov	r1, r6
   1a9d8:	4640      	mov	r0, r8
   1a9da:	f003 fdc9 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:438
        if (count <= 0) {
   1a9de:	682b      	ldr	r3, [r5, #0]
   1a9e0:	bb33      	cbnz	r3, 1aa30 <i2cIoHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:439
            count = 1;
   1a9e2:	2301      	movs	r3, #1
   1a9e4:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:445
        bool ok = I2C2::getInstance().readRegisters(addr, reg, &buffer[0], count);
   1a9e6:	f7ff fedb 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1a9ea:	682b      	ldr	r3, [r5, #0]
   1a9ec:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1a9f0:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1a9f4:	9300      	str	r3, [sp, #0]
   1a9f6:	4643      	mov	r3, r8
   1a9f8:	f7fc fdd4 	bl	175a4 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:446
        output.printf("Read status from device %#2X: %s: \n", addr, ok ? "OK" : "ERROR");
   1a9fc:	4a39      	ldr	r2, [pc, #228]	; (1aae4 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   1a9fe:	4b3a      	ldr	r3, [pc, #232]	; (1aae8 <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   1aa00:	493a      	ldr	r1, [pc, #232]	; (1aaec <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   1aa02:	2800      	cmp	r0, #0
   1aa04:	bf18      	it	ne
   1aa06:	4613      	movne	r3, r2
   1aa08:	9a02      	ldr	r2, [sp, #8]
   1aa0a:	4620      	mov	r0, r4
   1aa0c:	f7fd f8ea 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447
        for (unsigned int i = 0; i < count; i++) {
   1aa10:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1aa12:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 1ab04 <i2cIoHandler(str&, CharDev&, void*)+0x19c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 3)
        for (unsigned int i = 0; i < count; i++) {
   1aa16:	682b      	ldr	r3, [r5, #0]
   1aa18:	429e      	cmp	r6, r3
   1aa1a:	d2d3      	bcs.n	1a9c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448 (discriminator 2)
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1aa1c:	9a03      	ldr	r2, [sp, #12]
   1aa1e:	f818 3006 	ldrb.w	r3, [r8, r6]
   1aa22:	4432      	add	r2, r6
   1aa24:	4649      	mov	r1, r9
   1aa26:	4620      	mov	r0, r4
   1aa28:	f7fd f8dc 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 2)
        for (unsigned int i = 0; i < count; i++) {
   1aa2c:	3601      	adds	r6, #1
   1aa2e:	e7f2      	b.n	1aa16 <i2cIoHandler(str&, CharDev&, void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:441
        else if (count > sizeof(buffer)) {
   1aa30:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:442
            count = sizeof(buffer);
   1aa34:	bf88      	it	hi
   1aa36:	f8c5 9000 	strhi.w	r9, [r5]
   1aa3a:	e7d4      	b.n	1a9e6 <i2cIoHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:451
    else if (write) {
   1aa3c:	f1bb 0f00 	cmp.w	fp, #0
   1aa40:	d02c      	beq.n	1aa9c <i2cIoHandler(str&, CharDev&, void*)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:452
        if (3 != cmdParams.scanf("%*s %0x %0x %0x", &addr, &reg, &data)) {
   1aa42:	f8cd 8000 	str.w	r8, [sp]
   1aa46:	ab03      	add	r3, sp, #12
   1aa48:	aa02      	add	r2, sp, #8
   1aa4a:	4929      	ldr	r1, [pc, #164]	; (1aaf0 <i2cIoHandler(str&, CharDev&, void*)+0x188>)
   1aa4c:	4648      	mov	r0, r9
   1aa4e:	f7fb ff95 	bl	1697c <str::scanf(char const*, ...)>
   1aa52:	2803      	cmp	r0, #3
   1aa54:	d006      	beq.n	1aa64 <i2cIoHandler(str&, CharDev&, void*)+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:453
            output.putline("Need device, register address and data");
   1aa56:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aa5a:	4926      	ldr	r1, [pc, #152]	; (1aaf4 <i2cIoHandler(str&, CharDev&, void*)+0x18c>)
   1aa5c:	4620      	mov	r0, r4
   1aa5e:	f7fd f88b 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:454
            return false;
   1aa62:	e7af      	b.n	1a9c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:457
        if (I2C2::getInstance().writeReg(addr, reg, data)) {
   1aa64:	f7ff fe9c 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1aa68:	f898 3000 	ldrb.w	r3, [r8]
   1aa6c:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1aa70:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1aa74:	f7fc fdad 	bl	175d2 <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>
   1aa78:	b150      	cbz	r0, 1aa90 <i2cIoHandler(str&, CharDev&, void*)+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:458
            output.printf("Wrote %#2X to %#2X::%#2X\n", data, addr, reg);
   1aa7a:	9b03      	ldr	r3, [sp, #12]
   1aa7c:	491e      	ldr	r1, [pc, #120]	; (1aaf8 <i2cIoHandler(str&, CharDev&, void*)+0x190>)
   1aa7e:	9300      	str	r3, [sp, #0]
   1aa80:	f8d8 2000 	ldr.w	r2, [r8]
   1aa84:	9b02      	ldr	r3, [sp, #8]
   1aa86:	4620      	mov	r0, r4
   1aa88:	f7fd f8ac 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:472
    return (read || write || discover);
   1aa8c:	465f      	mov	r7, fp
   1aa8e:	e799      	b.n	1a9c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:461
            output.printf("Error writing to device %#x\n", addr);
   1aa90:	9a02      	ldr	r2, [sp, #8]
   1aa92:	491a      	ldr	r1, [pc, #104]	; (1aafc <i2cIoHandler(str&, CharDev&, void*)+0x194>)
   1aa94:	4620      	mov	r0, r4
   1aa96:	f7fd f8a5 	bl	17be4 <CharDev::printf(char const*, ...)>
   1aa9a:	e7f7      	b.n	1aa8c <i2cIoHandler(str&, CharDev&, void*)+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:464
    else if (discover) {
   1aa9c:	b1a8      	cbz	r0, 1aaca <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1aa9e:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1aaa0:	4d17      	ldr	r5, [pc, #92]	; (1ab00 <i2cIoHandler(str&, CharDev&, void*)+0x198>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1aaa2:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 1)
   1aaa4:	9b02      	ldr	r3, [sp, #8]
   1aaa6:	2bfe      	cmp	r3, #254	; 0xfe
   1aaa8:	dc0f      	bgt.n	1aaca <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:466
            if (I2C2::getInstance().checkDeviceResponse(addr)) {
   1aaaa:	f7ff fe79 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1aaae:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1aab2:	f7fc fda6 	bl	17602 <I2C_Base::checkDeviceResponse(unsigned char)>
   1aab6:	b120      	cbz	r0, 1aac2 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1aab8:	9a02      	ldr	r2, [sp, #8]
   1aaba:	4629      	mov	r1, r5
   1aabc:	4620      	mov	r0, r4
   1aabe:	f7fd f891 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 2)
        for (addr = 2; addr <= 254; addr += 2) {
   1aac2:	9b02      	ldr	r3, [sp, #8]
   1aac4:	3302      	adds	r3, #2
   1aac6:	9302      	str	r3, [sp, #8]
   1aac8:	e7ec      	b.n	1aaa4 <i2cIoHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1aaca:	4657      	mov	r7, sl
   1aacc:	e77a      	b.n	1a9c4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
   1aace:	bf00      	nop
   1aad0:	00026da9 	.word	0x00026da9
   1aad4:	00025f87 	.word	0x00025f87
   1aad8:	00025f8d 	.word	0x00025f8d
   1aadc:	00025f96 	.word	0x00025f96
   1aae0:	00025fa5 	.word	0x00025fa5
   1aae4:	00026262 	.word	0x00026262
   1aae8:	0002626c 	.word	0x0002626c
   1aaec:	00025fc6 	.word	0x00025fc6
   1aaf0:	00025ffa 	.word	0x00025ffa
   1aaf4:	0002600a 	.word	0x0002600a
   1aaf8:	00026031 	.word	0x00026031
   1aafc:	0002604b 	.word	0x0002604b
   1ab00:	00026068 	.word	0x00026068
   1ab04:	00025fea 	.word	0x00025fea

0001ab08 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:14



#if MESH_USE_STATISTICS
static void wirelessHandlerPrintStats(CharDev& output, mesh_stats_t *s, uint8_t node)
{
   1ab08:	b530      	push	{r4, r5, lr}
   1ab0a:	460c      	mov	r4, r1
   1ab0c:	4605      	mov	r5, r0
   1ab0e:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:15
    output.printf("N%u: Rx/Tx, Rte/Ovt, Retried/Mesh Retried/Repeated: \n", node);
   1ab10:	490a      	ldr	r1, [pc, #40]	; (1ab3c <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x34>)
   1ab12:	f7fd f867 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1ab16:	88a1      	ldrh	r1, [r4, #4]
   1ab18:	8823      	ldrh	r3, [r4, #0]
   1ab1a:	9104      	str	r1, [sp, #16]
   1ab1c:	8921      	ldrh	r1, [r4, #8]
   1ab1e:	8862      	ldrh	r2, [r4, #2]
   1ab20:	9103      	str	r1, [sp, #12]
   1ab22:	88e1      	ldrh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_intercepted, s->pkts_sent,
                    s->rte_entries, s->rte_overwritten,
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1ab24:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1ab26:	9102      	str	r1, [sp, #8]
   1ab28:	7ae1      	ldrb	r1, [r4, #11]
   1ab2a:	9101      	str	r1, [sp, #4]
   1ab2c:	7aa1      	ldrb	r1, [r4, #10]
   1ab2e:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1ab30:	4903      	ldr	r1, [pc, #12]	; (1ab40 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x38>)
   1ab32:	f7fd f857 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:20
}
   1ab36:	b007      	add	sp, #28
   1ab38:	bd30      	pop	{r4, r5, pc}
   1ab3a:	bf00      	nop
   1ab3c:	00026ac8 	.word	0x00026ac8
   1ab40:	00026afe 	.word	0x00026afe

0001ab44 <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
    return true;
}

#if MESH_USE_STATISTICS
static CMD_HANDLER_FUNC(wsStatsHandler)
{
   1ab44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1ab46:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
{
   1ab48:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1ab4a:	f7f6 ffcb 	bl	11ae4 <mesh_get_stats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:248
    wirelessHandlerPrintStats(output, &stats, mesh_get_node_address());
   1ab4e:	f7f6 fcaf 	bl	114b0 <mesh_get_node_address>
   1ab52:	a901      	add	r1, sp, #4
   1ab54:	4602      	mov	r2, r0
   1ab56:	4620      	mov	r0, r4
   1ab58:	f7ff ffd6 	bl	1ab08 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:250
    return true;
}
   1ab5c:	2001      	movs	r0, #1
   1ab5e:	b004      	add	sp, #16
   1ab60:	bd10      	pop	{r4, pc}
   1ab62:	Address 0x000000000001ab62 is out of bounds.


0001ab64 <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
#endif

static CMD_HANDLER_FUNC(wsTxHandler)
{
   1ab64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1ab68:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1ab6a:	b08c      	sub	sp, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    mesh_packet_t pkt;
    #if MESH_USE_STATISTICS
    mesh_stats_t stats = { 0 };
    #endif

    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1ab6c:	ab03      	add	r3, sp, #12
   1ab6e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1ab70:	460d      	mov	r5, r1
   1ab72:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1ab74:	ab02      	add	r3, sp, #8
   1ab76:	2202      	movs	r2, #2
   1ab78:	4938      	ldr	r1, [pc, #224]	; (1ac5c <wsTxHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1ab7a:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:256
    char *data_str = NULL;
   1ab7c:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1ab7e:	f7fb ff0b 	bl	16998 <str::tokenize(char const*, int, ...)>
   1ab82:	42b0      	cmp	r0, r6
   1ab84:	dd29      	ble.n	1abda <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:271
        return false;
    }

    /* Data is optional */
    const uint8_t dst_addr = atoi(addr_str);
   1ab86:	9802      	ldr	r0, [sp, #8]
   1ab88:	f002 ff07 	bl	1d99a <atoi>
   1ab8c:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272
    const uint8_t len = data_str ? strlen(data_str) : 0;
   1ab8e:	9803      	ldr	r0, [sp, #12]
   1ab90:	b108      	cbz	r0, 1ab96 <wsTxHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272 (discriminator 1)
   1ab92:	f005 fa73 	bl	2007c <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276 (discriminator 4)

    // Flush any packets
    while (wireless_get_rx_pkt(&pkt, 0)) {
        output.putline("Discarded a stale wireless packet");
   1ab96:	4e32      	ldr	r6, [pc, #200]	; (1ac60 <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   1ab98:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1ab9a:	2100      	movs	r1, #0
   1ab9c:	a804      	add	r0, sp, #16
   1ab9e:	f7f6 fa5d 	bl	1105c <wireless_get_rx_pkt>
   1aba2:	b130      	cbz	r0, 1abb2 <wsTxHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276
        output.putline("Discarded a stale wireless packet");
   1aba4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aba8:	4631      	mov	r1, r6
   1abaa:	4628      	mov	r0, r5
   1abac:	f7fc ffe4 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1abb0:	e7f3      	b.n	1ab9a <wsTxHandler(str&, CharDev&, void*)+0x36>
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59
   1abb2:	2302      	movs	r3, #2
   1abb4:	f118 0100 	adds.w	r1, r8, #0
   1abb8:	9300      	str	r3, [sp, #0]
   1abba:	9a03      	ldr	r2, [sp, #12]
   1abbc:	4623      	mov	r3, r4
   1abbe:	bf18      	it	ne
   1abc0:	2101      	movne	r1, #1
   1abc2:	4638      	mov	r0, r7
   1abc4:	f7f6 fdaa 	bl	1171c <mesh_send>
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:280
        ;
    }

    if (! wireless_send(dst_addr, ack ? mesh_pkt_ack : mesh_pkt_nack, data_str, len, max_hops_to_use)) {
   1abc8:	4606      	mov	r6, r0
   1abca:	b950      	cbnz	r0, 1abe2 <wsTxHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:281
        output.putline("Error sending packet, check parameters!");
   1abcc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1abd0:	4924      	ldr	r1, [pc, #144]	; (1ac64 <wsTxHandler(str&, CharDev&, void*)+0x100>)
   1abd2:	4628      	mov	r0, r5
   1abd4:	f7fc ffd0 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:312
        else {
            output.printf("Packet sent to %s but no ACK received", addr_str);
        }
    }

    return true;
   1abd8:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:313
}
   1abda:	4630      	mov	r0, r6
   1abdc:	b00c      	add	sp, #48	; 0x30
   1abde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:284
    else if (ack)
   1abe2:	f1b8 0f00 	cmp.w	r8, #0
   1abe6:	d0f8      	beq.n	1abda <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286
        if(wireless_get_ack_pkt(&pkt, timeout_ms) && dst_addr == pkt.nwk.src)
   1abe8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1abec:	a804      	add	r0, sp, #16
   1abee:	f7f6 fa3d 	bl	1106c <wireless_get_ack_pkt>
   1abf2:	b360      	cbz	r0, 1ac4e <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286 (discriminator 1)
   1abf4:	f89d 3010 	ldrb.w	r3, [sp, #16]
   1abf8:	42bb      	cmp	r3, r7
   1abfa:	d128      	bne.n	1ac4e <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:289
            if (sizeof(stats) == pkt.info.data_len) {
   1abfc:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1ac00:	2b0c      	cmp	r3, #12
   1ac02:	d104      	bne.n	1ac0e <wsTxHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:291
                wirelessHandlerPrintStats(output, p, pkt.nwk.src);
   1ac04:	463a      	mov	r2, r7
   1ac06:	a906      	add	r1, sp, #24
   1ac08:	4628      	mov	r0, r5
   1ac0a:	f7ff ff7d 	bl	1ab08 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:296
            if (0 == len) {
   1ac0e:	b9bc      	cbnz	r4, 1ac40 <wsTxHandler(str&, CharDev&, void*)+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:297
                output.printf("Remote node name: '");
   1ac10:	4915      	ldr	r1, [pc, #84]	; (1ac68 <wsTxHandler(str&, CharDev&, void*)+0x104>)
   1ac12:	4628      	mov	r0, r5
   1ac14:	f7fc ffe6 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 3)
                for (int i=0; i<pkt.info.data_len; i++) {
   1ac18:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1ac1c:	429c      	cmp	r4, r3
   1ac1e:	da0a      	bge.n	1ac36 <wsTxHandler(str&, CharDev&, void*)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:299 (discriminator 2)
                    output.putChar(pkt.data[i]);
   1ac20:	ab04      	add	r3, sp, #16
   1ac22:	1919      	adds	r1, r3, r4
   1ac24:	682b      	ldr	r3, [r5, #0]
   1ac26:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ac2a:	685b      	ldr	r3, [r3, #4]
   1ac2c:	7a09      	ldrb	r1, [r1, #8]
   1ac2e:	4628      	mov	r0, r5
   1ac30:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 2)
                for (int i=0; i<pkt.info.data_len; i++) {
   1ac32:	3401      	adds	r4, #1
   1ac34:	e7f0      	b.n	1ac18 <wsTxHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:301
                output.printf("'\n");
   1ac36:	490d      	ldr	r1, [pc, #52]	; (1ac6c <wsTxHandler(str&, CharDev&, void*)+0x108>)
   1ac38:	4628      	mov	r0, r5
   1ac3a:	f7fc ffd3 	bl	17be4 <CharDev::printf(char const*, ...)>
   1ac3e:	e7cc      	b.n	1abda <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:304
                output.putline("Received the acknowledgment!");
   1ac40:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ac44:	490a      	ldr	r1, [pc, #40]	; (1ac70 <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   1ac46:	4628      	mov	r0, r5
   1ac48:	f7fc ff96 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
   1ac4c:	e7c5      	b.n	1abda <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:308
            output.printf("Packet sent to %s but no ACK received", addr_str);
   1ac4e:	9a02      	ldr	r2, [sp, #8]
   1ac50:	4908      	ldr	r1, [pc, #32]	; (1ac74 <wsTxHandler(str&, CharDev&, void*)+0x110>)
   1ac52:	4628      	mov	r0, r5
   1ac54:	f7fc ffc6 	bl	17be4 <CharDev::printf(char const*, ...)>
   1ac58:	e7bf      	b.n	1abda <wsTxHandler(str&, CharDev&, void*)+0x76>
   1ac5a:	bf00      	nop
   1ac5c:	00026c6f 	.word	0x00026c6f
   1ac60:	000267d5 	.word	0x000267d5
   1ac64:	000267f7 	.word	0x000267f7
   1ac68:	0002681f 	.word	0x0002681f
   1ac6c:	000274f0 	.word	0x000274f0
   1ac70:	00026833 	.word	0x00026833
   1ac74:	00026850 	.word	0x00026850

0001ac78 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:213
{
   1ac78:	b538      	push	{r3, r4, r5, lr}
   1ac7a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:214
    int addr = (int) cmdParams;
   1ac7c:	f7fc f809 	bl	16c92 <str::operator int() const>
   1ac80:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:215
    output.printf("Set address to %i: %s\n", addr, mesh_set_node_address(addr) ? "OK" : "FAILED");
   1ac82:	b2c0      	uxtb	r0, r0
   1ac84:	f7f6 fc08 	bl	11498 <mesh_set_node_address>
   1ac88:	4a05      	ldr	r2, [pc, #20]	; (1aca0 <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   1ac8a:	4b06      	ldr	r3, [pc, #24]	; (1aca4 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   1ac8c:	4906      	ldr	r1, [pc, #24]	; (1aca8 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   1ac8e:	2800      	cmp	r0, #0
   1ac90:	bf18      	it	ne
   1ac92:	4613      	movne	r3, r2
   1ac94:	4622      	mov	r2, r4
   1ac96:	4628      	mov	r0, r5
   1ac98:	f7fc ffa4 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:217
}
   1ac9c:	2001      	movs	r0, #1
   1ac9e:	bd38      	pop	{r3, r4, r5, pc}
   1aca0:	00026262 	.word	0x00026262
   1aca4:	00026876 	.word	0x00026876
   1aca8:	0002687d 	.word	0x0002687d

0001acac <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:220
{
   1acac:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1acae:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:222
    const int routes = mesh_get_num_routing_entries();
   1acb0:	f7f6 fd76 	bl	117a0 <mesh_get_num_routing_entries>
   1acb4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:224
    output.printf(line);
   1acb6:	4916      	ldr	r1, [pc, #88]	; (1ad10 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1acb8:	4620      	mov	r0, r4
   1acba:	f7fc ff93 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:225
    output.printf("Routing table size is %i\n", routes);
   1acbe:	4915      	ldr	r1, [pc, #84]	; (1ad14 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   1acc0:	462a      	mov	r2, r5
   1acc2:	4620      	mov	r0, r4
   1acc4:	f7fc ff8e 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:226
    output.printf(line);
   1acc8:	4911      	ldr	r1, [pc, #68]	; (1ad10 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1acca:	4620      	mov	r0, r4
   1accc:	f7fc ff8a 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:228
    if (routes > 0)
   1acd0:	b1dd      	cbz	r5, 1ad0a <wsRteHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:230
        output.printf("| DST | Next HOP | HOPS |\n");
   1acd2:	4911      	ldr	r1, [pc, #68]	; (1ad18 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   1acd4:	4620      	mov	r0, r4
   1acd6:	f7fc ff85 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:231
        output.printf(line);
   1acda:	490d      	ldr	r1, [pc, #52]	; (1ad10 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1acdc:	4620      	mov	r0, r4
   1acde:	f7fc ff81 	bl	17be4 <CharDev::printf(char const*, ...)>
   1ace2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1ace4:	4e0d      	ldr	r6, [pc, #52]	; (1ad1c <wsRteHandler(str&, CharDev&, void*)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:235
        while ((e = mesh_get_routing_entry(i++))) {
   1ace6:	b2e8      	uxtb	r0, r5
   1ace8:	f7f6 fd44 	bl	11774 <mesh_get_routing_entry>
   1acec:	3501      	adds	r5, #1
   1acee:	b140      	cbz	r0, 1ad02 <wsRteHandler(str&, CharDev&, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1acf0:	7881      	ldrb	r1, [r0, #2]
   1acf2:	7843      	ldrb	r3, [r0, #1]
   1acf4:	7802      	ldrb	r2, [r0, #0]
   1acf6:	9100      	str	r1, [sp, #0]
   1acf8:	4620      	mov	r0, r4
   1acfa:	4631      	mov	r1, r6
   1acfc:	f7fc ff72 	bl	17be4 <CharDev::printf(char const*, ...)>
   1ad00:	e7f1      	b.n	1ace6 <wsRteHandler(str&, CharDev&, void*)+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:238
        output.printf(line);
   1ad02:	4903      	ldr	r1, [pc, #12]	; (1ad10 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1ad04:	4620      	mov	r0, r4
   1ad06:	f7fc ff6d 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:242
}
   1ad0a:	2001      	movs	r0, #1
   1ad0c:	b002      	add	sp, #8
   1ad0e:	bd70      	pop	{r4, r5, r6, pc}
   1ad10:	000265a5 	.word	0x000265a5
   1ad14:	000265c0 	.word	0x000265c0
   1ad18:	000265da 	.word	0x000265da
   1ad1c:	000265f5 	.word	0x000265f5

0001ad20 <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1ad20:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1ad24:	b5f0      	push	{r4, r5, r6, r7, lr}
   1ad26:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1ad28:	aa0a      	add	r2, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1ad2a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1ad2c:	f842 3d24 	str.w	r3, [r2, #-36]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:194
    cmdParams.scanf("%i", &timeout_ms);
   1ad30:	4918      	ldr	r1, [pc, #96]	; (1ad94 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   1ad32:	f7fb fe23 	bl	1697c <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:190
    bool rx = false;
   1ad36:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1ad38:	4f17      	ldr	r7, [pc, #92]	; (1ad98 <wsRxHandler(str&, CharDev&, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1ad3a:	4e18      	ldr	r6, [pc, #96]	; (1ad9c <wsRxHandler(str&, CharDev&, void*)+0x7c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1ad3c:	9901      	ldr	r1, [sp, #4]
   1ad3e:	a802      	add	r0, sp, #8
   1ad40:	f7f6 f98c 	bl	1105c <wireless_get_rx_pkt>
   1ad44:	b1d8      	cbz	r0, 1ad7e <wsRxHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1ad46:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1ad4a:	4639      	mov	r1, r7
   1ad4c:	4620      	mov	r0, r4
   1ad4e:	f7fc ff49 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198
        for (int i = 0; i < pkt.info.data_len; i++) {
   1ad52:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 3)
   1ad54:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1ad58:	429d      	cmp	r5, r3
   1ad5a:	da0a      	bge.n	1ad72 <wsRxHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:199 (discriminator 2)
            output.putChar(pkt.data[i]);
   1ad5c:	ab02      	add	r3, sp, #8
   1ad5e:	1959      	adds	r1, r3, r5
   1ad60:	6823      	ldr	r3, [r4, #0]
   1ad62:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ad66:	685b      	ldr	r3, [r3, #4]
   1ad68:	7a09      	ldrb	r1, [r1, #8]
   1ad6a:	4620      	mov	r0, r4
   1ad6c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 2)
        for (int i = 0; i < pkt.info.data_len; i++) {
   1ad6e:	3501      	adds	r5, #1
   1ad70:	e7f0      	b.n	1ad54 <wsRxHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1ad72:	4631      	mov	r1, r6
   1ad74:	4620      	mov	r0, r4
   1ad76:	f7fc ff35 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:202
        rx = true;
   1ad7a:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1ad7c:	e7de      	b.n	1ad3c <wsRxHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:205
    if (!rx) {
   1ad7e:	b92d      	cbnz	r5, 1ad8c <wsRxHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:206
        output.putline("No data received");
   1ad80:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ad84:	4906      	ldr	r1, [pc, #24]	; (1ada0 <wsRxHandler(str&, CharDev&, void*)+0x80>)
   1ad86:	4620      	mov	r0, r4
   1ad88:	f7fc fef6 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:210
}
   1ad8c:	2001      	movs	r0, #1
   1ad8e:	b00b      	add	sp, #44	; 0x2c
   1ad90:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ad92:	bf00      	nop
   1ad94:	00026b57 	.word	0x00026b57
   1ad98:	000267ad 	.word	0x000267ad
   1ad9c:	00026c07 	.word	0x00026c07
   1ada0:	000267c4 	.word	0x000267c4

0001ada4 <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316

CMD_HANDLER_FUNC(wirelessHandler)
{
   1ada4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    static CommandProcessor *pCmdProcessor = NULL;
    if (NULL == pCmdProcessor)
   1ada8:	4c3c      	ldr	r4, [pc, #240]	; (1ae9c <wirelessHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1adaa:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1adac:	6826      	ldr	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1adae:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1adb0:	2e00      	cmp	r6, #0
   1adb2:	d162      	bne.n	1ae7a <wirelessHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
    {
        pCmdProcessor = new CommandProcessor(8);
   1adb4:	2024      	movs	r0, #36	; 0x24
   1adb6:	f7fc f85b 	bl	16e70 <operator new(unsigned int)>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1adba:	2304      	movs	r3, #4
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
   1adbc:	4605      	mov	r5, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1adbe:	e880 0048 	stmia.w	r0, {r3, r6}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1adc2:	6086      	str	r6, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1adc4:	60c6      	str	r6, [r0, #12]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1adc6:	2120      	movs	r1, #32
   1adc8:	4630      	mov	r0, r6
   1adca:	f004 fe5b 	bl	1fa84 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1adce:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1add0:	60e8      	str	r0, [r5, #12]
   1add2:	ea4f 0886 	mov.w	r8, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1add6:	2e07      	cmp	r6, #7
   1add8:	d80e      	bhi.n	1adf8 <wirelessHandler(str&, CharDev&, void*)+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1adda:	2010      	movs	r0, #16
   1addc:	f7fc f848 	bl	16e70 <operator new(unsigned int)>
   1ade0:	4682      	mov	sl, r0
   1ade2:	2210      	movs	r2, #16
   1ade4:	2100      	movs	r1, #0
   1ade6:	f003 fbc3 	bl	1e570 <memset>
   1adea:	68eb      	ldr	r3, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1adec:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1adee:	f843 a008 	str.w	sl, [r3, r8]
   1adf2:	f108 0804 	add.w	r8, r8, #4
   1adf6:	e7ee      	b.n	1add6 <wirelessHandler(str&, CharDev&, void*)+0x32>
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1adf8:	2600      	movs	r6, #0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1adfa:	2308      	movs	r3, #8
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
         * Constructor
         * @param numCmds Optional: Initial list of vector size to avoid memory re-allocation
         * @note addHandler() will grow the vector of command handlers if more commands are added later
         */
        CommandProcessor(int numCmds=8) :
            mCmdHandlerVector(numCmds), mEnShortCmds(true)
   1adfc:	f04f 0801 	mov.w	r8, #1
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
   1ae00:	606b      	str	r3, [r5, #4]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
   1ae02:	4a27      	ldr	r2, [pc, #156]	; (1aea0 <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   1ae04:	4b27      	ldr	r3, [pc, #156]	; (1aea4 <wirelessHandler(str&, CharDev&, void*)+0x100>)
   1ae06:	4928      	ldr	r1, [pc, #160]	; (1aea8 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   1ae08:	4628      	mov	r0, r5
   1ae0a:	9600      	str	r6, [sp, #0]
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1ae0c:	f885 8020 	strb.w	r8, [r5, #32]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
        pCmdProcessor = new CommandProcessor(8);
   1ae10:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1ae12:	f7fa fe85 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:322
        pCmdProcessor->addHandler(wsFileTxHandler,  "transfer", "'transfer <src filename> <dst filename> <naddr>' : Transfer a file to another board");
   1ae16:	4b25      	ldr	r3, [pc, #148]	; (1aeac <wirelessHandler(str&, CharDev&, void*)+0x108>)
   1ae18:	4a25      	ldr	r2, [pc, #148]	; (1aeb0 <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   1ae1a:	4926      	ldr	r1, [pc, #152]	; (1aeb4 <wirelessHandler(str&, CharDev&, void*)+0x110>)
   1ae1c:	6820      	ldr	r0, [r4, #0]
   1ae1e:	9600      	str	r6, [sp, #0]
   1ae20:	f7fa fe7e 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:323
        pCmdProcessor->addHandler(wsRxHandler,      "rx",       "'rx <time_ms>' : Poll for a packet");
   1ae24:	4b24      	ldr	r3, [pc, #144]	; (1aeb8 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   1ae26:	4a25      	ldr	r2, [pc, #148]	; (1aebc <wirelessHandler(str&, CharDev&, void*)+0x118>)
   1ae28:	4925      	ldr	r1, [pc, #148]	; (1aec0 <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   1ae2a:	6820      	ldr	r0, [r4, #0]
   1ae2c:	9600      	str	r6, [sp, #0]
   1ae2e:	f7fa fe77 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:324
        pCmdProcessor->addHandler(wsAddrHandler,    "addr",     "'addr <addr>   : Set the wireless address");
   1ae32:	4b24      	ldr	r3, [pc, #144]	; (1aec4 <wirelessHandler(str&, CharDev&, void*)+0x120>)
   1ae34:	4a24      	ldr	r2, [pc, #144]	; (1aec8 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   1ae36:	4925      	ldr	r1, [pc, #148]	; (1aecc <wirelessHandler(str&, CharDev&, void*)+0x128>)
   1ae38:	6820      	ldr	r0, [r4, #0]
   1ae3a:	9600      	str	r6, [sp, #0]
   1ae3c:	f7fa fe70 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:325
        pCmdProcessor->addHandler(wsRteHandler,     "routes",   "'routes' : See the wireless routes");
   1ae40:	4b23      	ldr	r3, [pc, #140]	; (1aed0 <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   1ae42:	4a24      	ldr	r2, [pc, #144]	; (1aed4 <wirelessHandler(str&, CharDev&, void*)+0x130>)
   1ae44:	4924      	ldr	r1, [pc, #144]	; (1aed8 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   1ae46:	6820      	ldr	r0, [r4, #0]
   1ae48:	9600      	str	r6, [sp, #0]
   1ae4a:	f7fa fe69 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:329

        void *ack = (void*) 1;
        void *nack = 0;
        pCmdProcessor->addHandler(wsTxHandler,      "ack",  "'ack <addr> <data>'  : Send a packet and wait for acknowledgment", ack);
   1ae4e:	4b23      	ldr	r3, [pc, #140]	; (1aedc <wirelessHandler(str&, CharDev&, void*)+0x138>)
   1ae50:	4a23      	ldr	r2, [pc, #140]	; (1aee0 <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   1ae52:	4924      	ldr	r1, [pc, #144]	; (1aee4 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1ae54:	6820      	ldr	r0, [r4, #0]
   1ae56:	f8cd 8000 	str.w	r8, [sp]
   1ae5a:	f7fa fe61 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:330
        pCmdProcessor->addHandler(wsTxHandler,      "nack", "'nack <addr> <data>' : Send a packet", nack);
   1ae5e:	4b22      	ldr	r3, [pc, #136]	; (1aee8 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   1ae60:	4a22      	ldr	r2, [pc, #136]	; (1aeec <wirelessHandler(str&, CharDev&, void*)+0x148>)
   1ae62:	4920      	ldr	r1, [pc, #128]	; (1aee4 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1ae64:	6820      	ldr	r0, [r4, #0]
   1ae66:	9600      	str	r6, [sp, #0]
   1ae68:	f7fa fe5a 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:333

        #if MESH_USE_STATISTICS
        pCmdProcessor->addHandler(wsStatsHandler,   "stats", "'stats' : See the wireless stats");
   1ae6c:	9600      	str	r6, [sp, #0]
   1ae6e:	4b20      	ldr	r3, [pc, #128]	; (1aef0 <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1ae70:	4a20      	ldr	r2, [pc, #128]	; (1aef4 <wirelessHandler(str&, CharDev&, void*)+0x150>)
   1ae72:	4921      	ldr	r1, [pc, #132]	; (1aef8 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   1ae74:	6820      	ldr	r0, [r4, #0]
   1ae76:	f7fa fe53 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:338
        #endif
    }

    /* Display help for empty command */
    if (cmdParams == "") {
   1ae7a:	4920      	ldr	r1, [pc, #128]	; (1aefc <wirelessHandler(str&, CharDev&, void*)+0x158>)
   1ae7c:	4638      	mov	r0, r7
   1ae7e:	f7fb ff04 	bl	16c8a <str::operator==(char const*) const>
   1ae82:	b118      	cbz	r0, 1ae8c <wirelessHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:339
        cmdParams = "help";
   1ae84:	491e      	ldr	r1, [pc, #120]	; (1af00 <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   1ae86:	4638      	mov	r0, r7
   1ae88:	f7fb ffba 	bl	16e00 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    }

    return pCmdProcessor->handleCommand(cmdParams, output);
   1ae8c:	464a      	mov	r2, r9
   1ae8e:	4639      	mov	r1, r7
   1ae90:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:343
}
   1ae92:	b002      	add	sp, #8
   1ae94:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    return pCmdProcessor->handleCommand(cmdParams, output);
   1ae98:	f7fa bf26 	b.w	15ce8 <CommandProcessor::handleCommand(str&, CharDev&)>
   1ae9c:	2007c778 	.word	0x2007c778
   1aea0:	0002664a 	.word	0x0002664a
   1aea4:	00026610 	.word	0x00026610
   1aea8:	0001b151 	.word	0x0001b151
   1aeac:	00026651 	.word	0x00026651
   1aeb0:	000266a5 	.word	0x000266a5
   1aeb4:	0001af25 	.word	0x0001af25
   1aeb8:	000266ae 	.word	0x000266ae
   1aebc:	000266d1 	.word	0x000266d1
   1aec0:	0001ad21 	.word	0x0001ad21
   1aec4:	000266d4 	.word	0x000266d4
   1aec8:	000275d0 	.word	0x000275d0
   1aecc:	0001ac79 	.word	0x0001ac79
   1aed0:	000266fe 	.word	0x000266fe
   1aed4:	0002671a 	.word	0x0002671a
   1aed8:	0001acad 	.word	0x0001acad
   1aedc:	00026721 	.word	0x00026721
   1aee0:	00026788 	.word	0x00026788
   1aee4:	0001ab65 	.word	0x0001ab65
   1aee8:	00026762 	.word	0x00026762
   1aeec:	00026787 	.word	0x00026787
   1aef0:	0002678c 	.word	0x0002678c
   1aef4:	000267a7 	.word	0x000267a7
   1aef8:	0001ab45 	.word	0x0001ab45
   1aefc:	00026c08 	.word	0x00026c08
   1af00:	00025617 	.word	0x00025617

0001af04 <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1af04:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1af06:	4c06      	ldr	r4, [pc, #24]	; (1af20 <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   1af08:	6823      	ldr	r3, [r4, #0]
   1af0a:	b933      	cbnz	r3, 1af1a <SingletonTemplate<NordicStream>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1af0c:	2058      	movs	r0, #88	; 0x58
   1af0e:	f7fb ffaf 	bl	16e70 <operator new(unsigned int)>
   1af12:	4605      	mov	r5, r0
   1af14:	f7fd f9a8 	bl	18268 <NordicStream::NordicStream()>
   1af18:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1af1a:	6820      	ldr	r0, [r4, #0]
   1af1c:	bd38      	pop	{r3, r4, r5, pc}
   1af1e:	bf00      	nop
   1af20:	2007c774 	.word	0x2007c774

0001af24 <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1af24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af28:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   1af2c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1af2e:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1af30:	f10d 09b4 	add.w	r9, sp, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1af34:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1af36:	a80d      	add	r0, sp, #52	; 0x34
   1af38:	2100      	movs	r1, #0
   1af3a:	f003 fb19 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1af3e:	2280      	movs	r2, #128	; 0x80
   1af40:	2100      	movs	r1, #0
   1af42:	4648      	mov	r0, r9
   1af44:	f003 fb14 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:114
    int addr = 0;
   1af48:	2300      	movs	r3, #0
   1af4a:	ae06      	add	r6, sp, #24
   1af4c:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:117
    if (3 != cmdParams.scanf("%128s %128s %i", &srcFile[0], &dstFile[0], &addr)) {
   1af4e:	aa0d      	add	r2, sp, #52	; 0x34
   1af50:	9600      	str	r6, [sp, #0]
   1af52:	464b      	mov	r3, r9
   1af54:	4974      	ldr	r1, [pc, #464]	; (1b128 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   1af56:	4620      	mov	r0, r4
   1af58:	f7fb fd10 	bl	1697c <str::scanf(char const*, ...)>
   1af5c:	2803      	cmp	r0, #3
   1af5e:	d004      	beq.n	1af6a <wsFileTxHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:118
        return false;
   1af60:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:186
}
   1af62:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   1af66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:120
    if (FR_OK != f_open(&file, srcFile, FA_OPEN_EXISTING | FA_READ)) {
   1af6a:	2201      	movs	r2, #1
   1af6c:	a90d      	add	r1, sp, #52	; 0x34
   1af6e:	a8ed      	add	r0, sp, #948	; 0x3b4
   1af70:	f7f7 fe0c 	bl	12b8c <f_open>
   1af74:	4605      	mov	r5, r0
   1af76:	2800      	cmp	r0, #0
   1af78:	d1f2      	bne.n	1af60 <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1af7a:	f7ff ffc3 	bl	1af04 <SingletonTemplate<NordicStream>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1af7e:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1af80:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1af82:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1af86:	a94d      	add	r1, sp, #308	; 0x134
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1af88:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1af8a:	a808      	add	r0, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:127
    char c = 0;
   1af8c:	f88d 5017 	strb.w	r5, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:130
    unsigned int bytesRead = 0;
   1af90:	9507      	str	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1af92:	f7fb fcc3 	bl	1691c <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:139
    output.printf("Transfer %s --> %i:%s\n", srcFile, addr, dstFile);
   1af96:	f8cd 9000 	str.w	r9, [sp]
   1af9a:	6833      	ldr	r3, [r6, #0]
   1af9c:	aa0d      	add	r2, sp, #52	; 0x34
   1af9e:	4963      	ldr	r1, [pc, #396]	; (1b12c <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   1afa0:	4640      	mov	r0, r8
   1afa2:	f7fc fe1f 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:131
    unsigned int fileOffset = 0;
   1afa6:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140
    while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   1afa8:	ab07      	add	r3, sp, #28
   1afaa:	f44f 7200 	mov.w	r2, #512	; 0x200
   1afae:	a96d      	add	r1, sp, #436	; 0x1b4
   1afb0:	a8ed      	add	r0, sp, #948	; 0x3b4
   1afb2:	f7f7 fe82 	bl	12cba <f_read>
   1afb6:	2800      	cmp	r0, #0
   1afb8:	f040 80ad 	bne.w	1b116 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140 (discriminator 1)
   1afbc:	9b07      	ldr	r3, [sp, #28]
   1afbe:	2b00      	cmp	r3, #0
   1afc0:	f000 80a9 	beq.w	1b116 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:143
        if (retries >= retriesMax) {
   1afc4:	2d02      	cmp	r5, #2
   1afc6:	f200 80a6 	bhi.w	1b116 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:147
        n.printf("file buffer 0 %i\n", bytesRead);
   1afca:	ae07      	add	r6, sp, #28
   1afcc:	6832      	ldr	r2, [r6, #0]
   1afce:	4958      	ldr	r1, [pc, #352]	; (1b130 <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   1afd0:	4620      	mov	r0, r4
   1afd2:	f7fc fe07 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1afd6:	6823      	ldr	r3, [r4, #0]
   1afd8:	4620      	mov	r0, r4
   1afda:	689b      	ldr	r3, [r3, #8]
   1afdc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:150
        expectedChecksum = 0;
   1afde:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1afe2:	f50d 7bda 	add.w	fp, sp, #436	; 0x1b4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 3)
        for (unsigned int i=0; i < bytesRead; i++) {
   1afe6:	ab6d      	add	r3, sp, #436	; 0x1b4
   1afe8:	6832      	ldr	r2, [r6, #0]
   1afea:	ebab 0303 	sub.w	r3, fp, r3
   1afee:	429a      	cmp	r2, r3
   1aff0:	6823      	ldr	r3, [r4, #0]
   1aff2:	d90c      	bls.n	1b00e <wsFileTxHandler(str&, CharDev&, void*)+0xea>
   1aff4:	f8cd b00c 	str.w	fp, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:152 (discriminator 2)
            n.putChar(buffer[i]);
   1aff8:	685b      	ldr	r3, [r3, #4]
   1affa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1affe:	f81b 1b01 	ldrb.w	r1, [fp], #1
   1b002:	4620      	mov	r0, r4
   1b004:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:153 (discriminator 2)
            expectedChecksum += buffer[i];
   1b006:	9b03      	ldr	r3, [sp, #12]
   1b008:	781b      	ldrb	r3, [r3, #0]
   1b00a:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 2)
        for (unsigned int i=0; i < bytesRead; i++) {
   1b00c:	e7eb      	b.n	1afe6 <wsFileTxHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:155
        n.flush();
   1b00e:	689b      	ldr	r3, [r3, #8]
   1b010:	4620      	mov	r0, r4
   1b012:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:158
        n.gets((char*) response(), response.getCapacity(), timeout);
   1b014:	a808      	add	r0, sp, #32
   1b016:	f7fb fe3a 	bl	16c8e <str::operator()() const>
   1b01a:	4683      	mov	fp, r0
   1b01c:	a808      	add	r0, sp, #32
   1b01e:	f7fb fca7 	bl	16970 <str::getCapacity() const>
   1b022:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1b026:	4602      	mov	r2, r0
   1b028:	4659      	mov	r1, fp
   1b02a:	4620      	mov	r0, r4
   1b02c:	f7fc fdb2 	bl	17b94 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:159
        response.eraseFirstWords(1);
   1b030:	2220      	movs	r2, #32
   1b032:	2101      	movs	r1, #1
   1b034:	eb0d 0002 	add.w	r0, sp, r2
   1b038:	f7fb fdd5 	bl	16be6 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:160
        if ( (int)response != expectedChecksum) {
   1b03c:	a808      	add	r0, sp, #32
   1b03e:	f7fb fe28 	bl	16c92 <str::operator int() const>
   1b042:	4582      	cmp	sl, r0
   1b044:	d01c      	beq.n	1b080 <wsFileTxHandler(str&, CharDev&, void*)+0x15c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:161
            output.printf("ERROR: Checksum Expected %i Actual %i\n", expectedChecksum, (int) response);
   1b046:	a808      	add	r0, sp, #32
   1b048:	f7fb fe23 	bl	16c92 <str::operator int() const>
   1b04c:	4652      	mov	r2, sl
   1b04e:	4603      	mov	r3, r0
   1b050:	4938      	ldr	r1, [pc, #224]	; (1b134 <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   1b052:	4640      	mov	r0, r8
   1b054:	f7fc fdc6 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162
            doRetry();
   1b058:	4937      	ldr	r1, [pc, #220]	; (1b138 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1b05a:	4620      	mov	r0, r4
   1b05c:	f7fc fdc2 	bl	17be4 <CharDev::printf(char const*, ...)>
   1b060:	6823      	ldr	r3, [r4, #0]
   1b062:	4620      	mov	r0, r4
   1b064:	689b      	ldr	r3, [r3, #8]
   1b066:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162 (discriminator 1)
   1b068:	6823      	ldr	r3, [r4, #0]
   1b06a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b06e:	681b      	ldr	r3, [r3, #0]
   1b070:	f10d 0117 	add.w	r1, sp, #23
   1b074:	4620      	mov	r0, r4
   1b076:	4798      	blx	r3
   1b078:	2800      	cmp	r0, #0
   1b07a:	d1f5      	bne.n	1b068 <wsFileTxHandler(str&, CharDev&, void*)+0x144>
   1b07c:	3501      	adds	r5, #1
   1b07e:	e7a1      	b.n	1afc4 <wsFileTxHandler(str&, CharDev&, void*)+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:166
        n.printf("file commit %s %i %i\n", dstFile, fileOffset, bytesRead);
   1b080:	6833      	ldr	r3, [r6, #0]
   1b082:	464a      	mov	r2, r9
   1b084:	492d      	ldr	r1, [pc, #180]	; (1b13c <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   1b086:	9300      	str	r3, [sp, #0]
   1b088:	4620      	mov	r0, r4
   1b08a:	463b      	mov	r3, r7
   1b08c:	f7fc fdaa 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:167
        n.flush();
   1b090:	6823      	ldr	r3, [r4, #0]
   1b092:	4620      	mov	r0, r4
   1b094:	689b      	ldr	r3, [r3, #8]
   1b096:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:168
        n.gets((char*) response(), response.getCapacity(), timeout);
   1b098:	a808      	add	r0, sp, #32
   1b09a:	f7fb fdf8 	bl	16c8e <str::operator()() const>
   1b09e:	4682      	mov	sl, r0
   1b0a0:	a808      	add	r0, sp, #32
   1b0a2:	f7fb fc65 	bl	16970 <str::getCapacity() const>
   1b0a6:	4651      	mov	r1, sl
   1b0a8:	4602      	mov	r2, r0
   1b0aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1b0ae:	4620      	mov	r0, r4
   1b0b0:	f7fc fd70 	bl	17b94 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:169
        if (!response.containsIgnoreCase("ok")) {
   1b0b4:	4922      	ldr	r1, [pc, #136]	; (1b140 <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   1b0b6:	a808      	add	r0, sp, #32
   1b0b8:	f7fb fce6 	bl	16a88 <str::containsIgnoreCase(char const*) const>
   1b0bc:	b9d0      	cbnz	r0, 1b0f4 <wsFileTxHandler(str&, CharDev&, void*)+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:170
            output.printf("ERROR: Remote node did not acknowledge file write (%s)\n", response());
   1b0be:	a808      	add	r0, sp, #32
   1b0c0:	f7fb fde5 	bl	16c8e <str::operator()() const>
   1b0c4:	491f      	ldr	r1, [pc, #124]	; (1b144 <wsFileTxHandler(str&, CharDev&, void*)+0x220>)
   1b0c6:	4602      	mov	r2, r0
   1b0c8:	4640      	mov	r0, r8
   1b0ca:	f7fc fd8b 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171
            doRetry();
   1b0ce:	491a      	ldr	r1, [pc, #104]	; (1b138 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1b0d0:	4620      	mov	r0, r4
   1b0d2:	f7fc fd87 	bl	17be4 <CharDev::printf(char const*, ...)>
   1b0d6:	6823      	ldr	r3, [r4, #0]
   1b0d8:	4620      	mov	r0, r4
   1b0da:	689b      	ldr	r3, [r3, #8]
   1b0dc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171 (discriminator 1)
   1b0de:	6823      	ldr	r3, [r4, #0]
   1b0e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b0e4:	681b      	ldr	r3, [r3, #0]
   1b0e6:	f10d 0117 	add.w	r1, sp, #23
   1b0ea:	4620      	mov	r0, r4
   1b0ec:	4798      	blx	r3
   1b0ee:	2800      	cmp	r0, #0
   1b0f0:	d1f5      	bne.n	1b0de <wsFileTxHandler(str&, CharDev&, void*)+0x1ba>
   1b0f2:	e7c3      	b.n	1b07c <wsFileTxHandler(str&, CharDev&, void*)+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:174
        response = "";
   1b0f4:	4914      	ldr	r1, [pc, #80]	; (1b148 <wsFileTxHandler(str&, CharDev&, void*)+0x224>)
   1b0f6:	a808      	add	r0, sp, #32
   1b0f8:	f7fb fe82 	bl	16e00 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1b0fc:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1b0fe:	4913      	ldr	r1, [pc, #76]	; (1b14c <wsFileTxHandler(str&, CharDev&, void*)+0x228>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1b100:	441f      	add	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1b102:	463a      	mov	r2, r7
   1b104:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   1b106:	4640      	mov	r0, r8
   1b108:	f7fc fd6c 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:179
        if (retries > 0) {
   1b10c:	2d00      	cmp	r5, #0
   1b10e:	f43f af4b 	beq.w	1afa8 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:180
            --retries;
   1b112:	3d01      	subs	r5, #1
   1b114:	e748      	b.n	1afa8 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:184
    f_close(&file);
   1b116:	a8ed      	add	r0, sp, #948	; 0x3b4
   1b118:	f7f7 ffa2 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b11c:	a808      	add	r0, sp, #32
   1b11e:	f7fb fc11 	bl	16944 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:185
    return true;
   1b122:	2001      	movs	r0, #1
   1b124:	e71d      	b.n	1af62 <wsFileTxHandler(str&, CharDev&, void*)+0x3e>
   1b126:	bf00      	nop
   1b128:	00026894 	.word	0x00026894
   1b12c:	000268a3 	.word	0x000268a3
   1b130:	000268ba 	.word	0x000268ba
   1b134:	000268cc 	.word	0x000268cc
   1b138:	00026c07 	.word	0x00026c07
   1b13c:	000268f3 	.word	0x000268f3
   1b140:	00026909 	.word	0x00026909
   1b144:	0002690c 	.word	0x0002690c
   1b148:	00026c08 	.word	0x00026c08
   1b14c:	00026944 	.word	0x00026944

0001b150 <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b150:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1b154:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b156:	4607      	mov	r7, r0
   1b158:	b086      	sub	sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1b15a:	aa06      	add	r2, sp, #24
   1b15c:	f842 4d0c 	str.w	r4, [r2, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b160:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:28
    cmdParams.scanf("%i", &addr);
   1b162:	493d      	ldr	r1, [pc, #244]	; (1b258 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   1b164:	f7fb fc0a 	bl	1697c <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:29
    cmdParams.eraseFirstWords(1);
   1b168:	2220      	movs	r2, #32
   1b16a:	2101      	movs	r1, #1
   1b16c:	4638      	mov	r0, r7
   1b16e:	f7fb fd3a 	bl	16be6 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31
    if (0 == addr || 0 == cmdParams.getLen())
   1b172:	9b03      	ldr	r3, [sp, #12]
   1b174:	2b00      	cmp	r3, #0
   1b176:	d068      	beq.n	1b24a <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31 (discriminator 2)
   1b178:	4638      	mov	r0, r7
   1b17a:	f7fb fbf6 	bl	1696a <str::getLen() const>
   1b17e:	2800      	cmp	r0, #0
   1b180:	d063      	beq.n	1b24a <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:38
        NordicStream &n = NordicStream::getInstance();
   1b182:	f7ff febf 	bl	1af04 <SingletonTemplate<NordicStream>::getInstance()>
   1b186:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:41
        char c = 0;
   1b188:	f10d 0818 	add.w	r8, sp, #24
   1b18c:	f808 4d0d 	strb.w	r4, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:42
        while (n.getChar(&c, 5)) {
   1b190:	682b      	ldr	r3, [r5, #0]
   1b192:	2205      	movs	r2, #5
   1b194:	681b      	ldr	r3, [r3, #0]
   1b196:	4641      	mov	r1, r8
   1b198:	4628      	mov	r0, r5
   1b19a:	4798      	blx	r3
   1b19c:	4604      	mov	r4, r0
   1b19e:	2800      	cmp	r0, #0
   1b1a0:	d1f6      	bne.n	1b190 <wsStreamHandler(str&, CharDev&, void*)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1b1a2:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b1a4:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1b1a6:	f885 3053 	strb.w	r3, [r5, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b1aa:	f7fb fd70 	bl	16c8e <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:52
        int count = 0;
   1b1ae:	4627      	mov	r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b1b0:	4601      	mov	r1, r0
   1b1b2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b1b6:	4628      	mov	r0, r5
   1b1b8:	f7fc fcde 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:47
        n.flush();
   1b1bc:	682b      	ldr	r3, [r5, #0]
   1b1be:	4628      	mov	r0, r5
   1b1c0:	689b      	ldr	r3, [r3, #8]
   1b1c2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b1c4:	4b25      	ldr	r3, [pc, #148]	; (1b25c <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1b1c6:	f10d 0918 	add.w	r9, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b1ca:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1b1cc:	f849 4d04 	str.w	r4, [r9, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b1d0:	9004      	str	r0, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:68
        while (n.getChar(&c, timeout_ms))
   1b1d2:	682b      	ldr	r3, [r5, #0]
   1b1d4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b1d8:	681b      	ldr	r3, [r3, #0]
   1b1da:	4641      	mov	r1, r8
   1b1dc:	4628      	mov	r0, r5
   1b1de:	4798      	blx	r3
   1b1e0:	b1d0      	cbz	r0, 1b218 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:75
            memmove(&lastChars[0], &lastChars[1], sizeof(endOfTx) - 1);
   1b1e2:	2203      	movs	r2, #3
   1b1e4:	f10d 0115 	add.w	r1, sp, #21
   1b1e8:	4648      	mov	r0, r9
   1b1ea:	f003 f9a7 	bl	1e53c <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1b1ee:	f89d a00b 	ldrb.w	sl, [sp, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1b1f2:	2204      	movs	r2, #4
   1b1f4:	a904      	add	r1, sp, #16
   1b1f6:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1b1f8:	f88d a017 	strb.w	sl, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1b1fc:	f003 f984 	bl	1e508 <memcmp>
   1b200:	b150      	cbz	r0, 1b218 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1b202:	6833      	ldr	r3, [r6, #0]
   1b204:	2201      	movs	r2, #1
   1b206:	685b      	ldr	r3, [r3, #4]
   1b208:	4651      	mov	r1, sl
   1b20a:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:81
            ++count;
   1b20c:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1b20e:	4798      	blx	r3
   1b210:	2800      	cmp	r0, #0
   1b212:	d1de      	bne.n	1b1d2 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:83
                dropped++;
   1b214:	3401      	adds	r4, #1
   1b216:	e7dc      	b.n	1b1d2 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:87
        int pkts = count / MESH_DATA_PAYLOAD_SIZE;
   1b218:	2218      	movs	r2, #24
   1b21a:	fbb7 f3f2 	udiv	r3, r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:88
        if (0 != (count % MESH_DATA_PAYLOAD_SIZE)) {
   1b21e:	fb02 7213 	mls	r2, r2, r3, r7
   1b222:	b102      	cbz	r2, 1b226 <wsStreamHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:89
            pkts++;
   1b224:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:92
        output.printf("    Received %i bytes over %i packets\n", count, pkts);
   1b226:	463a      	mov	r2, r7
   1b228:	490d      	ldr	r1, [pc, #52]	; (1b260 <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   1b22a:	4630      	mov	r0, r6
   1b22c:	f7fc fcda 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:93
        if (dropped > 0) {
   1b230:	b13c      	cbz	r4, 1b242 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:97
                            dropped, __FILE__, __LINE__);
   1b232:	2361      	movs	r3, #97	; 0x61
   1b234:	4622      	mov	r2, r4
   1b236:	9300      	str	r3, [sp, #0]
   1b238:	490a      	ldr	r1, [pc, #40]	; (1b264 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   1b23a:	4b0b      	ldr	r3, [pc, #44]	; (1b268 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   1b23c:	4630      	mov	r0, r6
   1b23e:	f7fc fcd1 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:102
}
   1b242:	2001      	movs	r0, #1
   1b244:	b006      	add	sp, #24
   1b246:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:33
        output.putline("Parse error: try: 'stream <addr> <command>'");
   1b24a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b24e:	4907      	ldr	r1, [pc, #28]	; (1b26c <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   1b250:	4630      	mov	r0, r6
   1b252:	f7fc fc91 	bl	17b78 <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:101
    return true;
   1b256:	e7f4      	b.n	1b242 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   1b258:	00026b57 	.word	0x00026b57
   1b25c:	000265a1 	.word	0x000265a1
   1b260:	00026950 	.word	0x00026950
   1b264:	000269e3 	.word	0x000269e3
   1b268:	00026977 	.word	0x00026977
   1b26c:	00026a9c 	.word	0x00026a9c

0001b270 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:17
#include "chip_info.h"



CMD_HANDLER_FUNC(flashProgHandler)
{
   1b270:	b570      	push	{r4, r5, r6, lr}
   1b272:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   1b276:	4605      	mov	r5, r0
   1b278:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:21
    FIL file;
    const int maxChars = 12;

    if (cmdParams.getLen() >= maxChars) {
   1b27a:	f7fb fb76 	bl	1696a <str::getLen() const>
   1b27e:	280b      	cmp	r0, #11
   1b280:	dd05      	ble.n	1b28e <flashProgHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:22
        output.printf("Filename should be less than %i chars\n", maxChars);
   1b282:	220c      	movs	r2, #12
   1b284:	4922      	ldr	r1, [pc, #136]	; (1b310 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        taskDISABLE_INTERRUPTS();
        chip_program_from_filename(cmdParams());
        sys_reboot();
    }
    else {
        output.printf("Unable to open '%s'\n", cmdParams());
   1b286:	4620      	mov	r0, r4
   1b288:	f7fc fcac 	bl	17be4 <CharDev::printf(char const*, ...)>
   1b28c:	e036      	b.n	1b2fc <flashProgHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:24
    else if (FR_OK == f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   1b28e:	4628      	mov	r0, r5
   1b290:	f7fb fcfd 	bl	16c8e <str::operator()() const>
   1b294:	2201      	movs	r2, #1
   1b296:	4601      	mov	r1, r0
   1b298:	a801      	add	r0, sp, #4
   1b29a:	f7f7 fc77 	bl	12b8c <f_open>
   1b29e:	4606      	mov	r6, r0
   1b2a0:	bb80      	cbnz	r0, 1b304 <flashProgHandler(str&, CharDev&, void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:26
        f_close(&file);
   1b2a2:	a801      	add	r0, sp, #4
   1b2a4:	f7f7 fedc 	bl	13060 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:27
        output.printf("%s (%u bytes) will be programmed.\n"
   1b2a8:	4628      	mov	r0, r5
   1b2aa:	f7fb fcf0 	bl	16c8e <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:29
                      cmdParams(), file.fsize);
   1b2ae:	4919      	ldr	r1, [pc, #100]	; (1b314 <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   1b2b0:	4602      	mov	r2, r0
   1b2b2:	9b04      	ldr	r3, [sp, #16]
   1b2b4:	4620      	mov	r0, r4
   1b2b6:	f7fc fc95 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:32
        output.flush();
   1b2ba:	6823      	ldr	r3, [r4, #0]
   1b2bc:	4620      	mov	r0, r4
   1b2be:	689b      	ldr	r3, [r3, #8]
   1b2c0:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:33
        vTaskDelay(10);
   1b2c2:	200a      	movs	r0, #10
   1b2c4:	f7fe f942 	bl	1954c <vTaskDelay>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:244
	);
   1b2c8:	f04f 0310 	mov.w	r3, #16
   1b2cc:	f383 8811 	msr	BASEPRI, r3
   1b2d0:	f3bf 8f6f 	isb	sy
   1b2d4:	f3bf 8f4f 	dsb	sy
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:41
        chip_program_from_filename(cmdParams());
   1b2d8:	4628      	mov	r0, r5
   1b2da:	f7fb fcd8 	bl	16c8e <str::operator()() const>
   1b2de:	4602      	mov	r2, r0
chip_program_from_filename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    const uint32_t signature = 0xDEADD00D;      ///< Signature to write to command register
    volatile uint32_t *pCommandReg = &(LPC_RTC->GPREG0); ///< Image program "command" is stored here
    volatile uint32_t *pFilename   = &(LPC_RTC->GPREG1); ///< Null terminated image name (up to 12 chars)

    // Do not use strcpy(), it will not work!
    memcpy((void*) pFilename, filename, maxChars);
   1b2e0:	4b0d      	ldr	r3, [pc, #52]	; (1b318 <flashProgHandler(str&, CharDev&, void*)+0xa8>)
   1b2e2:	6800      	ldr	r0, [r0, #0]
   1b2e4:	6851      	ldr	r1, [r2, #4]
   1b2e6:	c303      	stmia	r3!, {r0, r1}
   1b2e8:	6890      	ldr	r0, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75

    // Setting the signature is the "command" to program from the filename upon next boot.
    *pCommandReg = signature;
   1b2ea:	4a0c      	ldr	r2, [pc, #48]	; (1b31c <flashProgHandler(str&, CharDev&, void*)+0xac>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    memcpy((void*) pFilename, filename, maxChars);
   1b2ec:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75
    *pCommandReg = signature;
   1b2ee:	f843 2c0c 	str.w	r2, [r3, #-12]
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1b2f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1b2f6:	22aa      	movs	r2, #170	; 0xaa
   1b2f8:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1b2fa:	701e      	strb	r6, [r3, #0]
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:48
    }
    return true;
}
   1b2fc:	2001      	movs	r0, #1
   1b2fe:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   1b302:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        output.printf("Unable to open '%s'\n", cmdParams());
   1b304:	4628      	mov	r0, r5
   1b306:	f7fb fcc2 	bl	16c8e <str::operator()() const>
   1b30a:	4905      	ldr	r1, [pc, #20]	; (1b320 <flashProgHandler(str&, CharDev&, void*)+0xb0>)
   1b30c:	4602      	mov	r2, r0
   1b30e:	e7ba      	b.n	1b286 <flashProgHandler(str&, CharDev&, void*)+0x16>
   1b310:	00026b9b 	.word	0x00026b9b
   1b314:	00026bc2 	.word	0x00026bc2
   1b318:	40024048 	.word	0x40024048
   1b31c:	deadd00d 	.word	0xdeadd00d
   1b320:	00026c09 	.word	0x00026c09

0001b324 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51

CMD_HANDLER_FUNC(getFileHandler)
{
   1b324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    const int maxBufferSize = 1024;
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b328:	4c41      	ldr	r4, [pc, #260]	; (1b430 <getFileHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b32a:	b0a4      	sub	sp, #144	; 0x90
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b32c:	7823      	ldrb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b32e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b330:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b332:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b334:	f3bf 8f5b 	dmb	ish
   1b338:	d40c      	bmi.n	1b354 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 1)
   1b33a:	4620      	mov	r0, r4
   1b33c:	f001 f9c3 	bl	1c6c6 <__cxa_guard_acquire>
   1b340:	b140      	cbz	r0, 1b354 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 2)
   1b342:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1b346:	f003 f8af 	bl	1e4a8 <malloc>
   1b34a:	4b3a      	ldr	r3, [pc, #232]	; (1b434 <getFileHandler(str&, CharDev&, void*)+0x110>)
   1b34c:	6018      	str	r0, [r3, #0]
   1b34e:	4620      	mov	r0, r4
   1b350:	f001 f9c5 	bl	1c6de <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:60
    /**
     * Packet format:
     * buffer <offset> <num bytes> ...
     * commit <filename> <file offset> <num bytes from buffer>
     */
    if (cmdParams.beginsWithIgnoreCase("commit"))
   1b354:	4938      	ldr	r1, [pc, #224]	; (1b438 <getFileHandler(str&, CharDev&, void*)+0x114>)
   1b356:	4630      	mov	r0, r6
   1b358:	f7fb fbbf 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   1b35c:	4607      	mov	r7, r0
   1b35e:	4604      	mov	r4, r0
   1b360:	b330      	cbz	r0, 1b3b0 <getFileHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:62
    {
        char filename[128] = { 0 };
   1b362:	2280      	movs	r2, #128	; 0x80
   1b364:	2100      	movs	r1, #0
   1b366:	a804      	add	r0, sp, #16
   1b368:	f003 f902 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:63
        int offset = 0;
   1b36c:	2300      	movs	r3, #0
   1b36e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:64
        int size = 0;
   1b370:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:65
        cmdParams.scanf("%*s %128s %i %i", &filename[0], &offset, &size);
   1b372:	ab03      	add	r3, sp, #12
   1b374:	9300      	str	r3, [sp, #0]
   1b376:	aa04      	add	r2, sp, #16
   1b378:	ab02      	add	r3, sp, #8
   1b37a:	4930      	ldr	r1, [pc, #192]	; (1b43c <getFileHandler(str&, CharDev&, void*)+0x118>)
   1b37c:	4630      	mov	r0, r6
   1b37e:	f7fb fafd 	bl	1697c <str::scanf(char const*, ...)>
   1b382:	492c      	ldr	r1, [pc, #176]	; (1b434 <getFileHandler(str&, CharDev&, void*)+0x110>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68

        FRESULT writeStatus = FR_INT_ERR;
        if(0 == offset) {
   1b384:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1b386:	9a03      	ldr	r2, [sp, #12]
   1b388:	6809      	ldr	r1, [r1, #0]
   1b38a:	a804      	add	r0, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68
        if(0 == offset) {
   1b38c:	b96b      	cbnz	r3, 1b3aa <getFileHandler(str&, CharDev&, void*)+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1b38e:	f7f9 fba6 	bl	14ade <Storage::write(char const*, void*, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:74
        }
        else {
            writeStatus = Storage::append(filename, spBuffer, size, offset);
        }
        output.printf(FR_OK == writeStatus ? "OK\n" : "File write error\n");
   1b392:	4b2b      	ldr	r3, [pc, #172]	; (1b440 <getFileHandler(str&, CharDev&, void*)+0x11c>)
   1b394:	492b      	ldr	r1, [pc, #172]	; (1b444 <getFileHandler(str&, CharDev&, void*)+0x120>)
   1b396:	2800      	cmp	r0, #0
   1b398:	bf18      	it	ne
   1b39a:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
            return true;
        }

        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
            if(! output.getChar(&c, OS_MS(2000))) {
                output.printf("ERROR: TIMEOUT\n");
   1b39c:	4628      	mov	r0, r5
   1b39e:	f7fc fc21 	bl	17be4 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:107
    else {
        return false;
    }

    return true;
}
   1b3a2:	4638      	mov	r0, r7
   1b3a4:	b024      	add	sp, #144	; 0x90
   1b3a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:72
            writeStatus = Storage::append(filename, spBuffer, size, offset);
   1b3aa:	f7f9 fbba 	bl	14b22 <Storage::append(char const*, void const*, unsigned int, unsigned int)>
   1b3ae:	e7f0      	b.n	1b392 <getFileHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:76
    else if (cmdParams.beginsWithIgnoreCase("buffer"))
   1b3b0:	4925      	ldr	r1, [pc, #148]	; (1b448 <getFileHandler(str&, CharDev&, void*)+0x124>)
   1b3b2:	4630      	mov	r0, r6
   1b3b4:	f7fb fb91 	bl	16ada <str::beginsWithIgnoreCase(char const*) const>
   1b3b8:	4607      	mov	r7, r0
   1b3ba:	2800      	cmp	r0, #0
   1b3bc:	d0f1      	beq.n	1b3a2 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1b3be:	ab04      	add	r3, sp, #16
   1b3c0:	4630      	mov	r0, r6
   1b3c2:	aa03      	add	r2, sp, #12
   1b3c4:	4921      	ldr	r1, [pc, #132]	; (1b44c <getFileHandler(str&, CharDev&, void*)+0x128>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:78
        int offset = 0;
   1b3c6:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:79
        int numBytes = 0;
   1b3c8:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:81
        char c = 0;
   1b3ca:	f88d 4008 	strb.w	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1b3ce:	f7fb fad5 	bl	1697c <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:85
        if (offset + numBytes > maxBufferSize) {
   1b3d2:	9e03      	ldr	r6, [sp, #12]
   1b3d4:	9b04      	ldr	r3, [sp, #16]
   1b3d6:	4433      	add	r3, r6
   1b3d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1b3dc:	dc13      	bgt.n	1b406 <getFileHandler(str&, CharDev&, void*)+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 1)
            spBuffer[i] = c;
   1b3de:	f8df 8054 	ldr.w	r8, [pc, #84]	; 1b434 <getFileHandler(str&, CharDev&, void*)+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 1)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b3e2:	9b03      	ldr	r3, [sp, #12]
   1b3e4:	9a04      	ldr	r2, [sp, #16]
   1b3e6:	1af3      	subs	r3, r6, r3
   1b3e8:	4293      	cmp	r3, r2
   1b3ea:	da1d      	bge.n	1b428 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 2)
   1b3ec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
   1b3f0:	da1a      	bge.n	1b428 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:91
            if(! output.getChar(&c, OS_MS(2000))) {
   1b3f2:	682b      	ldr	r3, [r5, #0]
   1b3f4:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   1b3f8:	681b      	ldr	r3, [r3, #0]
   1b3fa:	a902      	add	r1, sp, #8
   1b3fc:	4628      	mov	r0, r5
   1b3fe:	4798      	blx	r3
   1b400:	b940      	cbnz	r0, 1b414 <getFileHandler(str&, CharDev&, void*)+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
                output.printf("ERROR: TIMEOUT\n");
   1b402:	4913      	ldr	r1, [pc, #76]	; (1b450 <getFileHandler(str&, CharDev&, void*)+0x12c>)
   1b404:	e7ca      	b.n	1b39c <getFileHandler(str&, CharDev&, void*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:86
            output.printf("ERROR: Max buffer size is %i bytes\n", maxBufferSize);
   1b406:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1b40a:	4912      	ldr	r1, [pc, #72]	; (1b454 <getFileHandler(str&, CharDev&, void*)+0x130>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1b40c:	4628      	mov	r0, r5
   1b40e:	f7fc fbe9 	bl	17be4 <CharDev::printf(char const*, ...)>
   1b412:	e7c6      	b.n	1b3a2 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 3)
            spBuffer[i] = c;
   1b414:	f8d8 3000 	ldr.w	r3, [r8]
   1b418:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1b41c:	559a      	strb	r2, [r3, r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1b41e:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b422:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1b424:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b426:	e7dc      	b.n	1b3e2 <getFileHandler(str&, CharDev&, void*)+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1b428:	4622      	mov	r2, r4
   1b42a:	490b      	ldr	r1, [pc, #44]	; (1b458 <getFileHandler(str&, CharDev&, void*)+0x134>)
   1b42c:	e7ee      	b.n	1b40c <getFileHandler(str&, CharDev&, void*)+0xe8>
   1b42e:	bf00      	nop
   1b430:	2007c77c 	.word	0x2007c77c
   1b434:	2007c780 	.word	0x2007c780
   1b438:	00026b32 	.word	0x00026b32
   1b43c:	00026b39 	.word	0x00026b39
   1b440:	00026b20 	.word	0x00026b20
   1b444:	00026b1c 	.word	0x00026b1c
   1b448:	00026b49 	.word	0x00026b49
   1b44c:	00026b50 	.word	0x00026b50
   1b450:	00026b7e 	.word	0x00026b7e
   1b454:	00026b5a 	.word	0x00026b5a
   1b458:	00026b8e 	.word	0x00026b8e

0001b45c <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
 * Terminal task is our UART0 terminal that handles our commands into the board.
 * This also saves and restores the "disk" telemetry.  Disk telemetry variables
 * are automatically saved and restored across power-cycles to help us preserve
 * any non-volatile information.
 */
class terminalTask : public scheduler_task
   1b45c:	b538      	push	{r3, r4, r5, lr}
   1b45e:	4604      	mov	r4, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b460:	2500      	movs	r5, #0
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1b462:	4b10      	ldr	r3, [pc, #64]	; (1b4a4 <terminalTask::~terminalTask()+0x48>)
   1b464:	6003      	str	r3, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
   1b466:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1b468:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   1b46a:	42ab      	cmp	r3, r5
   1b46c:	d906      	bls.n	1b47c <terminalTask::~terminalTask()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1b46e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1b472:	2110      	movs	r1, #16
   1b474:	f001 f925 	bl	1c6c2 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b478:	3501      	adds	r5, #1
   1b47a:	e7f4      	b.n	1b466 <terminalTask::~terminalTask()+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1b47c:	b108      	cbz	r0, 1b482 <terminalTask::~terminalTask()+0x26>
   1b47e:	f7fb fcfd 	bl	16e7c <operator delete[](void*)>
_ZN6VECTORIN12terminalTask9cmdChan_tEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b482:	2500      	movs	r5, #0
   1b484:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b486:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1b488:	42ab      	cmp	r3, r5
   1b48a:	d906      	bls.n	1b49a <terminalTask::~terminalTask()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1b48c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1b490:	210c      	movs	r1, #12
   1b492:	f001 f916 	bl	1c6c2 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b496:	3501      	adds	r5, #1
   1b498:	e7f4      	b.n	1b484 <terminalTask::~terminalTask()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1b49a:	b108      	cbz	r0, 1b4a0 <terminalTask::~terminalTask()+0x44>
   1b49c:	f7fb fcee 	bl	16e7c <operator delete[](void*)>
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1b4a0:	4620      	mov	r0, r4
   1b4a2:	bd38      	pop	{r3, r4, r5, pc}
   1b4a4:	000273e4 	.word	0x000273e4

0001b4a8 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   1b4a8:	b510      	push	{r4, lr}
   1b4aa:	4604      	mov	r4, r0
   1b4ac:	f7ff ffd6 	bl	1b45c <terminalTask::~terminalTask()>
   1b4b0:	4620      	mov	r0, r4
   1b4b2:	2190      	movs	r1, #144	; 0x90
   1b4b4:	f001 f905 	bl	1c6c2 <operator delete(void*, unsigned int)>
   1b4b8:	4620      	mov	r0, r4
   1b4ba:	bd10      	pop	{r4, pc}

0001b4bc <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:59
{
    /* Nothing to do */
}

bool terminalTask::regTlm(void)
{
   1b4bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1b4be:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:61
    #if SYS_CFG_ENABLE_TLM
    return (TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mCommandCount, tlm_uint) &&
   1b4c0:	2402      	movs	r4, #2
   1b4c2:	2601      	movs	r6, #1
   1b4c4:	480c      	ldr	r0, [pc, #48]	; (1b4f8 <terminalTask::regTlm()+0x3c>)
   1b4c6:	f7f9 fe61 	bl	1518c <tlm_component_get_by_name>
   1b4ca:	9401      	str	r4, [sp, #4]
   1b4cc:	9600      	str	r6, [sp, #0]
   1b4ce:	4623      	mov	r3, r4
   1b4d0:	f105 0274 	add.w	r2, r5, #116	; 0x74
   1b4d4:	4909      	ldr	r1, [pc, #36]	; (1b4fc <terminalTask::regTlm()+0x40>)
   1b4d6:	f7f9 fecd 	bl	15274 <tlm_variable_register>
   1b4da:	b150      	cbz	r0, 1b4f2 <terminalTask::regTlm()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:62
            TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mDiskTlmSize, tlm_uint));
   1b4dc:	4806      	ldr	r0, [pc, #24]	; (1b4f8 <terminalTask::regTlm()+0x3c>)
   1b4de:	f7f9 fe55 	bl	1518c <tlm_component_get_by_name>
   1b4e2:	9401      	str	r4, [sp, #4]
   1b4e4:	9600      	str	r6, [sp, #0]
   1b4e6:	4623      	mov	r3, r4
   1b4e8:	f105 0276 	add.w	r2, r5, #118	; 0x76
   1b4ec:	4904      	ldr	r1, [pc, #16]	; (1b500 <terminalTask::regTlm()+0x44>)
   1b4ee:	f7f9 fec1 	bl	15274 <tlm_variable_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:66
    #else
    return true;
    #endif
}
   1b4f2:	b002      	add	sp, #8
   1b4f4:	bd70      	pop	{r4, r5, r6, pc}
   1b4f6:	bf00      	nop
   1b4f8:	00025a08 	.word	0x00025a08
   1b4fc:	00026c8d 	.word	0x00026c8d
   1b500:	00026c9b 	.word	0x00026c9b

0001b504 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:416
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
   1b504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b508:	4604      	mov	r4, r0
   1b50a:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b50c:	68c0      	ldr	r0, [r0, #12]
   1b50e:	0089      	lsls	r1, r1, #2
   1b510:	f004 fab8 	bl	1fa84 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b514:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b518:	68a5      	ldr	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b51a:	60e0      	str	r0, [r4, #12]
   1b51c:	00af      	lsls	r7, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b51e:	42ae      	cmp	r6, r5
   1b520:	d90d      	bls.n	1b53e <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b522:	200c      	movs	r0, #12
   1b524:	f7fb fca4 	bl	16e70 <operator new(unsigned int)>
   1b528:	68e3      	ldr	r3, [r4, #12]
   1b52a:	f8c0 8000 	str.w	r8, [r0]
   1b52e:	f8c0 8004 	str.w	r8, [r0, #4]
   1b532:	f880 8008 	strb.w	r8, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b536:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b538:	51d8      	str	r0, [r3, r7]
   1b53a:	3704      	adds	r7, #4
   1b53c:	e7ef      	b.n	1b51e <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1b53e:	6066      	str	r6, [r4, #4]
   1b540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b544 <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1b544:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1b546:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1b548:	4604      	mov	r4, r0
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1b54a:	2604      	movs	r6, #4
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1b54c:	460b      	mov	r3, r1
   1b54e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   1b552:	9500      	str	r5, [sp, #0]
   1b554:	4924      	ldr	r1, [pc, #144]	; (1b5e8 <terminalTask::terminalTask(unsigned char)+0xa4>)
   1b556:	f7fa fe63 	bl	16220 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1b55a:	4b24      	ldr	r3, [pc, #144]	; (1b5ec <terminalTask::terminalTask(unsigned char)+0xa8>)
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
   1b55c:	6366      	str	r6, [r4, #52]	; 0x34
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b55e:	6023      	str	r3, [r4, #0]
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1b560:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1b562:	63e5      	str	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1b564:	6425      	str	r5, [r4, #64]	; 0x40
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
   1b566:	2102      	movs	r1, #2
   1b568:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1b56c:	f7ff ffca 	bl	1b504 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1b570:	6526      	str	r6, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1b572:	6565      	str	r5, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1b574:	65a5      	str	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1b576:	65e5      	str	r5, [r4, #92]	; 0x5c
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b578:	4628      	mov	r0, r5
   1b57a:	2160      	movs	r1, #96	; 0x60
   1b57c:	f004 fa82 	bl	1fa84 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b580:	6da5      	ldr	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b582:	65e0      	str	r0, [r4, #92]	; 0x5c
   1b584:	00ae      	lsls	r6, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b586:	2d17      	cmp	r5, #23
   1b588:	d80c      	bhi.n	1b5a4 <terminalTask::terminalTask(unsigned char)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b58a:	2010      	movs	r0, #16
   1b58c:	f7fb fc70 	bl	16e70 <operator new(unsigned int)>
   1b590:	4607      	mov	r7, r0
   1b592:	2210      	movs	r2, #16
   1b594:	2100      	movs	r1, #0
   1b596:	f002 ffeb 	bl	1e570 <memset>
   1b59a:	6de3      	ldr	r3, [r4, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b59c:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b59e:	519f      	str	r7, [r3, r6]
   1b5a0:	3604      	adds	r6, #4
   1b5a2:	e7f0      	b.n	1b586 <terminalTask::terminalTask(unsigned char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1b5a4:	2318      	movs	r3, #24
   1b5a6:	6563      	str	r3, [r4, #84]	; 0x54
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1b5a8:	2301      	movs	r3, #1
   1b5aa:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b5ae:	2300      	movs	r3, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
    public:
        /// Default constructor
        SoftTimer() : mTargetMs(0), mIntervalMs(0) {}

        /// Constructor to set timer while instantiating this object.
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b5b0:	2200      	movs	r2, #0
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b5b2:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
   1b5b6:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
   1b5ba:	67a3      	str	r3, [r4, #120]	; 0x78
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77

        /**
         * Resets the timer from this point of time using the new timer value given.
         * @param ms  The milliseconds at which timer should expire next.
         */
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b5bc:	2700      	movs	r7, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b5be:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b5c0:	4e0b      	ldr	r6, [pc, #44]	; (1b5f0 <terminalTask::terminalTask(unsigned char)+0xac>)
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b5c2:	e9c4 2320 	strd	r2, r3, [r4, #128]	; 0x80
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b5c6:	e9c4 6722 	strd	r6, r7, [r4, #136]	; 0x88
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   1b5ca:	f7f4 ff67 	bl	1049c <sys_get_uptime_us>
   1b5ce:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b5d2:	2300      	movs	r3, #0
   1b5d4:	f002 f852 	bl	1d67c <__aeabi_uldivmod>
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
   1b5d8:	1980      	adds	r0, r0, r6
   1b5da:	4179      	adcs	r1, r7
   1b5dc:	e9c4 0120 	strd	r0, r1, [r4, #128]	; 0x80
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:56
}
   1b5e0:	4620      	mov	r0, r4
   1b5e2:	b003      	add	sp, #12
   1b5e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b5e6:	bf00      	nop
   1b5e8:	000273b5 	.word	0x000273b5
   1b5ec:	000273e4 	.word	0x000273e4
   1b5f0:	0001d4c0 	.word	0x0001d4c0

0001b5f4 <terminalTask::saveDiskTlm()>:
_ZN12terminalTask11saveDiskTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:217

    return true;
}

bool terminalTask::saveDiskTlm(void)
{
   1b5f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1b5f6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:221
    bool changed = false;

    #if SYS_CFG_ENABLE_TLM
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1b5f8:	481a      	ldr	r0, [pc, #104]	; (1b664 <terminalTask::saveDiskTlm()+0x70>)
   1b5fa:	f7f9 fdc7 	bl	1518c <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224

    /* Size of telemetry shouldn't change */
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b5fe:	f8b5 6076 	ldrh.w	r6, [r5, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:221
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1b602:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b604:	b916      	cbnz	r6, 1b60c <terminalTask::saveDiskTlm()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:225
        return changed;
   1b606:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:248
        }
    }
    #endif

    return changed;
}
   1b608:	b003      	add	sp, #12
   1b60a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:224 (discriminator 2)
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b60c:	f7fa f9f8 	bl	15a00 <tlm_binary_get_size_one>
   1b610:	4286      	cmp	r6, r0
   1b612:	d1f8      	bne.n	1b606 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:228
    if (!tlm_binary_compare_one(disk, mpBinaryDiskTlm))
   1b614:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1b616:	4620      	mov	r0, r4
   1b618:	f7fa fa0a 	bl	15a30 <tlm_binary_compare_one>
   1b61c:	4607      	mov	r7, r0
   1b61e:	2800      	cmp	r0, #0
   1b620:	d1f1      	bne.n	1b606 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:231
        puts("Disk variables changed...");
   1b622:	4811      	ldr	r0, [pc, #68]	; (1b668 <terminalTask::saveDiskTlm()+0x74>)
   1b624:	f004 f9c4 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:233
        FILE *file = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   1b628:	4910      	ldr	r1, [pc, #64]	; (1b66c <terminalTask::saveDiskTlm()+0x78>)
   1b62a:	480e      	ldr	r0, [pc, #56]	; (1b664 <terminalTask::saveDiskTlm()+0x70>)
   1b62c:	f002 fc7c 	bl	1df28 <fopen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:234
        if (file) {
   1b630:	4606      	mov	r6, r0
   1b632:	b1a8      	cbz	r0, 1b660 <terminalTask::saveDiskTlm()+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:236
            tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1b634:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1b636:	4620      	mov	r0, r4
   1b638:	f7fa f9ed 	bl	15a16 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:238
            tlm_stream_one_file(disk, file);
   1b63c:	4631      	mov	r1, r6
   1b63e:	4620      	mov	r0, r4
   1b640:	f7f9 fcae 	bl	14fa0 <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:239
            fclose(file);
   1b644:	4630      	mov	r0, r6
   1b646:	f002 fa15 	bl	1da74 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:241
            puts("Changes saved to disk...");
   1b64a:	4809      	ldr	r0, [pc, #36]	; (1b670 <terminalTask::saveDiskTlm()+0x7c>)
   1b64c:	f004 f9b0 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:242
            LOG_SIMPLE_MSG("Disk variables saved to disk");
   1b650:	4b08      	ldr	r3, [pc, #32]	; (1b674 <terminalTask::saveDiskTlm()+0x80>)
   1b652:	463a      	mov	r2, r7
   1b654:	9300      	str	r3, [sp, #0]
   1b656:	4639      	mov	r1, r7
   1b658:	463b      	mov	r3, r7
   1b65a:	2001      	movs	r0, #1
   1b65c:	f7fa ffba 	bl	165d4 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:230
        changed = true;
   1b660:	2001      	movs	r0, #1
   1b662:	e7d1      	b.n	1b608 <terminalTask::saveDiskTlm()+0x14>
   1b664:	000263ae 	.word	0x000263ae
   1b668:	00026c1e 	.word	0x00026c1e
   1b66c:	00025ecd 	.word	0x00025ecd
   1b670:	00026c38 	.word	0x00026c38
   1b674:	00026c51 	.word	0x00026c51

0001b678 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:252


void terminalTask::handleEchoAndBackspace(cmdChan_t *io, char newChar)
{
   1b678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:254
    /* Pointers to reduce too many -> references */
    const bool echo = io->echo;
   1b67c:	7a0f      	ldrb	r7, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:252
{
   1b67e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:255
    str *pStr = io->cmdstr;
   1b680:	684d      	ldr	r5, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:256
    CharDev *iodev = io->iodev;
   1b682:	680e      	ldr	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:259

    // Backspace 1 char @ terminal and erase last char of string
    if (echo && '\b' == newChar) {
   1b684:	b33f      	cbz	r7, 1b6d6 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:259 (discriminator 1)
   1b686:	2a08      	cmp	r2, #8
   1b688:	d119      	bne.n	1b6be <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:260
        if(pStr->getLen() > 0) {
   1b68a:	4628      	mov	r0, r5
   1b68c:	f7fb f96d 	bl	1696a <str::getLen() const>
   1b690:	2800      	cmp	r0, #0
   1b692:	dd12      	ble.n	1b6ba <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:261
            iodev->put("\b ");
   1b694:	4913      	ldr	r1, [pc, #76]	; (1b6e4 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x6c>)
   1b696:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b69a:	4630      	mov	r0, r6
   1b69c:	f7fc fa58 	bl	17b50 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:262
            pStr->eraseLast(1);
   1b6a0:	2101      	movs	r1, #1
   1b6a2:	4628      	mov	r0, r5
   1b6a4:	f7fb fa60 	bl	16b68 <str::eraseLast(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:275
    else if ('\n' != newChar && '\r' != newChar) {
        *(pStr) += newChar;
    }

    if (echo) {
        iodev->putChar(newChar);
   1b6a8:	6833      	ldr	r3, [r6, #0]
   1b6aa:	4621      	mov	r1, r4
   1b6ac:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:277
    }
}
   1b6ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:275
        iodev->putChar(newChar);
   1b6b2:	685b      	ldr	r3, [r3, #4]
   1b6b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b6b8:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:267
            newChar = bellSound;
   1b6ba:	2407      	movs	r4, #7
   1b6bc:	e7f4      	b.n	1b6a8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:270
    else if ('\n' != newChar && '\r' != newChar) {
   1b6be:	2a0a      	cmp	r2, #10
   1b6c0:	d0f2      	beq.n	1b6a8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1b6c2:	2a0d      	cmp	r2, #13
   1b6c4:	d0f0      	beq.n	1b6a8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:271
        *(pStr) += newChar;
   1b6c6:	4621      	mov	r1, r4
   1b6c8:	4628      	mov	r0, r5
   1b6ca:	f7fb fb6e 	bl	16daa <str::operator+=(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:274
    if (echo) {
   1b6ce:	2f00      	cmp	r7, #0
   1b6d0:	d1ea      	bne.n	1b6a8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1b6d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:270
    else if ('\n' != newChar && '\r' != newChar) {
   1b6d6:	2a0a      	cmp	r2, #10
   1b6d8:	d0fb      	beq.n	1b6d2 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5a>
   1b6da:	2a0d      	cmp	r2, #13
   1b6dc:	d1f3      	bne.n	1b6c6 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x4e>
   1b6de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b6e2:	bf00      	nop
   1b6e4:	00026c6e 	.word	0x00026c6e

0001b6e8 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:280

void terminalTask::addCommandChannel(CharDev *channel, bool echo)
{
   1b6e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b6ea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:284
    cmdChan_t input;
    input.iodev = channel;
    input.echo = echo;
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1b6ec:	2014      	movs	r0, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:280
{
   1b6ee:	460f      	mov	r7, r1
   1b6f0:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:284
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1b6f2:	f7fb fbbd 	bl	16e70 <operator new(unsigned int)>
   1b6f6:	2180      	movs	r1, #128	; 0x80
   1b6f8:	4606      	mov	r6, r0
   1b6fa:	f7fb fb05 	bl	16d08 <str::str(int)>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
    if(mVectorSize >= mVectorCapacity)
   1b6fe:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1b700:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b702:	428b      	cmp	r3, r1
   1b704:	d306      	bcc.n	1b714 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   1b706:	6b63      	ldr	r3, [r4, #52]	; 0x34
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418
    if(newSize < mVectorCapacity)
   1b708:	18c9      	adds	r1, r1, r3
   1b70a:	d203      	bcs.n	1b714 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   1b70c:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1b710:	f7ff fef8 	bl	1b504 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   1b714:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b716:	6c22      	ldr	r2, [r4, #64]	; 0x40
   1b718:	1c59      	adds	r1, r3, #1
   1b71a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1b71e:	63e1      	str	r1, [r4, #60]	; 0x3c
   1b720:	601f      	str	r7, [r3, #0]
   1b722:	605e      	str	r6, [r3, #4]
   1b724:	721d      	strb	r5, [r3, #8]
   1b726:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001b728 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:289
    mCmdIface += input;
}

terminalTask::cmdChan_t terminalTask::getCommand(void)
{
   1b728:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:290
    if (0 == mCmdIface.size()) {
   1b72c:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:289
{
   1b72e:	4606      	mov	r6, r0
   1b730:	460d      	mov	r5, r1
   1b732:	ac01      	add	r4, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:290
    if (0 == mCmdIface.size()) {
   1b734:	b977      	cbnz	r7, 1b754 <terminalTask::getCommand()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:291
        vTaskDelayMs(1000);
   1b736:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1b73a:	f7fd ff07 	bl	1954c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:292
        cmdChan_t noIface = { NULL, NULL };
   1b73e:	9701      	str	r7, [sp, #4]
   1b740:	6067      	str	r7, [r4, #4]
   1b742:	60a7      	str	r7, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:341
            ret.iodev = NULL;
            break;
        }
    } while (c != '\n');

    return ret;
   1b744:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   1b748:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:342
}
   1b74c:	4630      	mov	r0, r6
   1b74e:	b004      	add	sp, #16
   1b750:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   1b754:	6c0b      	ldr	r3, [r1, #64]	; 0x40
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b756:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:297
    cmdChan_t ret = mCmdIface[0];
   1b75a:	681b      	ldr	r3, [r3, #0]
   1b75c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b760:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:297
    cmdChan_t ret = mCmdIface[0];
   1b762:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:298
    char c = 0;
   1b766:	f808 3d0d 	strb.w	r3, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:303
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b76a:	f7fd fdbf 	bl	192ec <xTaskGetTickCount>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b76e:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:303
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b770:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306 (discriminator 1)
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b772:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1b774:	429f      	cmp	r7, r3
   1b776:	d25c      	bcs.n	1b832 <terminalTask::getCommand()+0x10a>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b778:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1b77a:	ea4f 0a87 	mov.w	sl, r7, lsl #2
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308
            if (mCmdIface[idx].iodev->isReady() && mCmdIface[idx].iodev->getChar(&c, 0))
   1b77e:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   1b782:	6818      	ldr	r0, [r3, #0]
   1b784:	7c03      	ldrb	r3, [r0, #16]
   1b786:	2b00      	cmp	r3, #0
   1b788:	d051      	beq.n	1b82e <terminalTask::getCommand()+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308 (discriminator 1)
   1b78a:	6803      	ldr	r3, [r0, #0]
   1b78c:	2200      	movs	r2, #0
   1b78e:	681b      	ldr	r3, [r3, #0]
   1b790:	4641      	mov	r1, r8
   1b792:	4798      	blx	r3
   1b794:	2800      	cmp	r0, #0
   1b796:	d04a      	beq.n	1b82e <terminalTask::getCommand()+0x106>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b798:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1b79a:	429f      	cmp	r7, r3
   1b79c:	d244      	bcs.n	1b828 <terminalTask::getCommand()+0x100>
   1b79e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1b7a0:	f853 300a 	ldr.w	r3, [r3, sl]
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:310
                ret = mCmdIface[idx];
   1b7a4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1b7a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:311
                handleEchoAndBackspace(&ret, c);
   1b7ac:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1b7b0:	4621      	mov	r1, r4
   1b7b2:	4628      	mov	r0, r5
   1b7b4:	f7ff ff60 	bl	1b678 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b7b8:	f7f4 fe70 	bl	1049c <sys_get_uptime_us>
   1b7bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b7c0:	2300      	movs	r3, #0
   1b7c2:	f001 ff5b 	bl	1d67c <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80

        /// Resets the timer from this point of time using the previous timeout interval
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1b7c6:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b7ca:	1880      	adds	r0, r0, r2
   1b7cc:	4159      	adcs	r1, r3
   1b7ce:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:327
        if (ret.cmdstr->getLen() >= ret.cmdstr->getCapacity() - 1) {
   1b7d2:	9802      	ldr	r0, [sp, #8]
   1b7d4:	f7fb f8c9 	bl	1696a <str::getLen() const>
   1b7d8:	4607      	mov	r7, r0
   1b7da:	9802      	ldr	r0, [sp, #8]
   1b7dc:	f7fb f8c8 	bl	16970 <str::getCapacity() const>
   1b7e0:	3801      	subs	r0, #1
   1b7e2:	4287      	cmp	r7, r0
   1b7e4:	daae      	bge.n	1b744 <terminalTask::getCommand()+0x1c>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
        { return (0 == mIntervalMs) ? false : ( getCurrentTimeMs() >= mTargetMs); }
   1b7e6:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b7ea:	4313      	orrs	r3, r2
   1b7ec:	d029      	beq.n	1b842 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b7ee:	f7f4 fe55 	bl	1049c <sys_get_uptime_us>
   1b7f2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b7f6:	2300      	movs	r3, #0
   1b7f8:	f001 ff40 	bl	1d67c <__aeabi_uldivmod>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
   1b7fc:	e9d5 2320 	ldrd	r2, r3, [r5, #128]	; 0x80
   1b800:	4299      	cmp	r1, r3
   1b802:	bf08      	it	eq
   1b804:	4290      	cmpeq	r0, r2
   1b806:	d31c      	bcc.n	1b842 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1b808:	f7f4 fe48 	bl	1049c <sys_get_uptime_us>
   1b80c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b810:	2300      	movs	r3, #0
   1b812:	f001 ff33 	bl	1d67c <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1b816:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1b81a:	1880      	adds	r0, r0, r2
   1b81c:	4159      	adcs	r1, r3
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:336
            ret.iodev = NULL;
   1b81e:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
   1b820:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:336
   1b824:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:337
            break;
   1b826:	e78d      	b.n	1b744 <terminalTask::getCommand()+0x1c>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b828:	f105 0344 	add.w	r3, r5, #68	; 0x44
   1b82c:	e7ba      	b.n	1b7a4 <terminalTask::getCommand()+0x7c>
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:306
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b82e:	3701      	adds	r7, #1
   1b830:	e79f      	b.n	1b772 <terminalTask::getCommand()+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:322
        if (!gotChar && xTaskGetTickCount() == ticksBefore) {
   1b832:	f7fd fd5b 	bl	192ec <xTaskGetTickCount>
   1b836:	4581      	cmp	r9, r0
   1b838:	d1cb      	bne.n	1b7d2 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:323
            vTaskDelay(2);
   1b83a:	2002      	movs	r0, #2
   1b83c:	f7fd fe86 	bl	1954c <vTaskDelay>
   1b840:	e7c7      	b.n	1b7d2 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:339
    } while (c != '\n');
   1b842:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1b846:	2b0a      	cmp	r3, #10
   1b848:	d18f      	bne.n	1b76a <terminalTask::getCommand()+0x42>
   1b84a:	e77b      	b.n	1b744 <terminalTask::getCommand()+0x1c>

0001b84c <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:174
{
   1b84c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1b850:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:175
    printf("LPC: ");
   1b852:	4827      	ldr	r0, [pc, #156]	; (1b8f0 <terminalTask::run(void*)+0xa4>)
   1b854:	f004 f838 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:176
    cmdChan_t cmdChannel = getCommand();
   1b858:	4629      	mov	r1, r5
   1b85a:	a801      	add	r0, sp, #4
   1b85c:	f7ff ff64 	bl	1b728 <terminalTask::getCommand()>
   1b860:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:179
    if (!cmdChannel.iodev) {
   1b862:	b954      	cbnz	r4, 1b87a <terminalTask::run(void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:180
        if (saveDiskTlm()) {
   1b864:	4628      	mov	r0, r5
   1b866:	f7ff fec5 	bl	1b5f4 <terminalTask::saveDiskTlm()>
   1b86a:	b910      	cbnz	r0, 1b872 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:184
            puts("");
   1b86c:	4821      	ldr	r0, [pc, #132]	; (1b8f4 <terminalTask::run(void*)+0xa8>)
   1b86e:	f004 f89f 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:214
}
   1b872:	2001      	movs	r0, #1
   1b874:	b004      	add	sp, #16
   1b876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:190
        str& cmd = *(cmdChannel.cmdstr);
   1b87a:	9e02      	ldr	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:192
        if (cmd.getLen() > 0)
   1b87c:	4630      	mov	r0, r6
   1b87e:	f7fb f874 	bl	1696a <str::getLen() const>
   1b882:	2800      	cmp	r0, #0
   1b884:	ddf5      	ble.n	1b872 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194
            PRINT_EXECUTION_SPEED()
   1b886:	f7f4 fe09 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b88a:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b88e:	f105 0e50 	add.w	lr, r5, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194
            PRINT_EXECUTION_SPEED()
   1b892:	4607      	mov	r7, r0
   1b894:	b320      	cbz	r0, 1b8e0 <terminalTask::run(void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
                ++mCommandCount;
   1b896:	f8b5 3074 	ldrh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b89a:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
                ++mCommandCount;
   1b89c:	3301      	adds	r3, #1
   1b89e:	f8a5 3074 	strh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:197
                mCmdProc.handleCommand(cmd, io);
   1b8a2:	4631      	mov	r1, r6
   1b8a4:	4670      	mov	r0, lr
   1b8a6:	f7fa fa1f 	bl	15ce8 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b8aa:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b8ac:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:202
                const char endOfTx[] = TERMINAL_END_CHARS;
   1b8ae:	f88d 8000 	strb.w	r8, [sp]
   1b8b2:	f88d 8001 	strb.w	r8, [sp, #1]
   1b8b6:	f88d 3002 	strb.w	r3, [sp, #2]
   1b8ba:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1b8be:	6823      	ldr	r3, [r4, #0]
   1b8c0:	f81d 1005 	ldrb.w	r1, [sp, r5]
   1b8c4:	685b      	ldr	r3, [r3, #4]
   1b8c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b8ca:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b8cc:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1b8ce:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:203 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1b8d0:	2d04      	cmp	r5, #4
   1b8d2:	d1f4      	bne.n	1b8be <terminalTask::run(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194 (discriminator 2)
            PRINT_EXECUTION_SPEED()
   1b8d4:	f7f4 fde2 	bl	1049c <sys_get_uptime_us>
   1b8d8:	1bc1      	subs	r1, r0, r7
   1b8da:	4807      	ldr	r0, [pc, #28]	; (1b8f8 <terminalTask::run(void*)+0xac>)
   1b8dc:	f003 fff4 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:208
            cmd.clear();
   1b8e0:	4630      	mov	r0, r6
   1b8e2:	f7fb f847 	bl	16974 <str::clear()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:209
            io.flush();
   1b8e6:	6823      	ldr	r3, [r4, #0]
   1b8e8:	4620      	mov	r0, r4
   1b8ea:	689b      	ldr	r3, [r3, #8]
   1b8ec:	4798      	blx	r3
   1b8ee:	e7c0      	b.n	1b872 <terminalTask::run(void*)+0x26>
   1b8f0:	00026c71 	.word	0x00026c71
   1b8f4:	00026c08 	.word	0x00026c08
   1b8f8:	00026c77 	.word	0x00026c77

0001b8fc <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b8fc:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b8fe:	4c06      	ldr	r4, [pc, #24]	; (1b918 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   1b900:	6823      	ldr	r3, [r4, #0]
   1b902:	b933      	cbnz	r3, 1b912 <SingletonTemplate<Uart0>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b904:	202c      	movs	r0, #44	; 0x2c
   1b906:	f7fb fab3 	bl	16e70 <operator new(unsigned int)>
   1b90a:	4605      	mov	r5, r0
   1b90c:	f7fc fd00 	bl	18310 <Uart0::Uart0()>
   1b910:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b912:	6820      	ldr	r0, [r4, #0]
   1b914:	bd38      	pop	{r3, r4, r5, pc}
   1b916:	bf00      	nop
   1b918:	2007c5f0 	.word	0x2007c5f0

0001b91c <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:58
        {
            char c = 0;
            Uart0::getInstance().getChar(&c);
            return c;
        }
        static char putcharIntrDriven(char thechar)
   1b91c:	b510      	push	{r4, lr}
   1b91e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
        {
            return Uart0::getInstance().putChar(thechar);
   1b920:	f7ff ffec 	bl	1b8fc <SingletonTemplate<Uart0>::getInstance()>
   1b924:	6803      	ldr	r3, [r0, #0]
   1b926:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:61
        }
   1b928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
            return Uart0::getInstance().putChar(thechar);
   1b92c:	685b      	ldr	r3, [r3, #4]
   1b92e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b932:	4718      	bx	r3

0001b934 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1b934:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:52
        static char getcharIntrDriven(char unused)
   1b936:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1b938:	ac02      	add	r4, sp, #8
   1b93a:	f804 3d01 	strb.w	r3, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:55
            Uart0::getInstance().getChar(&c);
   1b93e:	f7ff ffdd 	bl	1b8fc <SingletonTemplate<Uart0>::getInstance()>
   1b942:	6803      	ldr	r3, [r0, #0]
   1b944:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b948:	681b      	ldr	r3, [r3, #0]
   1b94a:	4621      	mov	r1, r4
   1b94c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:57
        }
   1b94e:	f89d 0007 	ldrb.w	r0, [sp, #7]
   1b952:	b002      	add	sp, #8
   1b954:	bd10      	pop	{r4, pc}
   1b956:	Address 0x000000000001b956 is out of bounds.


0001b958 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1b95c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b95e:	b08a      	sub	sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:71
    CommandProcessor &cp = mCmdProc;
   1b960:	f100 0450 	add.w	r4, r0, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1b964:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1b966:	9500      	str	r5, [sp, #0]
   1b968:	4620      	mov	r0, r4
   1b96a:	4b67      	ldr	r3, [pc, #412]	; (1bb08 <terminalTask::taskEntry()+0x1b0>)
   1b96c:	4a67      	ldr	r2, [pc, #412]	; (1bb0c <terminalTask::taskEntry()+0x1b4>)
   1b96e:	4968      	ldr	r1, [pc, #416]	; (1bb10 <terminalTask::taskEntry()+0x1b8>)
   1b970:	f7fa f8d6 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:75
    cp.addHandler(memInfoHandler,  "meminfo", "See memory info");
   1b974:	9500      	str	r5, [sp, #0]
   1b976:	4620      	mov	r0, r4
   1b978:	4b66      	ldr	r3, [pc, #408]	; (1bb14 <terminalTask::taskEntry()+0x1bc>)
   1b97a:	4a67      	ldr	r2, [pc, #412]	; (1bb18 <terminalTask::taskEntry()+0x1c0>)
   1b97c:	4967      	ldr	r1, [pc, #412]	; (1bb1c <terminalTask::taskEntry()+0x1c4>)
   1b97e:	f7fa f8cf 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:76
    cp.addHandler(healthHandler,   "health",  "Output system health");
   1b982:	9500      	str	r5, [sp, #0]
   1b984:	4620      	mov	r0, r4
   1b986:	4b66      	ldr	r3, [pc, #408]	; (1bb20 <terminalTask::taskEntry()+0x1c8>)
   1b988:	4a66      	ldr	r2, [pc, #408]	; (1bb24 <terminalTask::taskEntry()+0x1cc>)
   1b98a:	4967      	ldr	r1, [pc, #412]	; (1bb28 <terminalTask::taskEntry()+0x1d0>)
   1b98c:	f7fa f8c8 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:77
    cp.addHandler(timeHandler,     "time",    "'time' to view time.  'time set MM DD YYYY HH MM SS Wday' to set time");
   1b990:	9500      	str	r5, [sp, #0]
   1b992:	4620      	mov	r0, r4
   1b994:	4b65      	ldr	r3, [pc, #404]	; (1bb2c <terminalTask::taskEntry()+0x1d4>)
   1b996:	4a66      	ldr	r2, [pc, #408]	; (1bb30 <terminalTask::taskEntry()+0x1d8>)
   1b998:	4966      	ldr	r1, [pc, #408]	; (1bb34 <terminalTask::taskEntry()+0x1dc>)
   1b99a:	f7fa f8c1 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:81
                                          "'cat 0:file.txt -noprint' to test if file can be read");
   1b99e:	9500      	str	r5, [sp, #0]
   1b9a0:	4620      	mov	r0, r4
   1b9a2:	4b65      	ldr	r3, [pc, #404]	; (1bb38 <terminalTask::taskEntry()+0x1e0>)
   1b9a4:	4a65      	ldr	r2, [pc, #404]	; (1bb3c <terminalTask::taskEntry()+0x1e4>)
   1b9a6:	4966      	ldr	r1, [pc, #408]	; (1bb40 <terminalTask::taskEntry()+0x1e8>)
   1b9a8:	f7fa f8ba 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:82
    cp.addHandler(cpHandler,     "cp",    "Copy files from/to Flash/SD Card.  Ex: 'cp 0:file.txt 1:file.txt'");
   1b9ac:	9500      	str	r5, [sp, #0]
   1b9ae:	4620      	mov	r0, r4
   1b9b0:	4b64      	ldr	r3, [pc, #400]	; (1bb44 <terminalTask::taskEntry()+0x1ec>)
   1b9b2:	4a65      	ldr	r2, [pc, #404]	; (1bb48 <terminalTask::taskEntry()+0x1f0>)
   1b9b4:	4965      	ldr	r1, [pc, #404]	; (1bb4c <terminalTask::taskEntry()+0x1f4>)
   1b9b6:	f7fa f8b3 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:83
    cp.addHandler(dcpHandler,    "dcp",   "Copy all files of a directory to another directory.  Ex: 'dcp 0:src 1:dst'");
   1b9ba:	9500      	str	r5, [sp, #0]
   1b9bc:	4620      	mov	r0, r4
   1b9be:	4b64      	ldr	r3, [pc, #400]	; (1bb50 <terminalTask::taskEntry()+0x1f8>)
   1b9c0:	4a64      	ldr	r2, [pc, #400]	; (1bb54 <terminalTask::taskEntry()+0x1fc>)
   1b9c2:	4965      	ldr	r1, [pc, #404]	; (1bb58 <terminalTask::taskEntry()+0x200>)
   1b9c4:	f7fa f8ac 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:84
    cp.addHandler(lsHandler,     "ls",    "Use 'ls 0:' for Flash, or 'ls 1:' for SD Card");
   1b9c8:	9500      	str	r5, [sp, #0]
   1b9ca:	4620      	mov	r0, r4
   1b9cc:	4b63      	ldr	r3, [pc, #396]	; (1bb5c <terminalTask::taskEntry()+0x204>)
   1b9ce:	4a64      	ldr	r2, [pc, #400]	; (1bb60 <terminalTask::taskEntry()+0x208>)
   1b9d0:	4964      	ldr	r1, [pc, #400]	; (1bb64 <terminalTask::taskEntry()+0x20c>)
   1b9d2:	f7fa f8a5 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:85
    cp.addHandler(mkdirHandler,  "mkdir", "Create a directory. Ex: 'mkdir test'");
   1b9d6:	9500      	str	r5, [sp, #0]
   1b9d8:	4620      	mov	r0, r4
   1b9da:	4b63      	ldr	r3, [pc, #396]	; (1bb68 <terminalTask::taskEntry()+0x210>)
   1b9dc:	4a63      	ldr	r2, [pc, #396]	; (1bb6c <terminalTask::taskEntry()+0x214>)
   1b9de:	4964      	ldr	r1, [pc, #400]	; (1bb70 <terminalTask::taskEntry()+0x218>)
   1b9e0:	f7fa f89e 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:86
    cp.addHandler(mvHandler,     "mv",    "Rename a file. Ex: 'rm 0:file.txt 0:new.txt'");
   1b9e4:	9500      	str	r5, [sp, #0]
   1b9e6:	4620      	mov	r0, r4
   1b9e8:	4b62      	ldr	r3, [pc, #392]	; (1bb74 <terminalTask::taskEntry()+0x21c>)
   1b9ea:	4a63      	ldr	r2, [pc, #396]	; (1bb78 <terminalTask::taskEntry()+0x220>)
   1b9ec:	4963      	ldr	r1, [pc, #396]	; (1bb7c <terminalTask::taskEntry()+0x224>)
   1b9ee:	f7fa f897 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:87
    cp.addHandler(newFileHandler,"nf",    "Write a new file. Ex: 'nf <file.txt>");
   1b9f2:	9500      	str	r5, [sp, #0]
   1b9f4:	4620      	mov	r0, r4
   1b9f6:	4b62      	ldr	r3, [pc, #392]	; (1bb80 <terminalTask::taskEntry()+0x228>)
   1b9f8:	4a62      	ldr	r2, [pc, #392]	; (1bb84 <terminalTask::taskEntry()+0x22c>)
   1b9fa:	4963      	ldr	r1, [pc, #396]	; (1bb88 <terminalTask::taskEntry()+0x230>)
   1b9fc:	f7fa f890 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:88
    cp.addHandler(rmHandler,     "rm",    "Remove a file. Ex: 'rm 0:file.txt'");
   1ba00:	9500      	str	r5, [sp, #0]
   1ba02:	4620      	mov	r0, r4
   1ba04:	4b61      	ldr	r3, [pc, #388]	; (1bb8c <terminalTask::taskEntry()+0x234>)
   1ba06:	4a62      	ldr	r2, [pc, #392]	; (1bb90 <terminalTask::taskEntry()+0x238>)
   1ba08:	4962      	ldr	r1, [pc, #392]	; (1bb94 <terminalTask::taskEntry()+0x23c>)
   1ba0a:	f7fa f889 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:93
                                           "'i2c discover' : Discovers all I2C devices on the BUS");
   1ba0e:	9500      	str	r5, [sp, #0]
   1ba10:	4620      	mov	r0, r4
   1ba12:	4b61      	ldr	r3, [pc, #388]	; (1bb98 <terminalTask::taskEntry()+0x240>)
   1ba14:	4a61      	ldr	r2, [pc, #388]	; (1bb9c <terminalTask::taskEntry()+0x244>)
   1ba16:	4962      	ldr	r1, [pc, #392]	; (1bba0 <terminalTask::taskEntry()+0x248>)
   1ba18:	f7fa f882 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:103
    cp.addHandler(storageHandler,  "storage",  "Parameters: 'format sd', 'format flash', 'mount sd', 'mount flash'");
   1ba1c:	9500      	str	r5, [sp, #0]
   1ba1e:	4620      	mov	r0, r4
   1ba20:	4b60      	ldr	r3, [pc, #384]	; (1bba4 <terminalTask::taskEntry()+0x24c>)
   1ba22:	4a61      	ldr	r2, [pc, #388]	; (1bba8 <terminalTask::taskEntry()+0x250>)
   1ba24:	4961      	ldr	r1, [pc, #388]	; (1bbac <terminalTask::taskEntry()+0x254>)
   1ba26:	f7fa f87b 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:104
    cp.addHandler(rebootHandler,   "reboot",   "Reboots the system");
   1ba2a:	9500      	str	r5, [sp, #0]
   1ba2c:	4620      	mov	r0, r4
   1ba2e:	4b60      	ldr	r3, [pc, #384]	; (1bbb0 <terminalTask::taskEntry()+0x258>)
   1ba30:	4a60      	ldr	r2, [pc, #384]	; (1bbb4 <terminalTask::taskEntry()+0x25c>)
   1ba32:	4961      	ldr	r1, [pc, #388]	; (1bbb8 <terminalTask::taskEntry()+0x260>)
   1ba34:	f7fa f874 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:110
                                               );
   1ba38:	9500      	str	r5, [sp, #0]
   1ba3a:	4620      	mov	r0, r4
   1ba3c:	4b5f      	ldr	r3, [pc, #380]	; (1bbbc <terminalTask::taskEntry()+0x264>)
   1ba3e:	4a60      	ldr	r2, [pc, #384]	; (1bbc0 <terminalTask::taskEntry()+0x268>)
   1ba40:	4960      	ldr	r1, [pc, #384]	; (1bbc4 <terminalTask::taskEntry()+0x26c>)
   1ba42:	f7fa f86d 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:111
    cp.addHandler(learnIrHandler,  "learn",    "Begin to learn IR codes for numbers 0-9");
   1ba46:	9500      	str	r5, [sp, #0]
   1ba48:	4620      	mov	r0, r4
   1ba4a:	4b5f      	ldr	r3, [pc, #380]	; (1bbc8 <terminalTask::taskEntry()+0x270>)
   1ba4c:	4a5f      	ldr	r2, [pc, #380]	; (1bbcc <terminalTask::taskEntry()+0x274>)
   1ba4e:	4960      	ldr	r1, [pc, #384]	; (1bbd0 <terminalTask::taskEntry()+0x278>)
   1ba50:	f7fa f866 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:112
    cp.addHandler(wirelessHandler, "wireless", "Use 'wireless' to see the nested commands");
   1ba54:	9500      	str	r5, [sp, #0]
   1ba56:	4620      	mov	r0, r4
   1ba58:	4b5e      	ldr	r3, [pc, #376]	; (1bbd4 <terminalTask::taskEntry()+0x27c>)
   1ba5a:	4a5f      	ldr	r2, [pc, #380]	; (1bbd8 <terminalTask::taskEntry()+0x280>)
   1ba5c:	495f      	ldr	r1, [pc, #380]	; (1bbdc <terminalTask::taskEntry()+0x284>)
   1ba5e:	f7fa f85f 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:121
                                             "Write buffer to file: commit <filename> <file offset> <num bytes from buffer>");
   1ba62:	9500      	str	r5, [sp, #0]
   1ba64:	4620      	mov	r0, r4
   1ba66:	4b5e      	ldr	r3, [pc, #376]	; (1bbe0 <terminalTask::taskEntry()+0x288>)
   1ba68:	4a5e      	ldr	r2, [pc, #376]	; (1bbe4 <terminalTask::taskEntry()+0x28c>)
   1ba6a:	495f      	ldr	r1, [pc, #380]	; (1bbe8 <terminalTask::taskEntry()+0x290>)
   1ba6c:	f7fa f858 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:122
    cp.addHandler(flashProgHandler, "flash", "'flash <filename>' Will flash CPU with this new binary file");
   1ba70:	9500      	str	r5, [sp, #0]
   1ba72:	4620      	mov	r0, r4
   1ba74:	4b5d      	ldr	r3, [pc, #372]	; (1bbec <terminalTask::taskEntry()+0x294>)
   1ba76:	4a5e      	ldr	r2, [pc, #376]	; (1bbf0 <terminalTask::taskEntry()+0x298>)
   1ba78:	495e      	ldr	r1, [pc, #376]	; (1bbf4 <terminalTask::taskEntry()+0x29c>)
   1ba7a:	f7fa f851 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:129
                                                 "'telemetry get <comp. name> <name>' to get variable value\n");
   1ba7e:	9500      	str	r5, [sp, #0]
   1ba80:	4b5d      	ldr	r3, [pc, #372]	; (1bbf8 <terminalTask::taskEntry()+0x2a0>)
   1ba82:	4a5e      	ldr	r2, [pc, #376]	; (1bbfc <terminalTask::taskEntry()+0x2a4>)
   1ba84:	495e      	ldr	r1, [pc, #376]	; (1bc00 <terminalTask::taskEntry()+0x2a8>)
   1ba86:	4620      	mov	r0, r4
   1ba88:	f7fa f84a 	bl	15b20 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:133
    Uart0& uart0 = Uart0::getInstance();
   1ba8c:	f7ff ff36 	bl	1b8fc <SingletonTemplate<Uart0>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1ba90:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ba94:	2220      	movs	r2, #32
   1ba96:	f44f 4116 	mov.w	r1, #38400	; 0x9600
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:133
    Uart0& uart0 = Uart0::getInstance();
   1ba9a:	4605      	mov	r5, r0
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
        /**
         * @{  This API just provides a means to set a flag if UART is ready or not
         *     This doesn't cause any change to the way UART functions.
         */
        bool isReady(void) { return mReady; }
        void setReady(bool r) { mReady = r; }
   1ba9c:	2701      	movs	r7, #1
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1ba9e:	f7fc fc17 	bl	182d0 <Uart0::init(unsigned int, int, int)>
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
   1baa2:	742f      	strb	r7, [r5, #16]
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:134
   1baa4:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:136
    sys_set_inchar_func(uart0.getcharIntrDriven);
   1baa6:	4857      	ldr	r0, [pc, #348]	; (1bc04 <terminalTask::taskEntry()+0x2ac>)
   1baa8:	f7fb faf0 	bl	1708c <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:137
    sys_set_outchar_func(uart0.putcharIntrDriven);
   1baac:	4856      	ldr	r0, [pc, #344]	; (1bc08 <terminalTask::taskEntry()+0x2b0>)
   1baae:	f7fb fae7 	bl	17080 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:140
    addCommandChannel(&uart0, true);
   1bab2:	463a      	mov	r2, r7
   1bab4:	4629      	mov	r1, r5
   1bab6:	4630      	mov	r0, r6
   1bab8:	f7ff fe16 	bl	1b6e8 <terminalTask::addCommandChannel(CharDev*, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:154
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1babc:	4853      	ldr	r0, [pc, #332]	; (1bc0c <terminalTask::taskEntry()+0x2b4>)
   1babe:	f7f9 fb65 	bl	1518c <tlm_component_get_by_name>
   1bac2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:155
    mDiskTlmSize = tlm_binary_get_size_one(disk);
   1bac4:	f7f9 ff9c 	bl	15a00 <tlm_binary_get_size_one>
   1bac8:	f8a6 0076 	strh.w	r0, [r6, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:156
    mpBinaryDiskTlm = new char[mDiskTlmSize];
   1bacc:	b280      	uxth	r0, r0
   1bace:	f7fb f9d1 	bl	16e74 <operator new[](unsigned int)>
   1bad2:	4601      	mov	r1, r0
   1bad4:	67b0      	str	r0, [r6, #120]	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:162
    tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1bad6:	4638      	mov	r0, r7
   1bad8:	f7f9 ff9d 	bl	15a16 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:166
    STR_ON_STACK(help, 8);
   1badc:	2208      	movs	r2, #8
   1bade:	a903      	add	r1, sp, #12
   1bae0:	a805      	add	r0, sp, #20
   1bae2:	f7fa ff1b 	bl	1691c <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:167
    help = "help";
   1bae6:	a805      	add	r0, sp, #20
   1bae8:	4949      	ldr	r1, [pc, #292]	; (1bc10 <terminalTask::taskEntry()+0x2b8>)
   1baea:	f7fb f989 	bl	16e00 <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:168
    mCmdProc.handleCommand(help, uart0);
   1baee:	462a      	mov	r2, r5
   1baf0:	a905      	add	r1, sp, #20
   1baf2:	4620      	mov	r0, r4
   1baf4:	f7fa f8f8 	bl	15ce8 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:166
    STR_ON_STACK(help, 8);
   1baf8:	a805      	add	r0, sp, #20
   1bafa:	f7fa ff23 	bl	16944 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:171
}
   1bafe:	4640      	mov	r0, r8
   1bb00:	b00a      	add	sp, #40	; 0x28
   1bb02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bb06:	bf00      	nop
   1bb08:	00026ca8 	.word	0x00026ca8
   1bb0c:	00026cea 	.word	0x00026cea
   1bb10:	00019c05 	.word	0x00019c05
   1bb14:	00026cdf 	.word	0x00026cdf
   1bb18:	00026cef 	.word	0x00026cef
   1bb1c:	00019ced 	.word	0x00019ced
   1bb20:	00026cf7 	.word	0x00026cf7
   1bb24:	00026d05 	.word	0x00026d05
   1bb28:	0001a7c1 	.word	0x0001a7c1
   1bb2c:	00026d0c 	.word	0x00026d0c
   1bb30:	00026d4d 	.word	0x00026d4d
   1bb34:	00019d11 	.word	0x00019d11
   1bb38:	00026d52 	.word	0x00026d52
   1bb3c:	00026dae 	.word	0x00026dae
   1bb40:	00019fed 	.word	0x00019fed
   1bb44:	00026db2 	.word	0x00026db2
   1bb48:	00026e40 	.word	0x00026e40
   1bb4c:	00019f6d 	.word	0x00019f6d
   1bb50:	00026df4 	.word	0x00026df4
   1bb54:	00026e3f 	.word	0x00026e3f
   1bb58:	0001a3fd 	.word	0x0001a3fd
   1bb5c:	00026e43 	.word	0x00026e43
   1bb60:	00026e71 	.word	0x00026e71
   1bb64:	0001a0ed 	.word	0x0001a0ed
   1bb68:	00026e74 	.word	0x00026e74
   1bb6c:	00026e99 	.word	0x00026e99
   1bb70:	0001a271 	.word	0x0001a271
   1bb74:	00026e9f 	.word	0x00026e9f
   1bb78:	00026ecc 	.word	0x00026ecc
   1bb7c:	0001a2e9 	.word	0x0001a2e9
   1bb80:	00026ecf 	.word	0x00026ecf
   1bb84:	00027ac9 	.word	0x00027ac9
   1bb88:	0001a345 	.word	0x0001a345
   1bb8c:	00026ef4 	.word	0x00026ef4
   1bb90:	00026f17 	.word	0x00026f17
   1bb94:	0001a2ad 	.word	0x0001a2ad
   1bb98:	00026f1a 	.word	0x00026f1a
   1bb9c:	00026fed 	.word	0x00026fed
   1bba0:	0001a969 	.word	0x0001a969
   1bba4:	00026ff1 	.word	0x00026ff1
   1bba8:	00027034 	.word	0x00027034
   1bbac:	0001a539 	.word	0x0001a539
   1bbb0:	0002703c 	.word	0x0002703c
   1bbb4:	0002704f 	.word	0x0002704f
   1bbb8:	0001a5f5 	.word	0x0001a5f5
   1bbbc:	00027056 	.word	0x00027056
   1bbc0:	00027155 	.word	0x00027155
   1bbc4:	00019dd5 	.word	0x00019dd5
   1bbc8:	00027159 	.word	0x00027159
   1bbcc:	00027181 	.word	0x00027181
   1bbd0:	0001a769 	.word	0x0001a769
   1bbd4:	00027187 	.word	0x00027187
   1bbd8:	0002745a 	.word	0x0002745a
   1bbdc:	0001ada5 	.word	0x0001ada5
   1bbe0:	000271b1 	.word	0x000271b1
   1bbe4:	000272a5 	.word	0x000272a5
   1bbe8:	0001b325 	.word	0x0001b325
   1bbec:	0002726e 	.word	0x0002726e
   1bbf0:	000262d4 	.word	0x000262d4
   1bbf4:	0001b271 	.word	0x0001b271
   1bbf8:	000272aa 	.word	0x000272aa
   1bbfc:	000273ab 	.word	0x000273ab
   1bc00:	0001a625 	.word	0x0001a625
   1bc04:	0001b935 	.word	0x0001b935
   1bc08:	0001b91d 	.word	0x0001b91d
   1bc0c:	000263ae 	.word	0x000263ae
   1bc10:	00025617 	.word	0x00025617

0001bc14 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bc14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bc16:	4c0c      	ldr	r4, [pc, #48]	; (1bc48 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   1bc18:	6823      	ldr	r3, [r4, #0]
   1bc1a:	b99b      	cbnz	r3, 1bc44 <SingletonTemplate<LED_Display>::getInstance()+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bc1c:	2008      	movs	r0, #8
   1bc1e:	f7fb f927 	bl	16e70 <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bc22:	4d0a      	ldr	r5, [pc, #40]	; (1bc4c <SingletonTemplate<LED_Display>::getInstance()+0x38>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bc24:	4606      	mov	r6, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bc26:	682b      	ldr	r3, [r5, #0]
   1bc28:	b93b      	cbnz	r3, 1bc3a <SingletonTemplate<LED_Display>::getInstance()+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bc2a:	f44f 7094 	mov.w	r0, #296	; 0x128
   1bc2e:	f7fb f91f 	bl	16e70 <operator new(unsigned int)>
   1bc32:	4607      	mov	r7, r0
   1bc34:	f7fc fca0 	bl	18578 <I2C2::I2C2()>
   1bc38:	602f      	str	r7, [r5, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bc3a:	682b      	ldr	r3, [r5, #0]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1bc3c:	6026      	str	r6, [r4, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bc3e:	6033      	str	r3, [r6, #0]
   1bc40:	2340      	movs	r3, #64	; 0x40
   1bc42:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bc44:	6820      	ldr	r0, [r4, #0]
   1bc46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bc48:	2007c784 	.word	0x2007c784
   1bc4c:	2007c5f8 	.word	0x2007c5f8

0001bc50 <hl_print_line()>:
_ZL13hl_print_linev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   1bc50:	4801      	ldr	r0, [pc, #4]	; (1bc58 <hl_print_line()+0x8>)
   1bc52:	f003 bead 	b.w	1f9b0 <puts>
   1bc56:	bf00      	nop
   1bc58:	000277b0 	.word	0x000277b0

0001bc5c <ssp_set_max_clock>:
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   1bc5c:	b538      	push	{r3, r4, r5, lr}
   1bc5e:	4604      	mov	r4, r0
   1bc60:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   1bc62:	f7f4 fda9 	bl	107b8 <sys_get_cpu_clock>
   1bc66:	4b07      	ldr	r3, [pc, #28]	; (1bc84 <ssp_set_max_clock+0x28>)
   1bc68:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   1bc6c:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1bc6e:	fbb0 f2f3 	udiv	r2, r0, r3
   1bc72:	42aa      	cmp	r2, r5
   1bc74:	d904      	bls.n	1bc80 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   1bc76:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1bc7a:	d001      	beq.n	1bc80 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   1bc7c:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1bc7e:	e7f6      	b.n	1bc6e <ssp_set_max_clock+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   1bc80:	6123      	str	r3, [r4, #16]
   1bc82:	bd38      	pop	{r3, r4, r5, pc}
   1bc84:	000f4240 	.word	0x000f4240

0001bc88 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   1bc88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   1bc8a:	f200 2635 	addw	r6, r0, #565	; 0x235
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   1bc8e:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   1bc90:	2201      	movs	r2, #1
   1bc92:	4631      	mov	r1, r6
   1bc94:	f7f6 ff3c 	bl	12b10 <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   1bc98:	4605      	mov	r5, r0
   1bc9a:	bb38      	cbnz	r0, 1bcec <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1bc9c:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1bc9e:	aa02      	add	r2, sp, #8
   1bca0:	a903      	add	r1, sp, #12
   1bca2:	4630      	mov	r0, r6
   1bca4:	f7f7 fb07 	bl	132b6 <f_getfree>
   1bca8:	bb40      	cbnz	r0, 1bcfc <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bcaa:	9802      	ldr	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1bcac:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bcae:	7882      	ldrb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1bcb0:	fb03 f102 	mul.w	r1, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bcb4:	6983      	ldr	r3, [r0, #24]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   1bcb6:	4812      	ldr	r0, [pc, #72]	; (1bd00 <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   1bcb8:	3b02      	subs	r3, #2
   1bcba:	435a      	muls	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1bcbc:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   1bcbe:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   1bcc2:	bf38      	it	cc
   1bcc4:	2001      	movcc	r0, #1
   1bcc6:	4b0f      	ldr	r3, [pc, #60]	; (1bd04 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   1bcc8:	bf24      	itt	cs
   1bcca:	4603      	movcs	r3, r0
   1bccc:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1bcd0:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   1bcd2:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   1bcd6:	fbb2 f2f0 	udiv	r2, r2, r0
   1bcda:	9100      	str	r1, [sp, #0]
   1bcdc:	9301      	str	r3, [sp, #4]
   1bcde:	4621      	mov	r1, r4
   1bce0:	4809      	ldr	r0, [pc, #36]	; (1bd08 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   1bce2:	f003 fdf1 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   1bce6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   1bce8:	b004      	add	sp, #16
   1bcea:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1bcec:	4b07      	ldr	r3, [pc, #28]	; (1bd0c <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   1bcee:	462a      	mov	r2, r5
   1bcf0:	4621      	mov	r1, r4
   1bcf2:	4807      	ldr	r0, [pc, #28]	; (1bd10 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   1bcf4:	f003 fde8 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   1bcf8:	2000      	movs	r0, #0
   1bcfa:	e7f5      	b.n	1bce8 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1bcfc:	4b05      	ldr	r3, [pc, #20]	; (1bd14 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   1bcfe:	e7f6      	b.n	1bcee <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   1bd00:	000277ee 	.word	0x000277ee
   1bd04:	000277eb 	.word	0x000277eb
   1bd08:	000277f8 	.word	0x000277f8
   1bd0c:	000277f5 	.word	0x000277f5
   1bd10:	00027826 	.word	0x00027826
   1bd14:	000277f1 	.word	0x000277f1

0001bd18 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bd18:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bd1a:	4c05      	ldr	r4, [pc, #20]	; (1bd30 <SingletonTemplate<LED>::getInstance()+0x18>)
   1bd1c:	6825      	ldr	r5, [r4, #0]
   1bd1e:	b925      	cbnz	r5, 1bd2a <SingletonTemplate<LED>::getInstance()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bd20:	2001      	movs	r0, #1
   1bd22:	f7fb f8a5 	bl	16e70 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   1bd26:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1bd28:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bd2a:	6820      	ldr	r0, [r4, #0]
   1bd2c:	bd38      	pop	{r3, r4, r5, pc}
   1bd2e:	bf00      	nop
   1bd30:	2007c78c 	.word	0x2007c78c

0001bd34 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bd34:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bd36:	4c08      	ldr	r4, [pc, #32]	; (1bd58 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   1bd38:	6823      	ldr	r3, [r4, #0]
   1bd3a:	b95b      	cbnz	r3, 1bd54 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bd3c:	200c      	movs	r0, #12
   1bd3e:	f7fb f897 	bl	16e70 <operator new(unsigned int)>
   1bd42:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bd44:	f7fe fd2c 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1bd48:	2390      	movs	r3, #144	; 0x90
   1bd4a:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1bd4c:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bd4e:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1bd50:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1bd52:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bd54:	6820      	ldr	r0, [r4, #0]
   1bd56:	bd38      	pop	{r3, r4, r5, pc}
   1bd58:	2007c75c 	.word	0x2007c75c

0001bd5c <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bd5c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bd5e:	4c04      	ldr	r4, [pc, #16]	; (1bd70 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   1bd60:	6823      	ldr	r3, [r4, #0]
   1bd62:	b91b      	cbnz	r3, 1bd6c <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bd64:	2001      	movs	r0, #1
   1bd66:	f7fb f883 	bl	16e70 <operator new(unsigned int)>
   1bd6a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bd6c:	6820      	ldr	r0, [r4, #0]
   1bd6e:	bd10      	pop	{r4, pc}
   1bd70:	2007c760 	.word	0x2007c760

0001bd74 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bd74:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bd76:	4c04      	ldr	r4, [pc, #16]	; (1bd88 <SingletonTemplate<Switches>::getInstance()+0x14>)
   1bd78:	6823      	ldr	r3, [r4, #0]
   1bd7a:	b91b      	cbnz	r3, 1bd84 <SingletonTemplate<Switches>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bd7c:	2001      	movs	r0, #1
   1bd7e:	f7fb f877 	bl	16e70 <operator new(unsigned int)>
   1bd82:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bd84:	6820      	ldr	r0, [r4, #0]
   1bd86:	bd10      	pop	{r4, pc}
   1bd88:	2007c788 	.word	0x2007c788

0001bd8c <high_level_init()>:
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1bd8c:	2340      	movs	r3, #64	; 0x40
   1bd8e:	49b6      	ldr	r1, [pc, #728]	; (1c068 <high_level_init()+0x2dc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   1bd90:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1bd92:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1bd94:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1bd98:	4ab4      	ldr	r2, [pc, #720]	; (1c06c <high_level_init()+0x2e0>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1bd9a:	2507      	movs	r5, #7
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   1bd9c:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   1bd9e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1bda2:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   1bda4:	4bb2      	ldr	r3, [pc, #712]	; (1c070 <high_level_init()+0x2e4>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1bda6:	2402      	movs	r4, #2
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1bda8:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   1bdaa:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1bdae:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   1bdb2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   1bdb4:	6818      	ldr	r0, [r3, #0]
   1bdb6:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   1bdba:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   1bdbc:	6818      	ldr	r0, [r3, #0]
   1bdbe:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1bdc2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   1bdc4:	6808      	ldr	r0, [r1, #0]
   1bdc6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   1bdca:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   1bdcc:	6818      	ldr	r0, [r3, #0]
   1bdce:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   1bdd2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   1bdd4:	6818      	ldr	r0, [r3, #0]
   1bdd6:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   1bdda:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   1bddc:	6818      	ldr	r0, [r3, #0]
   1bdde:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   1bde2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   1bde4:	6818      	ldr	r0, [r3, #0]
   1bde6:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   1bdea:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   1bdec:	6818      	ldr	r0, [r3, #0]
   1bdee:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   1bdf2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   1bdf4:	6818      	ldr	r0, [r3, #0]
   1bdf6:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   1bdfa:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   1bdfc:	6858      	ldr	r0, [r3, #4]
   1bdfe:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   1be02:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   1be04:	6858      	ldr	r0, [r3, #4]
   1be06:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   1be0a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   1be0c:	6858      	ldr	r0, [r3, #4]
   1be0e:	f020 0003 	bic.w	r0, r0, #3
   1be12:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   1be14:	6808      	ldr	r0, [r1, #0]
   1be16:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   1be1a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   1be1c:	6858      	ldr	r0, [r3, #4]
   1be1e:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1be22:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   1be24:	6808      	ldr	r0, [r1, #0]
   1be26:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   1be2a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   1be2c:	68d9      	ldr	r1, [r3, #12]
   1be2e:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   1be32:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   1be34:	6811      	ldr	r1, [r2, #0]
   1be36:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   1be3a:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   1be3c:	6859      	ldr	r1, [r3, #4]
   1be3e:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   1be42:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   1be44:	6859      	ldr	r1, [r3, #4]
   1be46:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   1be4a:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   1be4c:	6898      	ldr	r0, [r3, #8]
   1be4e:	4989      	ldr	r1, [pc, #548]	; (1c074 <high_level_init()+0x2e8>)
   1be50:	4001      	ands	r1, r0
   1be52:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   1be54:	6811      	ldr	r1, [r2, #0]
   1be56:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   1be5a:	f041 0101 	orr.w	r1, r1, #1
   1be5e:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   1be60:	6899      	ldr	r1, [r3, #8]
   1be62:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1be66:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   1be68:	6899      	ldr	r1, [r3, #8]
   1be6a:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   1be6e:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   1be70:	6811      	ldr	r1, [r2, #0]
   1be72:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   1be76:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   1be78:	68d9      	ldr	r1, [r3, #12]
   1be7a:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   1be7e:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   1be80:	68d9      	ldr	r1, [r3, #12]
   1be82:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   1be86:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   1be88:	68d9      	ldr	r1, [r3, #12]
   1be8a:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1be8e:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   1be90:	6813      	ldr	r3, [r2, #0]
   1be92:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   1be96:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   1be98:	6813      	ldr	r3, [r2, #0]
   1be9a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   1be9e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   1bea0:	f7fc f890 	bl	17fc4 <adc0_init>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   1bea4:	2101      	movs	r1, #1
   1bea6:	200a      	movs	r0, #10
   1bea8:	f7f4 fd38 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   1beac:	2101      	movs	r1, #1
   1beae:	200a      	movs	r0, #10
   1beb0:	f7f4 fd4e 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1beb4:	4870      	ldr	r0, [pc, #448]	; (1c078 <high_level_init()+0x2ec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1beb6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1beb8:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1beba:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1bebc:	f7ff fece 	bl	1bc5c <ssp_set_max_clock>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   1bec0:	f7fc fa46 	bl	18350 <ssp1_dma_init>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   1bec4:	2101      	movs	r1, #1
   1bec6:	2015      	movs	r0, #21
   1bec8:	f7f4 fd28 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   1becc:	2101      	movs	r1, #1
   1bece:	2015      	movs	r0, #21
   1bed0:	f7f4 fd3e 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1bed4:	4869      	ldr	r0, [pc, #420]	; (1c07c <high_level_init()+0x2f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1bed6:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1bed8:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1beda:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1bedc:	f7ff febe 	bl	1bc5c <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   1bee0:	f7fe fc5e 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1bee4:	2164      	movs	r1, #100	; 0x64
   1bee6:	f7fc fb11 	bl	1850c <I2C2::init(unsigned int)>
   1beea:	b910      	cbnz	r0, 1bef2 <high_level_init()+0x166>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   1beec:	4864      	ldr	r0, [pc, #400]	; (1c080 <high_level_init()+0x2f4>)
   1beee:	f003 fd5f 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   1bef2:	f7f4 faa9 	bl	10448 <lpc_sys_setup_system_timer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   1bef6:	f7f5 f88b 	bl	11010 <wireless_init>
   1befa:	b910      	cbnz	r0, 1bf02 <high_level_init()+0x176>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   1befc:	4861      	ldr	r0, [pc, #388]	; (1c084 <high_level_init()+0x2f8>)
   1befe:	f003 fd57 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   1bf02:	4861      	ldr	r0, [pc, #388]	; (1c088 <high_level_init()+0x2fc>)
   1bf04:	f7f9 f954 	bl	151b0 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   1bf08:	4860      	ldr	r0, [pc, #384]	; (1c08c <high_level_init()+0x300>)
   1bf0a:	f7f9 f951 	bl	151b0 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   1bf0e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1bf12:	f7fa fcf2 	bl	168fa <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   1bf16:	f7ff fe9b 	bl	1bc50 <hl_print_line()>
hl_print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   1bf1a:	f7f4 fc4d 	bl	107b8 <sys_get_cpu_clock>
   1bf1e:	f001 f9bf 	bl	1d2a0 <__aeabi_ui2f>
   1bf22:	495b      	ldr	r1, [pc, #364]	; (1c090 <high_level_init()+0x304>)
   1bf24:	f001 fac8 	bl	1d4b8 <__aeabi_fdiv>
   1bf28:	f001 f840 	bl	1cfac <__aeabi_f2d>
   1bf2c:	4602      	mov	r2, r0
   1bf2e:	460b      	mov	r3, r1
   1bf30:	4858      	ldr	r0, [pc, #352]	; (1c094 <high_level_init()+0x308>)
   1bf32:	f003 fcc9 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   1bf36:	f7f4 f963 	bl	10200 <sys_get_boot_type>
   1bf3a:	2805      	cmp	r0, #5
   1bf3c:	ac04      	add	r4, sp, #16
   1bf3e:	d114      	bne.n	1bf6a <high_level_init()+0x1de>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   1bf40:	2300      	movs	r3, #0
   1bf42:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   1bf44:	4b54      	ldr	r3, [pc, #336]	; (1c098 <high_level_init()+0x30c>)
   1bf46:	681b      	ldr	r3, [r3, #0]
   1bf48:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   1bf4a:	f7ff fe81 	bl	1bc50 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1bf4e:	4b53      	ldr	r3, [pc, #332]	; (1c09c <high_level_init()+0x310>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1bf50:	4853      	ldr	r0, [pc, #332]	; (1c0a0 <high_level_init()+0x314>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1bf52:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   1bf54:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   1bf56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1bf58:	9400      	str	r4, [sp, #0]
   1bf5a:	f003 fcb5 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   1bf5e:	f7ff fe77 	bl	1bc50 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   1bf62:	f241 3088 	movw	r0, #5000	; 0x1388
   1bf66:	f7fa fcc8 	bl	168fa <delay_ms>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1bf6a:	f7fd fdff 	bl	19b6c <Storage::getFlashDrive()>
   1bf6e:	494d      	ldr	r1, [pc, #308]	; (1c0a4 <high_level_init()+0x318>)
   1bf70:	f7ff fe8a 	bl	1bc88 <hl_mount_storage(FileSystemObject&, char const*)>
   1bf74:	4605      	mov	r5, r0
   1bf76:	bb68      	cbnz	r0, 1bfd4 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   1bf78:	484b      	ldr	r0, [pc, #300]	; (1c0a8 <high_level_init()+0x31c>)
   1bf7a:	f003 fca5 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   1bf7e:	f7f8 fcd5 	bl	1492c <flash_chip_erase>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   1bf82:	f7fd fdf3 	bl	19b6c <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1bf86:	4629      	mov	r1, r5
   1bf88:	462a      	mov	r2, r5
   1bf8a:	f200 2035 	addw	r0, r0, #565	; 0x235
   1bf8e:	f7f7 fb8d 	bl	136ac <f_mkfs>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   1bf92:	4b46      	ldr	r3, [pc, #280]	; (1c0ac <high_level_init()+0x320>)
   1bf94:	4a46      	ldr	r2, [pc, #280]	; (1c0b0 <high_level_init()+0x324>)
   1bf96:	2800      	cmp	r0, #0
   1bf98:	bf0c      	ite	eq
   1bf9a:	4610      	moveq	r0, r2
   1bf9c:	4618      	movne	r0, r3
   1bf9e:	f003 fd07 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1bfa2:	f7fd fde3 	bl	19b6c <Storage::getFlashDrive()>
   1bfa6:	493f      	ldr	r1, [pc, #252]	; (1c0a4 <high_level_init()+0x318>)
   1bfa8:	f7ff fe6e 	bl	1bc88 <hl_mount_storage(FileSystemObject&, char const*)>
   1bfac:	b990      	cbnz	r0, 1bfd4 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   1bfae:	4841      	ldr	r0, [pc, #260]	; (1c0b4 <high_level_init()+0x328>)
   1bfb0:	f003 fcfe 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   1bfb4:	f7f8 fc3c 	bl	14830 <flash_get_page_size>
   1bfb8:	4601      	mov	r1, r0
   1bfba:	483f      	ldr	r0, [pc, #252]	; (1c0b8 <high_level_init()+0x32c>)
   1bfbc:	f003 fc84 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   1bfc0:	f7f8 fc26 	bl	14810 <flash_get_page_count>
   1bfc4:	4605      	mov	r5, r0
   1bfc6:	f7f8 fc33 	bl	14830 <flash_get_page_size>
   1bfca:	fb00 f105 	mul.w	r1, r0, r5
   1bfce:	483b      	ldr	r0, [pc, #236]	; (1c0bc <high_level_init()+0x330>)
   1bfd0:	f003 fc7a 	bl	1f8c8 <iprintf>
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   1bfd4:	4e3a      	ldr	r6, [pc, #232]	; (1c0c0 <high_level_init()+0x334>)
   1bfd6:	4f3b      	ldr	r7, [pc, #236]	; (1c0c4 <high_level_init()+0x338>)
   1bfd8:	7833      	ldrb	r3, [r6, #0]
   1bfda:	f3bf 8f5b 	dmb	ish
   1bfde:	f013 0501 	ands.w	r5, r3, #1
   1bfe2:	d116      	bne.n	1c012 <high_level_init()+0x286>
   1bfe4:	4630      	mov	r0, r6
   1bfe6:	f000 fb6e 	bl	1c6c6 <__cxa_guard_acquire>
   1bfea:	b190      	cbz	r0, 1c012 <high_level_init()+0x286>
   1bfec:	f44f 700e 	mov.w	r0, #568	; 0x238
   1bff0:	f7fa ff3e 	bl	16e70 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   1bff4:	2301      	movs	r3, #1
   1bff6:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   1bffa:	2331      	movs	r3, #49	; 0x31
   1bffc:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1c000:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   1c002:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1c006:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   1c00a:	6038      	str	r0, [r7, #0]
   1c00c:	4630      	mov	r0, r6
   1c00e:	f000 fb66 	bl	1c6de <__cxa_guard_release>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   1c012:	492d      	ldr	r1, [pc, #180]	; (1c0c8 <high_level_init()+0x33c>)
   1c014:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1c016:	4d2d      	ldr	r5, [pc, #180]	; (1c0cc <high_level_init()+0x340>)
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   1c018:	f7ff fe36 	bl	1bc88 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   1c01c:	2118      	movs	r1, #24
   1c01e:	4816      	ldr	r0, [pc, #88]	; (1c078 <high_level_init()+0x2ec>)
   1c020:	f7ff fe1c 	bl	1bc5c <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   1c024:	f7ff fe14 	bl	1bc50 <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1c028:	682b      	ldr	r3, [r5, #0]
   1c02a:	b94b      	cbnz	r3, 1c040 <high_level_init()+0x2b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1c02c:	2008      	movs	r0, #8
   1c02e:	f7fa ff1f 	bl	16e70 <operator new(unsigned int)>
   1c032:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1c034:	f7fe fbb4 	bl	1a7a0 <SingletonTemplate<I2C2>::getInstance()>
   1c038:	2338      	movs	r3, #56	; 0x38
   1c03a:	6030      	str	r0, [r6, #0]
   1c03c:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1c03e:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   1c040:	6828      	ldr	r0, [r5, #0]
   1c042:	f7f8 fdad 	bl	14ba0 <Acceleration_Sensor::init()>
   1c046:	4606      	mov	r6, r0
   1c048:	b910      	cbnz	r0, 1c050 <high_level_init()+0x2c4>
   1c04a:	4821      	ldr	r0, [pc, #132]	; (1c0d0 <high_level_init()+0x344>)
   1c04c:	f003 fcb0 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   1c050:	f7ff fe70 	bl	1bd34 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1c054:	f7f8 fe9e 	bl	14d94 <I2C_Temp::init()>
   1c058:	4605      	mov	r5, r0
   1c05a:	2800      	cmp	r0, #0
   1c05c:	d13c      	bne.n	1c0d8 <high_level_init()+0x34c>
   1c05e:	481d      	ldr	r0, [pc, #116]	; (1c0d4 <high_level_init()+0x348>)
   1c060:	f003 fca6 	bl	1f9b0 <puts>
   1c064:	462e      	mov	r6, r5
   1c066:	e037      	b.n	1c0d8 <high_level_init()+0x34c>
   1c068:	2009c000 	.word	0x2009c000
   1c06c:	2009c020 	.word	0x2009c020
   1c070:	4002c000 	.word	0x4002c000
   1c074:	fffcfcf0 	.word	0xfffcfcf0
   1c078:	40030000 	.word	0x40030000
   1c07c:	40088000 	.word	0x40088000
   1c080:	0002740d 	.word	0x0002740d
   1c084:	0002743e 	.word	0x0002743e
   1c088:	000263ae 	.word	0x000263ae
   1c08c:	00025a08 	.word	0x00025a08
   1c090:	49742400 	.word	0x49742400
   1c094:	00027463 	.word	0x00027463
   1c098:	40024044 	.word	0x40024044
   1c09c:	40024000 	.word	0x40024000
   1c0a0:	0002747b 	.word	0x0002747b
   1c0a4:	000274f3 	.word	0x000274f3
   1c0a8:	000274fb 	.word	0x000274fb
   1c0ac:	00027401 	.word	0x00027401
   1c0b0:	000273fc 	.word	0x000273fc
   1c0b4:	00027538 	.word	0x00027538
   1c0b8:	00027557 	.word	0x00027557
   1c0bc:	00027566 	.word	0x00027566
   1c0c0:	2007c764 	.word	0x2007c764
   1c0c4:	2007c768 	.word	0x2007c768
   1c0c8:	00026291 	.word	0x00026291
   1c0cc:	2007c790 	.word	0x2007c790
   1c0d0:	00027581 	.word	0x00027581
   1c0d4:	0002759c 	.word	0x0002759c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   1c0d8:	f7ff fd9c 	bl	1bc14 <SingletonTemplate<LED_Display>::getInstance()>
   1c0dc:	f7f8 fde2 	bl	14ca4 <LED_Display::init()>
   1c0e0:	4605      	mov	r5, r0
   1c0e2:	b918      	cbnz	r0, 1c0ec <high_level_init()+0x360>
   1c0e4:	486d      	ldr	r0, [pc, #436]	; (1c29c <high_level_init()+0x510>)
   1c0e6:	f003 fc63 	bl	1f9b0 <puts>
   1c0ea:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1c0ec:	4d6c      	ldr	r5, [pc, #432]	; (1c2a0 <high_level_init()+0x514>)
   1c0ee:	682b      	ldr	r3, [r5, #0]
   1c0f0:	b91b      	cbnz	r3, 1c0fa <high_level_init()+0x36e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1c0f2:	2001      	movs	r0, #1
   1c0f4:	f7fa febc 	bl	16e70 <operator new(unsigned int)>
   1c0f8:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   1c0fa:	6828      	ldr	r0, [r5, #0]
   1c0fc:	f7f8 fda0 	bl	14c40 <IR_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   1c100:	f7ff fe2c 	bl	1bd5c <SingletonTemplate<Light_Sensor>::getInstance()>
   1c104:	f7f8 fe32 	bl	14d6c <Light_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   1c108:	f7ff fe06 	bl	1bd18 <SingletonTemplate<LED>::getInstance()>
   1c10c:	f7f8 fe03 	bl	14d16 <LED::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   1c110:	f7ff fe30 	bl	1bd74 <SingletonTemplate<Switches>::getInstance()>
   1c114:	f7f8 fe2f 	bl	14d76 <Switches::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   1c118:	f7ff fdfe 	bl	1bd18 <SingletonTemplate<LED>::getInstance()>
   1c11c:	2100      	movs	r1, #0
   1c11e:	f7f8 fdfd 	bl	14d1c <LED::setAll(unsigned char)>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   1c122:	2e00      	cmp	r6, #0
   1c124:	f040 8081 	bne.w	1c22a <high_level_init()+0x49e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   1c128:	f7ff fd92 	bl	1bc50 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   1c12c:	f7ff fd72 	bl	1bc14 <SingletonTemplate<LED_Display>::getInstance()>
   1c130:	212d      	movs	r1, #45	; 0x2d
   1c132:	f7f8 fd9f 	bl	14c74 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   1c136:	f7ff fd6d 	bl	1bc14 <SingletonTemplate<LED_Display>::getInstance()>
   1c13a:	212d      	movs	r1, #45	; 0x2d
   1c13c:	f7f8 fda6 	bl	14c8c <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   1c140:	f7ff fdea 	bl	1bd18 <SingletonTemplate<LED>::getInstance()>
   1c144:	21ff      	movs	r1, #255	; 0xff
   1c146:	f7f8 fde9 	bl	14d1c <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   1c14a:	2210      	movs	r2, #16
   1c14c:	2100      	movs	r1, #0
   1c14e:	4620      	mov	r0, r4
   1c150:	f002 fa0e 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   1c154:	2300      	movs	r3, #0
   1c156:	220f      	movs	r2, #15
   1c158:	4621      	mov	r1, r4
   1c15a:	4852      	ldr	r0, [pc, #328]	; (1c2a4 <high_level_init()+0x518>)
   1c15c:	f7f8 fc9d 	bl	14a9a <Storage::read(char const*, void*, unsigned int, unsigned int)>
   1c160:	b980      	cbnz	r0, 1c184 <high_level_init()+0x3f8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   1c162:	4620      	mov	r0, r4
   1c164:	f001 fc19 	bl	1d99a <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   1c168:	b2c5      	uxtb	r5, r0
   1c16a:	4628      	mov	r0, r5
   1c16c:	f7f5 f994 	bl	11498 <mesh_set_node_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   1c170:	4a4d      	ldr	r2, [pc, #308]	; (1c2a8 <high_level_init()+0x51c>)
   1c172:	4b4e      	ldr	r3, [pc, #312]	; (1c2ac <high_level_init()+0x520>)
   1c174:	4629      	mov	r1, r5
   1c176:	2800      	cmp	r0, #0
   1c178:	bf18      	it	ne
   1c17a:	4613      	movne	r3, r2
   1c17c:	4a49      	ldr	r2, [pc, #292]	; (1c2a4 <high_level_init()+0x518>)
   1c17e:	484c      	ldr	r0, [pc, #304]	; (1c2b0 <high_level_init()+0x524>)
   1c180:	f003 fba2 	bl	1f8c8 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   1c184:	f7ff fdea 	bl	1bd5c <SingletonTemplate<Light_Sensor>::getInstance()>
   1c188:	f7f8 fdf2 	bl	14d70 <Light_Sensor::getRawValue()>
   1c18c:	4605      	mov	r5, r0
   1c18e:	2000      	movs	r0, #0
   1c190:	f004 fef6 	bl	20f80 <time>
   1c194:	4428      	add	r0, r5
   1c196:	f003 fc13 	bl	1f9c0 <srand>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   1c19a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1c19e:	2100      	movs	r1, #0
   1c1a0:	4620      	mov	r0, r4
   1c1a2:	f002 f9e5 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   1c1a6:	4620      	mov	r0, r4
   1c1a8:	f7f4 f98e 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   1c1ac:	4621      	mov	r1, r4
   1c1ae:	4841      	ldr	r0, [pc, #260]	; (1c2b4 <high_level_init()+0x528>)
   1c1b0:	f003 fb8a 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   1c1b4:	f7ff fd4c 	bl	1bc50 <hl_print_line()>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   1c1b8:	2280      	movs	r2, #128	; 0x80
   1c1ba:	2100      	movs	r1, #0
   1c1bc:	4620      	mov	r0, r4
   1c1be:	f002 f9d7 	bl	1e570 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   1c1c2:	4620      	mov	r0, r4
   1c1c4:	f7f8 fb10 	bl	147e8 <flash_read_permanent_id>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   1c1c8:	7822      	ldrb	r2, [r4, #0]
   1c1ca:	2aff      	cmp	r2, #255	; 0xff
   1c1cc:	d03b      	beq.n	1c246 <high_level_init()+0x4ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   1c1ce:	4621      	mov	r1, r4
   1c1d0:	4839      	ldr	r0, [pc, #228]	; (1c2b8 <high_level_init()+0x52c>)
   1c1d2:	f003 fb79 	bl	1f8c8 <iprintf>
chip_get_prog_max():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   1c1d6:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1c1da:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   1c1dc:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1c1e0:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   1c1e2:	f24f 0310 	movw	r3, #61456	; 0xf010
   1c1e6:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   1c1e8:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c1ec:	681a      	ldr	r2, [r3, #0]
   1c1ee:	f24f 0304 	movw	r3, #61444	; 0xf004
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1c1f2:	0aad      	lsrs	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c1f4:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1c1f6:	0aa4      	lsrs	r4, r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c1f8:	4830      	ldr	r0, [pc, #192]	; (1c2bc <high_level_init()+0x530>)
   1c1fa:	f003 fb65 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   1c1fe:	462a      	mov	r2, r5
   1c200:	4621      	mov	r1, r4
   1c202:	482f      	ldr	r0, [pc, #188]	; (1c2c0 <high_level_init()+0x534>)
   1c204:	f003 fb60 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   1c208:	4631      	mov	r1, r6
   1c20a:	482e      	ldr	r0, [pc, #184]	; (1c2c4 <high_level_init()+0x538>)
   1c20c:	f003 fb5c 	bl	1f8c8 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   1c210:	f7ff fd1e 	bl	1bc50 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   1c214:	2001      	movs	r0, #1
   1c216:	f7fa f969 	bl	164ec <logger_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   1c21a:	482b      	ldr	r0, [pc, #172]	; (1c2c8 <high_level_init()+0x53c>)
   1c21c:	f003 fbc8 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   1c220:	f7ff fd16 	bl	1bc50 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   1c224:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   1c228:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   1c22a:	f7ff fcf3 	bl	1bc14 <SingletonTemplate<LED_Display>::getInstance()>
   1c22e:	4605      	mov	r5, r0
   1c230:	f7ff fd80 	bl	1bd34 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1c234:	f7f8 fdd8 	bl	14de8 <I2C_Temp::getFarenheit()>
   1c238:	f001 fa00 	bl	1d63c <__aeabi_f2uiz>
   1c23c:	b2c1      	uxtb	r1, r0
   1c23e:	4628      	mov	r0, r5
   1c240:	f7f8 fd4c 	bl	14cdc <LED_Display::setNumber(char)>
   1c244:	e781      	b.n	1c14a <high_level_init()+0x3be>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   1c246:	f7ff fd95 	bl	1bd74 <SingletonTemplate<Switches>::getInstance()>
   1c24a:	f7f8 fd97 	bl	14d7c <Switches::getSwitchValues()>
   1c24e:	2809      	cmp	r0, #9
   1c250:	d11f      	bne.n	1c292 <high_level_init()+0x506>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   1c252:	481e      	ldr	r0, [pc, #120]	; (1c2cc <high_level_init()+0x540>)
   1c254:	f003 fbac 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   1c258:	4621      	mov	r1, r4
   1c25a:	481d      	ldr	r0, [pc, #116]	; (1c2d0 <high_level_init()+0x544>)
   1c25c:	f003 fcec 	bl	1fc38 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   1c260:	4621      	mov	r1, r4
   1c262:	481c      	ldr	r0, [pc, #112]	; (1c2d4 <high_level_init()+0x548>)
   1c264:	f003 fb30 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   1c268:	481b      	ldr	r0, [pc, #108]	; (1c2d8 <high_level_init()+0x54c>)
   1c26a:	f003 fba1 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1c26e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1c270:	a903      	add	r1, sp, #12
   1c272:	481a      	ldr	r0, [pc, #104]	; (1c2dc <high_level_init()+0x550>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1c274:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1c276:	f003 fcdf 	bl	1fc38 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   1c27a:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1c27e:	2b59      	cmp	r3, #89	; 0x59
   1c280:	d103      	bne.n	1c28a <high_level_init()+0x4fe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   1c282:	4620      	mov	r0, r4
   1c284:	f7f8 fa8e 	bl	147a4 <flash_write_permanent_id>
   1c288:	e7a5      	b.n	1c1d6 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   1c28a:	4815      	ldr	r0, [pc, #84]	; (1c2e0 <high_level_init()+0x554>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1c28c:	f003 fb90 	bl	1f9b0 <puts>
   1c290:	e7a1      	b.n	1c1d6 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   1c292:	4814      	ldr	r0, [pc, #80]	; (1c2e4 <high_level_init()+0x558>)
   1c294:	f003 fb8c 	bl	1f9b0 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1c298:	4813      	ldr	r0, [pc, #76]	; (1c2e8 <high_level_init()+0x55c>)
   1c29a:	e7f7      	b.n	1c28c <high_level_init()+0x500>
   1c29c:	000275b6 	.word	0x000275b6
   1c2a0:	2007c310 	.word	0x2007c310
   1c2a4:	000275cf 	.word	0x000275cf
   1c2a8:	00027407 	.word	0x00027407
   1c2ac:	00026876 	.word	0x00026876
   1c2b0:	000275d5 	.word	0x000275d5
   1c2b4:	00025676 	.word	0x00025676
   1c2b8:	00027609 	.word	0x00027609
   1c2bc:	00027726 	.word	0x00027726
   1c2c0:	00027752 	.word	0x00027752
   1c2c4:	0002777f 	.word	0x0002777f
   1c2c8:	0002779c 	.word	0x0002779c
   1c2cc:	00027625 	.word	0x00027625
   1c2d0:	00027647 	.word	0x00027647
   1c2d4:	0002764c 	.word	0x0002764c
   1c2d8:	00027667 	.word	0x00027667
   1c2dc:	000276aa 	.word	0x000276aa
   1c2e0:	000276ae 	.word	0x000276ae
   1c2e4:	000276c6 	.word	0x000276c6
   1c2e8:	000276f4 	.word	0x000276f4

0001c2ec <LabGPIO::LabGPIO(unsigned char, unsigned char)>:
_ZN7LabGPIOC2Ehh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:4
#include <LabGPIO.h>
#include <stdio.h>

LabGPIO::LabGPIO(uint8_t x, uint8_t y){ //x is pin, y is port
   1c2ec:	b538      	push	{r3, r4, r5, lr}
   1c2ee:	4604      	mov	r4, r0
   1c2f0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:5
    switch(y){
   1c2f2:	2a04      	cmp	r2, #4
   1c2f4:	d809      	bhi.n	1c30a <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x1e>
   1c2f6:	e8df f002 	tbb	[pc, r2]
   1c2fa:	0b03      	.short	0x0b03
   1c2fc:	0f0d      	.short	0x0f0d
   1c2fe:	11          	.byte	0x11
   1c2ff:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:6
        case 0: port = (LPC_GPIO_TypeDef*) LPC_GPIO0; printf("%p", port); break;
   1c300:	4907      	ldr	r1, [pc, #28]	; (1c320 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:10
        case 1: port = (LPC_GPIO_TypeDef*) LPC_GPIO1; printf("%p", port); break;
        case 2: port = (LPC_GPIO_TypeDef*) LPC_GPIO2; printf("%p", port); break;
        case 3: port = (LPC_GPIO_TypeDef*) LPC_GPIO3; printf("%p", port); break;
        case 4: port = (LPC_GPIO_TypeDef*) LPC_GPIO4; printf("%p", port); break;
   1c302:	6061      	str	r1, [r4, #4]
   1c304:	4807      	ldr	r0, [pc, #28]	; (1c324 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x38>)
   1c306:	f003 fadf 	bl	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:12
    } 
    pin = x;
   1c30a:	7025      	strb	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:13
}
   1c30c:	4620      	mov	r0, r4
   1c30e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:7
        case 1: port = (LPC_GPIO_TypeDef*) LPC_GPIO1; printf("%p", port); break;
   1c310:	4905      	ldr	r1, [pc, #20]	; (1c328 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x3c>)
   1c312:	e7f6      	b.n	1c302 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:8
        case 2: port = (LPC_GPIO_TypeDef*) LPC_GPIO2; printf("%p", port); break;
   1c314:	4905      	ldr	r1, [pc, #20]	; (1c32c <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x40>)
   1c316:	e7f4      	b.n	1c302 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:9
        case 3: port = (LPC_GPIO_TypeDef*) LPC_GPIO3; printf("%p", port); break;
   1c318:	4905      	ldr	r1, [pc, #20]	; (1c330 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x44>)
   1c31a:	e7f2      	b.n	1c302 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:10
        case 4: port = (LPC_GPIO_TypeDef*) LPC_GPIO4; printf("%p", port); break;
   1c31c:	4905      	ldr	r1, [pc, #20]	; (1c334 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x48>)
   1c31e:	e7f0      	b.n	1c302 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x16>
   1c320:	2009c000 	.word	0x2009c000
   1c324:	00027859 	.word	0x00027859
   1c328:	2009c020 	.word	0x2009c020
   1c32c:	2009c040 	.word	0x2009c040
   1c330:	2009c060 	.word	0x2009c060
   1c334:	2009c080 	.word	0x2009c080

0001c338 <LabGPIO::setAsInput()>:
_ZN7LabGPIO10setAsInputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:19
LabGPIO::~LabGPIO(){
    setAsInput(); // default make it an input device as a safeguard in case someone attaches an input device without setting it up
}

void LabGPIO::setAsInput(){
    port->FIODIR &= ~(0<<pin);
   1c338:	6843      	ldr	r3, [r0, #4]
   1c33a:	681a      	ldr	r2, [r3, #0]
   1c33c:	601a      	str	r2, [r3, #0]
   1c33e:	4770      	bx	lr

0001c340 <LabGPIO::setAsOutput()>:
_ZN7LabGPIO11setAsOutputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:22
}
void LabGPIO::setAsOutput(){
    port->FIODIR |= (1<<pin);
   1c340:	2301      	movs	r3, #1
   1c342:	6842      	ldr	r2, [r0, #4]
   1c344:	7800      	ldrb	r0, [r0, #0]
   1c346:	6811      	ldr	r1, [r2, #0]
   1c348:	4083      	lsls	r3, r0
   1c34a:	430b      	orrs	r3, r1
   1c34c:	6013      	str	r3, [r2, #0]
   1c34e:	4770      	bx	lr

0001c350 <LabGPIO::setDirection(bool)>:
_ZN7LabGPIO12setDirectionEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:25
}
void LabGPIO::setDirection(bool output){
    if(output){
   1c350:	b109      	cbz	r1, 1c356 <LabGPIO::setDirection(bool)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:26
        setAsOutput();
   1c352:	f7ff bff5 	b.w	1c340 <LabGPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:29
    }
    else{
        setAsInput();
   1c356:	f7ff bfef 	b.w	1c338 <LabGPIO::setAsInput()>

0001c35a <LabGPIO::setHigh()>:
_ZN7LabGPIO7setHighEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:33
    }
}
void LabGPIO::setHigh(){
    port->FIOSET = (1 << pin);
   1c35a:	2301      	movs	r3, #1
   1c35c:	7801      	ldrb	r1, [r0, #0]
   1c35e:	6842      	ldr	r2, [r0, #4]
   1c360:	408b      	lsls	r3, r1
   1c362:	6193      	str	r3, [r2, #24]
   1c364:	4770      	bx	lr

0001c366 <LabGPIO::setLow()>:
_ZN7LabGPIO6setLowEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:36
}
void LabGPIO::setLow(){
    port->FIOCLR = (1 << pin);
   1c366:	2301      	movs	r3, #1
   1c368:	7801      	ldrb	r1, [r0, #0]
   1c36a:	6842      	ldr	r2, [r0, #4]
   1c36c:	408b      	lsls	r3, r1
   1c36e:	61d3      	str	r3, [r2, #28]
   1c370:	4770      	bx	lr

0001c372 <LabGPIO::set(bool)>:
_ZN7LabGPIO3setEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:40
}

void LabGPIO::set(bool high){
    if(high){
   1c372:	b109      	cbz	r1, 1c378 <LabGPIO::set(bool)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:41
        setHigh();
   1c374:	f7ff bff1 	b.w	1c35a <LabGPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_1_GPIO/L5_Application/LabGPIO.cpp:44
    }
    else{
        setLow();
   1c378:	f7ff bff5 	b.w	1c366 <LabGPIO::setLow()>

0001c37c <LabGPIOInterrupts::init()>:
_ZN17LabGPIOInterrupts4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   1c37c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   1c380:	4b01      	ldr	r3, [pc, #4]	; (1c388 <LabGPIOInterrupts::init()+0xc>)
   1c382:	601a      	str	r2, [r3, #0]
   1c384:	4770      	bx	lr
   1c386:	bf00      	nop
   1c388:	e000e100 	.word	0xe000e100

0001c38c <LabGPIOInterrupts::handle_interrupt()>:
_ZN17LabGPIOInterrupts16handle_interruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:41
	}

	gpio_isr[portState][pin] = pin_isr;
	return true;
}
void LabGPIOInterrupts::handle_interrupt(void) {
   1c38c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:42
	if (port0) {
   1c38e:	f890 10f8 	ldrb.w	r1, [r0, #248]	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:41
void LabGPIOInterrupts::handle_interrupt(void) {
   1c392:	4605      	mov	r5, r0
   1c394:	4c1d      	ldr	r4, [pc, #116]	; (1c40c <LabGPIOInterrupts::handle_interrupt()+0x80>)
   1c396:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
   1c39a:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:42
	if (port0) {
   1c39c:	b139      	cbz	r1, 1c3ae <LabGPIOInterrupts::handle_interrupt()+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:43
		if (((LPC_GPIOINT->IO0IntStatR & (1 << pin)) || (LPC_GPIOINT->IO0IntStatF & (1 << pin))) == 1) {
   1c39e:	6861      	ldr	r1, [r4, #4]
   1c3a0:	4093      	lsls	r3, r2
   1c3a2:	4219      	tst	r1, r3
   1c3a4:	d10b      	bne.n	1c3be <LabGPIOInterrupts::handle_interrupt()+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:43 (discriminator 2)
   1c3a6:	68a1      	ldr	r1, [r4, #8]
   1c3a8:	420b      	tst	r3, r1
   1c3aa:	d108      	bne.n	1c3be <LabGPIOInterrupts::handle_interrupt()+0x32>
   1c3ac:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:52
		}
		else {
		}
	}
	else {
		if (((LPC_GPIOINT->IO2IntStatR & (1 << pin)) || (LPC_GPIOINT->IO2IntStatF & (1 << pin))) == 1) {
   1c3ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
   1c3b0:	4093      	lsls	r3, r2
   1c3b2:	4219      	tst	r1, r3
   1c3b4:	d119      	bne.n	1c3ea <LabGPIOInterrupts::handle_interrupt()+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:52 (discriminator 2)
   1c3b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   1c3b8:	420b      	tst	r3, r1
   1c3ba:	d116      	bne.n	1c3ea <LabGPIOInterrupts::handle_interrupt()+0x5e>
   1c3bc:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:44
			gpio_isr[portState][pin]();
   1c3be:	211e      	movs	r1, #30
   1c3c0:	f895 30f1 	ldrb.w	r3, [r5, #241]	; 0xf1
   1c3c4:	fb01 2203 	mla	r2, r1, r3, r2
   1c3c8:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
   1c3cc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:45
			LPC_GPIOINT->IO0IntClr |= (1 << pin);
   1c3ce:	2301      	movs	r3, #1
   1c3d0:	f895 10f0 	ldrb.w	r1, [r5, #240]	; 0xf0
   1c3d4:	68e2      	ldr	r2, [r4, #12]
   1c3d6:	408b      	lsls	r3, r1
   1c3d8:	431a      	orrs	r2, r3
   1c3da:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:46
			printf("%d", LPC_GPIOINT->IO0IntStatR & (1 << pin));
   1c3dc:	6861      	ldr	r1, [r4, #4]
   1c3de:	480c      	ldr	r0, [pc, #48]	; (1c410 <LabGPIOInterrupts::handle_interrupt()+0x84>)
   1c3e0:	4019      	ands	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:60
		}
		else {

		}
	}
}
   1c3e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:46
			printf("%d", LPC_GPIOINT->IO0IntStatR & (1 << pin));
   1c3e6:	f003 ba6f 	b.w	1f8c8 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:53
			gpio_isr[portState][pin]();
   1c3ea:	211e      	movs	r1, #30
   1c3ec:	f895 30f1 	ldrb.w	r3, [r5, #241]	; 0xf1
   1c3f0:	fb01 2203 	mla	r2, r1, r3, r2
   1c3f4:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
   1c3f8:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:54
			LPC_GPIOINT->IO2IntClr |= (1 << pin);
   1c3fa:	2301      	movs	r3, #1
   1c3fc:	f895 10f0 	ldrb.w	r1, [r5, #240]	; 0xf0
   1c400:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1c402:	408b      	lsls	r3, r1
   1c404:	4313      	orrs	r3, r2
   1c406:	62e3      	str	r3, [r4, #44]	; 0x2c
   1c408:	bd38      	pop	{r3, r4, r5, pc}
   1c40a:	bf00      	nop
   1c40c:	40028080 	.word	0x40028080
   1c410:	0002785c 	.word	0x0002785c

0001c414 <LabGPIOInterrupts::setRisingEdge(bool)>:
_ZN17LabGPIOInterrupts13setRisingEdgeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:62

void LabGPIOInterrupts::setRisingEdge(bool port_0) {
   1c414:	4a07      	ldr	r2, [pc, #28]	; (1c434 <LabGPIOInterrupts::setRisingEdge(bool)+0x20>)
   1c416:	f890 00f0 	ldrb.w	r0, [r0, #240]	; 0xf0
   1c41a:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:63
	if (port_0) {
   1c41c:	b121      	cbz	r1, 1c428 <LabGPIOInterrupts::setRisingEdge(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:64
		LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   1c41e:	6911      	ldr	r1, [r2, #16]
   1c420:	4083      	lsls	r3, r0
   1c422:	430b      	orrs	r3, r1
   1c424:	6113      	str	r3, [r2, #16]
   1c426:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:67
	}
	else {
		LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   1c428:	6b11      	ldr	r1, [r2, #48]	; 0x30
   1c42a:	4083      	lsls	r3, r0
   1c42c:	430b      	orrs	r3, r1
   1c42e:	6313      	str	r3, [r2, #48]	; 0x30
   1c430:	4770      	bx	lr
   1c432:	bf00      	nop
   1c434:	40028080 	.word	0x40028080

0001c438 <LabGPIOInterrupts::setFallingEdge(bool)>:
_ZN17LabGPIOInterrupts14setFallingEdgeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:71
	}
}

void LabGPIOInterrupts::setFallingEdge(bool port_0) {
   1c438:	4a07      	ldr	r2, [pc, #28]	; (1c458 <LabGPIOInterrupts::setFallingEdge(bool)+0x20>)
   1c43a:	f890 00f0 	ldrb.w	r0, [r0, #240]	; 0xf0
   1c43e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:72
	if (port_0) {
   1c440:	b121      	cbz	r1, 1c44c <LabGPIOInterrupts::setFallingEdge(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:73
		LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   1c442:	6951      	ldr	r1, [r2, #20]
   1c444:	4083      	lsls	r3, r0
   1c446:	430b      	orrs	r3, r1
   1c448:	6153      	str	r3, [r2, #20]
   1c44a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:76
	}
	else {
		LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   1c44c:	6b51      	ldr	r1, [r2, #52]	; 0x34
   1c44e:	4083      	lsls	r3, r0
   1c450:	430b      	orrs	r3, r1
   1c452:	6353      	str	r3, [r2, #52]	; 0x34
   1c454:	4770      	bx	lr
   1c456:	bf00      	nop
   1c458:	40028080 	.word	0x40028080

0001c45c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)>:
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhhPFvvE20InterruptCondition_E():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:19
bool LabGPIOInterrupts::attachInterruptHandler(uint8_t po, uint8_t pi, void (*pin_isr)(void), InterruptCondition_E condition) {
   1c45c:	b570      	push	{r4, r5, r6, lr}
   1c45e:	461d      	mov	r5, r3
   1c460:	4604      	mov	r4, r0
   1c462:	f89d 3010 	ldrb.w	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:20
	switch (po) {
   1c466:	b121      	cbz	r1, 1c472 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x16>
   1c468:	2902      	cmp	r1, #2
   1c46a:	f04f 0000 	mov.w	r0, #0
   1c46e:	d01c      	beq.n	1c4aa <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x4e>
   1c470:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:21
	case 0: port = (LPC_GPIO_TypeDef*) LPC_GPIO0; portState = 0; port0 = 1; break;
   1c472:	f884 10f1 	strb.w	r1, [r4, #241]	; 0xf1
   1c476:	2101      	movs	r1, #1
   1c478:	481d      	ldr	r0, [pc, #116]	; (1c4f0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x94>)
   1c47a:	f884 10f8 	strb.w	r1, [r4, #248]	; 0xf8
   1c47e:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:26
	port->FIODIR &= !(1 << pin);
   1c482:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:25
	pin = pi;
   1c484:	f884 20f0 	strb.w	r2, [r4, #240]	; 0xf0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:26
	port->FIODIR &= !(1 << pin);
   1c488:	fa16 f202 	lsls.w	r2, r6, r2
   1c48c:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
   1c490:	6801      	ldr	r1, [r0, #0]
   1c492:	f001 0101 	and.w	r1, r1, #1
   1c496:	bf18      	it	ne
   1c498:	2100      	movne	r1, #0
   1c49a:	6001      	str	r1, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:27
	if (rising_edge == condition) {
   1c49c:	b96b      	cbnz	r3, 1c4ba <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:35
		setRisingEdge(port0);
   1c49e:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c4a2:	4620      	mov	r0, r4
   1c4a4:	f7ff ffb6 	bl	1c414 <LabGPIOInterrupts::setRisingEdge(bool)>
   1c4a8:	e00e      	b.n	1c4c8 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:22
	case 2: port = (LPC_GPIO_TypeDef*) LPC_GPIO2; portState = 2; port0 = 0; break;
   1c4aa:	4e12      	ldr	r6, [pc, #72]	; (1c4f4 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x98>)
   1c4ac:	f884 10f1 	strb.w	r1, [r4, #241]	; 0xf1
   1c4b0:	f8c4 60f4 	str.w	r6, [r4, #244]	; 0xf4
   1c4b4:	f884 00f8 	strb.w	r0, [r4, #248]	; 0xf8
   1c4b8:	e7e3      	b.n	1c482 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:30
	else if (falling_edge == condition) {
   1c4ba:	2b01      	cmp	r3, #1
   1c4bc:	d10f      	bne.n	1c4de <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:31
		setFallingEdge(port0);
   1c4be:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c4c2:	4620      	mov	r0, r4
   1c4c4:	f7ff ffb8 	bl	1c438 <LabGPIOInterrupts::setFallingEdge(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:38
	gpio_isr[portState][pin] = pin_isr;
   1c4c8:	211e      	movs	r1, #30
   1c4ca:	f894 30f1 	ldrb.w	r3, [r4, #241]	; 0xf1
   1c4ce:	f894 20f0 	ldrb.w	r2, [r4, #240]	; 0xf0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:39
	return true;
   1c4d2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:38
	gpio_isr[portState][pin] = pin_isr;
   1c4d4:	fb01 2303 	mla	r3, r1, r3, r2
   1c4d8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:40
}
   1c4dc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:33
	else if (both_edges == condition) {
   1c4de:	2b02      	cmp	r3, #2
   1c4e0:	d1f2      	bne.n	1c4c8 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/LabGPIOInterrupts.cpp:34
		setFallingEdge(port0);
   1c4e2:	f894 10f8 	ldrb.w	r1, [r4, #248]	; 0xf8
   1c4e6:	4620      	mov	r0, r4
   1c4e8:	f7ff ffa6 	bl	1c438 <LabGPIOInterrupts::setFallingEdge(bool)>
   1c4ec:	e7d7      	b.n	1c49e <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)+0x42>
   1c4ee:	bf00      	nop
   1c4f0:	2009c000 	.word	0x2009c000
   1c4f4:	2009c040 	.word	0x2009c040

0001c4f8 <vControlLED(void*)>:
_Z11vControlLEDPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:37
#include "LabGPIOInterrupts.h"

SemaphoreHandle_t xSemaphore;

void vControlLED( void * pvParameters )
{
   1c4f8:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:42
    /* Get Parameter */
    uint32_t addr = (uint32_t)(pvParameters);
    uint8_t pin = (uint8_t)(addr); //lowerbits
    uint8_t port = (uint8_t)(addr >> 16); //upperbits
    LabGPIO led10(pin,port);
   1c4fa:	f3c0 4207 	ubfx	r2, r0, #16, #8
   1c4fe:	b2c1      	uxtb	r1, r0
   1c500:	4668      	mov	r0, sp
   1c502:	f7ff fef3 	bl	1c2ec <LabGPIO::LabGPIO(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:43
    led10.setDirection(1);
   1c506:	2101      	movs	r1, #1
   1c508:	4668      	mov	r0, sp
   1c50a:	f7ff ff21 	bl	1c350 <LabGPIO::setDirection(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:47

    while(1)
    {
        if(xSemaphoreTake(xSemaphore, portMAX_DELAY))
   1c50e:	4c0b      	ldr	r4, [pc, #44]	; (1c53c <vControlLED(void*)+0x44>)
   1c510:	2300      	movs	r3, #0
   1c512:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1c516:	4619      	mov	r1, r3
   1c518:	6820      	ldr	r0, [r4, #0]
   1c51a:	f7fc fc39 	bl	18d90 <xQueueGenericReceive>
   1c51e:	2800      	cmp	r0, #0
   1c520:	d0f6      	beq.n	1c510 <vControlLED(void*)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:49
        {
            led10.set(0);
   1c522:	2100      	movs	r1, #0
   1c524:	4668      	mov	r0, sp
   1c526:	f7ff ff24 	bl	1c372 <LabGPIO::set(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:50
            vTaskDelay(100);
   1c52a:	2064      	movs	r0, #100	; 0x64
   1c52c:	f7fd f80e 	bl	1954c <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:51
            led10.set(1); 
   1c530:	2101      	movs	r1, #1
   1c532:	4668      	mov	r0, sp
   1c534:	f7ff ff1d 	bl	1c372 <LabGPIO::set(bool)>
   1c538:	e7ea      	b.n	1c510 <vControlLED(void*)+0x18>
   1c53a:	bf00      	nop
   1c53c:	2007c890 	.word	0x2007c890

0001c540 <vCall_Back()>:
_Z10vCall_Backv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:58
    }
}

void vCall_Back( )
{
    xSemaphoreGive(xSemaphore);
   1c540:	2300      	movs	r3, #0
   1c542:	4803      	ldr	r0, [pc, #12]	; (1c550 <vCall_Back()+0x10>)
   1c544:	461a      	mov	r2, r3
   1c546:	4619      	mov	r1, r3
   1c548:	6800      	ldr	r0, [r0, #0]
   1c54a:	f7fc bb19 	b.w	18b80 <xQueueGenericSend>
   1c54e:	bf00      	nop
   1c550:	2007c890 	.word	0x2007c890

0001c554 <c_eint3_handler()>:
_Z15c_eint3_handlerv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:67

LabGPIOInterrupts gpio_intr_instance;

void c_eint3_handler(void)
{
    gpio_intr_instance.handle_interrupt();
   1c554:	4801      	ldr	r0, [pc, #4]	; (1c55c <c_eint3_handler()+0x8>)
   1c556:	f7ff bf19 	b.w	1c38c <LabGPIOInterrupts::handle_interrupt()>
   1c55a:	bf00      	nop
   1c55c:	2007c794 	.word	0x2007c794

0001c560 <main>:
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:72
}


int main(void)
{
   1c560:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:73
    xSemaphore = xSemaphoreCreateBinary();
   1c562:	2203      	movs	r2, #3
   1c564:	2100      	movs	r1, #0
   1c566:	2001      	movs	r0, #1
   1c568:	f7fc fae8 	bl	18b3c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:74
    gpio_intr_instance.init();
   1c56c:	4d16      	ldr	r5, [pc, #88]	; (1c5c8 <main+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:73
    xSemaphore = xSemaphoreCreateBinary();
   1c56e:	4b17      	ldr	r3, [pc, #92]	; (1c5cc <main+0x6c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:77
    int pin = 0;
    uint32_t led = 0x00010000; //4 most significant bits is port, 4 least significant bits are pin. Pin 1, port 0(led)
    gpio_intr_instance.attachInterruptHandler(pin,pin, vCall_Back, rising_edge);
   1c570:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:73
    xSemaphore = xSemaphoreCreateBinary();
   1c572:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:74
    gpio_intr_instance.init();
   1c574:	4628      	mov	r0, r5
   1c576:	f7ff ff01 	bl	1c37c <LabGPIOInterrupts::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:77
    gpio_intr_instance.attachInterruptHandler(pin,pin, vCall_Back, rising_edge);
   1c57a:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:78
    xTaskCreate(vControlLED, "vLed", 1024, ( void * ) led, 3, NULL );
   1c57c:	2503      	movs	r5, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:77
    gpio_intr_instance.attachInterruptHandler(pin,pin, vCall_Back, rising_edge);
   1c57e:	4622      	mov	r2, r4
   1c580:	4621      	mov	r1, r4
   1c582:	9400      	str	r4, [sp, #0]
   1c584:	4b12      	ldr	r3, [pc, #72]	; (1c5d0 <main+0x70>)
   1c586:	f7ff ff69 	bl	1c45c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned char, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:78
    xTaskCreate(vControlLED, "vLed", 1024, ( void * ) led, 3, NULL );
   1c58a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1c58e:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1c592:	4910      	ldr	r1, [pc, #64]	; (1c5d4 <main+0x74>)
   1c594:	9401      	str	r4, [sp, #4]
   1c596:	9500      	str	r5, [sp, #0]
   1c598:	480f      	ldr	r0, [pc, #60]	; (1c5d8 <main+0x78>)
   1c59a:	f7fc fd61 	bl	19060 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:79
    scheduler_add_task(new terminalTask(PRIORITY_HIGH));
   1c59e:	2090      	movs	r0, #144	; 0x90
   1c5a0:	f7fa fc66 	bl	16e70 <operator new(unsigned int)>
   1c5a4:	4606      	mov	r6, r0
   1c5a6:	4629      	mov	r1, r5
   1c5a8:	f7fe ffcc 	bl	1b544 <terminalTask::terminalTask(unsigned char)>
   1c5ac:	4630      	mov	r0, r6
   1c5ae:	f7f9 fe09 	bl	161c4 <scheduler_add_task(scheduler_task*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:80
    isr_register(EINT3_IRQn, c_eint3_handler);
   1c5b2:	490a      	ldr	r1, [pc, #40]	; (1c5dc <main+0x7c>)
   1c5b4:	2015      	movs	r0, #21
   1c5b6:	f7f4 f82b 	bl	10610 <isr_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:81
    scheduler_start();
   1c5ba:	4620      	mov	r0, r4
   1c5bc:	4621      	mov	r1, r4
   1c5be:	f7f9 fe0f 	bl	161e0 <scheduler_start(bool, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/Lab_2_ISR/L5_Application/main.cpp:82
}
   1c5c2:	4620      	mov	r0, r4
   1c5c4:	b002      	add	sp, #8
   1c5c6:	bd70      	pop	{r4, r5, r6, pc}
   1c5c8:	2007c794 	.word	0x2007c794
   1c5cc:	2007c890 	.word	0x2007c890
   1c5d0:	0001c541 	.word	0x0001c541
   1c5d4:	0002785f 	.word	0x0002785f
   1c5d8:	0001c4f9 	.word	0x0001c4f9
   1c5dc:	0001c555 	.word	0x0001c555

0001c5e0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1c5e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1c5e2:	2310      	movs	r3, #16
   1c5e4:	2400      	movs	r4, #0
   1c5e6:	9302      	str	r3, [sp, #8]
   1c5e8:	6803      	ldr	r3, [r0, #0]
   1c5ea:	4615      	mov	r5, r2
   1c5ec:	699e      	ldr	r6, [r3, #24]
   1c5ee:	9400      	str	r4, [sp, #0]
   1c5f0:	466b      	mov	r3, sp
   1c5f2:	f88d 4004 	strb.w	r4, [sp, #4]
   1c5f6:	9403      	str	r4, [sp, #12]
   1c5f8:	6812      	ldr	r2, [r2, #0]
   1c5fa:	47b0      	blx	r6
   1c5fc:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1c600:	f003 0306 	and.w	r3, r3, #6
   1c604:	2b06      	cmp	r3, #6
   1c606:	bf09      	itett	eq
   1c608:	2001      	moveq	r0, #1
   1c60a:	4620      	movne	r0, r4
   1c60c:	9b00      	ldreq	r3, [sp, #0]
   1c60e:	602b      	streq	r3, [r5, #0]
   1c610:	b004      	add	sp, #16
   1c612:	bd70      	pop	{r4, r5, r6, pc}

0001c614 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1c614:	9800      	ldr	r0, [sp, #0]
   1c616:	4290      	cmp	r0, r2
   1c618:	bf0c      	ite	eq
   1c61a:	2006      	moveq	r0, #6
   1c61c:	2001      	movne	r0, #1
   1c61e:	4770      	bx	lr

0001c620 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   1c620:	b510      	push	{r4, lr}
   1c622:	4604      	mov	r4, r0
   1c624:	4b02      	ldr	r3, [pc, #8]	; (1c630 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1c626:	6003      	str	r3, [r0, #0]
   1c628:	f000 f8e3 	bl	1c7f2 <std::type_info::~type_info()>
   1c62c:	4620      	mov	r0, r4
   1c62e:	bd10      	pop	{r4, pc}
   1c630:	0002789c 	.word	0x0002789c

0001c634 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1c634:	b510      	push	{r4, lr}
   1c636:	4604      	mov	r4, r0
   1c638:	f7ff fff2 	bl	1c620 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c63c:	4620      	mov	r0, r4
   1c63e:	2108      	movs	r1, #8
   1c640:	f000 f83f 	bl	1c6c2 <operator delete(void*, unsigned int)>
   1c644:	4620      	mov	r0, r4
   1c646:	bd10      	pop	{r4, pc}

0001c648 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1c648:	b538      	push	{r3, r4, r5, lr}
   1c64a:	4615      	mov	r5, r2
   1c64c:	461c      	mov	r4, r3
   1c64e:	f000 f8d3 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c652:	b120      	cbz	r0, 1c65e <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   1c654:	2308      	movs	r3, #8
   1c656:	60e3      	str	r3, [r4, #12]
   1c658:	2306      	movs	r3, #6
   1c65a:	6025      	str	r5, [r4, #0]
   1c65c:	7123      	strb	r3, [r4, #4]
   1c65e:	bd38      	pop	{r3, r4, r5, pc}

0001c660 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1c660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c664:	4605      	mov	r5, r0
   1c666:	460c      	mov	r4, r1
   1c668:	4616      	mov	r6, r2
   1c66a:	461f      	mov	r7, r3
   1c66c:	f000 f8c4 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c670:	b948      	cbnz	r0, 1c686 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1c672:	2f03      	cmp	r7, #3
   1c674:	d807      	bhi.n	1c686 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1c676:	6823      	ldr	r3, [r4, #0]
   1c678:	4632      	mov	r2, r6
   1c67a:	4629      	mov	r1, r5
   1c67c:	4620      	mov	r0, r4
   1c67e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c682:	695b      	ldr	r3, [r3, #20]
   1c684:	4718      	bx	r3
   1c686:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c68a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1c68a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c68e:	9e06      	ldr	r6, [sp, #24]
   1c690:	4698      	mov	r8, r3
   1c692:	9b08      	ldr	r3, [sp, #32]
   1c694:	4607      	mov	r7, r0
   1c696:	429e      	cmp	r6, r3
   1c698:	4615      	mov	r5, r2
   1c69a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1c69c:	d103      	bne.n	1c6a6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1c69e:	9907      	ldr	r1, [sp, #28]
   1c6a0:	f000 f8aa 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c6a4:	b958      	cbnz	r0, 1c6be <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c6a6:	4641      	mov	r1, r8
   1c6a8:	4638      	mov	r0, r7
   1c6aa:	f000 f8a5 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c6ae:	b118      	cbz	r0, 1c6b8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   1c6b0:	2301      	movs	r3, #1
   1c6b2:	6026      	str	r6, [r4, #0]
   1c6b4:	7125      	strb	r5, [r4, #4]
   1c6b6:	71a3      	strb	r3, [r4, #6]
   1c6b8:	2000      	movs	r0, #0
   1c6ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c6be:	7165      	strb	r5, [r4, #5]
   1c6c0:	e7fa      	b.n	1c6b8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>

0001c6c2 <operator delete(void*, unsigned int)>:
_ZdlPvj():
   1c6c2:	f7fa bbd9 	b.w	16e78 <operator delete(void*)>

0001c6c6 <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1c6c6:	6803      	ldr	r3, [r0, #0]
   1c6c8:	07db      	lsls	r3, r3, #31
   1c6ca:	d406      	bmi.n	1c6da <__cxa_guard_acquire+0x14>
   1c6cc:	7843      	ldrb	r3, [r0, #1]
   1c6ce:	b103      	cbz	r3, 1c6d2 <__cxa_guard_acquire+0xc>
   1c6d0:	deff      	udf	#255	; 0xff
   1c6d2:	2301      	movs	r3, #1
   1c6d4:	7043      	strb	r3, [r0, #1]
   1c6d6:	4618      	mov	r0, r3
   1c6d8:	4770      	bx	lr
   1c6da:	2000      	movs	r0, #0
   1c6dc:	4770      	bx	lr

0001c6de <__cxa_guard_release>:
__cxa_guard_release():
   1c6de:	2301      	movs	r3, #1
   1c6e0:	6003      	str	r3, [r0, #0]
   1c6e2:	4770      	bx	lr

0001c6e4 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1c6e4:	b508      	push	{r3, lr}
   1c6e6:	f000 faeb 	bl	1ccc0 <std::terminate()>
   1c6ea:	Address 0x000000000001c6ea is out of bounds.


0001c6ec <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   1c6ec:	b510      	push	{r4, lr}
   1c6ee:	4604      	mov	r4, r0
   1c6f0:	4b02      	ldr	r3, [pc, #8]	; (1c6fc <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1c6f2:	6003      	str	r3, [r0, #0]
   1c6f4:	f7ff ff94 	bl	1c620 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c6f8:	4620      	mov	r0, r4
   1c6fa:	bd10      	pop	{r4, pc}
   1c6fc:	000278fc 	.word	0x000278fc

0001c700 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1c700:	b510      	push	{r4, lr}
   1c702:	4604      	mov	r4, r0
   1c704:	f7ff fff2 	bl	1c6ec <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1c708:	4620      	mov	r0, r4
   1c70a:	210c      	movs	r1, #12
   1c70c:	f7ff ffd9 	bl	1c6c2 <operator delete(void*, unsigned int)>
   1c710:	4620      	mov	r0, r4
   1c712:	bd10      	pop	{r4, pc}

0001c714 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c718:	9e06      	ldr	r6, [sp, #24]
   1c71a:	4680      	mov	r8, r0
   1c71c:	4296      	cmp	r6, r2
   1c71e:	460f      	mov	r7, r1
   1c720:	4614      	mov	r4, r2
   1c722:	461d      	mov	r5, r3
   1c724:	d103      	bne.n	1c72e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   1c726:	4619      	mov	r1, r3
   1c728:	f000 f866 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c72c:	b958      	cbnz	r0, 1c746 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   1c72e:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1c732:	4622      	mov	r2, r4
   1c734:	6803      	ldr	r3, [r0, #0]
   1c736:	9606      	str	r6, [sp, #24]
   1c738:	6a1e      	ldr	r6, [r3, #32]
   1c73a:	4639      	mov	r1, r7
   1c73c:	462b      	mov	r3, r5
   1c73e:	46b4      	mov	ip, r6
   1c740:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c744:	4760      	bx	ip
   1c746:	2006      	movs	r0, #6
   1c748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c74c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1c74c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c750:	460e      	mov	r6, r1
   1c752:	4619      	mov	r1, r3
   1c754:	4683      	mov	fp, r0
   1c756:	4617      	mov	r7, r2
   1c758:	4699      	mov	r9, r3
   1c75a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1c75c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   1c760:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   1c764:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1c766:	f000 f847 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c76a:	b190      	cbz	r0, 1c792 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   1c76c:	2e00      	cmp	r6, #0
   1c76e:	602c      	str	r4, [r5, #0]
   1c770:	712f      	strb	r7, [r5, #4]
   1c772:	db09      	blt.n	1c788 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   1c774:	4434      	add	r4, r6
   1c776:	45a0      	cmp	r8, r4
   1c778:	bf0c      	ite	eq
   1c77a:	2406      	moveq	r4, #6
   1c77c:	2401      	movne	r4, #1
   1c77e:	71ac      	strb	r4, [r5, #6]
   1c780:	2000      	movs	r0, #0
   1c782:	b001      	add	sp, #4
   1c784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c788:	3602      	adds	r6, #2
   1c78a:	d1f9      	bne.n	1c780 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c78c:	2301      	movs	r3, #1
   1c78e:	71ab      	strb	r3, [r5, #6]
   1c790:	e7f6      	b.n	1c780 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1c792:	4544      	cmp	r4, r8
   1c794:	d104      	bne.n	1c7a0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1c796:	4651      	mov	r1, sl
   1c798:	4658      	mov	r0, fp
   1c79a:	f000 f82d 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c79e:	b988      	cbnz	r0, 1c7c4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   1c7a0:	f8db 0008 	ldr.w	r0, [fp, #8]
   1c7a4:	463a      	mov	r2, r7
   1c7a6:	6803      	ldr	r3, [r0, #0]
   1c7a8:	950d      	str	r5, [sp, #52]	; 0x34
   1c7aa:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   1c7ae:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   1c7b2:	940a      	str	r4, [sp, #40]	; 0x28
   1c7b4:	69dc      	ldr	r4, [r3, #28]
   1c7b6:	4631      	mov	r1, r6
   1c7b8:	464b      	mov	r3, r9
   1c7ba:	46a4      	mov	ip, r4
   1c7bc:	b001      	add	sp, #4
   1c7be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c7c2:	4760      	bx	ip
   1c7c4:	716f      	strb	r7, [r5, #5]
   1c7c6:	e7db      	b.n	1c780 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

0001c7c8 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1c7c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c7cc:	4604      	mov	r4, r0
   1c7ce:	460d      	mov	r5, r1
   1c7d0:	4616      	mov	r6, r2
   1c7d2:	461f      	mov	r7, r3
   1c7d4:	f7ff ff38 	bl	1c648 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1c7d8:	b948      	cbnz	r0, 1c7ee <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   1c7da:	68a0      	ldr	r0, [r4, #8]
   1c7dc:	4632      	mov	r2, r6
   1c7de:	6803      	ldr	r3, [r0, #0]
   1c7e0:	4629      	mov	r1, r5
   1c7e2:	699c      	ldr	r4, [r3, #24]
   1c7e4:	463b      	mov	r3, r7
   1c7e6:	46a4      	mov	ip, r4
   1c7e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c7ec:	4760      	bx	ip
   1c7ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001c7f2 <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   1c7f2:	4770      	bx	lr

0001c7f4 <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1c7f4:	2000      	movs	r0, #0
   1c7f6:	4770      	bx	lr

0001c7f8 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1c7f8:	4281      	cmp	r1, r0
   1c7fa:	b508      	push	{r3, lr}
   1c7fc:	d00e      	beq.n	1c81c <std::type_info::operator==(std::type_info const&) const+0x24>
   1c7fe:	6840      	ldr	r0, [r0, #4]
   1c800:	7803      	ldrb	r3, [r0, #0]
   1c802:	2b2a      	cmp	r3, #42	; 0x2a
   1c804:	d00c      	beq.n	1c820 <std::type_info::operator==(std::type_info const&) const+0x28>
   1c806:	6849      	ldr	r1, [r1, #4]
   1c808:	780b      	ldrb	r3, [r1, #0]
   1c80a:	2b2a      	cmp	r3, #42	; 0x2a
   1c80c:	bf08      	it	eq
   1c80e:	3101      	addeq	r1, #1
   1c810:	f003 fc22 	bl	20058 <strcmp>
   1c814:	fab0 f080 	clz	r0, r0
   1c818:	0940      	lsrs	r0, r0, #5
   1c81a:	bd08      	pop	{r3, pc}
   1c81c:	2001      	movs	r0, #1
   1c81e:	bd08      	pop	{r3, pc}
   1c820:	2000      	movs	r0, #0
   1c822:	bd08      	pop	{r3, pc}

0001c824 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   1c824:	b510      	push	{r4, lr}
   1c826:	4604      	mov	r4, r0
   1c828:	4b02      	ldr	r3, [pc, #8]	; (1c834 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1c82a:	6003      	str	r3, [r0, #0]
   1c82c:	f7ff fef8 	bl	1c620 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c830:	4620      	mov	r0, r4
   1c832:	bd10      	pop	{r4, pc}
   1c834:	00027974 	.word	0x00027974

0001c838 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1c838:	b510      	push	{r4, lr}
   1c83a:	4604      	mov	r4, r0
   1c83c:	f7ff fff2 	bl	1c824 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1c840:	4620      	mov	r0, r4
   1c842:	2118      	movs	r1, #24
   1c844:	f7ff ff3d 	bl	1c6c2 <operator delete(void*, unsigned int)>
   1c848:	4620      	mov	r0, r4
   1c84a:	bd10      	pop	{r4, pc}

0001c84c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c84c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c850:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   1c854:	4604      	mov	r4, r0
   1c856:	454a      	cmp	r2, r9
   1c858:	460f      	mov	r7, r1
   1c85a:	4616      	mov	r6, r2
   1c85c:	4698      	mov	r8, r3
   1c85e:	d103      	bne.n	1c868 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   1c860:	4619      	mov	r1, r3
   1c862:	f7ff ffc9 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c866:	bb38      	cbnz	r0, 1c8b8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1c868:	68e5      	ldr	r5, [r4, #12]
   1c86a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1c86e:	e001      	b.n	1c874 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   1c870:	3d01      	subs	r5, #1
   1c872:	3c08      	subs	r4, #8
   1c874:	b315      	cbz	r5, 1c8bc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   1c876:	68e3      	ldr	r3, [r4, #12]
   1c878:	079a      	lsls	r2, r3, #30
   1c87a:	d5f9      	bpl.n	1c870 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c87c:	f013 0a01 	ands.w	sl, r3, #1
   1c880:	ea4f 2223 	mov.w	r2, r3, asr #8
   1c884:	d003      	beq.n	1c88e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   1c886:	1cfb      	adds	r3, r7, #3
   1c888:	d0f2      	beq.n	1c870 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c88a:	6833      	ldr	r3, [r6, #0]
   1c88c:	589a      	ldr	r2, [r3, r2]
   1c88e:	68a0      	ldr	r0, [r4, #8]
   1c890:	4432      	add	r2, r6
   1c892:	6803      	ldr	r3, [r0, #0]
   1c894:	f8cd 9000 	str.w	r9, [sp]
   1c898:	f8d3 b020 	ldr.w	fp, [r3, #32]
   1c89c:	4639      	mov	r1, r7
   1c89e:	4643      	mov	r3, r8
   1c8a0:	47d8      	blx	fp
   1c8a2:	2803      	cmp	r0, #3
   1c8a4:	dde4      	ble.n	1c870 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c8a6:	f1ba 0f00 	cmp.w	sl, #0
   1c8aa:	d002      	beq.n	1c8b2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1c8ac:	f040 0001 	orr.w	r0, r0, #1
   1c8b0:	b2c0      	uxtb	r0, r0
   1c8b2:	b003      	add	sp, #12
   1c8b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8b8:	2006      	movs	r0, #6
   1c8ba:	e7fa      	b.n	1c8b2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1c8bc:	2001      	movs	r0, #1
   1c8be:	e7f8      	b.n	1c8b2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

0001c8c0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1c8c0:	b4f0      	push	{r4, r5, r6, r7}
   1c8c2:	1e0e      	subs	r6, r1, #0
   1c8c4:	9c04      	ldr	r4, [sp, #16]
   1c8c6:	db06      	blt.n	1c8d6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   1c8c8:	1990      	adds	r0, r2, r6
   1c8ca:	4284      	cmp	r4, r0
   1c8cc:	bf14      	ite	ne
   1c8ce:	2001      	movne	r0, #1
   1c8d0:	2006      	moveq	r0, #6
   1c8d2:	bcf0      	pop	{r4, r5, r6, r7}
   1c8d4:	4770      	bx	lr
   1c8d6:	3602      	adds	r6, #2
   1c8d8:	d005      	beq.n	1c8e6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   1c8da:	6805      	ldr	r5, [r0, #0]
   1c8dc:	9404      	str	r4, [sp, #16]
   1c8de:	6a2c      	ldr	r4, [r5, #32]
   1c8e0:	46a4      	mov	ip, r4
   1c8e2:	bcf0      	pop	{r4, r5, r6, r7}
   1c8e4:	4760      	bx	ip
   1c8e6:	2001      	movs	r0, #1
   1c8e8:	e7f3      	b.n	1c8d2 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

0001c8ea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1c8ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8ee:	b091      	sub	sp, #68	; 0x44
   1c8f0:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   1c8f2:	9308      	str	r3, [sp, #32]
   1c8f4:	68a3      	ldr	r3, [r4, #8]
   1c8f6:	4688      	mov	r8, r1
   1c8f8:	06d9      	lsls	r1, r3, #27
   1c8fa:	bf48      	it	mi
   1c8fc:	6883      	ldrmi	r3, [r0, #8]
   1c8fe:	9207      	str	r2, [sp, #28]
   1c900:	bf48      	it	mi
   1c902:	60a3      	strmi	r3, [r4, #8]
   1c904:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1c906:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1c908:	4681      	mov	r9, r0
   1c90a:	4293      	cmp	r3, r2
   1c90c:	d105      	bne.n	1c91a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1c90e:	991b      	ldr	r1, [sp, #108]	; 0x6c
   1c910:	f7ff ff72 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c914:	2800      	cmp	r0, #0
   1c916:	f040 8119 	bne.w	1cb4c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   1c91a:	9908      	ldr	r1, [sp, #32]
   1c91c:	4648      	mov	r0, r9
   1c91e:	f7ff ff6b 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1c922:	4682      	mov	sl, r0
   1c924:	2800      	cmp	r0, #0
   1c926:	d16e      	bne.n	1ca06 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   1c928:	2600      	movs	r6, #0
   1c92a:	f1b8 0f00 	cmp.w	r8, #0
   1c92e:	bfa8      	it	ge
   1c930:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1c932:	46b3      	mov	fp, r6
   1c934:	bfa4      	itt	ge
   1c936:	eba3 0308 	subge.w	r3, r3, r8
   1c93a:	9309      	strge	r3, [sp, #36]	; 0x24
   1c93c:	f04f 0301 	mov.w	r3, #1
   1c940:	930a      	str	r3, [sp, #40]	; 0x28
   1c942:	9b07      	ldr	r3, [sp, #28]
   1c944:	bfb8      	it	lt
   1c946:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   1c94a:	f043 0301 	orr.w	r3, r3, #1
   1c94e:	9606      	str	r6, [sp, #24]
   1c950:	930b      	str	r3, [sp, #44]	; 0x2c
   1c952:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1c956:	9304      	str	r3, [sp, #16]
   1c958:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   1c95c:	9305      	str	r3, [sp, #20]
   1c95e:	9b04      	ldr	r3, [sp, #16]
   1c960:	2b00      	cmp	r3, #0
   1c962:	f000 80e9 	beq.w	1cb38 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   1c966:	9b05      	ldr	r3, [sp, #20]
   1c968:	68a5      	ldr	r5, [r4, #8]
   1c96a:	68db      	ldr	r3, [r3, #12]
   1c96c:	950f      	str	r5, [sp, #60]	; 0x3c
   1c96e:	07da      	lsls	r2, r3, #31
   1c970:	bf48      	it	mi
   1c972:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   1c974:	ea4f 2123 	mov.w	r1, r3, asr #8
   1c978:	bf48      	it	mi
   1c97a:	6800      	ldrmi	r0, [r0, #0]
   1c97c:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   1c980:	bf48      	it	mi
   1c982:	5841      	ldrmi	r1, [r0, r1]
   1c984:	981a      	ldr	r0, [sp, #104]	; 0x68
   1c986:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   1c98a:	4401      	add	r1, r0
   1c98c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1c98e:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   1c992:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   1c996:	bf4c      	ite	mi
   1c998:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   1c99a:	9a07      	ldrpl	r2, [sp, #28]
   1c99c:	b138      	cbz	r0, 1c9ae <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   1c99e:	4288      	cmp	r0, r1
   1c9a0:	bf2c      	ite	cs
   1c9a2:	2000      	movcs	r0, #0
   1c9a4:	2001      	movcc	r0, #1
   1c9a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   1c9a8:	42b8      	cmp	r0, r7
   1c9aa:	f000 80ba 	beq.w	1cb22 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   1c9ae:	079b      	lsls	r3, r3, #30
   1c9b0:	d407      	bmi.n	1c9c2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   1c9b2:	f118 0f02 	cmn.w	r8, #2
   1c9b6:	d102      	bne.n	1c9be <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   1c9b8:	07af      	lsls	r7, r5, #30
   1c9ba:	f000 80b4 	beq.w	1cb26 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1c9be:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1c9c2:	9b05      	ldr	r3, [sp, #20]
   1c9c4:	ad0d      	add	r5, sp, #52	; 0x34
   1c9c6:	6898      	ldr	r0, [r3, #8]
   1c9c8:	6803      	ldr	r3, [r0, #0]
   1c9ca:	9503      	str	r5, [sp, #12]
   1c9cc:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   1c9ce:	9502      	str	r5, [sp, #8]
   1c9d0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1c9d2:	e88d 0022 	stmia.w	sp, {r1, r5}
   1c9d6:	4641      	mov	r1, r8
   1c9d8:	69dd      	ldr	r5, [r3, #28]
   1c9da:	9b08      	ldr	r3, [sp, #32]
   1c9dc:	47a8      	blx	r5
   1c9de:	7961      	ldrb	r1, [r4, #5]
   1c9e0:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   1c9e4:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   1c9e8:	4311      	orrs	r1, r2
   1c9ea:	2d06      	cmp	r5, #6
   1c9ec:	4603      	mov	r3, r0
   1c9ee:	7161      	strb	r1, [r4, #5]
   1c9f0:	d001      	beq.n	1c9f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   1c9f2:	2d02      	cmp	r5, #2
   1c9f4:	d122      	bne.n	1ca3c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   1c9f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c9f8:	71a5      	strb	r5, [r4, #6]
   1c9fa:	6023      	str	r3, [r4, #0]
   1c9fc:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1ca00:	7123      	strb	r3, [r4, #4]
   1ca02:	4682      	mov	sl, r0
   1ca04:	e078      	b.n	1caf8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1ca06:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1ca08:	f1b8 0f00 	cmp.w	r8, #0
   1ca0c:	6023      	str	r3, [r4, #0]
   1ca0e:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1ca12:	7123      	strb	r3, [r4, #4]
   1ca14:	db0c      	blt.n	1ca30 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   1ca16:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1ca18:	4498      	add	r8, r3
   1ca1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1ca1c:	4543      	cmp	r3, r8
   1ca1e:	bf0c      	ite	eq
   1ca20:	f04f 0806 	moveq.w	r8, #6
   1ca24:	f04f 0801 	movne.w	r8, #1
   1ca28:	f884 8006 	strb.w	r8, [r4, #6]
   1ca2c:	2600      	movs	r6, #0
   1ca2e:	e064      	b.n	1cafa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1ca30:	f118 0f02 	cmn.w	r8, #2
   1ca34:	d1fa      	bne.n	1ca2c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1ca36:	2301      	movs	r3, #1
   1ca38:	71a3      	strb	r3, [r4, #6]
   1ca3a:	e7f7      	b.n	1ca2c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1ca3c:	6822      	ldr	r2, [r4, #0]
   1ca3e:	b986      	cbnz	r6, 1ca62 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1ca40:	b97a      	cbnz	r2, 1ca62 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1ca42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1ca44:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   1ca48:	6022      	str	r2, [r4, #0]
   1ca4a:	7125      	strb	r5, [r4, #4]
   1ca4c:	b122      	cbz	r2, 1ca58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1ca4e:	b119      	cbz	r1, 1ca58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1ca50:	f8d9 2008 	ldr.w	r2, [r9, #8]
   1ca54:	07d5      	lsls	r5, r2, #31
   1ca56:	d5d4      	bpl.n	1ca02 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   1ca58:	7962      	ldrb	r2, [r4, #5]
   1ca5a:	2a04      	cmp	r2, #4
   1ca5c:	d164      	bne.n	1cb28 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   1ca5e:	469a      	mov	sl, r3
   1ca60:	e04a      	b.n	1caf8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1ca62:	b15a      	cbz	r2, 1ca7c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   1ca64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ca66:	429a      	cmp	r2, r3
   1ca68:	d106      	bne.n	1ca78 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   1ca6a:	7923      	ldrb	r3, [r4, #4]
   1ca6c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   1ca70:	4313      	orrs	r3, r2
   1ca72:	7123      	strb	r3, [r4, #4]
   1ca74:	4633      	mov	r3, r6
   1ca76:	e7ef      	b.n	1ca58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1ca78:	b92b      	cbnz	r3, 1ca86 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1ca7a:	b920      	cbnz	r0, 1ca86 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1ca7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ca7e:	2b00      	cmp	r3, #0
   1ca80:	d0f8      	beq.n	1ca74 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1ca82:	2e00      	cmp	r6, #0
   1ca84:	d0f6      	beq.n	1ca74 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1ca86:	2903      	cmp	r1, #3
   1ca88:	79a7      	ldrb	r7, [r4, #6]
   1ca8a:	d904      	bls.n	1ca96 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   1ca8c:	07c8      	lsls	r0, r1, #31
   1ca8e:	d561      	bpl.n	1cb54 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1ca90:	68a3      	ldr	r3, [r4, #8]
   1ca92:	0799      	lsls	r1, r3, #30
   1ca94:	d55e      	bpl.n	1cb54 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1ca96:	b97f      	cbnz	r7, 1cab8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   1ca98:	2d03      	cmp	r5, #3
   1ca9a:	dd05      	ble.n	1caa8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1ca9c:	07eb      	lsls	r3, r5, #31
   1ca9e:	d560      	bpl.n	1cb62 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   1caa0:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1caa4:	079f      	lsls	r7, r3, #30
   1caa6:	d52c      	bpl.n	1cb02 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1caa8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1caaa:	4641      	mov	r1, r8
   1caac:	9300      	str	r3, [sp, #0]
   1caae:	9808      	ldr	r0, [sp, #32]
   1cab0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1cab2:	f7ff ff05 	bl	1c8c0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1cab6:	4607      	mov	r7, r0
   1cab8:	b945      	cbnz	r5, 1cacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1caba:	2f03      	cmp	r7, #3
   1cabc:	dd54      	ble.n	1cb68 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1cabe:	07fd      	lsls	r5, r7, #31
   1cac0:	d503      	bpl.n	1caca <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   1cac2:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1cac6:	0798      	lsls	r0, r3, #30
   1cac8:	d44e      	bmi.n	1cb68 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1caca:	2501      	movs	r5, #1
   1cacc:	ea85 0307 	eor.w	r3, r5, r7
   1cad0:	b2db      	uxtb	r3, r3
   1cad2:	2b03      	cmp	r3, #3
   1cad4:	d917      	bls.n	1cb06 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   1cad6:	2d03      	cmp	r5, #3
   1cad8:	bfc5      	ittet	gt
   1cada:	462f      	movgt	r7, r5
   1cadc:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   1cade:	4633      	movle	r3, r6
   1cae0:	6023      	strgt	r3, [r4, #0]
   1cae2:	bfc8      	it	gt
   1cae4:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   1cae8:	71a7      	strb	r7, [r4, #6]
   1caea:	bfc4      	itt	gt
   1caec:	7123      	strbgt	r3, [r4, #4]
   1caee:	2300      	movgt	r3, #0
   1caf0:	07b9      	lsls	r1, r7, #30
   1caf2:	d401      	bmi.n	1caf8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1caf4:	07fa      	lsls	r2, r7, #31
   1caf6:	d4af      	bmi.n	1ca58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1caf8:	4656      	mov	r6, sl
   1cafa:	4630      	mov	r0, r6
   1cafc:	b011      	add	sp, #68	; 0x44
   1cafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb02:	2701      	movs	r7, #1
   1cb04:	e7e2      	b.n	1cacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1cb06:	403d      	ands	r5, r7
   1cb08:	b2ed      	uxtb	r5, r5
   1cb0a:	2d03      	cmp	r5, #3
   1cb0c:	f8c4 b000 	str.w	fp, [r4]
   1cb10:	d904      	bls.n	1cb1c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   1cb12:	2302      	movs	r3, #2
   1cb14:	f04f 0a01 	mov.w	sl, #1
   1cb18:	71a3      	strb	r3, [r4, #6]
   1cb1a:	e7ed      	b.n	1caf8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1cb1c:	2301      	movs	r3, #1
   1cb1e:	71a3      	strb	r3, [r4, #6]
   1cb20:	e79a      	b.n	1ca58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1cb22:	2301      	movs	r3, #1
   1cb24:	9306      	str	r3, [sp, #24]
   1cb26:	4633      	mov	r3, r6
   1cb28:	9a04      	ldr	r2, [sp, #16]
   1cb2a:	461e      	mov	r6, r3
   1cb2c:	3a01      	subs	r2, #1
   1cb2e:	9204      	str	r2, [sp, #16]
   1cb30:	9a05      	ldr	r2, [sp, #20]
   1cb32:	3a08      	subs	r2, #8
   1cb34:	9205      	str	r2, [sp, #20]
   1cb36:	e712      	b.n	1c95e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1cb38:	9b06      	ldr	r3, [sp, #24]
   1cb3a:	2b00      	cmp	r3, #0
   1cb3c:	d0dd      	beq.n	1cafa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1cb3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1cb40:	9306      	str	r3, [sp, #24]
   1cb42:	2b00      	cmp	r3, #0
   1cb44:	d0d9      	beq.n	1cafa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1cb46:	9b04      	ldr	r3, [sp, #16]
   1cb48:	930a      	str	r3, [sp, #40]	; 0x28
   1cb4a:	e702      	b.n	1c952 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   1cb4c:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1cb50:	7163      	strb	r3, [r4, #5]
   1cb52:	e76b      	b.n	1ca2c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1cb54:	2f00      	cmp	r7, #0
   1cb56:	bf08      	it	eq
   1cb58:	2701      	moveq	r7, #1
   1cb5a:	2d00      	cmp	r5, #0
   1cb5c:	bf08      	it	eq
   1cb5e:	2501      	moveq	r5, #1
   1cb60:	e7b4      	b.n	1cacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1cb62:	2d00      	cmp	r5, #0
   1cb64:	d1cd      	bne.n	1cb02 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1cb66:	2701      	movs	r7, #1
   1cb68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1cb6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1cb6c:	9300      	str	r3, [sp, #0]
   1cb6e:	4641      	mov	r1, r8
   1cb70:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1cb72:	9808      	ldr	r0, [sp, #32]
   1cb74:	f7ff fea4 	bl	1c8c0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1cb78:	4605      	mov	r5, r0
   1cb7a:	e7a7      	b.n	1cacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

0001cb7c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1cb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb80:	b089      	sub	sp, #36	; 0x24
   1cb82:	4607      	mov	r7, r0
   1cb84:	9102      	str	r1, [sp, #8]
   1cb86:	4692      	mov	sl, r2
   1cb88:	461c      	mov	r4, r3
   1cb8a:	f7ff fd5d 	bl	1c648 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1cb8e:	4605      	mov	r5, r0
   1cb90:	2800      	cmp	r0, #0
   1cb92:	d155      	bne.n	1cc40 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1cb94:	f04f 0b00 	mov.w	fp, #0
   1cb98:	f8d4 8008 	ldr.w	r8, [r4, #8]
   1cb9c:	f8d7 900c 	ldr.w	r9, [r7, #12]
   1cba0:	f018 0f10 	tst.w	r8, #16
   1cba4:	bf18      	it	ne
   1cba6:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   1cbaa:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   1cbae:	f008 0301 	and.w	r3, r8, #1
   1cbb2:	9303      	str	r3, [sp, #12]
   1cbb4:	f1b9 0f00 	cmp.w	r9, #0
   1cbb8:	d06b      	beq.n	1cc92 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   1cbba:	68f2      	ldr	r2, [r6, #12]
   1cbbc:	f8cd b010 	str.w	fp, [sp, #16]
   1cbc0:	f002 0301 	and.w	r3, r2, #1
   1cbc4:	9300      	str	r3, [sp, #0]
   1cbc6:	f012 0302 	ands.w	r3, r2, #2
   1cbca:	f88d b014 	strb.w	fp, [sp, #20]
   1cbce:	f8cd 8018 	str.w	r8, [sp, #24]
   1cbd2:	f8cd b01c 	str.w	fp, [sp, #28]
   1cbd6:	9301      	str	r3, [sp, #4]
   1cbd8:	d102      	bne.n	1cbe0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   1cbda:	9b03      	ldr	r3, [sp, #12]
   1cbdc:	2b00      	cmp	r3, #0
   1cbde:	d04a      	beq.n	1cc76 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1cbe0:	f1ba 0f00 	cmp.w	sl, #0
   1cbe4:	d030      	beq.n	1cc48 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   1cbe6:	9b00      	ldr	r3, [sp, #0]
   1cbe8:	1212      	asrs	r2, r2, #8
   1cbea:	b113      	cbz	r3, 1cbf2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   1cbec:	f8da 3000 	ldr.w	r3, [sl]
   1cbf0:	589a      	ldr	r2, [r3, r2]
   1cbf2:	4452      	add	r2, sl
   1cbf4:	68b0      	ldr	r0, [r6, #8]
   1cbf6:	9902      	ldr	r1, [sp, #8]
   1cbf8:	6803      	ldr	r3, [r0, #0]
   1cbfa:	699d      	ldr	r5, [r3, #24]
   1cbfc:	ab04      	add	r3, sp, #16
   1cbfe:	47a8      	blx	r5
   1cc00:	4605      	mov	r5, r0
   1cc02:	2800      	cmp	r0, #0
   1cc04:	d037      	beq.n	1cc76 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1cc06:	9b07      	ldr	r3, [sp, #28]
   1cc08:	2b08      	cmp	r3, #8
   1cc0a:	d103      	bne.n	1cc14 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1cc0c:	9b00      	ldr	r3, [sp, #0]
   1cc0e:	b10b      	cbz	r3, 1cc14 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1cc10:	68b3      	ldr	r3, [r6, #8]
   1cc12:	9307      	str	r3, [sp, #28]
   1cc14:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1cc18:	2b03      	cmp	r3, #3
   1cc1a:	dd02      	ble.n	1cc22 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1cc1c:	9a01      	ldr	r2, [sp, #4]
   1cc1e:	2a00      	cmp	r2, #0
   1cc20:	d03c      	beq.n	1cc9c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1cc22:	68e1      	ldr	r1, [r4, #12]
   1cc24:	b9c1      	cbnz	r1, 1cc58 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   1cc26:	ab04      	add	r3, sp, #16
   1cc28:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1cc2a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1cc2e:	7923      	ldrb	r3, [r4, #4]
   1cc30:	2b03      	cmp	r3, #3
   1cc32:	dd05      	ble.n	1cc40 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1cc34:	079a      	lsls	r2, r3, #30
   1cc36:	d509      	bpl.n	1cc4c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   1cc38:	68bb      	ldr	r3, [r7, #8]
   1cc3a:	f013 0f01 	tst.w	r3, #1
   1cc3e:	d11a      	bne.n	1cc76 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1cc40:	4628      	mov	r0, r5
   1cc42:	b009      	add	sp, #36	; 0x24
   1cc44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc48:	4652      	mov	r2, sl
   1cc4a:	e7d3      	b.n	1cbf4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   1cc4c:	07db      	lsls	r3, r3, #31
   1cc4e:	d5f7      	bpl.n	1cc40 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1cc50:	68bb      	ldr	r3, [r7, #8]
   1cc52:	f013 0f02 	tst.w	r3, #2
   1cc56:	e7f2      	b.n	1cc3e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   1cc58:	6823      	ldr	r3, [r4, #0]
   1cc5a:	9a04      	ldr	r2, [sp, #16]
   1cc5c:	4293      	cmp	r3, r2
   1cc5e:	d004      	beq.n	1cc6a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   1cc60:	2300      	movs	r3, #0
   1cc62:	6023      	str	r3, [r4, #0]
   1cc64:	2302      	movs	r3, #2
   1cc66:	7123      	strb	r3, [r4, #4]
   1cc68:	e7ea      	b.n	1cc40 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1cc6a:	b143      	cbz	r3, 1cc7e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   1cc6c:	7923      	ldrb	r3, [r4, #4]
   1cc6e:	f89d 2014 	ldrb.w	r2, [sp, #20]
   1cc72:	4313      	orrs	r3, r2
   1cc74:	7123      	strb	r3, [r4, #4]
   1cc76:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   1cc7a:	3e08      	subs	r6, #8
   1cc7c:	e79a      	b.n	1cbb4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   1cc7e:	9807      	ldr	r0, [sp, #28]
   1cc80:	2808      	cmp	r0, #8
   1cc82:	d0ef      	beq.n	1cc64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1cc84:	2908      	cmp	r1, #8
   1cc86:	d0ed      	beq.n	1cc64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1cc88:	f7ff fdb6 	bl	1c7f8 <std::type_info::operator==(std::type_info const&) const>
   1cc8c:	2800      	cmp	r0, #0
   1cc8e:	d1ed      	bne.n	1cc6c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   1cc90:	e7e8      	b.n	1cc64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1cc92:	7925      	ldrb	r5, [r4, #4]
   1cc94:	3500      	adds	r5, #0
   1cc96:	bf18      	it	ne
   1cc98:	2501      	movne	r5, #1
   1cc9a:	e7d1      	b.n	1cc40 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1cc9c:	f023 0302 	bic.w	r3, r3, #2
   1cca0:	f88d 3014 	strb.w	r3, [sp, #20]
   1cca4:	e7bd      	b.n	1cc22 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

0001cca6 <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1cca6:	b508      	push	{r3, lr}
   1cca8:	4780      	blx	r0
   1ccaa:	f000 fe6f 	bl	1d98c <abort>
   1ccae:	Address 0x000000000001ccae is out of bounds.


0001ccb0 <std::get_terminate()>:
_ZSt13get_terminatev():
   1ccb0:	4b02      	ldr	r3, [pc, #8]	; (1ccbc <std::get_terminate()+0xc>)
   1ccb2:	6818      	ldr	r0, [r3, #0]
   1ccb4:	f3bf 8f5b 	dmb	ish
   1ccb8:	4770      	bx	lr
   1ccba:	bf00      	nop
   1ccbc:	2007c0dc 	.word	0x2007c0dc

0001ccc0 <std::terminate()>:
_ZSt9terminatev():
   1ccc0:	b508      	push	{r3, lr}
   1ccc2:	f7ff fff5 	bl	1ccb0 <std::get_terminate()>
   1ccc6:	f7ff ffee 	bl	1cca6 <__cxxabiv1::__terminate(void (*)())>
   1ccca:	Address 0x000000000001ccca is out of bounds.


0001cccc <__aeabi_llsl>:
__aeabi_llsl():
   1cccc:	4091      	lsls	r1, r2
   1ccce:	1c03      	adds	r3, r0, #0
   1ccd0:	4090      	lsls	r0, r2
   1ccd2:	469c      	mov	ip, r3
   1ccd4:	3a20      	subs	r2, #32
   1ccd6:	4093      	lsls	r3, r2
   1ccd8:	4319      	orrs	r1, r3
   1ccda:	4252      	negs	r2, r2
   1ccdc:	4663      	mov	r3, ip
   1ccde:	40d3      	lsrs	r3, r2
   1cce0:	4319      	orrs	r1, r3
   1cce2:	4770      	bx	lr

0001cce4 <__aeabi_drsub>:
__aeabi_drsub():
   1cce4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1cce8:	e002      	b.n	1ccf0 <__adddf3>
   1ccea:	bf00      	nop

0001ccec <__aeabi_dsub>:
__subdf3():
   1ccec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001ccf0 <__adddf3>:
__aeabi_dadd():
   1ccf0:	b530      	push	{r4, r5, lr}
   1ccf2:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1ccf6:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1ccfa:	ea94 0f05 	teq	r4, r5
   1ccfe:	bf08      	it	eq
   1cd00:	ea90 0f02 	teqeq	r0, r2
   1cd04:	bf1f      	itttt	ne
   1cd06:	ea54 0c00 	orrsne.w	ip, r4, r0
   1cd0a:	ea55 0c02 	orrsne.w	ip, r5, r2
   1cd0e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1cd12:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1cd16:	f000 80e2 	beq.w	1cede <__adddf3+0x1ee>
   1cd1a:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1cd1e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1cd22:	bfb8      	it	lt
   1cd24:	426d      	neglt	r5, r5
   1cd26:	dd0c      	ble.n	1cd42 <__adddf3+0x52>
   1cd28:	442c      	add	r4, r5
   1cd2a:	ea80 0202 	eor.w	r2, r0, r2
   1cd2e:	ea81 0303 	eor.w	r3, r1, r3
   1cd32:	ea82 0000 	eor.w	r0, r2, r0
   1cd36:	ea83 0101 	eor.w	r1, r3, r1
   1cd3a:	ea80 0202 	eor.w	r2, r0, r2
   1cd3e:	ea81 0303 	eor.w	r3, r1, r3
   1cd42:	2d36      	cmp	r5, #54	; 0x36
   1cd44:	bf88      	it	hi
   1cd46:	bd30      	pophi	{r4, r5, pc}
   1cd48:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1cd4c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1cd50:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1cd54:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1cd58:	d002      	beq.n	1cd60 <__adddf3+0x70>
   1cd5a:	4240      	negs	r0, r0
   1cd5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1cd60:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1cd64:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1cd68:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1cd6c:	d002      	beq.n	1cd74 <__adddf3+0x84>
   1cd6e:	4252      	negs	r2, r2
   1cd70:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1cd74:	ea94 0f05 	teq	r4, r5
   1cd78:	f000 80a7 	beq.w	1ceca <__adddf3+0x1da>
   1cd7c:	f1a4 0401 	sub.w	r4, r4, #1
   1cd80:	f1d5 0e20 	rsbs	lr, r5, #32
   1cd84:	db0d      	blt.n	1cda2 <__adddf3+0xb2>
   1cd86:	fa02 fc0e 	lsl.w	ip, r2, lr
   1cd8a:	fa22 f205 	lsr.w	r2, r2, r5
   1cd8e:	1880      	adds	r0, r0, r2
   1cd90:	f141 0100 	adc.w	r1, r1, #0
   1cd94:	fa03 f20e 	lsl.w	r2, r3, lr
   1cd98:	1880      	adds	r0, r0, r2
   1cd9a:	fa43 f305 	asr.w	r3, r3, r5
   1cd9e:	4159      	adcs	r1, r3
   1cda0:	e00e      	b.n	1cdc0 <__adddf3+0xd0>
   1cda2:	f1a5 0520 	sub.w	r5, r5, #32
   1cda6:	f10e 0e20 	add.w	lr, lr, #32
   1cdaa:	2a01      	cmp	r2, #1
   1cdac:	fa03 fc0e 	lsl.w	ip, r3, lr
   1cdb0:	bf28      	it	cs
   1cdb2:	f04c 0c02 	orrcs.w	ip, ip, #2
   1cdb6:	fa43 f305 	asr.w	r3, r3, r5
   1cdba:	18c0      	adds	r0, r0, r3
   1cdbc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1cdc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cdc4:	d507      	bpl.n	1cdd6 <__adddf3+0xe6>
   1cdc6:	f04f 0e00 	mov.w	lr, #0
   1cdca:	f1dc 0c00 	rsbs	ip, ip, #0
   1cdce:	eb7e 0000 	sbcs.w	r0, lr, r0
   1cdd2:	eb6e 0101 	sbc.w	r1, lr, r1
   1cdd6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1cdda:	d31b      	bcc.n	1ce14 <__adddf3+0x124>
   1cddc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1cde0:	d30c      	bcc.n	1cdfc <__adddf3+0x10c>
   1cde2:	0849      	lsrs	r1, r1, #1
   1cde4:	ea5f 0030 	movs.w	r0, r0, rrx
   1cde8:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1cdec:	f104 0401 	add.w	r4, r4, #1
   1cdf0:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1cdf4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1cdf8:	f080 809a 	bcs.w	1cf30 <__adddf3+0x240>
   1cdfc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1ce00:	bf08      	it	eq
   1ce02:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1ce06:	f150 0000 	adcs.w	r0, r0, #0
   1ce0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1ce0e:	ea41 0105 	orr.w	r1, r1, r5
   1ce12:	bd30      	pop	{r4, r5, pc}
   1ce14:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1ce18:	4140      	adcs	r0, r0
   1ce1a:	eb41 0101 	adc.w	r1, r1, r1
   1ce1e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1ce22:	f1a4 0401 	sub.w	r4, r4, #1
   1ce26:	d1e9      	bne.n	1cdfc <__adddf3+0x10c>
   1ce28:	f091 0f00 	teq	r1, #0
   1ce2c:	bf04      	itt	eq
   1ce2e:	4601      	moveq	r1, r0
   1ce30:	2000      	moveq	r0, #0
   1ce32:	fab1 f381 	clz	r3, r1
   1ce36:	bf08      	it	eq
   1ce38:	3320      	addeq	r3, #32
   1ce3a:	f1a3 030b 	sub.w	r3, r3, #11
   1ce3e:	f1b3 0220 	subs.w	r2, r3, #32
   1ce42:	da0c      	bge.n	1ce5e <__adddf3+0x16e>
   1ce44:	320c      	adds	r2, #12
   1ce46:	dd08      	ble.n	1ce5a <__adddf3+0x16a>
   1ce48:	f102 0c14 	add.w	ip, r2, #20
   1ce4c:	f1c2 020c 	rsb	r2, r2, #12
   1ce50:	fa01 f00c 	lsl.w	r0, r1, ip
   1ce54:	fa21 f102 	lsr.w	r1, r1, r2
   1ce58:	e00c      	b.n	1ce74 <__adddf3+0x184>
   1ce5a:	f102 0214 	add.w	r2, r2, #20
   1ce5e:	bfd8      	it	le
   1ce60:	f1c2 0c20 	rsble	ip, r2, #32
   1ce64:	fa01 f102 	lsl.w	r1, r1, r2
   1ce68:	fa20 fc0c 	lsr.w	ip, r0, ip
   1ce6c:	bfdc      	itt	le
   1ce6e:	ea41 010c 	orrle.w	r1, r1, ip
   1ce72:	4090      	lslle	r0, r2
   1ce74:	1ae4      	subs	r4, r4, r3
   1ce76:	bfa2      	ittt	ge
   1ce78:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1ce7c:	4329      	orrge	r1, r5
   1ce7e:	bd30      	popge	{r4, r5, pc}
   1ce80:	ea6f 0404 	mvn.w	r4, r4
   1ce84:	3c1f      	subs	r4, #31
   1ce86:	da1c      	bge.n	1cec2 <__adddf3+0x1d2>
   1ce88:	340c      	adds	r4, #12
   1ce8a:	dc0e      	bgt.n	1ceaa <__adddf3+0x1ba>
   1ce8c:	f104 0414 	add.w	r4, r4, #20
   1ce90:	f1c4 0220 	rsb	r2, r4, #32
   1ce94:	fa20 f004 	lsr.w	r0, r0, r4
   1ce98:	fa01 f302 	lsl.w	r3, r1, r2
   1ce9c:	ea40 0003 	orr.w	r0, r0, r3
   1cea0:	fa21 f304 	lsr.w	r3, r1, r4
   1cea4:	ea45 0103 	orr.w	r1, r5, r3
   1cea8:	bd30      	pop	{r4, r5, pc}
   1ceaa:	f1c4 040c 	rsb	r4, r4, #12
   1ceae:	f1c4 0220 	rsb	r2, r4, #32
   1ceb2:	fa20 f002 	lsr.w	r0, r0, r2
   1ceb6:	fa01 f304 	lsl.w	r3, r1, r4
   1ceba:	ea40 0003 	orr.w	r0, r0, r3
   1cebe:	4629      	mov	r1, r5
   1cec0:	bd30      	pop	{r4, r5, pc}
   1cec2:	fa21 f004 	lsr.w	r0, r1, r4
   1cec6:	4629      	mov	r1, r5
   1cec8:	bd30      	pop	{r4, r5, pc}
   1ceca:	f094 0f00 	teq	r4, #0
   1cece:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1ced2:	bf06      	itte	eq
   1ced4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1ced8:	3401      	addeq	r4, #1
   1ceda:	3d01      	subne	r5, #1
   1cedc:	e74e      	b.n	1cd7c <__adddf3+0x8c>
   1cede:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1cee2:	bf18      	it	ne
   1cee4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1cee8:	d029      	beq.n	1cf3e <__adddf3+0x24e>
   1ceea:	ea94 0f05 	teq	r4, r5
   1ceee:	bf08      	it	eq
   1cef0:	ea90 0f02 	teqeq	r0, r2
   1cef4:	d005      	beq.n	1cf02 <__adddf3+0x212>
   1cef6:	ea54 0c00 	orrs.w	ip, r4, r0
   1cefa:	bf04      	itt	eq
   1cefc:	4619      	moveq	r1, r3
   1cefe:	4610      	moveq	r0, r2
   1cf00:	bd30      	pop	{r4, r5, pc}
   1cf02:	ea91 0f03 	teq	r1, r3
   1cf06:	bf1e      	ittt	ne
   1cf08:	2100      	movne	r1, #0
   1cf0a:	2000      	movne	r0, #0
   1cf0c:	bd30      	popne	{r4, r5, pc}
   1cf0e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1cf12:	d105      	bne.n	1cf20 <__adddf3+0x230>
   1cf14:	0040      	lsls	r0, r0, #1
   1cf16:	4149      	adcs	r1, r1
   1cf18:	bf28      	it	cs
   1cf1a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1cf1e:	bd30      	pop	{r4, r5, pc}
   1cf20:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1cf24:	bf3c      	itt	cc
   1cf26:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1cf2a:	bd30      	popcc	{r4, r5, pc}
   1cf2c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cf30:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1cf34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1cf38:	f04f 0000 	mov.w	r0, #0
   1cf3c:	bd30      	pop	{r4, r5, pc}
   1cf3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1cf42:	bf1a      	itte	ne
   1cf44:	4619      	movne	r1, r3
   1cf46:	4610      	movne	r0, r2
   1cf48:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1cf4c:	bf1c      	itt	ne
   1cf4e:	460b      	movne	r3, r1
   1cf50:	4602      	movne	r2, r0
   1cf52:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1cf56:	bf06      	itte	eq
   1cf58:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1cf5c:	ea91 0f03 	teqeq	r1, r3
   1cf60:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1cf64:	bd30      	pop	{r4, r5, pc}
   1cf66:	bf00      	nop

0001cf68 <__aeabi_ui2d>:
__floatunsidf():
   1cf68:	f090 0f00 	teq	r0, #0
   1cf6c:	bf04      	itt	eq
   1cf6e:	2100      	moveq	r1, #0
   1cf70:	4770      	bxeq	lr
   1cf72:	b530      	push	{r4, r5, lr}
   1cf74:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cf78:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cf7c:	f04f 0500 	mov.w	r5, #0
   1cf80:	f04f 0100 	mov.w	r1, #0
   1cf84:	e750      	b.n	1ce28 <__adddf3+0x138>
   1cf86:	bf00      	nop

0001cf88 <__aeabi_i2d>:
__aeabi_i2d():
   1cf88:	f090 0f00 	teq	r0, #0
   1cf8c:	bf04      	itt	eq
   1cf8e:	2100      	moveq	r1, #0
   1cf90:	4770      	bxeq	lr
   1cf92:	b530      	push	{r4, r5, lr}
   1cf94:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cf98:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cf9c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1cfa0:	bf48      	it	mi
   1cfa2:	4240      	negmi	r0, r0
   1cfa4:	f04f 0100 	mov.w	r1, #0
   1cfa8:	e73e      	b.n	1ce28 <__adddf3+0x138>
   1cfaa:	bf00      	nop

0001cfac <__aeabi_f2d>:
__aeabi_f2d():
   1cfac:	0042      	lsls	r2, r0, #1
   1cfae:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1cfb2:	ea4f 0131 	mov.w	r1, r1, rrx
   1cfb6:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1cfba:	bf1f      	itttt	ne
   1cfbc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1cfc0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1cfc4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1cfc8:	4770      	bxne	lr
   1cfca:	f092 0f00 	teq	r2, #0
   1cfce:	bf14      	ite	ne
   1cfd0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1cfd4:	4770      	bxeq	lr
   1cfd6:	b530      	push	{r4, r5, lr}
   1cfd8:	f44f 7460 	mov.w	r4, #896	; 0x380
   1cfdc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cfe0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1cfe4:	e720      	b.n	1ce28 <__adddf3+0x138>
   1cfe6:	bf00      	nop

0001cfe8 <__aeabi_ul2d>:
__floatundidf():
   1cfe8:	ea50 0201 	orrs.w	r2, r0, r1
   1cfec:	bf08      	it	eq
   1cfee:	4770      	bxeq	lr
   1cff0:	b530      	push	{r4, r5, lr}
   1cff2:	f04f 0500 	mov.w	r5, #0
   1cff6:	e00a      	b.n	1d00e <__aeabi_l2d+0x16>

0001cff8 <__aeabi_l2d>:
__aeabi_l2d():
   1cff8:	ea50 0201 	orrs.w	r2, r0, r1
   1cffc:	bf08      	it	eq
   1cffe:	4770      	bxeq	lr
   1d000:	b530      	push	{r4, r5, lr}
   1d002:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1d006:	d502      	bpl.n	1d00e <__aeabi_l2d+0x16>
   1d008:	4240      	negs	r0, r0
   1d00a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d00e:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1d012:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1d016:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1d01a:	f43f aedc 	beq.w	1cdd6 <__adddf3+0xe6>
   1d01e:	f04f 0203 	mov.w	r2, #3
   1d022:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1d026:	bf18      	it	ne
   1d028:	3203      	addne	r2, #3
   1d02a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1d02e:	bf18      	it	ne
   1d030:	3203      	addne	r2, #3
   1d032:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1d036:	f1c2 0320 	rsb	r3, r2, #32
   1d03a:	fa00 fc03 	lsl.w	ip, r0, r3
   1d03e:	fa20 f002 	lsr.w	r0, r0, r2
   1d042:	fa01 fe03 	lsl.w	lr, r1, r3
   1d046:	ea40 000e 	orr.w	r0, r0, lr
   1d04a:	fa21 f102 	lsr.w	r1, r1, r2
   1d04e:	4414      	add	r4, r2
   1d050:	e6c1      	b.n	1cdd6 <__adddf3+0xe6>
   1d052:	bf00      	nop

0001d054 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   1d054:	004a      	lsls	r2, r1, #1
   1d056:	d211      	bcs.n	1d07c <__aeabi_d2uiz+0x28>
   1d058:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1d05c:	d211      	bcs.n	1d082 <__aeabi_d2uiz+0x2e>
   1d05e:	d50d      	bpl.n	1d07c <__aeabi_d2uiz+0x28>
   1d060:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1d064:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1d068:	d40e      	bmi.n	1d088 <__aeabi_d2uiz+0x34>
   1d06a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1d06e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d072:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1d076:	fa23 f002 	lsr.w	r0, r3, r2
   1d07a:	4770      	bx	lr
   1d07c:	f04f 0000 	mov.w	r0, #0
   1d080:	4770      	bx	lr
   1d082:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1d086:	d102      	bne.n	1d08e <__aeabi_d2uiz+0x3a>
   1d088:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d08c:	4770      	bx	lr
   1d08e:	f04f 0000 	mov.w	r0, #0
   1d092:	4770      	bx	lr

0001d094 <__aeabi_d2f>:
__truncdfsf2():
   1d094:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1d098:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1d09c:	bf24      	itt	cs
   1d09e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1d0a2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1d0a6:	d90d      	bls.n	1d0c4 <__aeabi_d2f+0x30>
   1d0a8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d0ac:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1d0b0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1d0b4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1d0b8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1d0bc:	bf08      	it	eq
   1d0be:	f020 0001 	biceq.w	r0, r0, #1
   1d0c2:	4770      	bx	lr
   1d0c4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1d0c8:	d121      	bne.n	1d10e <__aeabi_d2f+0x7a>
   1d0ca:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1d0ce:	bfbc      	itt	lt
   1d0d0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1d0d4:	4770      	bxlt	lr
   1d0d6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1d0da:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1d0de:	f1c2 0218 	rsb	r2, r2, #24
   1d0e2:	f1c2 0c20 	rsb	ip, r2, #32
   1d0e6:	fa10 f30c 	lsls.w	r3, r0, ip
   1d0ea:	fa20 f002 	lsr.w	r0, r0, r2
   1d0ee:	bf18      	it	ne
   1d0f0:	f040 0001 	orrne.w	r0, r0, #1
   1d0f4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1d0f8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1d0fc:	fa03 fc0c 	lsl.w	ip, r3, ip
   1d100:	ea40 000c 	orr.w	r0, r0, ip
   1d104:	fa23 f302 	lsr.w	r3, r3, r2
   1d108:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1d10c:	e7cc      	b.n	1d0a8 <__aeabi_d2f+0x14>
   1d10e:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1d112:	d107      	bne.n	1d124 <__aeabi_d2f+0x90>
   1d114:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1d118:	bf1e      	ittt	ne
   1d11a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1d11e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1d122:	4770      	bxne	lr
   1d124:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1d128:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d12c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d130:	4770      	bx	lr
   1d132:	bf00      	nop

0001d134 <__aeabi_frsub>:
__aeabi_frsub():
   1d134:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1d138:	e002      	b.n	1d140 <__addsf3>
   1d13a:	bf00      	nop

0001d13c <__aeabi_fsub>:
__aeabi_fsub():
   1d13c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001d140 <__addsf3>:
__addsf3():
   1d140:	0042      	lsls	r2, r0, #1
   1d142:	bf1f      	itttt	ne
   1d144:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1d148:	ea92 0f03 	teqne	r2, r3
   1d14c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1d150:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d154:	d06a      	beq.n	1d22c <__addsf3+0xec>
   1d156:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1d15a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1d15e:	bfc1      	itttt	gt
   1d160:	18d2      	addgt	r2, r2, r3
   1d162:	4041      	eorgt	r1, r0
   1d164:	4048      	eorgt	r0, r1
   1d166:	4041      	eorgt	r1, r0
   1d168:	bfb8      	it	lt
   1d16a:	425b      	neglt	r3, r3
   1d16c:	2b19      	cmp	r3, #25
   1d16e:	bf88      	it	hi
   1d170:	4770      	bxhi	lr
   1d172:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1d176:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d17a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1d17e:	bf18      	it	ne
   1d180:	4240      	negne	r0, r0
   1d182:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1d186:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1d18a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1d18e:	bf18      	it	ne
   1d190:	4249      	negne	r1, r1
   1d192:	ea92 0f03 	teq	r2, r3
   1d196:	d03f      	beq.n	1d218 <__addsf3+0xd8>
   1d198:	f1a2 0201 	sub.w	r2, r2, #1
   1d19c:	fa41 fc03 	asr.w	ip, r1, r3
   1d1a0:	eb10 000c 	adds.w	r0, r0, ip
   1d1a4:	f1c3 0320 	rsb	r3, r3, #32
   1d1a8:	fa01 f103 	lsl.w	r1, r1, r3
   1d1ac:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1d1b0:	d502      	bpl.n	1d1b8 <__addsf3+0x78>
   1d1b2:	4249      	negs	r1, r1
   1d1b4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1d1b8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1d1bc:	d313      	bcc.n	1d1e6 <__addsf3+0xa6>
   1d1be:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1d1c2:	d306      	bcc.n	1d1d2 <__addsf3+0x92>
   1d1c4:	0840      	lsrs	r0, r0, #1
   1d1c6:	ea4f 0131 	mov.w	r1, r1, rrx
   1d1ca:	f102 0201 	add.w	r2, r2, #1
   1d1ce:	2afe      	cmp	r2, #254	; 0xfe
   1d1d0:	d251      	bcs.n	1d276 <__addsf3+0x136>
   1d1d2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1d1d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d1da:	bf08      	it	eq
   1d1dc:	f020 0001 	biceq.w	r0, r0, #1
   1d1e0:	ea40 0003 	orr.w	r0, r0, r3
   1d1e4:	4770      	bx	lr
   1d1e6:	0049      	lsls	r1, r1, #1
   1d1e8:	eb40 0000 	adc.w	r0, r0, r0
   1d1ec:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1d1f0:	f1a2 0201 	sub.w	r2, r2, #1
   1d1f4:	d1ed      	bne.n	1d1d2 <__addsf3+0x92>
   1d1f6:	fab0 fc80 	clz	ip, r0
   1d1fa:	f1ac 0c08 	sub.w	ip, ip, #8
   1d1fe:	ebb2 020c 	subs.w	r2, r2, ip
   1d202:	fa00 f00c 	lsl.w	r0, r0, ip
   1d206:	bfaa      	itet	ge
   1d208:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1d20c:	4252      	neglt	r2, r2
   1d20e:	4318      	orrge	r0, r3
   1d210:	bfbc      	itt	lt
   1d212:	40d0      	lsrlt	r0, r2
   1d214:	4318      	orrlt	r0, r3
   1d216:	4770      	bx	lr
   1d218:	f092 0f00 	teq	r2, #0
   1d21c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1d220:	bf06      	itte	eq
   1d222:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1d226:	3201      	addeq	r2, #1
   1d228:	3b01      	subne	r3, #1
   1d22a:	e7b5      	b.n	1d198 <__addsf3+0x58>
   1d22c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1d230:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1d234:	bf18      	it	ne
   1d236:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d23a:	d021      	beq.n	1d280 <__addsf3+0x140>
   1d23c:	ea92 0f03 	teq	r2, r3
   1d240:	d004      	beq.n	1d24c <__addsf3+0x10c>
   1d242:	f092 0f00 	teq	r2, #0
   1d246:	bf08      	it	eq
   1d248:	4608      	moveq	r0, r1
   1d24a:	4770      	bx	lr
   1d24c:	ea90 0f01 	teq	r0, r1
   1d250:	bf1c      	itt	ne
   1d252:	2000      	movne	r0, #0
   1d254:	4770      	bxne	lr
   1d256:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1d25a:	d104      	bne.n	1d266 <__addsf3+0x126>
   1d25c:	0040      	lsls	r0, r0, #1
   1d25e:	bf28      	it	cs
   1d260:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1d264:	4770      	bx	lr
   1d266:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1d26a:	bf3c      	itt	cc
   1d26c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1d270:	4770      	bxcc	lr
   1d272:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1d276:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1d27a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d27e:	4770      	bx	lr
   1d280:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1d284:	bf16      	itet	ne
   1d286:	4608      	movne	r0, r1
   1d288:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1d28c:	4601      	movne	r1, r0
   1d28e:	0242      	lsls	r2, r0, #9
   1d290:	bf06      	itte	eq
   1d292:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1d296:	ea90 0f01 	teqeq	r0, r1
   1d29a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1d29e:	4770      	bx	lr

0001d2a0 <__aeabi_ui2f>:
__floatunsisf():
   1d2a0:	f04f 0300 	mov.w	r3, #0
   1d2a4:	e004      	b.n	1d2b0 <__aeabi_i2f+0x8>
   1d2a6:	bf00      	nop

0001d2a8 <__aeabi_i2f>:
__floatsisf():
   1d2a8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1d2ac:	bf48      	it	mi
   1d2ae:	4240      	negmi	r0, r0
   1d2b0:	ea5f 0c00 	movs.w	ip, r0
   1d2b4:	bf08      	it	eq
   1d2b6:	4770      	bxeq	lr
   1d2b8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1d2bc:	4601      	mov	r1, r0
   1d2be:	f04f 0000 	mov.w	r0, #0
   1d2c2:	e01c      	b.n	1d2fe <__aeabi_l2f+0x2a>

0001d2c4 <__aeabi_ul2f>:
__aeabi_ul2f():
   1d2c4:	ea50 0201 	orrs.w	r2, r0, r1
   1d2c8:	bf08      	it	eq
   1d2ca:	4770      	bxeq	lr
   1d2cc:	f04f 0300 	mov.w	r3, #0
   1d2d0:	e00a      	b.n	1d2e8 <__aeabi_l2f+0x14>
   1d2d2:	bf00      	nop

0001d2d4 <__aeabi_l2f>:
__aeabi_l2f():
   1d2d4:	ea50 0201 	orrs.w	r2, r0, r1
   1d2d8:	bf08      	it	eq
   1d2da:	4770      	bxeq	lr
   1d2dc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1d2e0:	d502      	bpl.n	1d2e8 <__aeabi_l2f+0x14>
   1d2e2:	4240      	negs	r0, r0
   1d2e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d2e8:	ea5f 0c01 	movs.w	ip, r1
   1d2ec:	bf02      	ittt	eq
   1d2ee:	4684      	moveq	ip, r0
   1d2f0:	4601      	moveq	r1, r0
   1d2f2:	2000      	moveq	r0, #0
   1d2f4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1d2f8:	bf08      	it	eq
   1d2fa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1d2fe:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1d302:	fabc f28c 	clz	r2, ip
   1d306:	3a08      	subs	r2, #8
   1d308:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1d30c:	db10      	blt.n	1d330 <__aeabi_l2f+0x5c>
   1d30e:	fa01 fc02 	lsl.w	ip, r1, r2
   1d312:	4463      	add	r3, ip
   1d314:	fa00 fc02 	lsl.w	ip, r0, r2
   1d318:	f1c2 0220 	rsb	r2, r2, #32
   1d31c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1d320:	fa20 f202 	lsr.w	r2, r0, r2
   1d324:	eb43 0002 	adc.w	r0, r3, r2
   1d328:	bf08      	it	eq
   1d32a:	f020 0001 	biceq.w	r0, r0, #1
   1d32e:	4770      	bx	lr
   1d330:	f102 0220 	add.w	r2, r2, #32
   1d334:	fa01 fc02 	lsl.w	ip, r1, r2
   1d338:	f1c2 0220 	rsb	r2, r2, #32
   1d33c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1d340:	fa21 f202 	lsr.w	r2, r1, r2
   1d344:	eb43 0002 	adc.w	r0, r3, r2
   1d348:	bf08      	it	eq
   1d34a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d34e:	4770      	bx	lr

0001d350 <__aeabi_fmul>:
__aeabi_fmul():
   1d350:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d354:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d358:	bf1e      	ittt	ne
   1d35a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d35e:	ea92 0f0c 	teqne	r2, ip
   1d362:	ea93 0f0c 	teqne	r3, ip
   1d366:	d06f      	beq.n	1d448 <__aeabi_fmul+0xf8>
   1d368:	441a      	add	r2, r3
   1d36a:	ea80 0c01 	eor.w	ip, r0, r1
   1d36e:	0240      	lsls	r0, r0, #9
   1d370:	bf18      	it	ne
   1d372:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1d376:	d01e      	beq.n	1d3b6 <__aeabi_fmul+0x66>
   1d378:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1d37c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1d380:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1d384:	fba0 3101 	umull	r3, r1, r0, r1
   1d388:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d38c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1d390:	bf3e      	ittt	cc
   1d392:	0049      	lslcc	r1, r1, #1
   1d394:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1d398:	005b      	lslcc	r3, r3, #1
   1d39a:	ea40 0001 	orr.w	r0, r0, r1
   1d39e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1d3a2:	2afd      	cmp	r2, #253	; 0xfd
   1d3a4:	d81d      	bhi.n	1d3e2 <__aeabi_fmul+0x92>
   1d3a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1d3aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d3ae:	bf08      	it	eq
   1d3b0:	f020 0001 	biceq.w	r0, r0, #1
   1d3b4:	4770      	bx	lr
   1d3b6:	f090 0f00 	teq	r0, #0
   1d3ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d3be:	bf08      	it	eq
   1d3c0:	0249      	lsleq	r1, r1, #9
   1d3c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d3c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1d3ca:	3a7f      	subs	r2, #127	; 0x7f
   1d3cc:	bfc2      	ittt	gt
   1d3ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d3d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d3d6:	4770      	bxgt	lr
   1d3d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d3dc:	f04f 0300 	mov.w	r3, #0
   1d3e0:	3a01      	subs	r2, #1
   1d3e2:	dc5d      	bgt.n	1d4a0 <__aeabi_fmul+0x150>
   1d3e4:	f112 0f19 	cmn.w	r2, #25
   1d3e8:	bfdc      	itt	le
   1d3ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1d3ee:	4770      	bxle	lr
   1d3f0:	f1c2 0200 	rsb	r2, r2, #0
   1d3f4:	0041      	lsls	r1, r0, #1
   1d3f6:	fa21 f102 	lsr.w	r1, r1, r2
   1d3fa:	f1c2 0220 	rsb	r2, r2, #32
   1d3fe:	fa00 fc02 	lsl.w	ip, r0, r2
   1d402:	ea5f 0031 	movs.w	r0, r1, rrx
   1d406:	f140 0000 	adc.w	r0, r0, #0
   1d40a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1d40e:	bf08      	it	eq
   1d410:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d414:	4770      	bx	lr
   1d416:	f092 0f00 	teq	r2, #0
   1d41a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d41e:	bf02      	ittt	eq
   1d420:	0040      	lsleq	r0, r0, #1
   1d422:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d426:	3a01      	subeq	r2, #1
   1d428:	d0f9      	beq.n	1d41e <__aeabi_fmul+0xce>
   1d42a:	ea40 000c 	orr.w	r0, r0, ip
   1d42e:	f093 0f00 	teq	r3, #0
   1d432:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d436:	bf02      	ittt	eq
   1d438:	0049      	lsleq	r1, r1, #1
   1d43a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d43e:	3b01      	subeq	r3, #1
   1d440:	d0f9      	beq.n	1d436 <__aeabi_fmul+0xe6>
   1d442:	ea41 010c 	orr.w	r1, r1, ip
   1d446:	e78f      	b.n	1d368 <__aeabi_fmul+0x18>
   1d448:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d44c:	ea92 0f0c 	teq	r2, ip
   1d450:	bf18      	it	ne
   1d452:	ea93 0f0c 	teqne	r3, ip
   1d456:	d00a      	beq.n	1d46e <__aeabi_fmul+0x11e>
   1d458:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d45c:	bf18      	it	ne
   1d45e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d462:	d1d8      	bne.n	1d416 <__aeabi_fmul+0xc6>
   1d464:	ea80 0001 	eor.w	r0, r0, r1
   1d468:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d46c:	4770      	bx	lr
   1d46e:	f090 0f00 	teq	r0, #0
   1d472:	bf17      	itett	ne
   1d474:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1d478:	4608      	moveq	r0, r1
   1d47a:	f091 0f00 	teqne	r1, #0
   1d47e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1d482:	d014      	beq.n	1d4ae <__aeabi_fmul+0x15e>
   1d484:	ea92 0f0c 	teq	r2, ip
   1d488:	d101      	bne.n	1d48e <__aeabi_fmul+0x13e>
   1d48a:	0242      	lsls	r2, r0, #9
   1d48c:	d10f      	bne.n	1d4ae <__aeabi_fmul+0x15e>
   1d48e:	ea93 0f0c 	teq	r3, ip
   1d492:	d103      	bne.n	1d49c <__aeabi_fmul+0x14c>
   1d494:	024b      	lsls	r3, r1, #9
   1d496:	bf18      	it	ne
   1d498:	4608      	movne	r0, r1
   1d49a:	d108      	bne.n	1d4ae <__aeabi_fmul+0x15e>
   1d49c:	ea80 0001 	eor.w	r0, r0, r1
   1d4a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d4a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d4a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d4ac:	4770      	bx	lr
   1d4ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d4b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1d4b6:	4770      	bx	lr

0001d4b8 <__aeabi_fdiv>:
__aeabi_fdiv():
   1d4b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d4bc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d4c0:	bf1e      	ittt	ne
   1d4c2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d4c6:	ea92 0f0c 	teqne	r2, ip
   1d4ca:	ea93 0f0c 	teqne	r3, ip
   1d4ce:	d069      	beq.n	1d5a4 <__aeabi_fdiv+0xec>
   1d4d0:	eba2 0203 	sub.w	r2, r2, r3
   1d4d4:	ea80 0c01 	eor.w	ip, r0, r1
   1d4d8:	0249      	lsls	r1, r1, #9
   1d4da:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1d4de:	d037      	beq.n	1d550 <__aeabi_fdiv+0x98>
   1d4e0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1d4e4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1d4e8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1d4ec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d4f0:	428b      	cmp	r3, r1
   1d4f2:	bf38      	it	cc
   1d4f4:	005b      	lslcc	r3, r3, #1
   1d4f6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1d4fa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1d4fe:	428b      	cmp	r3, r1
   1d500:	bf24      	itt	cs
   1d502:	1a5b      	subcs	r3, r3, r1
   1d504:	ea40 000c 	orrcs.w	r0, r0, ip
   1d508:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1d50c:	bf24      	itt	cs
   1d50e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1d512:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1d516:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1d51a:	bf24      	itt	cs
   1d51c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1d520:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1d524:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1d528:	bf24      	itt	cs
   1d52a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1d52e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1d532:	011b      	lsls	r3, r3, #4
   1d534:	bf18      	it	ne
   1d536:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1d53a:	d1e0      	bne.n	1d4fe <__aeabi_fdiv+0x46>
   1d53c:	2afd      	cmp	r2, #253	; 0xfd
   1d53e:	f63f af50 	bhi.w	1d3e2 <__aeabi_fmul+0x92>
   1d542:	428b      	cmp	r3, r1
   1d544:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d548:	bf08      	it	eq
   1d54a:	f020 0001 	biceq.w	r0, r0, #1
   1d54e:	4770      	bx	lr
   1d550:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d554:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d558:	327f      	adds	r2, #127	; 0x7f
   1d55a:	bfc2      	ittt	gt
   1d55c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d560:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d564:	4770      	bxgt	lr
   1d566:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d56a:	f04f 0300 	mov.w	r3, #0
   1d56e:	3a01      	subs	r2, #1
   1d570:	e737      	b.n	1d3e2 <__aeabi_fmul+0x92>
   1d572:	f092 0f00 	teq	r2, #0
   1d576:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d57a:	bf02      	ittt	eq
   1d57c:	0040      	lsleq	r0, r0, #1
   1d57e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d582:	3a01      	subeq	r2, #1
   1d584:	d0f9      	beq.n	1d57a <__aeabi_fdiv+0xc2>
   1d586:	ea40 000c 	orr.w	r0, r0, ip
   1d58a:	f093 0f00 	teq	r3, #0
   1d58e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d592:	bf02      	ittt	eq
   1d594:	0049      	lsleq	r1, r1, #1
   1d596:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d59a:	3b01      	subeq	r3, #1
   1d59c:	d0f9      	beq.n	1d592 <__aeabi_fdiv+0xda>
   1d59e:	ea41 010c 	orr.w	r1, r1, ip
   1d5a2:	e795      	b.n	1d4d0 <__aeabi_fdiv+0x18>
   1d5a4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d5a8:	ea92 0f0c 	teq	r2, ip
   1d5ac:	d108      	bne.n	1d5c0 <__aeabi_fdiv+0x108>
   1d5ae:	0242      	lsls	r2, r0, #9
   1d5b0:	f47f af7d 	bne.w	1d4ae <__aeabi_fmul+0x15e>
   1d5b4:	ea93 0f0c 	teq	r3, ip
   1d5b8:	f47f af70 	bne.w	1d49c <__aeabi_fmul+0x14c>
   1d5bc:	4608      	mov	r0, r1
   1d5be:	e776      	b.n	1d4ae <__aeabi_fmul+0x15e>
   1d5c0:	ea93 0f0c 	teq	r3, ip
   1d5c4:	d104      	bne.n	1d5d0 <__aeabi_fdiv+0x118>
   1d5c6:	024b      	lsls	r3, r1, #9
   1d5c8:	f43f af4c 	beq.w	1d464 <__aeabi_fmul+0x114>
   1d5cc:	4608      	mov	r0, r1
   1d5ce:	e76e      	b.n	1d4ae <__aeabi_fmul+0x15e>
   1d5d0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d5d4:	bf18      	it	ne
   1d5d6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d5da:	d1ca      	bne.n	1d572 <__aeabi_fdiv+0xba>
   1d5dc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1d5e0:	f47f af5c 	bne.w	1d49c <__aeabi_fmul+0x14c>
   1d5e4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1d5e8:	f47f af3c 	bne.w	1d464 <__aeabi_fmul+0x114>
   1d5ec:	e75f      	b.n	1d4ae <__aeabi_fmul+0x15e>
   1d5ee:	bf00      	nop

0001d5f0 <__aeabi_f2iz>:
__aeabi_f2iz():
   1d5f0:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1d5f4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d5f8:	d30f      	bcc.n	1d61a <__aeabi_f2iz+0x2a>
   1d5fa:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d5fe:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d602:	d90d      	bls.n	1d620 <__aeabi_f2iz+0x30>
   1d604:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d608:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d60c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1d610:	fa23 f002 	lsr.w	r0, r3, r2
   1d614:	bf18      	it	ne
   1d616:	4240      	negne	r0, r0
   1d618:	4770      	bx	lr
   1d61a:	f04f 0000 	mov.w	r0, #0
   1d61e:	4770      	bx	lr
   1d620:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d624:	d101      	bne.n	1d62a <__aeabi_f2iz+0x3a>
   1d626:	0242      	lsls	r2, r0, #9
   1d628:	d105      	bne.n	1d636 <__aeabi_f2iz+0x46>
   1d62a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1d62e:	bf08      	it	eq
   1d630:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1d634:	4770      	bx	lr
   1d636:	f04f 0000 	mov.w	r0, #0
   1d63a:	4770      	bx	lr

0001d63c <__aeabi_f2uiz>:
__fixunssfsi():
   1d63c:	0042      	lsls	r2, r0, #1
   1d63e:	d20e      	bcs.n	1d65e <__aeabi_f2uiz+0x22>
   1d640:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d644:	d30b      	bcc.n	1d65e <__aeabi_f2uiz+0x22>
   1d646:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d64a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d64e:	d409      	bmi.n	1d664 <__aeabi_f2uiz+0x28>
   1d650:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d654:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d658:	fa23 f002 	lsr.w	r0, r3, r2
   1d65c:	4770      	bx	lr
   1d65e:	f04f 0000 	mov.w	r0, #0
   1d662:	4770      	bx	lr
   1d664:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d668:	d101      	bne.n	1d66e <__aeabi_f2uiz+0x32>
   1d66a:	0242      	lsls	r2, r0, #9
   1d66c:	d102      	bne.n	1d674 <__aeabi_f2uiz+0x38>
   1d66e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d672:	4770      	bx	lr
   1d674:	f04f 0000 	mov.w	r0, #0
   1d678:	4770      	bx	lr
   1d67a:	bf00      	nop

0001d67c <__aeabi_uldivmod>:
__aeabi_uldivmod():
   1d67c:	b953      	cbnz	r3, 1d694 <__aeabi_uldivmod+0x18>
   1d67e:	b94a      	cbnz	r2, 1d694 <__aeabi_uldivmod+0x18>
   1d680:	2900      	cmp	r1, #0
   1d682:	bf08      	it	eq
   1d684:	2800      	cmpeq	r0, #0
   1d686:	bf1c      	itt	ne
   1d688:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1d68c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1d690:	f000 b97a 	b.w	1d988 <__aeabi_idiv0>
   1d694:	f1ad 0c08 	sub.w	ip, sp, #8
   1d698:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1d69c:	f000 f806 	bl	1d6ac <__udivmoddi4>
   1d6a0:	f8dd e004 	ldr.w	lr, [sp, #4]
   1d6a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d6a8:	b004      	add	sp, #16
   1d6aa:	4770      	bx	lr

0001d6ac <__udivmoddi4>:
__udivmoddi4():
   1d6ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d6b0:	468c      	mov	ip, r1
   1d6b2:	460e      	mov	r6, r1
   1d6b4:	4604      	mov	r4, r0
   1d6b6:	9d08      	ldr	r5, [sp, #32]
   1d6b8:	2b00      	cmp	r3, #0
   1d6ba:	d150      	bne.n	1d75e <__udivmoddi4+0xb2>
   1d6bc:	428a      	cmp	r2, r1
   1d6be:	4617      	mov	r7, r2
   1d6c0:	d96c      	bls.n	1d79c <__udivmoddi4+0xf0>
   1d6c2:	fab2 fe82 	clz	lr, r2
   1d6c6:	f1be 0f00 	cmp.w	lr, #0
   1d6ca:	d00b      	beq.n	1d6e4 <__udivmoddi4+0x38>
   1d6cc:	f1ce 0c20 	rsb	ip, lr, #32
   1d6d0:	fa01 f60e 	lsl.w	r6, r1, lr
   1d6d4:	fa20 fc0c 	lsr.w	ip, r0, ip
   1d6d8:	fa02 f70e 	lsl.w	r7, r2, lr
   1d6dc:	ea4c 0c06 	orr.w	ip, ip, r6
   1d6e0:	fa00 f40e 	lsl.w	r4, r0, lr
   1d6e4:	0c3a      	lsrs	r2, r7, #16
   1d6e6:	fbbc f9f2 	udiv	r9, ip, r2
   1d6ea:	b2bb      	uxth	r3, r7
   1d6ec:	fb02 cc19 	mls	ip, r2, r9, ip
   1d6f0:	fb09 fa03 	mul.w	sl, r9, r3
   1d6f4:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1d6f8:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   1d6fc:	45b2      	cmp	sl, r6
   1d6fe:	d90a      	bls.n	1d716 <__udivmoddi4+0x6a>
   1d700:	19f6      	adds	r6, r6, r7
   1d702:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   1d706:	f080 8125 	bcs.w	1d954 <__udivmoddi4+0x2a8>
   1d70a:	45b2      	cmp	sl, r6
   1d70c:	f240 8122 	bls.w	1d954 <__udivmoddi4+0x2a8>
   1d710:	f1a9 0902 	sub.w	r9, r9, #2
   1d714:	443e      	add	r6, r7
   1d716:	eba6 060a 	sub.w	r6, r6, sl
   1d71a:	fbb6 f0f2 	udiv	r0, r6, r2
   1d71e:	fb02 6610 	mls	r6, r2, r0, r6
   1d722:	fb00 f303 	mul.w	r3, r0, r3
   1d726:	b2a4      	uxth	r4, r4
   1d728:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   1d72c:	42a3      	cmp	r3, r4
   1d72e:	d909      	bls.n	1d744 <__udivmoddi4+0x98>
   1d730:	19e4      	adds	r4, r4, r7
   1d732:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1d736:	f080 810b 	bcs.w	1d950 <__udivmoddi4+0x2a4>
   1d73a:	42a3      	cmp	r3, r4
   1d73c:	f240 8108 	bls.w	1d950 <__udivmoddi4+0x2a4>
   1d740:	3802      	subs	r0, #2
   1d742:	443c      	add	r4, r7
   1d744:	2100      	movs	r1, #0
   1d746:	1ae4      	subs	r4, r4, r3
   1d748:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1d74c:	2d00      	cmp	r5, #0
   1d74e:	d062      	beq.n	1d816 <__udivmoddi4+0x16a>
   1d750:	2300      	movs	r3, #0
   1d752:	fa24 f40e 	lsr.w	r4, r4, lr
   1d756:	602c      	str	r4, [r5, #0]
   1d758:	606b      	str	r3, [r5, #4]
   1d75a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d75e:	428b      	cmp	r3, r1
   1d760:	d907      	bls.n	1d772 <__udivmoddi4+0xc6>
   1d762:	2d00      	cmp	r5, #0
   1d764:	d055      	beq.n	1d812 <__udivmoddi4+0x166>
   1d766:	2100      	movs	r1, #0
   1d768:	e885 0041 	stmia.w	r5, {r0, r6}
   1d76c:	4608      	mov	r0, r1
   1d76e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d772:	fab3 f183 	clz	r1, r3
   1d776:	2900      	cmp	r1, #0
   1d778:	f040 808f 	bne.w	1d89a <__udivmoddi4+0x1ee>
   1d77c:	42b3      	cmp	r3, r6
   1d77e:	d302      	bcc.n	1d786 <__udivmoddi4+0xda>
   1d780:	4282      	cmp	r2, r0
   1d782:	f200 80fc 	bhi.w	1d97e <__udivmoddi4+0x2d2>
   1d786:	1a84      	subs	r4, r0, r2
   1d788:	eb66 0603 	sbc.w	r6, r6, r3
   1d78c:	2001      	movs	r0, #1
   1d78e:	46b4      	mov	ip, r6
   1d790:	2d00      	cmp	r5, #0
   1d792:	d040      	beq.n	1d816 <__udivmoddi4+0x16a>
   1d794:	e885 1010 	stmia.w	r5, {r4, ip}
   1d798:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d79c:	b912      	cbnz	r2, 1d7a4 <__udivmoddi4+0xf8>
   1d79e:	2701      	movs	r7, #1
   1d7a0:	fbb7 f7f2 	udiv	r7, r7, r2
   1d7a4:	fab7 fe87 	clz	lr, r7
   1d7a8:	f1be 0f00 	cmp.w	lr, #0
   1d7ac:	d135      	bne.n	1d81a <__udivmoddi4+0x16e>
   1d7ae:	2101      	movs	r1, #1
   1d7b0:	1bf6      	subs	r6, r6, r7
   1d7b2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1d7b6:	fa1f f887 	uxth.w	r8, r7
   1d7ba:	fbb6 f2fc 	udiv	r2, r6, ip
   1d7be:	fb0c 6612 	mls	r6, ip, r2, r6
   1d7c2:	fb08 f002 	mul.w	r0, r8, r2
   1d7c6:	0c23      	lsrs	r3, r4, #16
   1d7c8:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   1d7cc:	42b0      	cmp	r0, r6
   1d7ce:	d907      	bls.n	1d7e0 <__udivmoddi4+0x134>
   1d7d0:	19f6      	adds	r6, r6, r7
   1d7d2:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1d7d6:	d202      	bcs.n	1d7de <__udivmoddi4+0x132>
   1d7d8:	42b0      	cmp	r0, r6
   1d7da:	f200 80d2 	bhi.w	1d982 <__udivmoddi4+0x2d6>
   1d7de:	461a      	mov	r2, r3
   1d7e0:	1a36      	subs	r6, r6, r0
   1d7e2:	fbb6 f0fc 	udiv	r0, r6, ip
   1d7e6:	fb0c 6610 	mls	r6, ip, r0, r6
   1d7ea:	fb08 f800 	mul.w	r8, r8, r0
   1d7ee:	b2a3      	uxth	r3, r4
   1d7f0:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   1d7f4:	45a0      	cmp	r8, r4
   1d7f6:	d907      	bls.n	1d808 <__udivmoddi4+0x15c>
   1d7f8:	19e4      	adds	r4, r4, r7
   1d7fa:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1d7fe:	d202      	bcs.n	1d806 <__udivmoddi4+0x15a>
   1d800:	45a0      	cmp	r8, r4
   1d802:	f200 80b9 	bhi.w	1d978 <__udivmoddi4+0x2cc>
   1d806:	4618      	mov	r0, r3
   1d808:	eba4 0408 	sub.w	r4, r4, r8
   1d80c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   1d810:	e79c      	b.n	1d74c <__udivmoddi4+0xa0>
   1d812:	4629      	mov	r1, r5
   1d814:	4628      	mov	r0, r5
   1d816:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d81a:	fa07 f70e 	lsl.w	r7, r7, lr
   1d81e:	f1ce 0320 	rsb	r3, lr, #32
   1d822:	fa26 f203 	lsr.w	r2, r6, r3
   1d826:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1d82a:	fbb2 f1fc 	udiv	r1, r2, ip
   1d82e:	fa1f f887 	uxth.w	r8, r7
   1d832:	fb0c 2211 	mls	r2, ip, r1, r2
   1d836:	fa06 f60e 	lsl.w	r6, r6, lr
   1d83a:	fa20 f303 	lsr.w	r3, r0, r3
   1d83e:	fb01 f908 	mul.w	r9, r1, r8
   1d842:	4333      	orrs	r3, r6
   1d844:	0c1e      	lsrs	r6, r3, #16
   1d846:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1d84a:	45b1      	cmp	r9, r6
   1d84c:	fa00 f40e 	lsl.w	r4, r0, lr
   1d850:	d909      	bls.n	1d866 <__udivmoddi4+0x1ba>
   1d852:	19f6      	adds	r6, r6, r7
   1d854:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   1d858:	f080 808c 	bcs.w	1d974 <__udivmoddi4+0x2c8>
   1d85c:	45b1      	cmp	r9, r6
   1d85e:	f240 8089 	bls.w	1d974 <__udivmoddi4+0x2c8>
   1d862:	3902      	subs	r1, #2
   1d864:	443e      	add	r6, r7
   1d866:	eba6 0609 	sub.w	r6, r6, r9
   1d86a:	fbb6 f0fc 	udiv	r0, r6, ip
   1d86e:	fb0c 6210 	mls	r2, ip, r0, r6
   1d872:	fb00 f908 	mul.w	r9, r0, r8
   1d876:	b29e      	uxth	r6, r3
   1d878:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1d87c:	45b1      	cmp	r9, r6
   1d87e:	d907      	bls.n	1d890 <__udivmoddi4+0x1e4>
   1d880:	19f6      	adds	r6, r6, r7
   1d882:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1d886:	d271      	bcs.n	1d96c <__udivmoddi4+0x2c0>
   1d888:	45b1      	cmp	r9, r6
   1d88a:	d96f      	bls.n	1d96c <__udivmoddi4+0x2c0>
   1d88c:	3802      	subs	r0, #2
   1d88e:	443e      	add	r6, r7
   1d890:	eba6 0609 	sub.w	r6, r6, r9
   1d894:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   1d898:	e78f      	b.n	1d7ba <__udivmoddi4+0x10e>
   1d89a:	f1c1 0720 	rsb	r7, r1, #32
   1d89e:	fa22 f807 	lsr.w	r8, r2, r7
   1d8a2:	408b      	lsls	r3, r1
   1d8a4:	ea48 0303 	orr.w	r3, r8, r3
   1d8a8:	fa26 f407 	lsr.w	r4, r6, r7
   1d8ac:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   1d8b0:	fbb4 f9fe 	udiv	r9, r4, lr
   1d8b4:	fa1f fc83 	uxth.w	ip, r3
   1d8b8:	fb0e 4419 	mls	r4, lr, r9, r4
   1d8bc:	408e      	lsls	r6, r1
   1d8be:	fa20 f807 	lsr.w	r8, r0, r7
   1d8c2:	fb09 fa0c 	mul.w	sl, r9, ip
   1d8c6:	ea48 0806 	orr.w	r8, r8, r6
   1d8ca:	ea4f 4618 	mov.w	r6, r8, lsr #16
   1d8ce:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   1d8d2:	45a2      	cmp	sl, r4
   1d8d4:	fa02 f201 	lsl.w	r2, r2, r1
   1d8d8:	fa00 f601 	lsl.w	r6, r0, r1
   1d8dc:	d908      	bls.n	1d8f0 <__udivmoddi4+0x244>
   1d8de:	18e4      	adds	r4, r4, r3
   1d8e0:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   1d8e4:	d244      	bcs.n	1d970 <__udivmoddi4+0x2c4>
   1d8e6:	45a2      	cmp	sl, r4
   1d8e8:	d942      	bls.n	1d970 <__udivmoddi4+0x2c4>
   1d8ea:	f1a9 0902 	sub.w	r9, r9, #2
   1d8ee:	441c      	add	r4, r3
   1d8f0:	eba4 040a 	sub.w	r4, r4, sl
   1d8f4:	fbb4 f0fe 	udiv	r0, r4, lr
   1d8f8:	fb0e 4410 	mls	r4, lr, r0, r4
   1d8fc:	fb00 fc0c 	mul.w	ip, r0, ip
   1d900:	fa1f f888 	uxth.w	r8, r8
   1d904:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   1d908:	45a4      	cmp	ip, r4
   1d90a:	d907      	bls.n	1d91c <__udivmoddi4+0x270>
   1d90c:	18e4      	adds	r4, r4, r3
   1d90e:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1d912:	d229      	bcs.n	1d968 <__udivmoddi4+0x2bc>
   1d914:	45a4      	cmp	ip, r4
   1d916:	d927      	bls.n	1d968 <__udivmoddi4+0x2bc>
   1d918:	3802      	subs	r0, #2
   1d91a:	441c      	add	r4, r3
   1d91c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1d920:	fba0 8902 	umull	r8, r9, r0, r2
   1d924:	eba4 0c0c 	sub.w	ip, r4, ip
   1d928:	45cc      	cmp	ip, r9
   1d92a:	46c2      	mov	sl, r8
   1d92c:	46ce      	mov	lr, r9
   1d92e:	d315      	bcc.n	1d95c <__udivmoddi4+0x2b0>
   1d930:	d012      	beq.n	1d958 <__udivmoddi4+0x2ac>
   1d932:	b155      	cbz	r5, 1d94a <__udivmoddi4+0x29e>
   1d934:	ebb6 030a 	subs.w	r3, r6, sl
   1d938:	eb6c 060e 	sbc.w	r6, ip, lr
   1d93c:	fa06 f707 	lsl.w	r7, r6, r7
   1d940:	40cb      	lsrs	r3, r1
   1d942:	431f      	orrs	r7, r3
   1d944:	40ce      	lsrs	r6, r1
   1d946:	602f      	str	r7, [r5, #0]
   1d948:	606e      	str	r6, [r5, #4]
   1d94a:	2100      	movs	r1, #0
   1d94c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d950:	4610      	mov	r0, r2
   1d952:	e6f7      	b.n	1d744 <__udivmoddi4+0x98>
   1d954:	4689      	mov	r9, r1
   1d956:	e6de      	b.n	1d716 <__udivmoddi4+0x6a>
   1d958:	4546      	cmp	r6, r8
   1d95a:	d2ea      	bcs.n	1d932 <__udivmoddi4+0x286>
   1d95c:	ebb8 0a02 	subs.w	sl, r8, r2
   1d960:	eb69 0e03 	sbc.w	lr, r9, r3
   1d964:	3801      	subs	r0, #1
   1d966:	e7e4      	b.n	1d932 <__udivmoddi4+0x286>
   1d968:	4670      	mov	r0, lr
   1d96a:	e7d7      	b.n	1d91c <__udivmoddi4+0x270>
   1d96c:	4618      	mov	r0, r3
   1d96e:	e78f      	b.n	1d890 <__udivmoddi4+0x1e4>
   1d970:	4681      	mov	r9, r0
   1d972:	e7bd      	b.n	1d8f0 <__udivmoddi4+0x244>
   1d974:	4611      	mov	r1, r2
   1d976:	e776      	b.n	1d866 <__udivmoddi4+0x1ba>
   1d978:	3802      	subs	r0, #2
   1d97a:	443c      	add	r4, r7
   1d97c:	e744      	b.n	1d808 <__udivmoddi4+0x15c>
   1d97e:	4608      	mov	r0, r1
   1d980:	e706      	b.n	1d790 <__udivmoddi4+0xe4>
   1d982:	3a02      	subs	r2, #2
   1d984:	443e      	add	r6, r7
   1d986:	e72b      	b.n	1d7e0 <__udivmoddi4+0x134>

0001d988 <__aeabi_idiv0>:
__aeabi_idiv0():
   1d988:	4770      	bx	lr
   1d98a:	bf00      	nop

0001d98c <abort>:
abort():
   1d98c:	b508      	push	{r3, lr}
   1d98e:	2006      	movs	r0, #6
   1d990:	f002 fa44 	bl	1fe1c <raise>
   1d994:	2001      	movs	r0, #1
   1d996:	f7f9 fb87 	bl	170a8 <_exit>

0001d99a <atoi>:
atoi():
   1d99a:	220a      	movs	r2, #10
   1d99c:	2100      	movs	r1, #0
   1d99e:	f003 bad9 	b.w	20f54 <strtol>
   1d9a2:	Address 0x000000000001d9a2 is out of bounds.


0001d9a4 <calloc>:
calloc():
   1d9a4:	4b02      	ldr	r3, [pc, #8]	; (1d9b0 <calloc+0xc>)
   1d9a6:	460a      	mov	r2, r1
   1d9a8:	4601      	mov	r1, r0
   1d9aa:	6818      	ldr	r0, [r3, #0]
   1d9ac:	f001 b84e 	b.w	1ea4c <_calloc_r>
   1d9b0:	2007c0e0 	.word	0x2007c0e0

0001d9b4 <ctime>:
ctime():
   1d9b4:	b508      	push	{r3, lr}
   1d9b6:	f000 fc0b 	bl	1e1d0 <localtime>
   1d9ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1d9be:	f003 be87 	b.w	216d0 <asctime>
   1d9c2:	Address 0x000000000001d9c2 is out of bounds.


0001d9c4 <__errno>:
__errno():
   1d9c4:	4b01      	ldr	r3, [pc, #4]	; (1d9cc <__errno+0x8>)
   1d9c6:	6818      	ldr	r0, [r3, #0]
   1d9c8:	4770      	bx	lr
   1d9ca:	bf00      	nop
   1d9cc:	2007c0e0 	.word	0x2007c0e0

0001d9d0 <_fclose_r>:
_fclose_r():
   1d9d0:	b570      	push	{r4, r5, r6, lr}
   1d9d2:	4605      	mov	r5, r0
   1d9d4:	460c      	mov	r4, r1
   1d9d6:	b911      	cbnz	r1, 1d9de <_fclose_r+0xe>
   1d9d8:	2600      	movs	r6, #0
   1d9da:	4630      	mov	r0, r6
   1d9dc:	bd70      	pop	{r4, r5, r6, pc}
   1d9de:	b118      	cbz	r0, 1d9e8 <_fclose_r+0x18>
   1d9e0:	6983      	ldr	r3, [r0, #24]
   1d9e2:	b90b      	cbnz	r3, 1d9e8 <_fclose_r+0x18>
   1d9e4:	f000 f9f2 	bl	1ddcc <__sinit>
   1d9e8:	4b1f      	ldr	r3, [pc, #124]	; (1da68 <_fclose_r+0x98>)
   1d9ea:	429c      	cmp	r4, r3
   1d9ec:	d132      	bne.n	1da54 <_fclose_r+0x84>
   1d9ee:	686c      	ldr	r4, [r5, #4]
   1d9f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1d9f4:	2b00      	cmp	r3, #0
   1d9f6:	d0ef      	beq.n	1d9d8 <_fclose_r+0x8>
   1d9f8:	4621      	mov	r1, r4
   1d9fa:	4628      	mov	r0, r5
   1d9fc:	f000 f842 	bl	1da84 <__sflush_r>
   1da00:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1da02:	4606      	mov	r6, r0
   1da04:	b133      	cbz	r3, 1da14 <_fclose_r+0x44>
   1da06:	6a21      	ldr	r1, [r4, #32]
   1da08:	4628      	mov	r0, r5
   1da0a:	4798      	blx	r3
   1da0c:	2800      	cmp	r0, #0
   1da0e:	bfb8      	it	lt
   1da10:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
   1da14:	89a3      	ldrh	r3, [r4, #12]
   1da16:	061b      	lsls	r3, r3, #24
   1da18:	d503      	bpl.n	1da22 <_fclose_r+0x52>
   1da1a:	6921      	ldr	r1, [r4, #16]
   1da1c:	4628      	mov	r0, r5
   1da1e:	f001 f823 	bl	1ea68 <_free_r>
   1da22:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1da24:	b141      	cbz	r1, 1da38 <_fclose_r+0x68>
   1da26:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1da2a:	4299      	cmp	r1, r3
   1da2c:	d002      	beq.n	1da34 <_fclose_r+0x64>
   1da2e:	4628      	mov	r0, r5
   1da30:	f001 f81a 	bl	1ea68 <_free_r>
   1da34:	2300      	movs	r3, #0
   1da36:	6363      	str	r3, [r4, #52]	; 0x34
   1da38:	6ca1      	ldr	r1, [r4, #72]	; 0x48
   1da3a:	b121      	cbz	r1, 1da46 <_fclose_r+0x76>
   1da3c:	4628      	mov	r0, r5
   1da3e:	f001 f813 	bl	1ea68 <_free_r>
   1da42:	2300      	movs	r3, #0
   1da44:	64a3      	str	r3, [r4, #72]	; 0x48
   1da46:	f000 fa2d 	bl	1dea4 <__sfp_lock_acquire>
   1da4a:	2300      	movs	r3, #0
   1da4c:	81a3      	strh	r3, [r4, #12]
   1da4e:	f000 fa2a 	bl	1dea6 <__sfp_lock_release>
   1da52:	e7c2      	b.n	1d9da <_fclose_r+0xa>
   1da54:	4b05      	ldr	r3, [pc, #20]	; (1da6c <_fclose_r+0x9c>)
   1da56:	429c      	cmp	r4, r3
   1da58:	d101      	bne.n	1da5e <_fclose_r+0x8e>
   1da5a:	68ac      	ldr	r4, [r5, #8]
   1da5c:	e7c8      	b.n	1d9f0 <_fclose_r+0x20>
   1da5e:	4b04      	ldr	r3, [pc, #16]	; (1da70 <_fclose_r+0xa0>)
   1da60:	429c      	cmp	r4, r3
   1da62:	bf08      	it	eq
   1da64:	68ec      	ldreq	r4, [r5, #12]
   1da66:	e7c3      	b.n	1d9f0 <_fclose_r+0x20>
   1da68:	000279b8 	.word	0x000279b8
   1da6c:	000279d8 	.word	0x000279d8
   1da70:	00027998 	.word	0x00027998

0001da74 <fclose>:
fclose():
   1da74:	4b02      	ldr	r3, [pc, #8]	; (1da80 <fclose+0xc>)
   1da76:	4601      	mov	r1, r0
   1da78:	6818      	ldr	r0, [r3, #0]
   1da7a:	f7ff bfa9 	b.w	1d9d0 <_fclose_r>
   1da7e:	bf00      	nop
   1da80:	2007c0e0 	.word	0x2007c0e0

0001da84 <__sflush_r>:
__sflush_r():
   1da84:	898a      	ldrh	r2, [r1, #12]
   1da86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1da8a:	4605      	mov	r5, r0
   1da8c:	0710      	lsls	r0, r2, #28
   1da8e:	460c      	mov	r4, r1
   1da90:	d45a      	bmi.n	1db48 <__sflush_r+0xc4>
   1da92:	684b      	ldr	r3, [r1, #4]
   1da94:	2b00      	cmp	r3, #0
   1da96:	dc05      	bgt.n	1daa4 <__sflush_r+0x20>
   1da98:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1da9a:	2b00      	cmp	r3, #0
   1da9c:	dc02      	bgt.n	1daa4 <__sflush_r+0x20>
   1da9e:	2000      	movs	r0, #0
   1daa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1daa4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1daa6:	2e00      	cmp	r6, #0
   1daa8:	d0f9      	beq.n	1da9e <__sflush_r+0x1a>
   1daaa:	2300      	movs	r3, #0
   1daac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1dab0:	682f      	ldr	r7, [r5, #0]
   1dab2:	602b      	str	r3, [r5, #0]
   1dab4:	d033      	beq.n	1db1e <__sflush_r+0x9a>
   1dab6:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1dab8:	89a3      	ldrh	r3, [r4, #12]
   1daba:	075a      	lsls	r2, r3, #29
   1dabc:	d505      	bpl.n	1daca <__sflush_r+0x46>
   1dabe:	6863      	ldr	r3, [r4, #4]
   1dac0:	1ac0      	subs	r0, r0, r3
   1dac2:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1dac4:	b10b      	cbz	r3, 1daca <__sflush_r+0x46>
   1dac6:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1dac8:	1ac0      	subs	r0, r0, r3
   1daca:	2300      	movs	r3, #0
   1dacc:	4602      	mov	r2, r0
   1dace:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1dad0:	6a21      	ldr	r1, [r4, #32]
   1dad2:	4628      	mov	r0, r5
   1dad4:	47b0      	blx	r6
   1dad6:	1c43      	adds	r3, r0, #1
   1dad8:	89a3      	ldrh	r3, [r4, #12]
   1dada:	d106      	bne.n	1daea <__sflush_r+0x66>
   1dadc:	6829      	ldr	r1, [r5, #0]
   1dade:	291d      	cmp	r1, #29
   1dae0:	d84b      	bhi.n	1db7a <__sflush_r+0xf6>
   1dae2:	4a2b      	ldr	r2, [pc, #172]	; (1db90 <__sflush_r+0x10c>)
   1dae4:	40ca      	lsrs	r2, r1
   1dae6:	07d6      	lsls	r6, r2, #31
   1dae8:	d547      	bpl.n	1db7a <__sflush_r+0xf6>
   1daea:	2200      	movs	r2, #0
   1daec:	6062      	str	r2, [r4, #4]
   1daee:	6922      	ldr	r2, [r4, #16]
   1daf0:	04d9      	lsls	r1, r3, #19
   1daf2:	6022      	str	r2, [r4, #0]
   1daf4:	d504      	bpl.n	1db00 <__sflush_r+0x7c>
   1daf6:	1c42      	adds	r2, r0, #1
   1daf8:	d101      	bne.n	1dafe <__sflush_r+0x7a>
   1dafa:	682b      	ldr	r3, [r5, #0]
   1dafc:	b903      	cbnz	r3, 1db00 <__sflush_r+0x7c>
   1dafe:	6560      	str	r0, [r4, #84]	; 0x54
   1db00:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1db02:	602f      	str	r7, [r5, #0]
   1db04:	2900      	cmp	r1, #0
   1db06:	d0ca      	beq.n	1da9e <__sflush_r+0x1a>
   1db08:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1db0c:	4299      	cmp	r1, r3
   1db0e:	d002      	beq.n	1db16 <__sflush_r+0x92>
   1db10:	4628      	mov	r0, r5
   1db12:	f000 ffa9 	bl	1ea68 <_free_r>
   1db16:	2000      	movs	r0, #0
   1db18:	6360      	str	r0, [r4, #52]	; 0x34
   1db1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1db1e:	6a21      	ldr	r1, [r4, #32]
   1db20:	2301      	movs	r3, #1
   1db22:	4628      	mov	r0, r5
   1db24:	47b0      	blx	r6
   1db26:	1c41      	adds	r1, r0, #1
   1db28:	d1c6      	bne.n	1dab8 <__sflush_r+0x34>
   1db2a:	682b      	ldr	r3, [r5, #0]
   1db2c:	2b00      	cmp	r3, #0
   1db2e:	d0c3      	beq.n	1dab8 <__sflush_r+0x34>
   1db30:	2b1d      	cmp	r3, #29
   1db32:	d001      	beq.n	1db38 <__sflush_r+0xb4>
   1db34:	2b16      	cmp	r3, #22
   1db36:	d101      	bne.n	1db3c <__sflush_r+0xb8>
   1db38:	602f      	str	r7, [r5, #0]
   1db3a:	e7b0      	b.n	1da9e <__sflush_r+0x1a>
   1db3c:	89a3      	ldrh	r3, [r4, #12]
   1db3e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1db42:	81a3      	strh	r3, [r4, #12]
   1db44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1db48:	690f      	ldr	r7, [r1, #16]
   1db4a:	2f00      	cmp	r7, #0
   1db4c:	d0a7      	beq.n	1da9e <__sflush_r+0x1a>
   1db4e:	0793      	lsls	r3, r2, #30
   1db50:	bf18      	it	ne
   1db52:	2300      	movne	r3, #0
   1db54:	680e      	ldr	r6, [r1, #0]
   1db56:	bf08      	it	eq
   1db58:	694b      	ldreq	r3, [r1, #20]
   1db5a:	eba6 0807 	sub.w	r8, r6, r7
   1db5e:	600f      	str	r7, [r1, #0]
   1db60:	608b      	str	r3, [r1, #8]
   1db62:	f1b8 0f00 	cmp.w	r8, #0
   1db66:	dd9a      	ble.n	1da9e <__sflush_r+0x1a>
   1db68:	4643      	mov	r3, r8
   1db6a:	463a      	mov	r2, r7
   1db6c:	6a21      	ldr	r1, [r4, #32]
   1db6e:	4628      	mov	r0, r5
   1db70:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1db72:	47b0      	blx	r6
   1db74:	2800      	cmp	r0, #0
   1db76:	dc07      	bgt.n	1db88 <__sflush_r+0x104>
   1db78:	89a3      	ldrh	r3, [r4, #12]
   1db7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1db7e:	81a3      	strh	r3, [r4, #12]
   1db80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1db84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1db88:	4407      	add	r7, r0
   1db8a:	eba8 0800 	sub.w	r8, r8, r0
   1db8e:	e7e8      	b.n	1db62 <__sflush_r+0xde>
   1db90:	20400001 	.word	0x20400001

0001db94 <_fflush_r>:
_fflush_r():
   1db94:	b538      	push	{r3, r4, r5, lr}
   1db96:	690b      	ldr	r3, [r1, #16]
   1db98:	4605      	mov	r5, r0
   1db9a:	460c      	mov	r4, r1
   1db9c:	b1db      	cbz	r3, 1dbd6 <_fflush_r+0x42>
   1db9e:	b118      	cbz	r0, 1dba8 <_fflush_r+0x14>
   1dba0:	6983      	ldr	r3, [r0, #24]
   1dba2:	b90b      	cbnz	r3, 1dba8 <_fflush_r+0x14>
   1dba4:	f000 f912 	bl	1ddcc <__sinit>
   1dba8:	4b0c      	ldr	r3, [pc, #48]	; (1dbdc <_fflush_r+0x48>)
   1dbaa:	429c      	cmp	r4, r3
   1dbac:	d109      	bne.n	1dbc2 <_fflush_r+0x2e>
   1dbae:	686c      	ldr	r4, [r5, #4]
   1dbb0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1dbb4:	b17b      	cbz	r3, 1dbd6 <_fflush_r+0x42>
   1dbb6:	4621      	mov	r1, r4
   1dbb8:	4628      	mov	r0, r5
   1dbba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1dbbe:	f7ff bf61 	b.w	1da84 <__sflush_r>
   1dbc2:	4b07      	ldr	r3, [pc, #28]	; (1dbe0 <_fflush_r+0x4c>)
   1dbc4:	429c      	cmp	r4, r3
   1dbc6:	d101      	bne.n	1dbcc <_fflush_r+0x38>
   1dbc8:	68ac      	ldr	r4, [r5, #8]
   1dbca:	e7f1      	b.n	1dbb0 <_fflush_r+0x1c>
   1dbcc:	4b05      	ldr	r3, [pc, #20]	; (1dbe4 <_fflush_r+0x50>)
   1dbce:	429c      	cmp	r4, r3
   1dbd0:	bf08      	it	eq
   1dbd2:	68ec      	ldreq	r4, [r5, #12]
   1dbd4:	e7ec      	b.n	1dbb0 <_fflush_r+0x1c>
   1dbd6:	2000      	movs	r0, #0
   1dbd8:	bd38      	pop	{r3, r4, r5, pc}
   1dbda:	bf00      	nop
   1dbdc:	000279b8 	.word	0x000279b8
   1dbe0:	000279d8 	.word	0x000279d8
   1dbe4:	00027998 	.word	0x00027998

0001dbe8 <fflush>:
fflush():
   1dbe8:	4601      	mov	r1, r0
   1dbea:	b920      	cbnz	r0, 1dbf6 <fflush+0xe>
   1dbec:	4b04      	ldr	r3, [pc, #16]	; (1dc00 <fflush+0x18>)
   1dbee:	4905      	ldr	r1, [pc, #20]	; (1dc04 <fflush+0x1c>)
   1dbf0:	6818      	ldr	r0, [r3, #0]
   1dbf2:	f000 ba4f 	b.w	1e094 <_fwalk_reent>
   1dbf6:	4b04      	ldr	r3, [pc, #16]	; (1dc08 <fflush+0x20>)
   1dbf8:	6818      	ldr	r0, [r3, #0]
   1dbfa:	f7ff bfcb 	b.w	1db94 <_fflush_r>
   1dbfe:	bf00      	nop
   1dc00:	000279f8 	.word	0x000279f8
   1dc04:	0001db95 	.word	0x0001db95
   1dc08:	2007c0e0 	.word	0x2007c0e0

0001dc0c <_fgetc_r>:
_fgetc_r():
   1dc0c:	b538      	push	{r3, r4, r5, lr}
   1dc0e:	460c      	mov	r4, r1
   1dc10:	4605      	mov	r5, r0
   1dc12:	b118      	cbz	r0, 1dc1c <_fgetc_r+0x10>
   1dc14:	6983      	ldr	r3, [r0, #24]
   1dc16:	b90b      	cbnz	r3, 1dc1c <_fgetc_r+0x10>
   1dc18:	f000 f8d8 	bl	1ddcc <__sinit>
   1dc1c:	4b0e      	ldr	r3, [pc, #56]	; (1dc58 <_fgetc_r+0x4c>)
   1dc1e:	429c      	cmp	r4, r3
   1dc20:	d10b      	bne.n	1dc3a <_fgetc_r+0x2e>
   1dc22:	686c      	ldr	r4, [r5, #4]
   1dc24:	6863      	ldr	r3, [r4, #4]
   1dc26:	3b01      	subs	r3, #1
   1dc28:	2b00      	cmp	r3, #0
   1dc2a:	6063      	str	r3, [r4, #4]
   1dc2c:	da0f      	bge.n	1dc4e <_fgetc_r+0x42>
   1dc2e:	4621      	mov	r1, r4
   1dc30:	4628      	mov	r0, r5
   1dc32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1dc36:	f001 bfc3 	b.w	1fbc0 <__srget_r>
   1dc3a:	4b08      	ldr	r3, [pc, #32]	; (1dc5c <_fgetc_r+0x50>)
   1dc3c:	429c      	cmp	r4, r3
   1dc3e:	d101      	bne.n	1dc44 <_fgetc_r+0x38>
   1dc40:	68ac      	ldr	r4, [r5, #8]
   1dc42:	e7ef      	b.n	1dc24 <_fgetc_r+0x18>
   1dc44:	4b06      	ldr	r3, [pc, #24]	; (1dc60 <_fgetc_r+0x54>)
   1dc46:	429c      	cmp	r4, r3
   1dc48:	bf08      	it	eq
   1dc4a:	68ec      	ldreq	r4, [r5, #12]
   1dc4c:	e7ea      	b.n	1dc24 <_fgetc_r+0x18>
   1dc4e:	6823      	ldr	r3, [r4, #0]
   1dc50:	1c5a      	adds	r2, r3, #1
   1dc52:	6022      	str	r2, [r4, #0]
   1dc54:	7818      	ldrb	r0, [r3, #0]
   1dc56:	bd38      	pop	{r3, r4, r5, pc}
   1dc58:	000279b8 	.word	0x000279b8
   1dc5c:	000279d8 	.word	0x000279d8
   1dc60:	00027998 	.word	0x00027998

0001dc64 <fgetc>:
fgetc():
   1dc64:	4b02      	ldr	r3, [pc, #8]	; (1dc70 <fgetc+0xc>)
   1dc66:	4601      	mov	r1, r0
   1dc68:	6818      	ldr	r0, [r3, #0]
   1dc6a:	f7ff bfcf 	b.w	1dc0c <_fgetc_r>
   1dc6e:	bf00      	nop
   1dc70:	2007c0e0 	.word	0x2007c0e0

0001dc74 <_fgets_r>:
_fgets_r():
   1dc74:	2a01      	cmp	r2, #1
   1dc76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1dc7a:	4681      	mov	r9, r0
   1dc7c:	460e      	mov	r6, r1
   1dc7e:	4690      	mov	r8, r2
   1dc80:	461c      	mov	r4, r3
   1dc82:	dc02      	bgt.n	1dc8a <_fgets_r+0x16>
   1dc84:	2000      	movs	r0, #0
   1dc86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1dc8a:	b118      	cbz	r0, 1dc94 <_fgets_r+0x20>
   1dc8c:	6983      	ldr	r3, [r0, #24]
   1dc8e:	b90b      	cbnz	r3, 1dc94 <_fgets_r+0x20>
   1dc90:	f000 f89c 	bl	1ddcc <__sinit>
   1dc94:	4b25      	ldr	r3, [pc, #148]	; (1dd2c <_fgets_r+0xb8>)
   1dc96:	429c      	cmp	r4, r3
   1dc98:	d110      	bne.n	1dcbc <_fgets_r+0x48>
   1dc9a:	f8d9 4004 	ldr.w	r4, [r9, #4]
   1dc9e:	4637      	mov	r7, r6
   1dca0:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   1dca4:	6865      	ldr	r5, [r4, #4]
   1dca6:	b9b5      	cbnz	r5, 1dcd6 <_fgets_r+0x62>
   1dca8:	4621      	mov	r1, r4
   1dcaa:	4648      	mov	r0, r9
   1dcac:	f001 fefc 	bl	1faa8 <__srefill_r>
   1dcb0:	b180      	cbz	r0, 1dcd4 <_fgets_r+0x60>
   1dcb2:	42b7      	cmp	r7, r6
   1dcb4:	d0e6      	beq.n	1dc84 <_fgets_r+0x10>
   1dcb6:	2300      	movs	r3, #0
   1dcb8:	703b      	strb	r3, [r7, #0]
   1dcba:	e025      	b.n	1dd08 <_fgets_r+0x94>
   1dcbc:	4b1c      	ldr	r3, [pc, #112]	; (1dd30 <_fgets_r+0xbc>)
   1dcbe:	429c      	cmp	r4, r3
   1dcc0:	d102      	bne.n	1dcc8 <_fgets_r+0x54>
   1dcc2:	f8d9 4008 	ldr.w	r4, [r9, #8]
   1dcc6:	e7ea      	b.n	1dc9e <_fgets_r+0x2a>
   1dcc8:	4b1a      	ldr	r3, [pc, #104]	; (1dd34 <_fgets_r+0xc0>)
   1dcca:	429c      	cmp	r4, r3
   1dccc:	bf08      	it	eq
   1dcce:	f8d9 400c 	ldreq.w	r4, [r9, #12]
   1dcd2:	e7e4      	b.n	1dc9e <_fgets_r+0x2a>
   1dcd4:	6865      	ldr	r5, [r4, #4]
   1dcd6:	4545      	cmp	r5, r8
   1dcd8:	bf28      	it	cs
   1dcda:	4645      	movcs	r5, r8
   1dcdc:	f8d4 a000 	ldr.w	sl, [r4]
   1dce0:	462a      	mov	r2, r5
   1dce2:	210a      	movs	r1, #10
   1dce4:	4650      	mov	r0, sl
   1dce6:	f000 fc01 	bl	1e4ec <memchr>
   1dcea:	6863      	ldr	r3, [r4, #4]
   1dcec:	b178      	cbz	r0, 1dd0e <_fgets_r+0x9a>
   1dcee:	3001      	adds	r0, #1
   1dcf0:	eba0 050a 	sub.w	r5, r0, sl
   1dcf4:	1b5b      	subs	r3, r3, r5
   1dcf6:	e884 0009 	stmia.w	r4, {r0, r3}
   1dcfa:	462a      	mov	r2, r5
   1dcfc:	4651      	mov	r1, sl
   1dcfe:	4638      	mov	r0, r7
   1dd00:	f000 fc11 	bl	1e526 <memcpy>
   1dd04:	2300      	movs	r3, #0
   1dd06:	557b      	strb	r3, [r7, r5]
   1dd08:	4630      	mov	r0, r6
   1dd0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1dd0e:	1b5b      	subs	r3, r3, r5
   1dd10:	6063      	str	r3, [r4, #4]
   1dd12:	6823      	ldr	r3, [r4, #0]
   1dd14:	4638      	mov	r0, r7
   1dd16:	442b      	add	r3, r5
   1dd18:	6023      	str	r3, [r4, #0]
   1dd1a:	462a      	mov	r2, r5
   1dd1c:	4651      	mov	r1, sl
   1dd1e:	f000 fc02 	bl	1e526 <memcpy>
   1dd22:	ebb8 0805 	subs.w	r8, r8, r5
   1dd26:	442f      	add	r7, r5
   1dd28:	d1bc      	bne.n	1dca4 <_fgets_r+0x30>
   1dd2a:	e7c4      	b.n	1dcb6 <_fgets_r+0x42>
   1dd2c:	000279b8 	.word	0x000279b8
   1dd30:	000279d8 	.word	0x000279d8
   1dd34:	00027998 	.word	0x00027998

0001dd38 <fgets>:
fgets():
   1dd38:	4613      	mov	r3, r2
   1dd3a:	460a      	mov	r2, r1
   1dd3c:	4601      	mov	r1, r0
   1dd3e:	4802      	ldr	r0, [pc, #8]	; (1dd48 <fgets+0x10>)
   1dd40:	6800      	ldr	r0, [r0, #0]
   1dd42:	f7ff bf97 	b.w	1dc74 <_fgets_r>
   1dd46:	bf00      	nop
   1dd48:	2007c0e0 	.word	0x2007c0e0

0001dd4c <_cleanup_r>:
_cleanup_r():
   1dd4c:	4901      	ldr	r1, [pc, #4]	; (1dd54 <_cleanup_r+0x8>)
   1dd4e:	f000 b9a1 	b.w	1e094 <_fwalk_reent>
   1dd52:	bf00      	nop
   1dd54:	0001db95 	.word	0x0001db95

0001dd58 <std.isra.0>:
std.isra.0():
   1dd58:	2300      	movs	r3, #0
   1dd5a:	b510      	push	{r4, lr}
   1dd5c:	4604      	mov	r4, r0
   1dd5e:	6003      	str	r3, [r0, #0]
   1dd60:	6043      	str	r3, [r0, #4]
   1dd62:	6083      	str	r3, [r0, #8]
   1dd64:	8181      	strh	r1, [r0, #12]
   1dd66:	6643      	str	r3, [r0, #100]	; 0x64
   1dd68:	81c2      	strh	r2, [r0, #14]
   1dd6a:	6103      	str	r3, [r0, #16]
   1dd6c:	6143      	str	r3, [r0, #20]
   1dd6e:	6183      	str	r3, [r0, #24]
   1dd70:	4619      	mov	r1, r3
   1dd72:	2208      	movs	r2, #8
   1dd74:	305c      	adds	r0, #92	; 0x5c
   1dd76:	f000 fbfb 	bl	1e570 <memset>
   1dd7a:	4b05      	ldr	r3, [pc, #20]	; (1dd90 <std.isra.0+0x38>)
   1dd7c:	6224      	str	r4, [r4, #32]
   1dd7e:	6263      	str	r3, [r4, #36]	; 0x24
   1dd80:	4b04      	ldr	r3, [pc, #16]	; (1dd94 <std.isra.0+0x3c>)
   1dd82:	62a3      	str	r3, [r4, #40]	; 0x28
   1dd84:	4b04      	ldr	r3, [pc, #16]	; (1dd98 <std.isra.0+0x40>)
   1dd86:	62e3      	str	r3, [r4, #44]	; 0x2c
   1dd88:	4b04      	ldr	r3, [pc, #16]	; (1dd9c <std.isra.0+0x44>)
   1dd8a:	6323      	str	r3, [r4, #48]	; 0x30
   1dd8c:	bd10      	pop	{r4, pc}
   1dd8e:	bf00      	nop
   1dd90:	0001ff59 	.word	0x0001ff59
   1dd94:	0001ff7f 	.word	0x0001ff7f
   1dd98:	0001ffb7 	.word	0x0001ffb7
   1dd9c:	0001ffdb 	.word	0x0001ffdb

0001dda0 <__sfmoreglue>:
__sfmoreglue():
   1dda0:	b570      	push	{r4, r5, r6, lr}
   1dda2:	2568      	movs	r5, #104	; 0x68
   1dda4:	1e4a      	subs	r2, r1, #1
   1dda6:	4355      	muls	r5, r2
   1dda8:	460e      	mov	r6, r1
   1ddaa:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1ddae:	f000 fed9 	bl	1eb64 <_malloc_r>
   1ddb2:	4604      	mov	r4, r0
   1ddb4:	b140      	cbz	r0, 1ddc8 <__sfmoreglue+0x28>
   1ddb6:	2100      	movs	r1, #0
   1ddb8:	e880 0042 	stmia.w	r0, {r1, r6}
   1ddbc:	300c      	adds	r0, #12
   1ddbe:	60a0      	str	r0, [r4, #8]
   1ddc0:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1ddc4:	f000 fbd4 	bl	1e570 <memset>
   1ddc8:	4620      	mov	r0, r4
   1ddca:	bd70      	pop	{r4, r5, r6, pc}

0001ddcc <__sinit>:
__sinit():
   1ddcc:	6983      	ldr	r3, [r0, #24]
   1ddce:	b510      	push	{r4, lr}
   1ddd0:	4604      	mov	r4, r0
   1ddd2:	bb33      	cbnz	r3, 1de22 <__sinit+0x56>
   1ddd4:	6483      	str	r3, [r0, #72]	; 0x48
   1ddd6:	64c3      	str	r3, [r0, #76]	; 0x4c
   1ddd8:	6503      	str	r3, [r0, #80]	; 0x50
   1ddda:	4b12      	ldr	r3, [pc, #72]	; (1de24 <__sinit+0x58>)
   1dddc:	4a12      	ldr	r2, [pc, #72]	; (1de28 <__sinit+0x5c>)
   1ddde:	681b      	ldr	r3, [r3, #0]
   1dde0:	6282      	str	r2, [r0, #40]	; 0x28
   1dde2:	4298      	cmp	r0, r3
   1dde4:	bf04      	itt	eq
   1dde6:	2301      	moveq	r3, #1
   1dde8:	6183      	streq	r3, [r0, #24]
   1ddea:	f000 f81f 	bl	1de2c <__sfp>
   1ddee:	6060      	str	r0, [r4, #4]
   1ddf0:	4620      	mov	r0, r4
   1ddf2:	f000 f81b 	bl	1de2c <__sfp>
   1ddf6:	60a0      	str	r0, [r4, #8]
   1ddf8:	4620      	mov	r0, r4
   1ddfa:	f000 f817 	bl	1de2c <__sfp>
   1ddfe:	2200      	movs	r2, #0
   1de00:	60e0      	str	r0, [r4, #12]
   1de02:	2104      	movs	r1, #4
   1de04:	6860      	ldr	r0, [r4, #4]
   1de06:	f7ff ffa7 	bl	1dd58 <std.isra.0>
   1de0a:	2201      	movs	r2, #1
   1de0c:	2109      	movs	r1, #9
   1de0e:	68a0      	ldr	r0, [r4, #8]
   1de10:	f7ff ffa2 	bl	1dd58 <std.isra.0>
   1de14:	2202      	movs	r2, #2
   1de16:	2112      	movs	r1, #18
   1de18:	68e0      	ldr	r0, [r4, #12]
   1de1a:	f7ff ff9d 	bl	1dd58 <std.isra.0>
   1de1e:	2301      	movs	r3, #1
   1de20:	61a3      	str	r3, [r4, #24]
   1de22:	bd10      	pop	{r4, pc}
   1de24:	000279f8 	.word	0x000279f8
   1de28:	0001dd4d 	.word	0x0001dd4d

0001de2c <__sfp>:
__sfp():
   1de2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1de2e:	4b1c      	ldr	r3, [pc, #112]	; (1dea0 <__sfp+0x74>)
   1de30:	4607      	mov	r7, r0
   1de32:	681e      	ldr	r6, [r3, #0]
   1de34:	69b3      	ldr	r3, [r6, #24]
   1de36:	b913      	cbnz	r3, 1de3e <__sfp+0x12>
   1de38:	4630      	mov	r0, r6
   1de3a:	f7ff ffc7 	bl	1ddcc <__sinit>
   1de3e:	3648      	adds	r6, #72	; 0x48
   1de40:	68b4      	ldr	r4, [r6, #8]
   1de42:	6873      	ldr	r3, [r6, #4]
   1de44:	3b01      	subs	r3, #1
   1de46:	d503      	bpl.n	1de50 <__sfp+0x24>
   1de48:	6833      	ldr	r3, [r6, #0]
   1de4a:	b133      	cbz	r3, 1de5a <__sfp+0x2e>
   1de4c:	6836      	ldr	r6, [r6, #0]
   1de4e:	e7f7      	b.n	1de40 <__sfp+0x14>
   1de50:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1de54:	b16d      	cbz	r5, 1de72 <__sfp+0x46>
   1de56:	3468      	adds	r4, #104	; 0x68
   1de58:	e7f4      	b.n	1de44 <__sfp+0x18>
   1de5a:	2104      	movs	r1, #4
   1de5c:	4638      	mov	r0, r7
   1de5e:	f7ff ff9f 	bl	1dda0 <__sfmoreglue>
   1de62:	6030      	str	r0, [r6, #0]
   1de64:	2800      	cmp	r0, #0
   1de66:	d1f1      	bne.n	1de4c <__sfp+0x20>
   1de68:	230c      	movs	r3, #12
   1de6a:	4604      	mov	r4, r0
   1de6c:	603b      	str	r3, [r7, #0]
   1de6e:	4620      	mov	r0, r4
   1de70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1de72:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1de76:	81e3      	strh	r3, [r4, #14]
   1de78:	2301      	movs	r3, #1
   1de7a:	6665      	str	r5, [r4, #100]	; 0x64
   1de7c:	81a3      	strh	r3, [r4, #12]
   1de7e:	6025      	str	r5, [r4, #0]
   1de80:	60a5      	str	r5, [r4, #8]
   1de82:	6065      	str	r5, [r4, #4]
   1de84:	6125      	str	r5, [r4, #16]
   1de86:	6165      	str	r5, [r4, #20]
   1de88:	61a5      	str	r5, [r4, #24]
   1de8a:	2208      	movs	r2, #8
   1de8c:	4629      	mov	r1, r5
   1de8e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1de92:	f000 fb6d 	bl	1e570 <memset>
   1de96:	6365      	str	r5, [r4, #52]	; 0x34
   1de98:	63a5      	str	r5, [r4, #56]	; 0x38
   1de9a:	64a5      	str	r5, [r4, #72]	; 0x48
   1de9c:	64e5      	str	r5, [r4, #76]	; 0x4c
   1de9e:	e7e6      	b.n	1de6e <__sfp+0x42>
   1dea0:	000279f8 	.word	0x000279f8

0001dea4 <__sfp_lock_acquire>:
__sfp_lock_acquire():
   1dea4:	4770      	bx	lr

0001dea6 <__sfp_lock_release>:
__sfp_lock_release():
   1dea6:	4770      	bx	lr

0001dea8 <_fopen_r>:
_fopen_r():
   1dea8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1deaa:	460f      	mov	r7, r1
   1deac:	4611      	mov	r1, r2
   1deae:	aa01      	add	r2, sp, #4
   1deb0:	4605      	mov	r5, r0
   1deb2:	f004 facd 	bl	22450 <__sflags>
   1deb6:	4606      	mov	r6, r0
   1deb8:	b918      	cbnz	r0, 1dec2 <_fopen_r+0x1a>
   1deba:	2400      	movs	r4, #0
   1debc:	4620      	mov	r0, r4
   1debe:	b003      	add	sp, #12
   1dec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1dec2:	4628      	mov	r0, r5
   1dec4:	f7ff ffb2 	bl	1de2c <__sfp>
   1dec8:	4604      	mov	r4, r0
   1deca:	2800      	cmp	r0, #0
   1decc:	d0f5      	beq.n	1deba <_fopen_r+0x12>
   1dece:	f44f 73db 	mov.w	r3, #438	; 0x1b6
   1ded2:	9a01      	ldr	r2, [sp, #4]
   1ded4:	4639      	mov	r1, r7
   1ded6:	4628      	mov	r0, r5
   1ded8:	f001 fce4 	bl	1f8a4 <_open_r>
   1dedc:	2800      	cmp	r0, #0
   1dede:	da06      	bge.n	1deee <_fopen_r+0x46>
   1dee0:	2500      	movs	r5, #0
   1dee2:	f7ff ffdf 	bl	1dea4 <__sfp_lock_acquire>
   1dee6:	81a5      	strh	r5, [r4, #12]
   1dee8:	f7ff ffdd 	bl	1dea6 <__sfp_lock_release>
   1deec:	e7e5      	b.n	1deba <_fopen_r+0x12>
   1deee:	4b0a      	ldr	r3, [pc, #40]	; (1df18 <_fopen_r+0x70>)
   1def0:	81e0      	strh	r0, [r4, #14]
   1def2:	6263      	str	r3, [r4, #36]	; 0x24
   1def4:	4b09      	ldr	r3, [pc, #36]	; (1df1c <_fopen_r+0x74>)
   1def6:	81a6      	strh	r6, [r4, #12]
   1def8:	62a3      	str	r3, [r4, #40]	; 0x28
   1defa:	4b09      	ldr	r3, [pc, #36]	; (1df20 <_fopen_r+0x78>)
   1defc:	6224      	str	r4, [r4, #32]
   1defe:	62e3      	str	r3, [r4, #44]	; 0x2c
   1df00:	4b08      	ldr	r3, [pc, #32]	; (1df24 <_fopen_r+0x7c>)
   1df02:	6323      	str	r3, [r4, #48]	; 0x30
   1df04:	05f3      	lsls	r3, r6, #23
   1df06:	d5d9      	bpl.n	1debc <_fopen_r+0x14>
   1df08:	2302      	movs	r3, #2
   1df0a:	2200      	movs	r2, #0
   1df0c:	4621      	mov	r1, r4
   1df0e:	4628      	mov	r0, r5
   1df10:	f000 f812 	bl	1df38 <_fseek_r>
   1df14:	e7d2      	b.n	1debc <_fopen_r+0x14>
   1df16:	bf00      	nop
   1df18:	0001ff59 	.word	0x0001ff59
   1df1c:	0001ff7f 	.word	0x0001ff7f
   1df20:	0001ffb7 	.word	0x0001ffb7
   1df24:	0001ffdb 	.word	0x0001ffdb

0001df28 <fopen>:
fopen():
   1df28:	4b02      	ldr	r3, [pc, #8]	; (1df34 <fopen+0xc>)
   1df2a:	460a      	mov	r2, r1
   1df2c:	4601      	mov	r1, r0
   1df2e:	6818      	ldr	r0, [r3, #0]
   1df30:	f7ff bfba 	b.w	1dea8 <_fopen_r>
   1df34:	2007c0e0 	.word	0x2007c0e0

0001df38 <_fseek_r>:
_fseek_r():
   1df38:	f000 b800 	b.w	1df3c <_fseeko_r>

0001df3c <_fseeko_r>:
_fseeko_r():
   1df3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1df40:	460c      	mov	r4, r1
   1df42:	4691      	mov	r9, r2
   1df44:	461e      	mov	r6, r3
   1df46:	4605      	mov	r5, r0
   1df48:	b118      	cbz	r0, 1df52 <_fseeko_r+0x16>
   1df4a:	6983      	ldr	r3, [r0, #24]
   1df4c:	b90b      	cbnz	r3, 1df52 <_fseeko_r+0x16>
   1df4e:	f7ff ff3d 	bl	1ddcc <__sinit>
   1df52:	4b3f      	ldr	r3, [pc, #252]	; (1e050 <_fseeko_r+0x114>)
   1df54:	429c      	cmp	r4, r3
   1df56:	d112      	bne.n	1df7e <_fseeko_r+0x42>
   1df58:	686c      	ldr	r4, [r5, #4]
   1df5a:	89a3      	ldrh	r3, [r4, #12]
   1df5c:	f403 7384 	and.w	r3, r3, #264	; 0x108
   1df60:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   1df64:	d103      	bne.n	1df6e <_fseeko_r+0x32>
   1df66:	4621      	mov	r1, r4
   1df68:	4628      	mov	r0, r5
   1df6a:	f7ff fe13 	bl	1db94 <_fflush_r>
   1df6e:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
   1df72:	f1b8 0f00 	cmp.w	r8, #0
   1df76:	d10c      	bne.n	1df92 <_fseeko_r+0x56>
   1df78:	231d      	movs	r3, #29
   1df7a:	602b      	str	r3, [r5, #0]
   1df7c:	e057      	b.n	1e02e <_fseeko_r+0xf2>
   1df7e:	4b35      	ldr	r3, [pc, #212]	; (1e054 <_fseeko_r+0x118>)
   1df80:	429c      	cmp	r4, r3
   1df82:	d101      	bne.n	1df88 <_fseeko_r+0x4c>
   1df84:	68ac      	ldr	r4, [r5, #8]
   1df86:	e7e8      	b.n	1df5a <_fseeko_r+0x1e>
   1df88:	4b33      	ldr	r3, [pc, #204]	; (1e058 <_fseeko_r+0x11c>)
   1df8a:	429c      	cmp	r4, r3
   1df8c:	bf08      	it	eq
   1df8e:	68ec      	ldreq	r4, [r5, #12]
   1df90:	e7e3      	b.n	1df5a <_fseeko_r+0x1e>
   1df92:	2e01      	cmp	r6, #1
   1df94:	d030      	beq.n	1dff8 <_fseeko_r+0xbc>
   1df96:	2e02      	cmp	r6, #2
   1df98:	d001      	beq.n	1df9e <_fseeko_r+0x62>
   1df9a:	2e00      	cmp	r6, #0
   1df9c:	d155      	bne.n	1e04a <_fseeko_r+0x10e>
   1df9e:	6923      	ldr	r3, [r4, #16]
   1dfa0:	b91b      	cbnz	r3, 1dfaa <_fseeko_r+0x6e>
   1dfa2:	4621      	mov	r1, r4
   1dfa4:	4628      	mov	r0, r5
   1dfa6:	f000 fa3f 	bl	1e428 <__smakebuf_r>
   1dfaa:	4621      	mov	r1, r4
   1dfac:	4628      	mov	r0, r5
   1dfae:	f7ff fdf1 	bl	1db94 <_fflush_r>
   1dfb2:	4607      	mov	r7, r0
   1dfb4:	2800      	cmp	r0, #0
   1dfb6:	d13a      	bne.n	1e02e <_fseeko_r+0xf2>
   1dfb8:	4633      	mov	r3, r6
   1dfba:	464a      	mov	r2, r9
   1dfbc:	6a21      	ldr	r1, [r4, #32]
   1dfbe:	4628      	mov	r0, r5
   1dfc0:	47c0      	blx	r8
   1dfc2:	3001      	adds	r0, #1
   1dfc4:	d033      	beq.n	1e02e <_fseeko_r+0xf2>
   1dfc6:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1dfc8:	b141      	cbz	r1, 1dfdc <_fseeko_r+0xa0>
   1dfca:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1dfce:	4299      	cmp	r1, r3
   1dfd0:	d002      	beq.n	1dfd8 <_fseeko_r+0x9c>
   1dfd2:	4628      	mov	r0, r5
   1dfd4:	f000 fd48 	bl	1ea68 <_free_r>
   1dfd8:	2300      	movs	r3, #0
   1dfda:	6363      	str	r3, [r4, #52]	; 0x34
   1dfdc:	2100      	movs	r1, #0
   1dfde:	6923      	ldr	r3, [r4, #16]
   1dfe0:	6061      	str	r1, [r4, #4]
   1dfe2:	6023      	str	r3, [r4, #0]
   1dfe4:	89a3      	ldrh	r3, [r4, #12]
   1dfe6:	2208      	movs	r2, #8
   1dfe8:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
   1dfec:	81a3      	strh	r3, [r4, #12]
   1dfee:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1dff2:	f000 fabd 	bl	1e570 <memset>
   1dff6:	e01c      	b.n	1e032 <_fseeko_r+0xf6>
   1dff8:	4621      	mov	r1, r4
   1dffa:	4628      	mov	r0, r5
   1dffc:	f7ff fdca 	bl	1db94 <_fflush_r>
   1e000:	89a2      	ldrh	r2, [r4, #12]
   1e002:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1e006:	d00c      	beq.n	1e022 <_fseeko_r+0xe6>
   1e008:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1e00a:	89a3      	ldrh	r3, [r4, #12]
   1e00c:	075a      	lsls	r2, r3, #29
   1e00e:	d513      	bpl.n	1e038 <_fseeko_r+0xfc>
   1e010:	6863      	ldr	r3, [r4, #4]
   1e012:	1ac0      	subs	r0, r0, r3
   1e014:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1e016:	b10b      	cbz	r3, 1e01c <_fseeko_r+0xe0>
   1e018:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1e01a:	1ac0      	subs	r0, r0, r3
   1e01c:	4481      	add	r9, r0
   1e01e:	2600      	movs	r6, #0
   1e020:	e7bd      	b.n	1df9e <_fseeko_r+0x62>
   1e022:	6a21      	ldr	r1, [r4, #32]
   1e024:	4633      	mov	r3, r6
   1e026:	4628      	mov	r0, r5
   1e028:	47c0      	blx	r8
   1e02a:	1c41      	adds	r1, r0, #1
   1e02c:	d1ed      	bne.n	1e00a <_fseeko_r+0xce>
   1e02e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1e032:	4638      	mov	r0, r7
   1e034:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e038:	071b      	lsls	r3, r3, #28
   1e03a:	d5ef      	bpl.n	1e01c <_fseeko_r+0xe0>
   1e03c:	6823      	ldr	r3, [r4, #0]
   1e03e:	2b00      	cmp	r3, #0
   1e040:	d0ec      	beq.n	1e01c <_fseeko_r+0xe0>
   1e042:	6922      	ldr	r2, [r4, #16]
   1e044:	1a9b      	subs	r3, r3, r2
   1e046:	4418      	add	r0, r3
   1e048:	e7e8      	b.n	1e01c <_fseeko_r+0xe0>
   1e04a:	2316      	movs	r3, #22
   1e04c:	e795      	b.n	1df7a <_fseeko_r+0x3e>
   1e04e:	bf00      	nop
   1e050:	000279b8 	.word	0x000279b8
   1e054:	000279d8 	.word	0x000279d8
   1e058:	00027998 	.word	0x00027998

0001e05c <_fwalk>:
_fwalk():
   1e05c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e060:	4688      	mov	r8, r1
   1e062:	2600      	movs	r6, #0
   1e064:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1e068:	b914      	cbnz	r4, 1e070 <_fwalk+0x14>
   1e06a:	4630      	mov	r0, r6
   1e06c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e070:	68a5      	ldr	r5, [r4, #8]
   1e072:	6867      	ldr	r7, [r4, #4]
   1e074:	3f01      	subs	r7, #1
   1e076:	d501      	bpl.n	1e07c <_fwalk+0x20>
   1e078:	6824      	ldr	r4, [r4, #0]
   1e07a:	e7f5      	b.n	1e068 <_fwalk+0xc>
   1e07c:	89ab      	ldrh	r3, [r5, #12]
   1e07e:	2b01      	cmp	r3, #1
   1e080:	d906      	bls.n	1e090 <_fwalk+0x34>
   1e082:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1e086:	3301      	adds	r3, #1
   1e088:	d002      	beq.n	1e090 <_fwalk+0x34>
   1e08a:	4628      	mov	r0, r5
   1e08c:	47c0      	blx	r8
   1e08e:	4306      	orrs	r6, r0
   1e090:	3568      	adds	r5, #104	; 0x68
   1e092:	e7ef      	b.n	1e074 <_fwalk+0x18>

0001e094 <_fwalk_reent>:
_fwalk_reent():
   1e094:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e098:	4680      	mov	r8, r0
   1e09a:	4689      	mov	r9, r1
   1e09c:	2600      	movs	r6, #0
   1e09e:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1e0a2:	b914      	cbnz	r4, 1e0aa <_fwalk_reent+0x16>
   1e0a4:	4630      	mov	r0, r6
   1e0a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e0aa:	68a5      	ldr	r5, [r4, #8]
   1e0ac:	6867      	ldr	r7, [r4, #4]
   1e0ae:	3f01      	subs	r7, #1
   1e0b0:	d501      	bpl.n	1e0b6 <_fwalk_reent+0x22>
   1e0b2:	6824      	ldr	r4, [r4, #0]
   1e0b4:	e7f5      	b.n	1e0a2 <_fwalk_reent+0xe>
   1e0b6:	89ab      	ldrh	r3, [r5, #12]
   1e0b8:	2b01      	cmp	r3, #1
   1e0ba:	d907      	bls.n	1e0cc <_fwalk_reent+0x38>
   1e0bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1e0c0:	3301      	adds	r3, #1
   1e0c2:	d003      	beq.n	1e0cc <_fwalk_reent+0x38>
   1e0c4:	4629      	mov	r1, r5
   1e0c6:	4640      	mov	r0, r8
   1e0c8:	47c8      	blx	r9
   1e0ca:	4306      	orrs	r6, r0
   1e0cc:	3568      	adds	r5, #104	; 0x68
   1e0ce:	e7ee      	b.n	1e0ae <_fwalk_reent+0x1a>

0001e0d0 <_fwrite_r>:
_fwrite_r():
   1e0d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e0d4:	9c08      	ldr	r4, [sp, #32]
   1e0d6:	4689      	mov	r9, r1
   1e0d8:	4617      	mov	r7, r2
   1e0da:	fb02 f803 	mul.w	r8, r2, r3
   1e0de:	4606      	mov	r6, r0
   1e0e0:	b118      	cbz	r0, 1e0ea <_fwrite_r+0x1a>
   1e0e2:	6983      	ldr	r3, [r0, #24]
   1e0e4:	b90b      	cbnz	r3, 1e0ea <_fwrite_r+0x1a>
   1e0e6:	f7ff fe71 	bl	1ddcc <__sinit>
   1e0ea:	4b1d      	ldr	r3, [pc, #116]	; (1e160 <_fwrite_r+0x90>)
   1e0ec:	429c      	cmp	r4, r3
   1e0ee:	d11a      	bne.n	1e126 <_fwrite_r+0x56>
   1e0f0:	6874      	ldr	r4, [r6, #4]
   1e0f2:	89a3      	ldrh	r3, [r4, #12]
   1e0f4:	071b      	lsls	r3, r3, #28
   1e0f6:	d520      	bpl.n	1e13a <_fwrite_r+0x6a>
   1e0f8:	6923      	ldr	r3, [r4, #16]
   1e0fa:	b1f3      	cbz	r3, 1e13a <_fwrite_r+0x6a>
   1e0fc:	2500      	movs	r5, #0
   1e0fe:	4545      	cmp	r5, r8
   1e100:	d029      	beq.n	1e156 <_fwrite_r+0x86>
   1e102:	68a3      	ldr	r3, [r4, #8]
   1e104:	f819 1005 	ldrb.w	r1, [r9, r5]
   1e108:	3b01      	subs	r3, #1
   1e10a:	2b00      	cmp	r3, #0
   1e10c:	60a3      	str	r3, [r4, #8]
   1e10e:	da04      	bge.n	1e11a <_fwrite_r+0x4a>
   1e110:	69a2      	ldr	r2, [r4, #24]
   1e112:	4293      	cmp	r3, r2
   1e114:	db19      	blt.n	1e14a <_fwrite_r+0x7a>
   1e116:	290a      	cmp	r1, #10
   1e118:	d017      	beq.n	1e14a <_fwrite_r+0x7a>
   1e11a:	6823      	ldr	r3, [r4, #0]
   1e11c:	1c5a      	adds	r2, r3, #1
   1e11e:	6022      	str	r2, [r4, #0]
   1e120:	7019      	strb	r1, [r3, #0]
   1e122:	3501      	adds	r5, #1
   1e124:	e7eb      	b.n	1e0fe <_fwrite_r+0x2e>
   1e126:	4b0f      	ldr	r3, [pc, #60]	; (1e164 <_fwrite_r+0x94>)
   1e128:	429c      	cmp	r4, r3
   1e12a:	d101      	bne.n	1e130 <_fwrite_r+0x60>
   1e12c:	68b4      	ldr	r4, [r6, #8]
   1e12e:	e7e0      	b.n	1e0f2 <_fwrite_r+0x22>
   1e130:	4b0d      	ldr	r3, [pc, #52]	; (1e168 <_fwrite_r+0x98>)
   1e132:	429c      	cmp	r4, r3
   1e134:	bf08      	it	eq
   1e136:	68f4      	ldreq	r4, [r6, #12]
   1e138:	e7db      	b.n	1e0f2 <_fwrite_r+0x22>
   1e13a:	4621      	mov	r1, r4
   1e13c:	4630      	mov	r0, r6
   1e13e:	f003 fa59 	bl	215f4 <__swsetup_r>
   1e142:	2800      	cmp	r0, #0
   1e144:	d0da      	beq.n	1e0fc <_fwrite_r+0x2c>
   1e146:	2500      	movs	r5, #0
   1e148:	e005      	b.n	1e156 <_fwrite_r+0x86>
   1e14a:	4622      	mov	r2, r4
   1e14c:	4630      	mov	r0, r6
   1e14e:	f003 f9df 	bl	21510 <__swbuf_r>
   1e152:	3001      	adds	r0, #1
   1e154:	d1e5      	bne.n	1e122 <_fwrite_r+0x52>
   1e156:	fbb5 f0f7 	udiv	r0, r5, r7
   1e15a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e15e:	bf00      	nop
   1e160:	000279b8 	.word	0x000279b8
   1e164:	000279d8 	.word	0x000279d8
   1e168:	00027998 	.word	0x00027998

0001e16c <fwrite>:
fwrite():
   1e16c:	b507      	push	{r0, r1, r2, lr}
   1e16e:	9300      	str	r3, [sp, #0]
   1e170:	4613      	mov	r3, r2
   1e172:	460a      	mov	r2, r1
   1e174:	4601      	mov	r1, r0
   1e176:	4803      	ldr	r0, [pc, #12]	; (1e184 <fwrite+0x18>)
   1e178:	6800      	ldr	r0, [r0, #0]
   1e17a:	f7ff ffa9 	bl	1e0d0 <_fwrite_r>
   1e17e:	b003      	add	sp, #12
   1e180:	f85d fb04 	ldr.w	pc, [sp], #4
   1e184:	2007c0e0 	.word	0x2007c0e0

0001e188 <__libc_init_array>:
__libc_init_array():
   1e188:	b570      	push	{r4, r5, r6, lr}
   1e18a:	2500      	movs	r5, #0
   1e18c:	4e0c      	ldr	r6, [pc, #48]	; (1e1c0 <__libc_init_array+0x38>)
   1e18e:	4c0d      	ldr	r4, [pc, #52]	; (1e1c4 <__libc_init_array+0x3c>)
   1e190:	1ba4      	subs	r4, r4, r6
   1e192:	10a4      	asrs	r4, r4, #2
   1e194:	42a5      	cmp	r5, r4
   1e196:	d109      	bne.n	1e1ac <__libc_init_array+0x24>
   1e198:	f7f8 ff90 	bl	170bc <_init>
   1e19c:	2500      	movs	r5, #0
   1e19e:	4e0a      	ldr	r6, [pc, #40]	; (1e1c8 <__libc_init_array+0x40>)
   1e1a0:	4c0a      	ldr	r4, [pc, #40]	; (1e1cc <__libc_init_array+0x44>)
   1e1a2:	1ba4      	subs	r4, r4, r6
   1e1a4:	10a4      	asrs	r4, r4, #2
   1e1a6:	42a5      	cmp	r5, r4
   1e1a8:	d105      	bne.n	1e1b6 <__libc_init_array+0x2e>
   1e1aa:	bd70      	pop	{r4, r5, r6, pc}
   1e1ac:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1e1b0:	4798      	blx	r3
   1e1b2:	3501      	adds	r5, #1
   1e1b4:	e7ee      	b.n	1e194 <__libc_init_array+0xc>
   1e1b6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1e1ba:	4798      	blx	r3
   1e1bc:	3501      	adds	r5, #1
   1e1be:	e7f2      	b.n	1e1a6 <__libc_init_array+0x1e>
   1e1c0:	00027e30 	.word	0x00027e30
   1e1c4:	00027e30 	.word	0x00027e30
   1e1c8:	00027e30 	.word	0x00027e30
   1e1cc:	00027e30 	.word	0x00027e30

0001e1d0 <localtime>:
localtime():
   1e1d0:	b538      	push	{r3, r4, r5, lr}
   1e1d2:	4b07      	ldr	r3, [pc, #28]	; (1e1f0 <localtime+0x20>)
   1e1d4:	4605      	mov	r5, r0
   1e1d6:	681c      	ldr	r4, [r3, #0]
   1e1d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1e1da:	b91b      	cbnz	r3, 1e1e4 <localtime+0x14>
   1e1dc:	2024      	movs	r0, #36	; 0x24
   1e1de:	f000 f963 	bl	1e4a8 <malloc>
   1e1e2:	63e0      	str	r0, [r4, #60]	; 0x3c
   1e1e4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1e1e6:	4628      	mov	r0, r5
   1e1e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1e1ec:	f000 b802 	b.w	1e1f4 <localtime_r>
   1e1f0:	2007c0e0 	.word	0x2007c0e0

0001e1f4 <localtime_r>:
localtime_r():
   1e1f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e1f8:	460c      	mov	r4, r1
   1e1fa:	4680      	mov	r8, r0
   1e1fc:	f004 fce8 	bl	22bd0 <__gettzinfo>
   1e200:	4621      	mov	r1, r4
   1e202:	4607      	mov	r7, r0
   1e204:	4640      	mov	r0, r8
   1e206:	f004 fce7 	bl	22bd8 <gmtime_r>
   1e20a:	6946      	ldr	r6, [r0, #20]
   1e20c:	4604      	mov	r4, r0
   1e20e:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1e212:	07b3      	lsls	r3, r6, #30
   1e214:	d105      	bne.n	1e222 <localtime_r+0x2e>
   1e216:	2264      	movs	r2, #100	; 0x64
   1e218:	fb96 f3f2 	sdiv	r3, r6, r2
   1e21c:	fb02 6313 	mls	r3, r2, r3, r6
   1e220:	b9fb      	cbnz	r3, 1e262 <localtime_r+0x6e>
   1e222:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e226:	fb96 f5f3 	sdiv	r5, r6, r3
   1e22a:	fb03 6515 	mls	r5, r3, r5, r6
   1e22e:	fab5 f585 	clz	r5, r5
   1e232:	096d      	lsrs	r5, r5, #5
   1e234:	2230      	movs	r2, #48	; 0x30
   1e236:	4b5f      	ldr	r3, [pc, #380]	; (1e3b4 <localtime_r+0x1c0>)
   1e238:	fb02 3505 	mla	r5, r2, r5, r3
   1e23c:	f002 ff76 	bl	2112c <__tz_lock>
   1e240:	f002 ff76 	bl	21130 <_tzset_unlocked>
   1e244:	4b5c      	ldr	r3, [pc, #368]	; (1e3b8 <localtime_r+0x1c4>)
   1e246:	681b      	ldr	r3, [r3, #0]
   1e248:	b1e3      	cbz	r3, 1e284 <localtime_r+0x90>
   1e24a:	687b      	ldr	r3, [r7, #4]
   1e24c:	429e      	cmp	r6, r3
   1e24e:	d10a      	bne.n	1e266 <localtime_r+0x72>
   1e250:	6839      	ldr	r1, [r7, #0]
   1e252:	f8d8 3000 	ldr.w	r3, [r8]
   1e256:	69fa      	ldr	r2, [r7, #28]
   1e258:	b969      	cbnz	r1, 1e276 <localtime_r+0x82>
   1e25a:	4293      	cmp	r3, r2
   1e25c:	db0d      	blt.n	1e27a <localtime_r+0x86>
   1e25e:	2301      	movs	r3, #1
   1e260:	e010      	b.n	1e284 <localtime_r+0x90>
   1e262:	2501      	movs	r5, #1
   1e264:	e7e6      	b.n	1e234 <localtime_r+0x40>
   1e266:	4630      	mov	r0, r6
   1e268:	f002 feb8 	bl	20fdc <__tzcalc_limits>
   1e26c:	2800      	cmp	r0, #0
   1e26e:	d1ef      	bne.n	1e250 <localtime_r+0x5c>
   1e270:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e274:	e006      	b.n	1e284 <localtime_r+0x90>
   1e276:	4293      	cmp	r3, r2
   1e278:	db54      	blt.n	1e324 <localtime_r+0x130>
   1e27a:	6bba      	ldr	r2, [r7, #56]	; 0x38
   1e27c:	4293      	cmp	r3, r2
   1e27e:	bfac      	ite	ge
   1e280:	2300      	movge	r3, #0
   1e282:	2301      	movlt	r3, #1
   1e284:	6223      	str	r3, [r4, #32]
   1e286:	6a23      	ldr	r3, [r4, #32]
   1e288:	203c      	movs	r0, #60	; 0x3c
   1e28a:	2b01      	cmp	r3, #1
   1e28c:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   1e290:	bf0c      	ite	eq
   1e292:	6bf9      	ldreq	r1, [r7, #60]	; 0x3c
   1e294:	6a39      	ldrne	r1, [r7, #32]
   1e296:	fb91 f6f3 	sdiv	r6, r1, r3
   1e29a:	fb03 1316 	mls	r3, r3, r6, r1
   1e29e:	fb93 f2f0 	sdiv	r2, r3, r0
   1e2a2:	fb00 3012 	mls	r0, r0, r2, r3
   1e2a6:	6861      	ldr	r1, [r4, #4]
   1e2a8:	6823      	ldr	r3, [r4, #0]
   1e2aa:	1a89      	subs	r1, r1, r2
   1e2ac:	68a2      	ldr	r2, [r4, #8]
   1e2ae:	1a1b      	subs	r3, r3, r0
   1e2b0:	1b92      	subs	r2, r2, r6
   1e2b2:	2b3b      	cmp	r3, #59	; 0x3b
   1e2b4:	6023      	str	r3, [r4, #0]
   1e2b6:	6061      	str	r1, [r4, #4]
   1e2b8:	60a2      	str	r2, [r4, #8]
   1e2ba:	dd35      	ble.n	1e328 <localtime_r+0x134>
   1e2bc:	3101      	adds	r1, #1
   1e2be:	6061      	str	r1, [r4, #4]
   1e2c0:	3b3c      	subs	r3, #60	; 0x3c
   1e2c2:	6023      	str	r3, [r4, #0]
   1e2c4:	6863      	ldr	r3, [r4, #4]
   1e2c6:	2b3b      	cmp	r3, #59	; 0x3b
   1e2c8:	dd34      	ble.n	1e334 <localtime_r+0x140>
   1e2ca:	3201      	adds	r2, #1
   1e2cc:	60a2      	str	r2, [r4, #8]
   1e2ce:	3b3c      	subs	r3, #60	; 0x3c
   1e2d0:	6063      	str	r3, [r4, #4]
   1e2d2:	68a3      	ldr	r3, [r4, #8]
   1e2d4:	2b17      	cmp	r3, #23
   1e2d6:	dd33      	ble.n	1e340 <localtime_r+0x14c>
   1e2d8:	69e2      	ldr	r2, [r4, #28]
   1e2da:	3b18      	subs	r3, #24
   1e2dc:	3201      	adds	r2, #1
   1e2de:	61e2      	str	r2, [r4, #28]
   1e2e0:	69a2      	ldr	r2, [r4, #24]
   1e2e2:	60a3      	str	r3, [r4, #8]
   1e2e4:	3201      	adds	r2, #1
   1e2e6:	2a06      	cmp	r2, #6
   1e2e8:	bfc8      	it	gt
   1e2ea:	2200      	movgt	r2, #0
   1e2ec:	61a2      	str	r2, [r4, #24]
   1e2ee:	68e2      	ldr	r2, [r4, #12]
   1e2f0:	6923      	ldr	r3, [r4, #16]
   1e2f2:	3201      	adds	r2, #1
   1e2f4:	60e2      	str	r2, [r4, #12]
   1e2f6:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   1e2fa:	428a      	cmp	r2, r1
   1e2fc:	dd0d      	ble.n	1e31a <localtime_r+0x126>
   1e2fe:	3301      	adds	r3, #1
   1e300:	2b0c      	cmp	r3, #12
   1e302:	eba2 0201 	sub.w	r2, r2, r1
   1e306:	60e2      	str	r2, [r4, #12]
   1e308:	bf05      	ittet	eq
   1e30a:	2200      	moveq	r2, #0
   1e30c:	6963      	ldreq	r3, [r4, #20]
   1e30e:	6123      	strne	r3, [r4, #16]
   1e310:	3301      	addeq	r3, #1
   1e312:	bf02      	ittt	eq
   1e314:	6122      	streq	r2, [r4, #16]
   1e316:	6163      	streq	r3, [r4, #20]
   1e318:	61e2      	streq	r2, [r4, #28]
   1e31a:	f002 ff08 	bl	2112e <__tz_unlock>
   1e31e:	4620      	mov	r0, r4
   1e320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e324:	2300      	movs	r3, #0
   1e326:	e7ad      	b.n	1e284 <localtime_r+0x90>
   1e328:	2b00      	cmp	r3, #0
   1e32a:	dacb      	bge.n	1e2c4 <localtime_r+0xd0>
   1e32c:	3901      	subs	r1, #1
   1e32e:	6061      	str	r1, [r4, #4]
   1e330:	333c      	adds	r3, #60	; 0x3c
   1e332:	e7c6      	b.n	1e2c2 <localtime_r+0xce>
   1e334:	2b00      	cmp	r3, #0
   1e336:	dacc      	bge.n	1e2d2 <localtime_r+0xde>
   1e338:	3a01      	subs	r2, #1
   1e33a:	60a2      	str	r2, [r4, #8]
   1e33c:	333c      	adds	r3, #60	; 0x3c
   1e33e:	e7c7      	b.n	1e2d0 <localtime_r+0xdc>
   1e340:	2b00      	cmp	r3, #0
   1e342:	daea      	bge.n	1e31a <localtime_r+0x126>
   1e344:	69e2      	ldr	r2, [r4, #28]
   1e346:	3318      	adds	r3, #24
   1e348:	3a01      	subs	r2, #1
   1e34a:	61e2      	str	r2, [r4, #28]
   1e34c:	69a2      	ldr	r2, [r4, #24]
   1e34e:	60a3      	str	r3, [r4, #8]
   1e350:	3a01      	subs	r2, #1
   1e352:	bf48      	it	mi
   1e354:	2206      	movmi	r2, #6
   1e356:	61a2      	str	r2, [r4, #24]
   1e358:	68e2      	ldr	r2, [r4, #12]
   1e35a:	3a01      	subs	r2, #1
   1e35c:	60e2      	str	r2, [r4, #12]
   1e35e:	2a00      	cmp	r2, #0
   1e360:	d1db      	bne.n	1e31a <localtime_r+0x126>
   1e362:	6923      	ldr	r3, [r4, #16]
   1e364:	3b01      	subs	r3, #1
   1e366:	d405      	bmi.n	1e374 <localtime_r+0x180>
   1e368:	6123      	str	r3, [r4, #16]
   1e36a:	6923      	ldr	r3, [r4, #16]
   1e36c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
   1e370:	60e3      	str	r3, [r4, #12]
   1e372:	e7d2      	b.n	1e31a <localtime_r+0x126>
   1e374:	230b      	movs	r3, #11
   1e376:	6123      	str	r3, [r4, #16]
   1e378:	6963      	ldr	r3, [r4, #20]
   1e37a:	1e5a      	subs	r2, r3, #1
   1e37c:	f012 0f03 	tst.w	r2, #3
   1e380:	6162      	str	r2, [r4, #20]
   1e382:	f203 726b 	addw	r2, r3, #1899	; 0x76b
   1e386:	d105      	bne.n	1e394 <localtime_r+0x1a0>
   1e388:	2164      	movs	r1, #100	; 0x64
   1e38a:	fb92 f3f1 	sdiv	r3, r2, r1
   1e38e:	fb01 2313 	mls	r3, r1, r3, r2
   1e392:	b963      	cbnz	r3, 1e3ae <localtime_r+0x1ba>
   1e394:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e398:	fb92 f3f1 	sdiv	r3, r2, r1
   1e39c:	fb01 2313 	mls	r3, r1, r3, r2
   1e3a0:	fab3 f383 	clz	r3, r3
   1e3a4:	095b      	lsrs	r3, r3, #5
   1e3a6:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1e3aa:	61e3      	str	r3, [r4, #28]
   1e3ac:	e7dd      	b.n	1e36a <localtime_r+0x176>
   1e3ae:	2301      	movs	r3, #1
   1e3b0:	e7f9      	b.n	1e3a6 <localtime_r+0x1b2>
   1e3b2:	bf00      	nop
   1e3b4:	00027a64 	.word	0x00027a64
   1e3b8:	2007c8e0 	.word	0x2007c8e0

0001e3bc <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   1e3bc:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   1e3c0:	4770      	bx	lr
   1e3c2:	Address 0x000000000001e3c2 is out of bounds.


0001e3c4 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   1e3c4:	4b04      	ldr	r3, [pc, #16]	; (1e3d8 <__locale_ctype_ptr+0x14>)
   1e3c6:	4a05      	ldr	r2, [pc, #20]	; (1e3dc <__locale_ctype_ptr+0x18>)
   1e3c8:	681b      	ldr	r3, [r3, #0]
   1e3ca:	6a1b      	ldr	r3, [r3, #32]
   1e3cc:	2b00      	cmp	r3, #0
   1e3ce:	bf08      	it	eq
   1e3d0:	4613      	moveq	r3, r2
   1e3d2:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   1e3d6:	4770      	bx	lr
   1e3d8:	2007c0e0 	.word	0x2007c0e0
   1e3dc:	2007c144 	.word	0x2007c144

0001e3e0 <__swhatbuf_r>:
__swhatbuf_r():
   1e3e0:	b570      	push	{r4, r5, r6, lr}
   1e3e2:	460e      	mov	r6, r1
   1e3e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1e3e8:	b090      	sub	sp, #64	; 0x40
   1e3ea:	2900      	cmp	r1, #0
   1e3ec:	4614      	mov	r4, r2
   1e3ee:	461d      	mov	r5, r3
   1e3f0:	da07      	bge.n	1e402 <__swhatbuf_r+0x22>
   1e3f2:	2300      	movs	r3, #0
   1e3f4:	602b      	str	r3, [r5, #0]
   1e3f6:	89b3      	ldrh	r3, [r6, #12]
   1e3f8:	061a      	lsls	r2, r3, #24
   1e3fa:	d410      	bmi.n	1e41e <__swhatbuf_r+0x3e>
   1e3fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1e400:	e00e      	b.n	1e420 <__swhatbuf_r+0x40>
   1e402:	aa01      	add	r2, sp, #4
   1e404:	f004 f85a 	bl	224bc <_fstat_r>
   1e408:	2800      	cmp	r0, #0
   1e40a:	dbf2      	blt.n	1e3f2 <__swhatbuf_r+0x12>
   1e40c:	9a02      	ldr	r2, [sp, #8]
   1e40e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   1e412:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   1e416:	425a      	negs	r2, r3
   1e418:	415a      	adcs	r2, r3
   1e41a:	602a      	str	r2, [r5, #0]
   1e41c:	e7ee      	b.n	1e3fc <__swhatbuf_r+0x1c>
   1e41e:	2340      	movs	r3, #64	; 0x40
   1e420:	2000      	movs	r0, #0
   1e422:	6023      	str	r3, [r4, #0]
   1e424:	b010      	add	sp, #64	; 0x40
   1e426:	bd70      	pop	{r4, r5, r6, pc}

0001e428 <__smakebuf_r>:
__smakebuf_r():
   1e428:	898b      	ldrh	r3, [r1, #12]
   1e42a:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1e42c:	079d      	lsls	r5, r3, #30
   1e42e:	4606      	mov	r6, r0
   1e430:	460c      	mov	r4, r1
   1e432:	d507      	bpl.n	1e444 <__smakebuf_r+0x1c>
   1e434:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1e438:	6023      	str	r3, [r4, #0]
   1e43a:	6123      	str	r3, [r4, #16]
   1e43c:	2301      	movs	r3, #1
   1e43e:	6163      	str	r3, [r4, #20]
   1e440:	b002      	add	sp, #8
   1e442:	bd70      	pop	{r4, r5, r6, pc}
   1e444:	ab01      	add	r3, sp, #4
   1e446:	466a      	mov	r2, sp
   1e448:	f7ff ffca 	bl	1e3e0 <__swhatbuf_r>
   1e44c:	9900      	ldr	r1, [sp, #0]
   1e44e:	4605      	mov	r5, r0
   1e450:	4630      	mov	r0, r6
   1e452:	f000 fb87 	bl	1eb64 <_malloc_r>
   1e456:	b948      	cbnz	r0, 1e46c <__smakebuf_r+0x44>
   1e458:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1e45c:	059a      	lsls	r2, r3, #22
   1e45e:	d4ef      	bmi.n	1e440 <__smakebuf_r+0x18>
   1e460:	f023 0303 	bic.w	r3, r3, #3
   1e464:	f043 0302 	orr.w	r3, r3, #2
   1e468:	81a3      	strh	r3, [r4, #12]
   1e46a:	e7e3      	b.n	1e434 <__smakebuf_r+0xc>
   1e46c:	4b0d      	ldr	r3, [pc, #52]	; (1e4a4 <__smakebuf_r+0x7c>)
   1e46e:	62b3      	str	r3, [r6, #40]	; 0x28
   1e470:	89a3      	ldrh	r3, [r4, #12]
   1e472:	6020      	str	r0, [r4, #0]
   1e474:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1e478:	81a3      	strh	r3, [r4, #12]
   1e47a:	9b00      	ldr	r3, [sp, #0]
   1e47c:	6120      	str	r0, [r4, #16]
   1e47e:	6163      	str	r3, [r4, #20]
   1e480:	9b01      	ldr	r3, [sp, #4]
   1e482:	b15b      	cbz	r3, 1e49c <__smakebuf_r+0x74>
   1e484:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1e488:	4630      	mov	r0, r6
   1e48a:	f004 fc3d 	bl	22d08 <_isatty_r>
   1e48e:	b128      	cbz	r0, 1e49c <__smakebuf_r+0x74>
   1e490:	89a3      	ldrh	r3, [r4, #12]
   1e492:	f023 0303 	bic.w	r3, r3, #3
   1e496:	f043 0301 	orr.w	r3, r3, #1
   1e49a:	81a3      	strh	r3, [r4, #12]
   1e49c:	89a3      	ldrh	r3, [r4, #12]
   1e49e:	431d      	orrs	r5, r3
   1e4a0:	81a5      	strh	r5, [r4, #12]
   1e4a2:	e7cd      	b.n	1e440 <__smakebuf_r+0x18>
   1e4a4:	0001dd4d 	.word	0x0001dd4d

0001e4a8 <malloc>:
malloc():
   1e4a8:	4b02      	ldr	r3, [pc, #8]	; (1e4b4 <malloc+0xc>)
   1e4aa:	4601      	mov	r1, r0
   1e4ac:	6818      	ldr	r0, [r3, #0]
   1e4ae:	f000 bb59 	b.w	1eb64 <_malloc_r>
   1e4b2:	bf00      	nop
   1e4b4:	2007c0e0 	.word	0x2007c0e0

0001e4b8 <free>:
free():
   1e4b8:	4b02      	ldr	r3, [pc, #8]	; (1e4c4 <free+0xc>)
   1e4ba:	4601      	mov	r1, r0
   1e4bc:	6818      	ldr	r0, [r3, #0]
   1e4be:	f000 bad3 	b.w	1ea68 <_free_r>
   1e4c2:	bf00      	nop
   1e4c4:	2007c0e0 	.word	0x2007c0e0

0001e4c8 <__ascii_mbtowc>:
__ascii_mbtowc():
   1e4c8:	b082      	sub	sp, #8
   1e4ca:	b901      	cbnz	r1, 1e4ce <__ascii_mbtowc+0x6>
   1e4cc:	a901      	add	r1, sp, #4
   1e4ce:	b142      	cbz	r2, 1e4e2 <__ascii_mbtowc+0x1a>
   1e4d0:	b14b      	cbz	r3, 1e4e6 <__ascii_mbtowc+0x1e>
   1e4d2:	7813      	ldrb	r3, [r2, #0]
   1e4d4:	600b      	str	r3, [r1, #0]
   1e4d6:	7812      	ldrb	r2, [r2, #0]
   1e4d8:	1c10      	adds	r0, r2, #0
   1e4da:	bf18      	it	ne
   1e4dc:	2001      	movne	r0, #1
   1e4de:	b002      	add	sp, #8
   1e4e0:	4770      	bx	lr
   1e4e2:	4610      	mov	r0, r2
   1e4e4:	e7fb      	b.n	1e4de <__ascii_mbtowc+0x16>
   1e4e6:	f06f 0001 	mvn.w	r0, #1
   1e4ea:	e7f8      	b.n	1e4de <__ascii_mbtowc+0x16>

0001e4ec <memchr>:
memchr():
   1e4ec:	b510      	push	{r4, lr}
   1e4ee:	b2c9      	uxtb	r1, r1
   1e4f0:	4402      	add	r2, r0
   1e4f2:	4290      	cmp	r0, r2
   1e4f4:	4603      	mov	r3, r0
   1e4f6:	d101      	bne.n	1e4fc <memchr+0x10>
   1e4f8:	2000      	movs	r0, #0
   1e4fa:	bd10      	pop	{r4, pc}
   1e4fc:	781c      	ldrb	r4, [r3, #0]
   1e4fe:	3001      	adds	r0, #1
   1e500:	428c      	cmp	r4, r1
   1e502:	d1f6      	bne.n	1e4f2 <memchr+0x6>
   1e504:	4618      	mov	r0, r3
   1e506:	bd10      	pop	{r4, pc}

0001e508 <memcmp>:
memcmp():
   1e508:	b510      	push	{r4, lr}
   1e50a:	3901      	subs	r1, #1
   1e50c:	4402      	add	r2, r0
   1e50e:	4290      	cmp	r0, r2
   1e510:	d101      	bne.n	1e516 <memcmp+0xe>
   1e512:	2000      	movs	r0, #0
   1e514:	bd10      	pop	{r4, pc}
   1e516:	f810 3b01 	ldrb.w	r3, [r0], #1
   1e51a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1e51e:	42a3      	cmp	r3, r4
   1e520:	d0f5      	beq.n	1e50e <memcmp+0x6>
   1e522:	1b18      	subs	r0, r3, r4
   1e524:	bd10      	pop	{r4, pc}

0001e526 <memcpy>:
memcpy():
   1e526:	b510      	push	{r4, lr}
   1e528:	1e43      	subs	r3, r0, #1
   1e52a:	440a      	add	r2, r1
   1e52c:	4291      	cmp	r1, r2
   1e52e:	d100      	bne.n	1e532 <memcpy+0xc>
   1e530:	bd10      	pop	{r4, pc}
   1e532:	f811 4b01 	ldrb.w	r4, [r1], #1
   1e536:	f803 4f01 	strb.w	r4, [r3, #1]!
   1e53a:	e7f7      	b.n	1e52c <memcpy+0x6>

0001e53c <memmove>:
memmove():
   1e53c:	4288      	cmp	r0, r1
   1e53e:	b510      	push	{r4, lr}
   1e540:	eb01 0302 	add.w	r3, r1, r2
   1e544:	d803      	bhi.n	1e54e <memmove+0x12>
   1e546:	1e42      	subs	r2, r0, #1
   1e548:	4299      	cmp	r1, r3
   1e54a:	d10c      	bne.n	1e566 <memmove+0x2a>
   1e54c:	bd10      	pop	{r4, pc}
   1e54e:	4298      	cmp	r0, r3
   1e550:	d2f9      	bcs.n	1e546 <memmove+0xa>
   1e552:	1881      	adds	r1, r0, r2
   1e554:	1ad2      	subs	r2, r2, r3
   1e556:	42d3      	cmn	r3, r2
   1e558:	d100      	bne.n	1e55c <memmove+0x20>
   1e55a:	bd10      	pop	{r4, pc}
   1e55c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   1e560:	f801 4d01 	strb.w	r4, [r1, #-1]!
   1e564:	e7f7      	b.n	1e556 <memmove+0x1a>
   1e566:	f811 4b01 	ldrb.w	r4, [r1], #1
   1e56a:	f802 4f01 	strb.w	r4, [r2, #1]!
   1e56e:	e7eb      	b.n	1e548 <memmove+0xc>

0001e570 <memset>:
memset():
   1e570:	4603      	mov	r3, r0
   1e572:	4402      	add	r2, r0
   1e574:	4293      	cmp	r3, r2
   1e576:	d100      	bne.n	1e57a <memset+0xa>
   1e578:	4770      	bx	lr
   1e57a:	f803 1b01 	strb.w	r1, [r3], #1
   1e57e:	e7f9      	b.n	1e574 <memset+0x4>

0001e580 <validate_structure>:
validate_structure():
   1e580:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1e582:	6801      	ldr	r1, [r0, #0]
   1e584:	4604      	mov	r4, r0
   1e586:	293b      	cmp	r1, #59	; 0x3b
   1e588:	d911      	bls.n	1e5ae <validate_structure+0x2e>
   1e58a:	223c      	movs	r2, #60	; 0x3c
   1e58c:	4668      	mov	r0, sp
   1e58e:	f003 f8eb 	bl	21768 <div>
   1e592:	9a01      	ldr	r2, [sp, #4]
   1e594:	6863      	ldr	r3, [r4, #4]
   1e596:	9900      	ldr	r1, [sp, #0]
   1e598:	2a00      	cmp	r2, #0
   1e59a:	440b      	add	r3, r1
   1e59c:	6063      	str	r3, [r4, #4]
   1e59e:	bfbb      	ittet	lt
   1e5a0:	323c      	addlt	r2, #60	; 0x3c
   1e5a2:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5a6:	6022      	strge	r2, [r4, #0]
   1e5a8:	6022      	strlt	r2, [r4, #0]
   1e5aa:	bfb8      	it	lt
   1e5ac:	6063      	strlt	r3, [r4, #4]
   1e5ae:	6861      	ldr	r1, [r4, #4]
   1e5b0:	293b      	cmp	r1, #59	; 0x3b
   1e5b2:	d911      	bls.n	1e5d8 <validate_structure+0x58>
   1e5b4:	223c      	movs	r2, #60	; 0x3c
   1e5b6:	4668      	mov	r0, sp
   1e5b8:	f003 f8d6 	bl	21768 <div>
   1e5bc:	9a01      	ldr	r2, [sp, #4]
   1e5be:	68a3      	ldr	r3, [r4, #8]
   1e5c0:	9900      	ldr	r1, [sp, #0]
   1e5c2:	2a00      	cmp	r2, #0
   1e5c4:	440b      	add	r3, r1
   1e5c6:	60a3      	str	r3, [r4, #8]
   1e5c8:	bfbb      	ittet	lt
   1e5ca:	323c      	addlt	r2, #60	; 0x3c
   1e5cc:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5d0:	6062      	strge	r2, [r4, #4]
   1e5d2:	6062      	strlt	r2, [r4, #4]
   1e5d4:	bfb8      	it	lt
   1e5d6:	60a3      	strlt	r3, [r4, #8]
   1e5d8:	68a1      	ldr	r1, [r4, #8]
   1e5da:	2917      	cmp	r1, #23
   1e5dc:	d911      	bls.n	1e602 <validate_structure+0x82>
   1e5de:	2218      	movs	r2, #24
   1e5e0:	4668      	mov	r0, sp
   1e5e2:	f003 f8c1 	bl	21768 <div>
   1e5e6:	9a01      	ldr	r2, [sp, #4]
   1e5e8:	68e3      	ldr	r3, [r4, #12]
   1e5ea:	9900      	ldr	r1, [sp, #0]
   1e5ec:	2a00      	cmp	r2, #0
   1e5ee:	440b      	add	r3, r1
   1e5f0:	60e3      	str	r3, [r4, #12]
   1e5f2:	bfbb      	ittet	lt
   1e5f4:	3218      	addlt	r2, #24
   1e5f6:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e5fa:	60a2      	strge	r2, [r4, #8]
   1e5fc:	60a2      	strlt	r2, [r4, #8]
   1e5fe:	bfb8      	it	lt
   1e600:	60e3      	strlt	r3, [r4, #12]
   1e602:	6921      	ldr	r1, [r4, #16]
   1e604:	290b      	cmp	r1, #11
   1e606:	d911      	bls.n	1e62c <validate_structure+0xac>
   1e608:	220c      	movs	r2, #12
   1e60a:	4668      	mov	r0, sp
   1e60c:	f003 f8ac 	bl	21768 <div>
   1e610:	9a01      	ldr	r2, [sp, #4]
   1e612:	6963      	ldr	r3, [r4, #20]
   1e614:	9900      	ldr	r1, [sp, #0]
   1e616:	2a00      	cmp	r2, #0
   1e618:	440b      	add	r3, r1
   1e61a:	6163      	str	r3, [r4, #20]
   1e61c:	bfbb      	ittet	lt
   1e61e:	320c      	addlt	r2, #12
   1e620:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1e624:	6122      	strge	r2, [r4, #16]
   1e626:	6122      	strlt	r2, [r4, #16]
   1e628:	bfb8      	it	lt
   1e62a:	6163      	strlt	r3, [r4, #20]
   1e62c:	6963      	ldr	r3, [r4, #20]
   1e62e:	0799      	lsls	r1, r3, #30
   1e630:	d143      	bne.n	1e6ba <validate_structure+0x13a>
   1e632:	2164      	movs	r1, #100	; 0x64
   1e634:	fb93 f2f1 	sdiv	r2, r3, r1
   1e638:	fb01 3212 	mls	r2, r1, r2, r3
   1e63c:	2a00      	cmp	r2, #0
   1e63e:	d13e      	bne.n	1e6be <validate_structure+0x13e>
   1e640:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e644:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1e648:	fb93 f2f1 	sdiv	r2, r3, r1
   1e64c:	fb01 3312 	mls	r3, r1, r2, r3
   1e650:	2b00      	cmp	r3, #0
   1e652:	bf14      	ite	ne
   1e654:	231c      	movne	r3, #28
   1e656:	231d      	moveq	r3, #29
   1e658:	68e2      	ldr	r2, [r4, #12]
   1e65a:	2a00      	cmp	r2, #0
   1e65c:	dd31      	ble.n	1e6c2 <validate_structure+0x142>
   1e65e:	2602      	movs	r6, #2
   1e660:	f04f 0e00 	mov.w	lr, #0
   1e664:	2064      	movs	r0, #100	; 0x64
   1e666:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1e66a:	4f34      	ldr	r7, [pc, #208]	; (1e73c <validate_structure+0x1bc>)
   1e66c:	6921      	ldr	r1, [r4, #16]
   1e66e:	68e2      	ldr	r2, [r4, #12]
   1e670:	2901      	cmp	r1, #1
   1e672:	d05d      	beq.n	1e730 <validate_structure+0x1b0>
   1e674:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   1e678:	4562      	cmp	r2, ip
   1e67a:	dd2c      	ble.n	1e6d6 <validate_structure+0x156>
   1e67c:	3101      	adds	r1, #1
   1e67e:	eba2 020c 	sub.w	r2, r2, ip
   1e682:	290c      	cmp	r1, #12
   1e684:	60e2      	str	r2, [r4, #12]
   1e686:	6121      	str	r1, [r4, #16]
   1e688:	d1f0      	bne.n	1e66c <validate_structure+0xec>
   1e68a:	6963      	ldr	r3, [r4, #20]
   1e68c:	f8c4 e010 	str.w	lr, [r4, #16]
   1e690:	1c5a      	adds	r2, r3, #1
   1e692:	0791      	lsls	r1, r2, #30
   1e694:	6162      	str	r2, [r4, #20]
   1e696:	d147      	bne.n	1e728 <validate_structure+0x1a8>
   1e698:	fb92 f1f0 	sdiv	r1, r2, r0
   1e69c:	fb00 2211 	mls	r2, r0, r1, r2
   1e6a0:	2a00      	cmp	r2, #0
   1e6a2:	d143      	bne.n	1e72c <validate_structure+0x1ac>
   1e6a4:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1e6a8:	fb93 f2f5 	sdiv	r2, r3, r5
   1e6ac:	fb05 3312 	mls	r3, r5, r2, r3
   1e6b0:	2b00      	cmp	r3, #0
   1e6b2:	bf14      	ite	ne
   1e6b4:	231c      	movne	r3, #28
   1e6b6:	231d      	moveq	r3, #29
   1e6b8:	e7d8      	b.n	1e66c <validate_structure+0xec>
   1e6ba:	231c      	movs	r3, #28
   1e6bc:	e7cc      	b.n	1e658 <validate_structure+0xd8>
   1e6be:	231d      	movs	r3, #29
   1e6c0:	e7ca      	b.n	1e658 <validate_structure+0xd8>
   1e6c2:	260b      	movs	r6, #11
   1e6c4:	2064      	movs	r0, #100	; 0x64
   1e6c6:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1e6ca:	4f1c      	ldr	r7, [pc, #112]	; (1e73c <validate_structure+0x1bc>)
   1e6cc:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1e6d0:	f1be 0f00 	cmp.w	lr, #0
   1e6d4:	dd01      	ble.n	1e6da <validate_structure+0x15a>
   1e6d6:	b003      	add	sp, #12
   1e6d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1e6da:	6921      	ldr	r1, [r4, #16]
   1e6dc:	3901      	subs	r1, #1
   1e6de:	6121      	str	r1, [r4, #16]
   1e6e0:	3101      	adds	r1, #1
   1e6e2:	d114      	bne.n	1e70e <validate_structure+0x18e>
   1e6e4:	6963      	ldr	r3, [r4, #20]
   1e6e6:	6126      	str	r6, [r4, #16]
   1e6e8:	1e59      	subs	r1, r3, #1
   1e6ea:	078a      	lsls	r2, r1, #30
   1e6ec:	6161      	str	r1, [r4, #20]
   1e6ee:	d117      	bne.n	1e720 <validate_structure+0x1a0>
   1e6f0:	fb91 f2f0 	sdiv	r2, r1, r0
   1e6f4:	fb00 1112 	mls	r1, r0, r2, r1
   1e6f8:	b9a1      	cbnz	r1, 1e724 <validate_structure+0x1a4>
   1e6fa:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1e6fe:	fb93 f2f5 	sdiv	r2, r3, r5
   1e702:	fb05 3312 	mls	r3, r5, r2, r3
   1e706:	2b00      	cmp	r3, #0
   1e708:	bf14      	ite	ne
   1e70a:	231c      	movne	r3, #28
   1e70c:	231d      	moveq	r3, #29
   1e70e:	6922      	ldr	r2, [r4, #16]
   1e710:	2a01      	cmp	r2, #1
   1e712:	bf0c      	ite	eq
   1e714:	461a      	moveq	r2, r3
   1e716:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1e71a:	4472      	add	r2, lr
   1e71c:	60e2      	str	r2, [r4, #12]
   1e71e:	e7d5      	b.n	1e6cc <validate_structure+0x14c>
   1e720:	231c      	movs	r3, #28
   1e722:	e7f4      	b.n	1e70e <validate_structure+0x18e>
   1e724:	231d      	movs	r3, #29
   1e726:	e7f2      	b.n	1e70e <validate_structure+0x18e>
   1e728:	231c      	movs	r3, #28
   1e72a:	e79f      	b.n	1e66c <validate_structure+0xec>
   1e72c:	231d      	movs	r3, #29
   1e72e:	e79d      	b.n	1e66c <validate_structure+0xec>
   1e730:	4293      	cmp	r3, r2
   1e732:	dad0      	bge.n	1e6d6 <validate_structure+0x156>
   1e734:	1ad2      	subs	r2, r2, r3
   1e736:	60e2      	str	r2, [r4, #12]
   1e738:	6126      	str	r6, [r4, #16]
   1e73a:	e797      	b.n	1e66c <validate_structure+0xec>
   1e73c:	00027a04 	.word	0x00027a04

0001e740 <mktime>:
mktime():
   1e740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e744:	4681      	mov	r9, r0
   1e746:	f004 fa43 	bl	22bd0 <__gettzinfo>
   1e74a:	253c      	movs	r5, #60	; 0x3c
   1e74c:	4680      	mov	r8, r0
   1e74e:	4648      	mov	r0, r9
   1e750:	f7ff ff16 	bl	1e580 <validate_structure>
   1e754:	e899 0081 	ldmia.w	r9, {r0, r7}
   1e758:	fb05 0707 	mla	r7, r5, r7, r0
   1e75c:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   1e760:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1e764:	4ab1      	ldr	r2, [pc, #708]	; (1ea2c <mktime+0x2ec>)
   1e766:	f8d9 400c 	ldr.w	r4, [r9, #12]
   1e76a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1e76e:	f8d9 0008 	ldr.w	r0, [r9, #8]
   1e772:	3c01      	subs	r4, #1
   1e774:	2b01      	cmp	r3, #1
   1e776:	fb05 7000 	mla	r0, r5, r0, r7
   1e77a:	4414      	add	r4, r2
   1e77c:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1e780:	dd11      	ble.n	1e7a6 <mktime+0x66>
   1e782:	0799      	lsls	r1, r3, #30
   1e784:	d10f      	bne.n	1e7a6 <mktime+0x66>
   1e786:	2164      	movs	r1, #100	; 0x64
   1e788:	fb93 f2f1 	sdiv	r2, r3, r1
   1e78c:	fb01 3212 	mls	r2, r1, r2, r3
   1e790:	b942      	cbnz	r2, 1e7a4 <mktime+0x64>
   1e792:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e796:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1e79a:	fb95 f2f1 	sdiv	r2, r5, r1
   1e79e:	fb01 5212 	mls	r2, r1, r2, r5
   1e7a2:	b902      	cbnz	r2, 1e7a6 <mktime+0x66>
   1e7a4:	3401      	adds	r4, #1
   1e7a6:	f644 6120 	movw	r1, #20000	; 0x4e20
   1e7aa:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1e7ae:	3210      	adds	r2, #16
   1e7b0:	428a      	cmp	r2, r1
   1e7b2:	f8c9 401c 	str.w	r4, [r9, #28]
   1e7b6:	f200 812d 	bhi.w	1ea14 <mktime+0x2d4>
   1e7ba:	2b46      	cmp	r3, #70	; 0x46
   1e7bc:	dd70      	ble.n	1e8a0 <mktime+0x160>
   1e7be:	2546      	movs	r5, #70	; 0x46
   1e7c0:	f240 176d 	movw	r7, #365	; 0x16d
   1e7c4:	2164      	movs	r1, #100	; 0x64
   1e7c6:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1e7ca:	07aa      	lsls	r2, r5, #30
   1e7cc:	d162      	bne.n	1e894 <mktime+0x154>
   1e7ce:	fb95 f2f1 	sdiv	r2, r5, r1
   1e7d2:	fb01 5212 	mls	r2, r1, r2, r5
   1e7d6:	2a00      	cmp	r2, #0
   1e7d8:	d15f      	bne.n	1e89a <mktime+0x15a>
   1e7da:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   1e7de:	fb9e f2f6 	sdiv	r2, lr, r6
   1e7e2:	fb06 e212 	mls	r2, r6, r2, lr
   1e7e6:	2a00      	cmp	r2, #0
   1e7e8:	bf14      	ite	ne
   1e7ea:	463a      	movne	r2, r7
   1e7ec:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e7f0:	3501      	adds	r5, #1
   1e7f2:	42ab      	cmp	r3, r5
   1e7f4:	4414      	add	r4, r2
   1e7f6:	d1e8      	bne.n	1e7ca <mktime+0x8a>
   1e7f8:	4f8d      	ldr	r7, [pc, #564]	; (1ea30 <mktime+0x2f0>)
   1e7fa:	fb07 0704 	mla	r7, r7, r4, r0
   1e7fe:	f002 fc95 	bl	2112c <__tz_lock>
   1e802:	f002 fc95 	bl	21130 <_tzset_unlocked>
   1e806:	4b8b      	ldr	r3, [pc, #556]	; (1ea34 <mktime+0x2f4>)
   1e808:	681e      	ldr	r6, [r3, #0]
   1e80a:	2e00      	cmp	r6, #0
   1e80c:	f000 810a 	beq.w	1ea24 <mktime+0x2e4>
   1e810:	f8d9 3020 	ldr.w	r3, [r9, #32]
   1e814:	f8d9 0014 	ldr.w	r0, [r9, #20]
   1e818:	2b01      	cmp	r3, #1
   1e81a:	bfa8      	it	ge
   1e81c:	2301      	movge	r3, #1
   1e81e:	469a      	mov	sl, r3
   1e820:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1e824:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1e828:	4298      	cmp	r0, r3
   1e82a:	d17c      	bne.n	1e926 <mktime+0x1e6>
   1e82c:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   1e830:	f8d8 3020 	ldr.w	r3, [r8, #32]
   1e834:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   1e838:	f8d8 101c 	ldr.w	r1, [r8, #28]
   1e83c:	1ad6      	subs	r6, r2, r3
   1e83e:	42b7      	cmp	r7, r6
   1e840:	eba1 0100 	sub.w	r1, r1, r0
   1e844:	da76      	bge.n	1e934 <mktime+0x1f4>
   1e846:	f8d8 2000 	ldr.w	r2, [r8]
   1e84a:	2a00      	cmp	r2, #0
   1e84c:	d076      	beq.n	1e93c <mktime+0x1fc>
   1e84e:	428f      	cmp	r7, r1
   1e850:	f2c0 80e3 	blt.w	1ea1a <mktime+0x2da>
   1e854:	42b7      	cmp	r7, r6
   1e856:	bfac      	ite	ge
   1e858:	2600      	movge	r6, #0
   1e85a:	2601      	movlt	r6, #1
   1e85c:	f1ba 0f00 	cmp.w	sl, #0
   1e860:	da72      	bge.n	1e948 <mktime+0x208>
   1e862:	2e01      	cmp	r6, #1
   1e864:	f040 80de 	bne.w	1ea24 <mktime+0x2e4>
   1e868:	2601      	movs	r6, #1
   1e86a:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1e86e:	443d      	add	r5, r7
   1e870:	f002 fc5d 	bl	2112e <__tz_unlock>
   1e874:	2307      	movs	r3, #7
   1e876:	3404      	adds	r4, #4
   1e878:	fb94 f3f3 	sdiv	r3, r4, r3
   1e87c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1e880:	1ae4      	subs	r4, r4, r3
   1e882:	bf48      	it	mi
   1e884:	3407      	addmi	r4, #7
   1e886:	f8c9 6020 	str.w	r6, [r9, #32]
   1e88a:	f8c9 4018 	str.w	r4, [r9, #24]
   1e88e:	4628      	mov	r0, r5
   1e890:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e894:	f240 126d 	movw	r2, #365	; 0x16d
   1e898:	e7aa      	b.n	1e7f0 <mktime+0xb0>
   1e89a:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1e89e:	e7a7      	b.n	1e7f0 <mktime+0xb0>
   1e8a0:	d01e      	beq.n	1e8e0 <mktime+0x1a0>
   1e8a2:	2245      	movs	r2, #69	; 0x45
   1e8a4:	f240 176d 	movw	r7, #365	; 0x16d
   1e8a8:	2564      	movs	r5, #100	; 0x64
   1e8aa:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1e8ae:	429a      	cmp	r2, r3
   1e8b0:	dc18      	bgt.n	1e8e4 <mktime+0x1a4>
   1e8b2:	079d      	lsls	r5, r3, #30
   1e8b4:	d131      	bne.n	1e91a <mktime+0x1da>
   1e8b6:	2164      	movs	r1, #100	; 0x64
   1e8b8:	fb93 f2f1 	sdiv	r2, r3, r1
   1e8bc:	fb01 3212 	mls	r2, r1, r2, r3
   1e8c0:	bb72      	cbnz	r2, 1e920 <mktime+0x1e0>
   1e8c2:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e8c6:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1e8ca:	fb95 f2f1 	sdiv	r2, r5, r1
   1e8ce:	fb01 5212 	mls	r2, r1, r2, r5
   1e8d2:	2a00      	cmp	r2, #0
   1e8d4:	f240 126d 	movw	r2, #365	; 0x16d
   1e8d8:	bf08      	it	eq
   1e8da:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e8de:	1aa4      	subs	r4, r4, r2
   1e8e0:	461d      	mov	r5, r3
   1e8e2:	e789      	b.n	1e7f8 <mktime+0xb8>
   1e8e4:	0791      	lsls	r1, r2, #30
   1e8e6:	d112      	bne.n	1e90e <mktime+0x1ce>
   1e8e8:	fb92 f1f5 	sdiv	r1, r2, r5
   1e8ec:	fb05 2111 	mls	r1, r5, r1, r2
   1e8f0:	b981      	cbnz	r1, 1e914 <mktime+0x1d4>
   1e8f2:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1e8f6:	fb9e f1f6 	sdiv	r1, lr, r6
   1e8fa:	fb06 e111 	mls	r1, r6, r1, lr
   1e8fe:	2900      	cmp	r1, #0
   1e900:	bf14      	ite	ne
   1e902:	4639      	movne	r1, r7
   1e904:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1e908:	1a64      	subs	r4, r4, r1
   1e90a:	3a01      	subs	r2, #1
   1e90c:	e7cf      	b.n	1e8ae <mktime+0x16e>
   1e90e:	f240 116d 	movw	r1, #365	; 0x16d
   1e912:	e7f9      	b.n	1e908 <mktime+0x1c8>
   1e914:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1e918:	e7f6      	b.n	1e908 <mktime+0x1c8>
   1e91a:	f240 126d 	movw	r2, #365	; 0x16d
   1e91e:	e7de      	b.n	1e8de <mktime+0x19e>
   1e920:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1e924:	e7db      	b.n	1e8de <mktime+0x19e>
   1e926:	f002 fb59 	bl	20fdc <__tzcalc_limits>
   1e92a:	2800      	cmp	r0, #0
   1e92c:	f47f af7e 	bne.w	1e82c <mktime+0xec>
   1e930:	4656      	mov	r6, sl
   1e932:	e796      	b.n	1e862 <mktime+0x122>
   1e934:	1a12      	subs	r2, r2, r0
   1e936:	4297      	cmp	r7, r2
   1e938:	dbfa      	blt.n	1e930 <mktime+0x1f0>
   1e93a:	e784      	b.n	1e846 <mktime+0x106>
   1e93c:	428f      	cmp	r7, r1
   1e93e:	db89      	blt.n	1e854 <mktime+0x114>
   1e940:	f1ba 0f00 	cmp.w	sl, #0
   1e944:	db90      	blt.n	1e868 <mktime+0x128>
   1e946:	2601      	movs	r6, #1
   1e948:	ea8a 0a06 	eor.w	sl, sl, r6
   1e94c:	f1ba 0f01 	cmp.w	sl, #1
   1e950:	d187      	bne.n	1e862 <mktime+0x122>
   1e952:	1a1b      	subs	r3, r3, r0
   1e954:	b906      	cbnz	r6, 1e958 <mktime+0x218>
   1e956:	425b      	negs	r3, r3
   1e958:	f8d9 2000 	ldr.w	r2, [r9]
   1e95c:	4648      	mov	r0, r9
   1e95e:	441a      	add	r2, r3
   1e960:	f8c9 2000 	str.w	r2, [r9]
   1e964:	441f      	add	r7, r3
   1e966:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   1e96a:	f7ff fe09 	bl	1e580 <validate_structure>
   1e96e:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1e972:	ebb3 030a 	subs.w	r3, r3, sl
   1e976:	f43f af74 	beq.w	1e862 <mktime+0x122>
   1e97a:	2b01      	cmp	r3, #1
   1e97c:	dc21      	bgt.n	1e9c2 <mktime+0x282>
   1e97e:	1c98      	adds	r0, r3, #2
   1e980:	bfd8      	it	le
   1e982:	2301      	movle	r3, #1
   1e984:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1e988:	441c      	add	r4, r3
   1e98a:	189b      	adds	r3, r3, r2
   1e98c:	d522      	bpl.n	1e9d4 <mktime+0x294>
   1e98e:	1e6a      	subs	r2, r5, #1
   1e990:	0791      	lsls	r1, r2, #30
   1e992:	d119      	bne.n	1e9c8 <mktime+0x288>
   1e994:	2164      	movs	r1, #100	; 0x64
   1e996:	fb92 f3f1 	sdiv	r3, r2, r1
   1e99a:	fb01 2313 	mls	r3, r1, r3, r2
   1e99e:	b9b3      	cbnz	r3, 1e9ce <mktime+0x28e>
   1e9a0:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e9a4:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1e9a8:	fb95 f3f2 	sdiv	r3, r5, r2
   1e9ac:	fb02 5513 	mls	r5, r2, r3, r5
   1e9b0:	2d00      	cmp	r5, #0
   1e9b2:	f240 136d 	movw	r3, #365	; 0x16d
   1e9b6:	bf18      	it	ne
   1e9b8:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1e9bc:	f8c9 301c 	str.w	r3, [r9, #28]
   1e9c0:	e74f      	b.n	1e862 <mktime+0x122>
   1e9c2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e9c6:	e7dd      	b.n	1e984 <mktime+0x244>
   1e9c8:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1e9cc:	e7f6      	b.n	1e9bc <mktime+0x27c>
   1e9ce:	f240 136d 	movw	r3, #365	; 0x16d
   1e9d2:	e7f3      	b.n	1e9bc <mktime+0x27c>
   1e9d4:	07aa      	lsls	r2, r5, #30
   1e9d6:	d117      	bne.n	1ea08 <mktime+0x2c8>
   1e9d8:	2164      	movs	r1, #100	; 0x64
   1e9da:	fb95 f2f1 	sdiv	r2, r5, r1
   1e9de:	fb01 5212 	mls	r2, r1, r2, r5
   1e9e2:	b9a2      	cbnz	r2, 1ea0e <mktime+0x2ce>
   1e9e4:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e9e8:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   1e9ec:	fb95 f2f1 	sdiv	r2, r5, r1
   1e9f0:	fb01 5512 	mls	r5, r1, r2, r5
   1e9f4:	2d00      	cmp	r5, #0
   1e9f6:	f240 126d 	movw	r2, #365	; 0x16d
   1e9fa:	bf08      	it	eq
   1e9fc:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1ea00:	429a      	cmp	r2, r3
   1ea02:	bfd8      	it	le
   1ea04:	1a9b      	suble	r3, r3, r2
   1ea06:	e7d9      	b.n	1e9bc <mktime+0x27c>
   1ea08:	f240 126d 	movw	r2, #365	; 0x16d
   1ea0c:	e7f8      	b.n	1ea00 <mktime+0x2c0>
   1ea0e:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1ea12:	e7f5      	b.n	1ea00 <mktime+0x2c0>
   1ea14:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1ea18:	e739      	b.n	1e88e <mktime+0x14e>
   1ea1a:	f1ba 0f00 	cmp.w	sl, #0
   1ea1e:	f04f 0600 	mov.w	r6, #0
   1ea22:	da91      	bge.n	1e948 <mktime+0x208>
   1ea24:	f8d8 5020 	ldr.w	r5, [r8, #32]
   1ea28:	443d      	add	r5, r7
   1ea2a:	e721      	b.n	1e870 <mktime+0x130>
   1ea2c:	00027a34 	.word	0x00027a34
   1ea30:	00015180 	.word	0x00015180
   1ea34:	2007c8e0 	.word	0x2007c8e0

0001ea38 <mallinfo>:
mallinfo():
   1ea38:	b510      	push	{r4, lr}
   1ea3a:	4604      	mov	r4, r0
   1ea3c:	4b02      	ldr	r3, [pc, #8]	; (1ea48 <mallinfo+0x10>)
   1ea3e:	6819      	ldr	r1, [r3, #0]
   1ea40:	f000 f85e 	bl	1eb00 <_mallinfo_r>
   1ea44:	4620      	mov	r0, r4
   1ea46:	bd10      	pop	{r4, pc}
   1ea48:	2007c0e0 	.word	0x2007c0e0

0001ea4c <_calloc_r>:
_calloc_r():
   1ea4c:	b538      	push	{r3, r4, r5, lr}
   1ea4e:	fb02 f401 	mul.w	r4, r2, r1
   1ea52:	4621      	mov	r1, r4
   1ea54:	f000 f886 	bl	1eb64 <_malloc_r>
   1ea58:	4605      	mov	r5, r0
   1ea5a:	b118      	cbz	r0, 1ea64 <_calloc_r+0x18>
   1ea5c:	4622      	mov	r2, r4
   1ea5e:	2100      	movs	r1, #0
   1ea60:	f7ff fd86 	bl	1e570 <memset>
   1ea64:	4628      	mov	r0, r5
   1ea66:	bd38      	pop	{r3, r4, r5, pc}

0001ea68 <_free_r>:
_free_r():
   1ea68:	b538      	push	{r3, r4, r5, lr}
   1ea6a:	4605      	mov	r5, r0
   1ea6c:	2900      	cmp	r1, #0
   1ea6e:	d043      	beq.n	1eaf8 <_free_r+0x90>
   1ea70:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1ea74:	1f0c      	subs	r4, r1, #4
   1ea76:	2b00      	cmp	r3, #0
   1ea78:	bfb8      	it	lt
   1ea7a:	18e4      	addlt	r4, r4, r3
   1ea7c:	f7f8 fa5a 	bl	16f34 <__malloc_lock>
   1ea80:	4a1e      	ldr	r2, [pc, #120]	; (1eafc <_free_r+0x94>)
   1ea82:	6813      	ldr	r3, [r2, #0]
   1ea84:	4610      	mov	r0, r2
   1ea86:	b933      	cbnz	r3, 1ea96 <_free_r+0x2e>
   1ea88:	6063      	str	r3, [r4, #4]
   1ea8a:	6014      	str	r4, [r2, #0]
   1ea8c:	4628      	mov	r0, r5
   1ea8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ea92:	f7f8 ba51 	b.w	16f38 <__malloc_unlock>
   1ea96:	42a3      	cmp	r3, r4
   1ea98:	d90b      	bls.n	1eab2 <_free_r+0x4a>
   1ea9a:	6821      	ldr	r1, [r4, #0]
   1ea9c:	1862      	adds	r2, r4, r1
   1ea9e:	4293      	cmp	r3, r2
   1eaa0:	bf01      	itttt	eq
   1eaa2:	681a      	ldreq	r2, [r3, #0]
   1eaa4:	685b      	ldreq	r3, [r3, #4]
   1eaa6:	1852      	addeq	r2, r2, r1
   1eaa8:	6022      	streq	r2, [r4, #0]
   1eaaa:	6063      	str	r3, [r4, #4]
   1eaac:	6004      	str	r4, [r0, #0]
   1eaae:	e7ed      	b.n	1ea8c <_free_r+0x24>
   1eab0:	4613      	mov	r3, r2
   1eab2:	685a      	ldr	r2, [r3, #4]
   1eab4:	b10a      	cbz	r2, 1eaba <_free_r+0x52>
   1eab6:	42a2      	cmp	r2, r4
   1eab8:	d9fa      	bls.n	1eab0 <_free_r+0x48>
   1eaba:	6819      	ldr	r1, [r3, #0]
   1eabc:	1858      	adds	r0, r3, r1
   1eabe:	42a0      	cmp	r0, r4
   1eac0:	d10b      	bne.n	1eada <_free_r+0x72>
   1eac2:	6820      	ldr	r0, [r4, #0]
   1eac4:	4401      	add	r1, r0
   1eac6:	1858      	adds	r0, r3, r1
   1eac8:	4282      	cmp	r2, r0
   1eaca:	6019      	str	r1, [r3, #0]
   1eacc:	d1de      	bne.n	1ea8c <_free_r+0x24>
   1eace:	6810      	ldr	r0, [r2, #0]
   1ead0:	6852      	ldr	r2, [r2, #4]
   1ead2:	4401      	add	r1, r0
   1ead4:	6019      	str	r1, [r3, #0]
   1ead6:	605a      	str	r2, [r3, #4]
   1ead8:	e7d8      	b.n	1ea8c <_free_r+0x24>
   1eada:	d902      	bls.n	1eae2 <_free_r+0x7a>
   1eadc:	230c      	movs	r3, #12
   1eade:	602b      	str	r3, [r5, #0]
   1eae0:	e7d4      	b.n	1ea8c <_free_r+0x24>
   1eae2:	6820      	ldr	r0, [r4, #0]
   1eae4:	1821      	adds	r1, r4, r0
   1eae6:	428a      	cmp	r2, r1
   1eae8:	bf01      	itttt	eq
   1eaea:	6811      	ldreq	r1, [r2, #0]
   1eaec:	6852      	ldreq	r2, [r2, #4]
   1eaee:	1809      	addeq	r1, r1, r0
   1eaf0:	6021      	streq	r1, [r4, #0]
   1eaf2:	6062      	str	r2, [r4, #4]
   1eaf4:	605c      	str	r4, [r3, #4]
   1eaf6:	e7c9      	b.n	1ea8c <_free_r+0x24>
   1eaf8:	bd38      	pop	{r3, r4, r5, pc}
   1eafa:	bf00      	nop
   1eafc:	2007c8bc 	.word	0x2007c8bc

0001eb00 <_mallinfo_r>:
_mallinfo_r():
   1eb00:	b570      	push	{r4, r5, r6, lr}
   1eb02:	4c15      	ldr	r4, [pc, #84]	; (1eb58 <_mallinfo_r+0x58>)
   1eb04:	4606      	mov	r6, r0
   1eb06:	4608      	mov	r0, r1
   1eb08:	460d      	mov	r5, r1
   1eb0a:	f7f8 fa13 	bl	16f34 <__malloc_lock>
   1eb0e:	6820      	ldr	r0, [r4, #0]
   1eb10:	b138      	cbz	r0, 1eb22 <_mallinfo_r+0x22>
   1eb12:	2100      	movs	r1, #0
   1eb14:	4628      	mov	r0, r5
   1eb16:	f001 f87f 	bl	1fc18 <_sbrk_r>
   1eb1a:	1c43      	adds	r3, r0, #1
   1eb1c:	bf1c      	itt	ne
   1eb1e:	6823      	ldrne	r3, [r4, #0]
   1eb20:	1ac0      	subne	r0, r0, r3
   1eb22:	4b0e      	ldr	r3, [pc, #56]	; (1eb5c <_mallinfo_r+0x5c>)
   1eb24:	681a      	ldr	r2, [r3, #0]
   1eb26:	2300      	movs	r3, #0
   1eb28:	b992      	cbnz	r2, 1eb50 <_mallinfo_r+0x50>
   1eb2a:	4c0d      	ldr	r4, [pc, #52]	; (1eb60 <_mallinfo_r+0x60>)
   1eb2c:	6020      	str	r0, [r4, #0]
   1eb2e:	1ac0      	subs	r0, r0, r3
   1eb30:	61e0      	str	r0, [r4, #28]
   1eb32:	4628      	mov	r0, r5
   1eb34:	4635      	mov	r5, r6
   1eb36:	6223      	str	r3, [r4, #32]
   1eb38:	f7f8 f9fe 	bl	16f38 <__malloc_unlock>
   1eb3c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1eb3e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1eb40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1eb42:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1eb44:	e894 0003 	ldmia.w	r4, {r0, r1}
   1eb48:	e885 0003 	stmia.w	r5, {r0, r1}
   1eb4c:	4630      	mov	r0, r6
   1eb4e:	bd70      	pop	{r4, r5, r6, pc}
   1eb50:	6811      	ldr	r1, [r2, #0]
   1eb52:	6852      	ldr	r2, [r2, #4]
   1eb54:	440b      	add	r3, r1
   1eb56:	e7e7      	b.n	1eb28 <_mallinfo_r+0x28>
   1eb58:	2007c8c0 	.word	0x2007c8c0
   1eb5c:	2007c8bc 	.word	0x2007c8bc
   1eb60:	2007c894 	.word	0x2007c894

0001eb64 <_malloc_r>:
_malloc_r():
   1eb64:	b570      	push	{r4, r5, r6, lr}
   1eb66:	1ccd      	adds	r5, r1, #3
   1eb68:	f025 0503 	bic.w	r5, r5, #3
   1eb6c:	3508      	adds	r5, #8
   1eb6e:	2d0c      	cmp	r5, #12
   1eb70:	bf38      	it	cc
   1eb72:	250c      	movcc	r5, #12
   1eb74:	2d00      	cmp	r5, #0
   1eb76:	4606      	mov	r6, r0
   1eb78:	db01      	blt.n	1eb7e <_malloc_r+0x1a>
   1eb7a:	42a9      	cmp	r1, r5
   1eb7c:	d903      	bls.n	1eb86 <_malloc_r+0x22>
   1eb7e:	230c      	movs	r3, #12
   1eb80:	6033      	str	r3, [r6, #0]
   1eb82:	2000      	movs	r0, #0
   1eb84:	bd70      	pop	{r4, r5, r6, pc}
   1eb86:	f7f8 f9d5 	bl	16f34 <__malloc_lock>
   1eb8a:	4a23      	ldr	r2, [pc, #140]	; (1ec18 <_malloc_r+0xb4>)
   1eb8c:	6814      	ldr	r4, [r2, #0]
   1eb8e:	4621      	mov	r1, r4
   1eb90:	b991      	cbnz	r1, 1ebb8 <_malloc_r+0x54>
   1eb92:	4c22      	ldr	r4, [pc, #136]	; (1ec1c <_malloc_r+0xb8>)
   1eb94:	6823      	ldr	r3, [r4, #0]
   1eb96:	b91b      	cbnz	r3, 1eba0 <_malloc_r+0x3c>
   1eb98:	4630      	mov	r0, r6
   1eb9a:	f001 f83d 	bl	1fc18 <_sbrk_r>
   1eb9e:	6020      	str	r0, [r4, #0]
   1eba0:	4629      	mov	r1, r5
   1eba2:	4630      	mov	r0, r6
   1eba4:	f001 f838 	bl	1fc18 <_sbrk_r>
   1eba8:	1c43      	adds	r3, r0, #1
   1ebaa:	d126      	bne.n	1ebfa <_malloc_r+0x96>
   1ebac:	230c      	movs	r3, #12
   1ebae:	4630      	mov	r0, r6
   1ebb0:	6033      	str	r3, [r6, #0]
   1ebb2:	f7f8 f9c1 	bl	16f38 <__malloc_unlock>
   1ebb6:	e7e4      	b.n	1eb82 <_malloc_r+0x1e>
   1ebb8:	680b      	ldr	r3, [r1, #0]
   1ebba:	1b5b      	subs	r3, r3, r5
   1ebbc:	d41a      	bmi.n	1ebf4 <_malloc_r+0x90>
   1ebbe:	2b0b      	cmp	r3, #11
   1ebc0:	d90f      	bls.n	1ebe2 <_malloc_r+0x7e>
   1ebc2:	600b      	str	r3, [r1, #0]
   1ebc4:	18cc      	adds	r4, r1, r3
   1ebc6:	50cd      	str	r5, [r1, r3]
   1ebc8:	4630      	mov	r0, r6
   1ebca:	f7f8 f9b5 	bl	16f38 <__malloc_unlock>
   1ebce:	f104 000b 	add.w	r0, r4, #11
   1ebd2:	1d23      	adds	r3, r4, #4
   1ebd4:	f020 0007 	bic.w	r0, r0, #7
   1ebd8:	1ac3      	subs	r3, r0, r3
   1ebda:	d01b      	beq.n	1ec14 <_malloc_r+0xb0>
   1ebdc:	425a      	negs	r2, r3
   1ebde:	50e2      	str	r2, [r4, r3]
   1ebe0:	bd70      	pop	{r4, r5, r6, pc}
   1ebe2:	428c      	cmp	r4, r1
   1ebe4:	bf0b      	itete	eq
   1ebe6:	6863      	ldreq	r3, [r4, #4]
   1ebe8:	684b      	ldrne	r3, [r1, #4]
   1ebea:	6013      	streq	r3, [r2, #0]
   1ebec:	6063      	strne	r3, [r4, #4]
   1ebee:	bf18      	it	ne
   1ebf0:	460c      	movne	r4, r1
   1ebf2:	e7e9      	b.n	1ebc8 <_malloc_r+0x64>
   1ebf4:	460c      	mov	r4, r1
   1ebf6:	6849      	ldr	r1, [r1, #4]
   1ebf8:	e7ca      	b.n	1eb90 <_malloc_r+0x2c>
   1ebfa:	1cc4      	adds	r4, r0, #3
   1ebfc:	f024 0403 	bic.w	r4, r4, #3
   1ec00:	42a0      	cmp	r0, r4
   1ec02:	d005      	beq.n	1ec10 <_malloc_r+0xac>
   1ec04:	1a21      	subs	r1, r4, r0
   1ec06:	4630      	mov	r0, r6
   1ec08:	f001 f806 	bl	1fc18 <_sbrk_r>
   1ec0c:	3001      	adds	r0, #1
   1ec0e:	d0cd      	beq.n	1ebac <_malloc_r+0x48>
   1ec10:	6025      	str	r5, [r4, #0]
   1ec12:	e7d9      	b.n	1ebc8 <_malloc_r+0x64>
   1ec14:	bd70      	pop	{r4, r5, r6, pc}
   1ec16:	bf00      	nop
   1ec18:	2007c8bc 	.word	0x2007c8bc
   1ec1c:	2007c8c0 	.word	0x2007c8c0

0001ec20 <__cvt>:
__cvt():
   1ec20:	2b00      	cmp	r3, #0
   1ec22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ec26:	461e      	mov	r6, r3
   1ec28:	bfbb      	ittet	lt
   1ec2a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1ec2e:	461e      	movlt	r6, r3
   1ec30:	2300      	movge	r3, #0
   1ec32:	232d      	movlt	r3, #45	; 0x2d
   1ec34:	b088      	sub	sp, #32
   1ec36:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1ec38:	9912      	ldr	r1, [sp, #72]	; 0x48
   1ec3a:	f027 0720 	bic.w	r7, r7, #32
   1ec3e:	2f46      	cmp	r7, #70	; 0x46
   1ec40:	4614      	mov	r4, r2
   1ec42:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1ec44:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1ec48:	700b      	strb	r3, [r1, #0]
   1ec4a:	d004      	beq.n	1ec56 <__cvt+0x36>
   1ec4c:	2f45      	cmp	r7, #69	; 0x45
   1ec4e:	d100      	bne.n	1ec52 <__cvt+0x32>
   1ec50:	3501      	adds	r5, #1
   1ec52:	2302      	movs	r3, #2
   1ec54:	e000      	b.n	1ec58 <__cvt+0x38>
   1ec56:	2303      	movs	r3, #3
   1ec58:	aa07      	add	r2, sp, #28
   1ec5a:	9204      	str	r2, [sp, #16]
   1ec5c:	aa06      	add	r2, sp, #24
   1ec5e:	9203      	str	r2, [sp, #12]
   1ec60:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1ec64:	4622      	mov	r2, r4
   1ec66:	4633      	mov	r3, r6
   1ec68:	f002 fe1e 	bl	218a8 <_dtoa_r>
   1ec6c:	2f47      	cmp	r7, #71	; 0x47
   1ec6e:	4680      	mov	r8, r0
   1ec70:	d102      	bne.n	1ec78 <__cvt+0x58>
   1ec72:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1ec74:	07db      	lsls	r3, r3, #31
   1ec76:	d526      	bpl.n	1ecc6 <__cvt+0xa6>
   1ec78:	2f46      	cmp	r7, #70	; 0x46
   1ec7a:	eb08 0905 	add.w	r9, r8, r5
   1ec7e:	d111      	bne.n	1eca4 <__cvt+0x84>
   1ec80:	f898 3000 	ldrb.w	r3, [r8]
   1ec84:	2b30      	cmp	r3, #48	; 0x30
   1ec86:	d10a      	bne.n	1ec9e <__cvt+0x7e>
   1ec88:	2200      	movs	r2, #0
   1ec8a:	2300      	movs	r3, #0
   1ec8c:	4620      	mov	r0, r4
   1ec8e:	4631      	mov	r1, r6
   1ec90:	f005 ff92 	bl	24bb8 <__aeabi_dcmpeq>
   1ec94:	b918      	cbnz	r0, 1ec9e <__cvt+0x7e>
   1ec96:	f1c5 0501 	rsb	r5, r5, #1
   1ec9a:	f8ca 5000 	str.w	r5, [sl]
   1ec9e:	f8da 3000 	ldr.w	r3, [sl]
   1eca2:	4499      	add	r9, r3
   1eca4:	2200      	movs	r2, #0
   1eca6:	2300      	movs	r3, #0
   1eca8:	4620      	mov	r0, r4
   1ecaa:	4631      	mov	r1, r6
   1ecac:	f005 ff84 	bl	24bb8 <__aeabi_dcmpeq>
   1ecb0:	b938      	cbnz	r0, 1ecc2 <__cvt+0xa2>
   1ecb2:	2230      	movs	r2, #48	; 0x30
   1ecb4:	9b07      	ldr	r3, [sp, #28]
   1ecb6:	4599      	cmp	r9, r3
   1ecb8:	d905      	bls.n	1ecc6 <__cvt+0xa6>
   1ecba:	1c59      	adds	r1, r3, #1
   1ecbc:	9107      	str	r1, [sp, #28]
   1ecbe:	701a      	strb	r2, [r3, #0]
   1ecc0:	e7f8      	b.n	1ecb4 <__cvt+0x94>
   1ecc2:	f8cd 901c 	str.w	r9, [sp, #28]
   1ecc6:	4640      	mov	r0, r8
   1ecc8:	9b07      	ldr	r3, [sp, #28]
   1ecca:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1eccc:	eba3 0308 	sub.w	r3, r3, r8
   1ecd0:	6013      	str	r3, [r2, #0]
   1ecd2:	b008      	add	sp, #32
   1ecd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001ecd8 <__exponent>:
__exponent():
   1ecd8:	4603      	mov	r3, r0
   1ecda:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ecdc:	2900      	cmp	r1, #0
   1ecde:	f803 2b02 	strb.w	r2, [r3], #2
   1ece2:	bfb6      	itet	lt
   1ece4:	222d      	movlt	r2, #45	; 0x2d
   1ece6:	222b      	movge	r2, #43	; 0x2b
   1ece8:	4249      	neglt	r1, r1
   1ecea:	2909      	cmp	r1, #9
   1ecec:	7042      	strb	r2, [r0, #1]
   1ecee:	dd21      	ble.n	1ed34 <__exponent+0x5c>
   1ecf0:	f10d 0207 	add.w	r2, sp, #7
   1ecf4:	4617      	mov	r7, r2
   1ecf6:	260a      	movs	r6, #10
   1ecf8:	fb91 f5f6 	sdiv	r5, r1, r6
   1ecfc:	fb06 1115 	mls	r1, r6, r5, r1
   1ed00:	2d09      	cmp	r5, #9
   1ed02:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1ed06:	f802 1c01 	strb.w	r1, [r2, #-1]
   1ed0a:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   1ed0e:	4629      	mov	r1, r5
   1ed10:	dc09      	bgt.n	1ed26 <__exponent+0x4e>
   1ed12:	3130      	adds	r1, #48	; 0x30
   1ed14:	3a02      	subs	r2, #2
   1ed16:	f804 1c01 	strb.w	r1, [r4, #-1]
   1ed1a:	42ba      	cmp	r2, r7
   1ed1c:	461c      	mov	r4, r3
   1ed1e:	d304      	bcc.n	1ed2a <__exponent+0x52>
   1ed20:	1a20      	subs	r0, r4, r0
   1ed22:	b003      	add	sp, #12
   1ed24:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ed26:	4622      	mov	r2, r4
   1ed28:	e7e6      	b.n	1ecf8 <__exponent+0x20>
   1ed2a:	f812 1b01 	ldrb.w	r1, [r2], #1
   1ed2e:	f803 1b01 	strb.w	r1, [r3], #1
   1ed32:	e7f2      	b.n	1ed1a <__exponent+0x42>
   1ed34:	2230      	movs	r2, #48	; 0x30
   1ed36:	461c      	mov	r4, r3
   1ed38:	4411      	add	r1, r2
   1ed3a:	f804 2b02 	strb.w	r2, [r4], #2
   1ed3e:	7059      	strb	r1, [r3, #1]
   1ed40:	e7ee      	b.n	1ed20 <__exponent+0x48>
   1ed42:	Address 0x000000000001ed42 is out of bounds.


0001ed44 <_printf_float>:
_printf_float():
   1ed44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed48:	b091      	sub	sp, #68	; 0x44
   1ed4a:	460c      	mov	r4, r1
   1ed4c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   1ed4e:	4693      	mov	fp, r2
   1ed50:	461e      	mov	r6, r3
   1ed52:	4605      	mov	r5, r0
   1ed54:	f003 ffea 	bl	22d2c <_localeconv_r>
   1ed58:	6803      	ldr	r3, [r0, #0]
   1ed5a:	4618      	mov	r0, r3
   1ed5c:	9309      	str	r3, [sp, #36]	; 0x24
   1ed5e:	f001 f98d 	bl	2007c <strlen>
   1ed62:	2300      	movs	r3, #0
   1ed64:	930e      	str	r3, [sp, #56]	; 0x38
   1ed66:	683b      	ldr	r3, [r7, #0]
   1ed68:	900a      	str	r0, [sp, #40]	; 0x28
   1ed6a:	3307      	adds	r3, #7
   1ed6c:	f023 0307 	bic.w	r3, r3, #7
   1ed70:	f103 0208 	add.w	r2, r3, #8
   1ed74:	f894 8018 	ldrb.w	r8, [r4, #24]
   1ed78:	f8d4 a000 	ldr.w	sl, [r4]
   1ed7c:	603a      	str	r2, [r7, #0]
   1ed7e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1ed82:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1ed86:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   1ed8a:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   1ed8c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1ed90:	930b      	str	r3, [sp, #44]	; 0x2c
   1ed92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ed96:	4ba6      	ldr	r3, [pc, #664]	; (1f030 <_printf_float+0x2ec>)
   1ed98:	4638      	mov	r0, r7
   1ed9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1ed9c:	f005 ff3e 	bl	24c1c <__aeabi_dcmpun>
   1eda0:	2800      	cmp	r0, #0
   1eda2:	f040 81f7 	bne.w	1f194 <_printf_float+0x450>
   1eda6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1edaa:	4ba1      	ldr	r3, [pc, #644]	; (1f030 <_printf_float+0x2ec>)
   1edac:	4638      	mov	r0, r7
   1edae:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1edb0:	f005 ff16 	bl	24be0 <__aeabi_dcmple>
   1edb4:	2800      	cmp	r0, #0
   1edb6:	f040 81ed 	bne.w	1f194 <_printf_float+0x450>
   1edba:	2200      	movs	r2, #0
   1edbc:	2300      	movs	r3, #0
   1edbe:	4638      	mov	r0, r7
   1edc0:	4649      	mov	r1, r9
   1edc2:	f005 ff03 	bl	24bcc <__aeabi_dcmplt>
   1edc6:	b110      	cbz	r0, 1edce <_printf_float+0x8a>
   1edc8:	232d      	movs	r3, #45	; 0x2d
   1edca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1edce:	4b99      	ldr	r3, [pc, #612]	; (1f034 <_printf_float+0x2f0>)
   1edd0:	4f99      	ldr	r7, [pc, #612]	; (1f038 <_printf_float+0x2f4>)
   1edd2:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1edd6:	bf98      	it	ls
   1edd8:	461f      	movls	r7, r3
   1edda:	2303      	movs	r3, #3
   1eddc:	f04f 0900 	mov.w	r9, #0
   1ede0:	6123      	str	r3, [r4, #16]
   1ede2:	f02a 0304 	bic.w	r3, sl, #4
   1ede6:	6023      	str	r3, [r4, #0]
   1ede8:	9600      	str	r6, [sp, #0]
   1edea:	465b      	mov	r3, fp
   1edec:	aa0f      	add	r2, sp, #60	; 0x3c
   1edee:	4621      	mov	r1, r4
   1edf0:	4628      	mov	r0, r5
   1edf2:	f000 f9df 	bl	1f1b4 <_printf_common>
   1edf6:	3001      	adds	r0, #1
   1edf8:	f040 809a 	bne.w	1ef30 <_printf_float+0x1ec>
   1edfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ee00:	b011      	add	sp, #68	; 0x44
   1ee02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee06:	6862      	ldr	r2, [r4, #4]
   1ee08:	a80e      	add	r0, sp, #56	; 0x38
   1ee0a:	1c53      	adds	r3, r2, #1
   1ee0c:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1ee10:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   1ee14:	d141      	bne.n	1ee9a <_printf_float+0x156>
   1ee16:	2206      	movs	r2, #6
   1ee18:	6062      	str	r2, [r4, #4]
   1ee1a:	2100      	movs	r1, #0
   1ee1c:	6023      	str	r3, [r4, #0]
   1ee1e:	9301      	str	r3, [sp, #4]
   1ee20:	6863      	ldr	r3, [r4, #4]
   1ee22:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1ee26:	9005      	str	r0, [sp, #20]
   1ee28:	9202      	str	r2, [sp, #8]
   1ee2a:	9300      	str	r3, [sp, #0]
   1ee2c:	463a      	mov	r2, r7
   1ee2e:	464b      	mov	r3, r9
   1ee30:	9106      	str	r1, [sp, #24]
   1ee32:	f8cd 8010 	str.w	r8, [sp, #16]
   1ee36:	f8cd e00c 	str.w	lr, [sp, #12]
   1ee3a:	4628      	mov	r0, r5
   1ee3c:	f7ff fef0 	bl	1ec20 <__cvt>
   1ee40:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   1ee44:	2b47      	cmp	r3, #71	; 0x47
   1ee46:	4607      	mov	r7, r0
   1ee48:	d109      	bne.n	1ee5e <_printf_float+0x11a>
   1ee4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ee4c:	1cd8      	adds	r0, r3, #3
   1ee4e:	db02      	blt.n	1ee56 <_printf_float+0x112>
   1ee50:	6862      	ldr	r2, [r4, #4]
   1ee52:	4293      	cmp	r3, r2
   1ee54:	dd59      	ble.n	1ef0a <_printf_float+0x1c6>
   1ee56:	f1a8 0802 	sub.w	r8, r8, #2
   1ee5a:	fa5f f888 	uxtb.w	r8, r8
   1ee5e:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1ee62:	990d      	ldr	r1, [sp, #52]	; 0x34
   1ee64:	d836      	bhi.n	1eed4 <_printf_float+0x190>
   1ee66:	3901      	subs	r1, #1
   1ee68:	4642      	mov	r2, r8
   1ee6a:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1ee6e:	910d      	str	r1, [sp, #52]	; 0x34
   1ee70:	f7ff ff32 	bl	1ecd8 <__exponent>
   1ee74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ee76:	4681      	mov	r9, r0
   1ee78:	1883      	adds	r3, r0, r2
   1ee7a:	2a01      	cmp	r2, #1
   1ee7c:	6123      	str	r3, [r4, #16]
   1ee7e:	dc02      	bgt.n	1ee86 <_printf_float+0x142>
   1ee80:	6822      	ldr	r2, [r4, #0]
   1ee82:	07d1      	lsls	r1, r2, #31
   1ee84:	d501      	bpl.n	1ee8a <_printf_float+0x146>
   1ee86:	3301      	adds	r3, #1
   1ee88:	6123      	str	r3, [r4, #16]
   1ee8a:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1ee8e:	2b00      	cmp	r3, #0
   1ee90:	d0aa      	beq.n	1ede8 <_printf_float+0xa4>
   1ee92:	232d      	movs	r3, #45	; 0x2d
   1ee94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1ee98:	e7a6      	b.n	1ede8 <_printf_float+0xa4>
   1ee9a:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1ee9e:	d002      	beq.n	1eea6 <_printf_float+0x162>
   1eea0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1eea4:	d1b9      	bne.n	1ee1a <_printf_float+0xd6>
   1eea6:	b19a      	cbz	r2, 1eed0 <_printf_float+0x18c>
   1eea8:	2100      	movs	r1, #0
   1eeaa:	9106      	str	r1, [sp, #24]
   1eeac:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1eeb0:	e88d 000c 	stmia.w	sp, {r2, r3}
   1eeb4:	6023      	str	r3, [r4, #0]
   1eeb6:	9005      	str	r0, [sp, #20]
   1eeb8:	463a      	mov	r2, r7
   1eeba:	f8cd 8010 	str.w	r8, [sp, #16]
   1eebe:	f8cd e00c 	str.w	lr, [sp, #12]
   1eec2:	9102      	str	r1, [sp, #8]
   1eec4:	464b      	mov	r3, r9
   1eec6:	4628      	mov	r0, r5
   1eec8:	f7ff feaa 	bl	1ec20 <__cvt>
   1eecc:	4607      	mov	r7, r0
   1eece:	e7bc      	b.n	1ee4a <_printf_float+0x106>
   1eed0:	2201      	movs	r2, #1
   1eed2:	e7a1      	b.n	1ee18 <_printf_float+0xd4>
   1eed4:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   1eed8:	d119      	bne.n	1ef0e <_printf_float+0x1ca>
   1eeda:	2900      	cmp	r1, #0
   1eedc:	6863      	ldr	r3, [r4, #4]
   1eede:	dd0c      	ble.n	1eefa <_printf_float+0x1b6>
   1eee0:	6121      	str	r1, [r4, #16]
   1eee2:	b913      	cbnz	r3, 1eeea <_printf_float+0x1a6>
   1eee4:	6822      	ldr	r2, [r4, #0]
   1eee6:	07d2      	lsls	r2, r2, #31
   1eee8:	d502      	bpl.n	1eef0 <_printf_float+0x1ac>
   1eeea:	3301      	adds	r3, #1
   1eeec:	440b      	add	r3, r1
   1eeee:	6123      	str	r3, [r4, #16]
   1eef0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1eef2:	f04f 0900 	mov.w	r9, #0
   1eef6:	65a3      	str	r3, [r4, #88]	; 0x58
   1eef8:	e7c7      	b.n	1ee8a <_printf_float+0x146>
   1eefa:	b913      	cbnz	r3, 1ef02 <_printf_float+0x1be>
   1eefc:	6822      	ldr	r2, [r4, #0]
   1eefe:	07d0      	lsls	r0, r2, #31
   1ef00:	d501      	bpl.n	1ef06 <_printf_float+0x1c2>
   1ef02:	3302      	adds	r3, #2
   1ef04:	e7f3      	b.n	1eeee <_printf_float+0x1aa>
   1ef06:	2301      	movs	r3, #1
   1ef08:	e7f1      	b.n	1eeee <_printf_float+0x1aa>
   1ef0a:	f04f 0867 	mov.w	r8, #103	; 0x67
   1ef0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ef10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ef12:	4293      	cmp	r3, r2
   1ef14:	db05      	blt.n	1ef22 <_printf_float+0x1de>
   1ef16:	6822      	ldr	r2, [r4, #0]
   1ef18:	6123      	str	r3, [r4, #16]
   1ef1a:	07d1      	lsls	r1, r2, #31
   1ef1c:	d5e8      	bpl.n	1eef0 <_printf_float+0x1ac>
   1ef1e:	3301      	adds	r3, #1
   1ef20:	e7e5      	b.n	1eeee <_printf_float+0x1aa>
   1ef22:	2b00      	cmp	r3, #0
   1ef24:	bfcc      	ite	gt
   1ef26:	2301      	movgt	r3, #1
   1ef28:	f1c3 0302 	rsble	r3, r3, #2
   1ef2c:	4413      	add	r3, r2
   1ef2e:	e7de      	b.n	1eeee <_printf_float+0x1aa>
   1ef30:	6823      	ldr	r3, [r4, #0]
   1ef32:	055a      	lsls	r2, r3, #21
   1ef34:	d407      	bmi.n	1ef46 <_printf_float+0x202>
   1ef36:	6923      	ldr	r3, [r4, #16]
   1ef38:	463a      	mov	r2, r7
   1ef3a:	4659      	mov	r1, fp
   1ef3c:	4628      	mov	r0, r5
   1ef3e:	47b0      	blx	r6
   1ef40:	3001      	adds	r0, #1
   1ef42:	d12a      	bne.n	1ef9a <_printf_float+0x256>
   1ef44:	e75a      	b.n	1edfc <_printf_float+0xb8>
   1ef46:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1ef4a:	f240 80dc 	bls.w	1f106 <_printf_float+0x3c2>
   1ef4e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1ef52:	2200      	movs	r2, #0
   1ef54:	2300      	movs	r3, #0
   1ef56:	f005 fe2f 	bl	24bb8 <__aeabi_dcmpeq>
   1ef5a:	2800      	cmp	r0, #0
   1ef5c:	d039      	beq.n	1efd2 <_printf_float+0x28e>
   1ef5e:	2301      	movs	r3, #1
   1ef60:	4a36      	ldr	r2, [pc, #216]	; (1f03c <_printf_float+0x2f8>)
   1ef62:	4659      	mov	r1, fp
   1ef64:	4628      	mov	r0, r5
   1ef66:	47b0      	blx	r6
   1ef68:	3001      	adds	r0, #1
   1ef6a:	f43f af47 	beq.w	1edfc <_printf_float+0xb8>
   1ef6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ef70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1ef72:	429a      	cmp	r2, r3
   1ef74:	db02      	blt.n	1ef7c <_printf_float+0x238>
   1ef76:	6823      	ldr	r3, [r4, #0]
   1ef78:	07d8      	lsls	r0, r3, #31
   1ef7a:	d50e      	bpl.n	1ef9a <_printf_float+0x256>
   1ef7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ef7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ef80:	4659      	mov	r1, fp
   1ef82:	4628      	mov	r0, r5
   1ef84:	47b0      	blx	r6
   1ef86:	3001      	adds	r0, #1
   1ef88:	f43f af38 	beq.w	1edfc <_printf_float+0xb8>
   1ef8c:	2700      	movs	r7, #0
   1ef8e:	f104 081a 	add.w	r8, r4, #26
   1ef92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ef94:	3b01      	subs	r3, #1
   1ef96:	429f      	cmp	r7, r3
   1ef98:	db11      	blt.n	1efbe <_printf_float+0x27a>
   1ef9a:	6823      	ldr	r3, [r4, #0]
   1ef9c:	079f      	lsls	r7, r3, #30
   1ef9e:	d508      	bpl.n	1efb2 <_printf_float+0x26e>
   1efa0:	2700      	movs	r7, #0
   1efa2:	f104 0819 	add.w	r8, r4, #25
   1efa6:	68e3      	ldr	r3, [r4, #12]
   1efa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1efaa:	1a9b      	subs	r3, r3, r2
   1efac:	429f      	cmp	r7, r3
   1efae:	f2c0 80e7 	blt.w	1f180 <_printf_float+0x43c>
   1efb2:	68e0      	ldr	r0, [r4, #12]
   1efb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1efb6:	4298      	cmp	r0, r3
   1efb8:	bfb8      	it	lt
   1efba:	4618      	movlt	r0, r3
   1efbc:	e720      	b.n	1ee00 <_printf_float+0xbc>
   1efbe:	2301      	movs	r3, #1
   1efc0:	4642      	mov	r2, r8
   1efc2:	4659      	mov	r1, fp
   1efc4:	4628      	mov	r0, r5
   1efc6:	47b0      	blx	r6
   1efc8:	3001      	adds	r0, #1
   1efca:	f43f af17 	beq.w	1edfc <_printf_float+0xb8>
   1efce:	3701      	adds	r7, #1
   1efd0:	e7df      	b.n	1ef92 <_printf_float+0x24e>
   1efd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1efd4:	2b00      	cmp	r3, #0
   1efd6:	dc33      	bgt.n	1f040 <_printf_float+0x2fc>
   1efd8:	2301      	movs	r3, #1
   1efda:	4a18      	ldr	r2, [pc, #96]	; (1f03c <_printf_float+0x2f8>)
   1efdc:	4659      	mov	r1, fp
   1efde:	4628      	mov	r0, r5
   1efe0:	47b0      	blx	r6
   1efe2:	3001      	adds	r0, #1
   1efe4:	f43f af0a 	beq.w	1edfc <_printf_float+0xb8>
   1efe8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1efea:	b923      	cbnz	r3, 1eff6 <_printf_float+0x2b2>
   1efec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1efee:	b913      	cbnz	r3, 1eff6 <_printf_float+0x2b2>
   1eff0:	6823      	ldr	r3, [r4, #0]
   1eff2:	07d9      	lsls	r1, r3, #31
   1eff4:	d5d1      	bpl.n	1ef9a <_printf_float+0x256>
   1eff6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1eff8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1effa:	4659      	mov	r1, fp
   1effc:	4628      	mov	r0, r5
   1effe:	47b0      	blx	r6
   1f000:	3001      	adds	r0, #1
   1f002:	f43f aefb 	beq.w	1edfc <_printf_float+0xb8>
   1f006:	f04f 0800 	mov.w	r8, #0
   1f00a:	f104 091a 	add.w	r9, r4, #26
   1f00e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1f010:	425b      	negs	r3, r3
   1f012:	4598      	cmp	r8, r3
   1f014:	db01      	blt.n	1f01a <_printf_float+0x2d6>
   1f016:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f018:	e78e      	b.n	1ef38 <_printf_float+0x1f4>
   1f01a:	2301      	movs	r3, #1
   1f01c:	464a      	mov	r2, r9
   1f01e:	4659      	mov	r1, fp
   1f020:	4628      	mov	r0, r5
   1f022:	47b0      	blx	r6
   1f024:	3001      	adds	r0, #1
   1f026:	f43f aee9 	beq.w	1edfc <_printf_float+0xb8>
   1f02a:	f108 0801 	add.w	r8, r8, #1
   1f02e:	e7ee      	b.n	1f00e <_printf_float+0x2ca>
   1f030:	7fefffff 	.word	0x7fefffff
   1f034:	00027ac4 	.word	0x00027ac4
   1f038:	00027ac8 	.word	0x00027ac8
   1f03c:	00024f4a 	.word	0x00024f4a
   1f040:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1f042:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1f044:	429a      	cmp	r2, r3
   1f046:	bfa8      	it	ge
   1f048:	461a      	movge	r2, r3
   1f04a:	2a00      	cmp	r2, #0
   1f04c:	4690      	mov	r8, r2
   1f04e:	dc36      	bgt.n	1f0be <_printf_float+0x37a>
   1f050:	f04f 0a00 	mov.w	sl, #0
   1f054:	f104 031a 	add.w	r3, r4, #26
   1f058:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1f05c:	930b      	str	r3, [sp, #44]	; 0x2c
   1f05e:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   1f062:	eba9 0308 	sub.w	r3, r9, r8
   1f066:	459a      	cmp	sl, r3
   1f068:	db31      	blt.n	1f0ce <_printf_float+0x38a>
   1f06a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f06c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1f06e:	429a      	cmp	r2, r3
   1f070:	db38      	blt.n	1f0e4 <_printf_float+0x3a0>
   1f072:	6823      	ldr	r3, [r4, #0]
   1f074:	07da      	lsls	r2, r3, #31
   1f076:	d435      	bmi.n	1f0e4 <_printf_float+0x3a0>
   1f078:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f07a:	990d      	ldr	r1, [sp, #52]	; 0x34
   1f07c:	eba3 0209 	sub.w	r2, r3, r9
   1f080:	eba3 0801 	sub.w	r8, r3, r1
   1f084:	4590      	cmp	r8, r2
   1f086:	bfa8      	it	ge
   1f088:	4690      	movge	r8, r2
   1f08a:	f1b8 0f00 	cmp.w	r8, #0
   1f08e:	dc31      	bgt.n	1f0f4 <_printf_float+0x3b0>
   1f090:	2700      	movs	r7, #0
   1f092:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1f096:	f104 091a 	add.w	r9, r4, #26
   1f09a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1f09c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f09e:	1a9b      	subs	r3, r3, r2
   1f0a0:	eba3 0308 	sub.w	r3, r3, r8
   1f0a4:	429f      	cmp	r7, r3
   1f0a6:	f6bf af78 	bge.w	1ef9a <_printf_float+0x256>
   1f0aa:	2301      	movs	r3, #1
   1f0ac:	464a      	mov	r2, r9
   1f0ae:	4659      	mov	r1, fp
   1f0b0:	4628      	mov	r0, r5
   1f0b2:	47b0      	blx	r6
   1f0b4:	3001      	adds	r0, #1
   1f0b6:	f43f aea1 	beq.w	1edfc <_printf_float+0xb8>
   1f0ba:	3701      	adds	r7, #1
   1f0bc:	e7ed      	b.n	1f09a <_printf_float+0x356>
   1f0be:	4613      	mov	r3, r2
   1f0c0:	4659      	mov	r1, fp
   1f0c2:	463a      	mov	r2, r7
   1f0c4:	4628      	mov	r0, r5
   1f0c6:	47b0      	blx	r6
   1f0c8:	3001      	adds	r0, #1
   1f0ca:	d1c1      	bne.n	1f050 <_printf_float+0x30c>
   1f0cc:	e696      	b.n	1edfc <_printf_float+0xb8>
   1f0ce:	2301      	movs	r3, #1
   1f0d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1f0d2:	4659      	mov	r1, fp
   1f0d4:	4628      	mov	r0, r5
   1f0d6:	47b0      	blx	r6
   1f0d8:	3001      	adds	r0, #1
   1f0da:	f43f ae8f 	beq.w	1edfc <_printf_float+0xb8>
   1f0de:	f10a 0a01 	add.w	sl, sl, #1
   1f0e2:	e7bc      	b.n	1f05e <_printf_float+0x31a>
   1f0e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1f0e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1f0e8:	4659      	mov	r1, fp
   1f0ea:	4628      	mov	r0, r5
   1f0ec:	47b0      	blx	r6
   1f0ee:	3001      	adds	r0, #1
   1f0f0:	d1c2      	bne.n	1f078 <_printf_float+0x334>
   1f0f2:	e683      	b.n	1edfc <_printf_float+0xb8>
   1f0f4:	4643      	mov	r3, r8
   1f0f6:	eb07 0209 	add.w	r2, r7, r9
   1f0fa:	4659      	mov	r1, fp
   1f0fc:	4628      	mov	r0, r5
   1f0fe:	47b0      	blx	r6
   1f100:	3001      	adds	r0, #1
   1f102:	d1c5      	bne.n	1f090 <_printf_float+0x34c>
   1f104:	e67a      	b.n	1edfc <_printf_float+0xb8>
   1f106:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1f108:	2a01      	cmp	r2, #1
   1f10a:	dc01      	bgt.n	1f110 <_printf_float+0x3cc>
   1f10c:	07db      	lsls	r3, r3, #31
   1f10e:	d534      	bpl.n	1f17a <_printf_float+0x436>
   1f110:	2301      	movs	r3, #1
   1f112:	463a      	mov	r2, r7
   1f114:	4659      	mov	r1, fp
   1f116:	4628      	mov	r0, r5
   1f118:	47b0      	blx	r6
   1f11a:	3001      	adds	r0, #1
   1f11c:	f43f ae6e 	beq.w	1edfc <_printf_float+0xb8>
   1f120:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1f122:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1f124:	4659      	mov	r1, fp
   1f126:	4628      	mov	r0, r5
   1f128:	47b0      	blx	r6
   1f12a:	3001      	adds	r0, #1
   1f12c:	f43f ae66 	beq.w	1edfc <_printf_float+0xb8>
   1f130:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1f134:	2200      	movs	r2, #0
   1f136:	2300      	movs	r3, #0
   1f138:	f005 fd3e 	bl	24bb8 <__aeabi_dcmpeq>
   1f13c:	b150      	cbz	r0, 1f154 <_printf_float+0x410>
   1f13e:	2700      	movs	r7, #0
   1f140:	f104 081a 	add.w	r8, r4, #26
   1f144:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f146:	3b01      	subs	r3, #1
   1f148:	429f      	cmp	r7, r3
   1f14a:	db0c      	blt.n	1f166 <_printf_float+0x422>
   1f14c:	464b      	mov	r3, r9
   1f14e:	f104 0250 	add.w	r2, r4, #80	; 0x50
   1f152:	e6f2      	b.n	1ef3a <_printf_float+0x1f6>
   1f154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1f156:	1c7a      	adds	r2, r7, #1
   1f158:	3b01      	subs	r3, #1
   1f15a:	4659      	mov	r1, fp
   1f15c:	4628      	mov	r0, r5
   1f15e:	47b0      	blx	r6
   1f160:	3001      	adds	r0, #1
   1f162:	d1f3      	bne.n	1f14c <_printf_float+0x408>
   1f164:	e64a      	b.n	1edfc <_printf_float+0xb8>
   1f166:	2301      	movs	r3, #1
   1f168:	4642      	mov	r2, r8
   1f16a:	4659      	mov	r1, fp
   1f16c:	4628      	mov	r0, r5
   1f16e:	47b0      	blx	r6
   1f170:	3001      	adds	r0, #1
   1f172:	f43f ae43 	beq.w	1edfc <_printf_float+0xb8>
   1f176:	3701      	adds	r7, #1
   1f178:	e7e4      	b.n	1f144 <_printf_float+0x400>
   1f17a:	2301      	movs	r3, #1
   1f17c:	463a      	mov	r2, r7
   1f17e:	e7ec      	b.n	1f15a <_printf_float+0x416>
   1f180:	2301      	movs	r3, #1
   1f182:	4642      	mov	r2, r8
   1f184:	4659      	mov	r1, fp
   1f186:	4628      	mov	r0, r5
   1f188:	47b0      	blx	r6
   1f18a:	3001      	adds	r0, #1
   1f18c:	f43f ae36 	beq.w	1edfc <_printf_float+0xb8>
   1f190:	3701      	adds	r7, #1
   1f192:	e708      	b.n	1efa6 <_printf_float+0x262>
   1f194:	463a      	mov	r2, r7
   1f196:	464b      	mov	r3, r9
   1f198:	4638      	mov	r0, r7
   1f19a:	4649      	mov	r1, r9
   1f19c:	f005 fd3e 	bl	24c1c <__aeabi_dcmpun>
   1f1a0:	2800      	cmp	r0, #0
   1f1a2:	f43f ae30 	beq.w	1ee06 <_printf_float+0xc2>
   1f1a6:	4b01      	ldr	r3, [pc, #4]	; (1f1ac <_printf_float+0x468>)
   1f1a8:	4f01      	ldr	r7, [pc, #4]	; (1f1b0 <_printf_float+0x46c>)
   1f1aa:	e612      	b.n	1edd2 <_printf_float+0x8e>
   1f1ac:	00027acc 	.word	0x00027acc
   1f1b0:	00027ad0 	.word	0x00027ad0

0001f1b4 <_printf_common>:
_printf_common():
   1f1b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f1b8:	4691      	mov	r9, r2
   1f1ba:	461f      	mov	r7, r3
   1f1bc:	688a      	ldr	r2, [r1, #8]
   1f1be:	690b      	ldr	r3, [r1, #16]
   1f1c0:	4606      	mov	r6, r0
   1f1c2:	4293      	cmp	r3, r2
   1f1c4:	bfb8      	it	lt
   1f1c6:	4613      	movlt	r3, r2
   1f1c8:	f8c9 3000 	str.w	r3, [r9]
   1f1cc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   1f1d0:	460c      	mov	r4, r1
   1f1d2:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1f1d6:	b112      	cbz	r2, 1f1de <_printf_common+0x2a>
   1f1d8:	3301      	adds	r3, #1
   1f1da:	f8c9 3000 	str.w	r3, [r9]
   1f1de:	6823      	ldr	r3, [r4, #0]
   1f1e0:	0699      	lsls	r1, r3, #26
   1f1e2:	bf42      	ittt	mi
   1f1e4:	f8d9 3000 	ldrmi.w	r3, [r9]
   1f1e8:	3302      	addmi	r3, #2
   1f1ea:	f8c9 3000 	strmi.w	r3, [r9]
   1f1ee:	6825      	ldr	r5, [r4, #0]
   1f1f0:	f015 0506 	ands.w	r5, r5, #6
   1f1f4:	d107      	bne.n	1f206 <_printf_common+0x52>
   1f1f6:	f104 0a19 	add.w	sl, r4, #25
   1f1fa:	68e3      	ldr	r3, [r4, #12]
   1f1fc:	f8d9 2000 	ldr.w	r2, [r9]
   1f200:	1a9b      	subs	r3, r3, r2
   1f202:	429d      	cmp	r5, r3
   1f204:	db2a      	blt.n	1f25c <_printf_common+0xa8>
   1f206:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   1f20a:	6822      	ldr	r2, [r4, #0]
   1f20c:	3300      	adds	r3, #0
   1f20e:	bf18      	it	ne
   1f210:	2301      	movne	r3, #1
   1f212:	0692      	lsls	r2, r2, #26
   1f214:	d42f      	bmi.n	1f276 <_printf_common+0xc2>
   1f216:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1f21a:	4639      	mov	r1, r7
   1f21c:	4630      	mov	r0, r6
   1f21e:	47c0      	blx	r8
   1f220:	3001      	adds	r0, #1
   1f222:	d022      	beq.n	1f26a <_printf_common+0xb6>
   1f224:	6823      	ldr	r3, [r4, #0]
   1f226:	68e5      	ldr	r5, [r4, #12]
   1f228:	f003 0306 	and.w	r3, r3, #6
   1f22c:	2b04      	cmp	r3, #4
   1f22e:	bf18      	it	ne
   1f230:	2500      	movne	r5, #0
   1f232:	f8d9 2000 	ldr.w	r2, [r9]
   1f236:	f04f 0900 	mov.w	r9, #0
   1f23a:	bf08      	it	eq
   1f23c:	1aad      	subeq	r5, r5, r2
   1f23e:	68a3      	ldr	r3, [r4, #8]
   1f240:	6922      	ldr	r2, [r4, #16]
   1f242:	bf08      	it	eq
   1f244:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   1f248:	4293      	cmp	r3, r2
   1f24a:	bfc4      	itt	gt
   1f24c:	1a9b      	subgt	r3, r3, r2
   1f24e:	18ed      	addgt	r5, r5, r3
   1f250:	341a      	adds	r4, #26
   1f252:	454d      	cmp	r5, r9
   1f254:	d11b      	bne.n	1f28e <_printf_common+0xda>
   1f256:	2000      	movs	r0, #0
   1f258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f25c:	2301      	movs	r3, #1
   1f25e:	4652      	mov	r2, sl
   1f260:	4639      	mov	r1, r7
   1f262:	4630      	mov	r0, r6
   1f264:	47c0      	blx	r8
   1f266:	3001      	adds	r0, #1
   1f268:	d103      	bne.n	1f272 <_printf_common+0xbe>
   1f26a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f26e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f272:	3501      	adds	r5, #1
   1f274:	e7c1      	b.n	1f1fa <_printf_common+0x46>
   1f276:	2030      	movs	r0, #48	; 0x30
   1f278:	18e1      	adds	r1, r4, r3
   1f27a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   1f27e:	1c5a      	adds	r2, r3, #1
   1f280:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   1f284:	4422      	add	r2, r4
   1f286:	3302      	adds	r3, #2
   1f288:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   1f28c:	e7c3      	b.n	1f216 <_printf_common+0x62>
   1f28e:	2301      	movs	r3, #1
   1f290:	4622      	mov	r2, r4
   1f292:	4639      	mov	r1, r7
   1f294:	4630      	mov	r0, r6
   1f296:	47c0      	blx	r8
   1f298:	3001      	adds	r0, #1
   1f29a:	d0e6      	beq.n	1f26a <_printf_common+0xb6>
   1f29c:	f109 0901 	add.w	r9, r9, #1
   1f2a0:	e7d7      	b.n	1f252 <_printf_common+0x9e>
   1f2a2:	Address 0x000000000001f2a2 is out of bounds.


0001f2a4 <_printf_i>:
_printf_i():
   1f2a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1f2a8:	4617      	mov	r7, r2
   1f2aa:	7e0a      	ldrb	r2, [r1, #24]
   1f2ac:	b085      	sub	sp, #20
   1f2ae:	2a6e      	cmp	r2, #110	; 0x6e
   1f2b0:	4698      	mov	r8, r3
   1f2b2:	4606      	mov	r6, r0
   1f2b4:	460c      	mov	r4, r1
   1f2b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1f2b8:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   1f2bc:	f000 80bc 	beq.w	1f438 <_printf_i+0x194>
   1f2c0:	d81a      	bhi.n	1f2f8 <_printf_i+0x54>
   1f2c2:	2a63      	cmp	r2, #99	; 0x63
   1f2c4:	d02e      	beq.n	1f324 <_printf_i+0x80>
   1f2c6:	d80a      	bhi.n	1f2de <_printf_i+0x3a>
   1f2c8:	2a00      	cmp	r2, #0
   1f2ca:	f000 80c8 	beq.w	1f45e <_printf_i+0x1ba>
   1f2ce:	2a58      	cmp	r2, #88	; 0x58
   1f2d0:	f000 808a 	beq.w	1f3e8 <_printf_i+0x144>
   1f2d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1f2d8:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   1f2dc:	e02a      	b.n	1f334 <_printf_i+0x90>
   1f2de:	2a64      	cmp	r2, #100	; 0x64
   1f2e0:	d001      	beq.n	1f2e6 <_printf_i+0x42>
   1f2e2:	2a69      	cmp	r2, #105	; 0x69
   1f2e4:	d1f6      	bne.n	1f2d4 <_printf_i+0x30>
   1f2e6:	6821      	ldr	r1, [r4, #0]
   1f2e8:	681a      	ldr	r2, [r3, #0]
   1f2ea:	f011 0f80 	tst.w	r1, #128	; 0x80
   1f2ee:	d023      	beq.n	1f338 <_printf_i+0x94>
   1f2f0:	1d11      	adds	r1, r2, #4
   1f2f2:	6019      	str	r1, [r3, #0]
   1f2f4:	6813      	ldr	r3, [r2, #0]
   1f2f6:	e027      	b.n	1f348 <_printf_i+0xa4>
   1f2f8:	2a73      	cmp	r2, #115	; 0x73
   1f2fa:	f000 80b4 	beq.w	1f466 <_printf_i+0x1c2>
   1f2fe:	d808      	bhi.n	1f312 <_printf_i+0x6e>
   1f300:	2a6f      	cmp	r2, #111	; 0x6f
   1f302:	d02a      	beq.n	1f35a <_printf_i+0xb6>
   1f304:	2a70      	cmp	r2, #112	; 0x70
   1f306:	d1e5      	bne.n	1f2d4 <_printf_i+0x30>
   1f308:	680a      	ldr	r2, [r1, #0]
   1f30a:	f042 0220 	orr.w	r2, r2, #32
   1f30e:	600a      	str	r2, [r1, #0]
   1f310:	e003      	b.n	1f31a <_printf_i+0x76>
   1f312:	2a75      	cmp	r2, #117	; 0x75
   1f314:	d021      	beq.n	1f35a <_printf_i+0xb6>
   1f316:	2a78      	cmp	r2, #120	; 0x78
   1f318:	d1dc      	bne.n	1f2d4 <_printf_i+0x30>
   1f31a:	2278      	movs	r2, #120	; 0x78
   1f31c:	496f      	ldr	r1, [pc, #444]	; (1f4dc <_printf_i+0x238>)
   1f31e:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   1f322:	e064      	b.n	1f3ee <_printf_i+0x14a>
   1f324:	681a      	ldr	r2, [r3, #0]
   1f326:	f101 0542 	add.w	r5, r1, #66	; 0x42
   1f32a:	1d11      	adds	r1, r2, #4
   1f32c:	6019      	str	r1, [r3, #0]
   1f32e:	6813      	ldr	r3, [r2, #0]
   1f330:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1f334:	2301      	movs	r3, #1
   1f336:	e0a3      	b.n	1f480 <_printf_i+0x1dc>
   1f338:	f011 0f40 	tst.w	r1, #64	; 0x40
   1f33c:	f102 0104 	add.w	r1, r2, #4
   1f340:	6019      	str	r1, [r3, #0]
   1f342:	d0d7      	beq.n	1f2f4 <_printf_i+0x50>
   1f344:	f9b2 3000 	ldrsh.w	r3, [r2]
   1f348:	2b00      	cmp	r3, #0
   1f34a:	da03      	bge.n	1f354 <_printf_i+0xb0>
   1f34c:	222d      	movs	r2, #45	; 0x2d
   1f34e:	425b      	negs	r3, r3
   1f350:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   1f354:	4962      	ldr	r1, [pc, #392]	; (1f4e0 <_printf_i+0x23c>)
   1f356:	220a      	movs	r2, #10
   1f358:	e017      	b.n	1f38a <_printf_i+0xe6>
   1f35a:	6820      	ldr	r0, [r4, #0]
   1f35c:	6819      	ldr	r1, [r3, #0]
   1f35e:	f010 0f80 	tst.w	r0, #128	; 0x80
   1f362:	d003      	beq.n	1f36c <_printf_i+0xc8>
   1f364:	1d08      	adds	r0, r1, #4
   1f366:	6018      	str	r0, [r3, #0]
   1f368:	680b      	ldr	r3, [r1, #0]
   1f36a:	e006      	b.n	1f37a <_printf_i+0xd6>
   1f36c:	f010 0f40 	tst.w	r0, #64	; 0x40
   1f370:	f101 0004 	add.w	r0, r1, #4
   1f374:	6018      	str	r0, [r3, #0]
   1f376:	d0f7      	beq.n	1f368 <_printf_i+0xc4>
   1f378:	880b      	ldrh	r3, [r1, #0]
   1f37a:	2a6f      	cmp	r2, #111	; 0x6f
   1f37c:	bf14      	ite	ne
   1f37e:	220a      	movne	r2, #10
   1f380:	2208      	moveq	r2, #8
   1f382:	4957      	ldr	r1, [pc, #348]	; (1f4e0 <_printf_i+0x23c>)
   1f384:	2000      	movs	r0, #0
   1f386:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1f38a:	6865      	ldr	r5, [r4, #4]
   1f38c:	2d00      	cmp	r5, #0
   1f38e:	60a5      	str	r5, [r4, #8]
   1f390:	f2c0 809c 	blt.w	1f4cc <_printf_i+0x228>
   1f394:	6820      	ldr	r0, [r4, #0]
   1f396:	f020 0004 	bic.w	r0, r0, #4
   1f39a:	6020      	str	r0, [r4, #0]
   1f39c:	2b00      	cmp	r3, #0
   1f39e:	d13f      	bne.n	1f420 <_printf_i+0x17c>
   1f3a0:	2d00      	cmp	r5, #0
   1f3a2:	f040 8095 	bne.w	1f4d0 <_printf_i+0x22c>
   1f3a6:	4675      	mov	r5, lr
   1f3a8:	2a08      	cmp	r2, #8
   1f3aa:	d10b      	bne.n	1f3c4 <_printf_i+0x120>
   1f3ac:	6823      	ldr	r3, [r4, #0]
   1f3ae:	07da      	lsls	r2, r3, #31
   1f3b0:	d508      	bpl.n	1f3c4 <_printf_i+0x120>
   1f3b2:	6923      	ldr	r3, [r4, #16]
   1f3b4:	6862      	ldr	r2, [r4, #4]
   1f3b6:	429a      	cmp	r2, r3
   1f3b8:	bfde      	ittt	le
   1f3ba:	2330      	movle	r3, #48	; 0x30
   1f3bc:	f805 3c01 	strble.w	r3, [r5, #-1]
   1f3c0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1f3c4:	ebae 0305 	sub.w	r3, lr, r5
   1f3c8:	6123      	str	r3, [r4, #16]
   1f3ca:	f8cd 8000 	str.w	r8, [sp]
   1f3ce:	463b      	mov	r3, r7
   1f3d0:	aa03      	add	r2, sp, #12
   1f3d2:	4621      	mov	r1, r4
   1f3d4:	4630      	mov	r0, r6
   1f3d6:	f7ff feed 	bl	1f1b4 <_printf_common>
   1f3da:	3001      	adds	r0, #1
   1f3dc:	d155      	bne.n	1f48a <_printf_i+0x1e6>
   1f3de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f3e2:	b005      	add	sp, #20
   1f3e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1f3e8:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1f3ec:	493c      	ldr	r1, [pc, #240]	; (1f4e0 <_printf_i+0x23c>)
   1f3ee:	6822      	ldr	r2, [r4, #0]
   1f3f0:	6818      	ldr	r0, [r3, #0]
   1f3f2:	f012 0f80 	tst.w	r2, #128	; 0x80
   1f3f6:	f100 0504 	add.w	r5, r0, #4
   1f3fa:	601d      	str	r5, [r3, #0]
   1f3fc:	d001      	beq.n	1f402 <_printf_i+0x15e>
   1f3fe:	6803      	ldr	r3, [r0, #0]
   1f400:	e002      	b.n	1f408 <_printf_i+0x164>
   1f402:	0655      	lsls	r5, r2, #25
   1f404:	d5fb      	bpl.n	1f3fe <_printf_i+0x15a>
   1f406:	8803      	ldrh	r3, [r0, #0]
   1f408:	07d0      	lsls	r0, r2, #31
   1f40a:	bf44      	itt	mi
   1f40c:	f042 0220 	orrmi.w	r2, r2, #32
   1f410:	6022      	strmi	r2, [r4, #0]
   1f412:	b91b      	cbnz	r3, 1f41c <_printf_i+0x178>
   1f414:	6822      	ldr	r2, [r4, #0]
   1f416:	f022 0220 	bic.w	r2, r2, #32
   1f41a:	6022      	str	r2, [r4, #0]
   1f41c:	2210      	movs	r2, #16
   1f41e:	e7b1      	b.n	1f384 <_printf_i+0xe0>
   1f420:	4675      	mov	r5, lr
   1f422:	fbb3 f0f2 	udiv	r0, r3, r2
   1f426:	fb02 3310 	mls	r3, r2, r0, r3
   1f42a:	5ccb      	ldrb	r3, [r1, r3]
   1f42c:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1f430:	4603      	mov	r3, r0
   1f432:	2800      	cmp	r0, #0
   1f434:	d1f5      	bne.n	1f422 <_printf_i+0x17e>
   1f436:	e7b7      	b.n	1f3a8 <_printf_i+0x104>
   1f438:	6808      	ldr	r0, [r1, #0]
   1f43a:	681a      	ldr	r2, [r3, #0]
   1f43c:	f010 0f80 	tst.w	r0, #128	; 0x80
   1f440:	6949      	ldr	r1, [r1, #20]
   1f442:	d004      	beq.n	1f44e <_printf_i+0x1aa>
   1f444:	1d10      	adds	r0, r2, #4
   1f446:	6018      	str	r0, [r3, #0]
   1f448:	6813      	ldr	r3, [r2, #0]
   1f44a:	6019      	str	r1, [r3, #0]
   1f44c:	e007      	b.n	1f45e <_printf_i+0x1ba>
   1f44e:	f010 0f40 	tst.w	r0, #64	; 0x40
   1f452:	f102 0004 	add.w	r0, r2, #4
   1f456:	6018      	str	r0, [r3, #0]
   1f458:	6813      	ldr	r3, [r2, #0]
   1f45a:	d0f6      	beq.n	1f44a <_printf_i+0x1a6>
   1f45c:	8019      	strh	r1, [r3, #0]
   1f45e:	2300      	movs	r3, #0
   1f460:	4675      	mov	r5, lr
   1f462:	6123      	str	r3, [r4, #16]
   1f464:	e7b1      	b.n	1f3ca <_printf_i+0x126>
   1f466:	681a      	ldr	r2, [r3, #0]
   1f468:	1d11      	adds	r1, r2, #4
   1f46a:	6019      	str	r1, [r3, #0]
   1f46c:	6815      	ldr	r5, [r2, #0]
   1f46e:	2100      	movs	r1, #0
   1f470:	6862      	ldr	r2, [r4, #4]
   1f472:	4628      	mov	r0, r5
   1f474:	f7ff f83a 	bl	1e4ec <memchr>
   1f478:	b108      	cbz	r0, 1f47e <_printf_i+0x1da>
   1f47a:	1b40      	subs	r0, r0, r5
   1f47c:	6060      	str	r0, [r4, #4]
   1f47e:	6863      	ldr	r3, [r4, #4]
   1f480:	6123      	str	r3, [r4, #16]
   1f482:	2300      	movs	r3, #0
   1f484:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1f488:	e79f      	b.n	1f3ca <_printf_i+0x126>
   1f48a:	6923      	ldr	r3, [r4, #16]
   1f48c:	462a      	mov	r2, r5
   1f48e:	4639      	mov	r1, r7
   1f490:	4630      	mov	r0, r6
   1f492:	47c0      	blx	r8
   1f494:	3001      	adds	r0, #1
   1f496:	d0a2      	beq.n	1f3de <_printf_i+0x13a>
   1f498:	6823      	ldr	r3, [r4, #0]
   1f49a:	079b      	lsls	r3, r3, #30
   1f49c:	d507      	bpl.n	1f4ae <_printf_i+0x20a>
   1f49e:	2500      	movs	r5, #0
   1f4a0:	f104 0919 	add.w	r9, r4, #25
   1f4a4:	68e3      	ldr	r3, [r4, #12]
   1f4a6:	9a03      	ldr	r2, [sp, #12]
   1f4a8:	1a9b      	subs	r3, r3, r2
   1f4aa:	429d      	cmp	r5, r3
   1f4ac:	db05      	blt.n	1f4ba <_printf_i+0x216>
   1f4ae:	68e0      	ldr	r0, [r4, #12]
   1f4b0:	9b03      	ldr	r3, [sp, #12]
   1f4b2:	4298      	cmp	r0, r3
   1f4b4:	bfb8      	it	lt
   1f4b6:	4618      	movlt	r0, r3
   1f4b8:	e793      	b.n	1f3e2 <_printf_i+0x13e>
   1f4ba:	2301      	movs	r3, #1
   1f4bc:	464a      	mov	r2, r9
   1f4be:	4639      	mov	r1, r7
   1f4c0:	4630      	mov	r0, r6
   1f4c2:	47c0      	blx	r8
   1f4c4:	3001      	adds	r0, #1
   1f4c6:	d08a      	beq.n	1f3de <_printf_i+0x13a>
   1f4c8:	3501      	adds	r5, #1
   1f4ca:	e7eb      	b.n	1f4a4 <_printf_i+0x200>
   1f4cc:	2b00      	cmp	r3, #0
   1f4ce:	d1a7      	bne.n	1f420 <_printf_i+0x17c>
   1f4d0:	780b      	ldrb	r3, [r1, #0]
   1f4d2:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1f4d6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1f4da:	e765      	b.n	1f3a8 <_printf_i+0x104>
   1f4dc:	00027ae5 	.word	0x00027ae5
   1f4e0:	00027ad4 	.word	0x00027ad4

0001f4e4 <_scanf_float>:
_scanf_float():
   1f4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f4e8:	469a      	mov	sl, r3
   1f4ea:	688b      	ldr	r3, [r1, #8]
   1f4ec:	4616      	mov	r6, r2
   1f4ee:	1e5a      	subs	r2, r3, #1
   1f4f0:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1f4f4:	bf88      	it	hi
   1f4f6:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1f4fa:	b087      	sub	sp, #28
   1f4fc:	bf85      	ittet	hi
   1f4fe:	189b      	addhi	r3, r3, r2
   1f500:	9301      	strhi	r3, [sp, #4]
   1f502:	2300      	movls	r3, #0
   1f504:	f240 135d 	movwhi	r3, #349	; 0x15d
   1f508:	4688      	mov	r8, r1
   1f50a:	f04f 0b00 	mov.w	fp, #0
   1f50e:	bf8c      	ite	hi
   1f510:	608b      	strhi	r3, [r1, #8]
   1f512:	9301      	strls	r3, [sp, #4]
   1f514:	680b      	ldr	r3, [r1, #0]
   1f516:	4607      	mov	r7, r0
   1f518:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1f51c:	f848 3b1c 	str.w	r3, [r8], #28
   1f520:	460c      	mov	r4, r1
   1f522:	4645      	mov	r5, r8
   1f524:	465a      	mov	r2, fp
   1f526:	46d9      	mov	r9, fp
   1f528:	f8cd b010 	str.w	fp, [sp, #16]
   1f52c:	f8cd b00c 	str.w	fp, [sp, #12]
   1f530:	f8cd b008 	str.w	fp, [sp, #8]
   1f534:	68a1      	ldr	r1, [r4, #8]
   1f536:	b181      	cbz	r1, 1f55a <_scanf_float+0x76>
   1f538:	6833      	ldr	r3, [r6, #0]
   1f53a:	781b      	ldrb	r3, [r3, #0]
   1f53c:	2b49      	cmp	r3, #73	; 0x49
   1f53e:	d071      	beq.n	1f624 <_scanf_float+0x140>
   1f540:	d84d      	bhi.n	1f5de <_scanf_float+0xfa>
   1f542:	2b39      	cmp	r3, #57	; 0x39
   1f544:	d840      	bhi.n	1f5c8 <_scanf_float+0xe4>
   1f546:	2b31      	cmp	r3, #49	; 0x31
   1f548:	f080 8088 	bcs.w	1f65c <_scanf_float+0x178>
   1f54c:	2b2d      	cmp	r3, #45	; 0x2d
   1f54e:	f000 8090 	beq.w	1f672 <_scanf_float+0x18e>
   1f552:	d815      	bhi.n	1f580 <_scanf_float+0x9c>
   1f554:	2b2b      	cmp	r3, #43	; 0x2b
   1f556:	f000 808c 	beq.w	1f672 <_scanf_float+0x18e>
   1f55a:	f1b9 0f00 	cmp.w	r9, #0
   1f55e:	d003      	beq.n	1f568 <_scanf_float+0x84>
   1f560:	6823      	ldr	r3, [r4, #0]
   1f562:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1f566:	6023      	str	r3, [r4, #0]
   1f568:	3a01      	subs	r2, #1
   1f56a:	2a01      	cmp	r2, #1
   1f56c:	f200 80ea 	bhi.w	1f744 <_scanf_float+0x260>
   1f570:	4545      	cmp	r5, r8
   1f572:	f200 80dc 	bhi.w	1f72e <_scanf_float+0x24a>
   1f576:	2601      	movs	r6, #1
   1f578:	4630      	mov	r0, r6
   1f57a:	b007      	add	sp, #28
   1f57c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f580:	2b2e      	cmp	r3, #46	; 0x2e
   1f582:	f000 809f 	beq.w	1f6c4 <_scanf_float+0x1e0>
   1f586:	2b30      	cmp	r3, #48	; 0x30
   1f588:	d1e7      	bne.n	1f55a <_scanf_float+0x76>
   1f58a:	6820      	ldr	r0, [r4, #0]
   1f58c:	f410 7f80 	tst.w	r0, #256	; 0x100
   1f590:	d064      	beq.n	1f65c <_scanf_float+0x178>
   1f592:	9b01      	ldr	r3, [sp, #4]
   1f594:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1f598:	6020      	str	r0, [r4, #0]
   1f59a:	f109 0901 	add.w	r9, r9, #1
   1f59e:	b11b      	cbz	r3, 1f5a8 <_scanf_float+0xc4>
   1f5a0:	3b01      	subs	r3, #1
   1f5a2:	3101      	adds	r1, #1
   1f5a4:	9301      	str	r3, [sp, #4]
   1f5a6:	60a1      	str	r1, [r4, #8]
   1f5a8:	68a3      	ldr	r3, [r4, #8]
   1f5aa:	3b01      	subs	r3, #1
   1f5ac:	60a3      	str	r3, [r4, #8]
   1f5ae:	6923      	ldr	r3, [r4, #16]
   1f5b0:	3301      	adds	r3, #1
   1f5b2:	6123      	str	r3, [r4, #16]
   1f5b4:	6873      	ldr	r3, [r6, #4]
   1f5b6:	3b01      	subs	r3, #1
   1f5b8:	2b00      	cmp	r3, #0
   1f5ba:	6073      	str	r3, [r6, #4]
   1f5bc:	f340 80ac 	ble.w	1f718 <_scanf_float+0x234>
   1f5c0:	6833      	ldr	r3, [r6, #0]
   1f5c2:	3301      	adds	r3, #1
   1f5c4:	6033      	str	r3, [r6, #0]
   1f5c6:	e7b5      	b.n	1f534 <_scanf_float+0x50>
   1f5c8:	2b45      	cmp	r3, #69	; 0x45
   1f5ca:	f000 8085 	beq.w	1f6d8 <_scanf_float+0x1f4>
   1f5ce:	2b46      	cmp	r3, #70	; 0x46
   1f5d0:	d06a      	beq.n	1f6a8 <_scanf_float+0x1c4>
   1f5d2:	2b41      	cmp	r3, #65	; 0x41
   1f5d4:	d1c1      	bne.n	1f55a <_scanf_float+0x76>
   1f5d6:	2a01      	cmp	r2, #1
   1f5d8:	d1bf      	bne.n	1f55a <_scanf_float+0x76>
   1f5da:	2202      	movs	r2, #2
   1f5dc:	e046      	b.n	1f66c <_scanf_float+0x188>
   1f5de:	2b65      	cmp	r3, #101	; 0x65
   1f5e0:	d07a      	beq.n	1f6d8 <_scanf_float+0x1f4>
   1f5e2:	d818      	bhi.n	1f616 <_scanf_float+0x132>
   1f5e4:	2b54      	cmp	r3, #84	; 0x54
   1f5e6:	d066      	beq.n	1f6b6 <_scanf_float+0x1d2>
   1f5e8:	d811      	bhi.n	1f60e <_scanf_float+0x12a>
   1f5ea:	2b4e      	cmp	r3, #78	; 0x4e
   1f5ec:	d1b5      	bne.n	1f55a <_scanf_float+0x76>
   1f5ee:	2a00      	cmp	r2, #0
   1f5f0:	d146      	bne.n	1f680 <_scanf_float+0x19c>
   1f5f2:	f1b9 0f00 	cmp.w	r9, #0
   1f5f6:	d145      	bne.n	1f684 <_scanf_float+0x1a0>
   1f5f8:	6821      	ldr	r1, [r4, #0]
   1f5fa:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1f5fe:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1f602:	d13f      	bne.n	1f684 <_scanf_float+0x1a0>
   1f604:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f608:	6021      	str	r1, [r4, #0]
   1f60a:	2201      	movs	r2, #1
   1f60c:	e02e      	b.n	1f66c <_scanf_float+0x188>
   1f60e:	2b59      	cmp	r3, #89	; 0x59
   1f610:	d01e      	beq.n	1f650 <_scanf_float+0x16c>
   1f612:	2b61      	cmp	r3, #97	; 0x61
   1f614:	e7de      	b.n	1f5d4 <_scanf_float+0xf0>
   1f616:	2b6e      	cmp	r3, #110	; 0x6e
   1f618:	d0e9      	beq.n	1f5ee <_scanf_float+0x10a>
   1f61a:	d815      	bhi.n	1f648 <_scanf_float+0x164>
   1f61c:	2b66      	cmp	r3, #102	; 0x66
   1f61e:	d043      	beq.n	1f6a8 <_scanf_float+0x1c4>
   1f620:	2b69      	cmp	r3, #105	; 0x69
   1f622:	d19a      	bne.n	1f55a <_scanf_float+0x76>
   1f624:	f1bb 0f00 	cmp.w	fp, #0
   1f628:	d138      	bne.n	1f69c <_scanf_float+0x1b8>
   1f62a:	f1b9 0f00 	cmp.w	r9, #0
   1f62e:	d197      	bne.n	1f560 <_scanf_float+0x7c>
   1f630:	6821      	ldr	r1, [r4, #0]
   1f632:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1f636:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1f63a:	d195      	bne.n	1f568 <_scanf_float+0x84>
   1f63c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f640:	6021      	str	r1, [r4, #0]
   1f642:	f04f 0b01 	mov.w	fp, #1
   1f646:	e011      	b.n	1f66c <_scanf_float+0x188>
   1f648:	2b74      	cmp	r3, #116	; 0x74
   1f64a:	d034      	beq.n	1f6b6 <_scanf_float+0x1d2>
   1f64c:	2b79      	cmp	r3, #121	; 0x79
   1f64e:	d184      	bne.n	1f55a <_scanf_float+0x76>
   1f650:	f1bb 0f07 	cmp.w	fp, #7
   1f654:	d181      	bne.n	1f55a <_scanf_float+0x76>
   1f656:	f04f 0b08 	mov.w	fp, #8
   1f65a:	e007      	b.n	1f66c <_scanf_float+0x188>
   1f65c:	eb12 0f0b 	cmn.w	r2, fp
   1f660:	f47f af7b 	bne.w	1f55a <_scanf_float+0x76>
   1f664:	6821      	ldr	r1, [r4, #0]
   1f666:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1f66a:	6021      	str	r1, [r4, #0]
   1f66c:	702b      	strb	r3, [r5, #0]
   1f66e:	3501      	adds	r5, #1
   1f670:	e79a      	b.n	1f5a8 <_scanf_float+0xc4>
   1f672:	6821      	ldr	r1, [r4, #0]
   1f674:	0608      	lsls	r0, r1, #24
   1f676:	f57f af70 	bpl.w	1f55a <_scanf_float+0x76>
   1f67a:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1f67e:	e7f4      	b.n	1f66a <_scanf_float+0x186>
   1f680:	2a02      	cmp	r2, #2
   1f682:	d047      	beq.n	1f714 <_scanf_float+0x230>
   1f684:	f1bb 0f01 	cmp.w	fp, #1
   1f688:	d003      	beq.n	1f692 <_scanf_float+0x1ae>
   1f68a:	f1bb 0f04 	cmp.w	fp, #4
   1f68e:	f47f af64 	bne.w	1f55a <_scanf_float+0x76>
   1f692:	f10b 0b01 	add.w	fp, fp, #1
   1f696:	fa5f fb8b 	uxtb.w	fp, fp
   1f69a:	e7e7      	b.n	1f66c <_scanf_float+0x188>
   1f69c:	f1bb 0f03 	cmp.w	fp, #3
   1f6a0:	d0f7      	beq.n	1f692 <_scanf_float+0x1ae>
   1f6a2:	f1bb 0f05 	cmp.w	fp, #5
   1f6a6:	e7f2      	b.n	1f68e <_scanf_float+0x1aa>
   1f6a8:	f1bb 0f02 	cmp.w	fp, #2
   1f6ac:	f47f af55 	bne.w	1f55a <_scanf_float+0x76>
   1f6b0:	f04f 0b03 	mov.w	fp, #3
   1f6b4:	e7da      	b.n	1f66c <_scanf_float+0x188>
   1f6b6:	f1bb 0f06 	cmp.w	fp, #6
   1f6ba:	f47f af4e 	bne.w	1f55a <_scanf_float+0x76>
   1f6be:	f04f 0b07 	mov.w	fp, #7
   1f6c2:	e7d3      	b.n	1f66c <_scanf_float+0x188>
   1f6c4:	6821      	ldr	r1, [r4, #0]
   1f6c6:	0588      	lsls	r0, r1, #22
   1f6c8:	f57f af47 	bpl.w	1f55a <_scanf_float+0x76>
   1f6cc:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1f6d0:	6021      	str	r1, [r4, #0]
   1f6d2:	f8cd 9008 	str.w	r9, [sp, #8]
   1f6d6:	e7c9      	b.n	1f66c <_scanf_float+0x188>
   1f6d8:	6821      	ldr	r1, [r4, #0]
   1f6da:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1f6de:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1f6e2:	d006      	beq.n	1f6f2 <_scanf_float+0x20e>
   1f6e4:	0548      	lsls	r0, r1, #21
   1f6e6:	f57f af38 	bpl.w	1f55a <_scanf_float+0x76>
   1f6ea:	f1b9 0f00 	cmp.w	r9, #0
   1f6ee:	f43f af3b 	beq.w	1f568 <_scanf_float+0x84>
   1f6f2:	0588      	lsls	r0, r1, #22
   1f6f4:	bf58      	it	pl
   1f6f6:	9802      	ldrpl	r0, [sp, #8]
   1f6f8:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1f6fc:	bf58      	it	pl
   1f6fe:	eba9 0000 	subpl.w	r0, r9, r0
   1f702:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1f706:	bf5c      	itt	pl
   1f708:	9003      	strpl	r0, [sp, #12]
   1f70a:	9504      	strpl	r5, [sp, #16]
   1f70c:	6021      	str	r1, [r4, #0]
   1f70e:	f04f 0900 	mov.w	r9, #0
   1f712:	e7ab      	b.n	1f66c <_scanf_float+0x188>
   1f714:	2203      	movs	r2, #3
   1f716:	e7a9      	b.n	1f66c <_scanf_float+0x188>
   1f718:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1f71c:	4631      	mov	r1, r6
   1f71e:	4638      	mov	r0, r7
   1f720:	9205      	str	r2, [sp, #20]
   1f722:	4798      	blx	r3
   1f724:	9a05      	ldr	r2, [sp, #20]
   1f726:	2800      	cmp	r0, #0
   1f728:	f43f af04 	beq.w	1f534 <_scanf_float+0x50>
   1f72c:	e715      	b.n	1f55a <_scanf_float+0x76>
   1f72e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f732:	4632      	mov	r2, r6
   1f734:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f738:	4638      	mov	r0, r7
   1f73a:	4798      	blx	r3
   1f73c:	6923      	ldr	r3, [r4, #16]
   1f73e:	3b01      	subs	r3, #1
   1f740:	6123      	str	r3, [r4, #16]
   1f742:	e715      	b.n	1f570 <_scanf_float+0x8c>
   1f744:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1f748:	2b06      	cmp	r3, #6
   1f74a:	d80a      	bhi.n	1f762 <_scanf_float+0x27e>
   1f74c:	f1bb 0f02 	cmp.w	fp, #2
   1f750:	d92f      	bls.n	1f7b2 <_scanf_float+0x2ce>
   1f752:	f1ab 0b03 	sub.w	fp, fp, #3
   1f756:	fa5f fb8b 	uxtb.w	fp, fp
   1f75a:	eba5 0b0b 	sub.w	fp, r5, fp
   1f75e:	455d      	cmp	r5, fp
   1f760:	d112      	bne.n	1f788 <_scanf_float+0x2a4>
   1f762:	6823      	ldr	r3, [r4, #0]
   1f764:	05da      	lsls	r2, r3, #23
   1f766:	d545      	bpl.n	1f7f4 <_scanf_float+0x310>
   1f768:	055b      	lsls	r3, r3, #21
   1f76a:	d525      	bpl.n	1f7b8 <_scanf_float+0x2d4>
   1f76c:	4545      	cmp	r5, r8
   1f76e:	f67f af02 	bls.w	1f576 <_scanf_float+0x92>
   1f772:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f776:	4632      	mov	r2, r6
   1f778:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f77c:	4638      	mov	r0, r7
   1f77e:	4798      	blx	r3
   1f780:	6923      	ldr	r3, [r4, #16]
   1f782:	3b01      	subs	r3, #1
   1f784:	6123      	str	r3, [r4, #16]
   1f786:	e7f1      	b.n	1f76c <_scanf_float+0x288>
   1f788:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f78c:	4632      	mov	r2, r6
   1f78e:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f792:	4638      	mov	r0, r7
   1f794:	4798      	blx	r3
   1f796:	6923      	ldr	r3, [r4, #16]
   1f798:	3b01      	subs	r3, #1
   1f79a:	6123      	str	r3, [r4, #16]
   1f79c:	e7df      	b.n	1f75e <_scanf_float+0x27a>
   1f79e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f7a2:	4632      	mov	r2, r6
   1f7a4:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1f7a8:	4638      	mov	r0, r7
   1f7aa:	4798      	blx	r3
   1f7ac:	6923      	ldr	r3, [r4, #16]
   1f7ae:	3b01      	subs	r3, #1
   1f7b0:	6123      	str	r3, [r4, #16]
   1f7b2:	4545      	cmp	r5, r8
   1f7b4:	d8f3      	bhi.n	1f79e <_scanf_float+0x2ba>
   1f7b6:	e6de      	b.n	1f576 <_scanf_float+0x92>
   1f7b8:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1f7bc:	6923      	ldr	r3, [r4, #16]
   1f7be:	2965      	cmp	r1, #101	; 0x65
   1f7c0:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1f7c4:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1f7c8:	6123      	str	r3, [r4, #16]
   1f7ca:	d00d      	beq.n	1f7e8 <_scanf_float+0x304>
   1f7cc:	2945      	cmp	r1, #69	; 0x45
   1f7ce:	d00b      	beq.n	1f7e8 <_scanf_float+0x304>
   1f7d0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f7d4:	4632      	mov	r2, r6
   1f7d6:	4638      	mov	r0, r7
   1f7d8:	4798      	blx	r3
   1f7da:	6923      	ldr	r3, [r4, #16]
   1f7dc:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1f7e0:	3b01      	subs	r3, #1
   1f7e2:	f1a5 0b02 	sub.w	fp, r5, #2
   1f7e6:	6123      	str	r3, [r4, #16]
   1f7e8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f7ec:	4632      	mov	r2, r6
   1f7ee:	4638      	mov	r0, r7
   1f7f0:	4798      	blx	r3
   1f7f2:	465d      	mov	r5, fp
   1f7f4:	6826      	ldr	r6, [r4, #0]
   1f7f6:	f016 0610 	ands.w	r6, r6, #16
   1f7fa:	d14e      	bne.n	1f89a <_scanf_float+0x3b6>
   1f7fc:	702e      	strb	r6, [r5, #0]
   1f7fe:	6823      	ldr	r3, [r4, #0]
   1f800:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1f804:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1f808:	d11c      	bne.n	1f844 <_scanf_float+0x360>
   1f80a:	9b02      	ldr	r3, [sp, #8]
   1f80c:	eba9 0303 	sub.w	r3, r9, r3
   1f810:	425a      	negs	r2, r3
   1f812:	bb23      	cbnz	r3, 1f85e <_scanf_float+0x37a>
   1f814:	2200      	movs	r2, #0
   1f816:	4641      	mov	r1, r8
   1f818:	4638      	mov	r0, r7
   1f81a:	f001 facd 	bl	20db8 <_strtod_r>
   1f81e:	6825      	ldr	r5, [r4, #0]
   1f820:	f8da 3000 	ldr.w	r3, [sl]
   1f824:	f015 0f02 	tst.w	r5, #2
   1f828:	f103 0204 	add.w	r2, r3, #4
   1f82c:	4680      	mov	r8, r0
   1f82e:	4689      	mov	r9, r1
   1f830:	f8ca 2000 	str.w	r2, [sl]
   1f834:	d01e      	beq.n	1f874 <_scanf_float+0x390>
   1f836:	681b      	ldr	r3, [r3, #0]
   1f838:	e9c3 8900 	strd	r8, r9, [r3]
   1f83c:	68e3      	ldr	r3, [r4, #12]
   1f83e:	3301      	adds	r3, #1
   1f840:	60e3      	str	r3, [r4, #12]
   1f842:	e699      	b.n	1f578 <_scanf_float+0x94>
   1f844:	9b03      	ldr	r3, [sp, #12]
   1f846:	2b00      	cmp	r3, #0
   1f848:	d0e4      	beq.n	1f814 <_scanf_float+0x330>
   1f84a:	9904      	ldr	r1, [sp, #16]
   1f84c:	230a      	movs	r3, #10
   1f84e:	4632      	mov	r2, r6
   1f850:	3101      	adds	r1, #1
   1f852:	4638      	mov	r0, r7
   1f854:	f001 fb6c 	bl	20f30 <_strtol_r>
   1f858:	9b03      	ldr	r3, [sp, #12]
   1f85a:	9d04      	ldr	r5, [sp, #16]
   1f85c:	1ac2      	subs	r2, r0, r3
   1f85e:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1f862:	429d      	cmp	r5, r3
   1f864:	bf28      	it	cs
   1f866:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1f86a:	490d      	ldr	r1, [pc, #52]	; (1f8a0 <_scanf_float+0x3bc>)
   1f86c:	4628      	mov	r0, r5
   1f86e:	f000 fb25 	bl	1febc <siprintf>
   1f872:	e7cf      	b.n	1f814 <_scanf_float+0x330>
   1f874:	f015 0504 	ands.w	r5, r5, #4
   1f878:	d1dd      	bne.n	1f836 <_scanf_float+0x352>
   1f87a:	681f      	ldr	r7, [r3, #0]
   1f87c:	4602      	mov	r2, r0
   1f87e:	460b      	mov	r3, r1
   1f880:	f005 f9cc 	bl	24c1c <__aeabi_dcmpun>
   1f884:	b120      	cbz	r0, 1f890 <_scanf_float+0x3ac>
   1f886:	4628      	mov	r0, r5
   1f888:	f000 fa9c 	bl	1fdc4 <nanf>
   1f88c:	6038      	str	r0, [r7, #0]
   1f88e:	e7d5      	b.n	1f83c <_scanf_float+0x358>
   1f890:	4640      	mov	r0, r8
   1f892:	4649      	mov	r1, r9
   1f894:	f7fd fbfe 	bl	1d094 <__aeabi_d2f>
   1f898:	e7f8      	b.n	1f88c <_scanf_float+0x3a8>
   1f89a:	2600      	movs	r6, #0
   1f89c:	e66c      	b.n	1f578 <_scanf_float+0x94>
   1f89e:	bf00      	nop
   1f8a0:	00027af6 	.word	0x00027af6

0001f8a4 <_open_r>:
_open_r():
   1f8a4:	b538      	push	{r3, r4, r5, lr}
   1f8a6:	4605      	mov	r5, r0
   1f8a8:	4608      	mov	r0, r1
   1f8aa:	4611      	mov	r1, r2
   1f8ac:	2200      	movs	r2, #0
   1f8ae:	4c05      	ldr	r4, [pc, #20]	; (1f8c4 <_open_r+0x20>)
   1f8b0:	6022      	str	r2, [r4, #0]
   1f8b2:	461a      	mov	r2, r3
   1f8b4:	f7f7 fcee 	bl	17294 <_open>
   1f8b8:	1c43      	adds	r3, r0, #1
   1f8ba:	d102      	bne.n	1f8c2 <_open_r+0x1e>
   1f8bc:	6823      	ldr	r3, [r4, #0]
   1f8be:	b103      	cbz	r3, 1f8c2 <_open_r+0x1e>
   1f8c0:	602b      	str	r3, [r5, #0]
   1f8c2:	bd38      	pop	{r3, r4, r5, pc}
   1f8c4:	2007c8ec 	.word	0x2007c8ec

0001f8c8 <iprintf>:
iprintf():
   1f8c8:	b40f      	push	{r0, r1, r2, r3}
   1f8ca:	4b0a      	ldr	r3, [pc, #40]	; (1f8f4 <iprintf+0x2c>)
   1f8cc:	b513      	push	{r0, r1, r4, lr}
   1f8ce:	681c      	ldr	r4, [r3, #0]
   1f8d0:	b124      	cbz	r4, 1f8dc <iprintf+0x14>
   1f8d2:	69a3      	ldr	r3, [r4, #24]
   1f8d4:	b913      	cbnz	r3, 1f8dc <iprintf+0x14>
   1f8d6:	4620      	mov	r0, r4
   1f8d8:	f7fe fa78 	bl	1ddcc <__sinit>
   1f8dc:	ab05      	add	r3, sp, #20
   1f8de:	9a04      	ldr	r2, [sp, #16]
   1f8e0:	68a1      	ldr	r1, [r4, #8]
   1f8e2:	4620      	mov	r0, r4
   1f8e4:	9301      	str	r3, [sp, #4]
   1f8e6:	f004 f975 	bl	23bd4 <_vfiprintf_r>
   1f8ea:	b002      	add	sp, #8
   1f8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1f8f0:	b004      	add	sp, #16
   1f8f2:	4770      	bx	lr
   1f8f4:	2007c0e0 	.word	0x2007c0e0

0001f8f8 <_puts_r>:
_puts_r():
   1f8f8:	b570      	push	{r4, r5, r6, lr}
   1f8fa:	460e      	mov	r6, r1
   1f8fc:	4605      	mov	r5, r0
   1f8fe:	b118      	cbz	r0, 1f908 <_puts_r+0x10>
   1f900:	6983      	ldr	r3, [r0, #24]
   1f902:	b90b      	cbnz	r3, 1f908 <_puts_r+0x10>
   1f904:	f7fe fa62 	bl	1ddcc <__sinit>
   1f908:	69ab      	ldr	r3, [r5, #24]
   1f90a:	68ac      	ldr	r4, [r5, #8]
   1f90c:	b913      	cbnz	r3, 1f914 <_puts_r+0x1c>
   1f90e:	4628      	mov	r0, r5
   1f910:	f7fe fa5c 	bl	1ddcc <__sinit>
   1f914:	4b23      	ldr	r3, [pc, #140]	; (1f9a4 <_puts_r+0xac>)
   1f916:	429c      	cmp	r4, r3
   1f918:	d117      	bne.n	1f94a <_puts_r+0x52>
   1f91a:	686c      	ldr	r4, [r5, #4]
   1f91c:	89a3      	ldrh	r3, [r4, #12]
   1f91e:	071b      	lsls	r3, r3, #28
   1f920:	d51d      	bpl.n	1f95e <_puts_r+0x66>
   1f922:	6923      	ldr	r3, [r4, #16]
   1f924:	b1db      	cbz	r3, 1f95e <_puts_r+0x66>
   1f926:	3e01      	subs	r6, #1
   1f928:	68a3      	ldr	r3, [r4, #8]
   1f92a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1f92e:	3b01      	subs	r3, #1
   1f930:	60a3      	str	r3, [r4, #8]
   1f932:	b9e9      	cbnz	r1, 1f970 <_puts_r+0x78>
   1f934:	2b00      	cmp	r3, #0
   1f936:	da2e      	bge.n	1f996 <_puts_r+0x9e>
   1f938:	4622      	mov	r2, r4
   1f93a:	210a      	movs	r1, #10
   1f93c:	4628      	mov	r0, r5
   1f93e:	f001 fde7 	bl	21510 <__swbuf_r>
   1f942:	3001      	adds	r0, #1
   1f944:	d011      	beq.n	1f96a <_puts_r+0x72>
   1f946:	200a      	movs	r0, #10
   1f948:	bd70      	pop	{r4, r5, r6, pc}
   1f94a:	4b17      	ldr	r3, [pc, #92]	; (1f9a8 <_puts_r+0xb0>)
   1f94c:	429c      	cmp	r4, r3
   1f94e:	d101      	bne.n	1f954 <_puts_r+0x5c>
   1f950:	68ac      	ldr	r4, [r5, #8]
   1f952:	e7e3      	b.n	1f91c <_puts_r+0x24>
   1f954:	4b15      	ldr	r3, [pc, #84]	; (1f9ac <_puts_r+0xb4>)
   1f956:	429c      	cmp	r4, r3
   1f958:	bf08      	it	eq
   1f95a:	68ec      	ldreq	r4, [r5, #12]
   1f95c:	e7de      	b.n	1f91c <_puts_r+0x24>
   1f95e:	4621      	mov	r1, r4
   1f960:	4628      	mov	r0, r5
   1f962:	f001 fe47 	bl	215f4 <__swsetup_r>
   1f966:	2800      	cmp	r0, #0
   1f968:	d0dd      	beq.n	1f926 <_puts_r+0x2e>
   1f96a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f96e:	bd70      	pop	{r4, r5, r6, pc}
   1f970:	2b00      	cmp	r3, #0
   1f972:	da04      	bge.n	1f97e <_puts_r+0x86>
   1f974:	69a2      	ldr	r2, [r4, #24]
   1f976:	4293      	cmp	r3, r2
   1f978:	db06      	blt.n	1f988 <_puts_r+0x90>
   1f97a:	290a      	cmp	r1, #10
   1f97c:	d004      	beq.n	1f988 <_puts_r+0x90>
   1f97e:	6823      	ldr	r3, [r4, #0]
   1f980:	1c5a      	adds	r2, r3, #1
   1f982:	6022      	str	r2, [r4, #0]
   1f984:	7019      	strb	r1, [r3, #0]
   1f986:	e7cf      	b.n	1f928 <_puts_r+0x30>
   1f988:	4622      	mov	r2, r4
   1f98a:	4628      	mov	r0, r5
   1f98c:	f001 fdc0 	bl	21510 <__swbuf_r>
   1f990:	3001      	adds	r0, #1
   1f992:	d1c9      	bne.n	1f928 <_puts_r+0x30>
   1f994:	e7e9      	b.n	1f96a <_puts_r+0x72>
   1f996:	200a      	movs	r0, #10
   1f998:	6823      	ldr	r3, [r4, #0]
   1f99a:	1c5a      	adds	r2, r3, #1
   1f99c:	6022      	str	r2, [r4, #0]
   1f99e:	7018      	strb	r0, [r3, #0]
   1f9a0:	bd70      	pop	{r4, r5, r6, pc}
   1f9a2:	bf00      	nop
   1f9a4:	000279b8 	.word	0x000279b8
   1f9a8:	000279d8 	.word	0x000279d8
   1f9ac:	00027998 	.word	0x00027998

0001f9b0 <puts>:
puts():
   1f9b0:	4b02      	ldr	r3, [pc, #8]	; (1f9bc <puts+0xc>)
   1f9b2:	4601      	mov	r1, r0
   1f9b4:	6818      	ldr	r0, [r3, #0]
   1f9b6:	f7ff bf9f 	b.w	1f8f8 <_puts_r>
   1f9ba:	bf00      	nop
   1f9bc:	2007c0e0 	.word	0x2007c0e0

0001f9c0 <srand>:
srand():
   1f9c0:	b538      	push	{r3, r4, r5, lr}
   1f9c2:	4b12      	ldr	r3, [pc, #72]	; (1fa0c <srand+0x4c>)
   1f9c4:	4605      	mov	r5, r0
   1f9c6:	681c      	ldr	r4, [r3, #0]
   1f9c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f9ca:	b9d3      	cbnz	r3, 1fa02 <srand+0x42>
   1f9cc:	2018      	movs	r0, #24
   1f9ce:	f7fe fd6b 	bl	1e4a8 <malloc>
   1f9d2:	f243 330e 	movw	r3, #13070	; 0x330e
   1f9d6:	63a0      	str	r0, [r4, #56]	; 0x38
   1f9d8:	8003      	strh	r3, [r0, #0]
   1f9da:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1f9de:	8043      	strh	r3, [r0, #2]
   1f9e0:	f241 2334 	movw	r3, #4660	; 0x1234
   1f9e4:	8083      	strh	r3, [r0, #4]
   1f9e6:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1f9ea:	80c3      	strh	r3, [r0, #6]
   1f9ec:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1f9f0:	8103      	strh	r3, [r0, #8]
   1f9f2:	2305      	movs	r3, #5
   1f9f4:	8143      	strh	r3, [r0, #10]
   1f9f6:	230b      	movs	r3, #11
   1f9f8:	2201      	movs	r2, #1
   1f9fa:	8183      	strh	r3, [r0, #12]
   1f9fc:	2300      	movs	r3, #0
   1f9fe:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1fa02:	2200      	movs	r2, #0
   1fa04:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1fa06:	611d      	str	r5, [r3, #16]
   1fa08:	615a      	str	r2, [r3, #20]
   1fa0a:	bd38      	pop	{r3, r4, r5, pc}
   1fa0c:	2007c0e0 	.word	0x2007c0e0

0001fa10 <rand>:
rand():
   1fa10:	4b19      	ldr	r3, [pc, #100]	; (1fa78 <rand+0x68>)
   1fa12:	b510      	push	{r4, lr}
   1fa14:	681c      	ldr	r4, [r3, #0]
   1fa16:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1fa18:	b9d3      	cbnz	r3, 1fa50 <rand+0x40>
   1fa1a:	2018      	movs	r0, #24
   1fa1c:	f7fe fd44 	bl	1e4a8 <malloc>
   1fa20:	f243 330e 	movw	r3, #13070	; 0x330e
   1fa24:	63a0      	str	r0, [r4, #56]	; 0x38
   1fa26:	8003      	strh	r3, [r0, #0]
   1fa28:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1fa2c:	8043      	strh	r3, [r0, #2]
   1fa2e:	f241 2334 	movw	r3, #4660	; 0x1234
   1fa32:	8083      	strh	r3, [r0, #4]
   1fa34:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1fa38:	80c3      	strh	r3, [r0, #6]
   1fa3a:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1fa3e:	8103      	strh	r3, [r0, #8]
   1fa40:	2305      	movs	r3, #5
   1fa42:	8143      	strh	r3, [r0, #10]
   1fa44:	230b      	movs	r3, #11
   1fa46:	2201      	movs	r2, #1
   1fa48:	8183      	strh	r3, [r0, #12]
   1fa4a:	2300      	movs	r3, #0
   1fa4c:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1fa50:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1fa52:	480a      	ldr	r0, [pc, #40]	; (1fa7c <rand+0x6c>)
   1fa54:	690a      	ldr	r2, [r1, #16]
   1fa56:	694b      	ldr	r3, [r1, #20]
   1fa58:	4350      	muls	r0, r2
   1fa5a:	4c09      	ldr	r4, [pc, #36]	; (1fa80 <rand+0x70>)
   1fa5c:	fb04 0003 	mla	r0, r4, r3, r0
   1fa60:	fba2 2304 	umull	r2, r3, r2, r4
   1fa64:	3201      	adds	r2, #1
   1fa66:	4403      	add	r3, r0
   1fa68:	f143 0300 	adc.w	r3, r3, #0
   1fa6c:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1fa70:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1fa74:	bd10      	pop	{r4, pc}
   1fa76:	bf00      	nop
   1fa78:	2007c0e0 	.word	0x2007c0e0
   1fa7c:	5851f42d 	.word	0x5851f42d
   1fa80:	4c957f2d 	.word	0x4c957f2d

0001fa84 <realloc>:
realloc():
   1fa84:	4b02      	ldr	r3, [pc, #8]	; (1fa90 <realloc+0xc>)
   1fa86:	460a      	mov	r2, r1
   1fa88:	4601      	mov	r1, r0
   1fa8a:	6818      	ldr	r0, [r3, #0]
   1fa8c:	f003 bd56 	b.w	2353c <_realloc_r>
   1fa90:	2007c0e0 	.word	0x2007c0e0

0001fa94 <lflush>:
lflush():
   1fa94:	8983      	ldrh	r3, [r0, #12]
   1fa96:	f003 0309 	and.w	r3, r3, #9
   1fa9a:	2b09      	cmp	r3, #9
   1fa9c:	d101      	bne.n	1faa2 <lflush+0xe>
   1fa9e:	f7fe b8a3 	b.w	1dbe8 <fflush>
   1faa2:	2000      	movs	r0, #0
   1faa4:	4770      	bx	lr
   1faa6:	Address 0x000000000001faa6 is out of bounds.


0001faa8 <__srefill_r>:
__srefill_r():
   1faa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1faaa:	460c      	mov	r4, r1
   1faac:	4605      	mov	r5, r0
   1faae:	b118      	cbz	r0, 1fab8 <__srefill_r+0x10>
   1fab0:	6983      	ldr	r3, [r0, #24]
   1fab2:	b90b      	cbnz	r3, 1fab8 <__srefill_r+0x10>
   1fab4:	f7fe f98a 	bl	1ddcc <__sinit>
   1fab8:	4b3c      	ldr	r3, [pc, #240]	; (1fbac <__srefill_r+0x104>)
   1faba:	429c      	cmp	r4, r3
   1fabc:	d10a      	bne.n	1fad4 <__srefill_r+0x2c>
   1fabe:	686c      	ldr	r4, [r5, #4]
   1fac0:	2300      	movs	r3, #0
   1fac2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1fac6:	6063      	str	r3, [r4, #4]
   1fac8:	b293      	uxth	r3, r2
   1faca:	069e      	lsls	r6, r3, #26
   1facc:	d50c      	bpl.n	1fae8 <__srefill_r+0x40>
   1face:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fad2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fad4:	4b36      	ldr	r3, [pc, #216]	; (1fbb0 <__srefill_r+0x108>)
   1fad6:	429c      	cmp	r4, r3
   1fad8:	d101      	bne.n	1fade <__srefill_r+0x36>
   1fada:	68ac      	ldr	r4, [r5, #8]
   1fadc:	e7f0      	b.n	1fac0 <__srefill_r+0x18>
   1fade:	4b35      	ldr	r3, [pc, #212]	; (1fbb4 <__srefill_r+0x10c>)
   1fae0:	429c      	cmp	r4, r3
   1fae2:	bf08      	it	eq
   1fae4:	68ec      	ldreq	r4, [r5, #12]
   1fae6:	e7eb      	b.n	1fac0 <__srefill_r+0x18>
   1fae8:	0758      	lsls	r0, r3, #29
   1faea:	d449      	bmi.n	1fb80 <__srefill_r+0xd8>
   1faec:	06d9      	lsls	r1, r3, #27
   1faee:	d405      	bmi.n	1fafc <__srefill_r+0x54>
   1faf0:	2309      	movs	r3, #9
   1faf2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1faf6:	602b      	str	r3, [r5, #0]
   1faf8:	81a2      	strh	r2, [r4, #12]
   1fafa:	e7e8      	b.n	1face <__srefill_r+0x26>
   1fafc:	071a      	lsls	r2, r3, #28
   1fafe:	d50b      	bpl.n	1fb18 <__srefill_r+0x70>
   1fb00:	4621      	mov	r1, r4
   1fb02:	4628      	mov	r0, r5
   1fb04:	f7fe f846 	bl	1db94 <_fflush_r>
   1fb08:	2800      	cmp	r0, #0
   1fb0a:	d1e0      	bne.n	1face <__srefill_r+0x26>
   1fb0c:	89a3      	ldrh	r3, [r4, #12]
   1fb0e:	60a0      	str	r0, [r4, #8]
   1fb10:	f023 0308 	bic.w	r3, r3, #8
   1fb14:	81a3      	strh	r3, [r4, #12]
   1fb16:	61a0      	str	r0, [r4, #24]
   1fb18:	89a3      	ldrh	r3, [r4, #12]
   1fb1a:	f043 0304 	orr.w	r3, r3, #4
   1fb1e:	81a3      	strh	r3, [r4, #12]
   1fb20:	6923      	ldr	r3, [r4, #16]
   1fb22:	b91b      	cbnz	r3, 1fb2c <__srefill_r+0x84>
   1fb24:	4621      	mov	r1, r4
   1fb26:	4628      	mov	r0, r5
   1fb28:	f7fe fc7e 	bl	1e428 <__smakebuf_r>
   1fb2c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1fb30:	b2be      	uxth	r6, r7
   1fb32:	07b3      	lsls	r3, r6, #30
   1fb34:	d00f      	beq.n	1fb56 <__srefill_r+0xae>
   1fb36:	2301      	movs	r3, #1
   1fb38:	81a3      	strh	r3, [r4, #12]
   1fb3a:	4b1f      	ldr	r3, [pc, #124]	; (1fbb8 <__srefill_r+0x110>)
   1fb3c:	491f      	ldr	r1, [pc, #124]	; (1fbbc <__srefill_r+0x114>)
   1fb3e:	6818      	ldr	r0, [r3, #0]
   1fb40:	f006 0609 	and.w	r6, r6, #9
   1fb44:	f7fe fa8a 	bl	1e05c <_fwalk>
   1fb48:	2e09      	cmp	r6, #9
   1fb4a:	81a7      	strh	r7, [r4, #12]
   1fb4c:	d103      	bne.n	1fb56 <__srefill_r+0xae>
   1fb4e:	4621      	mov	r1, r4
   1fb50:	4628      	mov	r0, r5
   1fb52:	f7fd ff97 	bl	1da84 <__sflush_r>
   1fb56:	6922      	ldr	r2, [r4, #16]
   1fb58:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1fb5a:	6022      	str	r2, [r4, #0]
   1fb5c:	6963      	ldr	r3, [r4, #20]
   1fb5e:	6a21      	ldr	r1, [r4, #32]
   1fb60:	4628      	mov	r0, r5
   1fb62:	47b0      	blx	r6
   1fb64:	2800      	cmp	r0, #0
   1fb66:	6060      	str	r0, [r4, #4]
   1fb68:	dc1d      	bgt.n	1fba6 <__srefill_r+0xfe>
   1fb6a:	bf18      	it	ne
   1fb6c:	2200      	movne	r2, #0
   1fb6e:	89a3      	ldrh	r3, [r4, #12]
   1fb70:	bf16      	itet	ne
   1fb72:	6062      	strne	r2, [r4, #4]
   1fb74:	f043 0320 	orreq.w	r3, r3, #32
   1fb78:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1fb7c:	81a3      	strh	r3, [r4, #12]
   1fb7e:	e7a6      	b.n	1face <__srefill_r+0x26>
   1fb80:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1fb82:	2900      	cmp	r1, #0
   1fb84:	d0cc      	beq.n	1fb20 <__srefill_r+0x78>
   1fb86:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fb8a:	4299      	cmp	r1, r3
   1fb8c:	d002      	beq.n	1fb94 <__srefill_r+0xec>
   1fb8e:	4628      	mov	r0, r5
   1fb90:	f7fe ff6a 	bl	1ea68 <_free_r>
   1fb94:	2000      	movs	r0, #0
   1fb96:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1fb98:	6360      	str	r0, [r4, #52]	; 0x34
   1fb9a:	6063      	str	r3, [r4, #4]
   1fb9c:	2b00      	cmp	r3, #0
   1fb9e:	d0bf      	beq.n	1fb20 <__srefill_r+0x78>
   1fba0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1fba2:	6023      	str	r3, [r4, #0]
   1fba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fba6:	2000      	movs	r0, #0
   1fba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1fbaa:	bf00      	nop
   1fbac:	000279b8 	.word	0x000279b8
   1fbb0:	000279d8 	.word	0x000279d8
   1fbb4:	00027998 	.word	0x00027998
   1fbb8:	000279f8 	.word	0x000279f8
   1fbbc:	0001fa95 	.word	0x0001fa95

0001fbc0 <__srget_r>:
__srget_r():
   1fbc0:	b538      	push	{r3, r4, r5, lr}
   1fbc2:	460c      	mov	r4, r1
   1fbc4:	4605      	mov	r5, r0
   1fbc6:	b118      	cbz	r0, 1fbd0 <__srget_r+0x10>
   1fbc8:	6983      	ldr	r3, [r0, #24]
   1fbca:	b90b      	cbnz	r3, 1fbd0 <__srget_r+0x10>
   1fbcc:	f7fe f8fe 	bl	1ddcc <__sinit>
   1fbd0:	4b0e      	ldr	r3, [pc, #56]	; (1fc0c <__srget_r+0x4c>)
   1fbd2:	429c      	cmp	r4, r3
   1fbd4:	d10d      	bne.n	1fbf2 <__srget_r+0x32>
   1fbd6:	686c      	ldr	r4, [r5, #4]
   1fbd8:	4621      	mov	r1, r4
   1fbda:	4628      	mov	r0, r5
   1fbdc:	f7ff ff64 	bl	1faa8 <__srefill_r>
   1fbe0:	b988      	cbnz	r0, 1fc06 <__srget_r+0x46>
   1fbe2:	6863      	ldr	r3, [r4, #4]
   1fbe4:	3b01      	subs	r3, #1
   1fbe6:	6063      	str	r3, [r4, #4]
   1fbe8:	6823      	ldr	r3, [r4, #0]
   1fbea:	1c5a      	adds	r2, r3, #1
   1fbec:	6022      	str	r2, [r4, #0]
   1fbee:	7818      	ldrb	r0, [r3, #0]
   1fbf0:	bd38      	pop	{r3, r4, r5, pc}
   1fbf2:	4b07      	ldr	r3, [pc, #28]	; (1fc10 <__srget_r+0x50>)
   1fbf4:	429c      	cmp	r4, r3
   1fbf6:	d101      	bne.n	1fbfc <__srget_r+0x3c>
   1fbf8:	68ac      	ldr	r4, [r5, #8]
   1fbfa:	e7ed      	b.n	1fbd8 <__srget_r+0x18>
   1fbfc:	4b05      	ldr	r3, [pc, #20]	; (1fc14 <__srget_r+0x54>)
   1fbfe:	429c      	cmp	r4, r3
   1fc00:	bf08      	it	eq
   1fc02:	68ec      	ldreq	r4, [r5, #12]
   1fc04:	e7e8      	b.n	1fbd8 <__srget_r+0x18>
   1fc06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fc0a:	bd38      	pop	{r3, r4, r5, pc}
   1fc0c:	000279b8 	.word	0x000279b8
   1fc10:	000279d8 	.word	0x000279d8
   1fc14:	00027998 	.word	0x00027998

0001fc18 <_sbrk_r>:
_sbrk_r():
   1fc18:	b538      	push	{r3, r4, r5, lr}
   1fc1a:	2300      	movs	r3, #0
   1fc1c:	4c05      	ldr	r4, [pc, #20]	; (1fc34 <_sbrk_r+0x1c>)
   1fc1e:	4605      	mov	r5, r0
   1fc20:	4608      	mov	r0, r1
   1fc22:	6023      	str	r3, [r4, #0]
   1fc24:	f7f7 f8ee 	bl	16e04 <_sbrk>
   1fc28:	1c43      	adds	r3, r0, #1
   1fc2a:	d102      	bne.n	1fc32 <_sbrk_r+0x1a>
   1fc2c:	6823      	ldr	r3, [r4, #0]
   1fc2e:	b103      	cbz	r3, 1fc32 <_sbrk_r+0x1a>
   1fc30:	602b      	str	r3, [r5, #0]
   1fc32:	bd38      	pop	{r3, r4, r5, pc}
   1fc34:	2007c8ec 	.word	0x2007c8ec

0001fc38 <iscanf>:
scanf():
   1fc38:	b40f      	push	{r0, r1, r2, r3}
   1fc3a:	4b0a      	ldr	r3, [pc, #40]	; (1fc64 <iscanf+0x2c>)
   1fc3c:	b513      	push	{r0, r1, r4, lr}
   1fc3e:	681c      	ldr	r4, [r3, #0]
   1fc40:	b124      	cbz	r4, 1fc4c <iscanf+0x14>
   1fc42:	69a3      	ldr	r3, [r4, #24]
   1fc44:	b913      	cbnz	r3, 1fc4c <iscanf+0x14>
   1fc46:	4620      	mov	r0, r4
   1fc48:	f7fe f8c0 	bl	1ddcc <__sinit>
   1fc4c:	ab05      	add	r3, sp, #20
   1fc4e:	9a04      	ldr	r2, [sp, #16]
   1fc50:	6861      	ldr	r1, [r4, #4]
   1fc52:	4620      	mov	r0, r4
   1fc54:	9301      	str	r3, [sp, #4]
   1fc56:	f004 fa27 	bl	240a8 <_vfiscanf_r>
   1fc5a:	b002      	add	sp, #8
   1fc5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1fc60:	b004      	add	sp, #16
   1fc62:	4770      	bx	lr
   1fc64:	2007c0e0 	.word	0x2007c0e0

0001fc68 <setvbuf>:
setvbuf():
   1fc68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1fc6c:	461d      	mov	r5, r3
   1fc6e:	4b51      	ldr	r3, [pc, #324]	; (1fdb4 <setvbuf+0x14c>)
   1fc70:	4604      	mov	r4, r0
   1fc72:	681e      	ldr	r6, [r3, #0]
   1fc74:	460f      	mov	r7, r1
   1fc76:	4690      	mov	r8, r2
   1fc78:	b126      	cbz	r6, 1fc84 <setvbuf+0x1c>
   1fc7a:	69b3      	ldr	r3, [r6, #24]
   1fc7c:	b913      	cbnz	r3, 1fc84 <setvbuf+0x1c>
   1fc7e:	4630      	mov	r0, r6
   1fc80:	f7fe f8a4 	bl	1ddcc <__sinit>
   1fc84:	4b4c      	ldr	r3, [pc, #304]	; (1fdb8 <setvbuf+0x150>)
   1fc86:	429c      	cmp	r4, r3
   1fc88:	d152      	bne.n	1fd30 <setvbuf+0xc8>
   1fc8a:	6874      	ldr	r4, [r6, #4]
   1fc8c:	f1b8 0f02 	cmp.w	r8, #2
   1fc90:	d006      	beq.n	1fca0 <setvbuf+0x38>
   1fc92:	f1b8 0f01 	cmp.w	r8, #1
   1fc96:	f200 8089 	bhi.w	1fdac <setvbuf+0x144>
   1fc9a:	2d00      	cmp	r5, #0
   1fc9c:	f2c0 8086 	blt.w	1fdac <setvbuf+0x144>
   1fca0:	4621      	mov	r1, r4
   1fca2:	4630      	mov	r0, r6
   1fca4:	f7fd ff76 	bl	1db94 <_fflush_r>
   1fca8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1fcaa:	b141      	cbz	r1, 1fcbe <setvbuf+0x56>
   1fcac:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1fcb0:	4299      	cmp	r1, r3
   1fcb2:	d002      	beq.n	1fcba <setvbuf+0x52>
   1fcb4:	4630      	mov	r0, r6
   1fcb6:	f7fe fed7 	bl	1ea68 <_free_r>
   1fcba:	2300      	movs	r3, #0
   1fcbc:	6363      	str	r3, [r4, #52]	; 0x34
   1fcbe:	2300      	movs	r3, #0
   1fcc0:	61a3      	str	r3, [r4, #24]
   1fcc2:	6063      	str	r3, [r4, #4]
   1fcc4:	89a3      	ldrh	r3, [r4, #12]
   1fcc6:	061b      	lsls	r3, r3, #24
   1fcc8:	d503      	bpl.n	1fcd2 <setvbuf+0x6a>
   1fcca:	6921      	ldr	r1, [r4, #16]
   1fccc:	4630      	mov	r0, r6
   1fcce:	f7fe fecb 	bl	1ea68 <_free_r>
   1fcd2:	89a3      	ldrh	r3, [r4, #12]
   1fcd4:	f1b8 0f02 	cmp.w	r8, #2
   1fcd8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1fcdc:	f023 0303 	bic.w	r3, r3, #3
   1fce0:	81a3      	strh	r3, [r4, #12]
   1fce2:	d05d      	beq.n	1fda0 <setvbuf+0x138>
   1fce4:	ab01      	add	r3, sp, #4
   1fce6:	466a      	mov	r2, sp
   1fce8:	4621      	mov	r1, r4
   1fcea:	4630      	mov	r0, r6
   1fcec:	f7fe fb78 	bl	1e3e0 <__swhatbuf_r>
   1fcf0:	89a3      	ldrh	r3, [r4, #12]
   1fcf2:	4318      	orrs	r0, r3
   1fcf4:	81a0      	strh	r0, [r4, #12]
   1fcf6:	bb2d      	cbnz	r5, 1fd44 <setvbuf+0xdc>
   1fcf8:	9d00      	ldr	r5, [sp, #0]
   1fcfa:	4628      	mov	r0, r5
   1fcfc:	f7fe fbd4 	bl	1e4a8 <malloc>
   1fd00:	4607      	mov	r7, r0
   1fd02:	2800      	cmp	r0, #0
   1fd04:	d14e      	bne.n	1fda4 <setvbuf+0x13c>
   1fd06:	f8dd 9000 	ldr.w	r9, [sp]
   1fd0a:	45a9      	cmp	r9, r5
   1fd0c:	d13c      	bne.n	1fd88 <setvbuf+0x120>
   1fd0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fd12:	89a3      	ldrh	r3, [r4, #12]
   1fd14:	f043 0302 	orr.w	r3, r3, #2
   1fd18:	81a3      	strh	r3, [r4, #12]
   1fd1a:	2300      	movs	r3, #0
   1fd1c:	60a3      	str	r3, [r4, #8]
   1fd1e:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1fd22:	6023      	str	r3, [r4, #0]
   1fd24:	6123      	str	r3, [r4, #16]
   1fd26:	2301      	movs	r3, #1
   1fd28:	6163      	str	r3, [r4, #20]
   1fd2a:	b003      	add	sp, #12
   1fd2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1fd30:	4b22      	ldr	r3, [pc, #136]	; (1fdbc <setvbuf+0x154>)
   1fd32:	429c      	cmp	r4, r3
   1fd34:	d101      	bne.n	1fd3a <setvbuf+0xd2>
   1fd36:	68b4      	ldr	r4, [r6, #8]
   1fd38:	e7a8      	b.n	1fc8c <setvbuf+0x24>
   1fd3a:	4b21      	ldr	r3, [pc, #132]	; (1fdc0 <setvbuf+0x158>)
   1fd3c:	429c      	cmp	r4, r3
   1fd3e:	bf08      	it	eq
   1fd40:	68f4      	ldreq	r4, [r6, #12]
   1fd42:	e7a3      	b.n	1fc8c <setvbuf+0x24>
   1fd44:	2f00      	cmp	r7, #0
   1fd46:	d0d8      	beq.n	1fcfa <setvbuf+0x92>
   1fd48:	69b3      	ldr	r3, [r6, #24]
   1fd4a:	b913      	cbnz	r3, 1fd52 <setvbuf+0xea>
   1fd4c:	4630      	mov	r0, r6
   1fd4e:	f7fe f83d 	bl	1ddcc <__sinit>
   1fd52:	f1b8 0f01 	cmp.w	r8, #1
   1fd56:	bf08      	it	eq
   1fd58:	89a3      	ldrheq	r3, [r4, #12]
   1fd5a:	6027      	str	r7, [r4, #0]
   1fd5c:	bf04      	itt	eq
   1fd5e:	f043 0301 	orreq.w	r3, r3, #1
   1fd62:	81a3      	strheq	r3, [r4, #12]
   1fd64:	89a3      	ldrh	r3, [r4, #12]
   1fd66:	6127      	str	r7, [r4, #16]
   1fd68:	f013 0008 	ands.w	r0, r3, #8
   1fd6c:	6165      	str	r5, [r4, #20]
   1fd6e:	d01b      	beq.n	1fda8 <setvbuf+0x140>
   1fd70:	f013 0001 	ands.w	r0, r3, #1
   1fd74:	f04f 0300 	mov.w	r3, #0
   1fd78:	bf1f      	itttt	ne
   1fd7a:	426d      	negne	r5, r5
   1fd7c:	60a3      	strne	r3, [r4, #8]
   1fd7e:	61a5      	strne	r5, [r4, #24]
   1fd80:	4618      	movne	r0, r3
   1fd82:	bf08      	it	eq
   1fd84:	60a5      	streq	r5, [r4, #8]
   1fd86:	e7d0      	b.n	1fd2a <setvbuf+0xc2>
   1fd88:	4648      	mov	r0, r9
   1fd8a:	f7fe fb8d 	bl	1e4a8 <malloc>
   1fd8e:	4607      	mov	r7, r0
   1fd90:	2800      	cmp	r0, #0
   1fd92:	d0bc      	beq.n	1fd0e <setvbuf+0xa6>
   1fd94:	89a3      	ldrh	r3, [r4, #12]
   1fd96:	464d      	mov	r5, r9
   1fd98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1fd9c:	81a3      	strh	r3, [r4, #12]
   1fd9e:	e7d3      	b.n	1fd48 <setvbuf+0xe0>
   1fda0:	2000      	movs	r0, #0
   1fda2:	e7b6      	b.n	1fd12 <setvbuf+0xaa>
   1fda4:	46a9      	mov	r9, r5
   1fda6:	e7f5      	b.n	1fd94 <setvbuf+0x12c>
   1fda8:	60a0      	str	r0, [r4, #8]
   1fdaa:	e7be      	b.n	1fd2a <setvbuf+0xc2>
   1fdac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fdb0:	e7bb      	b.n	1fd2a <setvbuf+0xc2>
   1fdb2:	bf00      	nop
   1fdb4:	2007c0e0 	.word	0x2007c0e0
   1fdb8:	000279b8 	.word	0x000279b8
   1fdbc:	000279d8 	.word	0x000279d8
   1fdc0:	00027998 	.word	0x00027998

0001fdc4 <nanf>:
nanf():
   1fdc4:	4800      	ldr	r0, [pc, #0]	; (1fdc8 <nanf+0x4>)
   1fdc6:	4770      	bx	lr
   1fdc8:	7fc00000 	.word	0x7fc00000

0001fdcc <_raise_r>:
_raise_r():
   1fdcc:	291f      	cmp	r1, #31
   1fdce:	b538      	push	{r3, r4, r5, lr}
   1fdd0:	4604      	mov	r4, r0
   1fdd2:	460d      	mov	r5, r1
   1fdd4:	d904      	bls.n	1fde0 <_raise_r+0x14>
   1fdd6:	2316      	movs	r3, #22
   1fdd8:	6003      	str	r3, [r0, #0]
   1fdda:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fdde:	bd38      	pop	{r3, r4, r5, pc}
   1fde0:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1fde2:	b112      	cbz	r2, 1fdea <_raise_r+0x1e>
   1fde4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1fde8:	b94b      	cbnz	r3, 1fdfe <_raise_r+0x32>
   1fdea:	4620      	mov	r0, r4
   1fdec:	f000 f830 	bl	1fe50 <_getpid_r>
   1fdf0:	462a      	mov	r2, r5
   1fdf2:	4601      	mov	r1, r0
   1fdf4:	4620      	mov	r0, r4
   1fdf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1fdfa:	f000 b817 	b.w	1fe2c <_kill_r>
   1fdfe:	2b01      	cmp	r3, #1
   1fe00:	d00a      	beq.n	1fe18 <_raise_r+0x4c>
   1fe02:	1c59      	adds	r1, r3, #1
   1fe04:	d103      	bne.n	1fe0e <_raise_r+0x42>
   1fe06:	2316      	movs	r3, #22
   1fe08:	6003      	str	r3, [r0, #0]
   1fe0a:	2001      	movs	r0, #1
   1fe0c:	bd38      	pop	{r3, r4, r5, pc}
   1fe0e:	2400      	movs	r4, #0
   1fe10:	4628      	mov	r0, r5
   1fe12:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1fe16:	4798      	blx	r3
   1fe18:	2000      	movs	r0, #0
   1fe1a:	bd38      	pop	{r3, r4, r5, pc}

0001fe1c <raise>:
raise():
   1fe1c:	4b02      	ldr	r3, [pc, #8]	; (1fe28 <raise+0xc>)
   1fe1e:	4601      	mov	r1, r0
   1fe20:	6818      	ldr	r0, [r3, #0]
   1fe22:	f7ff bfd3 	b.w	1fdcc <_raise_r>
   1fe26:	bf00      	nop
   1fe28:	2007c0e0 	.word	0x2007c0e0

0001fe2c <_kill_r>:
_kill_r():
   1fe2c:	b538      	push	{r3, r4, r5, lr}
   1fe2e:	2300      	movs	r3, #0
   1fe30:	4c06      	ldr	r4, [pc, #24]	; (1fe4c <_kill_r+0x20>)
   1fe32:	4605      	mov	r5, r0
   1fe34:	4608      	mov	r0, r1
   1fe36:	4611      	mov	r1, r2
   1fe38:	6023      	str	r3, [r4, #0]
   1fe3a:	f7f7 f92d 	bl	17098 <_kill>
   1fe3e:	1c43      	adds	r3, r0, #1
   1fe40:	d102      	bne.n	1fe48 <_kill_r+0x1c>
   1fe42:	6823      	ldr	r3, [r4, #0]
   1fe44:	b103      	cbz	r3, 1fe48 <_kill_r+0x1c>
   1fe46:	602b      	str	r3, [r5, #0]
   1fe48:	bd38      	pop	{r3, r4, r5, pc}
   1fe4a:	bf00      	nop
   1fe4c:	2007c8ec 	.word	0x2007c8ec

0001fe50 <_getpid_r>:
_getpid_r():
   1fe50:	f7f7 b932 	b.w	170b8 <_getpid>

0001fe54 <sniprintf>:
sniprintf():
   1fe54:	b40c      	push	{r2, r3}
   1fe56:	b530      	push	{r4, r5, lr}
   1fe58:	4b17      	ldr	r3, [pc, #92]	; (1feb8 <sniprintf+0x64>)
   1fe5a:	1e0c      	subs	r4, r1, #0
   1fe5c:	b09d      	sub	sp, #116	; 0x74
   1fe5e:	681d      	ldr	r5, [r3, #0]
   1fe60:	da08      	bge.n	1fe74 <sniprintf+0x20>
   1fe62:	238b      	movs	r3, #139	; 0x8b
   1fe64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fe68:	602b      	str	r3, [r5, #0]
   1fe6a:	b01d      	add	sp, #116	; 0x74
   1fe6c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1fe70:	b002      	add	sp, #8
   1fe72:	4770      	bx	lr
   1fe74:	f44f 7302 	mov.w	r3, #520	; 0x208
   1fe78:	f8ad 3014 	strh.w	r3, [sp, #20]
   1fe7c:	bf0c      	ite	eq
   1fe7e:	4623      	moveq	r3, r4
   1fe80:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1fe84:	9304      	str	r3, [sp, #16]
   1fe86:	9307      	str	r3, [sp, #28]
   1fe88:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1fe8c:	9002      	str	r0, [sp, #8]
   1fe8e:	9006      	str	r0, [sp, #24]
   1fe90:	f8ad 3016 	strh.w	r3, [sp, #22]
   1fe94:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1fe96:	ab21      	add	r3, sp, #132	; 0x84
   1fe98:	a902      	add	r1, sp, #8
   1fe9a:	4628      	mov	r0, r5
   1fe9c:	9301      	str	r3, [sp, #4]
   1fe9e:	f003 fbcf 	bl	23640 <_svfiprintf_r>
   1fea2:	1c43      	adds	r3, r0, #1
   1fea4:	bfbc      	itt	lt
   1fea6:	238b      	movlt	r3, #139	; 0x8b
   1fea8:	602b      	strlt	r3, [r5, #0]
   1feaa:	2c00      	cmp	r4, #0
   1feac:	d0dd      	beq.n	1fe6a <sniprintf+0x16>
   1feae:	2200      	movs	r2, #0
   1feb0:	9b02      	ldr	r3, [sp, #8]
   1feb2:	701a      	strb	r2, [r3, #0]
   1feb4:	e7d9      	b.n	1fe6a <sniprintf+0x16>
   1feb6:	bf00      	nop
   1feb8:	2007c0e0 	.word	0x2007c0e0

0001febc <siprintf>:
siprintf():
   1febc:	b40e      	push	{r1, r2, r3}
   1febe:	f44f 7102 	mov.w	r1, #520	; 0x208
   1fec2:	b500      	push	{lr}
   1fec4:	b09c      	sub	sp, #112	; 0x70
   1fec6:	f8ad 1014 	strh.w	r1, [sp, #20]
   1feca:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1fece:	9104      	str	r1, [sp, #16]
   1fed0:	9107      	str	r1, [sp, #28]
   1fed2:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1fed6:	ab1d      	add	r3, sp, #116	; 0x74
   1fed8:	9002      	str	r0, [sp, #8]
   1feda:	9006      	str	r0, [sp, #24]
   1fedc:	4808      	ldr	r0, [pc, #32]	; (1ff00 <siprintf+0x44>)
   1fede:	f853 2b04 	ldr.w	r2, [r3], #4
   1fee2:	f8ad 1016 	strh.w	r1, [sp, #22]
   1fee6:	6800      	ldr	r0, [r0, #0]
   1fee8:	a902      	add	r1, sp, #8
   1feea:	9301      	str	r3, [sp, #4]
   1feec:	f003 fba8 	bl	23640 <_svfiprintf_r>
   1fef0:	2200      	movs	r2, #0
   1fef2:	9b02      	ldr	r3, [sp, #8]
   1fef4:	701a      	strb	r2, [r3, #0]
   1fef6:	b01c      	add	sp, #112	; 0x70
   1fef8:	f85d eb04 	ldr.w	lr, [sp], #4
   1fefc:	b003      	add	sp, #12
   1fefe:	4770      	bx	lr
   1ff00:	2007c0e0 	.word	0x2007c0e0

0001ff04 <siscanf>:
siscanf():
   1ff04:	b40e      	push	{r1, r2, r3}
   1ff06:	f44f 7201 	mov.w	r2, #516	; 0x204
   1ff0a:	b530      	push	{r4, r5, lr}
   1ff0c:	b09c      	sub	sp, #112	; 0x70
   1ff0e:	ac1f      	add	r4, sp, #124	; 0x7c
   1ff10:	f854 5b04 	ldr.w	r5, [r4], #4
   1ff14:	f8ad 2014 	strh.w	r2, [sp, #20]
   1ff18:	9002      	str	r0, [sp, #8]
   1ff1a:	9006      	str	r0, [sp, #24]
   1ff1c:	f000 f8ae 	bl	2007c <strlen>
   1ff20:	4b0b      	ldr	r3, [pc, #44]	; (1ff50 <siscanf+0x4c>)
   1ff22:	9003      	str	r0, [sp, #12]
   1ff24:	930b      	str	r3, [sp, #44]	; 0x2c
   1ff26:	2300      	movs	r3, #0
   1ff28:	930f      	str	r3, [sp, #60]	; 0x3c
   1ff2a:	9314      	str	r3, [sp, #80]	; 0x50
   1ff2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1ff30:	9007      	str	r0, [sp, #28]
   1ff32:	4808      	ldr	r0, [pc, #32]	; (1ff54 <siscanf+0x50>)
   1ff34:	f8ad 3016 	strh.w	r3, [sp, #22]
   1ff38:	462a      	mov	r2, r5
   1ff3a:	4623      	mov	r3, r4
   1ff3c:	a902      	add	r1, sp, #8
   1ff3e:	6800      	ldr	r0, [r0, #0]
   1ff40:	9401      	str	r4, [sp, #4]
   1ff42:	f003 fccb 	bl	238dc <__ssvfiscanf_r>
   1ff46:	b01c      	add	sp, #112	; 0x70
   1ff48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1ff4c:	b003      	add	sp, #12
   1ff4e:	4770      	bx	lr
   1ff50:	0001ff7b 	.word	0x0001ff7b
   1ff54:	2007c0e0 	.word	0x2007c0e0

0001ff58 <__sread>:
__sread():
   1ff58:	b510      	push	{r4, lr}
   1ff5a:	460c      	mov	r4, r1
   1ff5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff60:	f004 fa24 	bl	243ac <_read_r>
   1ff64:	2800      	cmp	r0, #0
   1ff66:	bfab      	itete	ge
   1ff68:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1ff6a:	89a3      	ldrhlt	r3, [r4, #12]
   1ff6c:	181b      	addge	r3, r3, r0
   1ff6e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1ff72:	bfac      	ite	ge
   1ff74:	6563      	strge	r3, [r4, #84]	; 0x54
   1ff76:	81a3      	strhlt	r3, [r4, #12]
   1ff78:	bd10      	pop	{r4, pc}

0001ff7a <__seofread>:
__seofread():
   1ff7a:	2000      	movs	r0, #0
   1ff7c:	4770      	bx	lr

0001ff7e <__swrite>:
__swrite():
   1ff7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ff82:	461f      	mov	r7, r3
   1ff84:	898b      	ldrh	r3, [r1, #12]
   1ff86:	4605      	mov	r5, r0
   1ff88:	05db      	lsls	r3, r3, #23
   1ff8a:	460c      	mov	r4, r1
   1ff8c:	4616      	mov	r6, r2
   1ff8e:	d505      	bpl.n	1ff9c <__swrite+0x1e>
   1ff90:	2302      	movs	r3, #2
   1ff92:	2200      	movs	r2, #0
   1ff94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ff98:	f002 fed6 	bl	22d48 <_lseek_r>
   1ff9c:	89a3      	ldrh	r3, [r4, #12]
   1ff9e:	4632      	mov	r2, r6
   1ffa0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1ffa4:	81a3      	strh	r3, [r4, #12]
   1ffa6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1ffaa:	463b      	mov	r3, r7
   1ffac:	4628      	mov	r0, r5
   1ffae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1ffb2:	f001 bb0d 	b.w	215d0 <_write_r>

0001ffb6 <__sseek>:
__sseek():
   1ffb6:	b510      	push	{r4, lr}
   1ffb8:	460c      	mov	r4, r1
   1ffba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ffbe:	f002 fec3 	bl	22d48 <_lseek_r>
   1ffc2:	1c43      	adds	r3, r0, #1
   1ffc4:	89a3      	ldrh	r3, [r4, #12]
   1ffc6:	bf15      	itete	ne
   1ffc8:	6560      	strne	r0, [r4, #84]	; 0x54
   1ffca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1ffce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1ffd2:	81a3      	strheq	r3, [r4, #12]
   1ffd4:	bf18      	it	ne
   1ffd6:	81a3      	strhne	r3, [r4, #12]
   1ffd8:	bd10      	pop	{r4, pc}

0001ffda <__sclose>:
__sclose():
   1ffda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ffde:	f001 bbb3 	b.w	21748 <_close_r>

0001ffe2 <strcasecmp>:
strcasecmp():
   1ffe2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ffe4:	4606      	mov	r6, r0
   1ffe6:	460f      	mov	r7, r1
   1ffe8:	f816 4b01 	ldrb.w	r4, [r6], #1
   1ffec:	f7fe f9ea 	bl	1e3c4 <__locale_ctype_ptr>
   1fff0:	4420      	add	r0, r4
   1fff2:	7843      	ldrb	r3, [r0, #1]
   1fff4:	f817 5b01 	ldrb.w	r5, [r7], #1
   1fff8:	f003 0303 	and.w	r3, r3, #3
   1fffc:	2b01      	cmp	r3, #1
   1fffe:	bf08      	it	eq
   20000:	3420      	addeq	r4, #32
   20002:	f7fe f9df 	bl	1e3c4 <__locale_ctype_ptr>
   20006:	4428      	add	r0, r5
   20008:	7843      	ldrb	r3, [r0, #1]
   2000a:	f003 0303 	and.w	r3, r3, #3
   2000e:	2b01      	cmp	r3, #1
   20010:	bf08      	it	eq
   20012:	3520      	addeq	r5, #32
   20014:	1b60      	subs	r0, r4, r5
   20016:	d101      	bne.n	2001c <strcasecmp+0x3a>
   20018:	2d00      	cmp	r5, #0
   2001a:	d1e5      	bne.n	1ffe8 <strcasecmp+0x6>
   2001c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0002001e <strcat>:
strcat():
   2001e:	4602      	mov	r2, r0
   20020:	b510      	push	{r4, lr}
   20022:	4613      	mov	r3, r2
   20024:	781c      	ldrb	r4, [r3, #0]
   20026:	3201      	adds	r2, #1
   20028:	2c00      	cmp	r4, #0
   2002a:	d1fa      	bne.n	20022 <strcat+0x4>
   2002c:	3b01      	subs	r3, #1
   2002e:	f811 2b01 	ldrb.w	r2, [r1], #1
   20032:	f803 2f01 	strb.w	r2, [r3, #1]!
   20036:	2a00      	cmp	r2, #0
   20038:	d1f9      	bne.n	2002e <strcat+0x10>
   2003a:	bd10      	pop	{r4, pc}

0002003c <strchr>:
strchr():
   2003c:	b2c9      	uxtb	r1, r1
   2003e:	4603      	mov	r3, r0
   20040:	f810 2b01 	ldrb.w	r2, [r0], #1
   20044:	b11a      	cbz	r2, 2004e <strchr+0x12>
   20046:	4291      	cmp	r1, r2
   20048:	d1f9      	bne.n	2003e <strchr+0x2>
   2004a:	4618      	mov	r0, r3
   2004c:	4770      	bx	lr
   2004e:	2900      	cmp	r1, #0
   20050:	bf0c      	ite	eq
   20052:	4618      	moveq	r0, r3
   20054:	2000      	movne	r0, #0
   20056:	4770      	bx	lr

00020058 <strcmp>:
strcmp():
   20058:	f810 2b01 	ldrb.w	r2, [r0], #1
   2005c:	f811 3b01 	ldrb.w	r3, [r1], #1
   20060:	2a01      	cmp	r2, #1
   20062:	bf28      	it	cs
   20064:	429a      	cmpcs	r2, r3
   20066:	d0f7      	beq.n	20058 <strcmp>
   20068:	1ad0      	subs	r0, r2, r3
   2006a:	4770      	bx	lr

0002006c <strcpy>:
strcpy():
   2006c:	4603      	mov	r3, r0
   2006e:	f811 2b01 	ldrb.w	r2, [r1], #1
   20072:	f803 2b01 	strb.w	r2, [r3], #1
   20076:	2a00      	cmp	r2, #0
   20078:	d1f9      	bne.n	2006e <strcpy+0x2>
   2007a:	4770      	bx	lr

0002007c <strlen>:
strlen():
   2007c:	4603      	mov	r3, r0
   2007e:	f813 2b01 	ldrb.w	r2, [r3], #1
   20082:	2a00      	cmp	r2, #0
   20084:	d1fb      	bne.n	2007e <strlen+0x2>
   20086:	1a18      	subs	r0, r3, r0
   20088:	3801      	subs	r0, #1
   2008a:	4770      	bx	lr

0002008c <strncasecmp>:
strncasecmp():
   2008c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20090:	4606      	mov	r6, r0
   20092:	460f      	mov	r7, r1
   20094:	eb00 0802 	add.w	r8, r0, r2
   20098:	4546      	cmp	r6, r8
   2009a:	d019      	beq.n	200d0 <strncasecmp+0x44>
   2009c:	f816 4b01 	ldrb.w	r4, [r6], #1
   200a0:	f7fe f990 	bl	1e3c4 <__locale_ctype_ptr>
   200a4:	4420      	add	r0, r4
   200a6:	7843      	ldrb	r3, [r0, #1]
   200a8:	f817 5b01 	ldrb.w	r5, [r7], #1
   200ac:	f003 0303 	and.w	r3, r3, #3
   200b0:	2b01      	cmp	r3, #1
   200b2:	bf08      	it	eq
   200b4:	3420      	addeq	r4, #32
   200b6:	f7fe f985 	bl	1e3c4 <__locale_ctype_ptr>
   200ba:	4428      	add	r0, r5
   200bc:	7843      	ldrb	r3, [r0, #1]
   200be:	f003 0303 	and.w	r3, r3, #3
   200c2:	2b01      	cmp	r3, #1
   200c4:	bf08      	it	eq
   200c6:	3520      	addeq	r5, #32
   200c8:	1b60      	subs	r0, r4, r5
   200ca:	d104      	bne.n	200d6 <strncasecmp+0x4a>
   200cc:	2d00      	cmp	r5, #0
   200ce:	d1e3      	bne.n	20098 <strncasecmp+0xc>
   200d0:	2000      	movs	r0, #0
   200d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   200d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000200da <strncmp>:
strncmp():
   200da:	b510      	push	{r4, lr}
   200dc:	b16a      	cbz	r2, 200fa <strncmp+0x20>
   200de:	3901      	subs	r1, #1
   200e0:	1884      	adds	r4, r0, r2
   200e2:	f810 3b01 	ldrb.w	r3, [r0], #1
   200e6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   200ea:	4293      	cmp	r3, r2
   200ec:	d103      	bne.n	200f6 <strncmp+0x1c>
   200ee:	42a0      	cmp	r0, r4
   200f0:	d001      	beq.n	200f6 <strncmp+0x1c>
   200f2:	2b00      	cmp	r3, #0
   200f4:	d1f5      	bne.n	200e2 <strncmp+0x8>
   200f6:	1a98      	subs	r0, r3, r2
   200f8:	bd10      	pop	{r4, pc}
   200fa:	4610      	mov	r0, r2
   200fc:	bd10      	pop	{r4, pc}

000200fe <strncpy>:
strncpy():
   200fe:	b570      	push	{r4, r5, r6, lr}
   20100:	4604      	mov	r4, r0
   20102:	b902      	cbnz	r2, 20106 <strncpy+0x8>
   20104:	bd70      	pop	{r4, r5, r6, pc}
   20106:	4623      	mov	r3, r4
   20108:	f811 5b01 	ldrb.w	r5, [r1], #1
   2010c:	1e56      	subs	r6, r2, #1
   2010e:	f803 5b01 	strb.w	r5, [r3], #1
   20112:	b91d      	cbnz	r5, 2011c <strncpy+0x1e>
   20114:	4414      	add	r4, r2
   20116:	42a3      	cmp	r3, r4
   20118:	d103      	bne.n	20122 <strncpy+0x24>
   2011a:	bd70      	pop	{r4, r5, r6, pc}
   2011c:	461c      	mov	r4, r3
   2011e:	4632      	mov	r2, r6
   20120:	e7ef      	b.n	20102 <strncpy+0x4>
   20122:	f803 5b01 	strb.w	r5, [r3], #1
   20126:	e7f6      	b.n	20116 <strncpy+0x18>

00020128 <strrchr>:
strrchr():
   20128:	b538      	push	{r3, r4, r5, lr}
   2012a:	4603      	mov	r3, r0
   2012c:	460d      	mov	r5, r1
   2012e:	b151      	cbz	r1, 20146 <strrchr+0x1e>
   20130:	2400      	movs	r4, #0
   20132:	4629      	mov	r1, r5
   20134:	4618      	mov	r0, r3
   20136:	f7ff ff81 	bl	2003c <strchr>
   2013a:	b908      	cbnz	r0, 20140 <strrchr+0x18>
   2013c:	4620      	mov	r0, r4
   2013e:	bd38      	pop	{r3, r4, r5, pc}
   20140:	1c43      	adds	r3, r0, #1
   20142:	4604      	mov	r4, r0
   20144:	e7f5      	b.n	20132 <strrchr+0xa>
   20146:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   2014a:	f7ff bf77 	b.w	2003c <strchr>

0002014e <strstr>:
strstr():
   2014e:	b5f0      	push	{r4, r5, r6, r7, lr}
   20150:	7803      	ldrb	r3, [r0, #0]
   20152:	b133      	cbz	r3, 20162 <strstr+0x14>
   20154:	4603      	mov	r3, r0
   20156:	4618      	mov	r0, r3
   20158:	1c5e      	adds	r6, r3, #1
   2015a:	781b      	ldrb	r3, [r3, #0]
   2015c:	b933      	cbnz	r3, 2016c <strstr+0x1e>
   2015e:	4618      	mov	r0, r3
   20160:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20162:	780b      	ldrb	r3, [r1, #0]
   20164:	2b00      	cmp	r3, #0
   20166:	bf18      	it	ne
   20168:	2000      	movne	r0, #0
   2016a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2016c:	1e4d      	subs	r5, r1, #1
   2016e:	1e44      	subs	r4, r0, #1
   20170:	f815 2f01 	ldrb.w	r2, [r5, #1]!
   20174:	2a00      	cmp	r2, #0
   20176:	d0f3      	beq.n	20160 <strstr+0x12>
   20178:	f814 7f01 	ldrb.w	r7, [r4, #1]!
   2017c:	4633      	mov	r3, r6
   2017e:	4297      	cmp	r7, r2
   20180:	d0f6      	beq.n	20170 <strstr+0x22>
   20182:	e7e8      	b.n	20156 <strstr+0x8>

00020184 <sulp>:
sulp():
   20184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20188:	460f      	mov	r7, r1
   2018a:	4690      	mov	r8, r2
   2018c:	f003 f8ae 	bl	232ec <__ulp>
   20190:	4604      	mov	r4, r0
   20192:	460d      	mov	r5, r1
   20194:	f1b8 0f00 	cmp.w	r8, #0
   20198:	d011      	beq.n	201be <sulp+0x3a>
   2019a:	f3c7 530a 	ubfx	r3, r7, #20, #11
   2019e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   201a2:	2b00      	cmp	r3, #0
   201a4:	dd0b      	ble.n	201be <sulp+0x3a>
   201a6:	2400      	movs	r4, #0
   201a8:	051b      	lsls	r3, r3, #20
   201aa:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   201ae:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   201b2:	4622      	mov	r2, r4
   201b4:	462b      	mov	r3, r5
   201b6:	f004 fa97 	bl	246e8 <__aeabi_dmul>
   201ba:	4604      	mov	r4, r0
   201bc:	460d      	mov	r5, r1
   201be:	4620      	mov	r0, r4
   201c0:	4629      	mov	r1, r5
   201c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   201c6:	Address 0x00000000000201c6 is out of bounds.


000201c8 <_strtod_l>:
_strtod_l():
   201c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201cc:	4699      	mov	r9, r3
   201ce:	2300      	movs	r3, #0
   201d0:	b09f      	sub	sp, #124	; 0x7c
   201d2:	4680      	mov	r8, r0
   201d4:	4648      	mov	r0, r9
   201d6:	460c      	mov	r4, r1
   201d8:	9215      	str	r2, [sp, #84]	; 0x54
   201da:	931a      	str	r3, [sp, #104]	; 0x68
   201dc:	f002 fda4 	bl	22d28 <__localeconv_l>
   201e0:	4607      	mov	r7, r0
   201e2:	6800      	ldr	r0, [r0, #0]
   201e4:	f7ff ff4a 	bl	2007c <strlen>
   201e8:	f04f 0a00 	mov.w	sl, #0
   201ec:	4605      	mov	r5, r0
   201ee:	f04f 0b00 	mov.w	fp, #0
   201f2:	9419      	str	r4, [sp, #100]	; 0x64
   201f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   201f6:	781a      	ldrb	r2, [r3, #0]
   201f8:	2a0d      	cmp	r2, #13
   201fa:	d833      	bhi.n	20264 <_strtod_l+0x9c>
   201fc:	2a09      	cmp	r2, #9
   201fe:	d237      	bcs.n	20270 <_strtod_l+0xa8>
   20200:	2a00      	cmp	r2, #0
   20202:	d03f      	beq.n	20284 <_strtod_l+0xbc>
   20204:	2300      	movs	r3, #0
   20206:	9309      	str	r3, [sp, #36]	; 0x24
   20208:	9e19      	ldr	r6, [sp, #100]	; 0x64
   2020a:	7833      	ldrb	r3, [r6, #0]
   2020c:	2b30      	cmp	r3, #48	; 0x30
   2020e:	f040 8101 	bne.w	20414 <_strtod_l+0x24c>
   20212:	7873      	ldrb	r3, [r6, #1]
   20214:	2b58      	cmp	r3, #88	; 0x58
   20216:	d001      	beq.n	2021c <_strtod_l+0x54>
   20218:	2b78      	cmp	r3, #120	; 0x78
   2021a:	d16b      	bne.n	202f4 <_strtod_l+0x12c>
   2021c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2021e:	f8cd 9008 	str.w	r9, [sp, #8]
   20222:	9301      	str	r3, [sp, #4]
   20224:	ab1a      	add	r3, sp, #104	; 0x68
   20226:	9300      	str	r3, [sp, #0]
   20228:	4aaa      	ldr	r2, [pc, #680]	; (204d4 <_strtod_l+0x30c>)
   2022a:	ab1b      	add	r3, sp, #108	; 0x6c
   2022c:	a919      	add	r1, sp, #100	; 0x64
   2022e:	4640      	mov	r0, r8
   20230:	f002 f9a0 	bl	22574 <__gethex>
   20234:	f010 0407 	ands.w	r4, r0, #7
   20238:	4605      	mov	r5, r0
   2023a:	d005      	beq.n	20248 <_strtod_l+0x80>
   2023c:	2c06      	cmp	r4, #6
   2023e:	d12b      	bne.n	20298 <_strtod_l+0xd0>
   20240:	2300      	movs	r3, #0
   20242:	3601      	adds	r6, #1
   20244:	9619      	str	r6, [sp, #100]	; 0x64
   20246:	9309      	str	r3, [sp, #36]	; 0x24
   20248:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2024a:	2b00      	cmp	r3, #0
   2024c:	f040 859d 	bne.w	20d8a <_strtod_l+0xbc2>
   20250:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20252:	b1e3      	cbz	r3, 2028e <_strtod_l+0xc6>
   20254:	4652      	mov	r2, sl
   20256:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   2025a:	4610      	mov	r0, r2
   2025c:	4619      	mov	r1, r3
   2025e:	b01f      	add	sp, #124	; 0x7c
   20260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20264:	2a2b      	cmp	r2, #43	; 0x2b
   20266:	d006      	beq.n	20276 <_strtod_l+0xae>
   20268:	2a2d      	cmp	r2, #45	; 0x2d
   2026a:	d013      	beq.n	20294 <_strtod_l+0xcc>
   2026c:	2a20      	cmp	r2, #32
   2026e:	d1c9      	bne.n	20204 <_strtod_l+0x3c>
   20270:	3301      	adds	r3, #1
   20272:	9319      	str	r3, [sp, #100]	; 0x64
   20274:	e7be      	b.n	201f4 <_strtod_l+0x2c>
   20276:	2200      	movs	r2, #0
   20278:	9209      	str	r2, [sp, #36]	; 0x24
   2027a:	1c5a      	adds	r2, r3, #1
   2027c:	9219      	str	r2, [sp, #100]	; 0x64
   2027e:	785b      	ldrb	r3, [r3, #1]
   20280:	2b00      	cmp	r3, #0
   20282:	d1c1      	bne.n	20208 <_strtod_l+0x40>
   20284:	9b15      	ldr	r3, [sp, #84]	; 0x54
   20286:	9419      	str	r4, [sp, #100]	; 0x64
   20288:	2b00      	cmp	r3, #0
   2028a:	f040 857c 	bne.w	20d86 <_strtod_l+0xbbe>
   2028e:	4652      	mov	r2, sl
   20290:	465b      	mov	r3, fp
   20292:	e7e2      	b.n	2025a <_strtod_l+0x92>
   20294:	2201      	movs	r2, #1
   20296:	e7ef      	b.n	20278 <_strtod_l+0xb0>
   20298:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   2029a:	b13a      	cbz	r2, 202ac <_strtod_l+0xe4>
   2029c:	2135      	movs	r1, #53	; 0x35
   2029e:	a81c      	add	r0, sp, #112	; 0x70
   202a0:	f003 f911 	bl	234c6 <__copybits>
   202a4:	991a      	ldr	r1, [sp, #104]	; 0x68
   202a6:	4640      	mov	r0, r8
   202a8:	f002 fd94 	bl	22dd4 <_Bfree>
   202ac:	3c01      	subs	r4, #1
   202ae:	2c04      	cmp	r4, #4
   202b0:	d808      	bhi.n	202c4 <_strtod_l+0xfc>
   202b2:	e8df f004 	tbb	[pc, r4]
   202b6:	030c      	.short	0x030c
   202b8:	1a17      	.short	0x1a17
   202ba:	0c          	.byte	0x0c
   202bb:	00          	.byte	0x00
   202bc:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   202c0:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   202c4:	0729      	lsls	r1, r5, #28
   202c6:	d5bf      	bpl.n	20248 <_strtod_l+0x80>
   202c8:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   202cc:	e7bc      	b.n	20248 <_strtod_l+0x80>
   202ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   202d0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   202d2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   202d6:	f202 4233 	addw	r2, r2, #1075	; 0x433
   202da:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   202de:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   202e2:	e7ef      	b.n	202c4 <_strtod_l+0xfc>
   202e4:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 204e0 <_strtod_l+0x318>
   202e8:	e7ec      	b.n	202c4 <_strtod_l+0xfc>
   202ea:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   202ee:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   202f2:	e7e7      	b.n	202c4 <_strtod_l+0xfc>
   202f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   202f6:	1c5a      	adds	r2, r3, #1
   202f8:	9219      	str	r2, [sp, #100]	; 0x64
   202fa:	785b      	ldrb	r3, [r3, #1]
   202fc:	2b30      	cmp	r3, #48	; 0x30
   202fe:	d0f9      	beq.n	202f4 <_strtod_l+0x12c>
   20300:	2b00      	cmp	r3, #0
   20302:	d0a1      	beq.n	20248 <_strtod_l+0x80>
   20304:	2301      	movs	r3, #1
   20306:	9308      	str	r3, [sp, #32]
   20308:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2030a:	220a      	movs	r2, #10
   2030c:	930a      	str	r3, [sp, #40]	; 0x28
   2030e:	2300      	movs	r3, #0
   20310:	9305      	str	r3, [sp, #20]
   20312:	9306      	str	r3, [sp, #24]
   20314:	9304      	str	r3, [sp, #16]
   20316:	9819      	ldr	r0, [sp, #100]	; 0x64
   20318:	7806      	ldrb	r6, [r0, #0]
   2031a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   2031e:	b2d9      	uxtb	r1, r3
   20320:	2909      	cmp	r1, #9
   20322:	d979      	bls.n	20418 <_strtod_l+0x250>
   20324:	462a      	mov	r2, r5
   20326:	6839      	ldr	r1, [r7, #0]
   20328:	f7ff fed7 	bl	200da <strncmp>
   2032c:	2800      	cmp	r0, #0
   2032e:	f000 8085 	beq.w	2043c <_strtod_l+0x274>
   20332:	2000      	movs	r0, #0
   20334:	4633      	mov	r3, r6
   20336:	4602      	mov	r2, r0
   20338:	4601      	mov	r1, r0
   2033a:	9d04      	ldr	r5, [sp, #16]
   2033c:	2b65      	cmp	r3, #101	; 0x65
   2033e:	d002      	beq.n	20346 <_strtod_l+0x17e>
   20340:	2b45      	cmp	r3, #69	; 0x45
   20342:	f040 80ef 	bne.w	20524 <_strtod_l+0x35c>
   20346:	b925      	cbnz	r5, 20352 <_strtod_l+0x18a>
   20348:	b910      	cbnz	r0, 20350 <_strtod_l+0x188>
   2034a:	9b08      	ldr	r3, [sp, #32]
   2034c:	2b00      	cmp	r3, #0
   2034e:	d099      	beq.n	20284 <_strtod_l+0xbc>
   20350:	2500      	movs	r5, #0
   20352:	9c19      	ldr	r4, [sp, #100]	; 0x64
   20354:	1c63      	adds	r3, r4, #1
   20356:	9319      	str	r3, [sp, #100]	; 0x64
   20358:	7863      	ldrb	r3, [r4, #1]
   2035a:	2b2b      	cmp	r3, #43	; 0x2b
   2035c:	f000 80cf 	beq.w	204fe <_strtod_l+0x336>
   20360:	2b2d      	cmp	r3, #45	; 0x2d
   20362:	f000 80d2 	beq.w	2050a <_strtod_l+0x342>
   20366:	2600      	movs	r6, #0
   20368:	9607      	str	r6, [sp, #28]
   2036a:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   2036e:	2e09      	cmp	r6, #9
   20370:	f200 80d7 	bhi.w	20522 <_strtod_l+0x35a>
   20374:	2b30      	cmp	r3, #48	; 0x30
   20376:	f000 80ca 	beq.w	2050e <_strtod_l+0x346>
   2037a:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   2037e:	2e08      	cmp	r6, #8
   20380:	f200 80d0 	bhi.w	20524 <_strtod_l+0x35c>
   20384:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   20388:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2038a:	f04f 0c0a 	mov.w	ip, #10
   2038e:	461f      	mov	r7, r3
   20390:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20392:	1c5e      	adds	r6, r3, #1
   20394:	9619      	str	r6, [sp, #100]	; 0x64
   20396:	785b      	ldrb	r3, [r3, #1]
   20398:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   2039c:	f1b9 0f09 	cmp.w	r9, #9
   203a0:	f240 80ba 	bls.w	20518 <_strtod_l+0x350>
   203a4:	1bf6      	subs	r6, r6, r7
   203a6:	2e08      	cmp	r6, #8
   203a8:	f644 691f 	movw	r9, #19999	; 0x4e1f
   203ac:	dc02      	bgt.n	203b4 <_strtod_l+0x1ec>
   203ae:	45f1      	cmp	r9, lr
   203b0:	bfa8      	it	ge
   203b2:	46f1      	movge	r9, lr
   203b4:	9e07      	ldr	r6, [sp, #28]
   203b6:	b10e      	cbz	r6, 203bc <_strtod_l+0x1f4>
   203b8:	f1c9 0900 	rsb	r9, r9, #0
   203bc:	2d00      	cmp	r5, #0
   203be:	f040 80d7 	bne.w	20570 <_strtod_l+0x3a8>
   203c2:	2800      	cmp	r0, #0
   203c4:	f47f af40 	bne.w	20248 <_strtod_l+0x80>
   203c8:	9a08      	ldr	r2, [sp, #32]
   203ca:	2a00      	cmp	r2, #0
   203cc:	f47f af3c 	bne.w	20248 <_strtod_l+0x80>
   203d0:	2900      	cmp	r1, #0
   203d2:	f47f af57 	bne.w	20284 <_strtod_l+0xbc>
   203d6:	2b4e      	cmp	r3, #78	; 0x4e
   203d8:	f000 80ad 	beq.w	20536 <_strtod_l+0x36e>
   203dc:	f300 80a5 	bgt.w	2052a <_strtod_l+0x362>
   203e0:	2b49      	cmp	r3, #73	; 0x49
   203e2:	f47f af4f 	bne.w	20284 <_strtod_l+0xbc>
   203e6:	493c      	ldr	r1, [pc, #240]	; (204d8 <_strtod_l+0x310>)
   203e8:	a819      	add	r0, sp, #100	; 0x64
   203ea:	f002 faf4 	bl	229d6 <__match>
   203ee:	2800      	cmp	r0, #0
   203f0:	f43f af48 	beq.w	20284 <_strtod_l+0xbc>
   203f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   203f6:	4939      	ldr	r1, [pc, #228]	; (204dc <_strtod_l+0x314>)
   203f8:	3b01      	subs	r3, #1
   203fa:	a819      	add	r0, sp, #100	; 0x64
   203fc:	9319      	str	r3, [sp, #100]	; 0x64
   203fe:	f002 faea 	bl	229d6 <__match>
   20402:	b910      	cbnz	r0, 2040a <_strtod_l+0x242>
   20404:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20406:	3301      	adds	r3, #1
   20408:	9319      	str	r3, [sp, #100]	; 0x64
   2040a:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 204e0 <_strtod_l+0x318>
   2040e:	f04f 0a00 	mov.w	sl, #0
   20412:	e719      	b.n	20248 <_strtod_l+0x80>
   20414:	2300      	movs	r3, #0
   20416:	e776      	b.n	20306 <_strtod_l+0x13e>
   20418:	9904      	ldr	r1, [sp, #16]
   2041a:	3001      	adds	r0, #1
   2041c:	2908      	cmp	r1, #8
   2041e:	bfd5      	itete	le
   20420:	9906      	ldrle	r1, [sp, #24]
   20422:	9905      	ldrgt	r1, [sp, #20]
   20424:	fb02 3301 	mlale	r3, r2, r1, r3
   20428:	fb02 3301 	mlagt	r3, r2, r1, r3
   2042c:	bfd4      	ite	le
   2042e:	9306      	strle	r3, [sp, #24]
   20430:	9305      	strgt	r3, [sp, #20]
   20432:	9b04      	ldr	r3, [sp, #16]
   20434:	9019      	str	r0, [sp, #100]	; 0x64
   20436:	3301      	adds	r3, #1
   20438:	9304      	str	r3, [sp, #16]
   2043a:	e76c      	b.n	20316 <_strtod_l+0x14e>
   2043c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2043e:	195a      	adds	r2, r3, r5
   20440:	9219      	str	r2, [sp, #100]	; 0x64
   20442:	9a04      	ldr	r2, [sp, #16]
   20444:	5d5b      	ldrb	r3, [r3, r5]
   20446:	2a00      	cmp	r2, #0
   20448:	d154      	bne.n	204f4 <_strtod_l+0x32c>
   2044a:	4610      	mov	r0, r2
   2044c:	2b30      	cmp	r3, #48	; 0x30
   2044e:	d02a      	beq.n	204a6 <_strtod_l+0x2de>
   20450:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   20454:	2a08      	cmp	r2, #8
   20456:	f200 849d 	bhi.w	20d94 <_strtod_l+0xbcc>
   2045a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   2045c:	920a      	str	r2, [sp, #40]	; 0x28
   2045e:	4602      	mov	r2, r0
   20460:	2000      	movs	r0, #0
   20462:	4605      	mov	r5, r0
   20464:	3b30      	subs	r3, #48	; 0x30
   20466:	f100 0101 	add.w	r1, r0, #1
   2046a:	d011      	beq.n	20490 <_strtod_l+0x2c8>
   2046c:	440a      	add	r2, r1
   2046e:	260a      	movs	r6, #10
   20470:	4629      	mov	r1, r5
   20472:	eb00 0c05 	add.w	ip, r0, r5
   20476:	4561      	cmp	r1, ip
   20478:	d11b      	bne.n	204b2 <_strtod_l+0x2ea>
   2047a:	4428      	add	r0, r5
   2047c:	2808      	cmp	r0, #8
   2047e:	f100 0501 	add.w	r5, r0, #1
   20482:	dc2f      	bgt.n	204e4 <_strtod_l+0x31c>
   20484:	210a      	movs	r1, #10
   20486:	9806      	ldr	r0, [sp, #24]
   20488:	fb01 3300 	mla	r3, r1, r0, r3
   2048c:	9306      	str	r3, [sp, #24]
   2048e:	2100      	movs	r1, #0
   20490:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20492:	1c58      	adds	r0, r3, #1
   20494:	9019      	str	r0, [sp, #100]	; 0x64
   20496:	4608      	mov	r0, r1
   20498:	785b      	ldrb	r3, [r3, #1]
   2049a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   2049e:	2909      	cmp	r1, #9
   204a0:	d9e0      	bls.n	20464 <_strtod_l+0x29c>
   204a2:	2101      	movs	r1, #1
   204a4:	e74a      	b.n	2033c <_strtod_l+0x174>
   204a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   204a8:	3001      	adds	r0, #1
   204aa:	1c5a      	adds	r2, r3, #1
   204ac:	9219      	str	r2, [sp, #100]	; 0x64
   204ae:	785b      	ldrb	r3, [r3, #1]
   204b0:	e7cc      	b.n	2044c <_strtod_l+0x284>
   204b2:	3101      	adds	r1, #1
   204b4:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   204b8:	f1be 0f08 	cmp.w	lr, #8
   204bc:	dc03      	bgt.n	204c6 <_strtod_l+0x2fe>
   204be:	9f06      	ldr	r7, [sp, #24]
   204c0:	4377      	muls	r7, r6
   204c2:	9706      	str	r7, [sp, #24]
   204c4:	e7d7      	b.n	20476 <_strtod_l+0x2ae>
   204c6:	2910      	cmp	r1, #16
   204c8:	bfde      	ittt	le
   204ca:	9f05      	ldrle	r7, [sp, #20]
   204cc:	4377      	mulle	r7, r6
   204ce:	9705      	strle	r7, [sp, #20]
   204d0:	e7d1      	b.n	20476 <_strtod_l+0x2ae>
   204d2:	bf00      	nop
   204d4:	00027afc 	.word	0x00027afc
   204d8:	00027ac9 	.word	0x00027ac9
   204dc:	00027ce9 	.word	0x00027ce9
   204e0:	7ff00000 	.word	0x7ff00000
   204e4:	2d10      	cmp	r5, #16
   204e6:	bfdf      	itttt	le
   204e8:	210a      	movle	r1, #10
   204ea:	9805      	ldrle	r0, [sp, #20]
   204ec:	fb01 3300 	mlale	r3, r1, r0, r3
   204f0:	9305      	strle	r3, [sp, #20]
   204f2:	e7cc      	b.n	2048e <_strtod_l+0x2c6>
   204f4:	4602      	mov	r2, r0
   204f6:	9d04      	ldr	r5, [sp, #16]
   204f8:	e7cf      	b.n	2049a <_strtod_l+0x2d2>
   204fa:	2101      	movs	r1, #1
   204fc:	e724      	b.n	20348 <_strtod_l+0x180>
   204fe:	2300      	movs	r3, #0
   20500:	9307      	str	r3, [sp, #28]
   20502:	1ca3      	adds	r3, r4, #2
   20504:	9319      	str	r3, [sp, #100]	; 0x64
   20506:	78a3      	ldrb	r3, [r4, #2]
   20508:	e72f      	b.n	2036a <_strtod_l+0x1a2>
   2050a:	2301      	movs	r3, #1
   2050c:	e7f8      	b.n	20500 <_strtod_l+0x338>
   2050e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20510:	1c5e      	adds	r6, r3, #1
   20512:	9619      	str	r6, [sp, #100]	; 0x64
   20514:	785b      	ldrb	r3, [r3, #1]
   20516:	e72d      	b.n	20374 <_strtod_l+0x1ac>
   20518:	fb0c 3e0e 	mla	lr, ip, lr, r3
   2051c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   20520:	e736      	b.n	20390 <_strtod_l+0x1c8>
   20522:	9419      	str	r4, [sp, #100]	; 0x64
   20524:	f04f 0900 	mov.w	r9, #0
   20528:	e748      	b.n	203bc <_strtod_l+0x1f4>
   2052a:	2b69      	cmp	r3, #105	; 0x69
   2052c:	f43f af5b 	beq.w	203e6 <_strtod_l+0x21e>
   20530:	2b6e      	cmp	r3, #110	; 0x6e
   20532:	f47f aea7 	bne.w	20284 <_strtod_l+0xbc>
   20536:	498c      	ldr	r1, [pc, #560]	; (20768 <_strtod_l+0x5a0>)
   20538:	a819      	add	r0, sp, #100	; 0x64
   2053a:	f002 fa4c 	bl	229d6 <__match>
   2053e:	2800      	cmp	r0, #0
   20540:	f43f aea0 	beq.w	20284 <_strtod_l+0xbc>
   20544:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20546:	781b      	ldrb	r3, [r3, #0]
   20548:	2b28      	cmp	r3, #40	; 0x28
   2054a:	d10e      	bne.n	2056a <_strtod_l+0x3a2>
   2054c:	aa1c      	add	r2, sp, #112	; 0x70
   2054e:	4987      	ldr	r1, [pc, #540]	; (2076c <_strtod_l+0x5a4>)
   20550:	a819      	add	r0, sp, #100	; 0x64
   20552:	f002 fa53 	bl	229fc <__hexnan>
   20556:	2805      	cmp	r0, #5
   20558:	d107      	bne.n	2056a <_strtod_l+0x3a2>
   2055a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   2055c:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   20560:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   20564:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   20568:	e66e      	b.n	20248 <_strtod_l+0x80>
   2056a:	f8df b210 	ldr.w	fp, [pc, #528]	; 2077c <_strtod_l+0x5b4>
   2056e:	e74e      	b.n	2040e <_strtod_l+0x246>
   20570:	9b04      	ldr	r3, [sp, #16]
   20572:	462c      	mov	r4, r5
   20574:	2b00      	cmp	r3, #0
   20576:	bf08      	it	eq
   20578:	462b      	moveq	r3, r5
   2057a:	2d10      	cmp	r5, #16
   2057c:	bfa8      	it	ge
   2057e:	2410      	movge	r4, #16
   20580:	9806      	ldr	r0, [sp, #24]
   20582:	eba9 0902 	sub.w	r9, r9, r2
   20586:	9304      	str	r3, [sp, #16]
   20588:	f7fc fcee 	bl	1cf68 <__aeabi_ui2d>
   2058c:	2c09      	cmp	r4, #9
   2058e:	4682      	mov	sl, r0
   20590:	468b      	mov	fp, r1
   20592:	dd13      	ble.n	205bc <_strtod_l+0x3f4>
   20594:	4b76      	ldr	r3, [pc, #472]	; (20770 <_strtod_l+0x5a8>)
   20596:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   2059a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   2059e:	f004 f8a3 	bl	246e8 <__aeabi_dmul>
   205a2:	4606      	mov	r6, r0
   205a4:	9805      	ldr	r0, [sp, #20]
   205a6:	460f      	mov	r7, r1
   205a8:	f7fc fcde 	bl	1cf68 <__aeabi_ui2d>
   205ac:	4602      	mov	r2, r0
   205ae:	460b      	mov	r3, r1
   205b0:	4630      	mov	r0, r6
   205b2:	4639      	mov	r1, r7
   205b4:	f7fc fb9c 	bl	1ccf0 <__adddf3>
   205b8:	4682      	mov	sl, r0
   205ba:	468b      	mov	fp, r1
   205bc:	2d0f      	cmp	r5, #15
   205be:	dc36      	bgt.n	2062e <_strtod_l+0x466>
   205c0:	f1b9 0f00 	cmp.w	r9, #0
   205c4:	f43f ae40 	beq.w	20248 <_strtod_l+0x80>
   205c8:	dd24      	ble.n	20614 <_strtod_l+0x44c>
   205ca:	f1b9 0f16 	cmp.w	r9, #22
   205ce:	dc0b      	bgt.n	205e8 <_strtod_l+0x420>
   205d0:	4652      	mov	r2, sl
   205d2:	465b      	mov	r3, fp
   205d4:	4d66      	ldr	r5, [pc, #408]	; (20770 <_strtod_l+0x5a8>)
   205d6:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   205da:	e9d9 0100 	ldrd	r0, r1, [r9]
   205de:	f004 f883 	bl	246e8 <__aeabi_dmul>
   205e2:	4682      	mov	sl, r0
   205e4:	468b      	mov	fp, r1
   205e6:	e62f      	b.n	20248 <_strtod_l+0x80>
   205e8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   205ec:	4599      	cmp	r9, r3
   205ee:	dc1e      	bgt.n	2062e <_strtod_l+0x466>
   205f0:	4c5f      	ldr	r4, [pc, #380]	; (20770 <_strtod_l+0x5a8>)
   205f2:	f1c5 050f 	rsb	r5, r5, #15
   205f6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   205fa:	eba9 0505 	sub.w	r5, r9, r5
   205fe:	4652      	mov	r2, sl
   20600:	e9d1 0100 	ldrd	r0, r1, [r1]
   20604:	465b      	mov	r3, fp
   20606:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   2060a:	f004 f86d 	bl	246e8 <__aeabi_dmul>
   2060e:	e9d4 2300 	ldrd	r2, r3, [r4]
   20612:	e7e4      	b.n	205de <_strtod_l+0x416>
   20614:	f119 0f16 	cmn.w	r9, #22
   20618:	db09      	blt.n	2062e <_strtod_l+0x466>
   2061a:	4d55      	ldr	r5, [pc, #340]	; (20770 <_strtod_l+0x5a8>)
   2061c:	4650      	mov	r0, sl
   2061e:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   20622:	e9d9 2300 	ldrd	r2, r3, [r9]
   20626:	4659      	mov	r1, fp
   20628:	f004 f988 	bl	2493c <__aeabi_ddiv>
   2062c:	e7d9      	b.n	205e2 <_strtod_l+0x41a>
   2062e:	1b2c      	subs	r4, r5, r4
   20630:	444c      	add	r4, r9
   20632:	2c00      	cmp	r4, #0
   20634:	dd73      	ble.n	2071e <_strtod_l+0x556>
   20636:	f014 030f 	ands.w	r3, r4, #15
   2063a:	d00a      	beq.n	20652 <_strtod_l+0x48a>
   2063c:	494c      	ldr	r1, [pc, #304]	; (20770 <_strtod_l+0x5a8>)
   2063e:	4652      	mov	r2, sl
   20640:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   20644:	e9d1 0100 	ldrd	r0, r1, [r1]
   20648:	465b      	mov	r3, fp
   2064a:	f004 f84d 	bl	246e8 <__aeabi_dmul>
   2064e:	4682      	mov	sl, r0
   20650:	468b      	mov	fp, r1
   20652:	f034 040f 	bics.w	r4, r4, #15
   20656:	d054      	beq.n	20702 <_strtod_l+0x53a>
   20658:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   2065c:	dd27      	ble.n	206ae <_strtod_l+0x4e6>
   2065e:	f04f 0900 	mov.w	r9, #0
   20662:	f8cd 9010 	str.w	r9, [sp, #16]
   20666:	f8cd 901c 	str.w	r9, [sp, #28]
   2066a:	f8cd 9018 	str.w	r9, [sp, #24]
   2066e:	2322      	movs	r3, #34	; 0x22
   20670:	f04f 0a00 	mov.w	sl, #0
   20674:	f8df b108 	ldr.w	fp, [pc, #264]	; 20780 <_strtod_l+0x5b8>
   20678:	f8c8 3000 	str.w	r3, [r8]
   2067c:	9b07      	ldr	r3, [sp, #28]
   2067e:	2b00      	cmp	r3, #0
   20680:	f43f ade2 	beq.w	20248 <_strtod_l+0x80>
   20684:	991a      	ldr	r1, [sp, #104]	; 0x68
   20686:	4640      	mov	r0, r8
   20688:	f002 fba4 	bl	22dd4 <_Bfree>
   2068c:	9906      	ldr	r1, [sp, #24]
   2068e:	4640      	mov	r0, r8
   20690:	f002 fba0 	bl	22dd4 <_Bfree>
   20694:	9904      	ldr	r1, [sp, #16]
   20696:	4640      	mov	r0, r8
   20698:	f002 fb9c 	bl	22dd4 <_Bfree>
   2069c:	9907      	ldr	r1, [sp, #28]
   2069e:	4640      	mov	r0, r8
   206a0:	f002 fb98 	bl	22dd4 <_Bfree>
   206a4:	4649      	mov	r1, r9
   206a6:	4640      	mov	r0, r8
   206a8:	f002 fb94 	bl	22dd4 <_Bfree>
   206ac:	e5cc      	b.n	20248 <_strtod_l+0x80>
   206ae:	2300      	movs	r3, #0
   206b0:	4650      	mov	r0, sl
   206b2:	4659      	mov	r1, fp
   206b4:	461f      	mov	r7, r3
   206b6:	4e2f      	ldr	r6, [pc, #188]	; (20774 <_strtod_l+0x5ac>)
   206b8:	1124      	asrs	r4, r4, #4
   206ba:	2c01      	cmp	r4, #1
   206bc:	dc24      	bgt.n	20708 <_strtod_l+0x540>
   206be:	b10b      	cbz	r3, 206c4 <_strtod_l+0x4fc>
   206c0:	4682      	mov	sl, r0
   206c2:	468b      	mov	fp, r1
   206c4:	4b2b      	ldr	r3, [pc, #172]	; (20774 <_strtod_l+0x5ac>)
   206c6:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   206ca:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   206ce:	4652      	mov	r2, sl
   206d0:	e9d7 0100 	ldrd	r0, r1, [r7]
   206d4:	465b      	mov	r3, fp
   206d6:	f004 f807 	bl	246e8 <__aeabi_dmul>
   206da:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   206de:	468b      	mov	fp, r1
   206e0:	460a      	mov	r2, r1
   206e2:	0d1b      	lsrs	r3, r3, #20
   206e4:	4924      	ldr	r1, [pc, #144]	; (20778 <_strtod_l+0x5b0>)
   206e6:	051b      	lsls	r3, r3, #20
   206e8:	428b      	cmp	r3, r1
   206ea:	4682      	mov	sl, r0
   206ec:	d8b7      	bhi.n	2065e <_strtod_l+0x496>
   206ee:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   206f2:	428b      	cmp	r3, r1
   206f4:	bf86      	itte	hi
   206f6:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   206fa:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 20784 <_strtod_l+0x5bc>
   206fe:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   20702:	2300      	movs	r3, #0
   20704:	9305      	str	r3, [sp, #20]
   20706:	e070      	b.n	207ea <_strtod_l+0x622>
   20708:	07e2      	lsls	r2, r4, #31
   2070a:	d504      	bpl.n	20716 <_strtod_l+0x54e>
   2070c:	e9d6 2300 	ldrd	r2, r3, [r6]
   20710:	f003 ffea 	bl	246e8 <__aeabi_dmul>
   20714:	2301      	movs	r3, #1
   20716:	3701      	adds	r7, #1
   20718:	1064      	asrs	r4, r4, #1
   2071a:	3608      	adds	r6, #8
   2071c:	e7cd      	b.n	206ba <_strtod_l+0x4f2>
   2071e:	d0f0      	beq.n	20702 <_strtod_l+0x53a>
   20720:	4264      	negs	r4, r4
   20722:	f014 020f 	ands.w	r2, r4, #15
   20726:	d00a      	beq.n	2073e <_strtod_l+0x576>
   20728:	4b11      	ldr	r3, [pc, #68]	; (20770 <_strtod_l+0x5a8>)
   2072a:	4650      	mov	r0, sl
   2072c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   20730:	4659      	mov	r1, fp
   20732:	e9d3 2300 	ldrd	r2, r3, [r3]
   20736:	f004 f901 	bl	2493c <__aeabi_ddiv>
   2073a:	4682      	mov	sl, r0
   2073c:	468b      	mov	fp, r1
   2073e:	1124      	asrs	r4, r4, #4
   20740:	d0df      	beq.n	20702 <_strtod_l+0x53a>
   20742:	2c1f      	cmp	r4, #31
   20744:	dd20      	ble.n	20788 <_strtod_l+0x5c0>
   20746:	f04f 0900 	mov.w	r9, #0
   2074a:	f8cd 9010 	str.w	r9, [sp, #16]
   2074e:	f8cd 901c 	str.w	r9, [sp, #28]
   20752:	f8cd 9018 	str.w	r9, [sp, #24]
   20756:	2322      	movs	r3, #34	; 0x22
   20758:	f04f 0a00 	mov.w	sl, #0
   2075c:	f04f 0b00 	mov.w	fp, #0
   20760:	f8c8 3000 	str.w	r3, [r8]
   20764:	e78a      	b.n	2067c <_strtod_l+0x4b4>
   20766:	bf00      	nop
   20768:	00027ad1 	.word	0x00027ad1
   2076c:	00027b10 	.word	0x00027b10
   20770:	00027d20 	.word	0x00027d20
   20774:	00027cf8 	.word	0x00027cf8
   20778:	7ca00000 	.word	0x7ca00000
   2077c:	fff80000 	.word	0xfff80000
   20780:	7ff00000 	.word	0x7ff00000
   20784:	7fefffff 	.word	0x7fefffff
   20788:	f014 0310 	ands.w	r3, r4, #16
   2078c:	bf18      	it	ne
   2078e:	236a      	movne	r3, #106	; 0x6a
   20790:	4650      	mov	r0, sl
   20792:	9305      	str	r3, [sp, #20]
   20794:	4659      	mov	r1, fp
   20796:	2300      	movs	r3, #0
   20798:	4e9f      	ldr	r6, [pc, #636]	; (20a18 <_strtod_l+0x850>)
   2079a:	2c00      	cmp	r4, #0
   2079c:	f300 8109 	bgt.w	209b2 <_strtod_l+0x7ea>
   207a0:	b10b      	cbz	r3, 207a6 <_strtod_l+0x5de>
   207a2:	4682      	mov	sl, r0
   207a4:	468b      	mov	fp, r1
   207a6:	9b05      	ldr	r3, [sp, #20]
   207a8:	b1bb      	cbz	r3, 207da <_strtod_l+0x612>
   207aa:	f3cb 530a 	ubfx	r3, fp, #20, #11
   207ae:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   207b2:	2b00      	cmp	r3, #0
   207b4:	4659      	mov	r1, fp
   207b6:	dd10      	ble.n	207da <_strtod_l+0x612>
   207b8:	2b1f      	cmp	r3, #31
   207ba:	f340 8104 	ble.w	209c6 <_strtod_l+0x7fe>
   207be:	2b34      	cmp	r3, #52	; 0x34
   207c0:	bfd8      	it	le
   207c2:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   207c6:	f04f 0a00 	mov.w	sl, #0
   207ca:	bfcf      	iteee	gt
   207cc:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   207d0:	3b20      	suble	r3, #32
   207d2:	fa02 f303 	lslle.w	r3, r2, r3
   207d6:	ea03 0b01 	andle.w	fp, r3, r1
   207da:	2200      	movs	r2, #0
   207dc:	2300      	movs	r3, #0
   207de:	4650      	mov	r0, sl
   207e0:	4659      	mov	r1, fp
   207e2:	f004 f9e9 	bl	24bb8 <__aeabi_dcmpeq>
   207e6:	2800      	cmp	r0, #0
   207e8:	d1ad      	bne.n	20746 <_strtod_l+0x57e>
   207ea:	9b06      	ldr	r3, [sp, #24]
   207ec:	9a04      	ldr	r2, [sp, #16]
   207ee:	9300      	str	r3, [sp, #0]
   207f0:	990a      	ldr	r1, [sp, #40]	; 0x28
   207f2:	462b      	mov	r3, r5
   207f4:	4640      	mov	r0, r8
   207f6:	f002 fb3f 	bl	22e78 <__s2b>
   207fa:	9007      	str	r0, [sp, #28]
   207fc:	2800      	cmp	r0, #0
   207fe:	f43f af2e 	beq.w	2065e <_strtod_l+0x496>
   20802:	f1b9 0f00 	cmp.w	r9, #0
   20806:	f1c9 0300 	rsb	r3, r9, #0
   2080a:	bfa8      	it	ge
   2080c:	2300      	movge	r3, #0
   2080e:	930e      	str	r3, [sp, #56]	; 0x38
   20810:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   20814:	f04f 0900 	mov.w	r9, #0
   20818:	930f      	str	r3, [sp, #60]	; 0x3c
   2081a:	f8cd 9010 	str.w	r9, [sp, #16]
   2081e:	9b07      	ldr	r3, [sp, #28]
   20820:	4640      	mov	r0, r8
   20822:	6859      	ldr	r1, [r3, #4]
   20824:	f002 faa2 	bl	22d6c <_Balloc>
   20828:	9006      	str	r0, [sp, #24]
   2082a:	2800      	cmp	r0, #0
   2082c:	f43f af1f 	beq.w	2066e <_strtod_l+0x4a6>
   20830:	9b07      	ldr	r3, [sp, #28]
   20832:	300c      	adds	r0, #12
   20834:	691a      	ldr	r2, [r3, #16]
   20836:	f103 010c 	add.w	r1, r3, #12
   2083a:	3202      	adds	r2, #2
   2083c:	0092      	lsls	r2, r2, #2
   2083e:	f7fd fe72 	bl	1e526 <memcpy>
   20842:	ab1c      	add	r3, sp, #112	; 0x70
   20844:	9301      	str	r3, [sp, #4]
   20846:	ab1b      	add	r3, sp, #108	; 0x6c
   20848:	9300      	str	r3, [sp, #0]
   2084a:	4652      	mov	r2, sl
   2084c:	465b      	mov	r3, fp
   2084e:	4640      	mov	r0, r8
   20850:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   20854:	f002 fdc0 	bl	233d8 <__d2b>
   20858:	901a      	str	r0, [sp, #104]	; 0x68
   2085a:	2800      	cmp	r0, #0
   2085c:	f43f af07 	beq.w	2066e <_strtod_l+0x4a6>
   20860:	2101      	movs	r1, #1
   20862:	4640      	mov	r0, r8
   20864:	f002 fb94 	bl	22f90 <__i2b>
   20868:	9004      	str	r0, [sp, #16]
   2086a:	4603      	mov	r3, r0
   2086c:	2800      	cmp	r0, #0
   2086e:	f43f aefe 	beq.w	2066e <_strtod_l+0x4a6>
   20872:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   20874:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   20876:	2d00      	cmp	r5, #0
   20878:	bfab      	itete	ge
   2087a:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   2087c:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   2087e:	195e      	addge	r6, r3, r5
   20880:	1b5c      	sublt	r4, r3, r5
   20882:	9b05      	ldr	r3, [sp, #20]
   20884:	bfa8      	it	ge
   20886:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   20888:	eba5 0503 	sub.w	r5, r5, r3
   2088c:	4415      	add	r5, r2
   2088e:	4b63      	ldr	r3, [pc, #396]	; (20a1c <_strtod_l+0x854>)
   20890:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   20894:	bfb8      	it	lt
   20896:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   20898:	429d      	cmp	r5, r3
   2089a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   2089e:	f280 80a4 	bge.w	209ea <_strtod_l+0x822>
   208a2:	1b5b      	subs	r3, r3, r5
   208a4:	2b1f      	cmp	r3, #31
   208a6:	eba2 0203 	sub.w	r2, r2, r3
   208aa:	f04f 0701 	mov.w	r7, #1
   208ae:	f300 8091 	bgt.w	209d4 <_strtod_l+0x80c>
   208b2:	2500      	movs	r5, #0
   208b4:	fa07 f303 	lsl.w	r3, r7, r3
   208b8:	9314      	str	r3, [sp, #80]	; 0x50
   208ba:	18b7      	adds	r7, r6, r2
   208bc:	9b05      	ldr	r3, [sp, #20]
   208be:	42be      	cmp	r6, r7
   208c0:	4414      	add	r4, r2
   208c2:	441c      	add	r4, r3
   208c4:	4633      	mov	r3, r6
   208c6:	bfa8      	it	ge
   208c8:	463b      	movge	r3, r7
   208ca:	42a3      	cmp	r3, r4
   208cc:	bfa8      	it	ge
   208ce:	4623      	movge	r3, r4
   208d0:	2b00      	cmp	r3, #0
   208d2:	bfc2      	ittt	gt
   208d4:	1aff      	subgt	r7, r7, r3
   208d6:	1ae4      	subgt	r4, r4, r3
   208d8:	1af6      	subgt	r6, r6, r3
   208da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   208dc:	b1bb      	cbz	r3, 2090e <_strtod_l+0x746>
   208de:	461a      	mov	r2, r3
   208e0:	9904      	ldr	r1, [sp, #16]
   208e2:	4640      	mov	r0, r8
   208e4:	f002 fbea 	bl	230bc <__pow5mult>
   208e8:	9004      	str	r0, [sp, #16]
   208ea:	2800      	cmp	r0, #0
   208ec:	f43f aebf 	beq.w	2066e <_strtod_l+0x4a6>
   208f0:	4601      	mov	r1, r0
   208f2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   208f4:	4640      	mov	r0, r8
   208f6:	f002 fb54 	bl	22fa2 <__multiply>
   208fa:	9008      	str	r0, [sp, #32]
   208fc:	2800      	cmp	r0, #0
   208fe:	f43f aeb6 	beq.w	2066e <_strtod_l+0x4a6>
   20902:	991a      	ldr	r1, [sp, #104]	; 0x68
   20904:	4640      	mov	r0, r8
   20906:	f002 fa65 	bl	22dd4 <_Bfree>
   2090a:	9b08      	ldr	r3, [sp, #32]
   2090c:	931a      	str	r3, [sp, #104]	; 0x68
   2090e:	2f00      	cmp	r7, #0
   20910:	dc6f      	bgt.n	209f2 <_strtod_l+0x82a>
   20912:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   20914:	2b00      	cmp	r3, #0
   20916:	d175      	bne.n	20a04 <_strtod_l+0x83c>
   20918:	2c00      	cmp	r4, #0
   2091a:	dd08      	ble.n	2092e <_strtod_l+0x766>
   2091c:	4622      	mov	r2, r4
   2091e:	9906      	ldr	r1, [sp, #24]
   20920:	4640      	mov	r0, r8
   20922:	f002 fc19 	bl	23158 <__lshift>
   20926:	9006      	str	r0, [sp, #24]
   20928:	2800      	cmp	r0, #0
   2092a:	f43f aea0 	beq.w	2066e <_strtod_l+0x4a6>
   2092e:	2e00      	cmp	r6, #0
   20930:	dd08      	ble.n	20944 <_strtod_l+0x77c>
   20932:	4632      	mov	r2, r6
   20934:	9904      	ldr	r1, [sp, #16]
   20936:	4640      	mov	r0, r8
   20938:	f002 fc0e 	bl	23158 <__lshift>
   2093c:	9004      	str	r0, [sp, #16]
   2093e:	2800      	cmp	r0, #0
   20940:	f43f ae95 	beq.w	2066e <_strtod_l+0x4a6>
   20944:	9a06      	ldr	r2, [sp, #24]
   20946:	991a      	ldr	r1, [sp, #104]	; 0x68
   20948:	4640      	mov	r0, r8
   2094a:	f002 fc70 	bl	2322e <__mdiff>
   2094e:	4681      	mov	r9, r0
   20950:	2800      	cmp	r0, #0
   20952:	f43f ae8c 	beq.w	2066e <_strtod_l+0x4a6>
   20956:	2400      	movs	r4, #0
   20958:	68c3      	ldr	r3, [r0, #12]
   2095a:	9904      	ldr	r1, [sp, #16]
   2095c:	60c4      	str	r4, [r0, #12]
   2095e:	9308      	str	r3, [sp, #32]
   20960:	f002 fc4b 	bl	231fa <__mcmp>
   20964:	42a0      	cmp	r0, r4
   20966:	da5b      	bge.n	20a20 <_strtod_l+0x858>
   20968:	9b08      	ldr	r3, [sp, #32]
   2096a:	b9f3      	cbnz	r3, 209aa <_strtod_l+0x7e2>
   2096c:	f1ba 0f00 	cmp.w	sl, #0
   20970:	d11b      	bne.n	209aa <_strtod_l+0x7e2>
   20972:	f3cb 0313 	ubfx	r3, fp, #0, #20
   20976:	b9c3      	cbnz	r3, 209aa <_strtod_l+0x7e2>
   20978:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   2097c:	0d1b      	lsrs	r3, r3, #20
   2097e:	051b      	lsls	r3, r3, #20
   20980:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   20984:	d911      	bls.n	209aa <_strtod_l+0x7e2>
   20986:	f8d9 3014 	ldr.w	r3, [r9, #20]
   2098a:	b91b      	cbnz	r3, 20994 <_strtod_l+0x7cc>
   2098c:	f8d9 3010 	ldr.w	r3, [r9, #16]
   20990:	2b01      	cmp	r3, #1
   20992:	dd0a      	ble.n	209aa <_strtod_l+0x7e2>
   20994:	4649      	mov	r1, r9
   20996:	2201      	movs	r2, #1
   20998:	4640      	mov	r0, r8
   2099a:	f002 fbdd 	bl	23158 <__lshift>
   2099e:	9904      	ldr	r1, [sp, #16]
   209a0:	4681      	mov	r9, r0
   209a2:	f002 fc2a 	bl	231fa <__mcmp>
   209a6:	2800      	cmp	r0, #0
   209a8:	dc6b      	bgt.n	20a82 <_strtod_l+0x8ba>
   209aa:	9b05      	ldr	r3, [sp, #20]
   209ac:	2b00      	cmp	r3, #0
   209ae:	d175      	bne.n	20a9c <_strtod_l+0x8d4>
   209b0:	e668      	b.n	20684 <_strtod_l+0x4bc>
   209b2:	07e2      	lsls	r2, r4, #31
   209b4:	d504      	bpl.n	209c0 <_strtod_l+0x7f8>
   209b6:	e9d6 2300 	ldrd	r2, r3, [r6]
   209ba:	f003 fe95 	bl	246e8 <__aeabi_dmul>
   209be:	2301      	movs	r3, #1
   209c0:	1064      	asrs	r4, r4, #1
   209c2:	3608      	adds	r6, #8
   209c4:	e6e9      	b.n	2079a <_strtod_l+0x5d2>
   209c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   209ca:	fa02 f303 	lsl.w	r3, r2, r3
   209ce:	ea03 0a0a 	and.w	sl, r3, sl
   209d2:	e702      	b.n	207da <_strtod_l+0x612>
   209d4:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   209d8:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   209dc:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   209e0:	35e2      	adds	r5, #226	; 0xe2
   209e2:	fa07 f505 	lsl.w	r5, r7, r5
   209e6:	9714      	str	r7, [sp, #80]	; 0x50
   209e8:	e767      	b.n	208ba <_strtod_l+0x6f2>
   209ea:	2301      	movs	r3, #1
   209ec:	2500      	movs	r5, #0
   209ee:	9314      	str	r3, [sp, #80]	; 0x50
   209f0:	e763      	b.n	208ba <_strtod_l+0x6f2>
   209f2:	463a      	mov	r2, r7
   209f4:	991a      	ldr	r1, [sp, #104]	; 0x68
   209f6:	4640      	mov	r0, r8
   209f8:	f002 fbae 	bl	23158 <__lshift>
   209fc:	901a      	str	r0, [sp, #104]	; 0x68
   209fe:	2800      	cmp	r0, #0
   20a00:	d187      	bne.n	20912 <_strtod_l+0x74a>
   20a02:	e634      	b.n	2066e <_strtod_l+0x4a6>
   20a04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   20a06:	9906      	ldr	r1, [sp, #24]
   20a08:	4640      	mov	r0, r8
   20a0a:	f002 fb57 	bl	230bc <__pow5mult>
   20a0e:	9006      	str	r0, [sp, #24]
   20a10:	2800      	cmp	r0, #0
   20a12:	d181      	bne.n	20918 <_strtod_l+0x750>
   20a14:	e62b      	b.n	2066e <_strtod_l+0x4a6>
   20a16:	bf00      	nop
   20a18:	00027b28 	.word	0x00027b28
   20a1c:	fffffc02 	.word	0xfffffc02
   20a20:	f040 8086 	bne.w	20b30 <_strtod_l+0x968>
   20a24:	9a08      	ldr	r2, [sp, #32]
   20a26:	f3cb 0313 	ubfx	r3, fp, #0, #20
   20a2a:	b332      	cbz	r2, 20a7a <_strtod_l+0x8b2>
   20a2c:	4aac      	ldr	r2, [pc, #688]	; (20ce0 <_strtod_l+0xb18>)
   20a2e:	4659      	mov	r1, fp
   20a30:	4293      	cmp	r3, r2
   20a32:	d152      	bne.n	20ada <_strtod_l+0x912>
   20a34:	9b05      	ldr	r3, [sp, #20]
   20a36:	4650      	mov	r0, sl
   20a38:	b1d3      	cbz	r3, 20a70 <_strtod_l+0x8a8>
   20a3a:	4aaa      	ldr	r2, [pc, #680]	; (20ce4 <_strtod_l+0xb1c>)
   20a3c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   20a40:	400a      	ands	r2, r1
   20a42:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   20a46:	d816      	bhi.n	20a76 <_strtod_l+0x8ae>
   20a48:	0d12      	lsrs	r2, r2, #20
   20a4a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   20a4e:	fa04 f303 	lsl.w	r3, r4, r3
   20a52:	4283      	cmp	r3, r0
   20a54:	d141      	bne.n	20ada <_strtod_l+0x912>
   20a56:	4aa4      	ldr	r2, [pc, #656]	; (20ce8 <_strtod_l+0xb20>)
   20a58:	4291      	cmp	r1, r2
   20a5a:	d102      	bne.n	20a62 <_strtod_l+0x89a>
   20a5c:	3301      	adds	r3, #1
   20a5e:	f43f ae06 	beq.w	2066e <_strtod_l+0x4a6>
   20a62:	4ba0      	ldr	r3, [pc, #640]	; (20ce4 <_strtod_l+0xb1c>)
   20a64:	f04f 0a00 	mov.w	sl, #0
   20a68:	400b      	ands	r3, r1
   20a6a:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   20a6e:	e79c      	b.n	209aa <_strtod_l+0x7e2>
   20a70:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   20a74:	e7ed      	b.n	20a52 <_strtod_l+0x88a>
   20a76:	4623      	mov	r3, r4
   20a78:	e7eb      	b.n	20a52 <_strtod_l+0x88a>
   20a7a:	bb73      	cbnz	r3, 20ada <_strtod_l+0x912>
   20a7c:	f1ba 0f00 	cmp.w	sl, #0
   20a80:	d12b      	bne.n	20ada <_strtod_l+0x912>
   20a82:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20a86:	9a05      	ldr	r2, [sp, #20]
   20a88:	0d1b      	lsrs	r3, r3, #20
   20a8a:	051b      	lsls	r3, r3, #20
   20a8c:	b1e2      	cbz	r2, 20ac8 <_strtod_l+0x900>
   20a8e:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   20a92:	dc19      	bgt.n	20ac8 <_strtod_l+0x900>
   20a94:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   20a98:	f77f ae5d 	ble.w	20756 <_strtod_l+0x58e>
   20a9c:	4b93      	ldr	r3, [pc, #588]	; (20cec <_strtod_l+0xb24>)
   20a9e:	4650      	mov	r0, sl
   20aa0:	930d      	str	r3, [sp, #52]	; 0x34
   20aa2:	2300      	movs	r3, #0
   20aa4:	930c      	str	r3, [sp, #48]	; 0x30
   20aa6:	4659      	mov	r1, fp
   20aa8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   20aac:	f003 fe1c 	bl	246e8 <__aeabi_dmul>
   20ab0:	4682      	mov	sl, r0
   20ab2:	468b      	mov	fp, r1
   20ab4:	2900      	cmp	r1, #0
   20ab6:	f47f ade5 	bne.w	20684 <_strtod_l+0x4bc>
   20aba:	2800      	cmp	r0, #0
   20abc:	f47f ade2 	bne.w	20684 <_strtod_l+0x4bc>
   20ac0:	2322      	movs	r3, #34	; 0x22
   20ac2:	f8c8 3000 	str.w	r3, [r8]
   20ac6:	e5dd      	b.n	20684 <_strtod_l+0x4bc>
   20ac8:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   20acc:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   20ad0:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   20ad4:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   20ad8:	e767      	b.n	209aa <_strtod_l+0x7e2>
   20ada:	b19d      	cbz	r5, 20b04 <_strtod_l+0x93c>
   20adc:	ea15 0f0b 	tst.w	r5, fp
   20ae0:	f43f af63 	beq.w	209aa <_strtod_l+0x7e2>
   20ae4:	9b08      	ldr	r3, [sp, #32]
   20ae6:	9a05      	ldr	r2, [sp, #20]
   20ae8:	4650      	mov	r0, sl
   20aea:	4659      	mov	r1, fp
   20aec:	b173      	cbz	r3, 20b0c <_strtod_l+0x944>
   20aee:	f7ff fb49 	bl	20184 <sulp>
   20af2:	4602      	mov	r2, r0
   20af4:	460b      	mov	r3, r1
   20af6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20afa:	f7fc f8f9 	bl	1ccf0 <__adddf3>
   20afe:	4682      	mov	sl, r0
   20b00:	468b      	mov	fp, r1
   20b02:	e752      	b.n	209aa <_strtod_l+0x7e2>
   20b04:	9b14      	ldr	r3, [sp, #80]	; 0x50
   20b06:	ea13 0f0a 	tst.w	r3, sl
   20b0a:	e7e9      	b.n	20ae0 <_strtod_l+0x918>
   20b0c:	f7ff fb3a 	bl	20184 <sulp>
   20b10:	4602      	mov	r2, r0
   20b12:	460b      	mov	r3, r1
   20b14:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20b18:	f7fc f8e8 	bl	1ccec <__aeabi_dsub>
   20b1c:	2200      	movs	r2, #0
   20b1e:	2300      	movs	r3, #0
   20b20:	4682      	mov	sl, r0
   20b22:	468b      	mov	fp, r1
   20b24:	f004 f848 	bl	24bb8 <__aeabi_dcmpeq>
   20b28:	2800      	cmp	r0, #0
   20b2a:	f47f ae14 	bne.w	20756 <_strtod_l+0x58e>
   20b2e:	e73c      	b.n	209aa <_strtod_l+0x7e2>
   20b30:	9904      	ldr	r1, [sp, #16]
   20b32:	4648      	mov	r0, r9
   20b34:	f002 fc9f 	bl	23476 <__ratio>
   20b38:	2200      	movs	r2, #0
   20b3a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   20b3e:	4606      	mov	r6, r0
   20b40:	460f      	mov	r7, r1
   20b42:	f004 f84d 	bl	24be0 <__aeabi_dcmple>
   20b46:	2800      	cmp	r0, #0
   20b48:	d070      	beq.n	20c2c <_strtod_l+0xa64>
   20b4a:	9b08      	ldr	r3, [sp, #32]
   20b4c:	2b00      	cmp	r3, #0
   20b4e:	d043      	beq.n	20bd8 <_strtod_l+0xa10>
   20b50:	2600      	movs	r6, #0
   20b52:	4f67      	ldr	r7, [pc, #412]	; (20cf0 <_strtod_l+0xb28>)
   20b54:	4d66      	ldr	r5, [pc, #408]	; (20cf0 <_strtod_l+0xb28>)
   20b56:	4b63      	ldr	r3, [pc, #396]	; (20ce4 <_strtod_l+0xb1c>)
   20b58:	ea0b 0303 	and.w	r3, fp, r3
   20b5c:	9314      	str	r3, [sp, #80]	; 0x50
   20b5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20b60:	4b64      	ldr	r3, [pc, #400]	; (20cf4 <_strtod_l+0xb2c>)
   20b62:	429a      	cmp	r2, r3
   20b64:	f040 80ce 	bne.w	20d04 <_strtod_l+0xb3c>
   20b68:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   20b6c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   20b70:	4650      	mov	r0, sl
   20b72:	4659      	mov	r1, fp
   20b74:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   20b78:	f002 fbb8 	bl	232ec <__ulp>
   20b7c:	4602      	mov	r2, r0
   20b7e:	460b      	mov	r3, r1
   20b80:	4630      	mov	r0, r6
   20b82:	4639      	mov	r1, r7
   20b84:	f003 fdb0 	bl	246e8 <__aeabi_dmul>
   20b88:	4652      	mov	r2, sl
   20b8a:	465b      	mov	r3, fp
   20b8c:	f7fc f8b0 	bl	1ccf0 <__adddf3>
   20b90:	4a54      	ldr	r2, [pc, #336]	; (20ce4 <_strtod_l+0xb1c>)
   20b92:	4b59      	ldr	r3, [pc, #356]	; (20cf8 <_strtod_l+0xb30>)
   20b94:	400a      	ands	r2, r1
   20b96:	429a      	cmp	r2, r3
   20b98:	4682      	mov	sl, r0
   20b9a:	d95d      	bls.n	20c58 <_strtod_l+0xa90>
   20b9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   20b9e:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   20ba2:	429a      	cmp	r2, r3
   20ba4:	d103      	bne.n	20bae <_strtod_l+0x9e6>
   20ba6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20ba8:	3301      	adds	r3, #1
   20baa:	f43f ad60 	beq.w	2066e <_strtod_l+0x4a6>
   20bae:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   20bb2:	f8df b134 	ldr.w	fp, [pc, #308]	; 20ce8 <_strtod_l+0xb20>
   20bb6:	991a      	ldr	r1, [sp, #104]	; 0x68
   20bb8:	4640      	mov	r0, r8
   20bba:	f002 f90b 	bl	22dd4 <_Bfree>
   20bbe:	9906      	ldr	r1, [sp, #24]
   20bc0:	4640      	mov	r0, r8
   20bc2:	f002 f907 	bl	22dd4 <_Bfree>
   20bc6:	9904      	ldr	r1, [sp, #16]
   20bc8:	4640      	mov	r0, r8
   20bca:	f002 f903 	bl	22dd4 <_Bfree>
   20bce:	4649      	mov	r1, r9
   20bd0:	4640      	mov	r0, r8
   20bd2:	f002 f8ff 	bl	22dd4 <_Bfree>
   20bd6:	e622      	b.n	2081e <_strtod_l+0x656>
   20bd8:	f1ba 0f00 	cmp.w	sl, #0
   20bdc:	d118      	bne.n	20c10 <_strtod_l+0xa48>
   20bde:	f3cb 0313 	ubfx	r3, fp, #0, #20
   20be2:	b9e3      	cbnz	r3, 20c1e <_strtod_l+0xa56>
   20be4:	2200      	movs	r2, #0
   20be6:	4b42      	ldr	r3, [pc, #264]	; (20cf0 <_strtod_l+0xb28>)
   20be8:	4630      	mov	r0, r6
   20bea:	4639      	mov	r1, r7
   20bec:	f003 ffee 	bl	24bcc <__aeabi_dcmplt>
   20bf0:	b9c8      	cbnz	r0, 20c26 <_strtod_l+0xa5e>
   20bf2:	2200      	movs	r2, #0
   20bf4:	4b41      	ldr	r3, [pc, #260]	; (20cfc <_strtod_l+0xb34>)
   20bf6:	4630      	mov	r0, r6
   20bf8:	4639      	mov	r1, r7
   20bfa:	f003 fd75 	bl	246e8 <__aeabi_dmul>
   20bfe:	4604      	mov	r4, r0
   20c00:	460d      	mov	r5, r1
   20c02:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   20c06:	9416      	str	r4, [sp, #88]	; 0x58
   20c08:	9317      	str	r3, [sp, #92]	; 0x5c
   20c0a:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   20c0e:	e7a2      	b.n	20b56 <_strtod_l+0x98e>
   20c10:	f1ba 0f01 	cmp.w	sl, #1
   20c14:	d103      	bne.n	20c1e <_strtod_l+0xa56>
   20c16:	f1bb 0f00 	cmp.w	fp, #0
   20c1a:	f43f ad9c 	beq.w	20756 <_strtod_l+0x58e>
   20c1e:	2600      	movs	r6, #0
   20c20:	4f37      	ldr	r7, [pc, #220]	; (20d00 <_strtod_l+0xb38>)
   20c22:	2400      	movs	r4, #0
   20c24:	e796      	b.n	20b54 <_strtod_l+0x98c>
   20c26:	9c08      	ldr	r4, [sp, #32]
   20c28:	4d34      	ldr	r5, [pc, #208]	; (20cfc <_strtod_l+0xb34>)
   20c2a:	e7ea      	b.n	20c02 <_strtod_l+0xa3a>
   20c2c:	4b33      	ldr	r3, [pc, #204]	; (20cfc <_strtod_l+0xb34>)
   20c2e:	2200      	movs	r2, #0
   20c30:	4630      	mov	r0, r6
   20c32:	4639      	mov	r1, r7
   20c34:	f003 fd58 	bl	246e8 <__aeabi_dmul>
   20c38:	9b08      	ldr	r3, [sp, #32]
   20c3a:	4604      	mov	r4, r0
   20c3c:	460d      	mov	r5, r1
   20c3e:	b933      	cbnz	r3, 20c4e <_strtod_l+0xa86>
   20c40:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   20c44:	9010      	str	r0, [sp, #64]	; 0x40
   20c46:	9311      	str	r3, [sp, #68]	; 0x44
   20c48:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   20c4c:	e783      	b.n	20b56 <_strtod_l+0x98e>
   20c4e:	4602      	mov	r2, r0
   20c50:	460b      	mov	r3, r1
   20c52:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   20c56:	e7f7      	b.n	20c48 <_strtod_l+0xa80>
   20c58:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   20c5c:	9b05      	ldr	r3, [sp, #20]
   20c5e:	2b00      	cmp	r3, #0
   20c60:	d1a9      	bne.n	20bb6 <_strtod_l+0x9ee>
   20c62:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20c66:	0d1b      	lsrs	r3, r3, #20
   20c68:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20c6a:	051b      	lsls	r3, r3, #20
   20c6c:	429a      	cmp	r2, r3
   20c6e:	465e      	mov	r6, fp
   20c70:	d1a1      	bne.n	20bb6 <_strtod_l+0x9ee>
   20c72:	4629      	mov	r1, r5
   20c74:	4620      	mov	r0, r4
   20c76:	f003 ffe7 	bl	24c48 <__aeabi_d2iz>
   20c7a:	f7fc f985 	bl	1cf88 <__aeabi_i2d>
   20c7e:	460b      	mov	r3, r1
   20c80:	4602      	mov	r2, r0
   20c82:	4629      	mov	r1, r5
   20c84:	4620      	mov	r0, r4
   20c86:	f7fc f831 	bl	1ccec <__aeabi_dsub>
   20c8a:	9b08      	ldr	r3, [sp, #32]
   20c8c:	4604      	mov	r4, r0
   20c8e:	460d      	mov	r5, r1
   20c90:	b933      	cbnz	r3, 20ca0 <_strtod_l+0xad8>
   20c92:	f1ba 0f00 	cmp.w	sl, #0
   20c96:	d103      	bne.n	20ca0 <_strtod_l+0xad8>
   20c98:	f3cb 0613 	ubfx	r6, fp, #0, #20
   20c9c:	2e00      	cmp	r6, #0
   20c9e:	d06c      	beq.n	20d7a <_strtod_l+0xbb2>
   20ca0:	a30b      	add	r3, pc, #44	; (adr r3, 20cd0 <_strtod_l+0xb08>)
   20ca2:	e9d3 2300 	ldrd	r2, r3, [r3]
   20ca6:	4620      	mov	r0, r4
   20ca8:	4629      	mov	r1, r5
   20caa:	f003 ff8f 	bl	24bcc <__aeabi_dcmplt>
   20cae:	2800      	cmp	r0, #0
   20cb0:	f47f ace8 	bne.w	20684 <_strtod_l+0x4bc>
   20cb4:	a308      	add	r3, pc, #32	; (adr r3, 20cd8 <_strtod_l+0xb10>)
   20cb6:	e9d3 2300 	ldrd	r2, r3, [r3]
   20cba:	4620      	mov	r0, r4
   20cbc:	4629      	mov	r1, r5
   20cbe:	f003 ffa3 	bl	24c08 <__aeabi_dcmpgt>
   20cc2:	2800      	cmp	r0, #0
   20cc4:	f43f af77 	beq.w	20bb6 <_strtod_l+0x9ee>
   20cc8:	e4dc      	b.n	20684 <_strtod_l+0x4bc>
   20cca:	bf00      	nop
   20ccc:	f3af 8000 	nop.w
   20cd0:	94a03595 	.word	0x94a03595
   20cd4:	3fdfffff 	.word	0x3fdfffff
   20cd8:	35afe535 	.word	0x35afe535
   20cdc:	3fe00000 	.word	0x3fe00000
   20ce0:	000fffff 	.word	0x000fffff
   20ce4:	7ff00000 	.word	0x7ff00000
   20ce8:	7fefffff 	.word	0x7fefffff
   20cec:	39500000 	.word	0x39500000
   20cf0:	3ff00000 	.word	0x3ff00000
   20cf4:	7fe00000 	.word	0x7fe00000
   20cf8:	7c9fffff 	.word	0x7c9fffff
   20cfc:	3fe00000 	.word	0x3fe00000
   20d00:	bff00000 	.word	0xbff00000
   20d04:	9b05      	ldr	r3, [sp, #20]
   20d06:	b313      	cbz	r3, 20d4e <_strtod_l+0xb86>
   20d08:	9b14      	ldr	r3, [sp, #80]	; 0x50
   20d0a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   20d0e:	d81e      	bhi.n	20d4e <_strtod_l+0xb86>
   20d10:	a325      	add	r3, pc, #148	; (adr r3, 20da8 <_strtod_l+0xbe0>)
   20d12:	e9d3 2300 	ldrd	r2, r3, [r3]
   20d16:	4620      	mov	r0, r4
   20d18:	4629      	mov	r1, r5
   20d1a:	f003 ff61 	bl	24be0 <__aeabi_dcmple>
   20d1e:	b190      	cbz	r0, 20d46 <_strtod_l+0xb7e>
   20d20:	4629      	mov	r1, r5
   20d22:	4620      	mov	r0, r4
   20d24:	f7fc f996 	bl	1d054 <__aeabi_d2uiz>
   20d28:	2800      	cmp	r0, #0
   20d2a:	bf08      	it	eq
   20d2c:	2001      	moveq	r0, #1
   20d2e:	f7fc f91b 	bl	1cf68 <__aeabi_ui2d>
   20d32:	9b08      	ldr	r3, [sp, #32]
   20d34:	4604      	mov	r4, r0
   20d36:	460d      	mov	r5, r1
   20d38:	b9d3      	cbnz	r3, 20d70 <_strtod_l+0xba8>
   20d3a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   20d3e:	9012      	str	r0, [sp, #72]	; 0x48
   20d40:	9313      	str	r3, [sp, #76]	; 0x4c
   20d42:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   20d46:	9a14      	ldr	r2, [sp, #80]	; 0x50
   20d48:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   20d4c:	1a9f      	subs	r7, r3, r2
   20d4e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20d52:	f002 facb 	bl	232ec <__ulp>
   20d56:	4602      	mov	r2, r0
   20d58:	460b      	mov	r3, r1
   20d5a:	4630      	mov	r0, r6
   20d5c:	4639      	mov	r1, r7
   20d5e:	f003 fcc3 	bl	246e8 <__aeabi_dmul>
   20d62:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   20d66:	f7fb ffc3 	bl	1ccf0 <__adddf3>
   20d6a:	4682      	mov	sl, r0
   20d6c:	468b      	mov	fp, r1
   20d6e:	e775      	b.n	20c5c <_strtod_l+0xa94>
   20d70:	4602      	mov	r2, r0
   20d72:	460b      	mov	r3, r1
   20d74:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   20d78:	e7e3      	b.n	20d42 <_strtod_l+0xb7a>
   20d7a:	a30d      	add	r3, pc, #52	; (adr r3, 20db0 <_strtod_l+0xbe8>)
   20d7c:	e9d3 2300 	ldrd	r2, r3, [r3]
   20d80:	f003 ff24 	bl	24bcc <__aeabi_dcmplt>
   20d84:	e79d      	b.n	20cc2 <_strtod_l+0xafa>
   20d86:	2300      	movs	r3, #0
   20d88:	9309      	str	r3, [sp, #36]	; 0x24
   20d8a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20d8c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   20d8e:	6013      	str	r3, [r2, #0]
   20d90:	f7ff ba5e 	b.w	20250 <_strtod_l+0x88>
   20d94:	2b65      	cmp	r3, #101	; 0x65
   20d96:	f04f 0200 	mov.w	r2, #0
   20d9a:	f43f abae 	beq.w	204fa <_strtod_l+0x332>
   20d9e:	4615      	mov	r5, r2
   20da0:	2101      	movs	r1, #1
   20da2:	f7ff bacd 	b.w	20340 <_strtod_l+0x178>
   20da6:	bf00      	nop
   20da8:	ffc00000 	.word	0xffc00000
   20dac:	41dfffff 	.word	0x41dfffff
   20db0:	94a03595 	.word	0x94a03595
   20db4:	3fcfffff 	.word	0x3fcfffff

00020db8 <_strtod_r>:
_strtod_r():
   20db8:	4b05      	ldr	r3, [pc, #20]	; (20dd0 <_strtod_r+0x18>)
   20dba:	b410      	push	{r4}
   20dbc:	681b      	ldr	r3, [r3, #0]
   20dbe:	4c05      	ldr	r4, [pc, #20]	; (20dd4 <_strtod_r+0x1c>)
   20dc0:	6a1b      	ldr	r3, [r3, #32]
   20dc2:	2b00      	cmp	r3, #0
   20dc4:	bf08      	it	eq
   20dc6:	4623      	moveq	r3, r4
   20dc8:	bc10      	pop	{r4}
   20dca:	f7ff b9fd 	b.w	201c8 <_strtod_l>
   20dce:	bf00      	nop
   20dd0:	2007c0e0 	.word	0x2007c0e0
   20dd4:	2007c144 	.word	0x2007c144

00020dd8 <__strtok_r>:
__strtok_r():
   20dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
   20dda:	b918      	cbnz	r0, 20de4 <__strtok_r+0xc>
   20ddc:	6810      	ldr	r0, [r2, #0]
   20dde:	b908      	cbnz	r0, 20de4 <__strtok_r+0xc>
   20de0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20de2:	4620      	mov	r0, r4
   20de4:	4604      	mov	r4, r0
   20de6:	460f      	mov	r7, r1
   20de8:	f814 5b01 	ldrb.w	r5, [r4], #1
   20dec:	f817 6b01 	ldrb.w	r6, [r7], #1
   20df0:	b91e      	cbnz	r6, 20dfa <__strtok_r+0x22>
   20df2:	b965      	cbnz	r5, 20e0e <__strtok_r+0x36>
   20df4:	6015      	str	r5, [r2, #0]
   20df6:	4628      	mov	r0, r5
   20df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20dfa:	42b5      	cmp	r5, r6
   20dfc:	d1f6      	bne.n	20dec <__strtok_r+0x14>
   20dfe:	2b00      	cmp	r3, #0
   20e00:	d1ef      	bne.n	20de2 <__strtok_r+0xa>
   20e02:	6014      	str	r4, [r2, #0]
   20e04:	7003      	strb	r3, [r0, #0]
   20e06:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20e08:	461c      	mov	r4, r3
   20e0a:	e00c      	b.n	20e26 <__strtok_r+0x4e>
   20e0c:	b915      	cbnz	r5, 20e14 <__strtok_r+0x3c>
   20e0e:	460e      	mov	r6, r1
   20e10:	f814 3b01 	ldrb.w	r3, [r4], #1
   20e14:	f816 5b01 	ldrb.w	r5, [r6], #1
   20e18:	42ab      	cmp	r3, r5
   20e1a:	d1f7      	bne.n	20e0c <__strtok_r+0x34>
   20e1c:	2b00      	cmp	r3, #0
   20e1e:	d0f3      	beq.n	20e08 <__strtok_r+0x30>
   20e20:	2300      	movs	r3, #0
   20e22:	f804 3c01 	strb.w	r3, [r4, #-1]
   20e26:	6014      	str	r4, [r2, #0]
   20e28:	bdf0      	pop	{r4, r5, r6, r7, pc}

00020e2a <strtok_r>:
strtok_r():
   20e2a:	2301      	movs	r3, #1
   20e2c:	f7ff bfd4 	b.w	20dd8 <__strtok_r>

00020e30 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   20e30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e34:	4680      	mov	r8, r0
   20e36:	4689      	mov	r9, r1
   20e38:	4692      	mov	sl, r2
   20e3a:	461f      	mov	r7, r3
   20e3c:	468b      	mov	fp, r1
   20e3e:	465d      	mov	r5, fp
   20e40:	980a      	ldr	r0, [sp, #40]	; 0x28
   20e42:	f815 4b01 	ldrb.w	r4, [r5], #1
   20e46:	f7fd fab9 	bl	1e3bc <__locale_ctype_ptr_l>
   20e4a:	4420      	add	r0, r4
   20e4c:	7846      	ldrb	r6, [r0, #1]
   20e4e:	f016 0608 	ands.w	r6, r6, #8
   20e52:	d10b      	bne.n	20e6c <_strtol_l.isra.0+0x3c>
   20e54:	2c2d      	cmp	r4, #45	; 0x2d
   20e56:	d10b      	bne.n	20e70 <_strtol_l.isra.0+0x40>
   20e58:	2601      	movs	r6, #1
   20e5a:	782c      	ldrb	r4, [r5, #0]
   20e5c:	f10b 0502 	add.w	r5, fp, #2
   20e60:	b167      	cbz	r7, 20e7c <_strtol_l.isra.0+0x4c>
   20e62:	2f10      	cmp	r7, #16
   20e64:	d114      	bne.n	20e90 <_strtol_l.isra.0+0x60>
   20e66:	2c30      	cmp	r4, #48	; 0x30
   20e68:	d00a      	beq.n	20e80 <_strtol_l.isra.0+0x50>
   20e6a:	e011      	b.n	20e90 <_strtol_l.isra.0+0x60>
   20e6c:	46ab      	mov	fp, r5
   20e6e:	e7e6      	b.n	20e3e <_strtol_l.isra.0+0xe>
   20e70:	2c2b      	cmp	r4, #43	; 0x2b
   20e72:	bf04      	itt	eq
   20e74:	782c      	ldrbeq	r4, [r5, #0]
   20e76:	f10b 0502 	addeq.w	r5, fp, #2
   20e7a:	e7f1      	b.n	20e60 <_strtol_l.isra.0+0x30>
   20e7c:	2c30      	cmp	r4, #48	; 0x30
   20e7e:	d127      	bne.n	20ed0 <_strtol_l.isra.0+0xa0>
   20e80:	782b      	ldrb	r3, [r5, #0]
   20e82:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   20e86:	2b58      	cmp	r3, #88	; 0x58
   20e88:	d14b      	bne.n	20f22 <_strtol_l.isra.0+0xf2>
   20e8a:	2710      	movs	r7, #16
   20e8c:	786c      	ldrb	r4, [r5, #1]
   20e8e:	3502      	adds	r5, #2
   20e90:	2e00      	cmp	r6, #0
   20e92:	bf0c      	ite	eq
   20e94:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   20e98:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   20e9c:	2200      	movs	r2, #0
   20e9e:	fbb1 fef7 	udiv	lr, r1, r7
   20ea2:	4610      	mov	r0, r2
   20ea4:	fb07 1c1e 	mls	ip, r7, lr, r1
   20ea8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   20eac:	2b09      	cmp	r3, #9
   20eae:	d811      	bhi.n	20ed4 <_strtol_l.isra.0+0xa4>
   20eb0:	461c      	mov	r4, r3
   20eb2:	42a7      	cmp	r7, r4
   20eb4:	dd1d      	ble.n	20ef2 <_strtol_l.isra.0+0xc2>
   20eb6:	1c53      	adds	r3, r2, #1
   20eb8:	d007      	beq.n	20eca <_strtol_l.isra.0+0x9a>
   20eba:	4586      	cmp	lr, r0
   20ebc:	d316      	bcc.n	20eec <_strtol_l.isra.0+0xbc>
   20ebe:	d101      	bne.n	20ec4 <_strtol_l.isra.0+0x94>
   20ec0:	45a4      	cmp	ip, r4
   20ec2:	db13      	blt.n	20eec <_strtol_l.isra.0+0xbc>
   20ec4:	2201      	movs	r2, #1
   20ec6:	fb00 4007 	mla	r0, r0, r7, r4
   20eca:	f815 4b01 	ldrb.w	r4, [r5], #1
   20ece:	e7eb      	b.n	20ea8 <_strtol_l.isra.0+0x78>
   20ed0:	270a      	movs	r7, #10
   20ed2:	e7dd      	b.n	20e90 <_strtol_l.isra.0+0x60>
   20ed4:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   20ed8:	2b19      	cmp	r3, #25
   20eda:	d801      	bhi.n	20ee0 <_strtol_l.isra.0+0xb0>
   20edc:	3c37      	subs	r4, #55	; 0x37
   20ede:	e7e8      	b.n	20eb2 <_strtol_l.isra.0+0x82>
   20ee0:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   20ee4:	2b19      	cmp	r3, #25
   20ee6:	d804      	bhi.n	20ef2 <_strtol_l.isra.0+0xc2>
   20ee8:	3c57      	subs	r4, #87	; 0x57
   20eea:	e7e2      	b.n	20eb2 <_strtol_l.isra.0+0x82>
   20eec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   20ef0:	e7eb      	b.n	20eca <_strtol_l.isra.0+0x9a>
   20ef2:	1c53      	adds	r3, r2, #1
   20ef4:	d108      	bne.n	20f08 <_strtol_l.isra.0+0xd8>
   20ef6:	2322      	movs	r3, #34	; 0x22
   20ef8:	4608      	mov	r0, r1
   20efa:	f8c8 3000 	str.w	r3, [r8]
   20efe:	f1ba 0f00 	cmp.w	sl, #0
   20f02:	d107      	bne.n	20f14 <_strtol_l.isra.0+0xe4>
   20f04:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f08:	b106      	cbz	r6, 20f0c <_strtol_l.isra.0+0xdc>
   20f0a:	4240      	negs	r0, r0
   20f0c:	f1ba 0f00 	cmp.w	sl, #0
   20f10:	d00c      	beq.n	20f2c <_strtol_l.isra.0+0xfc>
   20f12:	b122      	cbz	r2, 20f1e <_strtol_l.isra.0+0xee>
   20f14:	3d01      	subs	r5, #1
   20f16:	f8ca 5000 	str.w	r5, [sl]
   20f1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f1e:	464d      	mov	r5, r9
   20f20:	e7f9      	b.n	20f16 <_strtol_l.isra.0+0xe6>
   20f22:	2430      	movs	r4, #48	; 0x30
   20f24:	2f00      	cmp	r7, #0
   20f26:	d1b3      	bne.n	20e90 <_strtol_l.isra.0+0x60>
   20f28:	2708      	movs	r7, #8
   20f2a:	e7b1      	b.n	20e90 <_strtol_l.isra.0+0x60>
   20f2c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020f30 <_strtol_r>:
_strtol_r():
   20f30:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20f32:	4c06      	ldr	r4, [pc, #24]	; (20f4c <_strtol_r+0x1c>)
   20f34:	4d06      	ldr	r5, [pc, #24]	; (20f50 <_strtol_r+0x20>)
   20f36:	6824      	ldr	r4, [r4, #0]
   20f38:	6a24      	ldr	r4, [r4, #32]
   20f3a:	2c00      	cmp	r4, #0
   20f3c:	bf08      	it	eq
   20f3e:	462c      	moveq	r4, r5
   20f40:	9400      	str	r4, [sp, #0]
   20f42:	f7ff ff75 	bl	20e30 <_strtol_l.isra.0>
   20f46:	b003      	add	sp, #12
   20f48:	bd30      	pop	{r4, r5, pc}
   20f4a:	bf00      	nop
   20f4c:	2007c0e0 	.word	0x2007c0e0
   20f50:	2007c144 	.word	0x2007c144

00020f54 <strtol>:
strtol():
   20f54:	4b08      	ldr	r3, [pc, #32]	; (20f78 <strtol+0x24>)
   20f56:	b537      	push	{r0, r1, r2, r4, r5, lr}
   20f58:	681c      	ldr	r4, [r3, #0]
   20f5a:	4d08      	ldr	r5, [pc, #32]	; (20f7c <strtol+0x28>)
   20f5c:	6a23      	ldr	r3, [r4, #32]
   20f5e:	2b00      	cmp	r3, #0
   20f60:	bf08      	it	eq
   20f62:	462b      	moveq	r3, r5
   20f64:	9300      	str	r3, [sp, #0]
   20f66:	4613      	mov	r3, r2
   20f68:	460a      	mov	r2, r1
   20f6a:	4601      	mov	r1, r0
   20f6c:	4620      	mov	r0, r4
   20f6e:	f7ff ff5f 	bl	20e30 <_strtol_l.isra.0>
   20f72:	b003      	add	sp, #12
   20f74:	bd30      	pop	{r4, r5, pc}
   20f76:	bf00      	nop
   20f78:	2007c0e0 	.word	0x2007c0e0
   20f7c:	2007c144 	.word	0x2007c144

00020f80 <time>:
time():
   20f80:	b513      	push	{r0, r1, r4, lr}
   20f82:	4b08      	ldr	r3, [pc, #32]	; (20fa4 <time+0x24>)
   20f84:	4604      	mov	r4, r0
   20f86:	2200      	movs	r2, #0
   20f88:	6818      	ldr	r0, [r3, #0]
   20f8a:	4669      	mov	r1, sp
   20f8c:	f001 fe0e 	bl	22bac <_gettimeofday_r>
   20f90:	2800      	cmp	r0, #0
   20f92:	bfbc      	itt	lt
   20f94:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   20f98:	9300      	strlt	r3, [sp, #0]
   20f9a:	9800      	ldr	r0, [sp, #0]
   20f9c:	b104      	cbz	r4, 20fa0 <time+0x20>
   20f9e:	6020      	str	r0, [r4, #0]
   20fa0:	b002      	add	sp, #8
   20fa2:	bd10      	pop	{r4, pc}
   20fa4:	2007c0e0 	.word	0x2007c0e0

00020fa8 <tolower>:
tolower():
   20fa8:	b510      	push	{r4, lr}
   20faa:	4604      	mov	r4, r0
   20fac:	f7fd fa0a 	bl	1e3c4 <__locale_ctype_ptr>
   20fb0:	4420      	add	r0, r4
   20fb2:	7843      	ldrb	r3, [r0, #1]
   20fb4:	f003 0303 	and.w	r3, r3, #3
   20fb8:	2b01      	cmp	r3, #1
   20fba:	bf08      	it	eq
   20fbc:	3420      	addeq	r4, #32
   20fbe:	4620      	mov	r0, r4
   20fc0:	bd10      	pop	{r4, pc}

00020fc2 <toupper>:
toupper():
   20fc2:	b510      	push	{r4, lr}
   20fc4:	4604      	mov	r4, r0
   20fc6:	f7fd f9fd 	bl	1e3c4 <__locale_ctype_ptr>
   20fca:	4420      	add	r0, r4
   20fcc:	7843      	ldrb	r3, [r0, #1]
   20fce:	f003 0303 	and.w	r3, r3, #3
   20fd2:	2b02      	cmp	r3, #2
   20fd4:	bf08      	it	eq
   20fd6:	3c20      	subeq	r4, #32
   20fd8:	4620      	mov	r0, r4
   20fda:	bd10      	pop	{r4, pc}

00020fdc <__tzcalc_limits>:
__tzcalc_limits():
   20fdc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20fe0:	4604      	mov	r4, r0
   20fe2:	f001 fdf5 	bl	22bd0 <__gettzinfo>
   20fe6:	f240 73b1 	movw	r3, #1969	; 0x7b1
   20fea:	429c      	cmp	r4, r3
   20fec:	f340 8098 	ble.w	21120 <__tzcalc_limits+0x144>
   20ff0:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   20ff4:	f240 126d 	movw	r2, #365	; 0x16d
   20ff8:	18e3      	adds	r3, r4, r3
   20ffa:	109b      	asrs	r3, r3, #2
   20ffc:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   21000:	fb02 3505 	mla	r5, r2, r5, r3
   21004:	f06f 0263 	mvn.w	r2, #99	; 0x63
   21008:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   2100c:	fb93 f3f2 	sdiv	r3, r3, r2
   21010:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   21014:	441d      	add	r5, r3
   21016:	f44f 73c8 	mov.w	r3, #400	; 0x190
   2101a:	18a2      	adds	r2, r4, r2
   2101c:	fb92 f2f3 	sdiv	r2, r2, r3
   21020:	fb94 f7f3 	sdiv	r7, r4, r3
   21024:	4415      	add	r5, r2
   21026:	2264      	movs	r2, #100	; 0x64
   21028:	fb03 4717 	mls	r7, r3, r7, r4
   2102c:	fb94 f6f2 	sdiv	r6, r4, r2
   21030:	fab7 fe87 	clz	lr, r7
   21034:	4601      	mov	r1, r0
   21036:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   2103a:	fb02 4616 	mls	r6, r2, r6, r4
   2103e:	f100 0338 	add.w	r3, r0, #56	; 0x38
   21042:	9301      	str	r3, [sp, #4]
   21044:	f004 0303 	and.w	r3, r4, #3
   21048:	6044      	str	r4, [r0, #4]
   2104a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   2104e:	9300      	str	r3, [sp, #0]
   21050:	7a0b      	ldrb	r3, [r1, #8]
   21052:	2b4a      	cmp	r3, #74	; 0x4a
   21054:	d123      	bne.n	2109e <__tzcalc_limits+0xc2>
   21056:	694c      	ldr	r4, [r1, #20]
   21058:	9a00      	ldr	r2, [sp, #0]
   2105a:	192b      	adds	r3, r5, r4
   2105c:	b902      	cbnz	r2, 21060 <__tzcalc_limits+0x84>
   2105e:	b906      	cbnz	r6, 21062 <__tzcalc_limits+0x86>
   21060:	b9df      	cbnz	r7, 2109a <__tzcalc_limits+0xbe>
   21062:	2c3b      	cmp	r4, #59	; 0x3b
   21064:	bfd4      	ite	le
   21066:	2400      	movle	r4, #0
   21068:	2401      	movgt	r4, #1
   2106a:	441c      	add	r4, r3
   2106c:	3c01      	subs	r4, #1
   2106e:	4b2d      	ldr	r3, [pc, #180]	; (21124 <__tzcalc_limits+0x148>)
   21070:	698a      	ldr	r2, [r1, #24]
   21072:	fb03 2404 	mla	r4, r3, r4, r2
   21076:	6a0b      	ldr	r3, [r1, #32]
   21078:	441c      	add	r4, r3
   2107a:	9b01      	ldr	r3, [sp, #4]
   2107c:	f841 4f1c 	str.w	r4, [r1, #28]!
   21080:	428b      	cmp	r3, r1
   21082:	d1e5      	bne.n	21050 <__tzcalc_limits+0x74>
   21084:	69c3      	ldr	r3, [r0, #28]
   21086:	6b82      	ldr	r2, [r0, #56]	; 0x38
   21088:	4293      	cmp	r3, r2
   2108a:	bfac      	ite	ge
   2108c:	2300      	movge	r3, #0
   2108e:	2301      	movlt	r3, #1
   21090:	6003      	str	r3, [r0, #0]
   21092:	2001      	movs	r0, #1
   21094:	b003      	add	sp, #12
   21096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2109a:	2400      	movs	r4, #0
   2109c:	e7e5      	b.n	2106a <__tzcalc_limits+0x8e>
   2109e:	2b44      	cmp	r3, #68	; 0x44
   210a0:	d102      	bne.n	210a8 <__tzcalc_limits+0xcc>
   210a2:	694b      	ldr	r3, [r1, #20]
   210a4:	18ec      	adds	r4, r5, r3
   210a6:	e7e2      	b.n	2106e <__tzcalc_limits+0x92>
   210a8:	9b00      	ldr	r3, [sp, #0]
   210aa:	bb7b      	cbnz	r3, 2110c <__tzcalc_limits+0x130>
   210ac:	2e00      	cmp	r6, #0
   210ae:	bf0c      	ite	eq
   210b0:	46f0      	moveq	r8, lr
   210b2:	f04f 0801 	movne.w	r8, #1
   210b6:	2230      	movs	r2, #48	; 0x30
   210b8:	4b1b      	ldr	r3, [pc, #108]	; (21128 <__tzcalc_limits+0x14c>)
   210ba:	f04f 0901 	mov.w	r9, #1
   210be:	fb02 3808 	mla	r8, r2, r8, r3
   210c2:	462b      	mov	r3, r5
   210c4:	68cc      	ldr	r4, [r1, #12]
   210c6:	f1a8 0a04 	sub.w	sl, r8, #4
   210ca:	45a1      	cmp	r9, r4
   210cc:	db20      	blt.n	21110 <__tzcalc_limits+0x134>
   210ce:	2207      	movs	r2, #7
   210d0:	2c01      	cmp	r4, #1
   210d2:	bfb8      	it	lt
   210d4:	2401      	movlt	r4, #1
   210d6:	f103 0b04 	add.w	fp, r3, #4
   210da:	fb9b faf2 	sdiv	sl, fp, r2
   210de:	46a1      	mov	r9, r4
   210e0:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   210e4:	694c      	ldr	r4, [r1, #20]
   210e6:	ebab 0a0a 	sub.w	sl, fp, sl
   210ea:	ebb4 0a0a 	subs.w	sl, r4, sl
   210ee:	690c      	ldr	r4, [r1, #16]
   210f0:	44e1      	add	r9, ip
   210f2:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   210f6:	bf48      	it	mi
   210f8:	4492      	addmi	sl, r2
   210fa:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   210fe:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   21102:	4454      	add	r4, sl
   21104:	4544      	cmp	r4, r8
   21106:	da09      	bge.n	2111c <__tzcalc_limits+0x140>
   21108:	441c      	add	r4, r3
   2110a:	e7b0      	b.n	2106e <__tzcalc_limits+0x92>
   2110c:	46f0      	mov	r8, lr
   2110e:	e7d2      	b.n	210b6 <__tzcalc_limits+0xda>
   21110:	f85a bf04 	ldr.w	fp, [sl, #4]!
   21114:	f109 0901 	add.w	r9, r9, #1
   21118:	445b      	add	r3, fp
   2111a:	e7d6      	b.n	210ca <__tzcalc_limits+0xee>
   2111c:	3c07      	subs	r4, #7
   2111e:	e7f1      	b.n	21104 <__tzcalc_limits+0x128>
   21120:	2000      	movs	r0, #0
   21122:	e7b7      	b.n	21094 <__tzcalc_limits+0xb8>
   21124:	00015180 	.word	0x00015180
   21128:	00027a64 	.word	0x00027a64

0002112c <__tz_lock>:
__tz_lock():
   2112c:	4770      	bx	lr

0002112e <__tz_unlock>:
__tz_unlock():
   2112e:	4770      	bx	lr

00021130 <_tzset_unlocked>:
_tzset_unlocked():
   21130:	4b01      	ldr	r3, [pc, #4]	; (21138 <_tzset_unlocked+0x8>)
   21132:	6818      	ldr	r0, [r3, #0]
   21134:	f000 b802 	b.w	2113c <_tzset_unlocked_r>
   21138:	2007c0e0 	.word	0x2007c0e0

0002113c <_tzset_unlocked_r>:
_tzset_unlocked_r():
   2113c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21140:	b08d      	sub	sp, #52	; 0x34
   21142:	4607      	mov	r7, r0
   21144:	f001 fd44 	bl	22bd0 <__gettzinfo>
   21148:	49b1      	ldr	r1, [pc, #708]	; (21410 <_tzset_unlocked_r+0x2d4>)
   2114a:	4605      	mov	r5, r0
   2114c:	4638      	mov	r0, r7
   2114e:	f001 fd25 	bl	22b9c <_getenv_r>
   21152:	4eb0      	ldr	r6, [pc, #704]	; (21414 <_tzset_unlocked_r+0x2d8>)
   21154:	4604      	mov	r4, r0
   21156:	b970      	cbnz	r0, 21176 <_tzset_unlocked_r+0x3a>
   21158:	4baf      	ldr	r3, [pc, #700]	; (21418 <_tzset_unlocked_r+0x2dc>)
   2115a:	4ab0      	ldr	r2, [pc, #704]	; (2141c <_tzset_unlocked_r+0x2e0>)
   2115c:	6018      	str	r0, [r3, #0]
   2115e:	4bb0      	ldr	r3, [pc, #704]	; (21420 <_tzset_unlocked_r+0x2e4>)
   21160:	6018      	str	r0, [r3, #0]
   21162:	4bb0      	ldr	r3, [pc, #704]	; (21424 <_tzset_unlocked_r+0x2e8>)
   21164:	6830      	ldr	r0, [r6, #0]
   21166:	601a      	str	r2, [r3, #0]
   21168:	605a      	str	r2, [r3, #4]
   2116a:	f7fd f9a5 	bl	1e4b8 <free>
   2116e:	6034      	str	r4, [r6, #0]
   21170:	b00d      	add	sp, #52	; 0x34
   21172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21176:	6831      	ldr	r1, [r6, #0]
   21178:	2900      	cmp	r1, #0
   2117a:	d160      	bne.n	2123e <_tzset_unlocked_r+0x102>
   2117c:	6830      	ldr	r0, [r6, #0]
   2117e:	f7fd f99b 	bl	1e4b8 <free>
   21182:	4620      	mov	r0, r4
   21184:	f7fe ff7a 	bl	2007c <strlen>
   21188:	1c41      	adds	r1, r0, #1
   2118a:	4638      	mov	r0, r7
   2118c:	f7fd fcea 	bl	1eb64 <_malloc_r>
   21190:	6030      	str	r0, [r6, #0]
   21192:	2800      	cmp	r0, #0
   21194:	d158      	bne.n	21248 <_tzset_unlocked_r+0x10c>
   21196:	7823      	ldrb	r3, [r4, #0]
   21198:	ae0a      	add	r6, sp, #40	; 0x28
   2119a:	2b3a      	cmp	r3, #58	; 0x3a
   2119c:	bf08      	it	eq
   2119e:	3401      	addeq	r4, #1
   211a0:	4633      	mov	r3, r6
   211a2:	4aa1      	ldr	r2, [pc, #644]	; (21428 <_tzset_unlocked_r+0x2ec>)
   211a4:	49a1      	ldr	r1, [pc, #644]	; (2142c <_tzset_unlocked_r+0x2f0>)
   211a6:	4620      	mov	r0, r4
   211a8:	f7fe feac 	bl	1ff04 <siscanf>
   211ac:	2800      	cmp	r0, #0
   211ae:	dddf      	ble.n	21170 <_tzset_unlocked_r+0x34>
   211b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   211b2:	18e7      	adds	r7, r4, r3
   211b4:	5ce3      	ldrb	r3, [r4, r3]
   211b6:	2b2d      	cmp	r3, #45	; 0x2d
   211b8:	d14a      	bne.n	21250 <_tzset_unlocked_r+0x114>
   211ba:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   211be:	3701      	adds	r7, #1
   211c0:	f04f 0800 	mov.w	r8, #0
   211c4:	f10d 0a20 	add.w	sl, sp, #32
   211c8:	f10d 0b1e 	add.w	fp, sp, #30
   211cc:	9603      	str	r6, [sp, #12]
   211ce:	f8cd a008 	str.w	sl, [sp, #8]
   211d2:	9601      	str	r6, [sp, #4]
   211d4:	f8cd b000 	str.w	fp, [sp]
   211d8:	4633      	mov	r3, r6
   211da:	aa07      	add	r2, sp, #28
   211dc:	4994      	ldr	r1, [pc, #592]	; (21430 <_tzset_unlocked_r+0x2f4>)
   211de:	4638      	mov	r0, r7
   211e0:	f8ad 801e 	strh.w	r8, [sp, #30]
   211e4:	f8ad 8020 	strh.w	r8, [sp, #32]
   211e8:	f7fe fe8c 	bl	1ff04 <siscanf>
   211ec:	4540      	cmp	r0, r8
   211ee:	ddbf      	ble.n	21170 <_tzset_unlocked_r+0x34>
   211f0:	213c      	movs	r1, #60	; 0x3c
   211f2:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   211f6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   211fa:	f8df 9240 	ldr.w	r9, [pc, #576]	; 2143c <_tzset_unlocked_r+0x300>
   211fe:	fb01 2203 	mla	r2, r1, r3, r2
   21202:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   21206:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   2120a:	fb01 2303 	mla	r3, r1, r3, r2
   2120e:	435c      	muls	r4, r3
   21210:	4b85      	ldr	r3, [pc, #532]	; (21428 <_tzset_unlocked_r+0x2ec>)
   21212:	622c      	str	r4, [r5, #32]
   21214:	4c83      	ldr	r4, [pc, #524]	; (21424 <_tzset_unlocked_r+0x2e8>)
   21216:	464a      	mov	r2, r9
   21218:	6023      	str	r3, [r4, #0]
   2121a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2121c:	4983      	ldr	r1, [pc, #524]	; (2142c <_tzset_unlocked_r+0x2f0>)
   2121e:	441f      	add	r7, r3
   21220:	4638      	mov	r0, r7
   21222:	4633      	mov	r3, r6
   21224:	f7fe fe6e 	bl	1ff04 <siscanf>
   21228:	4540      	cmp	r0, r8
   2122a:	dc16      	bgt.n	2125a <_tzset_unlocked_r+0x11e>
   2122c:	6823      	ldr	r3, [r4, #0]
   2122e:	6a2a      	ldr	r2, [r5, #32]
   21230:	6063      	str	r3, [r4, #4]
   21232:	4b79      	ldr	r3, [pc, #484]	; (21418 <_tzset_unlocked_r+0x2dc>)
   21234:	601a      	str	r2, [r3, #0]
   21236:	4b7a      	ldr	r3, [pc, #488]	; (21420 <_tzset_unlocked_r+0x2e4>)
   21238:	f8c3 8000 	str.w	r8, [r3]
   2123c:	e798      	b.n	21170 <_tzset_unlocked_r+0x34>
   2123e:	f7fe ff0b 	bl	20058 <strcmp>
   21242:	2800      	cmp	r0, #0
   21244:	d094      	beq.n	21170 <_tzset_unlocked_r+0x34>
   21246:	e799      	b.n	2117c <_tzset_unlocked_r+0x40>
   21248:	4621      	mov	r1, r4
   2124a:	f7fe ff0f 	bl	2006c <strcpy>
   2124e:	e7a2      	b.n	21196 <_tzset_unlocked_r+0x5a>
   21250:	2b2b      	cmp	r3, #43	; 0x2b
   21252:	bf08      	it	eq
   21254:	3701      	addeq	r7, #1
   21256:	2401      	movs	r4, #1
   21258:	e7b2      	b.n	211c0 <_tzset_unlocked_r+0x84>
   2125a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2125c:	f8c4 9004 	str.w	r9, [r4, #4]
   21260:	18fc      	adds	r4, r7, r3
   21262:	5cfb      	ldrb	r3, [r7, r3]
   21264:	2b2d      	cmp	r3, #45	; 0x2d
   21266:	f040 8092 	bne.w	2138e <_tzset_unlocked_r+0x252>
   2126a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   2126e:	3401      	adds	r4, #1
   21270:	2300      	movs	r3, #0
   21272:	9603      	str	r6, [sp, #12]
   21274:	f8ad 301c 	strh.w	r3, [sp, #28]
   21278:	f8ad 301e 	strh.w	r3, [sp, #30]
   2127c:	f8ad 3020 	strh.w	r3, [sp, #32]
   21280:	930a      	str	r3, [sp, #40]	; 0x28
   21282:	f8cd a008 	str.w	sl, [sp, #8]
   21286:	9601      	str	r6, [sp, #4]
   21288:	f8cd b000 	str.w	fp, [sp]
   2128c:	4633      	mov	r3, r6
   2128e:	aa07      	add	r2, sp, #28
   21290:	4967      	ldr	r1, [pc, #412]	; (21430 <_tzset_unlocked_r+0x2f4>)
   21292:	4620      	mov	r0, r4
   21294:	f7fe fe36 	bl	1ff04 <siscanf>
   21298:	2800      	cmp	r0, #0
   2129a:	dc7d      	bgt.n	21398 <_tzset_unlocked_r+0x25c>
   2129c:	6a2b      	ldr	r3, [r5, #32]
   2129e:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   212a2:	63eb      	str	r3, [r5, #60]	; 0x3c
   212a4:	462f      	mov	r7, r5
   212a6:	f04f 0900 	mov.w	r9, #0
   212aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   212ac:	441c      	add	r4, r3
   212ae:	7823      	ldrb	r3, [r4, #0]
   212b0:	2b2c      	cmp	r3, #44	; 0x2c
   212b2:	bf08      	it	eq
   212b4:	3401      	addeq	r4, #1
   212b6:	f894 8000 	ldrb.w	r8, [r4]
   212ba:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   212be:	d17b      	bne.n	213b8 <_tzset_unlocked_r+0x27c>
   212c0:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   212c4:	9302      	str	r3, [sp, #8]
   212c6:	ab09      	add	r3, sp, #36	; 0x24
   212c8:	9300      	str	r3, [sp, #0]
   212ca:	9603      	str	r6, [sp, #12]
   212cc:	9601      	str	r6, [sp, #4]
   212ce:	4633      	mov	r3, r6
   212d0:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   212d4:	4957      	ldr	r1, [pc, #348]	; (21434 <_tzset_unlocked_r+0x2f8>)
   212d6:	4620      	mov	r0, r4
   212d8:	f7fe fe14 	bl	1ff04 <siscanf>
   212dc:	2803      	cmp	r0, #3
   212de:	f47f af47 	bne.w	21170 <_tzset_unlocked_r+0x34>
   212e2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   212e6:	1e4b      	subs	r3, r1, #1
   212e8:	2b0b      	cmp	r3, #11
   212ea:	f63f af41 	bhi.w	21170 <_tzset_unlocked_r+0x34>
   212ee:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   212f2:	1e53      	subs	r3, r2, #1
   212f4:	2b04      	cmp	r3, #4
   212f6:	f63f af3b 	bhi.w	21170 <_tzset_unlocked_r+0x34>
   212fa:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   212fe:	2b06      	cmp	r3, #6
   21300:	f63f af36 	bhi.w	21170 <_tzset_unlocked_r+0x34>
   21304:	f887 8008 	strb.w	r8, [r7, #8]
   21308:	60f9      	str	r1, [r7, #12]
   2130a:	613a      	str	r2, [r7, #16]
   2130c:	617b      	str	r3, [r7, #20]
   2130e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   21310:	eb04 0803 	add.w	r8, r4, r3
   21314:	2302      	movs	r3, #2
   21316:	f8ad 301c 	strh.w	r3, [sp, #28]
   2131a:	2300      	movs	r3, #0
   2131c:	f8ad 301e 	strh.w	r3, [sp, #30]
   21320:	f8ad 3020 	strh.w	r3, [sp, #32]
   21324:	930a      	str	r3, [sp, #40]	; 0x28
   21326:	f898 3000 	ldrb.w	r3, [r8]
   2132a:	2b2f      	cmp	r3, #47	; 0x2f
   2132c:	d10b      	bne.n	21346 <_tzset_unlocked_r+0x20a>
   2132e:	9603      	str	r6, [sp, #12]
   21330:	f8cd a008 	str.w	sl, [sp, #8]
   21334:	9601      	str	r6, [sp, #4]
   21336:	f8cd b000 	str.w	fp, [sp]
   2133a:	4633      	mov	r3, r6
   2133c:	aa07      	add	r2, sp, #28
   2133e:	493e      	ldr	r1, [pc, #248]	; (21438 <_tzset_unlocked_r+0x2fc>)
   21340:	4640      	mov	r0, r8
   21342:	f7fe fddf 	bl	1ff04 <siscanf>
   21346:	213c      	movs	r1, #60	; 0x3c
   21348:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   2134c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   21350:	f109 0901 	add.w	r9, r9, #1
   21354:	fb01 2203 	mla	r2, r1, r3, r2
   21358:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   2135c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   21360:	f1b9 0f02 	cmp.w	r9, #2
   21364:	fb01 2303 	mla	r3, r1, r3, r2
   21368:	61bb      	str	r3, [r7, #24]
   2136a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   2136c:	f107 071c 	add.w	r7, r7, #28
   21370:	4444      	add	r4, r8
   21372:	d19c      	bne.n	212ae <_tzset_unlocked_r+0x172>
   21374:	6868      	ldr	r0, [r5, #4]
   21376:	f7ff fe31 	bl	20fdc <__tzcalc_limits>
   2137a:	6a2a      	ldr	r2, [r5, #32]
   2137c:	4b26      	ldr	r3, [pc, #152]	; (21418 <_tzset_unlocked_r+0x2dc>)
   2137e:	601a      	str	r2, [r3, #0]
   21380:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   21382:	1a9b      	subs	r3, r3, r2
   21384:	bf18      	it	ne
   21386:	2301      	movne	r3, #1
   21388:	4a25      	ldr	r2, [pc, #148]	; (21420 <_tzset_unlocked_r+0x2e4>)
   2138a:	6013      	str	r3, [r2, #0]
   2138c:	e6f0      	b.n	21170 <_tzset_unlocked_r+0x34>
   2138e:	2b2b      	cmp	r3, #43	; 0x2b
   21390:	bf08      	it	eq
   21392:	3401      	addeq	r4, #1
   21394:	2701      	movs	r7, #1
   21396:	e76b      	b.n	21270 <_tzset_unlocked_r+0x134>
   21398:	213c      	movs	r1, #60	; 0x3c
   2139a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   2139e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   213a2:	fb01 2203 	mla	r2, r1, r3, r2
   213a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   213aa:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   213ae:	fb01 2303 	mla	r3, r1, r3, r2
   213b2:	435f      	muls	r7, r3
   213b4:	63ef      	str	r7, [r5, #60]	; 0x3c
   213b6:	e775      	b.n	212a4 <_tzset_unlocked_r+0x168>
   213b8:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   213bc:	bf0a      	itet	eq
   213be:	4643      	moveq	r3, r8
   213c0:	2344      	movne	r3, #68	; 0x44
   213c2:	3401      	addeq	r4, #1
   213c4:	220a      	movs	r2, #10
   213c6:	a90b      	add	r1, sp, #44	; 0x2c
   213c8:	4620      	mov	r0, r4
   213ca:	9305      	str	r3, [sp, #20]
   213cc:	f003 f8be 	bl	2454c <strtoul>
   213d0:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   213d4:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   213d8:	4544      	cmp	r4, r8
   213da:	9b05      	ldr	r3, [sp, #20]
   213dc:	d114      	bne.n	21408 <_tzset_unlocked_r+0x2cc>
   213de:	234d      	movs	r3, #77	; 0x4d
   213e0:	f1b9 0f00 	cmp.w	r9, #0
   213e4:	d107      	bne.n	213f6 <_tzset_unlocked_r+0x2ba>
   213e6:	722b      	strb	r3, [r5, #8]
   213e8:	2303      	movs	r3, #3
   213ea:	60eb      	str	r3, [r5, #12]
   213ec:	2302      	movs	r3, #2
   213ee:	f8c5 9014 	str.w	r9, [r5, #20]
   213f2:	612b      	str	r3, [r5, #16]
   213f4:	e78e      	b.n	21314 <_tzset_unlocked_r+0x1d8>
   213f6:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   213fa:	230b      	movs	r3, #11
   213fc:	62ab      	str	r3, [r5, #40]	; 0x28
   213fe:	2301      	movs	r3, #1
   21400:	62eb      	str	r3, [r5, #44]	; 0x2c
   21402:	2300      	movs	r3, #0
   21404:	632b      	str	r3, [r5, #48]	; 0x30
   21406:	e785      	b.n	21314 <_tzset_unlocked_r+0x1d8>
   21408:	b280      	uxth	r0, r0
   2140a:	723b      	strb	r3, [r7, #8]
   2140c:	6178      	str	r0, [r7, #20]
   2140e:	e781      	b.n	21314 <_tzset_unlocked_r+0x1d8>
   21410:	00027b50 	.word	0x00027b50
   21414:	2007c8dc 	.word	0x2007c8dc
   21418:	2007c8e4 	.word	0x2007c8e4
   2141c:	00027b53 	.word	0x00027b53
   21420:	2007c8e0 	.word	0x2007c8e0
   21424:	2007c2b0 	.word	0x2007c2b0
   21428:	2007c8cf 	.word	0x2007c8cf
   2142c:	00027b57 	.word	0x00027b57
   21430:	00027b7a 	.word	0x00027b7a
   21434:	00027b66 	.word	0x00027b66
   21438:	00027b79 	.word	0x00027b79
   2143c:	2007c8c4 	.word	0x2007c8c4

00021440 <_vsniprintf_r>:
_vsniprintf_r():
   21440:	b530      	push	{r4, r5, lr}
   21442:	1e14      	subs	r4, r2, #0
   21444:	4605      	mov	r5, r0
   21446:	b09b      	sub	sp, #108	; 0x6c
   21448:	4618      	mov	r0, r3
   2144a:	da05      	bge.n	21458 <_vsniprintf_r+0x18>
   2144c:	238b      	movs	r3, #139	; 0x8b
   2144e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   21452:	602b      	str	r3, [r5, #0]
   21454:	b01b      	add	sp, #108	; 0x6c
   21456:	bd30      	pop	{r4, r5, pc}
   21458:	f44f 7302 	mov.w	r3, #520	; 0x208
   2145c:	f8ad 300c 	strh.w	r3, [sp, #12]
   21460:	bf0c      	ite	eq
   21462:	4623      	moveq	r3, r4
   21464:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   21468:	9302      	str	r3, [sp, #8]
   2146a:	9305      	str	r3, [sp, #20]
   2146c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   21470:	9100      	str	r1, [sp, #0]
   21472:	9104      	str	r1, [sp, #16]
   21474:	f8ad 300e 	strh.w	r3, [sp, #14]
   21478:	4602      	mov	r2, r0
   2147a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2147c:	4669      	mov	r1, sp
   2147e:	4628      	mov	r0, r5
   21480:	f002 f8de 	bl	23640 <_svfiprintf_r>
   21484:	1c43      	adds	r3, r0, #1
   21486:	bfbc      	itt	lt
   21488:	238b      	movlt	r3, #139	; 0x8b
   2148a:	602b      	strlt	r3, [r5, #0]
   2148c:	2c00      	cmp	r4, #0
   2148e:	d0e1      	beq.n	21454 <_vsniprintf_r+0x14>
   21490:	2200      	movs	r2, #0
   21492:	9b00      	ldr	r3, [sp, #0]
   21494:	701a      	strb	r2, [r3, #0]
   21496:	e7dd      	b.n	21454 <_vsniprintf_r+0x14>

00021498 <vsniprintf>:
vsniprintf():
   21498:	b507      	push	{r0, r1, r2, lr}
   2149a:	9300      	str	r3, [sp, #0]
   2149c:	4613      	mov	r3, r2
   2149e:	460a      	mov	r2, r1
   214a0:	4601      	mov	r1, r0
   214a2:	4803      	ldr	r0, [pc, #12]	; (214b0 <vsniprintf+0x18>)
   214a4:	6800      	ldr	r0, [r0, #0]
   214a6:	f7ff ffcb 	bl	21440 <_vsniprintf_r>
   214aa:	b003      	add	sp, #12
   214ac:	f85d fb04 	ldr.w	pc, [sp], #4
   214b0:	2007c0e0 	.word	0x2007c0e0

000214b4 <_vsiscanf_r>:
_vsscanf_r():
   214b4:	b570      	push	{r4, r5, r6, lr}
   214b6:	461e      	mov	r6, r3
   214b8:	f44f 7301 	mov.w	r3, #516	; 0x204
   214bc:	b09a      	sub	sp, #104	; 0x68
   214be:	4604      	mov	r4, r0
   214c0:	4608      	mov	r0, r1
   214c2:	4615      	mov	r5, r2
   214c4:	f8ad 300c 	strh.w	r3, [sp, #12]
   214c8:	9100      	str	r1, [sp, #0]
   214ca:	9104      	str	r1, [sp, #16]
   214cc:	f7fe fdd6 	bl	2007c <strlen>
   214d0:	4b09      	ldr	r3, [pc, #36]	; (214f8 <_vsiscanf_r+0x44>)
   214d2:	2100      	movs	r1, #0
   214d4:	9309      	str	r3, [sp, #36]	; 0x24
   214d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
   214da:	9001      	str	r0, [sp, #4]
   214dc:	9005      	str	r0, [sp, #20]
   214de:	910d      	str	r1, [sp, #52]	; 0x34
   214e0:	9112      	str	r1, [sp, #72]	; 0x48
   214e2:	f8ad 300e 	strh.w	r3, [sp, #14]
   214e6:	462a      	mov	r2, r5
   214e8:	4633      	mov	r3, r6
   214ea:	4669      	mov	r1, sp
   214ec:	4620      	mov	r0, r4
   214ee:	f002 f9f5 	bl	238dc <__ssvfiscanf_r>
   214f2:	b01a      	add	sp, #104	; 0x68
   214f4:	bd70      	pop	{r4, r5, r6, pc}
   214f6:	bf00      	nop
   214f8:	0001ff7b 	.word	0x0001ff7b

000214fc <vsiscanf>:
vsiscanf():
   214fc:	4613      	mov	r3, r2
   214fe:	460a      	mov	r2, r1
   21500:	4601      	mov	r1, r0
   21502:	4802      	ldr	r0, [pc, #8]	; (2150c <vsiscanf+0x10>)
   21504:	6800      	ldr	r0, [r0, #0]
   21506:	f7ff bfd5 	b.w	214b4 <_vsiscanf_r>
   2150a:	bf00      	nop
   2150c:	2007c0e0 	.word	0x2007c0e0

00021510 <__swbuf_r>:
__swbuf_r():
   21510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   21512:	460e      	mov	r6, r1
   21514:	4614      	mov	r4, r2
   21516:	4605      	mov	r5, r0
   21518:	b118      	cbz	r0, 21522 <__swbuf_r+0x12>
   2151a:	6983      	ldr	r3, [r0, #24]
   2151c:	b90b      	cbnz	r3, 21522 <__swbuf_r+0x12>
   2151e:	f7fc fc55 	bl	1ddcc <__sinit>
   21522:	4b21      	ldr	r3, [pc, #132]	; (215a8 <__swbuf_r+0x98>)
   21524:	429c      	cmp	r4, r3
   21526:	d12a      	bne.n	2157e <__swbuf_r+0x6e>
   21528:	686c      	ldr	r4, [r5, #4]
   2152a:	69a3      	ldr	r3, [r4, #24]
   2152c:	60a3      	str	r3, [r4, #8]
   2152e:	89a3      	ldrh	r3, [r4, #12]
   21530:	071a      	lsls	r2, r3, #28
   21532:	d52e      	bpl.n	21592 <__swbuf_r+0x82>
   21534:	6923      	ldr	r3, [r4, #16]
   21536:	b363      	cbz	r3, 21592 <__swbuf_r+0x82>
   21538:	6923      	ldr	r3, [r4, #16]
   2153a:	6820      	ldr	r0, [r4, #0]
   2153c:	b2f6      	uxtb	r6, r6
   2153e:	1ac0      	subs	r0, r0, r3
   21540:	6963      	ldr	r3, [r4, #20]
   21542:	4637      	mov	r7, r6
   21544:	4298      	cmp	r0, r3
   21546:	db04      	blt.n	21552 <__swbuf_r+0x42>
   21548:	4621      	mov	r1, r4
   2154a:	4628      	mov	r0, r5
   2154c:	f7fc fb22 	bl	1db94 <_fflush_r>
   21550:	bb28      	cbnz	r0, 2159e <__swbuf_r+0x8e>
   21552:	68a3      	ldr	r3, [r4, #8]
   21554:	3001      	adds	r0, #1
   21556:	3b01      	subs	r3, #1
   21558:	60a3      	str	r3, [r4, #8]
   2155a:	6823      	ldr	r3, [r4, #0]
   2155c:	1c5a      	adds	r2, r3, #1
   2155e:	6022      	str	r2, [r4, #0]
   21560:	701e      	strb	r6, [r3, #0]
   21562:	6963      	ldr	r3, [r4, #20]
   21564:	4298      	cmp	r0, r3
   21566:	d004      	beq.n	21572 <__swbuf_r+0x62>
   21568:	89a3      	ldrh	r3, [r4, #12]
   2156a:	07db      	lsls	r3, r3, #31
   2156c:	d519      	bpl.n	215a2 <__swbuf_r+0x92>
   2156e:	2e0a      	cmp	r6, #10
   21570:	d117      	bne.n	215a2 <__swbuf_r+0x92>
   21572:	4621      	mov	r1, r4
   21574:	4628      	mov	r0, r5
   21576:	f7fc fb0d 	bl	1db94 <_fflush_r>
   2157a:	b190      	cbz	r0, 215a2 <__swbuf_r+0x92>
   2157c:	e00f      	b.n	2159e <__swbuf_r+0x8e>
   2157e:	4b0b      	ldr	r3, [pc, #44]	; (215ac <__swbuf_r+0x9c>)
   21580:	429c      	cmp	r4, r3
   21582:	d101      	bne.n	21588 <__swbuf_r+0x78>
   21584:	68ac      	ldr	r4, [r5, #8]
   21586:	e7d0      	b.n	2152a <__swbuf_r+0x1a>
   21588:	4b09      	ldr	r3, [pc, #36]	; (215b0 <__swbuf_r+0xa0>)
   2158a:	429c      	cmp	r4, r3
   2158c:	bf08      	it	eq
   2158e:	68ec      	ldreq	r4, [r5, #12]
   21590:	e7cb      	b.n	2152a <__swbuf_r+0x1a>
   21592:	4621      	mov	r1, r4
   21594:	4628      	mov	r0, r5
   21596:	f000 f82d 	bl	215f4 <__swsetup_r>
   2159a:	2800      	cmp	r0, #0
   2159c:	d0cc      	beq.n	21538 <__swbuf_r+0x28>
   2159e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   215a2:	4638      	mov	r0, r7
   215a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   215a6:	bf00      	nop
   215a8:	000279b8 	.word	0x000279b8
   215ac:	000279d8 	.word	0x000279d8
   215b0:	00027998 	.word	0x00027998

000215b4 <__ascii_wctomb>:
__ascii_wctomb():
   215b4:	b149      	cbz	r1, 215ca <__ascii_wctomb+0x16>
   215b6:	2aff      	cmp	r2, #255	; 0xff
   215b8:	bf8b      	itete	hi
   215ba:	238a      	movhi	r3, #138	; 0x8a
   215bc:	700a      	strbls	r2, [r1, #0]
   215be:	6003      	strhi	r3, [r0, #0]
   215c0:	2001      	movls	r0, #1
   215c2:	bf88      	it	hi
   215c4:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   215c8:	4770      	bx	lr
   215ca:	4608      	mov	r0, r1
   215cc:	4770      	bx	lr
   215ce:	Address 0x00000000000215ce is out of bounds.


000215d0 <_write_r>:
_write_r():
   215d0:	b538      	push	{r3, r4, r5, lr}
   215d2:	4605      	mov	r5, r0
   215d4:	4608      	mov	r0, r1
   215d6:	4611      	mov	r1, r2
   215d8:	2200      	movs	r2, #0
   215da:	4c05      	ldr	r4, [pc, #20]	; (215f0 <_write_r+0x20>)
   215dc:	6022      	str	r2, [r4, #0]
   215de:	461a      	mov	r2, r3
   215e0:	f7f5 fe06 	bl	171f0 <_write>
   215e4:	1c43      	adds	r3, r0, #1
   215e6:	d102      	bne.n	215ee <_write_r+0x1e>
   215e8:	6823      	ldr	r3, [r4, #0]
   215ea:	b103      	cbz	r3, 215ee <_write_r+0x1e>
   215ec:	602b      	str	r3, [r5, #0]
   215ee:	bd38      	pop	{r3, r4, r5, pc}
   215f0:	2007c8ec 	.word	0x2007c8ec

000215f4 <__swsetup_r>:
__swsetup_r():
   215f4:	4b32      	ldr	r3, [pc, #200]	; (216c0 <__swsetup_r+0xcc>)
   215f6:	b570      	push	{r4, r5, r6, lr}
   215f8:	681d      	ldr	r5, [r3, #0]
   215fa:	4606      	mov	r6, r0
   215fc:	460c      	mov	r4, r1
   215fe:	b125      	cbz	r5, 2160a <__swsetup_r+0x16>
   21600:	69ab      	ldr	r3, [r5, #24]
   21602:	b913      	cbnz	r3, 2160a <__swsetup_r+0x16>
   21604:	4628      	mov	r0, r5
   21606:	f7fc fbe1 	bl	1ddcc <__sinit>
   2160a:	4b2e      	ldr	r3, [pc, #184]	; (216c4 <__swsetup_r+0xd0>)
   2160c:	429c      	cmp	r4, r3
   2160e:	d10f      	bne.n	21630 <__swsetup_r+0x3c>
   21610:	686c      	ldr	r4, [r5, #4]
   21612:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   21616:	b29a      	uxth	r2, r3
   21618:	0715      	lsls	r5, r2, #28
   2161a:	d42c      	bmi.n	21676 <__swsetup_r+0x82>
   2161c:	06d0      	lsls	r0, r2, #27
   2161e:	d411      	bmi.n	21644 <__swsetup_r+0x50>
   21620:	2209      	movs	r2, #9
   21622:	6032      	str	r2, [r6, #0]
   21624:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   21628:	81a3      	strh	r3, [r4, #12]
   2162a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2162e:	bd70      	pop	{r4, r5, r6, pc}
   21630:	4b25      	ldr	r3, [pc, #148]	; (216c8 <__swsetup_r+0xd4>)
   21632:	429c      	cmp	r4, r3
   21634:	d101      	bne.n	2163a <__swsetup_r+0x46>
   21636:	68ac      	ldr	r4, [r5, #8]
   21638:	e7eb      	b.n	21612 <__swsetup_r+0x1e>
   2163a:	4b24      	ldr	r3, [pc, #144]	; (216cc <__swsetup_r+0xd8>)
   2163c:	429c      	cmp	r4, r3
   2163e:	bf08      	it	eq
   21640:	68ec      	ldreq	r4, [r5, #12]
   21642:	e7e6      	b.n	21612 <__swsetup_r+0x1e>
   21644:	0751      	lsls	r1, r2, #29
   21646:	d512      	bpl.n	2166e <__swsetup_r+0x7a>
   21648:	6b61      	ldr	r1, [r4, #52]	; 0x34
   2164a:	b141      	cbz	r1, 2165e <__swsetup_r+0x6a>
   2164c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   21650:	4299      	cmp	r1, r3
   21652:	d002      	beq.n	2165a <__swsetup_r+0x66>
   21654:	4630      	mov	r0, r6
   21656:	f7fd fa07 	bl	1ea68 <_free_r>
   2165a:	2300      	movs	r3, #0
   2165c:	6363      	str	r3, [r4, #52]	; 0x34
   2165e:	89a3      	ldrh	r3, [r4, #12]
   21660:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   21664:	81a3      	strh	r3, [r4, #12]
   21666:	2300      	movs	r3, #0
   21668:	6063      	str	r3, [r4, #4]
   2166a:	6923      	ldr	r3, [r4, #16]
   2166c:	6023      	str	r3, [r4, #0]
   2166e:	89a3      	ldrh	r3, [r4, #12]
   21670:	f043 0308 	orr.w	r3, r3, #8
   21674:	81a3      	strh	r3, [r4, #12]
   21676:	6923      	ldr	r3, [r4, #16]
   21678:	b94b      	cbnz	r3, 2168e <__swsetup_r+0x9a>
   2167a:	89a3      	ldrh	r3, [r4, #12]
   2167c:	f403 7320 	and.w	r3, r3, #640	; 0x280
   21680:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   21684:	d003      	beq.n	2168e <__swsetup_r+0x9a>
   21686:	4621      	mov	r1, r4
   21688:	4630      	mov	r0, r6
   2168a:	f7fc fecd 	bl	1e428 <__smakebuf_r>
   2168e:	89a2      	ldrh	r2, [r4, #12]
   21690:	f012 0301 	ands.w	r3, r2, #1
   21694:	d00c      	beq.n	216b0 <__swsetup_r+0xbc>
   21696:	2300      	movs	r3, #0
   21698:	60a3      	str	r3, [r4, #8]
   2169a:	6963      	ldr	r3, [r4, #20]
   2169c:	425b      	negs	r3, r3
   2169e:	61a3      	str	r3, [r4, #24]
   216a0:	6923      	ldr	r3, [r4, #16]
   216a2:	b953      	cbnz	r3, 216ba <__swsetup_r+0xc6>
   216a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   216a8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   216ac:	d1ba      	bne.n	21624 <__swsetup_r+0x30>
   216ae:	bd70      	pop	{r4, r5, r6, pc}
   216b0:	0792      	lsls	r2, r2, #30
   216b2:	bf58      	it	pl
   216b4:	6963      	ldrpl	r3, [r4, #20]
   216b6:	60a3      	str	r3, [r4, #8]
   216b8:	e7f2      	b.n	216a0 <__swsetup_r+0xac>
   216ba:	2000      	movs	r0, #0
   216bc:	e7f7      	b.n	216ae <__swsetup_r+0xba>
   216be:	bf00      	nop
   216c0:	2007c0e0 	.word	0x2007c0e0
   216c4:	000279b8 	.word	0x000279b8
   216c8:	000279d8 	.word	0x000279d8
   216cc:	00027998 	.word	0x00027998

000216d0 <asctime>:
asctime():
   216d0:	4b09      	ldr	r3, [pc, #36]	; (216f8 <asctime+0x28>)
   216d2:	b570      	push	{r4, r5, r6, lr}
   216d4:	681c      	ldr	r4, [r3, #0]
   216d6:	4606      	mov	r6, r0
   216d8:	6c25      	ldr	r5, [r4, #64]	; 0x40
   216da:	b93d      	cbnz	r5, 216ec <asctime+0x1c>
   216dc:	201a      	movs	r0, #26
   216de:	f7fc fee3 	bl	1e4a8 <malloc>
   216e2:	221a      	movs	r2, #26
   216e4:	6420      	str	r0, [r4, #64]	; 0x40
   216e6:	4629      	mov	r1, r5
   216e8:	f7fc ff42 	bl	1e570 <memset>
   216ec:	6c21      	ldr	r1, [r4, #64]	; 0x40
   216ee:	4630      	mov	r0, r6
   216f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   216f4:	f000 b802 	b.w	216fc <asctime_r>
   216f8:	2007c0e0 	.word	0x2007c0e0

000216fc <asctime_r>:
asctime_r():
   216fc:	b510      	push	{r4, lr}
   216fe:	460c      	mov	r4, r1
   21700:	6941      	ldr	r1, [r0, #20]
   21702:	b086      	sub	sp, #24
   21704:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   21708:	6903      	ldr	r3, [r0, #16]
   2170a:	6982      	ldr	r2, [r0, #24]
   2170c:	9104      	str	r1, [sp, #16]
   2170e:	6801      	ldr	r1, [r0, #0]
   21710:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   21714:	9103      	str	r1, [sp, #12]
   21716:	6841      	ldr	r1, [r0, #4]
   21718:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   2171c:	9102      	str	r1, [sp, #8]
   2171e:	6881      	ldr	r1, [r0, #8]
   21720:	9101      	str	r1, [sp, #4]
   21722:	68c1      	ldr	r1, [r0, #12]
   21724:	4620      	mov	r0, r4
   21726:	9100      	str	r1, [sp, #0]
   21728:	4904      	ldr	r1, [pc, #16]	; (2173c <asctime_r+0x40>)
   2172a:	440b      	add	r3, r1
   2172c:	4904      	ldr	r1, [pc, #16]	; (21740 <asctime_r+0x44>)
   2172e:	440a      	add	r2, r1
   21730:	4904      	ldr	r1, [pc, #16]	; (21744 <asctime_r+0x48>)
   21732:	f7fe fbc3 	bl	1febc <siprintf>
   21736:	4620      	mov	r0, r4
   21738:	b006      	add	sp, #24
   2173a:	bd10      	pop	{r4, pc}
   2173c:	00027bc1 	.word	0x00027bc1
   21740:	00027bac 	.word	0x00027bac
   21744:	00027b8c 	.word	0x00027b8c

00021748 <_close_r>:
_close_r():
   21748:	b538      	push	{r3, r4, r5, lr}
   2174a:	2300      	movs	r3, #0
   2174c:	4c05      	ldr	r4, [pc, #20]	; (21764 <_close_r+0x1c>)
   2174e:	4605      	mov	r5, r0
   21750:	4608      	mov	r0, r1
   21752:	6023      	str	r3, [r4, #0]
   21754:	f7f5 fe44 	bl	173e0 <_close>
   21758:	1c43      	adds	r3, r0, #1
   2175a:	d102      	bne.n	21762 <_close_r+0x1a>
   2175c:	6823      	ldr	r3, [r4, #0]
   2175e:	b103      	cbz	r3, 21762 <_close_r+0x1a>
   21760:	602b      	str	r3, [r5, #0]
   21762:	bd38      	pop	{r3, r4, r5, pc}
   21764:	2007c8ec 	.word	0x2007c8ec

00021768 <div>:
div():
   21768:	b510      	push	{r4, lr}
   2176a:	fb91 f4f2 	sdiv	r4, r1, r2
   2176e:	2900      	cmp	r1, #0
   21770:	fb02 1314 	mls	r3, r2, r4, r1
   21774:	db06      	blt.n	21784 <div+0x1c>
   21776:	2b00      	cmp	r3, #0
   21778:	da01      	bge.n	2177e <div+0x16>
   2177a:	3401      	adds	r4, #1
   2177c:	1a9b      	subs	r3, r3, r2
   2177e:	6004      	str	r4, [r0, #0]
   21780:	6043      	str	r3, [r0, #4]
   21782:	bd10      	pop	{r4, pc}
   21784:	2b00      	cmp	r3, #0
   21786:	bfc4      	itt	gt
   21788:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   2178c:	189b      	addgt	r3, r3, r2
   2178e:	e7f6      	b.n	2177e <div+0x16>

00021790 <quorem>:
quorem():
   21790:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21794:	6903      	ldr	r3, [r0, #16]
   21796:	690c      	ldr	r4, [r1, #16]
   21798:	4680      	mov	r8, r0
   2179a:	429c      	cmp	r4, r3
   2179c:	f300 8082 	bgt.w	218a4 <quorem+0x114>
   217a0:	3c01      	subs	r4, #1
   217a2:	f101 0714 	add.w	r7, r1, #20
   217a6:	f100 0614 	add.w	r6, r0, #20
   217aa:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   217ae:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   217b2:	3501      	adds	r5, #1
   217b4:	fbb0 f5f5 	udiv	r5, r0, r5
   217b8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   217bc:	eb06 030e 	add.w	r3, r6, lr
   217c0:	eb07 090e 	add.w	r9, r7, lr
   217c4:	9301      	str	r3, [sp, #4]
   217c6:	b38d      	cbz	r5, 2182c <quorem+0x9c>
   217c8:	f04f 0a00 	mov.w	sl, #0
   217cc:	4638      	mov	r0, r7
   217ce:	46b4      	mov	ip, r6
   217d0:	46d3      	mov	fp, sl
   217d2:	f850 2b04 	ldr.w	r2, [r0], #4
   217d6:	b293      	uxth	r3, r2
   217d8:	fb05 a303 	mla	r3, r5, r3, sl
   217dc:	0c12      	lsrs	r2, r2, #16
   217de:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   217e2:	fb05 a202 	mla	r2, r5, r2, sl
   217e6:	b29b      	uxth	r3, r3
   217e8:	ebab 0303 	sub.w	r3, fp, r3
   217ec:	f8bc b000 	ldrh.w	fp, [ip]
   217f0:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   217f4:	445b      	add	r3, fp
   217f6:	fa1f fb82 	uxth.w	fp, r2
   217fa:	f8dc 2000 	ldr.w	r2, [ip]
   217fe:	4581      	cmp	r9, r0
   21800:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   21804:	eb02 4223 	add.w	r2, r2, r3, asr #16
   21808:	b29b      	uxth	r3, r3
   2180a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   2180e:	ea4f 4b22 	mov.w	fp, r2, asr #16
   21812:	f84c 3b04 	str.w	r3, [ip], #4
   21816:	d2dc      	bcs.n	217d2 <quorem+0x42>
   21818:	f856 300e 	ldr.w	r3, [r6, lr]
   2181c:	b933      	cbnz	r3, 2182c <quorem+0x9c>
   2181e:	9b01      	ldr	r3, [sp, #4]
   21820:	3b04      	subs	r3, #4
   21822:	429e      	cmp	r6, r3
   21824:	461a      	mov	r2, r3
   21826:	d331      	bcc.n	2188c <quorem+0xfc>
   21828:	f8c8 4010 	str.w	r4, [r8, #16]
   2182c:	4640      	mov	r0, r8
   2182e:	f001 fce4 	bl	231fa <__mcmp>
   21832:	2800      	cmp	r0, #0
   21834:	db26      	blt.n	21884 <quorem+0xf4>
   21836:	4630      	mov	r0, r6
   21838:	f04f 0e00 	mov.w	lr, #0
   2183c:	3501      	adds	r5, #1
   2183e:	f857 1b04 	ldr.w	r1, [r7], #4
   21842:	f8d0 c000 	ldr.w	ip, [r0]
   21846:	b28b      	uxth	r3, r1
   21848:	ebae 0303 	sub.w	r3, lr, r3
   2184c:	fa1f f28c 	uxth.w	r2, ip
   21850:	4413      	add	r3, r2
   21852:	0c0a      	lsrs	r2, r1, #16
   21854:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   21858:	eb02 4223 	add.w	r2, r2, r3, asr #16
   2185c:	b29b      	uxth	r3, r3
   2185e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   21862:	45b9      	cmp	r9, r7
   21864:	ea4f 4e22 	mov.w	lr, r2, asr #16
   21868:	f840 3b04 	str.w	r3, [r0], #4
   2186c:	d2e7      	bcs.n	2183e <quorem+0xae>
   2186e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   21872:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   21876:	b92a      	cbnz	r2, 21884 <quorem+0xf4>
   21878:	3b04      	subs	r3, #4
   2187a:	429e      	cmp	r6, r3
   2187c:	461a      	mov	r2, r3
   2187e:	d30b      	bcc.n	21898 <quorem+0x108>
   21880:	f8c8 4010 	str.w	r4, [r8, #16]
   21884:	4628      	mov	r0, r5
   21886:	b003      	add	sp, #12
   21888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2188c:	6812      	ldr	r2, [r2, #0]
   2188e:	3b04      	subs	r3, #4
   21890:	2a00      	cmp	r2, #0
   21892:	d1c9      	bne.n	21828 <quorem+0x98>
   21894:	3c01      	subs	r4, #1
   21896:	e7c4      	b.n	21822 <quorem+0x92>
   21898:	6812      	ldr	r2, [r2, #0]
   2189a:	3b04      	subs	r3, #4
   2189c:	2a00      	cmp	r2, #0
   2189e:	d1ef      	bne.n	21880 <quorem+0xf0>
   218a0:	3c01      	subs	r4, #1
   218a2:	e7ea      	b.n	2187a <quorem+0xea>
   218a4:	2000      	movs	r0, #0
   218a6:	e7ee      	b.n	21886 <quorem+0xf6>

000218a8 <_dtoa_r>:
_dtoa_r():
   218a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218ac:	6a46      	ldr	r6, [r0, #36]	; 0x24
   218ae:	b095      	sub	sp, #84	; 0x54
   218b0:	4604      	mov	r4, r0
   218b2:	9d21      	ldr	r5, [sp, #132]	; 0x84
   218b4:	e9cd 2302 	strd	r2, r3, [sp, #8]
   218b8:	b93e      	cbnz	r6, 218ca <_dtoa_r+0x22>
   218ba:	2010      	movs	r0, #16
   218bc:	f7fc fdf4 	bl	1e4a8 <malloc>
   218c0:	6260      	str	r0, [r4, #36]	; 0x24
   218c2:	6046      	str	r6, [r0, #4]
   218c4:	6086      	str	r6, [r0, #8]
   218c6:	6006      	str	r6, [r0, #0]
   218c8:	60c6      	str	r6, [r0, #12]
   218ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
   218cc:	6819      	ldr	r1, [r3, #0]
   218ce:	b151      	cbz	r1, 218e6 <_dtoa_r+0x3e>
   218d0:	685a      	ldr	r2, [r3, #4]
   218d2:	2301      	movs	r3, #1
   218d4:	4093      	lsls	r3, r2
   218d6:	604a      	str	r2, [r1, #4]
   218d8:	608b      	str	r3, [r1, #8]
   218da:	4620      	mov	r0, r4
   218dc:	f001 fa7a 	bl	22dd4 <_Bfree>
   218e0:	2200      	movs	r2, #0
   218e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   218e4:	601a      	str	r2, [r3, #0]
   218e6:	9b03      	ldr	r3, [sp, #12]
   218e8:	2b00      	cmp	r3, #0
   218ea:	bfb7      	itett	lt
   218ec:	2301      	movlt	r3, #1
   218ee:	2300      	movge	r3, #0
   218f0:	602b      	strlt	r3, [r5, #0]
   218f2:	9b03      	ldrlt	r3, [sp, #12]
   218f4:	bfae      	itee	ge
   218f6:	602b      	strge	r3, [r5, #0]
   218f8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   218fc:	9303      	strlt	r3, [sp, #12]
   218fe:	f8dd 900c 	ldr.w	r9, [sp, #12]
   21902:	4bab      	ldr	r3, [pc, #684]	; (21bb0 <_dtoa_r+0x308>)
   21904:	ea33 0309 	bics.w	r3, r3, r9
   21908:	d11b      	bne.n	21942 <_dtoa_r+0x9a>
   2190a:	f242 730f 	movw	r3, #9999	; 0x270f
   2190e:	9a20      	ldr	r2, [sp, #128]	; 0x80
   21910:	6013      	str	r3, [r2, #0]
   21912:	9b02      	ldr	r3, [sp, #8]
   21914:	b923      	cbnz	r3, 21920 <_dtoa_r+0x78>
   21916:	f3c9 0013 	ubfx	r0, r9, #0, #20
   2191a:	2800      	cmp	r0, #0
   2191c:	f000 8583 	beq.w	22426 <_dtoa_r+0xb7e>
   21920:	9b22      	ldr	r3, [sp, #136]	; 0x88
   21922:	b953      	cbnz	r3, 2193a <_dtoa_r+0x92>
   21924:	4ba3      	ldr	r3, [pc, #652]	; (21bb4 <_dtoa_r+0x30c>)
   21926:	e021      	b.n	2196c <_dtoa_r+0xc4>
   21928:	4ba3      	ldr	r3, [pc, #652]	; (21bb8 <_dtoa_r+0x310>)
   2192a:	9306      	str	r3, [sp, #24]
   2192c:	3308      	adds	r3, #8
   2192e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   21930:	6013      	str	r3, [r2, #0]
   21932:	9806      	ldr	r0, [sp, #24]
   21934:	b015      	add	sp, #84	; 0x54
   21936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2193a:	4b9e      	ldr	r3, [pc, #632]	; (21bb4 <_dtoa_r+0x30c>)
   2193c:	9306      	str	r3, [sp, #24]
   2193e:	3303      	adds	r3, #3
   21940:	e7f5      	b.n	2192e <_dtoa_r+0x86>
   21942:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   21946:	2200      	movs	r2, #0
   21948:	2300      	movs	r3, #0
   2194a:	4630      	mov	r0, r6
   2194c:	4639      	mov	r1, r7
   2194e:	f003 f933 	bl	24bb8 <__aeabi_dcmpeq>
   21952:	4680      	mov	r8, r0
   21954:	b160      	cbz	r0, 21970 <_dtoa_r+0xc8>
   21956:	2301      	movs	r3, #1
   21958:	9a20      	ldr	r2, [sp, #128]	; 0x80
   2195a:	6013      	str	r3, [r2, #0]
   2195c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   2195e:	2b00      	cmp	r3, #0
   21960:	f000 855e 	beq.w	22420 <_dtoa_r+0xb78>
   21964:	4b95      	ldr	r3, [pc, #596]	; (21bbc <_dtoa_r+0x314>)
   21966:	9a22      	ldr	r2, [sp, #136]	; 0x88
   21968:	6013      	str	r3, [r2, #0]
   2196a:	3b01      	subs	r3, #1
   2196c:	9306      	str	r3, [sp, #24]
   2196e:	e7e0      	b.n	21932 <_dtoa_r+0x8a>
   21970:	ab12      	add	r3, sp, #72	; 0x48
   21972:	9301      	str	r3, [sp, #4]
   21974:	ab13      	add	r3, sp, #76	; 0x4c
   21976:	9300      	str	r3, [sp, #0]
   21978:	4632      	mov	r2, r6
   2197a:	463b      	mov	r3, r7
   2197c:	4620      	mov	r0, r4
   2197e:	f001 fd2b 	bl	233d8 <__d2b>
   21982:	f3c9 550a 	ubfx	r5, r9, #20, #11
   21986:	4682      	mov	sl, r0
   21988:	2d00      	cmp	r5, #0
   2198a:	d07d      	beq.n	21a88 <_dtoa_r+0x1e0>
   2198c:	4630      	mov	r0, r6
   2198e:	f3c7 0313 	ubfx	r3, r7, #0, #20
   21992:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   21996:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   2199a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   2199e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   219a2:	2200      	movs	r2, #0
   219a4:	4b86      	ldr	r3, [pc, #536]	; (21bc0 <_dtoa_r+0x318>)
   219a6:	f7fb f9a1 	bl	1ccec <__aeabi_dsub>
   219aa:	a37b      	add	r3, pc, #492	; (adr r3, 21b98 <_dtoa_r+0x2f0>)
   219ac:	e9d3 2300 	ldrd	r2, r3, [r3]
   219b0:	f002 fe9a 	bl	246e8 <__aeabi_dmul>
   219b4:	a37a      	add	r3, pc, #488	; (adr r3, 21ba0 <_dtoa_r+0x2f8>)
   219b6:	e9d3 2300 	ldrd	r2, r3, [r3]
   219ba:	f7fb f999 	bl	1ccf0 <__adddf3>
   219be:	4606      	mov	r6, r0
   219c0:	4628      	mov	r0, r5
   219c2:	460f      	mov	r7, r1
   219c4:	f7fb fae0 	bl	1cf88 <__aeabi_i2d>
   219c8:	a377      	add	r3, pc, #476	; (adr r3, 21ba8 <_dtoa_r+0x300>)
   219ca:	e9d3 2300 	ldrd	r2, r3, [r3]
   219ce:	f002 fe8b 	bl	246e8 <__aeabi_dmul>
   219d2:	4602      	mov	r2, r0
   219d4:	460b      	mov	r3, r1
   219d6:	4630      	mov	r0, r6
   219d8:	4639      	mov	r1, r7
   219da:	f7fb f989 	bl	1ccf0 <__adddf3>
   219de:	4606      	mov	r6, r0
   219e0:	460f      	mov	r7, r1
   219e2:	f003 f931 	bl	24c48 <__aeabi_d2iz>
   219e6:	2200      	movs	r2, #0
   219e8:	4683      	mov	fp, r0
   219ea:	2300      	movs	r3, #0
   219ec:	4630      	mov	r0, r6
   219ee:	4639      	mov	r1, r7
   219f0:	f003 f8ec 	bl	24bcc <__aeabi_dcmplt>
   219f4:	b158      	cbz	r0, 21a0e <_dtoa_r+0x166>
   219f6:	4658      	mov	r0, fp
   219f8:	f7fb fac6 	bl	1cf88 <__aeabi_i2d>
   219fc:	4602      	mov	r2, r0
   219fe:	460b      	mov	r3, r1
   21a00:	4630      	mov	r0, r6
   21a02:	4639      	mov	r1, r7
   21a04:	f003 f8d8 	bl	24bb8 <__aeabi_dcmpeq>
   21a08:	b908      	cbnz	r0, 21a0e <_dtoa_r+0x166>
   21a0a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   21a0e:	f1bb 0f16 	cmp.w	fp, #22
   21a12:	d858      	bhi.n	21ac6 <_dtoa_r+0x21e>
   21a14:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21a18:	496a      	ldr	r1, [pc, #424]	; (21bc4 <_dtoa_r+0x31c>)
   21a1a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   21a1e:	e9d1 0100 	ldrd	r0, r1, [r1]
   21a22:	f003 f8f1 	bl	24c08 <__aeabi_dcmpgt>
   21a26:	2800      	cmp	r0, #0
   21a28:	d04f      	beq.n	21aca <_dtoa_r+0x222>
   21a2a:	2300      	movs	r3, #0
   21a2c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   21a30:	930d      	str	r3, [sp, #52]	; 0x34
   21a32:	9b12      	ldr	r3, [sp, #72]	; 0x48
   21a34:	1b5d      	subs	r5, r3, r5
   21a36:	1e6b      	subs	r3, r5, #1
   21a38:	9307      	str	r3, [sp, #28]
   21a3a:	bf43      	ittte	mi
   21a3c:	2300      	movmi	r3, #0
   21a3e:	f1c5 0801 	rsbmi	r8, r5, #1
   21a42:	9307      	strmi	r3, [sp, #28]
   21a44:	f04f 0800 	movpl.w	r8, #0
   21a48:	f1bb 0f00 	cmp.w	fp, #0
   21a4c:	db3f      	blt.n	21ace <_dtoa_r+0x226>
   21a4e:	9b07      	ldr	r3, [sp, #28]
   21a50:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   21a54:	445b      	add	r3, fp
   21a56:	9307      	str	r3, [sp, #28]
   21a58:	2300      	movs	r3, #0
   21a5a:	9308      	str	r3, [sp, #32]
   21a5c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21a5e:	2b09      	cmp	r3, #9
   21a60:	f200 80b4 	bhi.w	21bcc <_dtoa_r+0x324>
   21a64:	2b05      	cmp	r3, #5
   21a66:	bfc4      	itt	gt
   21a68:	3b04      	subgt	r3, #4
   21a6a:	931e      	strgt	r3, [sp, #120]	; 0x78
   21a6c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21a6e:	bfc8      	it	gt
   21a70:	2600      	movgt	r6, #0
   21a72:	f1a3 0302 	sub.w	r3, r3, #2
   21a76:	bfd8      	it	le
   21a78:	2601      	movle	r6, #1
   21a7a:	2b03      	cmp	r3, #3
   21a7c:	f200 80b2 	bhi.w	21be4 <_dtoa_r+0x33c>
   21a80:	e8df f003 	tbb	[pc, r3]
   21a84:	782d8684 	.word	0x782d8684
   21a88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   21a8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
   21a8c:	441d      	add	r5, r3
   21a8e:	f205 4332 	addw	r3, r5, #1074	; 0x432
   21a92:	2b20      	cmp	r3, #32
   21a94:	dd11      	ble.n	21aba <_dtoa_r+0x212>
   21a96:	9a02      	ldr	r2, [sp, #8]
   21a98:	f205 4012 	addw	r0, r5, #1042	; 0x412
   21a9c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   21aa0:	fa22 f000 	lsr.w	r0, r2, r0
   21aa4:	fa09 f303 	lsl.w	r3, r9, r3
   21aa8:	4318      	orrs	r0, r3
   21aaa:	f7fb fa5d 	bl	1cf68 <__aeabi_ui2d>
   21aae:	2301      	movs	r3, #1
   21ab0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   21ab4:	3d01      	subs	r5, #1
   21ab6:	9310      	str	r3, [sp, #64]	; 0x40
   21ab8:	e773      	b.n	219a2 <_dtoa_r+0xfa>
   21aba:	f1c3 0020 	rsb	r0, r3, #32
   21abe:	9b02      	ldr	r3, [sp, #8]
   21ac0:	fa03 f000 	lsl.w	r0, r3, r0
   21ac4:	e7f1      	b.n	21aaa <_dtoa_r+0x202>
   21ac6:	2301      	movs	r3, #1
   21ac8:	e7b2      	b.n	21a30 <_dtoa_r+0x188>
   21aca:	900d      	str	r0, [sp, #52]	; 0x34
   21acc:	e7b1      	b.n	21a32 <_dtoa_r+0x18a>
   21ace:	f1cb 0300 	rsb	r3, fp, #0
   21ad2:	9308      	str	r3, [sp, #32]
   21ad4:	2300      	movs	r3, #0
   21ad6:	eba8 080b 	sub.w	r8, r8, fp
   21ada:	930c      	str	r3, [sp, #48]	; 0x30
   21adc:	e7be      	b.n	21a5c <_dtoa_r+0x1b4>
   21ade:	2301      	movs	r3, #1
   21ae0:	9309      	str	r3, [sp, #36]	; 0x24
   21ae2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21ae4:	2b00      	cmp	r3, #0
   21ae6:	f340 8080 	ble.w	21bea <_dtoa_r+0x342>
   21aea:	4699      	mov	r9, r3
   21aec:	9304      	str	r3, [sp, #16]
   21aee:	2200      	movs	r2, #0
   21af0:	2104      	movs	r1, #4
   21af2:	6a65      	ldr	r5, [r4, #36]	; 0x24
   21af4:	606a      	str	r2, [r5, #4]
   21af6:	f101 0214 	add.w	r2, r1, #20
   21afa:	429a      	cmp	r2, r3
   21afc:	d97a      	bls.n	21bf4 <_dtoa_r+0x34c>
   21afe:	6869      	ldr	r1, [r5, #4]
   21b00:	4620      	mov	r0, r4
   21b02:	f001 f933 	bl	22d6c <_Balloc>
   21b06:	6a63      	ldr	r3, [r4, #36]	; 0x24
   21b08:	6028      	str	r0, [r5, #0]
   21b0a:	681b      	ldr	r3, [r3, #0]
   21b0c:	f1b9 0f0e 	cmp.w	r9, #14
   21b10:	9306      	str	r3, [sp, #24]
   21b12:	f200 80f0 	bhi.w	21cf6 <_dtoa_r+0x44e>
   21b16:	2e00      	cmp	r6, #0
   21b18:	f000 80ed 	beq.w	21cf6 <_dtoa_r+0x44e>
   21b1c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21b20:	f1bb 0f00 	cmp.w	fp, #0
   21b24:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   21b28:	dd79      	ble.n	21c1e <_dtoa_r+0x376>
   21b2a:	4a26      	ldr	r2, [pc, #152]	; (21bc4 <_dtoa_r+0x31c>)
   21b2c:	f00b 030f 	and.w	r3, fp, #15
   21b30:	ea4f 162b 	mov.w	r6, fp, asr #4
   21b34:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   21b38:	06f0      	lsls	r0, r6, #27
   21b3a:	e9d3 2300 	ldrd	r2, r3, [r3]
   21b3e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   21b42:	d55c      	bpl.n	21bfe <_dtoa_r+0x356>
   21b44:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   21b48:	4b1f      	ldr	r3, [pc, #124]	; (21bc8 <_dtoa_r+0x320>)
   21b4a:	2503      	movs	r5, #3
   21b4c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   21b50:	f002 fef4 	bl	2493c <__aeabi_ddiv>
   21b54:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21b58:	f006 060f 	and.w	r6, r6, #15
   21b5c:	4f1a      	ldr	r7, [pc, #104]	; (21bc8 <_dtoa_r+0x320>)
   21b5e:	2e00      	cmp	r6, #0
   21b60:	d14f      	bne.n	21c02 <_dtoa_r+0x35a>
   21b62:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21b66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21b6a:	f002 fee7 	bl	2493c <__aeabi_ddiv>
   21b6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21b72:	e06e      	b.n	21c52 <_dtoa_r+0x3aa>
   21b74:	2301      	movs	r3, #1
   21b76:	9309      	str	r3, [sp, #36]	; 0x24
   21b78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21b7a:	445b      	add	r3, fp
   21b7c:	f103 0901 	add.w	r9, r3, #1
   21b80:	9304      	str	r3, [sp, #16]
   21b82:	464b      	mov	r3, r9
   21b84:	2b01      	cmp	r3, #1
   21b86:	bfb8      	it	lt
   21b88:	2301      	movlt	r3, #1
   21b8a:	e7b0      	b.n	21aee <_dtoa_r+0x246>
   21b8c:	2300      	movs	r3, #0
   21b8e:	e7a7      	b.n	21ae0 <_dtoa_r+0x238>
   21b90:	2300      	movs	r3, #0
   21b92:	e7f0      	b.n	21b76 <_dtoa_r+0x2ce>
   21b94:	f3af 8000 	nop.w
   21b98:	636f4361 	.word	0x636f4361
   21b9c:	3fd287a7 	.word	0x3fd287a7
   21ba0:	8b60c8b3 	.word	0x8b60c8b3
   21ba4:	3fc68a28 	.word	0x3fc68a28
   21ba8:	509f79fb 	.word	0x509f79fb
   21bac:	3fd34413 	.word	0x3fd34413
   21bb0:	7ff00000 	.word	0x7ff00000
   21bb4:	00027cef 	.word	0x00027cef
   21bb8:	00027ce6 	.word	0x00027ce6
   21bbc:	00024f4b 	.word	0x00024f4b
   21bc0:	3ff80000 	.word	0x3ff80000
   21bc4:	00027d20 	.word	0x00027d20
   21bc8:	00027cf8 	.word	0x00027cf8
   21bcc:	2601      	movs	r6, #1
   21bce:	2300      	movs	r3, #0
   21bd0:	9609      	str	r6, [sp, #36]	; 0x24
   21bd2:	931e      	str	r3, [sp, #120]	; 0x78
   21bd4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   21bd8:	2200      	movs	r2, #0
   21bda:	9304      	str	r3, [sp, #16]
   21bdc:	4699      	mov	r9, r3
   21bde:	2312      	movs	r3, #18
   21be0:	921f      	str	r2, [sp, #124]	; 0x7c
   21be2:	e784      	b.n	21aee <_dtoa_r+0x246>
   21be4:	2301      	movs	r3, #1
   21be6:	9309      	str	r3, [sp, #36]	; 0x24
   21be8:	e7f4      	b.n	21bd4 <_dtoa_r+0x32c>
   21bea:	2301      	movs	r3, #1
   21bec:	9304      	str	r3, [sp, #16]
   21bee:	4699      	mov	r9, r3
   21bf0:	461a      	mov	r2, r3
   21bf2:	e7f5      	b.n	21be0 <_dtoa_r+0x338>
   21bf4:	686a      	ldr	r2, [r5, #4]
   21bf6:	0049      	lsls	r1, r1, #1
   21bf8:	3201      	adds	r2, #1
   21bfa:	606a      	str	r2, [r5, #4]
   21bfc:	e77b      	b.n	21af6 <_dtoa_r+0x24e>
   21bfe:	2502      	movs	r5, #2
   21c00:	e7ac      	b.n	21b5c <_dtoa_r+0x2b4>
   21c02:	07f1      	lsls	r1, r6, #31
   21c04:	d508      	bpl.n	21c18 <_dtoa_r+0x370>
   21c06:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21c0a:	e9d7 2300 	ldrd	r2, r3, [r7]
   21c0e:	f002 fd6b 	bl	246e8 <__aeabi_dmul>
   21c12:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21c16:	3501      	adds	r5, #1
   21c18:	1076      	asrs	r6, r6, #1
   21c1a:	3708      	adds	r7, #8
   21c1c:	e79f      	b.n	21b5e <_dtoa_r+0x2b6>
   21c1e:	f000 80a5 	beq.w	21d6c <_dtoa_r+0x4c4>
   21c22:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   21c26:	f1cb 0600 	rsb	r6, fp, #0
   21c2a:	4ba2      	ldr	r3, [pc, #648]	; (21eb4 <_dtoa_r+0x60c>)
   21c2c:	f006 020f 	and.w	r2, r6, #15
   21c30:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   21c34:	e9d3 2300 	ldrd	r2, r3, [r3]
   21c38:	f002 fd56 	bl	246e8 <__aeabi_dmul>
   21c3c:	2502      	movs	r5, #2
   21c3e:	2300      	movs	r3, #0
   21c40:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21c44:	4f9c      	ldr	r7, [pc, #624]	; (21eb8 <_dtoa_r+0x610>)
   21c46:	1136      	asrs	r6, r6, #4
   21c48:	2e00      	cmp	r6, #0
   21c4a:	f040 8084 	bne.w	21d56 <_dtoa_r+0x4ae>
   21c4e:	2b00      	cmp	r3, #0
   21c50:	d18d      	bne.n	21b6e <_dtoa_r+0x2c6>
   21c52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   21c54:	2b00      	cmp	r3, #0
   21c56:	f000 808b 	beq.w	21d70 <_dtoa_r+0x4c8>
   21c5a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21c5e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   21c62:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21c66:	2200      	movs	r2, #0
   21c68:	4b94      	ldr	r3, [pc, #592]	; (21ebc <_dtoa_r+0x614>)
   21c6a:	f002 ffaf 	bl	24bcc <__aeabi_dcmplt>
   21c6e:	2800      	cmp	r0, #0
   21c70:	d07e      	beq.n	21d70 <_dtoa_r+0x4c8>
   21c72:	f1b9 0f00 	cmp.w	r9, #0
   21c76:	d07b      	beq.n	21d70 <_dtoa_r+0x4c8>
   21c78:	9b04      	ldr	r3, [sp, #16]
   21c7a:	2b00      	cmp	r3, #0
   21c7c:	dd37      	ble.n	21cee <_dtoa_r+0x446>
   21c7e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21c82:	2200      	movs	r2, #0
   21c84:	4b8e      	ldr	r3, [pc, #568]	; (21ec0 <_dtoa_r+0x618>)
   21c86:	f002 fd2f 	bl	246e8 <__aeabi_dmul>
   21c8a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21c8e:	9e04      	ldr	r6, [sp, #16]
   21c90:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   21c94:	3501      	adds	r5, #1
   21c96:	4628      	mov	r0, r5
   21c98:	f7fb f976 	bl	1cf88 <__aeabi_i2d>
   21c9c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21ca0:	f002 fd22 	bl	246e8 <__aeabi_dmul>
   21ca4:	4b87      	ldr	r3, [pc, #540]	; (21ec4 <_dtoa_r+0x61c>)
   21ca6:	2200      	movs	r2, #0
   21ca8:	f7fb f822 	bl	1ccf0 <__adddf3>
   21cac:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21cb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   21cb2:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   21cb6:	950b      	str	r5, [sp, #44]	; 0x2c
   21cb8:	2e00      	cmp	r6, #0
   21cba:	d15c      	bne.n	21d76 <_dtoa_r+0x4ce>
   21cbc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21cc0:	2200      	movs	r2, #0
   21cc2:	4b81      	ldr	r3, [pc, #516]	; (21ec8 <_dtoa_r+0x620>)
   21cc4:	f7fb f812 	bl	1ccec <__aeabi_dsub>
   21cc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   21cca:	462b      	mov	r3, r5
   21ccc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21cd0:	f002 ff9a 	bl	24c08 <__aeabi_dcmpgt>
   21cd4:	2800      	cmp	r0, #0
   21cd6:	f040 82f7 	bne.w	222c8 <_dtoa_r+0xa20>
   21cda:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21cde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   21ce0:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   21ce4:	f002 ff72 	bl	24bcc <__aeabi_dcmplt>
   21ce8:	2800      	cmp	r0, #0
   21cea:	f040 82eb 	bne.w	222c4 <_dtoa_r+0xa1c>
   21cee:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   21cf2:	e9cd 2302 	strd	r2, r3, [sp, #8]
   21cf6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   21cf8:	2b00      	cmp	r3, #0
   21cfa:	f2c0 8150 	blt.w	21f9e <_dtoa_r+0x6f6>
   21cfe:	f1bb 0f0e 	cmp.w	fp, #14
   21d02:	f300 814c 	bgt.w	21f9e <_dtoa_r+0x6f6>
   21d06:	4b6b      	ldr	r3, [pc, #428]	; (21eb4 <_dtoa_r+0x60c>)
   21d08:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   21d0c:	e9d3 2300 	ldrd	r2, r3, [r3]
   21d10:	e9cd 2304 	strd	r2, r3, [sp, #16]
   21d14:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   21d16:	2b00      	cmp	r3, #0
   21d18:	f280 80da 	bge.w	21ed0 <_dtoa_r+0x628>
   21d1c:	f1b9 0f00 	cmp.w	r9, #0
   21d20:	f300 80d6 	bgt.w	21ed0 <_dtoa_r+0x628>
   21d24:	f040 82cd 	bne.w	222c2 <_dtoa_r+0xa1a>
   21d28:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21d2c:	2200      	movs	r2, #0
   21d2e:	4b66      	ldr	r3, [pc, #408]	; (21ec8 <_dtoa_r+0x620>)
   21d30:	f002 fcda 	bl	246e8 <__aeabi_dmul>
   21d34:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21d38:	f002 ff5c 	bl	24bf4 <__aeabi_dcmpge>
   21d3c:	464e      	mov	r6, r9
   21d3e:	464f      	mov	r7, r9
   21d40:	2800      	cmp	r0, #0
   21d42:	f040 82a4 	bne.w	2228e <_dtoa_r+0x9e6>
   21d46:	9b06      	ldr	r3, [sp, #24]
   21d48:	9a06      	ldr	r2, [sp, #24]
   21d4a:	1c5d      	adds	r5, r3, #1
   21d4c:	2331      	movs	r3, #49	; 0x31
   21d4e:	f10b 0b01 	add.w	fp, fp, #1
   21d52:	7013      	strb	r3, [r2, #0]
   21d54:	e29f      	b.n	22296 <_dtoa_r+0x9ee>
   21d56:	07f2      	lsls	r2, r6, #31
   21d58:	d505      	bpl.n	21d66 <_dtoa_r+0x4be>
   21d5a:	e9d7 2300 	ldrd	r2, r3, [r7]
   21d5e:	f002 fcc3 	bl	246e8 <__aeabi_dmul>
   21d62:	2301      	movs	r3, #1
   21d64:	3501      	adds	r5, #1
   21d66:	1076      	asrs	r6, r6, #1
   21d68:	3708      	adds	r7, #8
   21d6a:	e76d      	b.n	21c48 <_dtoa_r+0x3a0>
   21d6c:	2502      	movs	r5, #2
   21d6e:	e770      	b.n	21c52 <_dtoa_r+0x3aa>
   21d70:	465f      	mov	r7, fp
   21d72:	464e      	mov	r6, r9
   21d74:	e78f      	b.n	21c96 <_dtoa_r+0x3ee>
   21d76:	9a06      	ldr	r2, [sp, #24]
   21d78:	4b4e      	ldr	r3, [pc, #312]	; (21eb4 <_dtoa_r+0x60c>)
   21d7a:	4432      	add	r2, r6
   21d7c:	9211      	str	r2, [sp, #68]	; 0x44
   21d7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   21d80:	1e71      	subs	r1, r6, #1
   21d82:	2a00      	cmp	r2, #0
   21d84:	d048      	beq.n	21e18 <_dtoa_r+0x570>
   21d86:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   21d8a:	e9d3 2300 	ldrd	r2, r3, [r3]
   21d8e:	2000      	movs	r0, #0
   21d90:	494e      	ldr	r1, [pc, #312]	; (21ecc <_dtoa_r+0x624>)
   21d92:	f002 fdd3 	bl	2493c <__aeabi_ddiv>
   21d96:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21d9a:	f7fa ffa7 	bl	1ccec <__aeabi_dsub>
   21d9e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21da2:	9d06      	ldr	r5, [sp, #24]
   21da4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21da8:	f002 ff4e 	bl	24c48 <__aeabi_d2iz>
   21dac:	4606      	mov	r6, r0
   21dae:	f7fb f8eb 	bl	1cf88 <__aeabi_i2d>
   21db2:	4602      	mov	r2, r0
   21db4:	460b      	mov	r3, r1
   21db6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21dba:	f7fa ff97 	bl	1ccec <__aeabi_dsub>
   21dbe:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21dc2:	3630      	adds	r6, #48	; 0x30
   21dc4:	f805 6b01 	strb.w	r6, [r5], #1
   21dc8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21dcc:	f002 fefe 	bl	24bcc <__aeabi_dcmplt>
   21dd0:	2800      	cmp	r0, #0
   21dd2:	d164      	bne.n	21e9e <_dtoa_r+0x5f6>
   21dd4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   21dd8:	2000      	movs	r0, #0
   21dda:	4938      	ldr	r1, [pc, #224]	; (21ebc <_dtoa_r+0x614>)
   21ddc:	f7fa ff86 	bl	1ccec <__aeabi_dsub>
   21de0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21de4:	f002 fef2 	bl	24bcc <__aeabi_dcmplt>
   21de8:	2800      	cmp	r0, #0
   21dea:	f040 80b9 	bne.w	21f60 <_dtoa_r+0x6b8>
   21dee:	9b11      	ldr	r3, [sp, #68]	; 0x44
   21df0:	429d      	cmp	r5, r3
   21df2:	f43f af7c 	beq.w	21cee <_dtoa_r+0x446>
   21df6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21dfa:	2200      	movs	r2, #0
   21dfc:	4b30      	ldr	r3, [pc, #192]	; (21ec0 <_dtoa_r+0x618>)
   21dfe:	f002 fc73 	bl	246e8 <__aeabi_dmul>
   21e02:	2200      	movs	r2, #0
   21e04:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21e08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e0c:	4b2c      	ldr	r3, [pc, #176]	; (21ec0 <_dtoa_r+0x618>)
   21e0e:	f002 fc6b 	bl	246e8 <__aeabi_dmul>
   21e12:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21e16:	e7c5      	b.n	21da4 <_dtoa_r+0x4fc>
   21e18:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   21e1c:	e9d1 0100 	ldrd	r0, r1, [r1]
   21e20:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21e24:	f002 fc60 	bl	246e8 <__aeabi_dmul>
   21e28:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   21e2c:	9d06      	ldr	r5, [sp, #24]
   21e2e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e32:	f002 ff09 	bl	24c48 <__aeabi_d2iz>
   21e36:	4606      	mov	r6, r0
   21e38:	f7fb f8a6 	bl	1cf88 <__aeabi_i2d>
   21e3c:	4602      	mov	r2, r0
   21e3e:	460b      	mov	r3, r1
   21e40:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e44:	f7fa ff52 	bl	1ccec <__aeabi_dsub>
   21e48:	3630      	adds	r6, #48	; 0x30
   21e4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   21e4c:	f805 6b01 	strb.w	r6, [r5], #1
   21e50:	42ab      	cmp	r3, r5
   21e52:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21e56:	f04f 0200 	mov.w	r2, #0
   21e5a:	d124      	bne.n	21ea6 <_dtoa_r+0x5fe>
   21e5c:	4b1b      	ldr	r3, [pc, #108]	; (21ecc <_dtoa_r+0x624>)
   21e5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21e62:	f7fa ff45 	bl	1ccf0 <__adddf3>
   21e66:	4602      	mov	r2, r0
   21e68:	460b      	mov	r3, r1
   21e6a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e6e:	f002 fecb 	bl	24c08 <__aeabi_dcmpgt>
   21e72:	2800      	cmp	r0, #0
   21e74:	d174      	bne.n	21f60 <_dtoa_r+0x6b8>
   21e76:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21e7a:	2000      	movs	r0, #0
   21e7c:	4913      	ldr	r1, [pc, #76]	; (21ecc <_dtoa_r+0x624>)
   21e7e:	f7fa ff35 	bl	1ccec <__aeabi_dsub>
   21e82:	4602      	mov	r2, r0
   21e84:	460b      	mov	r3, r1
   21e86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   21e8a:	f002 fe9f 	bl	24bcc <__aeabi_dcmplt>
   21e8e:	2800      	cmp	r0, #0
   21e90:	f43f af2d 	beq.w	21cee <_dtoa_r+0x446>
   21e94:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   21e98:	1e6a      	subs	r2, r5, #1
   21e9a:	2b30      	cmp	r3, #48	; 0x30
   21e9c:	d001      	beq.n	21ea2 <_dtoa_r+0x5fa>
   21e9e:	46bb      	mov	fp, r7
   21ea0:	e04d      	b.n	21f3e <_dtoa_r+0x696>
   21ea2:	4615      	mov	r5, r2
   21ea4:	e7f6      	b.n	21e94 <_dtoa_r+0x5ec>
   21ea6:	4b06      	ldr	r3, [pc, #24]	; (21ec0 <_dtoa_r+0x618>)
   21ea8:	f002 fc1e 	bl	246e8 <__aeabi_dmul>
   21eac:	e9cd 0102 	strd	r0, r1, [sp, #8]
   21eb0:	e7bd      	b.n	21e2e <_dtoa_r+0x586>
   21eb2:	bf00      	nop
   21eb4:	00027d20 	.word	0x00027d20
   21eb8:	00027cf8 	.word	0x00027cf8
   21ebc:	3ff00000 	.word	0x3ff00000
   21ec0:	40240000 	.word	0x40240000
   21ec4:	401c0000 	.word	0x401c0000
   21ec8:	40140000 	.word	0x40140000
   21ecc:	3fe00000 	.word	0x3fe00000
   21ed0:	9d06      	ldr	r5, [sp, #24]
   21ed2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   21ed6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   21eda:	4630      	mov	r0, r6
   21edc:	4639      	mov	r1, r7
   21ede:	f002 fd2d 	bl	2493c <__aeabi_ddiv>
   21ee2:	f002 feb1 	bl	24c48 <__aeabi_d2iz>
   21ee6:	4680      	mov	r8, r0
   21ee8:	f7fb f84e 	bl	1cf88 <__aeabi_i2d>
   21eec:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   21ef0:	f002 fbfa 	bl	246e8 <__aeabi_dmul>
   21ef4:	4602      	mov	r2, r0
   21ef6:	460b      	mov	r3, r1
   21ef8:	4630      	mov	r0, r6
   21efa:	4639      	mov	r1, r7
   21efc:	f7fa fef6 	bl	1ccec <__aeabi_dsub>
   21f00:	f108 0630 	add.w	r6, r8, #48	; 0x30
   21f04:	f805 6b01 	strb.w	r6, [r5], #1
   21f08:	9e06      	ldr	r6, [sp, #24]
   21f0a:	4602      	mov	r2, r0
   21f0c:	1bae      	subs	r6, r5, r6
   21f0e:	45b1      	cmp	r9, r6
   21f10:	460b      	mov	r3, r1
   21f12:	d137      	bne.n	21f84 <_dtoa_r+0x6dc>
   21f14:	f7fa feec 	bl	1ccf0 <__adddf3>
   21f18:	4606      	mov	r6, r0
   21f1a:	460f      	mov	r7, r1
   21f1c:	4602      	mov	r2, r0
   21f1e:	460b      	mov	r3, r1
   21f20:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21f24:	f002 fe52 	bl	24bcc <__aeabi_dcmplt>
   21f28:	b9c8      	cbnz	r0, 21f5e <_dtoa_r+0x6b6>
   21f2a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   21f2e:	4632      	mov	r2, r6
   21f30:	463b      	mov	r3, r7
   21f32:	f002 fe41 	bl	24bb8 <__aeabi_dcmpeq>
   21f36:	b110      	cbz	r0, 21f3e <_dtoa_r+0x696>
   21f38:	f018 0f01 	tst.w	r8, #1
   21f3c:	d10f      	bne.n	21f5e <_dtoa_r+0x6b6>
   21f3e:	4651      	mov	r1, sl
   21f40:	4620      	mov	r0, r4
   21f42:	f000 ff47 	bl	22dd4 <_Bfree>
   21f46:	2300      	movs	r3, #0
   21f48:	9a20      	ldr	r2, [sp, #128]	; 0x80
   21f4a:	702b      	strb	r3, [r5, #0]
   21f4c:	f10b 0301 	add.w	r3, fp, #1
   21f50:	6013      	str	r3, [r2, #0]
   21f52:	9b22      	ldr	r3, [sp, #136]	; 0x88
   21f54:	2b00      	cmp	r3, #0
   21f56:	f43f acec 	beq.w	21932 <_dtoa_r+0x8a>
   21f5a:	601d      	str	r5, [r3, #0]
   21f5c:	e4e9      	b.n	21932 <_dtoa_r+0x8a>
   21f5e:	465f      	mov	r7, fp
   21f60:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   21f64:	1e6b      	subs	r3, r5, #1
   21f66:	2a39      	cmp	r2, #57	; 0x39
   21f68:	d106      	bne.n	21f78 <_dtoa_r+0x6d0>
   21f6a:	9a06      	ldr	r2, [sp, #24]
   21f6c:	429a      	cmp	r2, r3
   21f6e:	d107      	bne.n	21f80 <_dtoa_r+0x6d8>
   21f70:	2330      	movs	r3, #48	; 0x30
   21f72:	7013      	strb	r3, [r2, #0]
   21f74:	4613      	mov	r3, r2
   21f76:	3701      	adds	r7, #1
   21f78:	781a      	ldrb	r2, [r3, #0]
   21f7a:	3201      	adds	r2, #1
   21f7c:	701a      	strb	r2, [r3, #0]
   21f7e:	e78e      	b.n	21e9e <_dtoa_r+0x5f6>
   21f80:	461d      	mov	r5, r3
   21f82:	e7ed      	b.n	21f60 <_dtoa_r+0x6b8>
   21f84:	2200      	movs	r2, #0
   21f86:	4bb5      	ldr	r3, [pc, #724]	; (2225c <_dtoa_r+0x9b4>)
   21f88:	f002 fbae 	bl	246e8 <__aeabi_dmul>
   21f8c:	2200      	movs	r2, #0
   21f8e:	2300      	movs	r3, #0
   21f90:	4606      	mov	r6, r0
   21f92:	460f      	mov	r7, r1
   21f94:	f002 fe10 	bl	24bb8 <__aeabi_dcmpeq>
   21f98:	2800      	cmp	r0, #0
   21f9a:	d09c      	beq.n	21ed6 <_dtoa_r+0x62e>
   21f9c:	e7cf      	b.n	21f3e <_dtoa_r+0x696>
   21f9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   21fa0:	2a00      	cmp	r2, #0
   21fa2:	f000 8129 	beq.w	221f8 <_dtoa_r+0x950>
   21fa6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   21fa8:	2a01      	cmp	r2, #1
   21faa:	f300 810e 	bgt.w	221ca <_dtoa_r+0x922>
   21fae:	9a10      	ldr	r2, [sp, #64]	; 0x40
   21fb0:	2a00      	cmp	r2, #0
   21fb2:	f000 8106 	beq.w	221c2 <_dtoa_r+0x91a>
   21fb6:	f203 4333 	addw	r3, r3, #1075	; 0x433
   21fba:	4645      	mov	r5, r8
   21fbc:	9e08      	ldr	r6, [sp, #32]
   21fbe:	9a07      	ldr	r2, [sp, #28]
   21fc0:	2101      	movs	r1, #1
   21fc2:	441a      	add	r2, r3
   21fc4:	4620      	mov	r0, r4
   21fc6:	4498      	add	r8, r3
   21fc8:	9207      	str	r2, [sp, #28]
   21fca:	f000 ffe1 	bl	22f90 <__i2b>
   21fce:	4607      	mov	r7, r0
   21fd0:	2d00      	cmp	r5, #0
   21fd2:	dd0b      	ble.n	21fec <_dtoa_r+0x744>
   21fd4:	9b07      	ldr	r3, [sp, #28]
   21fd6:	2b00      	cmp	r3, #0
   21fd8:	dd08      	ble.n	21fec <_dtoa_r+0x744>
   21fda:	42ab      	cmp	r3, r5
   21fdc:	bfa8      	it	ge
   21fde:	462b      	movge	r3, r5
   21fe0:	9a07      	ldr	r2, [sp, #28]
   21fe2:	eba8 0803 	sub.w	r8, r8, r3
   21fe6:	1aed      	subs	r5, r5, r3
   21fe8:	1ad3      	subs	r3, r2, r3
   21fea:	9307      	str	r3, [sp, #28]
   21fec:	9b08      	ldr	r3, [sp, #32]
   21fee:	b1fb      	cbz	r3, 22030 <_dtoa_r+0x788>
   21ff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21ff2:	2b00      	cmp	r3, #0
   21ff4:	f000 8104 	beq.w	22200 <_dtoa_r+0x958>
   21ff8:	2e00      	cmp	r6, #0
   21ffa:	dd11      	ble.n	22020 <_dtoa_r+0x778>
   21ffc:	4639      	mov	r1, r7
   21ffe:	4632      	mov	r2, r6
   22000:	4620      	mov	r0, r4
   22002:	f001 f85b 	bl	230bc <__pow5mult>
   22006:	4652      	mov	r2, sl
   22008:	4601      	mov	r1, r0
   2200a:	4607      	mov	r7, r0
   2200c:	4620      	mov	r0, r4
   2200e:	f000 ffc8 	bl	22fa2 <__multiply>
   22012:	4651      	mov	r1, sl
   22014:	900a      	str	r0, [sp, #40]	; 0x28
   22016:	4620      	mov	r0, r4
   22018:	f000 fedc 	bl	22dd4 <_Bfree>
   2201c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2201e:	469a      	mov	sl, r3
   22020:	9b08      	ldr	r3, [sp, #32]
   22022:	1b9a      	subs	r2, r3, r6
   22024:	d004      	beq.n	22030 <_dtoa_r+0x788>
   22026:	4651      	mov	r1, sl
   22028:	4620      	mov	r0, r4
   2202a:	f001 f847 	bl	230bc <__pow5mult>
   2202e:	4682      	mov	sl, r0
   22030:	2101      	movs	r1, #1
   22032:	4620      	mov	r0, r4
   22034:	f000 ffac 	bl	22f90 <__i2b>
   22038:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   2203a:	4606      	mov	r6, r0
   2203c:	2b00      	cmp	r3, #0
   2203e:	f340 80e1 	ble.w	22204 <_dtoa_r+0x95c>
   22042:	461a      	mov	r2, r3
   22044:	4601      	mov	r1, r0
   22046:	4620      	mov	r0, r4
   22048:	f001 f838 	bl	230bc <__pow5mult>
   2204c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2204e:	4606      	mov	r6, r0
   22050:	2b01      	cmp	r3, #1
   22052:	f340 80da 	ble.w	2220a <_dtoa_r+0x962>
   22056:	2300      	movs	r3, #0
   22058:	9308      	str	r3, [sp, #32]
   2205a:	6933      	ldr	r3, [r6, #16]
   2205c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   22060:	6918      	ldr	r0, [r3, #16]
   22062:	f000 ff47 	bl	22ef4 <__hi0bits>
   22066:	f1c0 0020 	rsb	r0, r0, #32
   2206a:	9b07      	ldr	r3, [sp, #28]
   2206c:	4418      	add	r0, r3
   2206e:	f010 001f 	ands.w	r0, r0, #31
   22072:	f000 80f0 	beq.w	22256 <_dtoa_r+0x9ae>
   22076:	f1c0 0320 	rsb	r3, r0, #32
   2207a:	2b04      	cmp	r3, #4
   2207c:	f340 80e2 	ble.w	22244 <_dtoa_r+0x99c>
   22080:	9b07      	ldr	r3, [sp, #28]
   22082:	f1c0 001c 	rsb	r0, r0, #28
   22086:	4480      	add	r8, r0
   22088:	4405      	add	r5, r0
   2208a:	4403      	add	r3, r0
   2208c:	9307      	str	r3, [sp, #28]
   2208e:	f1b8 0f00 	cmp.w	r8, #0
   22092:	dd05      	ble.n	220a0 <_dtoa_r+0x7f8>
   22094:	4651      	mov	r1, sl
   22096:	4642      	mov	r2, r8
   22098:	4620      	mov	r0, r4
   2209a:	f001 f85d 	bl	23158 <__lshift>
   2209e:	4682      	mov	sl, r0
   220a0:	9b07      	ldr	r3, [sp, #28]
   220a2:	2b00      	cmp	r3, #0
   220a4:	dd05      	ble.n	220b2 <_dtoa_r+0x80a>
   220a6:	4631      	mov	r1, r6
   220a8:	461a      	mov	r2, r3
   220aa:	4620      	mov	r0, r4
   220ac:	f001 f854 	bl	23158 <__lshift>
   220b0:	4606      	mov	r6, r0
   220b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   220b4:	2b00      	cmp	r3, #0
   220b6:	f000 80d3 	beq.w	22260 <_dtoa_r+0x9b8>
   220ba:	4631      	mov	r1, r6
   220bc:	4650      	mov	r0, sl
   220be:	f001 f89c 	bl	231fa <__mcmp>
   220c2:	2800      	cmp	r0, #0
   220c4:	f280 80cc 	bge.w	22260 <_dtoa_r+0x9b8>
   220c8:	2300      	movs	r3, #0
   220ca:	4651      	mov	r1, sl
   220cc:	220a      	movs	r2, #10
   220ce:	4620      	mov	r0, r4
   220d0:	f000 fe97 	bl	22e02 <__multadd>
   220d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   220d6:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   220da:	4682      	mov	sl, r0
   220dc:	2b00      	cmp	r3, #0
   220de:	f000 81a9 	beq.w	22434 <_dtoa_r+0xb8c>
   220e2:	2300      	movs	r3, #0
   220e4:	4639      	mov	r1, r7
   220e6:	220a      	movs	r2, #10
   220e8:	4620      	mov	r0, r4
   220ea:	f000 fe8a 	bl	22e02 <__multadd>
   220ee:	9b04      	ldr	r3, [sp, #16]
   220f0:	4607      	mov	r7, r0
   220f2:	2b00      	cmp	r3, #0
   220f4:	dc03      	bgt.n	220fe <_dtoa_r+0x856>
   220f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   220f8:	2b02      	cmp	r3, #2
   220fa:	f300 80b9 	bgt.w	22270 <_dtoa_r+0x9c8>
   220fe:	2d00      	cmp	r5, #0
   22100:	dd05      	ble.n	2210e <_dtoa_r+0x866>
   22102:	4639      	mov	r1, r7
   22104:	462a      	mov	r2, r5
   22106:	4620      	mov	r0, r4
   22108:	f001 f826 	bl	23158 <__lshift>
   2210c:	4607      	mov	r7, r0
   2210e:	9b08      	ldr	r3, [sp, #32]
   22110:	2b00      	cmp	r3, #0
   22112:	f000 8110 	beq.w	22336 <_dtoa_r+0xa8e>
   22116:	6879      	ldr	r1, [r7, #4]
   22118:	4620      	mov	r0, r4
   2211a:	f000 fe27 	bl	22d6c <_Balloc>
   2211e:	4605      	mov	r5, r0
   22120:	693a      	ldr	r2, [r7, #16]
   22122:	f107 010c 	add.w	r1, r7, #12
   22126:	3202      	adds	r2, #2
   22128:	0092      	lsls	r2, r2, #2
   2212a:	300c      	adds	r0, #12
   2212c:	f7fc f9fb 	bl	1e526 <memcpy>
   22130:	2201      	movs	r2, #1
   22132:	4629      	mov	r1, r5
   22134:	4620      	mov	r0, r4
   22136:	f001 f80f 	bl	23158 <__lshift>
   2213a:	9707      	str	r7, [sp, #28]
   2213c:	4607      	mov	r7, r0
   2213e:	9b02      	ldr	r3, [sp, #8]
   22140:	f8dd 8018 	ldr.w	r8, [sp, #24]
   22144:	f003 0301 	and.w	r3, r3, #1
   22148:	9308      	str	r3, [sp, #32]
   2214a:	4631      	mov	r1, r6
   2214c:	4650      	mov	r0, sl
   2214e:	f7ff fb1f 	bl	21790 <quorem>
   22152:	9907      	ldr	r1, [sp, #28]
   22154:	4605      	mov	r5, r0
   22156:	f100 0930 	add.w	r9, r0, #48	; 0x30
   2215a:	4650      	mov	r0, sl
   2215c:	f001 f84d 	bl	231fa <__mcmp>
   22160:	463a      	mov	r2, r7
   22162:	9002      	str	r0, [sp, #8]
   22164:	4631      	mov	r1, r6
   22166:	4620      	mov	r0, r4
   22168:	f001 f861 	bl	2322e <__mdiff>
   2216c:	68c3      	ldr	r3, [r0, #12]
   2216e:	4602      	mov	r2, r0
   22170:	2b00      	cmp	r3, #0
   22172:	f040 80e2 	bne.w	2233a <_dtoa_r+0xa92>
   22176:	4601      	mov	r1, r0
   22178:	9009      	str	r0, [sp, #36]	; 0x24
   2217a:	4650      	mov	r0, sl
   2217c:	f001 f83d 	bl	231fa <__mcmp>
   22180:	4603      	mov	r3, r0
   22182:	9a09      	ldr	r2, [sp, #36]	; 0x24
   22184:	4611      	mov	r1, r2
   22186:	4620      	mov	r0, r4
   22188:	9309      	str	r3, [sp, #36]	; 0x24
   2218a:	f000 fe23 	bl	22dd4 <_Bfree>
   2218e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22190:	2b00      	cmp	r3, #0
   22192:	f040 80d4 	bne.w	2233e <_dtoa_r+0xa96>
   22196:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   22198:	2a00      	cmp	r2, #0
   2219a:	f040 80d0 	bne.w	2233e <_dtoa_r+0xa96>
   2219e:	9a08      	ldr	r2, [sp, #32]
   221a0:	2a00      	cmp	r2, #0
   221a2:	f040 80cc 	bne.w	2233e <_dtoa_r+0xa96>
   221a6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   221aa:	f000 80e8 	beq.w	2237e <_dtoa_r+0xad6>
   221ae:	9b02      	ldr	r3, [sp, #8]
   221b0:	2b00      	cmp	r3, #0
   221b2:	dd01      	ble.n	221b8 <_dtoa_r+0x910>
   221b4:	f105 0931 	add.w	r9, r5, #49	; 0x31
   221b8:	f108 0501 	add.w	r5, r8, #1
   221bc:	f888 9000 	strb.w	r9, [r8]
   221c0:	e06b      	b.n	2229a <_dtoa_r+0x9f2>
   221c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   221c4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   221c8:	e6f7      	b.n	21fba <_dtoa_r+0x712>
   221ca:	9b08      	ldr	r3, [sp, #32]
   221cc:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   221d0:	42b3      	cmp	r3, r6
   221d2:	bfb7      	itett	lt
   221d4:	9b08      	ldrlt	r3, [sp, #32]
   221d6:	1b9e      	subge	r6, r3, r6
   221d8:	1af2      	sublt	r2, r6, r3
   221da:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   221dc:	bfbf      	itttt	lt
   221de:	9608      	strlt	r6, [sp, #32]
   221e0:	189b      	addlt	r3, r3, r2
   221e2:	930c      	strlt	r3, [sp, #48]	; 0x30
   221e4:	2600      	movlt	r6, #0
   221e6:	f1b9 0f00 	cmp.w	r9, #0
   221ea:	bfb9      	ittee	lt
   221ec:	eba8 0509 	sublt.w	r5, r8, r9
   221f0:	2300      	movlt	r3, #0
   221f2:	4645      	movge	r5, r8
   221f4:	464b      	movge	r3, r9
   221f6:	e6e2      	b.n	21fbe <_dtoa_r+0x716>
   221f8:	9e08      	ldr	r6, [sp, #32]
   221fa:	4645      	mov	r5, r8
   221fc:	9f09      	ldr	r7, [sp, #36]	; 0x24
   221fe:	e6e7      	b.n	21fd0 <_dtoa_r+0x728>
   22200:	9a08      	ldr	r2, [sp, #32]
   22202:	e710      	b.n	22026 <_dtoa_r+0x77e>
   22204:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   22206:	2b01      	cmp	r3, #1
   22208:	dc18      	bgt.n	2223c <_dtoa_r+0x994>
   2220a:	9b02      	ldr	r3, [sp, #8]
   2220c:	b9b3      	cbnz	r3, 2223c <_dtoa_r+0x994>
   2220e:	9b03      	ldr	r3, [sp, #12]
   22210:	f3c3 0313 	ubfx	r3, r3, #0, #20
   22214:	b9a3      	cbnz	r3, 22240 <_dtoa_r+0x998>
   22216:	9b03      	ldr	r3, [sp, #12]
   22218:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   2221c:	0d1b      	lsrs	r3, r3, #20
   2221e:	051b      	lsls	r3, r3, #20
   22220:	b12b      	cbz	r3, 2222e <_dtoa_r+0x986>
   22222:	9b07      	ldr	r3, [sp, #28]
   22224:	f108 0801 	add.w	r8, r8, #1
   22228:	3301      	adds	r3, #1
   2222a:	9307      	str	r3, [sp, #28]
   2222c:	2301      	movs	r3, #1
   2222e:	9308      	str	r3, [sp, #32]
   22230:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   22232:	2b00      	cmp	r3, #0
   22234:	f47f af11 	bne.w	2205a <_dtoa_r+0x7b2>
   22238:	2001      	movs	r0, #1
   2223a:	e716      	b.n	2206a <_dtoa_r+0x7c2>
   2223c:	2300      	movs	r3, #0
   2223e:	e7f6      	b.n	2222e <_dtoa_r+0x986>
   22240:	9b02      	ldr	r3, [sp, #8]
   22242:	e7f4      	b.n	2222e <_dtoa_r+0x986>
   22244:	f43f af23 	beq.w	2208e <_dtoa_r+0x7e6>
   22248:	9a07      	ldr	r2, [sp, #28]
   2224a:	331c      	adds	r3, #28
   2224c:	441a      	add	r2, r3
   2224e:	4498      	add	r8, r3
   22250:	441d      	add	r5, r3
   22252:	4613      	mov	r3, r2
   22254:	e71a      	b.n	2208c <_dtoa_r+0x7e4>
   22256:	4603      	mov	r3, r0
   22258:	e7f6      	b.n	22248 <_dtoa_r+0x9a0>
   2225a:	bf00      	nop
   2225c:	40240000 	.word	0x40240000
   22260:	f1b9 0f00 	cmp.w	r9, #0
   22264:	dc33      	bgt.n	222ce <_dtoa_r+0xa26>
   22266:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   22268:	2b02      	cmp	r3, #2
   2226a:	dd30      	ble.n	222ce <_dtoa_r+0xa26>
   2226c:	f8cd 9010 	str.w	r9, [sp, #16]
   22270:	9b04      	ldr	r3, [sp, #16]
   22272:	b963      	cbnz	r3, 2228e <_dtoa_r+0x9e6>
   22274:	4631      	mov	r1, r6
   22276:	2205      	movs	r2, #5
   22278:	4620      	mov	r0, r4
   2227a:	f000 fdc2 	bl	22e02 <__multadd>
   2227e:	4601      	mov	r1, r0
   22280:	4606      	mov	r6, r0
   22282:	4650      	mov	r0, sl
   22284:	f000 ffb9 	bl	231fa <__mcmp>
   22288:	2800      	cmp	r0, #0
   2228a:	f73f ad5c 	bgt.w	21d46 <_dtoa_r+0x49e>
   2228e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   22290:	9d06      	ldr	r5, [sp, #24]
   22292:	ea6f 0b03 	mvn.w	fp, r3
   22296:	2300      	movs	r3, #0
   22298:	9307      	str	r3, [sp, #28]
   2229a:	4631      	mov	r1, r6
   2229c:	4620      	mov	r0, r4
   2229e:	f000 fd99 	bl	22dd4 <_Bfree>
   222a2:	2f00      	cmp	r7, #0
   222a4:	f43f ae4b 	beq.w	21f3e <_dtoa_r+0x696>
   222a8:	9b07      	ldr	r3, [sp, #28]
   222aa:	b12b      	cbz	r3, 222b8 <_dtoa_r+0xa10>
   222ac:	42bb      	cmp	r3, r7
   222ae:	d003      	beq.n	222b8 <_dtoa_r+0xa10>
   222b0:	4619      	mov	r1, r3
   222b2:	4620      	mov	r0, r4
   222b4:	f000 fd8e 	bl	22dd4 <_Bfree>
   222b8:	4639      	mov	r1, r7
   222ba:	4620      	mov	r0, r4
   222bc:	f000 fd8a 	bl	22dd4 <_Bfree>
   222c0:	e63d      	b.n	21f3e <_dtoa_r+0x696>
   222c2:	2600      	movs	r6, #0
   222c4:	4637      	mov	r7, r6
   222c6:	e7e2      	b.n	2228e <_dtoa_r+0x9e6>
   222c8:	46bb      	mov	fp, r7
   222ca:	4637      	mov	r7, r6
   222cc:	e53b      	b.n	21d46 <_dtoa_r+0x49e>
   222ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
   222d0:	f8cd 9010 	str.w	r9, [sp, #16]
   222d4:	2b00      	cmp	r3, #0
   222d6:	f47f af12 	bne.w	220fe <_dtoa_r+0x856>
   222da:	9d06      	ldr	r5, [sp, #24]
   222dc:	4631      	mov	r1, r6
   222de:	4650      	mov	r0, sl
   222e0:	f7ff fa56 	bl	21790 <quorem>
   222e4:	9b06      	ldr	r3, [sp, #24]
   222e6:	f100 0930 	add.w	r9, r0, #48	; 0x30
   222ea:	f805 9b01 	strb.w	r9, [r5], #1
   222ee:	9a04      	ldr	r2, [sp, #16]
   222f0:	1aeb      	subs	r3, r5, r3
   222f2:	429a      	cmp	r2, r3
   222f4:	f300 8081 	bgt.w	223fa <_dtoa_r+0xb52>
   222f8:	9b06      	ldr	r3, [sp, #24]
   222fa:	2a01      	cmp	r2, #1
   222fc:	bfac      	ite	ge
   222fe:	189b      	addge	r3, r3, r2
   22300:	3301      	addlt	r3, #1
   22302:	4698      	mov	r8, r3
   22304:	2300      	movs	r3, #0
   22306:	9307      	str	r3, [sp, #28]
   22308:	4651      	mov	r1, sl
   2230a:	2201      	movs	r2, #1
   2230c:	4620      	mov	r0, r4
   2230e:	f000 ff23 	bl	23158 <__lshift>
   22312:	4631      	mov	r1, r6
   22314:	4682      	mov	sl, r0
   22316:	f000 ff70 	bl	231fa <__mcmp>
   2231a:	2800      	cmp	r0, #0
   2231c:	dc34      	bgt.n	22388 <_dtoa_r+0xae0>
   2231e:	d102      	bne.n	22326 <_dtoa_r+0xa7e>
   22320:	f019 0f01 	tst.w	r9, #1
   22324:	d130      	bne.n	22388 <_dtoa_r+0xae0>
   22326:	4645      	mov	r5, r8
   22328:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   2232c:	1e6a      	subs	r2, r5, #1
   2232e:	2b30      	cmp	r3, #48	; 0x30
   22330:	d1b3      	bne.n	2229a <_dtoa_r+0x9f2>
   22332:	4615      	mov	r5, r2
   22334:	e7f8      	b.n	22328 <_dtoa_r+0xa80>
   22336:	4638      	mov	r0, r7
   22338:	e6ff      	b.n	2213a <_dtoa_r+0x892>
   2233a:	2301      	movs	r3, #1
   2233c:	e722      	b.n	22184 <_dtoa_r+0x8dc>
   2233e:	9a02      	ldr	r2, [sp, #8]
   22340:	2a00      	cmp	r2, #0
   22342:	db04      	blt.n	2234e <_dtoa_r+0xaa6>
   22344:	d128      	bne.n	22398 <_dtoa_r+0xaf0>
   22346:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   22348:	bb32      	cbnz	r2, 22398 <_dtoa_r+0xaf0>
   2234a:	9a08      	ldr	r2, [sp, #32]
   2234c:	bb22      	cbnz	r2, 22398 <_dtoa_r+0xaf0>
   2234e:	2b00      	cmp	r3, #0
   22350:	f77f af32 	ble.w	221b8 <_dtoa_r+0x910>
   22354:	4651      	mov	r1, sl
   22356:	2201      	movs	r2, #1
   22358:	4620      	mov	r0, r4
   2235a:	f000 fefd 	bl	23158 <__lshift>
   2235e:	4631      	mov	r1, r6
   22360:	4682      	mov	sl, r0
   22362:	f000 ff4a 	bl	231fa <__mcmp>
   22366:	2800      	cmp	r0, #0
   22368:	dc05      	bgt.n	22376 <_dtoa_r+0xace>
   2236a:	f47f af25 	bne.w	221b8 <_dtoa_r+0x910>
   2236e:	f019 0f01 	tst.w	r9, #1
   22372:	f43f af21 	beq.w	221b8 <_dtoa_r+0x910>
   22376:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   2237a:	f47f af1b 	bne.w	221b4 <_dtoa_r+0x90c>
   2237e:	2339      	movs	r3, #57	; 0x39
   22380:	f108 0801 	add.w	r8, r8, #1
   22384:	f808 3c01 	strb.w	r3, [r8, #-1]
   22388:	4645      	mov	r5, r8
   2238a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   2238e:	1e6a      	subs	r2, r5, #1
   22390:	2b39      	cmp	r3, #57	; 0x39
   22392:	d03a      	beq.n	2240a <_dtoa_r+0xb62>
   22394:	3301      	adds	r3, #1
   22396:	e03f      	b.n	22418 <_dtoa_r+0xb70>
   22398:	2b00      	cmp	r3, #0
   2239a:	f108 0501 	add.w	r5, r8, #1
   2239e:	dd05      	ble.n	223ac <_dtoa_r+0xb04>
   223a0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   223a4:	d0eb      	beq.n	2237e <_dtoa_r+0xad6>
   223a6:	f109 0901 	add.w	r9, r9, #1
   223aa:	e707      	b.n	221bc <_dtoa_r+0x914>
   223ac:	9b06      	ldr	r3, [sp, #24]
   223ae:	9a04      	ldr	r2, [sp, #16]
   223b0:	1aeb      	subs	r3, r5, r3
   223b2:	4293      	cmp	r3, r2
   223b4:	46a8      	mov	r8, r5
   223b6:	f805 9c01 	strb.w	r9, [r5, #-1]
   223ba:	d0a5      	beq.n	22308 <_dtoa_r+0xa60>
   223bc:	4651      	mov	r1, sl
   223be:	2300      	movs	r3, #0
   223c0:	220a      	movs	r2, #10
   223c2:	4620      	mov	r0, r4
   223c4:	f000 fd1d 	bl	22e02 <__multadd>
   223c8:	9b07      	ldr	r3, [sp, #28]
   223ca:	4682      	mov	sl, r0
   223cc:	42bb      	cmp	r3, r7
   223ce:	f04f 020a 	mov.w	r2, #10
   223d2:	f04f 0300 	mov.w	r3, #0
   223d6:	9907      	ldr	r1, [sp, #28]
   223d8:	4620      	mov	r0, r4
   223da:	d104      	bne.n	223e6 <_dtoa_r+0xb3e>
   223dc:	f000 fd11 	bl	22e02 <__multadd>
   223e0:	9007      	str	r0, [sp, #28]
   223e2:	4607      	mov	r7, r0
   223e4:	e6b1      	b.n	2214a <_dtoa_r+0x8a2>
   223e6:	f000 fd0c 	bl	22e02 <__multadd>
   223ea:	2300      	movs	r3, #0
   223ec:	9007      	str	r0, [sp, #28]
   223ee:	220a      	movs	r2, #10
   223f0:	4639      	mov	r1, r7
   223f2:	4620      	mov	r0, r4
   223f4:	f000 fd05 	bl	22e02 <__multadd>
   223f8:	e7f3      	b.n	223e2 <_dtoa_r+0xb3a>
   223fa:	4651      	mov	r1, sl
   223fc:	2300      	movs	r3, #0
   223fe:	220a      	movs	r2, #10
   22400:	4620      	mov	r0, r4
   22402:	f000 fcfe 	bl	22e02 <__multadd>
   22406:	4682      	mov	sl, r0
   22408:	e768      	b.n	222dc <_dtoa_r+0xa34>
   2240a:	9b06      	ldr	r3, [sp, #24]
   2240c:	4293      	cmp	r3, r2
   2240e:	d105      	bne.n	2241c <_dtoa_r+0xb74>
   22410:	2331      	movs	r3, #49	; 0x31
   22412:	9a06      	ldr	r2, [sp, #24]
   22414:	f10b 0b01 	add.w	fp, fp, #1
   22418:	7013      	strb	r3, [r2, #0]
   2241a:	e73e      	b.n	2229a <_dtoa_r+0x9f2>
   2241c:	4615      	mov	r5, r2
   2241e:	e7b4      	b.n	2238a <_dtoa_r+0xae2>
   22420:	4b09      	ldr	r3, [pc, #36]	; (22448 <_dtoa_r+0xba0>)
   22422:	f7ff baa3 	b.w	2196c <_dtoa_r+0xc4>
   22426:	9b22      	ldr	r3, [sp, #136]	; 0x88
   22428:	2b00      	cmp	r3, #0
   2242a:	f47f aa7d 	bne.w	21928 <_dtoa_r+0x80>
   2242e:	4b07      	ldr	r3, [pc, #28]	; (2244c <_dtoa_r+0xba4>)
   22430:	f7ff ba9c 	b.w	2196c <_dtoa_r+0xc4>
   22434:	9b04      	ldr	r3, [sp, #16]
   22436:	2b00      	cmp	r3, #0
   22438:	f73f af4f 	bgt.w	222da <_dtoa_r+0xa32>
   2243c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2243e:	2b02      	cmp	r3, #2
   22440:	f77f af4b 	ble.w	222da <_dtoa_r+0xa32>
   22444:	e714      	b.n	22270 <_dtoa_r+0x9c8>
   22446:	bf00      	nop
   22448:	00024f4a 	.word	0x00024f4a
   2244c:	00027ce6 	.word	0x00027ce6

00022450 <__sflags>:
__sflags():
   22450:	780b      	ldrb	r3, [r1, #0]
   22452:	b530      	push	{r4, r5, lr}
   22454:	2b72      	cmp	r3, #114	; 0x72
   22456:	d013      	beq.n	22480 <__sflags+0x30>
   22458:	2b77      	cmp	r3, #119	; 0x77
   2245a:	d007      	beq.n	2246c <__sflags+0x1c>
   2245c:	2b61      	cmp	r3, #97	; 0x61
   2245e:	d113      	bne.n	22488 <__sflags+0x38>
   22460:	f44f 7402 	mov.w	r4, #520	; 0x208
   22464:	2301      	movs	r3, #1
   22466:	f44f 7084 	mov.w	r0, #264	; 0x108
   2246a:	e003      	b.n	22474 <__sflags+0x24>
   2246c:	f44f 64c0 	mov.w	r4, #1536	; 0x600
   22470:	2301      	movs	r3, #1
   22472:	2008      	movs	r0, #8
   22474:	f811 5f01 	ldrb.w	r5, [r1, #1]!
   22478:	b955      	cbnz	r5, 22490 <__sflags+0x40>
   2247a:	4323      	orrs	r3, r4
   2247c:	6013      	str	r3, [r2, #0]
   2247e:	bd30      	pop	{r4, r5, pc}
   22480:	2400      	movs	r4, #0
   22482:	2004      	movs	r0, #4
   22484:	4623      	mov	r3, r4
   22486:	e7f5      	b.n	22474 <__sflags+0x24>
   22488:	2316      	movs	r3, #22
   2248a:	6003      	str	r3, [r0, #0]
   2248c:	2000      	movs	r0, #0
   2248e:	bd30      	pop	{r4, r5, pc}
   22490:	2d62      	cmp	r5, #98	; 0x62
   22492:	d00c      	beq.n	224ae <__sflags+0x5e>
   22494:	2d78      	cmp	r5, #120	; 0x78
   22496:	d00d      	beq.n	224b4 <__sflags+0x64>
   22498:	2d2b      	cmp	r5, #43	; 0x2b
   2249a:	d1eb      	bne.n	22474 <__sflags+0x24>
   2249c:	f020 001c 	bic.w	r0, r0, #28
   224a0:	f023 0303 	bic.w	r3, r3, #3
   224a4:	f040 0010 	orr.w	r0, r0, #16
   224a8:	f043 0302 	orr.w	r3, r3, #2
   224ac:	e7e2      	b.n	22474 <__sflags+0x24>
   224ae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   224b2:	e7df      	b.n	22474 <__sflags+0x24>
   224b4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   224b8:	e7dc      	b.n	22474 <__sflags+0x24>
   224ba:	Address 0x00000000000224ba is out of bounds.


000224bc <_fstat_r>:
_fstat_r():
   224bc:	b538      	push	{r3, r4, r5, lr}
   224be:	2300      	movs	r3, #0
   224c0:	4c06      	ldr	r4, [pc, #24]	; (224dc <_fstat_r+0x20>)
   224c2:	4605      	mov	r5, r0
   224c4:	4608      	mov	r0, r1
   224c6:	4611      	mov	r1, r2
   224c8:	6023      	str	r3, [r4, #0]
   224ca:	f7f4 ffb3 	bl	17434 <_fstat>
   224ce:	1c43      	adds	r3, r0, #1
   224d0:	d102      	bne.n	224d8 <_fstat_r+0x1c>
   224d2:	6823      	ldr	r3, [r4, #0]
   224d4:	b103      	cbz	r3, 224d8 <_fstat_r+0x1c>
   224d6:	602b      	str	r3, [r5, #0]
   224d8:	bd38      	pop	{r3, r4, r5, pc}
   224da:	bf00      	nop
   224dc:	2007c8ec 	.word	0x2007c8ec

000224e0 <rshift>:
rshift():
   224e0:	b5f0      	push	{r4, r5, r6, r7, lr}
   224e2:	6906      	ldr	r6, [r0, #16]
   224e4:	114b      	asrs	r3, r1, #5
   224e6:	42b3      	cmp	r3, r6
   224e8:	f100 0514 	add.w	r5, r0, #20
   224ec:	da2b      	bge.n	22546 <rshift+0x66>
   224ee:	f011 011f 	ands.w	r1, r1, #31
   224f2:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   224f6:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   224fa:	d108      	bne.n	2250e <rshift+0x2e>
   224fc:	4629      	mov	r1, r5
   224fe:	42b2      	cmp	r2, r6
   22500:	460b      	mov	r3, r1
   22502:	d210      	bcs.n	22526 <rshift+0x46>
   22504:	f852 3b04 	ldr.w	r3, [r2], #4
   22508:	f841 3b04 	str.w	r3, [r1], #4
   2250c:	e7f7      	b.n	224fe <rshift+0x1e>
   2250e:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   22512:	462b      	mov	r3, r5
   22514:	f1c1 0e20 	rsb	lr, r1, #32
   22518:	3204      	adds	r2, #4
   2251a:	40cc      	lsrs	r4, r1
   2251c:	42b2      	cmp	r2, r6
   2251e:	d308      	bcc.n	22532 <rshift+0x52>
   22520:	601c      	str	r4, [r3, #0]
   22522:	b104      	cbz	r4, 22526 <rshift+0x46>
   22524:	3304      	adds	r3, #4
   22526:	1b5b      	subs	r3, r3, r5
   22528:	109b      	asrs	r3, r3, #2
   2252a:	6103      	str	r3, [r0, #16]
   2252c:	b903      	cbnz	r3, 22530 <rshift+0x50>
   2252e:	6143      	str	r3, [r0, #20]
   22530:	bdf0      	pop	{r4, r5, r6, r7, pc}
   22532:	6817      	ldr	r7, [r2, #0]
   22534:	fa07 f70e 	lsl.w	r7, r7, lr
   22538:	433c      	orrs	r4, r7
   2253a:	f843 4b04 	str.w	r4, [r3], #4
   2253e:	f852 4b04 	ldr.w	r4, [r2], #4
   22542:	40cc      	lsrs	r4, r1
   22544:	e7ea      	b.n	2251c <rshift+0x3c>
   22546:	462b      	mov	r3, r5
   22548:	e7ed      	b.n	22526 <rshift+0x46>

0002254a <__hexdig_fun>:
__hexdig_fun():
   2254a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   2254e:	2b09      	cmp	r3, #9
   22550:	d802      	bhi.n	22558 <__hexdig_fun+0xe>
   22552:	3820      	subs	r0, #32
   22554:	b2c0      	uxtb	r0, r0
   22556:	4770      	bx	lr
   22558:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   2255c:	2b05      	cmp	r3, #5
   2255e:	d801      	bhi.n	22564 <__hexdig_fun+0x1a>
   22560:	3847      	subs	r0, #71	; 0x47
   22562:	e7f7      	b.n	22554 <__hexdig_fun+0xa>
   22564:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   22568:	2b05      	cmp	r3, #5
   2256a:	d801      	bhi.n	22570 <__hexdig_fun+0x26>
   2256c:	3827      	subs	r0, #39	; 0x27
   2256e:	e7f1      	b.n	22554 <__hexdig_fun+0xa>
   22570:	2000      	movs	r0, #0
   22572:	4770      	bx	lr

00022574 <__gethex>:
__gethex():
   22574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22578:	b08b      	sub	sp, #44	; 0x2c
   2257a:	9002      	str	r0, [sp, #8]
   2257c:	9816      	ldr	r0, [sp, #88]	; 0x58
   2257e:	468a      	mov	sl, r1
   22580:	4690      	mov	r8, r2
   22582:	9306      	str	r3, [sp, #24]
   22584:	f000 fbd0 	bl	22d28 <__localeconv_l>
   22588:	6803      	ldr	r3, [r0, #0]
   2258a:	f04f 0b00 	mov.w	fp, #0
   2258e:	4618      	mov	r0, r3
   22590:	9303      	str	r3, [sp, #12]
   22592:	f7fd fd73 	bl	2007c <strlen>
   22596:	9b03      	ldr	r3, [sp, #12]
   22598:	9001      	str	r0, [sp, #4]
   2259a:	4403      	add	r3, r0
   2259c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   225a0:	9307      	str	r3, [sp, #28]
   225a2:	f8da 3000 	ldr.w	r3, [sl]
   225a6:	3302      	adds	r3, #2
   225a8:	461f      	mov	r7, r3
   225aa:	f813 0b01 	ldrb.w	r0, [r3], #1
   225ae:	2830      	cmp	r0, #48	; 0x30
   225b0:	d06c      	beq.n	2268c <__gethex+0x118>
   225b2:	f7ff ffca 	bl	2254a <__hexdig_fun>
   225b6:	4604      	mov	r4, r0
   225b8:	2800      	cmp	r0, #0
   225ba:	d16a      	bne.n	22692 <__gethex+0x11e>
   225bc:	9a01      	ldr	r2, [sp, #4]
   225be:	9903      	ldr	r1, [sp, #12]
   225c0:	4638      	mov	r0, r7
   225c2:	f7fd fd8a 	bl	200da <strncmp>
   225c6:	2800      	cmp	r0, #0
   225c8:	d166      	bne.n	22698 <__gethex+0x124>
   225ca:	9b01      	ldr	r3, [sp, #4]
   225cc:	5cf8      	ldrb	r0, [r7, r3]
   225ce:	18fe      	adds	r6, r7, r3
   225d0:	f7ff ffbb 	bl	2254a <__hexdig_fun>
   225d4:	2800      	cmp	r0, #0
   225d6:	d062      	beq.n	2269e <__gethex+0x12a>
   225d8:	4633      	mov	r3, r6
   225da:	7818      	ldrb	r0, [r3, #0]
   225dc:	461f      	mov	r7, r3
   225de:	2830      	cmp	r0, #48	; 0x30
   225e0:	f103 0301 	add.w	r3, r3, #1
   225e4:	d0f9      	beq.n	225da <__gethex+0x66>
   225e6:	f7ff ffb0 	bl	2254a <__hexdig_fun>
   225ea:	fab0 f580 	clz	r5, r0
   225ee:	4634      	mov	r4, r6
   225f0:	f04f 0b01 	mov.w	fp, #1
   225f4:	096d      	lsrs	r5, r5, #5
   225f6:	463a      	mov	r2, r7
   225f8:	4616      	mov	r6, r2
   225fa:	7830      	ldrb	r0, [r6, #0]
   225fc:	3201      	adds	r2, #1
   225fe:	f7ff ffa4 	bl	2254a <__hexdig_fun>
   22602:	2800      	cmp	r0, #0
   22604:	d1f8      	bne.n	225f8 <__gethex+0x84>
   22606:	9a01      	ldr	r2, [sp, #4]
   22608:	9903      	ldr	r1, [sp, #12]
   2260a:	4630      	mov	r0, r6
   2260c:	f7fd fd65 	bl	200da <strncmp>
   22610:	b950      	cbnz	r0, 22628 <__gethex+0xb4>
   22612:	b954      	cbnz	r4, 2262a <__gethex+0xb6>
   22614:	9b01      	ldr	r3, [sp, #4]
   22616:	18f4      	adds	r4, r6, r3
   22618:	4622      	mov	r2, r4
   2261a:	4616      	mov	r6, r2
   2261c:	7830      	ldrb	r0, [r6, #0]
   2261e:	3201      	adds	r2, #1
   22620:	f7ff ff93 	bl	2254a <__hexdig_fun>
   22624:	2800      	cmp	r0, #0
   22626:	d1f8      	bne.n	2261a <__gethex+0xa6>
   22628:	b10c      	cbz	r4, 2262e <__gethex+0xba>
   2262a:	1ba4      	subs	r4, r4, r6
   2262c:	00a4      	lsls	r4, r4, #2
   2262e:	7833      	ldrb	r3, [r6, #0]
   22630:	2b50      	cmp	r3, #80	; 0x50
   22632:	d001      	beq.n	22638 <__gethex+0xc4>
   22634:	2b70      	cmp	r3, #112	; 0x70
   22636:	d140      	bne.n	226ba <__gethex+0x146>
   22638:	7873      	ldrb	r3, [r6, #1]
   2263a:	2b2b      	cmp	r3, #43	; 0x2b
   2263c:	d035      	beq.n	226aa <__gethex+0x136>
   2263e:	2b2d      	cmp	r3, #45	; 0x2d
   22640:	d02f      	beq.n	226a2 <__gethex+0x12e>
   22642:	f04f 0900 	mov.w	r9, #0
   22646:	1c71      	adds	r1, r6, #1
   22648:	7808      	ldrb	r0, [r1, #0]
   2264a:	f7ff ff7e 	bl	2254a <__hexdig_fun>
   2264e:	1e43      	subs	r3, r0, #1
   22650:	b2db      	uxtb	r3, r3
   22652:	2b18      	cmp	r3, #24
   22654:	d831      	bhi.n	226ba <__gethex+0x146>
   22656:	f1a0 0210 	sub.w	r2, r0, #16
   2265a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   2265e:	f7ff ff74 	bl	2254a <__hexdig_fun>
   22662:	1e43      	subs	r3, r0, #1
   22664:	b2db      	uxtb	r3, r3
   22666:	2b18      	cmp	r3, #24
   22668:	d922      	bls.n	226b0 <__gethex+0x13c>
   2266a:	f1b9 0f00 	cmp.w	r9, #0
   2266e:	d000      	beq.n	22672 <__gethex+0xfe>
   22670:	4252      	negs	r2, r2
   22672:	4414      	add	r4, r2
   22674:	f8ca 1000 	str.w	r1, [sl]
   22678:	b30d      	cbz	r5, 226be <__gethex+0x14a>
   2267a:	f1bb 0f00 	cmp.w	fp, #0
   2267e:	bf14      	ite	ne
   22680:	2700      	movne	r7, #0
   22682:	2706      	moveq	r7, #6
   22684:	4638      	mov	r0, r7
   22686:	b00b      	add	sp, #44	; 0x2c
   22688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2268c:	f10b 0b01 	add.w	fp, fp, #1
   22690:	e78a      	b.n	225a8 <__gethex+0x34>
   22692:	2500      	movs	r5, #0
   22694:	462c      	mov	r4, r5
   22696:	e7ae      	b.n	225f6 <__gethex+0x82>
   22698:	463e      	mov	r6, r7
   2269a:	2501      	movs	r5, #1
   2269c:	e7c7      	b.n	2262e <__gethex+0xba>
   2269e:	4604      	mov	r4, r0
   226a0:	e7fb      	b.n	2269a <__gethex+0x126>
   226a2:	f04f 0901 	mov.w	r9, #1
   226a6:	1cb1      	adds	r1, r6, #2
   226a8:	e7ce      	b.n	22648 <__gethex+0xd4>
   226aa:	f04f 0900 	mov.w	r9, #0
   226ae:	e7fa      	b.n	226a6 <__gethex+0x132>
   226b0:	230a      	movs	r3, #10
   226b2:	fb03 0202 	mla	r2, r3, r2, r0
   226b6:	3a10      	subs	r2, #16
   226b8:	e7cf      	b.n	2265a <__gethex+0xe6>
   226ba:	4631      	mov	r1, r6
   226bc:	e7da      	b.n	22674 <__gethex+0x100>
   226be:	4629      	mov	r1, r5
   226c0:	1bf3      	subs	r3, r6, r7
   226c2:	3b01      	subs	r3, #1
   226c4:	2b07      	cmp	r3, #7
   226c6:	dc49      	bgt.n	2275c <__gethex+0x1e8>
   226c8:	9802      	ldr	r0, [sp, #8]
   226ca:	f000 fb4f 	bl	22d6c <_Balloc>
   226ce:	f04f 0b00 	mov.w	fp, #0
   226d2:	4605      	mov	r5, r0
   226d4:	46da      	mov	sl, fp
   226d6:	9b01      	ldr	r3, [sp, #4]
   226d8:	f100 0914 	add.w	r9, r0, #20
   226dc:	f1c3 0301 	rsb	r3, r3, #1
   226e0:	f8cd 9010 	str.w	r9, [sp, #16]
   226e4:	9308      	str	r3, [sp, #32]
   226e6:	42b7      	cmp	r7, r6
   226e8:	d33b      	bcc.n	22762 <__gethex+0x1ee>
   226ea:	9804      	ldr	r0, [sp, #16]
   226ec:	f840 ab04 	str.w	sl, [r0], #4
   226f0:	eba0 0009 	sub.w	r0, r0, r9
   226f4:	1080      	asrs	r0, r0, #2
   226f6:	6128      	str	r0, [r5, #16]
   226f8:	0147      	lsls	r7, r0, #5
   226fa:	4650      	mov	r0, sl
   226fc:	f000 fbfa 	bl	22ef4 <__hi0bits>
   22700:	f8d8 6000 	ldr.w	r6, [r8]
   22704:	1a3f      	subs	r7, r7, r0
   22706:	42b7      	cmp	r7, r6
   22708:	dd64      	ble.n	227d4 <__gethex+0x260>
   2270a:	1bbf      	subs	r7, r7, r6
   2270c:	4639      	mov	r1, r7
   2270e:	4628      	mov	r0, r5
   22710:	f000 fef3 	bl	234fa <__any_on>
   22714:	4682      	mov	sl, r0
   22716:	b178      	cbz	r0, 22738 <__gethex+0x1c4>
   22718:	f04f 0a01 	mov.w	sl, #1
   2271c:	1e7b      	subs	r3, r7, #1
   2271e:	1159      	asrs	r1, r3, #5
   22720:	f003 021f 	and.w	r2, r3, #31
   22724:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   22728:	fa0a f202 	lsl.w	r2, sl, r2
   2272c:	420a      	tst	r2, r1
   2272e:	d003      	beq.n	22738 <__gethex+0x1c4>
   22730:	4553      	cmp	r3, sl
   22732:	dc46      	bgt.n	227c2 <__gethex+0x24e>
   22734:	f04f 0a02 	mov.w	sl, #2
   22738:	4639      	mov	r1, r7
   2273a:	4628      	mov	r0, r5
   2273c:	f7ff fed0 	bl	224e0 <rshift>
   22740:	443c      	add	r4, r7
   22742:	f8d8 3008 	ldr.w	r3, [r8, #8]
   22746:	429c      	cmp	r4, r3
   22748:	dd52      	ble.n	227f0 <__gethex+0x27c>
   2274a:	4629      	mov	r1, r5
   2274c:	9802      	ldr	r0, [sp, #8]
   2274e:	f000 fb41 	bl	22dd4 <_Bfree>
   22752:	2300      	movs	r3, #0
   22754:	9a14      	ldr	r2, [sp, #80]	; 0x50
   22756:	27a3      	movs	r7, #163	; 0xa3
   22758:	6013      	str	r3, [r2, #0]
   2275a:	e793      	b.n	22684 <__gethex+0x110>
   2275c:	3101      	adds	r1, #1
   2275e:	105b      	asrs	r3, r3, #1
   22760:	e7b0      	b.n	226c4 <__gethex+0x150>
   22762:	1e73      	subs	r3, r6, #1
   22764:	9305      	str	r3, [sp, #20]
   22766:	9a07      	ldr	r2, [sp, #28]
   22768:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   2276c:	4293      	cmp	r3, r2
   2276e:	d018      	beq.n	227a2 <__gethex+0x22e>
   22770:	f1bb 0f20 	cmp.w	fp, #32
   22774:	d107      	bne.n	22786 <__gethex+0x212>
   22776:	9b04      	ldr	r3, [sp, #16]
   22778:	f8c3 a000 	str.w	sl, [r3]
   2277c:	f04f 0a00 	mov.w	sl, #0
   22780:	46d3      	mov	fp, sl
   22782:	3304      	adds	r3, #4
   22784:	9304      	str	r3, [sp, #16]
   22786:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   2278a:	f7ff fede 	bl	2254a <__hexdig_fun>
   2278e:	f000 000f 	and.w	r0, r0, #15
   22792:	fa00 f00b 	lsl.w	r0, r0, fp
   22796:	ea4a 0a00 	orr.w	sl, sl, r0
   2279a:	f10b 0b04 	add.w	fp, fp, #4
   2279e:	9b05      	ldr	r3, [sp, #20]
   227a0:	e00d      	b.n	227be <__gethex+0x24a>
   227a2:	9b05      	ldr	r3, [sp, #20]
   227a4:	9a08      	ldr	r2, [sp, #32]
   227a6:	4413      	add	r3, r2
   227a8:	429f      	cmp	r7, r3
   227aa:	d8e1      	bhi.n	22770 <__gethex+0x1fc>
   227ac:	4618      	mov	r0, r3
   227ae:	9a01      	ldr	r2, [sp, #4]
   227b0:	9903      	ldr	r1, [sp, #12]
   227b2:	9309      	str	r3, [sp, #36]	; 0x24
   227b4:	f7fd fc91 	bl	200da <strncmp>
   227b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   227ba:	2800      	cmp	r0, #0
   227bc:	d1d8      	bne.n	22770 <__gethex+0x1fc>
   227be:	461e      	mov	r6, r3
   227c0:	e791      	b.n	226e6 <__gethex+0x172>
   227c2:	1eb9      	subs	r1, r7, #2
   227c4:	4628      	mov	r0, r5
   227c6:	f000 fe98 	bl	234fa <__any_on>
   227ca:	2800      	cmp	r0, #0
   227cc:	d0b2      	beq.n	22734 <__gethex+0x1c0>
   227ce:	f04f 0a03 	mov.w	sl, #3
   227d2:	e7b1      	b.n	22738 <__gethex+0x1c4>
   227d4:	da09      	bge.n	227ea <__gethex+0x276>
   227d6:	1bf7      	subs	r7, r6, r7
   227d8:	4629      	mov	r1, r5
   227da:	463a      	mov	r2, r7
   227dc:	9802      	ldr	r0, [sp, #8]
   227de:	f000 fcbb 	bl	23158 <__lshift>
   227e2:	4605      	mov	r5, r0
   227e4:	1be4      	subs	r4, r4, r7
   227e6:	f100 0914 	add.w	r9, r0, #20
   227ea:	f04f 0a00 	mov.w	sl, #0
   227ee:	e7a8      	b.n	22742 <__gethex+0x1ce>
   227f0:	f8d8 0004 	ldr.w	r0, [r8, #4]
   227f4:	4284      	cmp	r4, r0
   227f6:	da6b      	bge.n	228d0 <__gethex+0x35c>
   227f8:	1b04      	subs	r4, r0, r4
   227fa:	42a6      	cmp	r6, r4
   227fc:	dc2e      	bgt.n	2285c <__gethex+0x2e8>
   227fe:	f8d8 300c 	ldr.w	r3, [r8, #12]
   22802:	2b02      	cmp	r3, #2
   22804:	d022      	beq.n	2284c <__gethex+0x2d8>
   22806:	2b03      	cmp	r3, #3
   22808:	d024      	beq.n	22854 <__gethex+0x2e0>
   2280a:	2b01      	cmp	r3, #1
   2280c:	d115      	bne.n	2283a <__gethex+0x2c6>
   2280e:	42a6      	cmp	r6, r4
   22810:	d113      	bne.n	2283a <__gethex+0x2c6>
   22812:	2e01      	cmp	r6, #1
   22814:	dc0b      	bgt.n	2282e <__gethex+0x2ba>
   22816:	f8d8 3004 	ldr.w	r3, [r8, #4]
   2281a:	9a06      	ldr	r2, [sp, #24]
   2281c:	2762      	movs	r7, #98	; 0x62
   2281e:	6013      	str	r3, [r2, #0]
   22820:	2301      	movs	r3, #1
   22822:	612b      	str	r3, [r5, #16]
   22824:	f8c9 3000 	str.w	r3, [r9]
   22828:	9b14      	ldr	r3, [sp, #80]	; 0x50
   2282a:	601d      	str	r5, [r3, #0]
   2282c:	e72a      	b.n	22684 <__gethex+0x110>
   2282e:	1e71      	subs	r1, r6, #1
   22830:	4628      	mov	r0, r5
   22832:	f000 fe62 	bl	234fa <__any_on>
   22836:	2800      	cmp	r0, #0
   22838:	d1ed      	bne.n	22816 <__gethex+0x2a2>
   2283a:	4629      	mov	r1, r5
   2283c:	9802      	ldr	r0, [sp, #8]
   2283e:	f000 fac9 	bl	22dd4 <_Bfree>
   22842:	2300      	movs	r3, #0
   22844:	9a14      	ldr	r2, [sp, #80]	; 0x50
   22846:	2750      	movs	r7, #80	; 0x50
   22848:	6013      	str	r3, [r2, #0]
   2284a:	e71b      	b.n	22684 <__gethex+0x110>
   2284c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2284e:	2b00      	cmp	r3, #0
   22850:	d0e1      	beq.n	22816 <__gethex+0x2a2>
   22852:	e7f2      	b.n	2283a <__gethex+0x2c6>
   22854:	9b15      	ldr	r3, [sp, #84]	; 0x54
   22856:	2b00      	cmp	r3, #0
   22858:	d1dd      	bne.n	22816 <__gethex+0x2a2>
   2285a:	e7ee      	b.n	2283a <__gethex+0x2c6>
   2285c:	1e67      	subs	r7, r4, #1
   2285e:	f1ba 0f00 	cmp.w	sl, #0
   22862:	d132      	bne.n	228ca <__gethex+0x356>
   22864:	b127      	cbz	r7, 22870 <__gethex+0x2fc>
   22866:	4639      	mov	r1, r7
   22868:	4628      	mov	r0, r5
   2286a:	f000 fe46 	bl	234fa <__any_on>
   2286e:	4682      	mov	sl, r0
   22870:	2301      	movs	r3, #1
   22872:	117a      	asrs	r2, r7, #5
   22874:	f007 071f 	and.w	r7, r7, #31
   22878:	fa03 f707 	lsl.w	r7, r3, r7
   2287c:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   22880:	4621      	mov	r1, r4
   22882:	421f      	tst	r7, r3
   22884:	f04f 0702 	mov.w	r7, #2
   22888:	4628      	mov	r0, r5
   2288a:	bf18      	it	ne
   2288c:	f04a 0a02 	orrne.w	sl, sl, #2
   22890:	1b36      	subs	r6, r6, r4
   22892:	f7ff fe25 	bl	224e0 <rshift>
   22896:	f8d8 4004 	ldr.w	r4, [r8, #4]
   2289a:	f1ba 0f00 	cmp.w	sl, #0
   2289e:	d045      	beq.n	2292c <__gethex+0x3b8>
   228a0:	f8d8 300c 	ldr.w	r3, [r8, #12]
   228a4:	2b02      	cmp	r3, #2
   228a6:	d015      	beq.n	228d4 <__gethex+0x360>
   228a8:	2b03      	cmp	r3, #3
   228aa:	d017      	beq.n	228dc <__gethex+0x368>
   228ac:	2b01      	cmp	r3, #1
   228ae:	d109      	bne.n	228c4 <__gethex+0x350>
   228b0:	f01a 0f02 	tst.w	sl, #2
   228b4:	d006      	beq.n	228c4 <__gethex+0x350>
   228b6:	f8d9 3000 	ldr.w	r3, [r9]
   228ba:	ea4a 0a03 	orr.w	sl, sl, r3
   228be:	f01a 0f01 	tst.w	sl, #1
   228c2:	d10e      	bne.n	228e2 <__gethex+0x36e>
   228c4:	f047 0710 	orr.w	r7, r7, #16
   228c8:	e030      	b.n	2292c <__gethex+0x3b8>
   228ca:	f04f 0a01 	mov.w	sl, #1
   228ce:	e7cf      	b.n	22870 <__gethex+0x2fc>
   228d0:	2701      	movs	r7, #1
   228d2:	e7e2      	b.n	2289a <__gethex+0x326>
   228d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   228d6:	f1c3 0301 	rsb	r3, r3, #1
   228da:	9315      	str	r3, [sp, #84]	; 0x54
   228dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   228de:	2b00      	cmp	r3, #0
   228e0:	d0f0      	beq.n	228c4 <__gethex+0x350>
   228e2:	2000      	movs	r0, #0
   228e4:	f8d5 9010 	ldr.w	r9, [r5, #16]
   228e8:	f105 0314 	add.w	r3, r5, #20
   228ec:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   228f0:	eb03 010a 	add.w	r1, r3, sl
   228f4:	681a      	ldr	r2, [r3, #0]
   228f6:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   228fa:	d01c      	beq.n	22936 <__gethex+0x3c2>
   228fc:	3201      	adds	r2, #1
   228fe:	601a      	str	r2, [r3, #0]
   22900:	2f02      	cmp	r7, #2
   22902:	f105 0314 	add.w	r3, r5, #20
   22906:	d138      	bne.n	2297a <__gethex+0x406>
   22908:	f8d8 2000 	ldr.w	r2, [r8]
   2290c:	3a01      	subs	r2, #1
   2290e:	4296      	cmp	r6, r2
   22910:	d10a      	bne.n	22928 <__gethex+0x3b4>
   22912:	2201      	movs	r2, #1
   22914:	1171      	asrs	r1, r6, #5
   22916:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   2291a:	f006 061f 	and.w	r6, r6, #31
   2291e:	fa02 f606 	lsl.w	r6, r2, r6
   22922:	421e      	tst	r6, r3
   22924:	bf18      	it	ne
   22926:	4617      	movne	r7, r2
   22928:	f047 0720 	orr.w	r7, r7, #32
   2292c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   2292e:	601d      	str	r5, [r3, #0]
   22930:	9b06      	ldr	r3, [sp, #24]
   22932:	601c      	str	r4, [r3, #0]
   22934:	e6a6      	b.n	22684 <__gethex+0x110>
   22936:	f843 0b04 	str.w	r0, [r3], #4
   2293a:	4299      	cmp	r1, r3
   2293c:	d8da      	bhi.n	228f4 <__gethex+0x380>
   2293e:	68ab      	ldr	r3, [r5, #8]
   22940:	4599      	cmp	r9, r3
   22942:	db12      	blt.n	2296a <__gethex+0x3f6>
   22944:	6869      	ldr	r1, [r5, #4]
   22946:	9802      	ldr	r0, [sp, #8]
   22948:	3101      	adds	r1, #1
   2294a:	f000 fa0f 	bl	22d6c <_Balloc>
   2294e:	4683      	mov	fp, r0
   22950:	692a      	ldr	r2, [r5, #16]
   22952:	f105 010c 	add.w	r1, r5, #12
   22956:	3202      	adds	r2, #2
   22958:	0092      	lsls	r2, r2, #2
   2295a:	300c      	adds	r0, #12
   2295c:	f7fb fde3 	bl	1e526 <memcpy>
   22960:	4629      	mov	r1, r5
   22962:	9802      	ldr	r0, [sp, #8]
   22964:	f000 fa36 	bl	22dd4 <_Bfree>
   22968:	465d      	mov	r5, fp
   2296a:	692b      	ldr	r3, [r5, #16]
   2296c:	1c5a      	adds	r2, r3, #1
   2296e:	612a      	str	r2, [r5, #16]
   22970:	2201      	movs	r2, #1
   22972:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   22976:	615a      	str	r2, [r3, #20]
   22978:	e7c2      	b.n	22900 <__gethex+0x38c>
   2297a:	692a      	ldr	r2, [r5, #16]
   2297c:	4591      	cmp	r9, r2
   2297e:	da0b      	bge.n	22998 <__gethex+0x424>
   22980:	2101      	movs	r1, #1
   22982:	4628      	mov	r0, r5
   22984:	f7ff fdac 	bl	224e0 <rshift>
   22988:	f8d8 3008 	ldr.w	r3, [r8, #8]
   2298c:	3401      	adds	r4, #1
   2298e:	429c      	cmp	r4, r3
   22990:	f73f aedb 	bgt.w	2274a <__gethex+0x1d6>
   22994:	2701      	movs	r7, #1
   22996:	e7c7      	b.n	22928 <__gethex+0x3b4>
   22998:	f016 061f 	ands.w	r6, r6, #31
   2299c:	d0fa      	beq.n	22994 <__gethex+0x420>
   2299e:	449a      	add	sl, r3
   229a0:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   229a4:	f000 faa6 	bl	22ef4 <__hi0bits>
   229a8:	f1c6 0620 	rsb	r6, r6, #32
   229ac:	42b0      	cmp	r0, r6
   229ae:	dbe7      	blt.n	22980 <__gethex+0x40c>
   229b0:	e7f0      	b.n	22994 <__gethex+0x420>

000229b2 <L_shift>:
L_shift():
   229b2:	f1c2 0208 	rsb	r2, r2, #8
   229b6:	0092      	lsls	r2, r2, #2
   229b8:	b570      	push	{r4, r5, r6, lr}
   229ba:	f1c2 0620 	rsb	r6, r2, #32
   229be:	6843      	ldr	r3, [r0, #4]
   229c0:	6804      	ldr	r4, [r0, #0]
   229c2:	fa03 f506 	lsl.w	r5, r3, r6
   229c6:	432c      	orrs	r4, r5
   229c8:	40d3      	lsrs	r3, r2
   229ca:	6004      	str	r4, [r0, #0]
   229cc:	f840 3f04 	str.w	r3, [r0, #4]!
   229d0:	4288      	cmp	r0, r1
   229d2:	d3f4      	bcc.n	229be <L_shift+0xc>
   229d4:	bd70      	pop	{r4, r5, r6, pc}

000229d6 <__match>:
__match():
   229d6:	b530      	push	{r4, r5, lr}
   229d8:	6803      	ldr	r3, [r0, #0]
   229da:	f811 4b01 	ldrb.w	r4, [r1], #1
   229de:	3301      	adds	r3, #1
   229e0:	b914      	cbnz	r4, 229e8 <__match+0x12>
   229e2:	6003      	str	r3, [r0, #0]
   229e4:	2001      	movs	r0, #1
   229e6:	bd30      	pop	{r4, r5, pc}
   229e8:	781a      	ldrb	r2, [r3, #0]
   229ea:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   229ee:	2d19      	cmp	r5, #25
   229f0:	bf98      	it	ls
   229f2:	3220      	addls	r2, #32
   229f4:	42a2      	cmp	r2, r4
   229f6:	d0f0      	beq.n	229da <__match+0x4>
   229f8:	2000      	movs	r0, #0
   229fa:	bd30      	pop	{r4, r5, pc}

000229fc <__hexnan>:
__hexnan():
   229fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a00:	2500      	movs	r5, #0
   22a02:	680b      	ldr	r3, [r1, #0]
   22a04:	4682      	mov	sl, r0
   22a06:	115f      	asrs	r7, r3, #5
   22a08:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   22a0c:	f013 031f 	ands.w	r3, r3, #31
   22a10:	bf18      	it	ne
   22a12:	3704      	addne	r7, #4
   22a14:	1f3e      	subs	r6, r7, #4
   22a16:	4690      	mov	r8, r2
   22a18:	46b1      	mov	r9, r6
   22a1a:	4634      	mov	r4, r6
   22a1c:	46ab      	mov	fp, r5
   22a1e:	b087      	sub	sp, #28
   22a20:	6801      	ldr	r1, [r0, #0]
   22a22:	9302      	str	r3, [sp, #8]
   22a24:	f847 5c04 	str.w	r5, [r7, #-4]
   22a28:	9501      	str	r5, [sp, #4]
   22a2a:	784a      	ldrb	r2, [r1, #1]
   22a2c:	1c4b      	adds	r3, r1, #1
   22a2e:	9303      	str	r3, [sp, #12]
   22a30:	b342      	cbz	r2, 22a84 <__hexnan+0x88>
   22a32:	4610      	mov	r0, r2
   22a34:	9105      	str	r1, [sp, #20]
   22a36:	9204      	str	r2, [sp, #16]
   22a38:	f7ff fd87 	bl	2254a <__hexdig_fun>
   22a3c:	2800      	cmp	r0, #0
   22a3e:	d143      	bne.n	22ac8 <__hexnan+0xcc>
   22a40:	9a04      	ldr	r2, [sp, #16]
   22a42:	9905      	ldr	r1, [sp, #20]
   22a44:	2a20      	cmp	r2, #32
   22a46:	d818      	bhi.n	22a7a <__hexnan+0x7e>
   22a48:	9b01      	ldr	r3, [sp, #4]
   22a4a:	459b      	cmp	fp, r3
   22a4c:	dd13      	ble.n	22a76 <__hexnan+0x7a>
   22a4e:	454c      	cmp	r4, r9
   22a50:	d206      	bcs.n	22a60 <__hexnan+0x64>
   22a52:	2d07      	cmp	r5, #7
   22a54:	dc04      	bgt.n	22a60 <__hexnan+0x64>
   22a56:	462a      	mov	r2, r5
   22a58:	4649      	mov	r1, r9
   22a5a:	4620      	mov	r0, r4
   22a5c:	f7ff ffa9 	bl	229b2 <L_shift>
   22a60:	4544      	cmp	r4, r8
   22a62:	d944      	bls.n	22aee <__hexnan+0xf2>
   22a64:	2300      	movs	r3, #0
   22a66:	f1a4 0904 	sub.w	r9, r4, #4
   22a6a:	f844 3c04 	str.w	r3, [r4, #-4]
   22a6e:	461d      	mov	r5, r3
   22a70:	464c      	mov	r4, r9
   22a72:	f8cd b004 	str.w	fp, [sp, #4]
   22a76:	9903      	ldr	r1, [sp, #12]
   22a78:	e7d7      	b.n	22a2a <__hexnan+0x2e>
   22a7a:	2a29      	cmp	r2, #41	; 0x29
   22a7c:	d14a      	bne.n	22b14 <__hexnan+0x118>
   22a7e:	3102      	adds	r1, #2
   22a80:	f8ca 1000 	str.w	r1, [sl]
   22a84:	f1bb 0f00 	cmp.w	fp, #0
   22a88:	d044      	beq.n	22b14 <__hexnan+0x118>
   22a8a:	454c      	cmp	r4, r9
   22a8c:	d206      	bcs.n	22a9c <__hexnan+0xa0>
   22a8e:	2d07      	cmp	r5, #7
   22a90:	dc04      	bgt.n	22a9c <__hexnan+0xa0>
   22a92:	462a      	mov	r2, r5
   22a94:	4649      	mov	r1, r9
   22a96:	4620      	mov	r0, r4
   22a98:	f7ff ff8b 	bl	229b2 <L_shift>
   22a9c:	4544      	cmp	r4, r8
   22a9e:	d928      	bls.n	22af2 <__hexnan+0xf6>
   22aa0:	4643      	mov	r3, r8
   22aa2:	f854 2b04 	ldr.w	r2, [r4], #4
   22aa6:	42a6      	cmp	r6, r4
   22aa8:	f843 2b04 	str.w	r2, [r3], #4
   22aac:	d2f9      	bcs.n	22aa2 <__hexnan+0xa6>
   22aae:	2200      	movs	r2, #0
   22ab0:	f843 2b04 	str.w	r2, [r3], #4
   22ab4:	429e      	cmp	r6, r3
   22ab6:	d2fb      	bcs.n	22ab0 <__hexnan+0xb4>
   22ab8:	6833      	ldr	r3, [r6, #0]
   22aba:	b91b      	cbnz	r3, 22ac4 <__hexnan+0xc8>
   22abc:	4546      	cmp	r6, r8
   22abe:	d127      	bne.n	22b10 <__hexnan+0x114>
   22ac0:	2301      	movs	r3, #1
   22ac2:	6033      	str	r3, [r6, #0]
   22ac4:	2005      	movs	r0, #5
   22ac6:	e026      	b.n	22b16 <__hexnan+0x11a>
   22ac8:	3501      	adds	r5, #1
   22aca:	2d08      	cmp	r5, #8
   22acc:	f10b 0b01 	add.w	fp, fp, #1
   22ad0:	dd06      	ble.n	22ae0 <__hexnan+0xe4>
   22ad2:	4544      	cmp	r4, r8
   22ad4:	d9cf      	bls.n	22a76 <__hexnan+0x7a>
   22ad6:	2300      	movs	r3, #0
   22ad8:	2501      	movs	r5, #1
   22ada:	f844 3c04 	str.w	r3, [r4, #-4]
   22ade:	3c04      	subs	r4, #4
   22ae0:	6822      	ldr	r2, [r4, #0]
   22ae2:	f000 000f 	and.w	r0, r0, #15
   22ae6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   22aea:	6020      	str	r0, [r4, #0]
   22aec:	e7c3      	b.n	22a76 <__hexnan+0x7a>
   22aee:	2508      	movs	r5, #8
   22af0:	e7c1      	b.n	22a76 <__hexnan+0x7a>
   22af2:	9b02      	ldr	r3, [sp, #8]
   22af4:	2b00      	cmp	r3, #0
   22af6:	d0df      	beq.n	22ab8 <__hexnan+0xbc>
   22af8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   22afc:	f1c3 0320 	rsb	r3, r3, #32
   22b00:	fa22 f303 	lsr.w	r3, r2, r3
   22b04:	f857 2c04 	ldr.w	r2, [r7, #-4]
   22b08:	401a      	ands	r2, r3
   22b0a:	f847 2c04 	str.w	r2, [r7, #-4]
   22b0e:	e7d3      	b.n	22ab8 <__hexnan+0xbc>
   22b10:	3e04      	subs	r6, #4
   22b12:	e7d1      	b.n	22ab8 <__hexnan+0xbc>
   22b14:	2004      	movs	r0, #4
   22b16:	b007      	add	sp, #28
   22b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022b1c <_findenv_r>:
_findenv_r():
   22b1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   22b20:	4606      	mov	r6, r0
   22b22:	468a      	mov	sl, r1
   22b24:	4617      	mov	r7, r2
   22b26:	f001 fdd3 	bl	246d0 <__env_lock>
   22b2a:	4b1b      	ldr	r3, [pc, #108]	; (22b98 <_findenv_r+0x7c>)
   22b2c:	f8d3 8000 	ldr.w	r8, [r3]
   22b30:	4699      	mov	r9, r3
   22b32:	f1b8 0f00 	cmp.w	r8, #0
   22b36:	d007      	beq.n	22b48 <_findenv_r+0x2c>
   22b38:	4654      	mov	r4, sl
   22b3a:	4623      	mov	r3, r4
   22b3c:	f813 2b01 	ldrb.w	r2, [r3], #1
   22b40:	b332      	cbz	r2, 22b90 <_findenv_r+0x74>
   22b42:	2a3d      	cmp	r2, #61	; 0x3d
   22b44:	461c      	mov	r4, r3
   22b46:	d1f8      	bne.n	22b3a <_findenv_r+0x1e>
   22b48:	4630      	mov	r0, r6
   22b4a:	f001 fdc2 	bl	246d2 <__env_unlock>
   22b4e:	2000      	movs	r0, #0
   22b50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   22b54:	f108 0804 	add.w	r8, r8, #4
   22b58:	f8d8 0000 	ldr.w	r0, [r8]
   22b5c:	2800      	cmp	r0, #0
   22b5e:	d0f3      	beq.n	22b48 <_findenv_r+0x2c>
   22b60:	4622      	mov	r2, r4
   22b62:	4651      	mov	r1, sl
   22b64:	f7fd fab9 	bl	200da <strncmp>
   22b68:	2800      	cmp	r0, #0
   22b6a:	d1f3      	bne.n	22b54 <_findenv_r+0x38>
   22b6c:	f8d8 3000 	ldr.w	r3, [r8]
   22b70:	191d      	adds	r5, r3, r4
   22b72:	5d1b      	ldrb	r3, [r3, r4]
   22b74:	2b3d      	cmp	r3, #61	; 0x3d
   22b76:	d1ed      	bne.n	22b54 <_findenv_r+0x38>
   22b78:	f8d9 3000 	ldr.w	r3, [r9]
   22b7c:	4630      	mov	r0, r6
   22b7e:	eba8 0303 	sub.w	r3, r8, r3
   22b82:	109b      	asrs	r3, r3, #2
   22b84:	603b      	str	r3, [r7, #0]
   22b86:	f001 fda4 	bl	246d2 <__env_unlock>
   22b8a:	1c68      	adds	r0, r5, #1
   22b8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   22b90:	eba4 040a 	sub.w	r4, r4, sl
   22b94:	e7e0      	b.n	22b58 <_findenv_r+0x3c>
   22b96:	bf00      	nop
   22b98:	2007c2f8 	.word	0x2007c2f8

00022b9c <_getenv_r>:
_getenv_r():
   22b9c:	b507      	push	{r0, r1, r2, lr}
   22b9e:	aa01      	add	r2, sp, #4
   22ba0:	f7ff ffbc 	bl	22b1c <_findenv_r>
   22ba4:	b003      	add	sp, #12
   22ba6:	f85d fb04 	ldr.w	pc, [sp], #4
   22baa:	Address 0x0000000000022baa is out of bounds.


00022bac <_gettimeofday_r>:
_gettimeofday_r():
   22bac:	b538      	push	{r3, r4, r5, lr}
   22bae:	2300      	movs	r3, #0
   22bb0:	4c06      	ldr	r4, [pc, #24]	; (22bcc <_gettimeofday_r+0x20>)
   22bb2:	4605      	mov	r5, r0
   22bb4:	4608      	mov	r0, r1
   22bb6:	4611      	mov	r1, r2
   22bb8:	6023      	str	r3, [r4, #0]
   22bba:	f7f4 f9bf 	bl	16f3c <_gettimeofday>
   22bbe:	1c43      	adds	r3, r0, #1
   22bc0:	d102      	bne.n	22bc8 <_gettimeofday_r+0x1c>
   22bc2:	6823      	ldr	r3, [r4, #0]
   22bc4:	b103      	cbz	r3, 22bc8 <_gettimeofday_r+0x1c>
   22bc6:	602b      	str	r3, [r5, #0]
   22bc8:	bd38      	pop	{r3, r4, r5, pc}
   22bca:	bf00      	nop
   22bcc:	2007c8ec 	.word	0x2007c8ec

00022bd0 <__gettzinfo>:
__gettzinfo():
   22bd0:	4800      	ldr	r0, [pc, #0]	; (22bd4 <__gettzinfo+0x4>)
   22bd2:	4770      	bx	lr
   22bd4:	2007c2b8 	.word	0x2007c2b8

00022bd8 <gmtime_r>:
gmtime_r():
   22bd8:	6802      	ldr	r2, [r0, #0]
   22bda:	4847      	ldr	r0, [pc, #284]	; (22cf8 <gmtime_r+0x120>)
   22bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
   22bde:	fb92 f3f0 	sdiv	r3, r2, r0
   22be2:	f44f 6461 	mov.w	r4, #3600	; 0xe10
   22be6:	fb00 2013 	mls	r0, r0, r3, r2
   22bea:	2800      	cmp	r0, #0
   22bec:	bfbc      	itt	lt
   22bee:	f500 30a8 	addlt.w	r0, r0, #86016	; 0x15000
   22bf2:	f500 70c0 	addlt.w	r0, r0, #384	; 0x180
   22bf6:	fb90 f2f4 	sdiv	r2, r0, r4
   22bfa:	fb04 0012 	mls	r0, r4, r2, r0
   22bfe:	f04f 043c 	mov.w	r4, #60	; 0x3c
   22c02:	608a      	str	r2, [r1, #8]
   22c04:	fb90 f2f4 	sdiv	r2, r0, r4
   22c08:	fb04 0012 	mls	r0, r4, r2, r0
   22c0c:	604a      	str	r2, [r1, #4]
   22c0e:	f04f 0207 	mov.w	r2, #7
   22c12:	f503 232f 	add.w	r3, r3, #716800	; 0xaf000
   22c16:	bfac      	ite	ge
   22c18:	f603 236c 	addwge	r3, r3, #2668	; 0xa6c
   22c1c:	f603 236b 	addwlt	r3, r3, #2667	; 0xa6b
   22c20:	6008      	str	r0, [r1, #0]
   22c22:	1cd8      	adds	r0, r3, #3
   22c24:	fb90 f2f2 	sdiv	r2, r0, r2
   22c28:	4c34      	ldr	r4, [pc, #208]	; (22cfc <gmtime_r+0x124>)
   22c2a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   22c2e:	fb93 f4f4 	sdiv	r4, r3, r4
   22c32:	1a82      	subs	r2, r0, r2
   22c34:	f648 60ac 	movw	r0, #36524	; 0x8eac
   22c38:	f240 57b4 	movw	r7, #1460	; 0x5b4
   22c3c:	618a      	str	r2, [r1, #24]
   22c3e:	4a30      	ldr	r2, [pc, #192]	; (22d00 <gmtime_r+0x128>)
   22c40:	f240 166d 	movw	r6, #365	; 0x16d
   22c44:	fb02 3304 	mla	r3, r2, r4, r3
   22c48:	fbb3 f0f0 	udiv	r0, r3, r0
   22c4c:	fbb3 f2f7 	udiv	r2, r3, r7
   22c50:	4418      	add	r0, r3
   22c52:	1a80      	subs	r0, r0, r2
   22c54:	4a2b      	ldr	r2, [pc, #172]	; (22d04 <gmtime_r+0x12c>)
   22c56:	fbb3 f2f2 	udiv	r2, r3, r2
   22c5a:	1a82      	subs	r2, r0, r2
   22c5c:	f648 6094 	movw	r0, #36500	; 0x8e94
   22c60:	fbb2 f0f0 	udiv	r0, r2, r0
   22c64:	fbb2 f5f6 	udiv	r5, r2, r6
   22c68:	fbb2 f2f7 	udiv	r2, r2, r7
   22c6c:	4403      	add	r3, r0
   22c6e:	2099      	movs	r0, #153	; 0x99
   22c70:	1a9a      	subs	r2, r3, r2
   22c72:	fb06 2315 	mls	r3, r6, r5, r2
   22c76:	eb03 0283 	add.w	r2, r3, r3, lsl #2
   22c7a:	3202      	adds	r2, #2
   22c7c:	fbb2 f2f0 	udiv	r2, r2, r0
   22c80:	2705      	movs	r7, #5
   22c82:	4350      	muls	r0, r2
   22c84:	3002      	adds	r0, #2
   22c86:	fbb0 f0f7 	udiv	r0, r0, r7
   22c8a:	2a0a      	cmp	r2, #10
   22c8c:	f103 0601 	add.w	r6, r3, #1
   22c90:	eba6 0000 	sub.w	r0, r6, r0
   22c94:	bf34      	ite	cc
   22c96:	2602      	movcc	r6, #2
   22c98:	f06f 0609 	mvncs.w	r6, #9
   22c9c:	4416      	add	r6, r2
   22c9e:	f44f 72c8 	mov.w	r2, #400	; 0x190
   22ca2:	fb02 5404 	mla	r4, r2, r4, r5
   22ca6:	2e01      	cmp	r6, #1
   22ca8:	bf98      	it	ls
   22caa:	3401      	addls	r4, #1
   22cac:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
   22cb0:	d30b      	bcc.n	22cca <gmtime_r+0xf2>
   22cb2:	f5a3 7399 	sub.w	r3, r3, #306	; 0x132
   22cb6:	61cb      	str	r3, [r1, #28]
   22cb8:	2300      	movs	r3, #0
   22cba:	f2a4 746c 	subw	r4, r4, #1900	; 0x76c
   22cbe:	60c8      	str	r0, [r1, #12]
   22cc0:	614c      	str	r4, [r1, #20]
   22cc2:	610e      	str	r6, [r1, #16]
   22cc4:	620b      	str	r3, [r1, #32]
   22cc6:	4608      	mov	r0, r1
   22cc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   22cca:	07aa      	lsls	r2, r5, #30
   22ccc:	d105      	bne.n	22cda <gmtime_r+0x102>
   22cce:	2764      	movs	r7, #100	; 0x64
   22cd0:	fbb5 f2f7 	udiv	r2, r5, r7
   22cd4:	fb07 5212 	mls	r2, r7, r2, r5
   22cd8:	b95a      	cbnz	r2, 22cf2 <gmtime_r+0x11a>
   22cda:	f44f 77c8 	mov.w	r7, #400	; 0x190
   22cde:	fbb5 f2f7 	udiv	r2, r5, r7
   22ce2:	fb07 5212 	mls	r2, r7, r2, r5
   22ce6:	fab2 f282 	clz	r2, r2
   22cea:	0952      	lsrs	r2, r2, #5
   22cec:	333b      	adds	r3, #59	; 0x3b
   22cee:	4413      	add	r3, r2
   22cf0:	e7e1      	b.n	22cb6 <gmtime_r+0xde>
   22cf2:	2201      	movs	r2, #1
   22cf4:	e7fa      	b.n	22cec <gmtime_r+0x114>
   22cf6:	bf00      	nop
   22cf8:	00015180 	.word	0x00015180
   22cfc:	00023ab1 	.word	0x00023ab1
   22d00:	fffdc54f 	.word	0xfffdc54f
   22d04:	00023ab0 	.word	0x00023ab0

00022d08 <_isatty_r>:
_isatty_r():
   22d08:	b538      	push	{r3, r4, r5, lr}
   22d0a:	2300      	movs	r3, #0
   22d0c:	4c05      	ldr	r4, [pc, #20]	; (22d24 <_isatty_r+0x1c>)
   22d0e:	4605      	mov	r5, r0
   22d10:	4608      	mov	r0, r1
   22d12:	6023      	str	r3, [r4, #0]
   22d14:	f7f4 fb96 	bl	17444 <_isatty>
   22d18:	1c43      	adds	r3, r0, #1
   22d1a:	d102      	bne.n	22d22 <_isatty_r+0x1a>
   22d1c:	6823      	ldr	r3, [r4, #0]
   22d1e:	b103      	cbz	r3, 22d22 <_isatty_r+0x1a>
   22d20:	602b      	str	r3, [r5, #0]
   22d22:	bd38      	pop	{r3, r4, r5, pc}
   22d24:	2007c8ec 	.word	0x2007c8ec

00022d28 <__localeconv_l>:
__localeconv_l():
   22d28:	30f0      	adds	r0, #240	; 0xf0
   22d2a:	4770      	bx	lr

00022d2c <_localeconv_r>:
_localeconv_r():
   22d2c:	4b04      	ldr	r3, [pc, #16]	; (22d40 <_localeconv_r+0x14>)
   22d2e:	681b      	ldr	r3, [r3, #0]
   22d30:	6a18      	ldr	r0, [r3, #32]
   22d32:	4b04      	ldr	r3, [pc, #16]	; (22d44 <_localeconv_r+0x18>)
   22d34:	2800      	cmp	r0, #0
   22d36:	bf08      	it	eq
   22d38:	4618      	moveq	r0, r3
   22d3a:	30f0      	adds	r0, #240	; 0xf0
   22d3c:	4770      	bx	lr
   22d3e:	bf00      	nop
   22d40:	2007c0e0 	.word	0x2007c0e0
   22d44:	2007c144 	.word	0x2007c144

00022d48 <_lseek_r>:
_lseek_r():
   22d48:	b538      	push	{r3, r4, r5, lr}
   22d4a:	4605      	mov	r5, r0
   22d4c:	4608      	mov	r0, r1
   22d4e:	4611      	mov	r1, r2
   22d50:	2200      	movs	r2, #0
   22d52:	4c05      	ldr	r4, [pc, #20]	; (22d68 <_lseek_r+0x20>)
   22d54:	6022      	str	r2, [r4, #0]
   22d56:	461a      	mov	r2, r3
   22d58:	f7f4 fa1a 	bl	17190 <_lseek>
   22d5c:	1c43      	adds	r3, r0, #1
   22d5e:	d102      	bne.n	22d66 <_lseek_r+0x1e>
   22d60:	6823      	ldr	r3, [r4, #0]
   22d62:	b103      	cbz	r3, 22d66 <_lseek_r+0x1e>
   22d64:	602b      	str	r3, [r5, #0]
   22d66:	bd38      	pop	{r3, r4, r5, pc}
   22d68:	2007c8ec 	.word	0x2007c8ec

00022d6c <_Balloc>:
_Balloc():
   22d6c:	b570      	push	{r4, r5, r6, lr}
   22d6e:	6a45      	ldr	r5, [r0, #36]	; 0x24
   22d70:	4604      	mov	r4, r0
   22d72:	460e      	mov	r6, r1
   22d74:	b93d      	cbnz	r5, 22d86 <_Balloc+0x1a>
   22d76:	2010      	movs	r0, #16
   22d78:	f7fb fb96 	bl	1e4a8 <malloc>
   22d7c:	6260      	str	r0, [r4, #36]	; 0x24
   22d7e:	6045      	str	r5, [r0, #4]
   22d80:	6085      	str	r5, [r0, #8]
   22d82:	6005      	str	r5, [r0, #0]
   22d84:	60c5      	str	r5, [r0, #12]
   22d86:	6a65      	ldr	r5, [r4, #36]	; 0x24
   22d88:	68eb      	ldr	r3, [r5, #12]
   22d8a:	b183      	cbz	r3, 22dae <_Balloc+0x42>
   22d8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22d8e:	68db      	ldr	r3, [r3, #12]
   22d90:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   22d94:	b9b8      	cbnz	r0, 22dc6 <_Balloc+0x5a>
   22d96:	2101      	movs	r1, #1
   22d98:	fa01 f506 	lsl.w	r5, r1, r6
   22d9c:	1d6a      	adds	r2, r5, #5
   22d9e:	0092      	lsls	r2, r2, #2
   22da0:	4620      	mov	r0, r4
   22da2:	f7fb fe53 	bl	1ea4c <_calloc_r>
   22da6:	b160      	cbz	r0, 22dc2 <_Balloc+0x56>
   22da8:	6046      	str	r6, [r0, #4]
   22daa:	6085      	str	r5, [r0, #8]
   22dac:	e00e      	b.n	22dcc <_Balloc+0x60>
   22dae:	2221      	movs	r2, #33	; 0x21
   22db0:	2104      	movs	r1, #4
   22db2:	4620      	mov	r0, r4
   22db4:	f7fb fe4a 	bl	1ea4c <_calloc_r>
   22db8:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22dba:	60e8      	str	r0, [r5, #12]
   22dbc:	68db      	ldr	r3, [r3, #12]
   22dbe:	2b00      	cmp	r3, #0
   22dc0:	d1e4      	bne.n	22d8c <_Balloc+0x20>
   22dc2:	2000      	movs	r0, #0
   22dc4:	bd70      	pop	{r4, r5, r6, pc}
   22dc6:	6802      	ldr	r2, [r0, #0]
   22dc8:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   22dcc:	2300      	movs	r3, #0
   22dce:	6103      	str	r3, [r0, #16]
   22dd0:	60c3      	str	r3, [r0, #12]
   22dd2:	bd70      	pop	{r4, r5, r6, pc}

00022dd4 <_Bfree>:
_Bfree():
   22dd4:	b570      	push	{r4, r5, r6, lr}
   22dd6:	6a44      	ldr	r4, [r0, #36]	; 0x24
   22dd8:	4606      	mov	r6, r0
   22dda:	460d      	mov	r5, r1
   22ddc:	b93c      	cbnz	r4, 22dee <_Bfree+0x1a>
   22dde:	2010      	movs	r0, #16
   22de0:	f7fb fb62 	bl	1e4a8 <malloc>
   22de4:	6270      	str	r0, [r6, #36]	; 0x24
   22de6:	6044      	str	r4, [r0, #4]
   22de8:	6084      	str	r4, [r0, #8]
   22dea:	6004      	str	r4, [r0, #0]
   22dec:	60c4      	str	r4, [r0, #12]
   22dee:	b13d      	cbz	r5, 22e00 <_Bfree+0x2c>
   22df0:	6a73      	ldr	r3, [r6, #36]	; 0x24
   22df2:	686a      	ldr	r2, [r5, #4]
   22df4:	68db      	ldr	r3, [r3, #12]
   22df6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   22dfa:	6029      	str	r1, [r5, #0]
   22dfc:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   22e00:	bd70      	pop	{r4, r5, r6, pc}

00022e02 <__multadd>:
__multadd():
   22e02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22e06:	461f      	mov	r7, r3
   22e08:	4606      	mov	r6, r0
   22e0a:	460c      	mov	r4, r1
   22e0c:	2300      	movs	r3, #0
   22e0e:	690d      	ldr	r5, [r1, #16]
   22e10:	f101 0e14 	add.w	lr, r1, #20
   22e14:	f8de 0000 	ldr.w	r0, [lr]
   22e18:	3301      	adds	r3, #1
   22e1a:	b281      	uxth	r1, r0
   22e1c:	fb02 7101 	mla	r1, r2, r1, r7
   22e20:	0c00      	lsrs	r0, r0, #16
   22e22:	0c0f      	lsrs	r7, r1, #16
   22e24:	fb02 7000 	mla	r0, r2, r0, r7
   22e28:	b289      	uxth	r1, r1
   22e2a:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   22e2e:	429d      	cmp	r5, r3
   22e30:	ea4f 4710 	mov.w	r7, r0, lsr #16
   22e34:	f84e 1b04 	str.w	r1, [lr], #4
   22e38:	dcec      	bgt.n	22e14 <__multadd+0x12>
   22e3a:	b1d7      	cbz	r7, 22e72 <__multadd+0x70>
   22e3c:	68a3      	ldr	r3, [r4, #8]
   22e3e:	429d      	cmp	r5, r3
   22e40:	db12      	blt.n	22e68 <__multadd+0x66>
   22e42:	6861      	ldr	r1, [r4, #4]
   22e44:	4630      	mov	r0, r6
   22e46:	3101      	adds	r1, #1
   22e48:	f7ff ff90 	bl	22d6c <_Balloc>
   22e4c:	4680      	mov	r8, r0
   22e4e:	6922      	ldr	r2, [r4, #16]
   22e50:	f104 010c 	add.w	r1, r4, #12
   22e54:	3202      	adds	r2, #2
   22e56:	0092      	lsls	r2, r2, #2
   22e58:	300c      	adds	r0, #12
   22e5a:	f7fb fb64 	bl	1e526 <memcpy>
   22e5e:	4621      	mov	r1, r4
   22e60:	4630      	mov	r0, r6
   22e62:	f7ff ffb7 	bl	22dd4 <_Bfree>
   22e66:	4644      	mov	r4, r8
   22e68:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   22e6c:	3501      	adds	r5, #1
   22e6e:	615f      	str	r7, [r3, #20]
   22e70:	6125      	str	r5, [r4, #16]
   22e72:	4620      	mov	r0, r4
   22e74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00022e78 <__s2b>:
__s2b():
   22e78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   22e7c:	4615      	mov	r5, r2
   22e7e:	2209      	movs	r2, #9
   22e80:	461f      	mov	r7, r3
   22e82:	3308      	adds	r3, #8
   22e84:	460c      	mov	r4, r1
   22e86:	fb93 f3f2 	sdiv	r3, r3, r2
   22e8a:	4606      	mov	r6, r0
   22e8c:	2201      	movs	r2, #1
   22e8e:	2100      	movs	r1, #0
   22e90:	429a      	cmp	r2, r3
   22e92:	db20      	blt.n	22ed6 <__s2b+0x5e>
   22e94:	4630      	mov	r0, r6
   22e96:	f7ff ff69 	bl	22d6c <_Balloc>
   22e9a:	9b08      	ldr	r3, [sp, #32]
   22e9c:	2d09      	cmp	r5, #9
   22e9e:	6143      	str	r3, [r0, #20]
   22ea0:	f04f 0301 	mov.w	r3, #1
   22ea4:	6103      	str	r3, [r0, #16]
   22ea6:	dd19      	ble.n	22edc <__s2b+0x64>
   22ea8:	f104 0909 	add.w	r9, r4, #9
   22eac:	46c8      	mov	r8, r9
   22eae:	442c      	add	r4, r5
   22eb0:	f818 3b01 	ldrb.w	r3, [r8], #1
   22eb4:	4601      	mov	r1, r0
   22eb6:	3b30      	subs	r3, #48	; 0x30
   22eb8:	220a      	movs	r2, #10
   22eba:	4630      	mov	r0, r6
   22ebc:	f7ff ffa1 	bl	22e02 <__multadd>
   22ec0:	45a0      	cmp	r8, r4
   22ec2:	d1f5      	bne.n	22eb0 <__s2b+0x38>
   22ec4:	f1a5 0408 	sub.w	r4, r5, #8
   22ec8:	444c      	add	r4, r9
   22eca:	1b2d      	subs	r5, r5, r4
   22ecc:	1963      	adds	r3, r4, r5
   22ece:	42bb      	cmp	r3, r7
   22ed0:	db07      	blt.n	22ee2 <__s2b+0x6a>
   22ed2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   22ed6:	0052      	lsls	r2, r2, #1
   22ed8:	3101      	adds	r1, #1
   22eda:	e7d9      	b.n	22e90 <__s2b+0x18>
   22edc:	340a      	adds	r4, #10
   22ede:	2509      	movs	r5, #9
   22ee0:	e7f3      	b.n	22eca <__s2b+0x52>
   22ee2:	f814 3b01 	ldrb.w	r3, [r4], #1
   22ee6:	4601      	mov	r1, r0
   22ee8:	3b30      	subs	r3, #48	; 0x30
   22eea:	220a      	movs	r2, #10
   22eec:	4630      	mov	r0, r6
   22eee:	f7ff ff88 	bl	22e02 <__multadd>
   22ef2:	e7eb      	b.n	22ecc <__s2b+0x54>

00022ef4 <__hi0bits>:
__hi0bits():
   22ef4:	0c02      	lsrs	r2, r0, #16
   22ef6:	0412      	lsls	r2, r2, #16
   22ef8:	4603      	mov	r3, r0
   22efa:	b9b2      	cbnz	r2, 22f2a <__hi0bits+0x36>
   22efc:	0403      	lsls	r3, r0, #16
   22efe:	2010      	movs	r0, #16
   22f00:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   22f04:	bf04      	itt	eq
   22f06:	021b      	lsleq	r3, r3, #8
   22f08:	3008      	addeq	r0, #8
   22f0a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   22f0e:	bf04      	itt	eq
   22f10:	011b      	lsleq	r3, r3, #4
   22f12:	3004      	addeq	r0, #4
   22f14:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   22f18:	bf04      	itt	eq
   22f1a:	009b      	lsleq	r3, r3, #2
   22f1c:	3002      	addeq	r0, #2
   22f1e:	2b00      	cmp	r3, #0
   22f20:	db06      	blt.n	22f30 <__hi0bits+0x3c>
   22f22:	005b      	lsls	r3, r3, #1
   22f24:	d503      	bpl.n	22f2e <__hi0bits+0x3a>
   22f26:	3001      	adds	r0, #1
   22f28:	4770      	bx	lr
   22f2a:	2000      	movs	r0, #0
   22f2c:	e7e8      	b.n	22f00 <__hi0bits+0xc>
   22f2e:	2020      	movs	r0, #32
   22f30:	4770      	bx	lr

00022f32 <__lo0bits>:
__lo0bits():
   22f32:	6803      	ldr	r3, [r0, #0]
   22f34:	4601      	mov	r1, r0
   22f36:	f013 0207 	ands.w	r2, r3, #7
   22f3a:	d00b      	beq.n	22f54 <__lo0bits+0x22>
   22f3c:	07da      	lsls	r2, r3, #31
   22f3e:	d423      	bmi.n	22f88 <__lo0bits+0x56>
   22f40:	0798      	lsls	r0, r3, #30
   22f42:	bf49      	itett	mi
   22f44:	085b      	lsrmi	r3, r3, #1
   22f46:	089b      	lsrpl	r3, r3, #2
   22f48:	2001      	movmi	r0, #1
   22f4a:	600b      	strmi	r3, [r1, #0]
   22f4c:	bf5c      	itt	pl
   22f4e:	600b      	strpl	r3, [r1, #0]
   22f50:	2002      	movpl	r0, #2
   22f52:	4770      	bx	lr
   22f54:	b298      	uxth	r0, r3
   22f56:	b9a8      	cbnz	r0, 22f84 <__lo0bits+0x52>
   22f58:	2010      	movs	r0, #16
   22f5a:	0c1b      	lsrs	r3, r3, #16
   22f5c:	f013 0fff 	tst.w	r3, #255	; 0xff
   22f60:	bf04      	itt	eq
   22f62:	0a1b      	lsreq	r3, r3, #8
   22f64:	3008      	addeq	r0, #8
   22f66:	071a      	lsls	r2, r3, #28
   22f68:	bf04      	itt	eq
   22f6a:	091b      	lsreq	r3, r3, #4
   22f6c:	3004      	addeq	r0, #4
   22f6e:	079a      	lsls	r2, r3, #30
   22f70:	bf04      	itt	eq
   22f72:	089b      	lsreq	r3, r3, #2
   22f74:	3002      	addeq	r0, #2
   22f76:	07da      	lsls	r2, r3, #31
   22f78:	d402      	bmi.n	22f80 <__lo0bits+0x4e>
   22f7a:	085b      	lsrs	r3, r3, #1
   22f7c:	d006      	beq.n	22f8c <__lo0bits+0x5a>
   22f7e:	3001      	adds	r0, #1
   22f80:	600b      	str	r3, [r1, #0]
   22f82:	4770      	bx	lr
   22f84:	4610      	mov	r0, r2
   22f86:	e7e9      	b.n	22f5c <__lo0bits+0x2a>
   22f88:	2000      	movs	r0, #0
   22f8a:	4770      	bx	lr
   22f8c:	2020      	movs	r0, #32
   22f8e:	4770      	bx	lr

00022f90 <__i2b>:
__i2b():
   22f90:	b510      	push	{r4, lr}
   22f92:	460c      	mov	r4, r1
   22f94:	2101      	movs	r1, #1
   22f96:	f7ff fee9 	bl	22d6c <_Balloc>
   22f9a:	2201      	movs	r2, #1
   22f9c:	6144      	str	r4, [r0, #20]
   22f9e:	6102      	str	r2, [r0, #16]
   22fa0:	bd10      	pop	{r4, pc}

00022fa2 <__multiply>:
__multiply():
   22fa2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fa6:	4614      	mov	r4, r2
   22fa8:	690a      	ldr	r2, [r1, #16]
   22faa:	6923      	ldr	r3, [r4, #16]
   22fac:	4689      	mov	r9, r1
   22fae:	429a      	cmp	r2, r3
   22fb0:	bfbe      	ittt	lt
   22fb2:	460b      	movlt	r3, r1
   22fb4:	46a1      	movlt	r9, r4
   22fb6:	461c      	movlt	r4, r3
   22fb8:	f8d9 7010 	ldr.w	r7, [r9, #16]
   22fbc:	f8d4 a010 	ldr.w	sl, [r4, #16]
   22fc0:	f8d9 3008 	ldr.w	r3, [r9, #8]
   22fc4:	f8d9 1004 	ldr.w	r1, [r9, #4]
   22fc8:	eb07 060a 	add.w	r6, r7, sl
   22fcc:	429e      	cmp	r6, r3
   22fce:	bfc8      	it	gt
   22fd0:	3101      	addgt	r1, #1
   22fd2:	f7ff fecb 	bl	22d6c <_Balloc>
   22fd6:	f100 0514 	add.w	r5, r0, #20
   22fda:	462b      	mov	r3, r5
   22fdc:	2200      	movs	r2, #0
   22fde:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   22fe2:	4543      	cmp	r3, r8
   22fe4:	d316      	bcc.n	23014 <__multiply+0x72>
   22fe6:	f104 0214 	add.w	r2, r4, #20
   22fea:	f109 0114 	add.w	r1, r9, #20
   22fee:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   22ff2:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   22ff6:	9301      	str	r3, [sp, #4]
   22ff8:	9c01      	ldr	r4, [sp, #4]
   22ffa:	4613      	mov	r3, r2
   22ffc:	4294      	cmp	r4, r2
   22ffe:	d80c      	bhi.n	2301a <__multiply+0x78>
   23000:	2e00      	cmp	r6, #0
   23002:	dd03      	ble.n	2300c <__multiply+0x6a>
   23004:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   23008:	2b00      	cmp	r3, #0
   2300a:	d054      	beq.n	230b6 <__multiply+0x114>
   2300c:	6106      	str	r6, [r0, #16]
   2300e:	b003      	add	sp, #12
   23010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23014:	f843 2b04 	str.w	r2, [r3], #4
   23018:	e7e3      	b.n	22fe2 <__multiply+0x40>
   2301a:	f8b3 a000 	ldrh.w	sl, [r3]
   2301e:	3204      	adds	r2, #4
   23020:	f1ba 0f00 	cmp.w	sl, #0
   23024:	d020      	beq.n	23068 <__multiply+0xc6>
   23026:	46ae      	mov	lr, r5
   23028:	4689      	mov	r9, r1
   2302a:	f04f 0c00 	mov.w	ip, #0
   2302e:	f859 4b04 	ldr.w	r4, [r9], #4
   23032:	f8be b000 	ldrh.w	fp, [lr]
   23036:	b2a3      	uxth	r3, r4
   23038:	fb0a b303 	mla	r3, sl, r3, fp
   2303c:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   23040:	f8de 4000 	ldr.w	r4, [lr]
   23044:	4463      	add	r3, ip
   23046:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   2304a:	fb0a c40b 	mla	r4, sl, fp, ip
   2304e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   23052:	b29b      	uxth	r3, r3
   23054:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   23058:	454f      	cmp	r7, r9
   2305a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   2305e:	f84e 3b04 	str.w	r3, [lr], #4
   23062:	d8e4      	bhi.n	2302e <__multiply+0x8c>
   23064:	f8ce c000 	str.w	ip, [lr]
   23068:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   2306c:	f1b9 0f00 	cmp.w	r9, #0
   23070:	d01f      	beq.n	230b2 <__multiply+0x110>
   23072:	46ae      	mov	lr, r5
   23074:	468c      	mov	ip, r1
   23076:	f04f 0a00 	mov.w	sl, #0
   2307a:	682b      	ldr	r3, [r5, #0]
   2307c:	f8bc 4000 	ldrh.w	r4, [ip]
   23080:	f8be b002 	ldrh.w	fp, [lr, #2]
   23084:	b29b      	uxth	r3, r3
   23086:	fb09 b404 	mla	r4, r9, r4, fp
   2308a:	44a2      	add	sl, r4
   2308c:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   23090:	f84e 3b04 	str.w	r3, [lr], #4
   23094:	f85c 3b04 	ldr.w	r3, [ip], #4
   23098:	f8be 4000 	ldrh.w	r4, [lr]
   2309c:	0c1b      	lsrs	r3, r3, #16
   2309e:	fb09 4303 	mla	r3, r9, r3, r4
   230a2:	4567      	cmp	r7, ip
   230a4:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   230a8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   230ac:	d8e6      	bhi.n	2307c <__multiply+0xda>
   230ae:	f8ce 3000 	str.w	r3, [lr]
   230b2:	3504      	adds	r5, #4
   230b4:	e7a0      	b.n	22ff8 <__multiply+0x56>
   230b6:	3e01      	subs	r6, #1
   230b8:	e7a2      	b.n	23000 <__multiply+0x5e>
   230ba:	Address 0x00000000000230ba is out of bounds.


000230bc <__pow5mult>:
__pow5mult():
   230bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   230c0:	4615      	mov	r5, r2
   230c2:	f012 0203 	ands.w	r2, r2, #3
   230c6:	4606      	mov	r6, r0
   230c8:	460f      	mov	r7, r1
   230ca:	d007      	beq.n	230dc <__pow5mult+0x20>
   230cc:	4c21      	ldr	r4, [pc, #132]	; (23154 <__pow5mult+0x98>)
   230ce:	3a01      	subs	r2, #1
   230d0:	2300      	movs	r3, #0
   230d2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   230d6:	f7ff fe94 	bl	22e02 <__multadd>
   230da:	4607      	mov	r7, r0
   230dc:	10ad      	asrs	r5, r5, #2
   230de:	d035      	beq.n	2314c <__pow5mult+0x90>
   230e0:	6a74      	ldr	r4, [r6, #36]	; 0x24
   230e2:	b93c      	cbnz	r4, 230f4 <__pow5mult+0x38>
   230e4:	2010      	movs	r0, #16
   230e6:	f7fb f9df 	bl	1e4a8 <malloc>
   230ea:	6270      	str	r0, [r6, #36]	; 0x24
   230ec:	6044      	str	r4, [r0, #4]
   230ee:	6084      	str	r4, [r0, #8]
   230f0:	6004      	str	r4, [r0, #0]
   230f2:	60c4      	str	r4, [r0, #12]
   230f4:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   230f8:	f8d8 4008 	ldr.w	r4, [r8, #8]
   230fc:	b94c      	cbnz	r4, 23112 <__pow5mult+0x56>
   230fe:	f240 2171 	movw	r1, #625	; 0x271
   23102:	4630      	mov	r0, r6
   23104:	f7ff ff44 	bl	22f90 <__i2b>
   23108:	2300      	movs	r3, #0
   2310a:	4604      	mov	r4, r0
   2310c:	f8c8 0008 	str.w	r0, [r8, #8]
   23110:	6003      	str	r3, [r0, #0]
   23112:	f04f 0800 	mov.w	r8, #0
   23116:	07eb      	lsls	r3, r5, #31
   23118:	d50a      	bpl.n	23130 <__pow5mult+0x74>
   2311a:	4639      	mov	r1, r7
   2311c:	4622      	mov	r2, r4
   2311e:	4630      	mov	r0, r6
   23120:	f7ff ff3f 	bl	22fa2 <__multiply>
   23124:	4681      	mov	r9, r0
   23126:	4639      	mov	r1, r7
   23128:	4630      	mov	r0, r6
   2312a:	f7ff fe53 	bl	22dd4 <_Bfree>
   2312e:	464f      	mov	r7, r9
   23130:	106d      	asrs	r5, r5, #1
   23132:	d00b      	beq.n	2314c <__pow5mult+0x90>
   23134:	6820      	ldr	r0, [r4, #0]
   23136:	b938      	cbnz	r0, 23148 <__pow5mult+0x8c>
   23138:	4622      	mov	r2, r4
   2313a:	4621      	mov	r1, r4
   2313c:	4630      	mov	r0, r6
   2313e:	f7ff ff30 	bl	22fa2 <__multiply>
   23142:	6020      	str	r0, [r4, #0]
   23144:	f8c0 8000 	str.w	r8, [r0]
   23148:	4604      	mov	r4, r0
   2314a:	e7e4      	b.n	23116 <__pow5mult+0x5a>
   2314c:	4638      	mov	r0, r7
   2314e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   23152:	bf00      	nop
   23154:	00027de8 	.word	0x00027de8

00023158 <__lshift>:
__lshift():
   23158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2315c:	460c      	mov	r4, r1
   2315e:	4607      	mov	r7, r0
   23160:	4616      	mov	r6, r2
   23162:	6923      	ldr	r3, [r4, #16]
   23164:	ea4f 1a62 	mov.w	sl, r2, asr #5
   23168:	eb0a 0903 	add.w	r9, sl, r3
   2316c:	6849      	ldr	r1, [r1, #4]
   2316e:	68a3      	ldr	r3, [r4, #8]
   23170:	f109 0501 	add.w	r5, r9, #1
   23174:	42ab      	cmp	r3, r5
   23176:	db31      	blt.n	231dc <__lshift+0x84>
   23178:	4638      	mov	r0, r7
   2317a:	f7ff fdf7 	bl	22d6c <_Balloc>
   2317e:	2200      	movs	r2, #0
   23180:	4680      	mov	r8, r0
   23182:	4611      	mov	r1, r2
   23184:	f100 0314 	add.w	r3, r0, #20
   23188:	4552      	cmp	r2, sl
   2318a:	db2a      	blt.n	231e2 <__lshift+0x8a>
   2318c:	6920      	ldr	r0, [r4, #16]
   2318e:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   23192:	f104 0114 	add.w	r1, r4, #20
   23196:	f016 021f 	ands.w	r2, r6, #31
   2319a:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   2319e:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   231a2:	d022      	beq.n	231ea <__lshift+0x92>
   231a4:	2000      	movs	r0, #0
   231a6:	f1c2 0c20 	rsb	ip, r2, #32
   231aa:	680e      	ldr	r6, [r1, #0]
   231ac:	4096      	lsls	r6, r2
   231ae:	4330      	orrs	r0, r6
   231b0:	f843 0b04 	str.w	r0, [r3], #4
   231b4:	f851 0b04 	ldr.w	r0, [r1], #4
   231b8:	458e      	cmp	lr, r1
   231ba:	fa20 f00c 	lsr.w	r0, r0, ip
   231be:	d8f4      	bhi.n	231aa <__lshift+0x52>
   231c0:	6018      	str	r0, [r3, #0]
   231c2:	b108      	cbz	r0, 231c8 <__lshift+0x70>
   231c4:	f109 0502 	add.w	r5, r9, #2
   231c8:	3d01      	subs	r5, #1
   231ca:	4638      	mov	r0, r7
   231cc:	f8c8 5010 	str.w	r5, [r8, #16]
   231d0:	4621      	mov	r1, r4
   231d2:	f7ff fdff 	bl	22dd4 <_Bfree>
   231d6:	4640      	mov	r0, r8
   231d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   231dc:	3101      	adds	r1, #1
   231de:	005b      	lsls	r3, r3, #1
   231e0:	e7c8      	b.n	23174 <__lshift+0x1c>
   231e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   231e6:	3201      	adds	r2, #1
   231e8:	e7ce      	b.n	23188 <__lshift+0x30>
   231ea:	3b04      	subs	r3, #4
   231ec:	f851 2b04 	ldr.w	r2, [r1], #4
   231f0:	458e      	cmp	lr, r1
   231f2:	f843 2f04 	str.w	r2, [r3, #4]!
   231f6:	d8f9      	bhi.n	231ec <__lshift+0x94>
   231f8:	e7e6      	b.n	231c8 <__lshift+0x70>

000231fa <__mcmp>:
__mcmp():
   231fa:	6903      	ldr	r3, [r0, #16]
   231fc:	690a      	ldr	r2, [r1, #16]
   231fe:	b530      	push	{r4, r5, lr}
   23200:	1a9b      	subs	r3, r3, r2
   23202:	d10c      	bne.n	2321e <__mcmp+0x24>
   23204:	0092      	lsls	r2, r2, #2
   23206:	3014      	adds	r0, #20
   23208:	3114      	adds	r1, #20
   2320a:	1884      	adds	r4, r0, r2
   2320c:	4411      	add	r1, r2
   2320e:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   23212:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   23216:	4295      	cmp	r5, r2
   23218:	d003      	beq.n	23222 <__mcmp+0x28>
   2321a:	d305      	bcc.n	23228 <__mcmp+0x2e>
   2321c:	2301      	movs	r3, #1
   2321e:	4618      	mov	r0, r3
   23220:	bd30      	pop	{r4, r5, pc}
   23222:	42a0      	cmp	r0, r4
   23224:	d3f3      	bcc.n	2320e <__mcmp+0x14>
   23226:	e7fa      	b.n	2321e <__mcmp+0x24>
   23228:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   2322c:	e7f7      	b.n	2321e <__mcmp+0x24>

0002322e <__mdiff>:
__mdiff():
   2322e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23232:	460d      	mov	r5, r1
   23234:	4607      	mov	r7, r0
   23236:	4611      	mov	r1, r2
   23238:	4628      	mov	r0, r5
   2323a:	4614      	mov	r4, r2
   2323c:	f7ff ffdd 	bl	231fa <__mcmp>
   23240:	1e06      	subs	r6, r0, #0
   23242:	d108      	bne.n	23256 <__mdiff+0x28>
   23244:	4631      	mov	r1, r6
   23246:	4638      	mov	r0, r7
   23248:	f7ff fd90 	bl	22d6c <_Balloc>
   2324c:	2301      	movs	r3, #1
   2324e:	6146      	str	r6, [r0, #20]
   23250:	6103      	str	r3, [r0, #16]
   23252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23256:	bfa4      	itt	ge
   23258:	4623      	movge	r3, r4
   2325a:	462c      	movge	r4, r5
   2325c:	4638      	mov	r0, r7
   2325e:	6861      	ldr	r1, [r4, #4]
   23260:	bfa6      	itte	ge
   23262:	461d      	movge	r5, r3
   23264:	2600      	movge	r6, #0
   23266:	2601      	movlt	r6, #1
   23268:	f7ff fd80 	bl	22d6c <_Balloc>
   2326c:	f04f 0c00 	mov.w	ip, #0
   23270:	60c6      	str	r6, [r0, #12]
   23272:	692b      	ldr	r3, [r5, #16]
   23274:	6926      	ldr	r6, [r4, #16]
   23276:	f104 0214 	add.w	r2, r4, #20
   2327a:	f105 0914 	add.w	r9, r5, #20
   2327e:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   23282:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   23286:	f100 0114 	add.w	r1, r0, #20
   2328a:	f852 ab04 	ldr.w	sl, [r2], #4
   2328e:	f859 5b04 	ldr.w	r5, [r9], #4
   23292:	fa1f f38a 	uxth.w	r3, sl
   23296:	4463      	add	r3, ip
   23298:	b2ac      	uxth	r4, r5
   2329a:	1b1b      	subs	r3, r3, r4
   2329c:	0c2c      	lsrs	r4, r5, #16
   2329e:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   232a2:	eb04 4423 	add.w	r4, r4, r3, asr #16
   232a6:	b29b      	uxth	r3, r3
   232a8:	ea4f 4c24 	mov.w	ip, r4, asr #16
   232ac:	45c8      	cmp	r8, r9
   232ae:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   232b2:	4696      	mov	lr, r2
   232b4:	f841 4b04 	str.w	r4, [r1], #4
   232b8:	d8e7      	bhi.n	2328a <__mdiff+0x5c>
   232ba:	45be      	cmp	lr, r7
   232bc:	d305      	bcc.n	232ca <__mdiff+0x9c>
   232be:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   232c2:	b18b      	cbz	r3, 232e8 <__mdiff+0xba>
   232c4:	6106      	str	r6, [r0, #16]
   232c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   232ca:	f85e 4b04 	ldr.w	r4, [lr], #4
   232ce:	b2a2      	uxth	r2, r4
   232d0:	4462      	add	r2, ip
   232d2:	1413      	asrs	r3, r2, #16
   232d4:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   232d8:	b292      	uxth	r2, r2
   232da:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   232de:	ea4f 4c23 	mov.w	ip, r3, asr #16
   232e2:	f841 2b04 	str.w	r2, [r1], #4
   232e6:	e7e8      	b.n	232ba <__mdiff+0x8c>
   232e8:	3e01      	subs	r6, #1
   232ea:	e7e8      	b.n	232be <__mdiff+0x90>

000232ec <__ulp>:
__ulp():
   232ec:	4b10      	ldr	r3, [pc, #64]	; (23330 <__ulp+0x44>)
   232ee:	400b      	ands	r3, r1
   232f0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   232f4:	2b00      	cmp	r3, #0
   232f6:	dd02      	ble.n	232fe <__ulp+0x12>
   232f8:	2000      	movs	r0, #0
   232fa:	4619      	mov	r1, r3
   232fc:	4770      	bx	lr
   232fe:	425b      	negs	r3, r3
   23300:	151b      	asrs	r3, r3, #20
   23302:	2b13      	cmp	r3, #19
   23304:	f04f 0000 	mov.w	r0, #0
   23308:	f04f 0100 	mov.w	r1, #0
   2330c:	dc04      	bgt.n	23318 <__ulp+0x2c>
   2330e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   23312:	fa42 f103 	asr.w	r1, r2, r3
   23316:	4770      	bx	lr
   23318:	2201      	movs	r2, #1
   2331a:	3b14      	subs	r3, #20
   2331c:	2b1e      	cmp	r3, #30
   2331e:	bfce      	itee	gt
   23320:	4613      	movgt	r3, r2
   23322:	f1c3 031f 	rsble	r3, r3, #31
   23326:	fa02 f303 	lslle.w	r3, r2, r3
   2332a:	4618      	mov	r0, r3
   2332c:	4770      	bx	lr
   2332e:	bf00      	nop
   23330:	7ff00000 	.word	0x7ff00000

00023334 <__b2d>:
__b2d():
   23334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   23338:	6907      	ldr	r7, [r0, #16]
   2333a:	f100 0914 	add.w	r9, r0, #20
   2333e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   23342:	f857 6c04 	ldr.w	r6, [r7, #-4]
   23346:	f1a7 0804 	sub.w	r8, r7, #4
   2334a:	4630      	mov	r0, r6
   2334c:	f7ff fdd2 	bl	22ef4 <__hi0bits>
   23350:	f1c0 0320 	rsb	r3, r0, #32
   23354:	280a      	cmp	r0, #10
   23356:	600b      	str	r3, [r1, #0]
   23358:	491e      	ldr	r1, [pc, #120]	; (233d4 <__b2d+0xa0>)
   2335a:	dc17      	bgt.n	2338c <__b2d+0x58>
   2335c:	45c1      	cmp	r9, r8
   2335e:	bf28      	it	cs
   23360:	2200      	movcs	r2, #0
   23362:	f1c0 0e0b 	rsb	lr, r0, #11
   23366:	fa26 f30e 	lsr.w	r3, r6, lr
   2336a:	bf38      	it	cc
   2336c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   23370:	ea43 0501 	orr.w	r5, r3, r1
   23374:	f100 0315 	add.w	r3, r0, #21
   23378:	fa06 f303 	lsl.w	r3, r6, r3
   2337c:	fa22 f20e 	lsr.w	r2, r2, lr
   23380:	ea43 0402 	orr.w	r4, r3, r2
   23384:	4620      	mov	r0, r4
   23386:	4629      	mov	r1, r5
   23388:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2338c:	45c1      	cmp	r9, r8
   2338e:	bf3a      	itte	cc
   23390:	f1a7 0808 	subcc.w	r8, r7, #8
   23394:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   23398:	2200      	movcs	r2, #0
   2339a:	f1b0 030b 	subs.w	r3, r0, #11
   2339e:	d015      	beq.n	233cc <__b2d+0x98>
   233a0:	409e      	lsls	r6, r3
   233a2:	f1c3 0720 	rsb	r7, r3, #32
   233a6:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   233aa:	fa22 f107 	lsr.w	r1, r2, r7
   233ae:	45c8      	cmp	r8, r9
   233b0:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   233b4:	ea46 0501 	orr.w	r5, r6, r1
   233b8:	bf94      	ite	ls
   233ba:	2100      	movls	r1, #0
   233bc:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   233c0:	fa02 f003 	lsl.w	r0, r2, r3
   233c4:	40f9      	lsrs	r1, r7
   233c6:	ea40 0401 	orr.w	r4, r0, r1
   233ca:	e7db      	b.n	23384 <__b2d+0x50>
   233cc:	ea46 0501 	orr.w	r5, r6, r1
   233d0:	4614      	mov	r4, r2
   233d2:	e7d7      	b.n	23384 <__b2d+0x50>
   233d4:	3ff00000 	.word	0x3ff00000

000233d8 <__d2b>:
__d2b():
   233d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   233dc:	461c      	mov	r4, r3
   233de:	2101      	movs	r1, #1
   233e0:	4690      	mov	r8, r2
   233e2:	9e08      	ldr	r6, [sp, #32]
   233e4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   233e6:	f7ff fcc1 	bl	22d6c <_Balloc>
   233ea:	f3c4 0213 	ubfx	r2, r4, #0, #20
   233ee:	f3c4 540a 	ubfx	r4, r4, #20, #11
   233f2:	4607      	mov	r7, r0
   233f4:	bb34      	cbnz	r4, 23444 <__d2b+0x6c>
   233f6:	9201      	str	r2, [sp, #4]
   233f8:	f1b8 0f00 	cmp.w	r8, #0
   233fc:	d027      	beq.n	2344e <__d2b+0x76>
   233fe:	a802      	add	r0, sp, #8
   23400:	f840 8d08 	str.w	r8, [r0, #-8]!
   23404:	f7ff fd95 	bl	22f32 <__lo0bits>
   23408:	9900      	ldr	r1, [sp, #0]
   2340a:	b1f0      	cbz	r0, 2344a <__d2b+0x72>
   2340c:	9a01      	ldr	r2, [sp, #4]
   2340e:	f1c0 0320 	rsb	r3, r0, #32
   23412:	fa02 f303 	lsl.w	r3, r2, r3
   23416:	430b      	orrs	r3, r1
   23418:	40c2      	lsrs	r2, r0
   2341a:	617b      	str	r3, [r7, #20]
   2341c:	9201      	str	r2, [sp, #4]
   2341e:	9b01      	ldr	r3, [sp, #4]
   23420:	2b00      	cmp	r3, #0
   23422:	bf14      	ite	ne
   23424:	2102      	movne	r1, #2
   23426:	2101      	moveq	r1, #1
   23428:	61bb      	str	r3, [r7, #24]
   2342a:	6139      	str	r1, [r7, #16]
   2342c:	b1c4      	cbz	r4, 23460 <__d2b+0x88>
   2342e:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   23432:	4404      	add	r4, r0
   23434:	6034      	str	r4, [r6, #0]
   23436:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   2343a:	6028      	str	r0, [r5, #0]
   2343c:	4638      	mov	r0, r7
   2343e:	b002      	add	sp, #8
   23440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   23444:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   23448:	e7d5      	b.n	233f6 <__d2b+0x1e>
   2344a:	6179      	str	r1, [r7, #20]
   2344c:	e7e7      	b.n	2341e <__d2b+0x46>
   2344e:	a801      	add	r0, sp, #4
   23450:	f7ff fd6f 	bl	22f32 <__lo0bits>
   23454:	2101      	movs	r1, #1
   23456:	9b01      	ldr	r3, [sp, #4]
   23458:	6139      	str	r1, [r7, #16]
   2345a:	617b      	str	r3, [r7, #20]
   2345c:	3020      	adds	r0, #32
   2345e:	e7e5      	b.n	2342c <__d2b+0x54>
   23460:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   23464:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   23468:	6030      	str	r0, [r6, #0]
   2346a:	6918      	ldr	r0, [r3, #16]
   2346c:	f7ff fd42 	bl	22ef4 <__hi0bits>
   23470:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   23474:	e7e1      	b.n	2343a <__d2b+0x62>

00023476 <__ratio>:
__ratio():
   23476:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   2347a:	4688      	mov	r8, r1
   2347c:	4669      	mov	r1, sp
   2347e:	4681      	mov	r9, r0
   23480:	f7ff ff58 	bl	23334 <__b2d>
   23484:	460d      	mov	r5, r1
   23486:	4604      	mov	r4, r0
   23488:	a901      	add	r1, sp, #4
   2348a:	4640      	mov	r0, r8
   2348c:	f7ff ff52 	bl	23334 <__b2d>
   23490:	f8d9 3010 	ldr.w	r3, [r9, #16]
   23494:	f8d8 2010 	ldr.w	r2, [r8, #16]
   23498:	9e00      	ldr	r6, [sp, #0]
   2349a:	1a9a      	subs	r2, r3, r2
   2349c:	9b01      	ldr	r3, [sp, #4]
   2349e:	1af3      	subs	r3, r6, r3
   234a0:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   234a4:	2b00      	cmp	r3, #0
   234a6:	bfd6      	itet	le
   234a8:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   234ac:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   234b0:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   234b4:	4602      	mov	r2, r0
   234b6:	460b      	mov	r3, r1
   234b8:	4620      	mov	r0, r4
   234ba:	4629      	mov	r1, r5
   234bc:	f001 fa3e 	bl	2493c <__aeabi_ddiv>
   234c0:	b002      	add	sp, #8
   234c2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

000234c6 <__copybits>:
__copybits():
   234c6:	3901      	subs	r1, #1
   234c8:	b510      	push	{r4, lr}
   234ca:	1149      	asrs	r1, r1, #5
   234cc:	6914      	ldr	r4, [r2, #16]
   234ce:	3101      	adds	r1, #1
   234d0:	f102 0314 	add.w	r3, r2, #20
   234d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   234d8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   234dc:	42a3      	cmp	r3, r4
   234de:	4602      	mov	r2, r0
   234e0:	d303      	bcc.n	234ea <__copybits+0x24>
   234e2:	2300      	movs	r3, #0
   234e4:	428a      	cmp	r2, r1
   234e6:	d305      	bcc.n	234f4 <__copybits+0x2e>
   234e8:	bd10      	pop	{r4, pc}
   234ea:	f853 2b04 	ldr.w	r2, [r3], #4
   234ee:	f840 2b04 	str.w	r2, [r0], #4
   234f2:	e7f3      	b.n	234dc <__copybits+0x16>
   234f4:	f842 3b04 	str.w	r3, [r2], #4
   234f8:	e7f4      	b.n	234e4 <__copybits+0x1e>

000234fa <__any_on>:
__any_on():
   234fa:	f100 0214 	add.w	r2, r0, #20
   234fe:	6900      	ldr	r0, [r0, #16]
   23500:	114b      	asrs	r3, r1, #5
   23502:	4298      	cmp	r0, r3
   23504:	b510      	push	{r4, lr}
   23506:	db11      	blt.n	2352c <__any_on+0x32>
   23508:	dd0a      	ble.n	23520 <__any_on+0x26>
   2350a:	f011 011f 	ands.w	r1, r1, #31
   2350e:	d007      	beq.n	23520 <__any_on+0x26>
   23510:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   23514:	fa24 f001 	lsr.w	r0, r4, r1
   23518:	fa00 f101 	lsl.w	r1, r0, r1
   2351c:	428c      	cmp	r4, r1
   2351e:	d10b      	bne.n	23538 <__any_on+0x3e>
   23520:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   23524:	4293      	cmp	r3, r2
   23526:	d803      	bhi.n	23530 <__any_on+0x36>
   23528:	2000      	movs	r0, #0
   2352a:	bd10      	pop	{r4, pc}
   2352c:	4603      	mov	r3, r0
   2352e:	e7f7      	b.n	23520 <__any_on+0x26>
   23530:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   23534:	2900      	cmp	r1, #0
   23536:	d0f5      	beq.n	23524 <__any_on+0x2a>
   23538:	2001      	movs	r0, #1
   2353a:	bd10      	pop	{r4, pc}

0002353c <_realloc_r>:
_realloc_r():
   2353c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2353e:	4607      	mov	r7, r0
   23540:	4614      	mov	r4, r2
   23542:	460e      	mov	r6, r1
   23544:	b921      	cbnz	r1, 23550 <_realloc_r+0x14>
   23546:	4611      	mov	r1, r2
   23548:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   2354c:	f7fb bb0a 	b.w	1eb64 <_malloc_r>
   23550:	b922      	cbnz	r2, 2355c <_realloc_r+0x20>
   23552:	f7fb fa89 	bl	1ea68 <_free_r>
   23556:	4625      	mov	r5, r4
   23558:	4628      	mov	r0, r5
   2355a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2355c:	f001 f8ba 	bl	246d4 <_malloc_usable_size_r>
   23560:	4284      	cmp	r4, r0
   23562:	d90f      	bls.n	23584 <_realloc_r+0x48>
   23564:	4621      	mov	r1, r4
   23566:	4638      	mov	r0, r7
   23568:	f7fb fafc 	bl	1eb64 <_malloc_r>
   2356c:	4605      	mov	r5, r0
   2356e:	2800      	cmp	r0, #0
   23570:	d0f2      	beq.n	23558 <_realloc_r+0x1c>
   23572:	4631      	mov	r1, r6
   23574:	4622      	mov	r2, r4
   23576:	f7fa ffd6 	bl	1e526 <memcpy>
   2357a:	4631      	mov	r1, r6
   2357c:	4638      	mov	r0, r7
   2357e:	f7fb fa73 	bl	1ea68 <_free_r>
   23582:	e7e9      	b.n	23558 <_realloc_r+0x1c>
   23584:	4635      	mov	r5, r6
   23586:	e7e7      	b.n	23558 <_realloc_r+0x1c>

00023588 <__ssputs_r>:
__ssputs_r():
   23588:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2358c:	688e      	ldr	r6, [r1, #8]
   2358e:	4682      	mov	sl, r0
   23590:	429e      	cmp	r6, r3
   23592:	460c      	mov	r4, r1
   23594:	4691      	mov	r9, r2
   23596:	4698      	mov	r8, r3
   23598:	d835      	bhi.n	23606 <__ssputs_r+0x7e>
   2359a:	898a      	ldrh	r2, [r1, #12]
   2359c:	f412 6f90 	tst.w	r2, #1152	; 0x480
   235a0:	d031      	beq.n	23606 <__ssputs_r+0x7e>
   235a2:	2302      	movs	r3, #2
   235a4:	6825      	ldr	r5, [r4, #0]
   235a6:	6909      	ldr	r1, [r1, #16]
   235a8:	1a6f      	subs	r7, r5, r1
   235aa:	6965      	ldr	r5, [r4, #20]
   235ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   235b0:	fb95 f5f3 	sdiv	r5, r5, r3
   235b4:	f108 0301 	add.w	r3, r8, #1
   235b8:	443b      	add	r3, r7
   235ba:	429d      	cmp	r5, r3
   235bc:	bf38      	it	cc
   235be:	461d      	movcc	r5, r3
   235c0:	0553      	lsls	r3, r2, #21
   235c2:	d531      	bpl.n	23628 <__ssputs_r+0xa0>
   235c4:	4629      	mov	r1, r5
   235c6:	f7fb facd 	bl	1eb64 <_malloc_r>
   235ca:	4606      	mov	r6, r0
   235cc:	b950      	cbnz	r0, 235e4 <__ssputs_r+0x5c>
   235ce:	230c      	movs	r3, #12
   235d0:	f8ca 3000 	str.w	r3, [sl]
   235d4:	89a3      	ldrh	r3, [r4, #12]
   235d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   235da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   235de:	81a3      	strh	r3, [r4, #12]
   235e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   235e4:	463a      	mov	r2, r7
   235e6:	6921      	ldr	r1, [r4, #16]
   235e8:	f7fa ff9d 	bl	1e526 <memcpy>
   235ec:	89a3      	ldrh	r3, [r4, #12]
   235ee:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   235f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   235f6:	81a3      	strh	r3, [r4, #12]
   235f8:	6126      	str	r6, [r4, #16]
   235fa:	443e      	add	r6, r7
   235fc:	6026      	str	r6, [r4, #0]
   235fe:	4646      	mov	r6, r8
   23600:	6165      	str	r5, [r4, #20]
   23602:	1bed      	subs	r5, r5, r7
   23604:	60a5      	str	r5, [r4, #8]
   23606:	4546      	cmp	r6, r8
   23608:	bf28      	it	cs
   2360a:	4646      	movcs	r6, r8
   2360c:	4649      	mov	r1, r9
   2360e:	4632      	mov	r2, r6
   23610:	6820      	ldr	r0, [r4, #0]
   23612:	f7fa ff93 	bl	1e53c <memmove>
   23616:	68a3      	ldr	r3, [r4, #8]
   23618:	2000      	movs	r0, #0
   2361a:	1b9b      	subs	r3, r3, r6
   2361c:	60a3      	str	r3, [r4, #8]
   2361e:	6823      	ldr	r3, [r4, #0]
   23620:	441e      	add	r6, r3
   23622:	6026      	str	r6, [r4, #0]
   23624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23628:	462a      	mov	r2, r5
   2362a:	f7ff ff87 	bl	2353c <_realloc_r>
   2362e:	4606      	mov	r6, r0
   23630:	2800      	cmp	r0, #0
   23632:	d1e1      	bne.n	235f8 <__ssputs_r+0x70>
   23634:	6921      	ldr	r1, [r4, #16]
   23636:	4650      	mov	r0, sl
   23638:	f7fb fa16 	bl	1ea68 <_free_r>
   2363c:	e7c7      	b.n	235ce <__ssputs_r+0x46>
   2363e:	Address 0x000000000002363e is out of bounds.


00023640 <_svfiprintf_r>:
_svfiprintf_r():
   23640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23644:	b09d      	sub	sp, #116	; 0x74
   23646:	9303      	str	r3, [sp, #12]
   23648:	898b      	ldrh	r3, [r1, #12]
   2364a:	4680      	mov	r8, r0
   2364c:	061c      	lsls	r4, r3, #24
   2364e:	460d      	mov	r5, r1
   23650:	4616      	mov	r6, r2
   23652:	d50f      	bpl.n	23674 <_svfiprintf_r+0x34>
   23654:	690b      	ldr	r3, [r1, #16]
   23656:	b96b      	cbnz	r3, 23674 <_svfiprintf_r+0x34>
   23658:	2140      	movs	r1, #64	; 0x40
   2365a:	f7fb fa83 	bl	1eb64 <_malloc_r>
   2365e:	6028      	str	r0, [r5, #0]
   23660:	6128      	str	r0, [r5, #16]
   23662:	b928      	cbnz	r0, 23670 <_svfiprintf_r+0x30>
   23664:	230c      	movs	r3, #12
   23666:	f8c8 3000 	str.w	r3, [r8]
   2366a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2366e:	e0c4      	b.n	237fa <_svfiprintf_r+0x1ba>
   23670:	2340      	movs	r3, #64	; 0x40
   23672:	616b      	str	r3, [r5, #20]
   23674:	2300      	movs	r3, #0
   23676:	9309      	str	r3, [sp, #36]	; 0x24
   23678:	2320      	movs	r3, #32
   2367a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   2367e:	2330      	movs	r3, #48	; 0x30
   23680:	f04f 0b01 	mov.w	fp, #1
   23684:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   23688:	4637      	mov	r7, r6
   2368a:	463c      	mov	r4, r7
   2368c:	f814 3b01 	ldrb.w	r3, [r4], #1
   23690:	2b00      	cmp	r3, #0
   23692:	d13c      	bne.n	2370e <_svfiprintf_r+0xce>
   23694:	ebb7 0a06 	subs.w	sl, r7, r6
   23698:	d00b      	beq.n	236b2 <_svfiprintf_r+0x72>
   2369a:	4653      	mov	r3, sl
   2369c:	4632      	mov	r2, r6
   2369e:	4629      	mov	r1, r5
   236a0:	4640      	mov	r0, r8
   236a2:	f7ff ff71 	bl	23588 <__ssputs_r>
   236a6:	3001      	adds	r0, #1
   236a8:	f000 80a2 	beq.w	237f0 <_svfiprintf_r+0x1b0>
   236ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
   236ae:	4453      	add	r3, sl
   236b0:	9309      	str	r3, [sp, #36]	; 0x24
   236b2:	783b      	ldrb	r3, [r7, #0]
   236b4:	2b00      	cmp	r3, #0
   236b6:	f000 809b 	beq.w	237f0 <_svfiprintf_r+0x1b0>
   236ba:	2300      	movs	r3, #0
   236bc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   236c0:	9304      	str	r3, [sp, #16]
   236c2:	9307      	str	r3, [sp, #28]
   236c4:	9205      	str	r2, [sp, #20]
   236c6:	9306      	str	r3, [sp, #24]
   236c8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   236cc:	931a      	str	r3, [sp, #104]	; 0x68
   236ce:	2205      	movs	r2, #5
   236d0:	7821      	ldrb	r1, [r4, #0]
   236d2:	4850      	ldr	r0, [pc, #320]	; (23814 <_svfiprintf_r+0x1d4>)
   236d4:	f7fa ff0a 	bl	1e4ec <memchr>
   236d8:	1c67      	adds	r7, r4, #1
   236da:	9b04      	ldr	r3, [sp, #16]
   236dc:	b9d8      	cbnz	r0, 23716 <_svfiprintf_r+0xd6>
   236de:	06d9      	lsls	r1, r3, #27
   236e0:	bf44      	itt	mi
   236e2:	2220      	movmi	r2, #32
   236e4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   236e8:	071a      	lsls	r2, r3, #28
   236ea:	bf44      	itt	mi
   236ec:	222b      	movmi	r2, #43	; 0x2b
   236ee:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   236f2:	7822      	ldrb	r2, [r4, #0]
   236f4:	2a2a      	cmp	r2, #42	; 0x2a
   236f6:	d016      	beq.n	23726 <_svfiprintf_r+0xe6>
   236f8:	2100      	movs	r1, #0
   236fa:	200a      	movs	r0, #10
   236fc:	9a07      	ldr	r2, [sp, #28]
   236fe:	4627      	mov	r7, r4
   23700:	783b      	ldrb	r3, [r7, #0]
   23702:	3401      	adds	r4, #1
   23704:	3b30      	subs	r3, #48	; 0x30
   23706:	2b09      	cmp	r3, #9
   23708:	d950      	bls.n	237ac <_svfiprintf_r+0x16c>
   2370a:	b1c9      	cbz	r1, 23740 <_svfiprintf_r+0x100>
   2370c:	e011      	b.n	23732 <_svfiprintf_r+0xf2>
   2370e:	2b25      	cmp	r3, #37	; 0x25
   23710:	d0c0      	beq.n	23694 <_svfiprintf_r+0x54>
   23712:	4627      	mov	r7, r4
   23714:	e7b9      	b.n	2368a <_svfiprintf_r+0x4a>
   23716:	4a3f      	ldr	r2, [pc, #252]	; (23814 <_svfiprintf_r+0x1d4>)
   23718:	463c      	mov	r4, r7
   2371a:	1a80      	subs	r0, r0, r2
   2371c:	fa0b f000 	lsl.w	r0, fp, r0
   23720:	4318      	orrs	r0, r3
   23722:	9004      	str	r0, [sp, #16]
   23724:	e7d3      	b.n	236ce <_svfiprintf_r+0x8e>
   23726:	9a03      	ldr	r2, [sp, #12]
   23728:	1d11      	adds	r1, r2, #4
   2372a:	6812      	ldr	r2, [r2, #0]
   2372c:	9103      	str	r1, [sp, #12]
   2372e:	2a00      	cmp	r2, #0
   23730:	db01      	blt.n	23736 <_svfiprintf_r+0xf6>
   23732:	9207      	str	r2, [sp, #28]
   23734:	e004      	b.n	23740 <_svfiprintf_r+0x100>
   23736:	4252      	negs	r2, r2
   23738:	f043 0302 	orr.w	r3, r3, #2
   2373c:	9207      	str	r2, [sp, #28]
   2373e:	9304      	str	r3, [sp, #16]
   23740:	783b      	ldrb	r3, [r7, #0]
   23742:	2b2e      	cmp	r3, #46	; 0x2e
   23744:	d10d      	bne.n	23762 <_svfiprintf_r+0x122>
   23746:	787b      	ldrb	r3, [r7, #1]
   23748:	1c79      	adds	r1, r7, #1
   2374a:	2b2a      	cmp	r3, #42	; 0x2a
   2374c:	d132      	bne.n	237b4 <_svfiprintf_r+0x174>
   2374e:	9b03      	ldr	r3, [sp, #12]
   23750:	3702      	adds	r7, #2
   23752:	1d1a      	adds	r2, r3, #4
   23754:	681b      	ldr	r3, [r3, #0]
   23756:	9203      	str	r2, [sp, #12]
   23758:	2b00      	cmp	r3, #0
   2375a:	bfb8      	it	lt
   2375c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   23760:	9305      	str	r3, [sp, #20]
   23762:	4c2d      	ldr	r4, [pc, #180]	; (23818 <_svfiprintf_r+0x1d8>)
   23764:	2203      	movs	r2, #3
   23766:	7839      	ldrb	r1, [r7, #0]
   23768:	4620      	mov	r0, r4
   2376a:	f7fa febf 	bl	1e4ec <memchr>
   2376e:	b138      	cbz	r0, 23780 <_svfiprintf_r+0x140>
   23770:	2340      	movs	r3, #64	; 0x40
   23772:	1b00      	subs	r0, r0, r4
   23774:	fa03 f000 	lsl.w	r0, r3, r0
   23778:	9b04      	ldr	r3, [sp, #16]
   2377a:	3701      	adds	r7, #1
   2377c:	4303      	orrs	r3, r0
   2377e:	9304      	str	r3, [sp, #16]
   23780:	7839      	ldrb	r1, [r7, #0]
   23782:	2206      	movs	r2, #6
   23784:	4825      	ldr	r0, [pc, #148]	; (2381c <_svfiprintf_r+0x1dc>)
   23786:	1c7e      	adds	r6, r7, #1
   23788:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   2378c:	f7fa feae 	bl	1e4ec <memchr>
   23790:	2800      	cmp	r0, #0
   23792:	d035      	beq.n	23800 <_svfiprintf_r+0x1c0>
   23794:	4b22      	ldr	r3, [pc, #136]	; (23820 <_svfiprintf_r+0x1e0>)
   23796:	b9fb      	cbnz	r3, 237d8 <_svfiprintf_r+0x198>
   23798:	9b03      	ldr	r3, [sp, #12]
   2379a:	3307      	adds	r3, #7
   2379c:	f023 0307 	bic.w	r3, r3, #7
   237a0:	3308      	adds	r3, #8
   237a2:	9303      	str	r3, [sp, #12]
   237a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   237a6:	444b      	add	r3, r9
   237a8:	9309      	str	r3, [sp, #36]	; 0x24
   237aa:	e76d      	b.n	23688 <_svfiprintf_r+0x48>
   237ac:	fb00 3202 	mla	r2, r0, r2, r3
   237b0:	2101      	movs	r1, #1
   237b2:	e7a4      	b.n	236fe <_svfiprintf_r+0xbe>
   237b4:	2300      	movs	r3, #0
   237b6:	240a      	movs	r4, #10
   237b8:	4618      	mov	r0, r3
   237ba:	9305      	str	r3, [sp, #20]
   237bc:	460f      	mov	r7, r1
   237be:	783a      	ldrb	r2, [r7, #0]
   237c0:	3101      	adds	r1, #1
   237c2:	3a30      	subs	r2, #48	; 0x30
   237c4:	2a09      	cmp	r2, #9
   237c6:	d903      	bls.n	237d0 <_svfiprintf_r+0x190>
   237c8:	2b00      	cmp	r3, #0
   237ca:	d0ca      	beq.n	23762 <_svfiprintf_r+0x122>
   237cc:	9005      	str	r0, [sp, #20]
   237ce:	e7c8      	b.n	23762 <_svfiprintf_r+0x122>
   237d0:	fb04 2000 	mla	r0, r4, r0, r2
   237d4:	2301      	movs	r3, #1
   237d6:	e7f1      	b.n	237bc <_svfiprintf_r+0x17c>
   237d8:	ab03      	add	r3, sp, #12
   237da:	9300      	str	r3, [sp, #0]
   237dc:	462a      	mov	r2, r5
   237de:	4b11      	ldr	r3, [pc, #68]	; (23824 <_svfiprintf_r+0x1e4>)
   237e0:	a904      	add	r1, sp, #16
   237e2:	4640      	mov	r0, r8
   237e4:	f7fb faae 	bl	1ed44 <_printf_float>
   237e8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   237ec:	4681      	mov	r9, r0
   237ee:	d1d9      	bne.n	237a4 <_svfiprintf_r+0x164>
   237f0:	89ab      	ldrh	r3, [r5, #12]
   237f2:	065b      	lsls	r3, r3, #25
   237f4:	f53f af39 	bmi.w	2366a <_svfiprintf_r+0x2a>
   237f8:	9809      	ldr	r0, [sp, #36]	; 0x24
   237fa:	b01d      	add	sp, #116	; 0x74
   237fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23800:	ab03      	add	r3, sp, #12
   23802:	9300      	str	r3, [sp, #0]
   23804:	462a      	mov	r2, r5
   23806:	4b07      	ldr	r3, [pc, #28]	; (23824 <_svfiprintf_r+0x1e4>)
   23808:	a904      	add	r1, sp, #16
   2380a:	4640      	mov	r0, r8
   2380c:	f7fb fd4a 	bl	1f2a4 <_printf_i>
   23810:	e7ea      	b.n	237e8 <_svfiprintf_r+0x1a8>
   23812:	bf00      	nop
   23814:	00027df4 	.word	0x00027df4
   23818:	00027dfa 	.word	0x00027dfa
   2381c:	00027dfe 	.word	0x00027dfe
   23820:	0001ed45 	.word	0x0001ed45
   23824:	00023589 	.word	0x00023589

00023828 <_sungetc_r>:
_sungetc_r():
   23828:	b538      	push	{r3, r4, r5, lr}
   2382a:	1c4b      	adds	r3, r1, #1
   2382c:	4614      	mov	r4, r2
   2382e:	d103      	bne.n	23838 <_sungetc_r+0x10>
   23830:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   23834:	4628      	mov	r0, r5
   23836:	bd38      	pop	{r3, r4, r5, pc}
   23838:	8993      	ldrh	r3, [r2, #12]
   2383a:	b2cd      	uxtb	r5, r1
   2383c:	f023 0320 	bic.w	r3, r3, #32
   23840:	8193      	strh	r3, [r2, #12]
   23842:	6b53      	ldr	r3, [r2, #52]	; 0x34
   23844:	6852      	ldr	r2, [r2, #4]
   23846:	b18b      	cbz	r3, 2386c <_sungetc_r+0x44>
   23848:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2384a:	429a      	cmp	r2, r3
   2384c:	da08      	bge.n	23860 <_sungetc_r+0x38>
   2384e:	6823      	ldr	r3, [r4, #0]
   23850:	1e5a      	subs	r2, r3, #1
   23852:	6022      	str	r2, [r4, #0]
   23854:	f803 5c01 	strb.w	r5, [r3, #-1]
   23858:	6863      	ldr	r3, [r4, #4]
   2385a:	3301      	adds	r3, #1
   2385c:	6063      	str	r3, [r4, #4]
   2385e:	e7e9      	b.n	23834 <_sungetc_r+0xc>
   23860:	4621      	mov	r1, r4
   23862:	f000 fe89 	bl	24578 <__submore>
   23866:	2800      	cmp	r0, #0
   23868:	d0f1      	beq.n	2384e <_sungetc_r+0x26>
   2386a:	e7e1      	b.n	23830 <_sungetc_r+0x8>
   2386c:	6921      	ldr	r1, [r4, #16]
   2386e:	6823      	ldr	r3, [r4, #0]
   23870:	b151      	cbz	r1, 23888 <_sungetc_r+0x60>
   23872:	4299      	cmp	r1, r3
   23874:	d208      	bcs.n	23888 <_sungetc_r+0x60>
   23876:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   2387a:	428d      	cmp	r5, r1
   2387c:	d104      	bne.n	23888 <_sungetc_r+0x60>
   2387e:	3b01      	subs	r3, #1
   23880:	3201      	adds	r2, #1
   23882:	6023      	str	r3, [r4, #0]
   23884:	6062      	str	r2, [r4, #4]
   23886:	e7d5      	b.n	23834 <_sungetc_r+0xc>
   23888:	63e3      	str	r3, [r4, #60]	; 0x3c
   2388a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2388e:	6363      	str	r3, [r4, #52]	; 0x34
   23890:	2303      	movs	r3, #3
   23892:	63a3      	str	r3, [r4, #56]	; 0x38
   23894:	4623      	mov	r3, r4
   23896:	6422      	str	r2, [r4, #64]	; 0x40
   23898:	f803 5f46 	strb.w	r5, [r3, #70]!
   2389c:	6023      	str	r3, [r4, #0]
   2389e:	2301      	movs	r3, #1
   238a0:	e7dc      	b.n	2385c <_sungetc_r+0x34>

000238a2 <__ssrefill_r>:
__ssrefill_r():
   238a2:	b510      	push	{r4, lr}
   238a4:	460c      	mov	r4, r1
   238a6:	6b49      	ldr	r1, [r1, #52]	; 0x34
   238a8:	b169      	cbz	r1, 238c6 <__ssrefill_r+0x24>
   238aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
   238ae:	4299      	cmp	r1, r3
   238b0:	d001      	beq.n	238b6 <__ssrefill_r+0x14>
   238b2:	f7fb f8d9 	bl	1ea68 <_free_r>
   238b6:	2000      	movs	r0, #0
   238b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
   238ba:	6360      	str	r0, [r4, #52]	; 0x34
   238bc:	6063      	str	r3, [r4, #4]
   238be:	b113      	cbz	r3, 238c6 <__ssrefill_r+0x24>
   238c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   238c2:	6023      	str	r3, [r4, #0]
   238c4:	bd10      	pop	{r4, pc}
   238c6:	6923      	ldr	r3, [r4, #16]
   238c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   238cc:	6023      	str	r3, [r4, #0]
   238ce:	2300      	movs	r3, #0
   238d0:	6063      	str	r3, [r4, #4]
   238d2:	89a3      	ldrh	r3, [r4, #12]
   238d4:	f043 0320 	orr.w	r3, r3, #32
   238d8:	81a3      	strh	r3, [r4, #12]
   238da:	bd10      	pop	{r4, pc}

000238dc <__ssvfiscanf_r>:
__ssvfiscanf_r():
   238dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238e0:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   238e4:	9301      	str	r3, [sp, #4]
   238e6:	2300      	movs	r3, #0
   238e8:	4606      	mov	r6, r0
   238ea:	460c      	mov	r4, r1
   238ec:	4692      	mov	sl, r2
   238ee:	270a      	movs	r7, #10
   238f0:	9346      	str	r3, [sp, #280]	; 0x118
   238f2:	9347      	str	r3, [sp, #284]	; 0x11c
   238f4:	4b9f      	ldr	r3, [pc, #636]	; (23b74 <__ssvfiscanf_r+0x298>)
   238f6:	f10d 080c 	add.w	r8, sp, #12
   238fa:	93a2      	str	r3, [sp, #648]	; 0x288
   238fc:	4b9e      	ldr	r3, [pc, #632]	; (23b78 <__ssvfiscanf_r+0x29c>)
   238fe:	f8df 927c 	ldr.w	r9, [pc, #636]	; 23b7c <__ssvfiscanf_r+0x2a0>
   23902:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   23906:	93a3      	str	r3, [sp, #652]	; 0x28c
   23908:	f89a 3000 	ldrb.w	r3, [sl]
   2390c:	2b00      	cmp	r3, #0
   2390e:	f000 812f 	beq.w	23b70 <__ssvfiscanf_r+0x294>
   23912:	f7fa fd57 	bl	1e3c4 <__locale_ctype_ptr>
   23916:	f89a b000 	ldrb.w	fp, [sl]
   2391a:	4458      	add	r0, fp
   2391c:	7843      	ldrb	r3, [r0, #1]
   2391e:	f013 0308 	ands.w	r3, r3, #8
   23922:	d143      	bne.n	239ac <__ssvfiscanf_r+0xd0>
   23924:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   23928:	f10a 0501 	add.w	r5, sl, #1
   2392c:	f040 8099 	bne.w	23a62 <__ssvfiscanf_r+0x186>
   23930:	9345      	str	r3, [sp, #276]	; 0x114
   23932:	9343      	str	r3, [sp, #268]	; 0x10c
   23934:	f89a 3001 	ldrb.w	r3, [sl, #1]
   23938:	2b2a      	cmp	r3, #42	; 0x2a
   2393a:	d103      	bne.n	23944 <__ssvfiscanf_r+0x68>
   2393c:	2310      	movs	r3, #16
   2393e:	f10a 0502 	add.w	r5, sl, #2
   23942:	9343      	str	r3, [sp, #268]	; 0x10c
   23944:	7829      	ldrb	r1, [r5, #0]
   23946:	46aa      	mov	sl, r5
   23948:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   2394c:	2a09      	cmp	r2, #9
   2394e:	f105 0501 	add.w	r5, r5, #1
   23952:	d941      	bls.n	239d8 <__ssvfiscanf_r+0xfc>
   23954:	2203      	movs	r2, #3
   23956:	4889      	ldr	r0, [pc, #548]	; (23b7c <__ssvfiscanf_r+0x2a0>)
   23958:	f7fa fdc8 	bl	1e4ec <memchr>
   2395c:	b138      	cbz	r0, 2396e <__ssvfiscanf_r+0x92>
   2395e:	eba0 0309 	sub.w	r3, r0, r9
   23962:	2001      	movs	r0, #1
   23964:	46aa      	mov	sl, r5
   23966:	4098      	lsls	r0, r3
   23968:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2396a:	4318      	orrs	r0, r3
   2396c:	9043      	str	r0, [sp, #268]	; 0x10c
   2396e:	f89a 3000 	ldrb.w	r3, [sl]
   23972:	f10a 0501 	add.w	r5, sl, #1
   23976:	2b67      	cmp	r3, #103	; 0x67
   23978:	d84a      	bhi.n	23a10 <__ssvfiscanf_r+0x134>
   2397a:	2b65      	cmp	r3, #101	; 0x65
   2397c:	f080 80b7 	bcs.w	23aee <__ssvfiscanf_r+0x212>
   23980:	2b47      	cmp	r3, #71	; 0x47
   23982:	d82f      	bhi.n	239e4 <__ssvfiscanf_r+0x108>
   23984:	2b45      	cmp	r3, #69	; 0x45
   23986:	f080 80b2 	bcs.w	23aee <__ssvfiscanf_r+0x212>
   2398a:	2b00      	cmp	r3, #0
   2398c:	f000 8082 	beq.w	23a94 <__ssvfiscanf_r+0x1b8>
   23990:	2b25      	cmp	r3, #37	; 0x25
   23992:	d066      	beq.n	23a62 <__ssvfiscanf_r+0x186>
   23994:	2303      	movs	r3, #3
   23996:	9744      	str	r7, [sp, #272]	; 0x110
   23998:	9349      	str	r3, [sp, #292]	; 0x124
   2399a:	e045      	b.n	23a28 <__ssvfiscanf_r+0x14c>
   2399c:	9947      	ldr	r1, [sp, #284]	; 0x11c
   2399e:	3301      	adds	r3, #1
   239a0:	3101      	adds	r1, #1
   239a2:	9147      	str	r1, [sp, #284]	; 0x11c
   239a4:	6861      	ldr	r1, [r4, #4]
   239a6:	6023      	str	r3, [r4, #0]
   239a8:	3901      	subs	r1, #1
   239aa:	6061      	str	r1, [r4, #4]
   239ac:	6863      	ldr	r3, [r4, #4]
   239ae:	2b00      	cmp	r3, #0
   239b0:	dd0b      	ble.n	239ca <__ssvfiscanf_r+0xee>
   239b2:	f7fa fd07 	bl	1e3c4 <__locale_ctype_ptr>
   239b6:	6823      	ldr	r3, [r4, #0]
   239b8:	7819      	ldrb	r1, [r3, #0]
   239ba:	4408      	add	r0, r1
   239bc:	7841      	ldrb	r1, [r0, #1]
   239be:	070d      	lsls	r5, r1, #28
   239c0:	d4ec      	bmi.n	2399c <__ssvfiscanf_r+0xc0>
   239c2:	f10a 0501 	add.w	r5, sl, #1
   239c6:	46aa      	mov	sl, r5
   239c8:	e79e      	b.n	23908 <__ssvfiscanf_r+0x2c>
   239ca:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   239cc:	4621      	mov	r1, r4
   239ce:	4630      	mov	r0, r6
   239d0:	4798      	blx	r3
   239d2:	2800      	cmp	r0, #0
   239d4:	d0ed      	beq.n	239b2 <__ssvfiscanf_r+0xd6>
   239d6:	e7f4      	b.n	239c2 <__ssvfiscanf_r+0xe6>
   239d8:	9b45      	ldr	r3, [sp, #276]	; 0x114
   239da:	fb07 1303 	mla	r3, r7, r3, r1
   239de:	3b30      	subs	r3, #48	; 0x30
   239e0:	9345      	str	r3, [sp, #276]	; 0x114
   239e2:	e7af      	b.n	23944 <__ssvfiscanf_r+0x68>
   239e4:	2b5b      	cmp	r3, #91	; 0x5b
   239e6:	d061      	beq.n	23aac <__ssvfiscanf_r+0x1d0>
   239e8:	d80c      	bhi.n	23a04 <__ssvfiscanf_r+0x128>
   239ea:	2b58      	cmp	r3, #88	; 0x58
   239ec:	d1d2      	bne.n	23994 <__ssvfiscanf_r+0xb8>
   239ee:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   239f0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   239f4:	9243      	str	r2, [sp, #268]	; 0x10c
   239f6:	2210      	movs	r2, #16
   239f8:	9244      	str	r2, [sp, #272]	; 0x110
   239fa:	2b6f      	cmp	r3, #111	; 0x6f
   239fc:	bfb4      	ite	lt
   239fe:	2303      	movlt	r3, #3
   23a00:	2304      	movge	r3, #4
   23a02:	e010      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23a04:	2b63      	cmp	r3, #99	; 0x63
   23a06:	d05c      	beq.n	23ac2 <__ssvfiscanf_r+0x1e6>
   23a08:	2b64      	cmp	r3, #100	; 0x64
   23a0a:	d1c3      	bne.n	23994 <__ssvfiscanf_r+0xb8>
   23a0c:	9744      	str	r7, [sp, #272]	; 0x110
   23a0e:	e7f4      	b.n	239fa <__ssvfiscanf_r+0x11e>
   23a10:	2b70      	cmp	r3, #112	; 0x70
   23a12:	d042      	beq.n	23a9a <__ssvfiscanf_r+0x1be>
   23a14:	d81d      	bhi.n	23a52 <__ssvfiscanf_r+0x176>
   23a16:	2b6e      	cmp	r3, #110	; 0x6e
   23a18:	d059      	beq.n	23ace <__ssvfiscanf_r+0x1f2>
   23a1a:	d843      	bhi.n	23aa4 <__ssvfiscanf_r+0x1c8>
   23a1c:	2b69      	cmp	r3, #105	; 0x69
   23a1e:	d1b9      	bne.n	23994 <__ssvfiscanf_r+0xb8>
   23a20:	2300      	movs	r3, #0
   23a22:	9344      	str	r3, [sp, #272]	; 0x110
   23a24:	2303      	movs	r3, #3
   23a26:	9349      	str	r3, [sp, #292]	; 0x124
   23a28:	6863      	ldr	r3, [r4, #4]
   23a2a:	2b00      	cmp	r3, #0
   23a2c:	dd61      	ble.n	23af2 <__ssvfiscanf_r+0x216>
   23a2e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23a30:	0659      	lsls	r1, r3, #25
   23a32:	d56f      	bpl.n	23b14 <__ssvfiscanf_r+0x238>
   23a34:	9b49      	ldr	r3, [sp, #292]	; 0x124
   23a36:	2b02      	cmp	r3, #2
   23a38:	dc7c      	bgt.n	23b34 <__ssvfiscanf_r+0x258>
   23a3a:	ab01      	add	r3, sp, #4
   23a3c:	4622      	mov	r2, r4
   23a3e:	a943      	add	r1, sp, #268	; 0x10c
   23a40:	4630      	mov	r0, r6
   23a42:	f000 fb59 	bl	240f8 <_scanf_chars>
   23a46:	2801      	cmp	r0, #1
   23a48:	f000 8092 	beq.w	23b70 <__ssvfiscanf_r+0x294>
   23a4c:	2802      	cmp	r0, #2
   23a4e:	d1ba      	bne.n	239c6 <__ssvfiscanf_r+0xea>
   23a50:	e01d      	b.n	23a8e <__ssvfiscanf_r+0x1b2>
   23a52:	2b75      	cmp	r3, #117	; 0x75
   23a54:	d0da      	beq.n	23a0c <__ssvfiscanf_r+0x130>
   23a56:	2b78      	cmp	r3, #120	; 0x78
   23a58:	d0c9      	beq.n	239ee <__ssvfiscanf_r+0x112>
   23a5a:	2b73      	cmp	r3, #115	; 0x73
   23a5c:	d19a      	bne.n	23994 <__ssvfiscanf_r+0xb8>
   23a5e:	2302      	movs	r3, #2
   23a60:	e7e1      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23a62:	6863      	ldr	r3, [r4, #4]
   23a64:	2b00      	cmp	r3, #0
   23a66:	dd0c      	ble.n	23a82 <__ssvfiscanf_r+0x1a6>
   23a68:	6823      	ldr	r3, [r4, #0]
   23a6a:	781a      	ldrb	r2, [r3, #0]
   23a6c:	4593      	cmp	fp, r2
   23a6e:	d17f      	bne.n	23b70 <__ssvfiscanf_r+0x294>
   23a70:	3301      	adds	r3, #1
   23a72:	6862      	ldr	r2, [r4, #4]
   23a74:	6023      	str	r3, [r4, #0]
   23a76:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23a78:	3a01      	subs	r2, #1
   23a7a:	3301      	adds	r3, #1
   23a7c:	6062      	str	r2, [r4, #4]
   23a7e:	9347      	str	r3, [sp, #284]	; 0x11c
   23a80:	e7a1      	b.n	239c6 <__ssvfiscanf_r+0xea>
   23a82:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23a84:	4621      	mov	r1, r4
   23a86:	4630      	mov	r0, r6
   23a88:	4798      	blx	r3
   23a8a:	2800      	cmp	r0, #0
   23a8c:	d0ec      	beq.n	23a68 <__ssvfiscanf_r+0x18c>
   23a8e:	9846      	ldr	r0, [sp, #280]	; 0x118
   23a90:	2800      	cmp	r0, #0
   23a92:	d163      	bne.n	23b5c <__ssvfiscanf_r+0x280>
   23a94:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23a98:	e066      	b.n	23b68 <__ssvfiscanf_r+0x28c>
   23a9a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23a9c:	f042 0220 	orr.w	r2, r2, #32
   23aa0:	9243      	str	r2, [sp, #268]	; 0x10c
   23aa2:	e7a4      	b.n	239ee <__ssvfiscanf_r+0x112>
   23aa4:	2308      	movs	r3, #8
   23aa6:	9344      	str	r3, [sp, #272]	; 0x110
   23aa8:	2304      	movs	r3, #4
   23aaa:	e7bc      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23aac:	4629      	mov	r1, r5
   23aae:	4640      	mov	r0, r8
   23ab0:	f000 fc8e 	bl	243d0 <__sccl>
   23ab4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23ab6:	4605      	mov	r5, r0
   23ab8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23abc:	9343      	str	r3, [sp, #268]	; 0x10c
   23abe:	2301      	movs	r3, #1
   23ac0:	e7b1      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23ac2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23ac4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23ac8:	9343      	str	r3, [sp, #268]	; 0x10c
   23aca:	2300      	movs	r3, #0
   23acc:	e7ab      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23ace:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23ad0:	06d0      	lsls	r0, r2, #27
   23ad2:	f53f af78 	bmi.w	239c6 <__ssvfiscanf_r+0xea>
   23ad6:	f012 0f01 	tst.w	r2, #1
   23ada:	9a01      	ldr	r2, [sp, #4]
   23adc:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23ade:	f102 0104 	add.w	r1, r2, #4
   23ae2:	9101      	str	r1, [sp, #4]
   23ae4:	6812      	ldr	r2, [r2, #0]
   23ae6:	bf14      	ite	ne
   23ae8:	8013      	strhne	r3, [r2, #0]
   23aea:	6013      	streq	r3, [r2, #0]
   23aec:	e76b      	b.n	239c6 <__ssvfiscanf_r+0xea>
   23aee:	2305      	movs	r3, #5
   23af0:	e799      	b.n	23a26 <__ssvfiscanf_r+0x14a>
   23af2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23af4:	4621      	mov	r1, r4
   23af6:	4630      	mov	r0, r6
   23af8:	4798      	blx	r3
   23afa:	2800      	cmp	r0, #0
   23afc:	d097      	beq.n	23a2e <__ssvfiscanf_r+0x152>
   23afe:	e7c6      	b.n	23a8e <__ssvfiscanf_r+0x1b2>
   23b00:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   23b02:	3201      	adds	r2, #1
   23b04:	9247      	str	r2, [sp, #284]	; 0x11c
   23b06:	6862      	ldr	r2, [r4, #4]
   23b08:	3a01      	subs	r2, #1
   23b0a:	2a00      	cmp	r2, #0
   23b0c:	6062      	str	r2, [r4, #4]
   23b0e:	dd0a      	ble.n	23b26 <__ssvfiscanf_r+0x24a>
   23b10:	3301      	adds	r3, #1
   23b12:	6023      	str	r3, [r4, #0]
   23b14:	f7fa fc56 	bl	1e3c4 <__locale_ctype_ptr>
   23b18:	6823      	ldr	r3, [r4, #0]
   23b1a:	781a      	ldrb	r2, [r3, #0]
   23b1c:	4410      	add	r0, r2
   23b1e:	7842      	ldrb	r2, [r0, #1]
   23b20:	0712      	lsls	r2, r2, #28
   23b22:	d4ed      	bmi.n	23b00 <__ssvfiscanf_r+0x224>
   23b24:	e786      	b.n	23a34 <__ssvfiscanf_r+0x158>
   23b26:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23b28:	4621      	mov	r1, r4
   23b2a:	4630      	mov	r0, r6
   23b2c:	4798      	blx	r3
   23b2e:	2800      	cmp	r0, #0
   23b30:	d0f0      	beq.n	23b14 <__ssvfiscanf_r+0x238>
   23b32:	e7ac      	b.n	23a8e <__ssvfiscanf_r+0x1b2>
   23b34:	2b04      	cmp	r3, #4
   23b36:	dc06      	bgt.n	23b46 <__ssvfiscanf_r+0x26a>
   23b38:	ab01      	add	r3, sp, #4
   23b3a:	4622      	mov	r2, r4
   23b3c:	a943      	add	r1, sp, #268	; 0x10c
   23b3e:	4630      	mov	r0, r6
   23b40:	f000 fb3e 	bl	241c0 <_scanf_i>
   23b44:	e77f      	b.n	23a46 <__ssvfiscanf_r+0x16a>
   23b46:	4b0e      	ldr	r3, [pc, #56]	; (23b80 <__ssvfiscanf_r+0x2a4>)
   23b48:	2b00      	cmp	r3, #0
   23b4a:	f43f af3c 	beq.w	239c6 <__ssvfiscanf_r+0xea>
   23b4e:	ab01      	add	r3, sp, #4
   23b50:	4622      	mov	r2, r4
   23b52:	a943      	add	r1, sp, #268	; 0x10c
   23b54:	4630      	mov	r0, r6
   23b56:	f7fb fcc5 	bl	1f4e4 <_scanf_float>
   23b5a:	e774      	b.n	23a46 <__ssvfiscanf_r+0x16a>
   23b5c:	89a3      	ldrh	r3, [r4, #12]
   23b5e:	f013 0f40 	tst.w	r3, #64	; 0x40
   23b62:	bf18      	it	ne
   23b64:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   23b68:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   23b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b70:	9846      	ldr	r0, [sp, #280]	; 0x118
   23b72:	e7f9      	b.n	23b68 <__ssvfiscanf_r+0x28c>
   23b74:	00023829 	.word	0x00023829
   23b78:	000238a3 	.word	0x000238a3
   23b7c:	00027dfa 	.word	0x00027dfa
   23b80:	0001f4e5 	.word	0x0001f4e5

00023b84 <__sfputc_r>:
__sfputc_r():
   23b84:	6893      	ldr	r3, [r2, #8]
   23b86:	b410      	push	{r4}
   23b88:	3b01      	subs	r3, #1
   23b8a:	2b00      	cmp	r3, #0
   23b8c:	6093      	str	r3, [r2, #8]
   23b8e:	da08      	bge.n	23ba2 <__sfputc_r+0x1e>
   23b90:	6994      	ldr	r4, [r2, #24]
   23b92:	42a3      	cmp	r3, r4
   23b94:	db02      	blt.n	23b9c <__sfputc_r+0x18>
   23b96:	b2cb      	uxtb	r3, r1
   23b98:	2b0a      	cmp	r3, #10
   23b9a:	d102      	bne.n	23ba2 <__sfputc_r+0x1e>
   23b9c:	bc10      	pop	{r4}
   23b9e:	f7fd bcb7 	b.w	21510 <__swbuf_r>
   23ba2:	6813      	ldr	r3, [r2, #0]
   23ba4:	1c58      	adds	r0, r3, #1
   23ba6:	6010      	str	r0, [r2, #0]
   23ba8:	7019      	strb	r1, [r3, #0]
   23baa:	b2c8      	uxtb	r0, r1
   23bac:	bc10      	pop	{r4}
   23bae:	4770      	bx	lr

00023bb0 <__sfputs_r>:
__sfputs_r():
   23bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   23bb2:	4606      	mov	r6, r0
   23bb4:	460f      	mov	r7, r1
   23bb6:	4614      	mov	r4, r2
   23bb8:	18d5      	adds	r5, r2, r3
   23bba:	42ac      	cmp	r4, r5
   23bbc:	d101      	bne.n	23bc2 <__sfputs_r+0x12>
   23bbe:	2000      	movs	r0, #0
   23bc0:	e007      	b.n	23bd2 <__sfputs_r+0x22>
   23bc2:	463a      	mov	r2, r7
   23bc4:	f814 1b01 	ldrb.w	r1, [r4], #1
   23bc8:	4630      	mov	r0, r6
   23bca:	f7ff ffdb 	bl	23b84 <__sfputc_r>
   23bce:	1c43      	adds	r3, r0, #1
   23bd0:	d1f3      	bne.n	23bba <__sfputs_r+0xa>
   23bd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00023bd4 <_vfiprintf_r>:
_vfprintf_r():
   23bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bd8:	b09d      	sub	sp, #116	; 0x74
   23bda:	460c      	mov	r4, r1
   23bdc:	4617      	mov	r7, r2
   23bde:	9303      	str	r3, [sp, #12]
   23be0:	4606      	mov	r6, r0
   23be2:	b118      	cbz	r0, 23bec <_vfiprintf_r+0x18>
   23be4:	6983      	ldr	r3, [r0, #24]
   23be6:	b90b      	cbnz	r3, 23bec <_vfiprintf_r+0x18>
   23be8:	f7fa f8f0 	bl	1ddcc <__sinit>
   23bec:	4b7c      	ldr	r3, [pc, #496]	; (23de0 <_vfiprintf_r+0x20c>)
   23bee:	429c      	cmp	r4, r3
   23bf0:	d157      	bne.n	23ca2 <_vfiprintf_r+0xce>
   23bf2:	6874      	ldr	r4, [r6, #4]
   23bf4:	89a3      	ldrh	r3, [r4, #12]
   23bf6:	0718      	lsls	r0, r3, #28
   23bf8:	d55d      	bpl.n	23cb6 <_vfiprintf_r+0xe2>
   23bfa:	6923      	ldr	r3, [r4, #16]
   23bfc:	2b00      	cmp	r3, #0
   23bfe:	d05a      	beq.n	23cb6 <_vfiprintf_r+0xe2>
   23c00:	2300      	movs	r3, #0
   23c02:	9309      	str	r3, [sp, #36]	; 0x24
   23c04:	2320      	movs	r3, #32
   23c06:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   23c0a:	2330      	movs	r3, #48	; 0x30
   23c0c:	f04f 0b01 	mov.w	fp, #1
   23c10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   23c14:	46b8      	mov	r8, r7
   23c16:	4645      	mov	r5, r8
   23c18:	f815 3b01 	ldrb.w	r3, [r5], #1
   23c1c:	2b00      	cmp	r3, #0
   23c1e:	d155      	bne.n	23ccc <_vfiprintf_r+0xf8>
   23c20:	ebb8 0a07 	subs.w	sl, r8, r7
   23c24:	d00b      	beq.n	23c3e <_vfiprintf_r+0x6a>
   23c26:	4653      	mov	r3, sl
   23c28:	463a      	mov	r2, r7
   23c2a:	4621      	mov	r1, r4
   23c2c:	4630      	mov	r0, r6
   23c2e:	f7ff ffbf 	bl	23bb0 <__sfputs_r>
   23c32:	3001      	adds	r0, #1
   23c34:	f000 80c4 	beq.w	23dc0 <_vfiprintf_r+0x1ec>
   23c38:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23c3a:	4453      	add	r3, sl
   23c3c:	9309      	str	r3, [sp, #36]	; 0x24
   23c3e:	f898 3000 	ldrb.w	r3, [r8]
   23c42:	2b00      	cmp	r3, #0
   23c44:	f000 80bc 	beq.w	23dc0 <_vfiprintf_r+0x1ec>
   23c48:	2300      	movs	r3, #0
   23c4a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   23c4e:	9304      	str	r3, [sp, #16]
   23c50:	9307      	str	r3, [sp, #28]
   23c52:	9205      	str	r2, [sp, #20]
   23c54:	9306      	str	r3, [sp, #24]
   23c56:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   23c5a:	931a      	str	r3, [sp, #104]	; 0x68
   23c5c:	2205      	movs	r2, #5
   23c5e:	7829      	ldrb	r1, [r5, #0]
   23c60:	4860      	ldr	r0, [pc, #384]	; (23de4 <_vfiprintf_r+0x210>)
   23c62:	f7fa fc43 	bl	1e4ec <memchr>
   23c66:	f105 0801 	add.w	r8, r5, #1
   23c6a:	9b04      	ldr	r3, [sp, #16]
   23c6c:	2800      	cmp	r0, #0
   23c6e:	d131      	bne.n	23cd4 <_vfiprintf_r+0x100>
   23c70:	06d9      	lsls	r1, r3, #27
   23c72:	bf44      	itt	mi
   23c74:	2220      	movmi	r2, #32
   23c76:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   23c7a:	071a      	lsls	r2, r3, #28
   23c7c:	bf44      	itt	mi
   23c7e:	222b      	movmi	r2, #43	; 0x2b
   23c80:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   23c84:	782a      	ldrb	r2, [r5, #0]
   23c86:	2a2a      	cmp	r2, #42	; 0x2a
   23c88:	d02c      	beq.n	23ce4 <_vfiprintf_r+0x110>
   23c8a:	2100      	movs	r1, #0
   23c8c:	200a      	movs	r0, #10
   23c8e:	9a07      	ldr	r2, [sp, #28]
   23c90:	46a8      	mov	r8, r5
   23c92:	f898 3000 	ldrb.w	r3, [r8]
   23c96:	3501      	adds	r5, #1
   23c98:	3b30      	subs	r3, #48	; 0x30
   23c9a:	2b09      	cmp	r3, #9
   23c9c:	d96d      	bls.n	23d7a <_vfiprintf_r+0x1a6>
   23c9e:	b371      	cbz	r1, 23cfe <_vfiprintf_r+0x12a>
   23ca0:	e026      	b.n	23cf0 <_vfiprintf_r+0x11c>
   23ca2:	4b51      	ldr	r3, [pc, #324]	; (23de8 <_vfiprintf_r+0x214>)
   23ca4:	429c      	cmp	r4, r3
   23ca6:	d101      	bne.n	23cac <_vfiprintf_r+0xd8>
   23ca8:	68b4      	ldr	r4, [r6, #8]
   23caa:	e7a3      	b.n	23bf4 <_vfiprintf_r+0x20>
   23cac:	4b4f      	ldr	r3, [pc, #316]	; (23dec <_vfiprintf_r+0x218>)
   23cae:	429c      	cmp	r4, r3
   23cb0:	bf08      	it	eq
   23cb2:	68f4      	ldreq	r4, [r6, #12]
   23cb4:	e79e      	b.n	23bf4 <_vfiprintf_r+0x20>
   23cb6:	4621      	mov	r1, r4
   23cb8:	4630      	mov	r0, r6
   23cba:	f7fd fc9b 	bl	215f4 <__swsetup_r>
   23cbe:	2800      	cmp	r0, #0
   23cc0:	d09e      	beq.n	23c00 <_vfiprintf_r+0x2c>
   23cc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23cc6:	b01d      	add	sp, #116	; 0x74
   23cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ccc:	2b25      	cmp	r3, #37	; 0x25
   23cce:	d0a7      	beq.n	23c20 <_vfiprintf_r+0x4c>
   23cd0:	46a8      	mov	r8, r5
   23cd2:	e7a0      	b.n	23c16 <_vfiprintf_r+0x42>
   23cd4:	4a43      	ldr	r2, [pc, #268]	; (23de4 <_vfiprintf_r+0x210>)
   23cd6:	4645      	mov	r5, r8
   23cd8:	1a80      	subs	r0, r0, r2
   23cda:	fa0b f000 	lsl.w	r0, fp, r0
   23cde:	4318      	orrs	r0, r3
   23ce0:	9004      	str	r0, [sp, #16]
   23ce2:	e7bb      	b.n	23c5c <_vfiprintf_r+0x88>
   23ce4:	9a03      	ldr	r2, [sp, #12]
   23ce6:	1d11      	adds	r1, r2, #4
   23ce8:	6812      	ldr	r2, [r2, #0]
   23cea:	9103      	str	r1, [sp, #12]
   23cec:	2a00      	cmp	r2, #0
   23cee:	db01      	blt.n	23cf4 <_vfiprintf_r+0x120>
   23cf0:	9207      	str	r2, [sp, #28]
   23cf2:	e004      	b.n	23cfe <_vfiprintf_r+0x12a>
   23cf4:	4252      	negs	r2, r2
   23cf6:	f043 0302 	orr.w	r3, r3, #2
   23cfa:	9207      	str	r2, [sp, #28]
   23cfc:	9304      	str	r3, [sp, #16]
   23cfe:	f898 3000 	ldrb.w	r3, [r8]
   23d02:	2b2e      	cmp	r3, #46	; 0x2e
   23d04:	d110      	bne.n	23d28 <_vfiprintf_r+0x154>
   23d06:	f898 3001 	ldrb.w	r3, [r8, #1]
   23d0a:	f108 0101 	add.w	r1, r8, #1
   23d0e:	2b2a      	cmp	r3, #42	; 0x2a
   23d10:	d137      	bne.n	23d82 <_vfiprintf_r+0x1ae>
   23d12:	9b03      	ldr	r3, [sp, #12]
   23d14:	f108 0802 	add.w	r8, r8, #2
   23d18:	1d1a      	adds	r2, r3, #4
   23d1a:	681b      	ldr	r3, [r3, #0]
   23d1c:	9203      	str	r2, [sp, #12]
   23d1e:	2b00      	cmp	r3, #0
   23d20:	bfb8      	it	lt
   23d22:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   23d26:	9305      	str	r3, [sp, #20]
   23d28:	4d31      	ldr	r5, [pc, #196]	; (23df0 <_vfiprintf_r+0x21c>)
   23d2a:	2203      	movs	r2, #3
   23d2c:	f898 1000 	ldrb.w	r1, [r8]
   23d30:	4628      	mov	r0, r5
   23d32:	f7fa fbdb 	bl	1e4ec <memchr>
   23d36:	b140      	cbz	r0, 23d4a <_vfiprintf_r+0x176>
   23d38:	2340      	movs	r3, #64	; 0x40
   23d3a:	1b40      	subs	r0, r0, r5
   23d3c:	fa03 f000 	lsl.w	r0, r3, r0
   23d40:	9b04      	ldr	r3, [sp, #16]
   23d42:	f108 0801 	add.w	r8, r8, #1
   23d46:	4303      	orrs	r3, r0
   23d48:	9304      	str	r3, [sp, #16]
   23d4a:	f898 1000 	ldrb.w	r1, [r8]
   23d4e:	2206      	movs	r2, #6
   23d50:	4828      	ldr	r0, [pc, #160]	; (23df4 <_vfiprintf_r+0x220>)
   23d52:	f108 0701 	add.w	r7, r8, #1
   23d56:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   23d5a:	f7fa fbc7 	bl	1e4ec <memchr>
   23d5e:	2800      	cmp	r0, #0
   23d60:	d034      	beq.n	23dcc <_vfiprintf_r+0x1f8>
   23d62:	4b25      	ldr	r3, [pc, #148]	; (23df8 <_vfiprintf_r+0x224>)
   23d64:	bb03      	cbnz	r3, 23da8 <_vfiprintf_r+0x1d4>
   23d66:	9b03      	ldr	r3, [sp, #12]
   23d68:	3307      	adds	r3, #7
   23d6a:	f023 0307 	bic.w	r3, r3, #7
   23d6e:	3308      	adds	r3, #8
   23d70:	9303      	str	r3, [sp, #12]
   23d72:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23d74:	444b      	add	r3, r9
   23d76:	9309      	str	r3, [sp, #36]	; 0x24
   23d78:	e74c      	b.n	23c14 <_vfiprintf_r+0x40>
   23d7a:	fb00 3202 	mla	r2, r0, r2, r3
   23d7e:	2101      	movs	r1, #1
   23d80:	e786      	b.n	23c90 <_vfiprintf_r+0xbc>
   23d82:	2300      	movs	r3, #0
   23d84:	250a      	movs	r5, #10
   23d86:	4618      	mov	r0, r3
   23d88:	9305      	str	r3, [sp, #20]
   23d8a:	4688      	mov	r8, r1
   23d8c:	f898 2000 	ldrb.w	r2, [r8]
   23d90:	3101      	adds	r1, #1
   23d92:	3a30      	subs	r2, #48	; 0x30
   23d94:	2a09      	cmp	r2, #9
   23d96:	d903      	bls.n	23da0 <_vfiprintf_r+0x1cc>
   23d98:	2b00      	cmp	r3, #0
   23d9a:	d0c5      	beq.n	23d28 <_vfiprintf_r+0x154>
   23d9c:	9005      	str	r0, [sp, #20]
   23d9e:	e7c3      	b.n	23d28 <_vfiprintf_r+0x154>
   23da0:	fb05 2000 	mla	r0, r5, r0, r2
   23da4:	2301      	movs	r3, #1
   23da6:	e7f0      	b.n	23d8a <_vfiprintf_r+0x1b6>
   23da8:	ab03      	add	r3, sp, #12
   23daa:	9300      	str	r3, [sp, #0]
   23dac:	4622      	mov	r2, r4
   23dae:	4b13      	ldr	r3, [pc, #76]	; (23dfc <_vfiprintf_r+0x228>)
   23db0:	a904      	add	r1, sp, #16
   23db2:	4630      	mov	r0, r6
   23db4:	f7fa ffc6 	bl	1ed44 <_printf_float>
   23db8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   23dbc:	4681      	mov	r9, r0
   23dbe:	d1d8      	bne.n	23d72 <_vfiprintf_r+0x19e>
   23dc0:	89a3      	ldrh	r3, [r4, #12]
   23dc2:	065b      	lsls	r3, r3, #25
   23dc4:	f53f af7d 	bmi.w	23cc2 <_vfiprintf_r+0xee>
   23dc8:	9809      	ldr	r0, [sp, #36]	; 0x24
   23dca:	e77c      	b.n	23cc6 <_vfiprintf_r+0xf2>
   23dcc:	ab03      	add	r3, sp, #12
   23dce:	9300      	str	r3, [sp, #0]
   23dd0:	4622      	mov	r2, r4
   23dd2:	4b0a      	ldr	r3, [pc, #40]	; (23dfc <_vfiprintf_r+0x228>)
   23dd4:	a904      	add	r1, sp, #16
   23dd6:	4630      	mov	r0, r6
   23dd8:	f7fb fa64 	bl	1f2a4 <_printf_i>
   23ddc:	e7ec      	b.n	23db8 <_vfiprintf_r+0x1e4>
   23dde:	bf00      	nop
   23de0:	000279b8 	.word	0x000279b8
   23de4:	00027df4 	.word	0x00027df4
   23de8:	000279d8 	.word	0x000279d8
   23dec:	00027998 	.word	0x00027998
   23df0:	00027dfa 	.word	0x00027dfa
   23df4:	00027dfe 	.word	0x00027dfe
   23df8:	0001ed45 	.word	0x0001ed45
   23dfc:	00023bb1 	.word	0x00023bb1

00023e00 <__svfiscanf_r>:
__svfscanf_r():
   23e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e04:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   23e08:	9301      	str	r3, [sp, #4]
   23e0a:	2300      	movs	r3, #0
   23e0c:	4606      	mov	r6, r0
   23e0e:	460c      	mov	r4, r1
   23e10:	4692      	mov	sl, r2
   23e12:	270a      	movs	r7, #10
   23e14:	9346      	str	r3, [sp, #280]	; 0x118
   23e16:	9347      	str	r3, [sp, #284]	; 0x11c
   23e18:	4b9f      	ldr	r3, [pc, #636]	; (24098 <__svfiscanf_r+0x298>)
   23e1a:	f10d 080c 	add.w	r8, sp, #12
   23e1e:	93a2      	str	r3, [sp, #648]	; 0x288
   23e20:	4b9e      	ldr	r3, [pc, #632]	; (2409c <__svfiscanf_r+0x29c>)
   23e22:	f8df 927c 	ldr.w	r9, [pc, #636]	; 240a0 <__svfiscanf_r+0x2a0>
   23e26:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   23e2a:	93a3      	str	r3, [sp, #652]	; 0x28c
   23e2c:	f89a 3000 	ldrb.w	r3, [sl]
   23e30:	2b00      	cmp	r3, #0
   23e32:	f000 812f 	beq.w	24094 <__svfiscanf_r+0x294>
   23e36:	f7fa fac5 	bl	1e3c4 <__locale_ctype_ptr>
   23e3a:	f89a b000 	ldrb.w	fp, [sl]
   23e3e:	4458      	add	r0, fp
   23e40:	7843      	ldrb	r3, [r0, #1]
   23e42:	f013 0308 	ands.w	r3, r3, #8
   23e46:	d143      	bne.n	23ed0 <__svfiscanf_r+0xd0>
   23e48:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   23e4c:	f10a 0501 	add.w	r5, sl, #1
   23e50:	f040 8099 	bne.w	23f86 <__svfiscanf_r+0x186>
   23e54:	9345      	str	r3, [sp, #276]	; 0x114
   23e56:	9343      	str	r3, [sp, #268]	; 0x10c
   23e58:	f89a 3001 	ldrb.w	r3, [sl, #1]
   23e5c:	2b2a      	cmp	r3, #42	; 0x2a
   23e5e:	d103      	bne.n	23e68 <__svfiscanf_r+0x68>
   23e60:	2310      	movs	r3, #16
   23e62:	f10a 0502 	add.w	r5, sl, #2
   23e66:	9343      	str	r3, [sp, #268]	; 0x10c
   23e68:	7829      	ldrb	r1, [r5, #0]
   23e6a:	46aa      	mov	sl, r5
   23e6c:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   23e70:	2a09      	cmp	r2, #9
   23e72:	f105 0501 	add.w	r5, r5, #1
   23e76:	d941      	bls.n	23efc <__svfiscanf_r+0xfc>
   23e78:	2203      	movs	r2, #3
   23e7a:	4889      	ldr	r0, [pc, #548]	; (240a0 <__svfiscanf_r+0x2a0>)
   23e7c:	f7fa fb36 	bl	1e4ec <memchr>
   23e80:	b138      	cbz	r0, 23e92 <__svfiscanf_r+0x92>
   23e82:	eba0 0309 	sub.w	r3, r0, r9
   23e86:	2001      	movs	r0, #1
   23e88:	46aa      	mov	sl, r5
   23e8a:	4098      	lsls	r0, r3
   23e8c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23e8e:	4318      	orrs	r0, r3
   23e90:	9043      	str	r0, [sp, #268]	; 0x10c
   23e92:	f89a 3000 	ldrb.w	r3, [sl]
   23e96:	f10a 0501 	add.w	r5, sl, #1
   23e9a:	2b67      	cmp	r3, #103	; 0x67
   23e9c:	d84a      	bhi.n	23f34 <__svfiscanf_r+0x134>
   23e9e:	2b65      	cmp	r3, #101	; 0x65
   23ea0:	f080 80b7 	bcs.w	24012 <__svfiscanf_r+0x212>
   23ea4:	2b47      	cmp	r3, #71	; 0x47
   23ea6:	d82f      	bhi.n	23f08 <__svfiscanf_r+0x108>
   23ea8:	2b45      	cmp	r3, #69	; 0x45
   23eaa:	f080 80b2 	bcs.w	24012 <__svfiscanf_r+0x212>
   23eae:	2b00      	cmp	r3, #0
   23eb0:	f000 8082 	beq.w	23fb8 <__svfiscanf_r+0x1b8>
   23eb4:	2b25      	cmp	r3, #37	; 0x25
   23eb6:	d066      	beq.n	23f86 <__svfiscanf_r+0x186>
   23eb8:	2303      	movs	r3, #3
   23eba:	9744      	str	r7, [sp, #272]	; 0x110
   23ebc:	9349      	str	r3, [sp, #292]	; 0x124
   23ebe:	e045      	b.n	23f4c <__svfiscanf_r+0x14c>
   23ec0:	9947      	ldr	r1, [sp, #284]	; 0x11c
   23ec2:	3301      	adds	r3, #1
   23ec4:	3101      	adds	r1, #1
   23ec6:	9147      	str	r1, [sp, #284]	; 0x11c
   23ec8:	6861      	ldr	r1, [r4, #4]
   23eca:	6023      	str	r3, [r4, #0]
   23ecc:	3901      	subs	r1, #1
   23ece:	6061      	str	r1, [r4, #4]
   23ed0:	6863      	ldr	r3, [r4, #4]
   23ed2:	2b00      	cmp	r3, #0
   23ed4:	dd0b      	ble.n	23eee <__svfiscanf_r+0xee>
   23ed6:	f7fa fa75 	bl	1e3c4 <__locale_ctype_ptr>
   23eda:	6823      	ldr	r3, [r4, #0]
   23edc:	7819      	ldrb	r1, [r3, #0]
   23ede:	4408      	add	r0, r1
   23ee0:	7841      	ldrb	r1, [r0, #1]
   23ee2:	070d      	lsls	r5, r1, #28
   23ee4:	d4ec      	bmi.n	23ec0 <__svfiscanf_r+0xc0>
   23ee6:	f10a 0501 	add.w	r5, sl, #1
   23eea:	46aa      	mov	sl, r5
   23eec:	e79e      	b.n	23e2c <__svfiscanf_r+0x2c>
   23eee:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23ef0:	4621      	mov	r1, r4
   23ef2:	4630      	mov	r0, r6
   23ef4:	4798      	blx	r3
   23ef6:	2800      	cmp	r0, #0
   23ef8:	d0ed      	beq.n	23ed6 <__svfiscanf_r+0xd6>
   23efa:	e7f4      	b.n	23ee6 <__svfiscanf_r+0xe6>
   23efc:	9b45      	ldr	r3, [sp, #276]	; 0x114
   23efe:	fb07 1303 	mla	r3, r7, r3, r1
   23f02:	3b30      	subs	r3, #48	; 0x30
   23f04:	9345      	str	r3, [sp, #276]	; 0x114
   23f06:	e7af      	b.n	23e68 <__svfiscanf_r+0x68>
   23f08:	2b5b      	cmp	r3, #91	; 0x5b
   23f0a:	d061      	beq.n	23fd0 <__svfiscanf_r+0x1d0>
   23f0c:	d80c      	bhi.n	23f28 <__svfiscanf_r+0x128>
   23f0e:	2b58      	cmp	r3, #88	; 0x58
   23f10:	d1d2      	bne.n	23eb8 <__svfiscanf_r+0xb8>
   23f12:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23f14:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   23f18:	9243      	str	r2, [sp, #268]	; 0x10c
   23f1a:	2210      	movs	r2, #16
   23f1c:	9244      	str	r2, [sp, #272]	; 0x110
   23f1e:	2b6f      	cmp	r3, #111	; 0x6f
   23f20:	bfb4      	ite	lt
   23f22:	2303      	movlt	r3, #3
   23f24:	2304      	movge	r3, #4
   23f26:	e010      	b.n	23f4a <__svfiscanf_r+0x14a>
   23f28:	2b63      	cmp	r3, #99	; 0x63
   23f2a:	d05c      	beq.n	23fe6 <__svfiscanf_r+0x1e6>
   23f2c:	2b64      	cmp	r3, #100	; 0x64
   23f2e:	d1c3      	bne.n	23eb8 <__svfiscanf_r+0xb8>
   23f30:	9744      	str	r7, [sp, #272]	; 0x110
   23f32:	e7f4      	b.n	23f1e <__svfiscanf_r+0x11e>
   23f34:	2b70      	cmp	r3, #112	; 0x70
   23f36:	d042      	beq.n	23fbe <__svfiscanf_r+0x1be>
   23f38:	d81d      	bhi.n	23f76 <__svfiscanf_r+0x176>
   23f3a:	2b6e      	cmp	r3, #110	; 0x6e
   23f3c:	d059      	beq.n	23ff2 <__svfiscanf_r+0x1f2>
   23f3e:	d843      	bhi.n	23fc8 <__svfiscanf_r+0x1c8>
   23f40:	2b69      	cmp	r3, #105	; 0x69
   23f42:	d1b9      	bne.n	23eb8 <__svfiscanf_r+0xb8>
   23f44:	2300      	movs	r3, #0
   23f46:	9344      	str	r3, [sp, #272]	; 0x110
   23f48:	2303      	movs	r3, #3
   23f4a:	9349      	str	r3, [sp, #292]	; 0x124
   23f4c:	6863      	ldr	r3, [r4, #4]
   23f4e:	2b00      	cmp	r3, #0
   23f50:	dd61      	ble.n	24016 <__svfiscanf_r+0x216>
   23f52:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23f54:	0659      	lsls	r1, r3, #25
   23f56:	d56f      	bpl.n	24038 <__svfiscanf_r+0x238>
   23f58:	9b49      	ldr	r3, [sp, #292]	; 0x124
   23f5a:	2b02      	cmp	r3, #2
   23f5c:	dc7c      	bgt.n	24058 <__svfiscanf_r+0x258>
   23f5e:	ab01      	add	r3, sp, #4
   23f60:	4622      	mov	r2, r4
   23f62:	a943      	add	r1, sp, #268	; 0x10c
   23f64:	4630      	mov	r0, r6
   23f66:	f000 f8c7 	bl	240f8 <_scanf_chars>
   23f6a:	2801      	cmp	r0, #1
   23f6c:	f000 8092 	beq.w	24094 <__svfiscanf_r+0x294>
   23f70:	2802      	cmp	r0, #2
   23f72:	d1ba      	bne.n	23eea <__svfiscanf_r+0xea>
   23f74:	e01d      	b.n	23fb2 <__svfiscanf_r+0x1b2>
   23f76:	2b75      	cmp	r3, #117	; 0x75
   23f78:	d0da      	beq.n	23f30 <__svfiscanf_r+0x130>
   23f7a:	2b78      	cmp	r3, #120	; 0x78
   23f7c:	d0c9      	beq.n	23f12 <__svfiscanf_r+0x112>
   23f7e:	2b73      	cmp	r3, #115	; 0x73
   23f80:	d19a      	bne.n	23eb8 <__svfiscanf_r+0xb8>
   23f82:	2302      	movs	r3, #2
   23f84:	e7e1      	b.n	23f4a <__svfiscanf_r+0x14a>
   23f86:	6863      	ldr	r3, [r4, #4]
   23f88:	2b00      	cmp	r3, #0
   23f8a:	dd0c      	ble.n	23fa6 <__svfiscanf_r+0x1a6>
   23f8c:	6823      	ldr	r3, [r4, #0]
   23f8e:	781a      	ldrb	r2, [r3, #0]
   23f90:	4593      	cmp	fp, r2
   23f92:	d17f      	bne.n	24094 <__svfiscanf_r+0x294>
   23f94:	3301      	adds	r3, #1
   23f96:	6862      	ldr	r2, [r4, #4]
   23f98:	6023      	str	r3, [r4, #0]
   23f9a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   23f9c:	3a01      	subs	r2, #1
   23f9e:	3301      	adds	r3, #1
   23fa0:	6062      	str	r2, [r4, #4]
   23fa2:	9347      	str	r3, [sp, #284]	; 0x11c
   23fa4:	e7a1      	b.n	23eea <__svfiscanf_r+0xea>
   23fa6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   23fa8:	4621      	mov	r1, r4
   23faa:	4630      	mov	r0, r6
   23fac:	4798      	blx	r3
   23fae:	2800      	cmp	r0, #0
   23fb0:	d0ec      	beq.n	23f8c <__svfiscanf_r+0x18c>
   23fb2:	9846      	ldr	r0, [sp, #280]	; 0x118
   23fb4:	2800      	cmp	r0, #0
   23fb6:	d163      	bne.n	24080 <__svfiscanf_r+0x280>
   23fb8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23fbc:	e066      	b.n	2408c <__svfiscanf_r+0x28c>
   23fbe:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23fc0:	f042 0220 	orr.w	r2, r2, #32
   23fc4:	9243      	str	r2, [sp, #268]	; 0x10c
   23fc6:	e7a4      	b.n	23f12 <__svfiscanf_r+0x112>
   23fc8:	2308      	movs	r3, #8
   23fca:	9344      	str	r3, [sp, #272]	; 0x110
   23fcc:	2304      	movs	r3, #4
   23fce:	e7bc      	b.n	23f4a <__svfiscanf_r+0x14a>
   23fd0:	4629      	mov	r1, r5
   23fd2:	4640      	mov	r0, r8
   23fd4:	f000 f9fc 	bl	243d0 <__sccl>
   23fd8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23fda:	4605      	mov	r5, r0
   23fdc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23fe0:	9343      	str	r3, [sp, #268]	; 0x10c
   23fe2:	2301      	movs	r3, #1
   23fe4:	e7b1      	b.n	23f4a <__svfiscanf_r+0x14a>
   23fe6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   23fe8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23fec:	9343      	str	r3, [sp, #268]	; 0x10c
   23fee:	2300      	movs	r3, #0
   23ff0:	e7ab      	b.n	23f4a <__svfiscanf_r+0x14a>
   23ff2:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   23ff4:	06d0      	lsls	r0, r2, #27
   23ff6:	f53f af78 	bmi.w	23eea <__svfiscanf_r+0xea>
   23ffa:	f012 0f01 	tst.w	r2, #1
   23ffe:	9a01      	ldr	r2, [sp, #4]
   24000:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   24002:	f102 0104 	add.w	r1, r2, #4
   24006:	9101      	str	r1, [sp, #4]
   24008:	6812      	ldr	r2, [r2, #0]
   2400a:	bf14      	ite	ne
   2400c:	8013      	strhne	r3, [r2, #0]
   2400e:	6013      	streq	r3, [r2, #0]
   24010:	e76b      	b.n	23eea <__svfiscanf_r+0xea>
   24012:	2305      	movs	r3, #5
   24014:	e799      	b.n	23f4a <__svfiscanf_r+0x14a>
   24016:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24018:	4621      	mov	r1, r4
   2401a:	4630      	mov	r0, r6
   2401c:	4798      	blx	r3
   2401e:	2800      	cmp	r0, #0
   24020:	d097      	beq.n	23f52 <__svfiscanf_r+0x152>
   24022:	e7c6      	b.n	23fb2 <__svfiscanf_r+0x1b2>
   24024:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   24026:	3201      	adds	r2, #1
   24028:	9247      	str	r2, [sp, #284]	; 0x11c
   2402a:	6862      	ldr	r2, [r4, #4]
   2402c:	3a01      	subs	r2, #1
   2402e:	2a00      	cmp	r2, #0
   24030:	6062      	str	r2, [r4, #4]
   24032:	dd0a      	ble.n	2404a <__svfiscanf_r+0x24a>
   24034:	3301      	adds	r3, #1
   24036:	6023      	str	r3, [r4, #0]
   24038:	f7fa f9c4 	bl	1e3c4 <__locale_ctype_ptr>
   2403c:	6823      	ldr	r3, [r4, #0]
   2403e:	781a      	ldrb	r2, [r3, #0]
   24040:	4410      	add	r0, r2
   24042:	7842      	ldrb	r2, [r0, #1]
   24044:	0712      	lsls	r2, r2, #28
   24046:	d4ed      	bmi.n	24024 <__svfiscanf_r+0x224>
   24048:	e786      	b.n	23f58 <__svfiscanf_r+0x158>
   2404a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   2404c:	4621      	mov	r1, r4
   2404e:	4630      	mov	r0, r6
   24050:	4798      	blx	r3
   24052:	2800      	cmp	r0, #0
   24054:	d0f0      	beq.n	24038 <__svfiscanf_r+0x238>
   24056:	e7ac      	b.n	23fb2 <__svfiscanf_r+0x1b2>
   24058:	2b04      	cmp	r3, #4
   2405a:	dc06      	bgt.n	2406a <__svfiscanf_r+0x26a>
   2405c:	ab01      	add	r3, sp, #4
   2405e:	4622      	mov	r2, r4
   24060:	a943      	add	r1, sp, #268	; 0x10c
   24062:	4630      	mov	r0, r6
   24064:	f000 f8ac 	bl	241c0 <_scanf_i>
   24068:	e77f      	b.n	23f6a <__svfiscanf_r+0x16a>
   2406a:	4b0e      	ldr	r3, [pc, #56]	; (240a4 <__svfiscanf_r+0x2a4>)
   2406c:	2b00      	cmp	r3, #0
   2406e:	f43f af3c 	beq.w	23eea <__svfiscanf_r+0xea>
   24072:	ab01      	add	r3, sp, #4
   24074:	4622      	mov	r2, r4
   24076:	a943      	add	r1, sp, #268	; 0x10c
   24078:	4630      	mov	r0, r6
   2407a:	f7fb fa33 	bl	1f4e4 <_scanf_float>
   2407e:	e774      	b.n	23f6a <__svfiscanf_r+0x16a>
   24080:	89a3      	ldrh	r3, [r4, #12]
   24082:	f013 0f40 	tst.w	r3, #64	; 0x40
   24086:	bf18      	it	ne
   24088:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   2408c:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   24090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24094:	9846      	ldr	r0, [sp, #280]	; 0x118
   24096:	e7f9      	b.n	2408c <__svfiscanf_r+0x28c>
   24098:	000245ed 	.word	0x000245ed
   2409c:	0001faa9 	.word	0x0001faa9
   240a0:	00027dfa 	.word	0x00027dfa
   240a4:	0001f4e5 	.word	0x0001f4e5

000240a8 <_vfiscanf_r>:
_vfscanf_r():
   240a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   240ac:	460c      	mov	r4, r1
   240ae:	4616      	mov	r6, r2
   240b0:	461f      	mov	r7, r3
   240b2:	4605      	mov	r5, r0
   240b4:	b118      	cbz	r0, 240be <_vfiscanf_r+0x16>
   240b6:	6983      	ldr	r3, [r0, #24]
   240b8:	b90b      	cbnz	r3, 240be <_vfiscanf_r+0x16>
   240ba:	f7f9 fe87 	bl	1ddcc <__sinit>
   240be:	4b0b      	ldr	r3, [pc, #44]	; (240ec <_vfiscanf_r+0x44>)
   240c0:	429c      	cmp	r4, r3
   240c2:	d108      	bne.n	240d6 <_vfiscanf_r+0x2e>
   240c4:	686c      	ldr	r4, [r5, #4]
   240c6:	463b      	mov	r3, r7
   240c8:	4632      	mov	r2, r6
   240ca:	4621      	mov	r1, r4
   240cc:	4628      	mov	r0, r5
   240ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   240d2:	f7ff be95 	b.w	23e00 <__svfiscanf_r>
   240d6:	4b06      	ldr	r3, [pc, #24]	; (240f0 <_vfiscanf_r+0x48>)
   240d8:	429c      	cmp	r4, r3
   240da:	d101      	bne.n	240e0 <_vfiscanf_r+0x38>
   240dc:	68ac      	ldr	r4, [r5, #8]
   240de:	e7f2      	b.n	240c6 <_vfiscanf_r+0x1e>
   240e0:	4b04      	ldr	r3, [pc, #16]	; (240f4 <_vfiscanf_r+0x4c>)
   240e2:	429c      	cmp	r4, r3
   240e4:	bf08      	it	eq
   240e6:	68ec      	ldreq	r4, [r5, #12]
   240e8:	e7ed      	b.n	240c6 <_vfiscanf_r+0x1e>
   240ea:	bf00      	nop
   240ec:	000279b8 	.word	0x000279b8
   240f0:	000279d8 	.word	0x000279d8
   240f4:	00027998 	.word	0x00027998

000240f8 <_scanf_chars>:
_scanf_chars():
   240f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   240fc:	4615      	mov	r5, r2
   240fe:	688a      	ldr	r2, [r1, #8]
   24100:	4680      	mov	r8, r0
   24102:	460c      	mov	r4, r1
   24104:	b932      	cbnz	r2, 24114 <_scanf_chars+0x1c>
   24106:	698a      	ldr	r2, [r1, #24]
   24108:	2a00      	cmp	r2, #0
   2410a:	bf0c      	ite	eq
   2410c:	2201      	moveq	r2, #1
   2410e:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   24112:	608a      	str	r2, [r1, #8]
   24114:	2600      	movs	r6, #0
   24116:	6822      	ldr	r2, [r4, #0]
   24118:	06d1      	lsls	r1, r2, #27
   2411a:	bf5f      	itttt	pl
   2411c:	681a      	ldrpl	r2, [r3, #0]
   2411e:	1d11      	addpl	r1, r2, #4
   24120:	6019      	strpl	r1, [r3, #0]
   24122:	6817      	ldrpl	r7, [r2, #0]
   24124:	69a3      	ldr	r3, [r4, #24]
   24126:	b1db      	cbz	r3, 24160 <_scanf_chars+0x68>
   24128:	2b01      	cmp	r3, #1
   2412a:	d107      	bne.n	2413c <_scanf_chars+0x44>
   2412c:	682b      	ldr	r3, [r5, #0]
   2412e:	6962      	ldr	r2, [r4, #20]
   24130:	781b      	ldrb	r3, [r3, #0]
   24132:	5cd3      	ldrb	r3, [r2, r3]
   24134:	b9a3      	cbnz	r3, 24160 <_scanf_chars+0x68>
   24136:	2e00      	cmp	r6, #0
   24138:	d131      	bne.n	2419e <_scanf_chars+0xa6>
   2413a:	e006      	b.n	2414a <_scanf_chars+0x52>
   2413c:	2b02      	cmp	r3, #2
   2413e:	d007      	beq.n	24150 <_scanf_chars+0x58>
   24140:	2e00      	cmp	r6, #0
   24142:	d12c      	bne.n	2419e <_scanf_chars+0xa6>
   24144:	69a3      	ldr	r3, [r4, #24]
   24146:	2b01      	cmp	r3, #1
   24148:	d129      	bne.n	2419e <_scanf_chars+0xa6>
   2414a:	2001      	movs	r0, #1
   2414c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   24150:	f7fa f938 	bl	1e3c4 <__locale_ctype_ptr>
   24154:	682b      	ldr	r3, [r5, #0]
   24156:	781b      	ldrb	r3, [r3, #0]
   24158:	4418      	add	r0, r3
   2415a:	7843      	ldrb	r3, [r0, #1]
   2415c:	071b      	lsls	r3, r3, #28
   2415e:	d4ef      	bmi.n	24140 <_scanf_chars+0x48>
   24160:	6823      	ldr	r3, [r4, #0]
   24162:	3601      	adds	r6, #1
   24164:	06da      	lsls	r2, r3, #27
   24166:	bf5e      	ittt	pl
   24168:	682b      	ldrpl	r3, [r5, #0]
   2416a:	781b      	ldrbpl	r3, [r3, #0]
   2416c:	703b      	strbpl	r3, [r7, #0]
   2416e:	682a      	ldr	r2, [r5, #0]
   24170:	686b      	ldr	r3, [r5, #4]
   24172:	f102 0201 	add.w	r2, r2, #1
   24176:	602a      	str	r2, [r5, #0]
   24178:	68a2      	ldr	r2, [r4, #8]
   2417a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   2417e:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   24182:	606b      	str	r3, [r5, #4]
   24184:	bf58      	it	pl
   24186:	3701      	addpl	r7, #1
   24188:	60a2      	str	r2, [r4, #8]
   2418a:	b142      	cbz	r2, 2419e <_scanf_chars+0xa6>
   2418c:	2b00      	cmp	r3, #0
   2418e:	dcc9      	bgt.n	24124 <_scanf_chars+0x2c>
   24190:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   24194:	4629      	mov	r1, r5
   24196:	4640      	mov	r0, r8
   24198:	4798      	blx	r3
   2419a:	2800      	cmp	r0, #0
   2419c:	d0c2      	beq.n	24124 <_scanf_chars+0x2c>
   2419e:	6823      	ldr	r3, [r4, #0]
   241a0:	f013 0310 	ands.w	r3, r3, #16
   241a4:	d105      	bne.n	241b2 <_scanf_chars+0xba>
   241a6:	68e2      	ldr	r2, [r4, #12]
   241a8:	3201      	adds	r2, #1
   241aa:	60e2      	str	r2, [r4, #12]
   241ac:	69a2      	ldr	r2, [r4, #24]
   241ae:	b102      	cbz	r2, 241b2 <_scanf_chars+0xba>
   241b0:	703b      	strb	r3, [r7, #0]
   241b2:	6923      	ldr	r3, [r4, #16]
   241b4:	2000      	movs	r0, #0
   241b6:	441e      	add	r6, r3
   241b8:	6126      	str	r6, [r4, #16]
   241ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   241be:	Address 0x00000000000241be is out of bounds.


000241c0 <_scanf_i>:
_scanf_i():
   241c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241c4:	460c      	mov	r4, r1
   241c6:	469a      	mov	sl, r3
   241c8:	4b74      	ldr	r3, [pc, #464]	; (2439c <_scanf_i+0x1dc>)
   241ca:	b087      	sub	sp, #28
   241cc:	4683      	mov	fp, r0
   241ce:	4616      	mov	r6, r2
   241d0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   241d4:	ab03      	add	r3, sp, #12
   241d6:	68a7      	ldr	r7, [r4, #8]
   241d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   241dc:	4b70      	ldr	r3, [pc, #448]	; (243a0 <_scanf_i+0x1e0>)
   241de:	69a1      	ldr	r1, [r4, #24]
   241e0:	4a70      	ldr	r2, [pc, #448]	; (243a4 <_scanf_i+0x1e4>)
   241e2:	f104 091c 	add.w	r9, r4, #28
   241e6:	2903      	cmp	r1, #3
   241e8:	bf18      	it	ne
   241ea:	461a      	movne	r2, r3
   241ec:	1e7b      	subs	r3, r7, #1
   241ee:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   241f2:	bf84      	itt	hi
   241f4:	f240 135d 	movwhi	r3, #349	; 0x15d
   241f8:	60a3      	strhi	r3, [r4, #8]
   241fa:	6823      	ldr	r3, [r4, #0]
   241fc:	bf88      	it	hi
   241fe:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   24202:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   24206:	6023      	str	r3, [r4, #0]
   24208:	bf98      	it	ls
   2420a:	2700      	movls	r7, #0
   2420c:	464b      	mov	r3, r9
   2420e:	f04f 0800 	mov.w	r8, #0
   24212:	9200      	str	r2, [sp, #0]
   24214:	bf88      	it	hi
   24216:	197f      	addhi	r7, r7, r5
   24218:	6831      	ldr	r1, [r6, #0]
   2421a:	9301      	str	r3, [sp, #4]
   2421c:	ab03      	add	r3, sp, #12
   2421e:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   24222:	2202      	movs	r2, #2
   24224:	7809      	ldrb	r1, [r1, #0]
   24226:	f7fa f961 	bl	1e4ec <memchr>
   2422a:	9b01      	ldr	r3, [sp, #4]
   2422c:	b328      	cbz	r0, 2427a <_scanf_i+0xba>
   2422e:	f1b8 0f01 	cmp.w	r8, #1
   24232:	d156      	bne.n	242e2 <_scanf_i+0x122>
   24234:	6862      	ldr	r2, [r4, #4]
   24236:	b92a      	cbnz	r2, 24244 <_scanf_i+0x84>
   24238:	2208      	movs	r2, #8
   2423a:	6062      	str	r2, [r4, #4]
   2423c:	6822      	ldr	r2, [r4, #0]
   2423e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   24242:	6022      	str	r2, [r4, #0]
   24244:	6822      	ldr	r2, [r4, #0]
   24246:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   2424a:	6022      	str	r2, [r4, #0]
   2424c:	68a2      	ldr	r2, [r4, #8]
   2424e:	1e51      	subs	r1, r2, #1
   24250:	60a1      	str	r1, [r4, #8]
   24252:	b192      	cbz	r2, 2427a <_scanf_i+0xba>
   24254:	6832      	ldr	r2, [r6, #0]
   24256:	1c5d      	adds	r5, r3, #1
   24258:	1c51      	adds	r1, r2, #1
   2425a:	6031      	str	r1, [r6, #0]
   2425c:	7812      	ldrb	r2, [r2, #0]
   2425e:	701a      	strb	r2, [r3, #0]
   24260:	6873      	ldr	r3, [r6, #4]
   24262:	3b01      	subs	r3, #1
   24264:	2b00      	cmp	r3, #0
   24266:	6073      	str	r3, [r6, #4]
   24268:	dc06      	bgt.n	24278 <_scanf_i+0xb8>
   2426a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2426e:	4631      	mov	r1, r6
   24270:	4658      	mov	r0, fp
   24272:	4798      	blx	r3
   24274:	2800      	cmp	r0, #0
   24276:	d177      	bne.n	24368 <_scanf_i+0x1a8>
   24278:	462b      	mov	r3, r5
   2427a:	f108 0801 	add.w	r8, r8, #1
   2427e:	f1b8 0f03 	cmp.w	r8, #3
   24282:	d1c9      	bne.n	24218 <_scanf_i+0x58>
   24284:	6862      	ldr	r2, [r4, #4]
   24286:	b90a      	cbnz	r2, 2428c <_scanf_i+0xcc>
   24288:	220a      	movs	r2, #10
   2428a:	6062      	str	r2, [r4, #4]
   2428c:	6862      	ldr	r2, [r4, #4]
   2428e:	4946      	ldr	r1, [pc, #280]	; (243a8 <_scanf_i+0x1e8>)
   24290:	6960      	ldr	r0, [r4, #20]
   24292:	1a89      	subs	r1, r1, r2
   24294:	9301      	str	r3, [sp, #4]
   24296:	f000 f89b 	bl	243d0 <__sccl>
   2429a:	9b01      	ldr	r3, [sp, #4]
   2429c:	f04f 0800 	mov.w	r8, #0
   242a0:	461d      	mov	r5, r3
   242a2:	68a3      	ldr	r3, [r4, #8]
   242a4:	2b00      	cmp	r3, #0
   242a6:	d039      	beq.n	2431c <_scanf_i+0x15c>
   242a8:	6831      	ldr	r1, [r6, #0]
   242aa:	6960      	ldr	r0, [r4, #20]
   242ac:	780a      	ldrb	r2, [r1, #0]
   242ae:	5c80      	ldrb	r0, [r0, r2]
   242b0:	2800      	cmp	r0, #0
   242b2:	d033      	beq.n	2431c <_scanf_i+0x15c>
   242b4:	2a30      	cmp	r2, #48	; 0x30
   242b6:	6822      	ldr	r2, [r4, #0]
   242b8:	d121      	bne.n	242fe <_scanf_i+0x13e>
   242ba:	0510      	lsls	r0, r2, #20
   242bc:	d51f      	bpl.n	242fe <_scanf_i+0x13e>
   242be:	f108 0801 	add.w	r8, r8, #1
   242c2:	b117      	cbz	r7, 242ca <_scanf_i+0x10a>
   242c4:	3301      	adds	r3, #1
   242c6:	3f01      	subs	r7, #1
   242c8:	60a3      	str	r3, [r4, #8]
   242ca:	6873      	ldr	r3, [r6, #4]
   242cc:	3b01      	subs	r3, #1
   242ce:	2b00      	cmp	r3, #0
   242d0:	6073      	str	r3, [r6, #4]
   242d2:	dd1c      	ble.n	2430e <_scanf_i+0x14e>
   242d4:	6833      	ldr	r3, [r6, #0]
   242d6:	3301      	adds	r3, #1
   242d8:	6033      	str	r3, [r6, #0]
   242da:	68a3      	ldr	r3, [r4, #8]
   242dc:	3b01      	subs	r3, #1
   242de:	60a3      	str	r3, [r4, #8]
   242e0:	e7df      	b.n	242a2 <_scanf_i+0xe2>
   242e2:	f1b8 0f02 	cmp.w	r8, #2
   242e6:	d1b1      	bne.n	2424c <_scanf_i+0x8c>
   242e8:	6822      	ldr	r2, [r4, #0]
   242ea:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   242ee:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   242f2:	d1c2      	bne.n	2427a <_scanf_i+0xba>
   242f4:	2110      	movs	r1, #16
   242f6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   242fa:	6061      	str	r1, [r4, #4]
   242fc:	e7a5      	b.n	2424a <_scanf_i+0x8a>
   242fe:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   24302:	6022      	str	r2, [r4, #0]
   24304:	780b      	ldrb	r3, [r1, #0]
   24306:	3501      	adds	r5, #1
   24308:	f805 3c01 	strb.w	r3, [r5, #-1]
   2430c:	e7dd      	b.n	242ca <_scanf_i+0x10a>
   2430e:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   24312:	4631      	mov	r1, r6
   24314:	4658      	mov	r0, fp
   24316:	4798      	blx	r3
   24318:	2800      	cmp	r0, #0
   2431a:	d0de      	beq.n	242da <_scanf_i+0x11a>
   2431c:	6823      	ldr	r3, [r4, #0]
   2431e:	05d9      	lsls	r1, r3, #23
   24320:	d50c      	bpl.n	2433c <_scanf_i+0x17c>
   24322:	454d      	cmp	r5, r9
   24324:	d908      	bls.n	24338 <_scanf_i+0x178>
   24326:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   2432a:	1e6f      	subs	r7, r5, #1
   2432c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   24330:	4632      	mov	r2, r6
   24332:	4658      	mov	r0, fp
   24334:	4798      	blx	r3
   24336:	463d      	mov	r5, r7
   24338:	454d      	cmp	r5, r9
   2433a:	d02c      	beq.n	24396 <_scanf_i+0x1d6>
   2433c:	6822      	ldr	r2, [r4, #0]
   2433e:	f012 0210 	ands.w	r2, r2, #16
   24342:	d11e      	bne.n	24382 <_scanf_i+0x1c2>
   24344:	702a      	strb	r2, [r5, #0]
   24346:	6863      	ldr	r3, [r4, #4]
   24348:	4649      	mov	r1, r9
   2434a:	4658      	mov	r0, fp
   2434c:	9e00      	ldr	r6, [sp, #0]
   2434e:	47b0      	blx	r6
   24350:	6822      	ldr	r2, [r4, #0]
   24352:	f8da 3000 	ldr.w	r3, [sl]
   24356:	f012 0f20 	tst.w	r2, #32
   2435a:	d008      	beq.n	2436e <_scanf_i+0x1ae>
   2435c:	1d1a      	adds	r2, r3, #4
   2435e:	f8ca 2000 	str.w	r2, [sl]
   24362:	681b      	ldr	r3, [r3, #0]
   24364:	6018      	str	r0, [r3, #0]
   24366:	e009      	b.n	2437c <_scanf_i+0x1bc>
   24368:	f04f 0800 	mov.w	r8, #0
   2436c:	e7d6      	b.n	2431c <_scanf_i+0x15c>
   2436e:	07d2      	lsls	r2, r2, #31
   24370:	d5f4      	bpl.n	2435c <_scanf_i+0x19c>
   24372:	1d1a      	adds	r2, r3, #4
   24374:	f8ca 2000 	str.w	r2, [sl]
   24378:	681b      	ldr	r3, [r3, #0]
   2437a:	8018      	strh	r0, [r3, #0]
   2437c:	68e3      	ldr	r3, [r4, #12]
   2437e:	3301      	adds	r3, #1
   24380:	60e3      	str	r3, [r4, #12]
   24382:	2000      	movs	r0, #0
   24384:	eba5 0509 	sub.w	r5, r5, r9
   24388:	44a8      	add	r8, r5
   2438a:	6925      	ldr	r5, [r4, #16]
   2438c:	4445      	add	r5, r8
   2438e:	6125      	str	r5, [r4, #16]
   24390:	b007      	add	sp, #28
   24392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24396:	2001      	movs	r0, #1
   24398:	e7fa      	b.n	24390 <_scanf_i+0x1d0>
   2439a:	bf00      	nop
   2439c:	00027e08 	.word	0x00027e08
   243a0:	00024529 	.word	0x00024529
   243a4:	00020f31 	.word	0x00020f31
   243a8:	00027e24 	.word	0x00027e24

000243ac <_read_r>:
_read_r():
   243ac:	b538      	push	{r3, r4, r5, lr}
   243ae:	4605      	mov	r5, r0
   243b0:	4608      	mov	r0, r1
   243b2:	4611      	mov	r1, r2
   243b4:	2200      	movs	r2, #0
   243b6:	4c05      	ldr	r4, [pc, #20]	; (243cc <_read_r+0x20>)
   243b8:	6022      	str	r2, [r4, #0]
   243ba:	461a      	mov	r2, r3
   243bc:	f7f2 fe9a 	bl	170f4 <_read>
   243c0:	1c43      	adds	r3, r0, #1
   243c2:	d102      	bne.n	243ca <_read_r+0x1e>
   243c4:	6823      	ldr	r3, [r4, #0]
   243c6:	b103      	cbz	r3, 243ca <_read_r+0x1e>
   243c8:	602b      	str	r3, [r5, #0]
   243ca:	bd38      	pop	{r3, r4, r5, pc}
   243cc:	2007c8ec 	.word	0x2007c8ec

000243d0 <__sccl>:
__sccl():
   243d0:	b570      	push	{r4, r5, r6, lr}
   243d2:	780b      	ldrb	r3, [r1, #0]
   243d4:	1e44      	subs	r4, r0, #1
   243d6:	2b5e      	cmp	r3, #94	; 0x5e
   243d8:	bf13      	iteet	ne
   243da:	1c4a      	addne	r2, r1, #1
   243dc:	1c8a      	addeq	r2, r1, #2
   243de:	784b      	ldrbeq	r3, [r1, #1]
   243e0:	2100      	movne	r1, #0
   243e2:	bf08      	it	eq
   243e4:	2101      	moveq	r1, #1
   243e6:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   243ea:	f804 1f01 	strb.w	r1, [r4, #1]!
   243ee:	42a5      	cmp	r5, r4
   243f0:	d1fb      	bne.n	243ea <__sccl+0x1a>
   243f2:	b913      	cbnz	r3, 243fa <__sccl+0x2a>
   243f4:	3a01      	subs	r2, #1
   243f6:	4610      	mov	r0, r2
   243f8:	bd70      	pop	{r4, r5, r6, pc}
   243fa:	f081 0401 	eor.w	r4, r1, #1
   243fe:	4611      	mov	r1, r2
   24400:	54c4      	strb	r4, [r0, r3]
   24402:	780d      	ldrb	r5, [r1, #0]
   24404:	1c4a      	adds	r2, r1, #1
   24406:	2d2d      	cmp	r5, #45	; 0x2d
   24408:	d006      	beq.n	24418 <__sccl+0x48>
   2440a:	2d5d      	cmp	r5, #93	; 0x5d
   2440c:	d0f3      	beq.n	243f6 <__sccl+0x26>
   2440e:	b90d      	cbnz	r5, 24414 <__sccl+0x44>
   24410:	460a      	mov	r2, r1
   24412:	e7f0      	b.n	243f6 <__sccl+0x26>
   24414:	462b      	mov	r3, r5
   24416:	e7f2      	b.n	243fe <__sccl+0x2e>
   24418:	784e      	ldrb	r6, [r1, #1]
   2441a:	2e5d      	cmp	r6, #93	; 0x5d
   2441c:	d0fa      	beq.n	24414 <__sccl+0x44>
   2441e:	42b3      	cmp	r3, r6
   24420:	dcf8      	bgt.n	24414 <__sccl+0x44>
   24422:	3102      	adds	r1, #2
   24424:	3301      	adds	r3, #1
   24426:	429e      	cmp	r6, r3
   24428:	54c4      	strb	r4, [r0, r3]
   2442a:	dcfb      	bgt.n	24424 <__sccl+0x54>
   2442c:	e7e9      	b.n	24402 <__sccl+0x32>

0002442e <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   2442e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   24432:	4680      	mov	r8, r0
   24434:	4689      	mov	r9, r1
   24436:	4692      	mov	sl, r2
   24438:	461e      	mov	r6, r3
   2443a:	460f      	mov	r7, r1
   2443c:	463d      	mov	r5, r7
   2443e:	9808      	ldr	r0, [sp, #32]
   24440:	f815 4b01 	ldrb.w	r4, [r5], #1
   24444:	f7f9 ffba 	bl	1e3bc <__locale_ctype_ptr_l>
   24448:	4420      	add	r0, r4
   2444a:	7843      	ldrb	r3, [r0, #1]
   2444c:	f013 0308 	ands.w	r3, r3, #8
   24450:	d10a      	bne.n	24468 <_strtoul_l.isra.0+0x3a>
   24452:	2c2d      	cmp	r4, #45	; 0x2d
   24454:	d10a      	bne.n	2446c <_strtoul_l.isra.0+0x3e>
   24456:	2301      	movs	r3, #1
   24458:	782c      	ldrb	r4, [r5, #0]
   2445a:	1cbd      	adds	r5, r7, #2
   2445c:	b15e      	cbz	r6, 24476 <_strtoul_l.isra.0+0x48>
   2445e:	2e10      	cmp	r6, #16
   24460:	d113      	bne.n	2448a <_strtoul_l.isra.0+0x5c>
   24462:	2c30      	cmp	r4, #48	; 0x30
   24464:	d009      	beq.n	2447a <_strtoul_l.isra.0+0x4c>
   24466:	e010      	b.n	2448a <_strtoul_l.isra.0+0x5c>
   24468:	462f      	mov	r7, r5
   2446a:	e7e7      	b.n	2443c <_strtoul_l.isra.0+0xe>
   2446c:	2c2b      	cmp	r4, #43	; 0x2b
   2446e:	bf04      	itt	eq
   24470:	782c      	ldrbeq	r4, [r5, #0]
   24472:	1cbd      	addeq	r5, r7, #2
   24474:	e7f2      	b.n	2445c <_strtoul_l.isra.0+0x2e>
   24476:	2c30      	cmp	r4, #48	; 0x30
   24478:	d125      	bne.n	244c6 <_strtoul_l.isra.0+0x98>
   2447a:	782a      	ldrb	r2, [r5, #0]
   2447c:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   24480:	2a58      	cmp	r2, #88	; 0x58
   24482:	d14a      	bne.n	2451a <_strtoul_l.isra.0+0xec>
   24484:	2610      	movs	r6, #16
   24486:	786c      	ldrb	r4, [r5, #1]
   24488:	3502      	adds	r5, #2
   2448a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   2448e:	fbb1 f1f6 	udiv	r1, r1, r6
   24492:	2700      	movs	r7, #0
   24494:	fb06 fe01 	mul.w	lr, r6, r1
   24498:	4638      	mov	r0, r7
   2449a:	ea6f 0e0e 	mvn.w	lr, lr
   2449e:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   244a2:	2a09      	cmp	r2, #9
   244a4:	d811      	bhi.n	244ca <_strtoul_l.isra.0+0x9c>
   244a6:	4614      	mov	r4, r2
   244a8:	42a6      	cmp	r6, r4
   244aa:	dd1d      	ble.n	244e8 <_strtoul_l.isra.0+0xba>
   244ac:	2f00      	cmp	r7, #0
   244ae:	db18      	blt.n	244e2 <_strtoul_l.isra.0+0xb4>
   244b0:	4281      	cmp	r1, r0
   244b2:	d316      	bcc.n	244e2 <_strtoul_l.isra.0+0xb4>
   244b4:	d101      	bne.n	244ba <_strtoul_l.isra.0+0x8c>
   244b6:	45a6      	cmp	lr, r4
   244b8:	db13      	blt.n	244e2 <_strtoul_l.isra.0+0xb4>
   244ba:	2701      	movs	r7, #1
   244bc:	fb00 4006 	mla	r0, r0, r6, r4
   244c0:	f815 4b01 	ldrb.w	r4, [r5], #1
   244c4:	e7eb      	b.n	2449e <_strtoul_l.isra.0+0x70>
   244c6:	260a      	movs	r6, #10
   244c8:	e7df      	b.n	2448a <_strtoul_l.isra.0+0x5c>
   244ca:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   244ce:	2a19      	cmp	r2, #25
   244d0:	d801      	bhi.n	244d6 <_strtoul_l.isra.0+0xa8>
   244d2:	3c37      	subs	r4, #55	; 0x37
   244d4:	e7e8      	b.n	244a8 <_strtoul_l.isra.0+0x7a>
   244d6:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   244da:	2a19      	cmp	r2, #25
   244dc:	d804      	bhi.n	244e8 <_strtoul_l.isra.0+0xba>
   244de:	3c57      	subs	r4, #87	; 0x57
   244e0:	e7e2      	b.n	244a8 <_strtoul_l.isra.0+0x7a>
   244e2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   244e6:	e7eb      	b.n	244c0 <_strtoul_l.isra.0+0x92>
   244e8:	2f00      	cmp	r7, #0
   244ea:	da09      	bge.n	24500 <_strtoul_l.isra.0+0xd2>
   244ec:	2322      	movs	r3, #34	; 0x22
   244ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   244f2:	f8c8 3000 	str.w	r3, [r8]
   244f6:	f1ba 0f00 	cmp.w	sl, #0
   244fa:	d107      	bne.n	2450c <_strtoul_l.isra.0+0xde>
   244fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24500:	b103      	cbz	r3, 24504 <_strtoul_l.isra.0+0xd6>
   24502:	4240      	negs	r0, r0
   24504:	f1ba 0f00 	cmp.w	sl, #0
   24508:	d00c      	beq.n	24524 <_strtoul_l.isra.0+0xf6>
   2450a:	b127      	cbz	r7, 24516 <_strtoul_l.isra.0+0xe8>
   2450c:	3d01      	subs	r5, #1
   2450e:	f8ca 5000 	str.w	r5, [sl]
   24512:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24516:	464d      	mov	r5, r9
   24518:	e7f9      	b.n	2450e <_strtoul_l.isra.0+0xe0>
   2451a:	2430      	movs	r4, #48	; 0x30
   2451c:	2e00      	cmp	r6, #0
   2451e:	d1b4      	bne.n	2448a <_strtoul_l.isra.0+0x5c>
   24520:	2608      	movs	r6, #8
   24522:	e7b2      	b.n	2448a <_strtoul_l.isra.0+0x5c>
   24524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00024528 <_strtoul_r>:
_strtoul_r():
   24528:	b537      	push	{r0, r1, r2, r4, r5, lr}
   2452a:	4c06      	ldr	r4, [pc, #24]	; (24544 <_strtoul_r+0x1c>)
   2452c:	4d06      	ldr	r5, [pc, #24]	; (24548 <_strtoul_r+0x20>)
   2452e:	6824      	ldr	r4, [r4, #0]
   24530:	6a24      	ldr	r4, [r4, #32]
   24532:	2c00      	cmp	r4, #0
   24534:	bf08      	it	eq
   24536:	462c      	moveq	r4, r5
   24538:	9400      	str	r4, [sp, #0]
   2453a:	f7ff ff78 	bl	2442e <_strtoul_l.isra.0>
   2453e:	b003      	add	sp, #12
   24540:	bd30      	pop	{r4, r5, pc}
   24542:	bf00      	nop
   24544:	2007c0e0 	.word	0x2007c0e0
   24548:	2007c144 	.word	0x2007c144

0002454c <strtoul>:
strtoul():
   2454c:	4b08      	ldr	r3, [pc, #32]	; (24570 <strtoul+0x24>)
   2454e:	b537      	push	{r0, r1, r2, r4, r5, lr}
   24550:	681c      	ldr	r4, [r3, #0]
   24552:	4d08      	ldr	r5, [pc, #32]	; (24574 <strtoul+0x28>)
   24554:	6a23      	ldr	r3, [r4, #32]
   24556:	2b00      	cmp	r3, #0
   24558:	bf08      	it	eq
   2455a:	462b      	moveq	r3, r5
   2455c:	9300      	str	r3, [sp, #0]
   2455e:	4613      	mov	r3, r2
   24560:	460a      	mov	r2, r1
   24562:	4601      	mov	r1, r0
   24564:	4620      	mov	r0, r4
   24566:	f7ff ff62 	bl	2442e <_strtoul_l.isra.0>
   2456a:	b003      	add	sp, #12
   2456c:	bd30      	pop	{r4, r5, pc}
   2456e:	bf00      	nop
   24570:	2007c0e0 	.word	0x2007c0e0
   24574:	2007c144 	.word	0x2007c144

00024578 <__submore>:
__submore():
   24578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2457c:	460c      	mov	r4, r1
   2457e:	6b49      	ldr	r1, [r1, #52]	; 0x34
   24580:	f104 0344 	add.w	r3, r4, #68	; 0x44
   24584:	4299      	cmp	r1, r3
   24586:	d11c      	bne.n	245c2 <__submore+0x4a>
   24588:	f44f 6180 	mov.w	r1, #1024	; 0x400
   2458c:	f7fa faea 	bl	1eb64 <_malloc_r>
   24590:	b918      	cbnz	r0, 2459a <__submore+0x22>
   24592:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2459a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   2459e:	63a3      	str	r3, [r4, #56]	; 0x38
   245a0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   245a4:	6360      	str	r0, [r4, #52]	; 0x34
   245a6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   245aa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   245ae:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   245b2:	7043      	strb	r3, [r0, #1]
   245b4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   245b8:	7003      	strb	r3, [r0, #0]
   245ba:	6020      	str	r0, [r4, #0]
   245bc:	2000      	movs	r0, #0
   245be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   245c2:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   245c4:	0077      	lsls	r7, r6, #1
   245c6:	463a      	mov	r2, r7
   245c8:	f7fe ffb8 	bl	2353c <_realloc_r>
   245cc:	4605      	mov	r5, r0
   245ce:	2800      	cmp	r0, #0
   245d0:	d0df      	beq.n	24592 <__submore+0x1a>
   245d2:	eb00 0806 	add.w	r8, r0, r6
   245d6:	4601      	mov	r1, r0
   245d8:	4632      	mov	r2, r6
   245da:	4640      	mov	r0, r8
   245dc:	f7f9 ffa3 	bl	1e526 <memcpy>
   245e0:	f8c4 8000 	str.w	r8, [r4]
   245e4:	6365      	str	r5, [r4, #52]	; 0x34
   245e6:	63a7      	str	r7, [r4, #56]	; 0x38
   245e8:	e7e8      	b.n	245bc <__submore+0x44>
   245ea:	Address 0x00000000000245ea is out of bounds.


000245ec <_ungetc_r>:
_ungetc_r():
   245ec:	1c4b      	adds	r3, r1, #1
   245ee:	b570      	push	{r4, r5, r6, lr}
   245f0:	4606      	mov	r6, r0
   245f2:	460d      	mov	r5, r1
   245f4:	4614      	mov	r4, r2
   245f6:	d103      	bne.n	24600 <_ungetc_r+0x14>
   245f8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   245fc:	4628      	mov	r0, r5
   245fe:	bd70      	pop	{r4, r5, r6, pc}
   24600:	b118      	cbz	r0, 2460a <_ungetc_r+0x1e>
   24602:	6983      	ldr	r3, [r0, #24]
   24604:	b90b      	cbnz	r3, 2460a <_ungetc_r+0x1e>
   24606:	f7f9 fbe1 	bl	1ddcc <__sinit>
   2460a:	4b2e      	ldr	r3, [pc, #184]	; (246c4 <_ungetc_r+0xd8>)
   2460c:	429c      	cmp	r4, r3
   2460e:	d12c      	bne.n	2466a <_ungetc_r+0x7e>
   24610:	6874      	ldr	r4, [r6, #4]
   24612:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   24616:	f023 0320 	bic.w	r3, r3, #32
   2461a:	81a3      	strh	r3, [r4, #12]
   2461c:	b29b      	uxth	r3, r3
   2461e:	0759      	lsls	r1, r3, #29
   24620:	d413      	bmi.n	2464a <_ungetc_r+0x5e>
   24622:	06da      	lsls	r2, r3, #27
   24624:	d5e8      	bpl.n	245f8 <_ungetc_r+0xc>
   24626:	071b      	lsls	r3, r3, #28
   24628:	d50b      	bpl.n	24642 <_ungetc_r+0x56>
   2462a:	4621      	mov	r1, r4
   2462c:	4630      	mov	r0, r6
   2462e:	f7f9 fab1 	bl	1db94 <_fflush_r>
   24632:	2800      	cmp	r0, #0
   24634:	d1e0      	bne.n	245f8 <_ungetc_r+0xc>
   24636:	89a3      	ldrh	r3, [r4, #12]
   24638:	60a0      	str	r0, [r4, #8]
   2463a:	f023 0308 	bic.w	r3, r3, #8
   2463e:	81a3      	strh	r3, [r4, #12]
   24640:	61a0      	str	r0, [r4, #24]
   24642:	89a3      	ldrh	r3, [r4, #12]
   24644:	f043 0304 	orr.w	r3, r3, #4
   24648:	81a3      	strh	r3, [r4, #12]
   2464a:	6b63      	ldr	r3, [r4, #52]	; 0x34
   2464c:	b2ed      	uxtb	r5, r5
   2464e:	6862      	ldr	r2, [r4, #4]
   24650:	b1e3      	cbz	r3, 2468c <_ungetc_r+0xa0>
   24652:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   24654:	429a      	cmp	r2, r3
   24656:	da12      	bge.n	2467e <_ungetc_r+0x92>
   24658:	6823      	ldr	r3, [r4, #0]
   2465a:	1e5a      	subs	r2, r3, #1
   2465c:	6022      	str	r2, [r4, #0]
   2465e:	f803 5c01 	strb.w	r5, [r3, #-1]
   24662:	6863      	ldr	r3, [r4, #4]
   24664:	3301      	adds	r3, #1
   24666:	6063      	str	r3, [r4, #4]
   24668:	e7c8      	b.n	245fc <_ungetc_r+0x10>
   2466a:	4b17      	ldr	r3, [pc, #92]	; (246c8 <_ungetc_r+0xdc>)
   2466c:	429c      	cmp	r4, r3
   2466e:	d101      	bne.n	24674 <_ungetc_r+0x88>
   24670:	68b4      	ldr	r4, [r6, #8]
   24672:	e7ce      	b.n	24612 <_ungetc_r+0x26>
   24674:	4b15      	ldr	r3, [pc, #84]	; (246cc <_ungetc_r+0xe0>)
   24676:	429c      	cmp	r4, r3
   24678:	bf08      	it	eq
   2467a:	68f4      	ldreq	r4, [r6, #12]
   2467c:	e7c9      	b.n	24612 <_ungetc_r+0x26>
   2467e:	4621      	mov	r1, r4
   24680:	4630      	mov	r0, r6
   24682:	f7ff ff79 	bl	24578 <__submore>
   24686:	2800      	cmp	r0, #0
   24688:	d0e6      	beq.n	24658 <_ungetc_r+0x6c>
   2468a:	e7b5      	b.n	245f8 <_ungetc_r+0xc>
   2468c:	6921      	ldr	r1, [r4, #16]
   2468e:	6823      	ldr	r3, [r4, #0]
   24690:	b151      	cbz	r1, 246a8 <_ungetc_r+0xbc>
   24692:	4299      	cmp	r1, r3
   24694:	d208      	bcs.n	246a8 <_ungetc_r+0xbc>
   24696:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   2469a:	428d      	cmp	r5, r1
   2469c:	d104      	bne.n	246a8 <_ungetc_r+0xbc>
   2469e:	3b01      	subs	r3, #1
   246a0:	3201      	adds	r2, #1
   246a2:	6023      	str	r3, [r4, #0]
   246a4:	6062      	str	r2, [r4, #4]
   246a6:	e7a9      	b.n	245fc <_ungetc_r+0x10>
   246a8:	63e3      	str	r3, [r4, #60]	; 0x3c
   246aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
   246ae:	6363      	str	r3, [r4, #52]	; 0x34
   246b0:	2303      	movs	r3, #3
   246b2:	63a3      	str	r3, [r4, #56]	; 0x38
   246b4:	4623      	mov	r3, r4
   246b6:	6422      	str	r2, [r4, #64]	; 0x40
   246b8:	f803 5f46 	strb.w	r5, [r3, #70]!
   246bc:	6023      	str	r3, [r4, #0]
   246be:	2301      	movs	r3, #1
   246c0:	e7d1      	b.n	24666 <_ungetc_r+0x7a>
   246c2:	bf00      	nop
   246c4:	000279b8 	.word	0x000279b8
   246c8:	000279d8 	.word	0x000279d8
   246cc:	00027998 	.word	0x00027998

000246d0 <__env_lock>:
__env_lock():
   246d0:	4770      	bx	lr

000246d2 <__env_unlock>:
__env_unlock():
   246d2:	4770      	bx	lr

000246d4 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   246d4:	f851 0c04 	ldr.w	r0, [r1, #-4]
   246d8:	2800      	cmp	r0, #0
   246da:	f1a0 0004 	sub.w	r0, r0, #4
   246de:	bfbc      	itt	lt
   246e0:	580b      	ldrlt	r3, [r1, r0]
   246e2:	18c0      	addlt	r0, r0, r3
   246e4:	4770      	bx	lr
   246e6:	Address 0x00000000000246e6 is out of bounds.


000246e8 <__aeabi_dmul>:
__muldf3():
   246e8:	b570      	push	{r4, r5, r6, lr}
   246ea:	f04f 0cff 	mov.w	ip, #255	; 0xff
   246ee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   246f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   246f6:	bf1d      	ittte	ne
   246f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   246fc:	ea94 0f0c 	teqne	r4, ip
   24700:	ea95 0f0c 	teqne	r5, ip
   24704:	f000 f8de 	bleq	248c4 <__aeabi_dmul+0x1dc>
   24708:	442c      	add	r4, r5
   2470a:	ea81 0603 	eor.w	r6, r1, r3
   2470e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   24712:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   24716:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   2471a:	bf18      	it	ne
   2471c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   24720:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   24724:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   24728:	d038      	beq.n	2479c <__aeabi_dmul+0xb4>
   2472a:	fba0 ce02 	umull	ip, lr, r0, r2
   2472e:	f04f 0500 	mov.w	r5, #0
   24732:	fbe1 e502 	umlal	lr, r5, r1, r2
   24736:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   2473a:	fbe0 e503 	umlal	lr, r5, r0, r3
   2473e:	f04f 0600 	mov.w	r6, #0
   24742:	fbe1 5603 	umlal	r5, r6, r1, r3
   24746:	f09c 0f00 	teq	ip, #0
   2474a:	bf18      	it	ne
   2474c:	f04e 0e01 	orrne.w	lr, lr, #1
   24750:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   24754:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   24758:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   2475c:	d204      	bcs.n	24768 <__aeabi_dmul+0x80>
   2475e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   24762:	416d      	adcs	r5, r5
   24764:	eb46 0606 	adc.w	r6, r6, r6
   24768:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   2476c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   24770:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   24774:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   24778:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   2477c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   24780:	bf88      	it	hi
   24782:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   24786:	d81e      	bhi.n	247c6 <__aeabi_dmul+0xde>
   24788:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   2478c:	bf08      	it	eq
   2478e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   24792:	f150 0000 	adcs.w	r0, r0, #0
   24796:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   2479a:	bd70      	pop	{r4, r5, r6, pc}
   2479c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   247a0:	ea46 0101 	orr.w	r1, r6, r1
   247a4:	ea40 0002 	orr.w	r0, r0, r2
   247a8:	ea81 0103 	eor.w	r1, r1, r3
   247ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   247b0:	bfc2      	ittt	gt
   247b2:	ebd4 050c 	rsbsgt	r5, r4, ip
   247b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   247ba:	bd70      	popgt	{r4, r5, r6, pc}
   247bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   247c0:	f04f 0e00 	mov.w	lr, #0
   247c4:	3c01      	subs	r4, #1
   247c6:	f300 80ab 	bgt.w	24920 <__aeabi_dmul+0x238>
   247ca:	f114 0f36 	cmn.w	r4, #54	; 0x36
   247ce:	bfde      	ittt	le
   247d0:	2000      	movle	r0, #0
   247d2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   247d6:	bd70      	pople	{r4, r5, r6, pc}
   247d8:	f1c4 0400 	rsb	r4, r4, #0
   247dc:	3c20      	subs	r4, #32
   247de:	da35      	bge.n	2484c <__aeabi_dmul+0x164>
   247e0:	340c      	adds	r4, #12
   247e2:	dc1b      	bgt.n	2481c <__aeabi_dmul+0x134>
   247e4:	f104 0414 	add.w	r4, r4, #20
   247e8:	f1c4 0520 	rsb	r5, r4, #32
   247ec:	fa00 f305 	lsl.w	r3, r0, r5
   247f0:	fa20 f004 	lsr.w	r0, r0, r4
   247f4:	fa01 f205 	lsl.w	r2, r1, r5
   247f8:	ea40 0002 	orr.w	r0, r0, r2
   247fc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   24800:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   24804:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   24808:	fa21 f604 	lsr.w	r6, r1, r4
   2480c:	eb42 0106 	adc.w	r1, r2, r6
   24810:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   24814:	bf08      	it	eq
   24816:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   2481a:	bd70      	pop	{r4, r5, r6, pc}
   2481c:	f1c4 040c 	rsb	r4, r4, #12
   24820:	f1c4 0520 	rsb	r5, r4, #32
   24824:	fa00 f304 	lsl.w	r3, r0, r4
   24828:	fa20 f005 	lsr.w	r0, r0, r5
   2482c:	fa01 f204 	lsl.w	r2, r1, r4
   24830:	ea40 0002 	orr.w	r0, r0, r2
   24834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   24838:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   2483c:	f141 0100 	adc.w	r1, r1, #0
   24840:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   24844:	bf08      	it	eq
   24846:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   2484a:	bd70      	pop	{r4, r5, r6, pc}
   2484c:	f1c4 0520 	rsb	r5, r4, #32
   24850:	fa00 f205 	lsl.w	r2, r0, r5
   24854:	ea4e 0e02 	orr.w	lr, lr, r2
   24858:	fa20 f304 	lsr.w	r3, r0, r4
   2485c:	fa01 f205 	lsl.w	r2, r1, r5
   24860:	ea43 0302 	orr.w	r3, r3, r2
   24864:	fa21 f004 	lsr.w	r0, r1, r4
   24868:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   2486c:	fa21 f204 	lsr.w	r2, r1, r4
   24870:	ea20 0002 	bic.w	r0, r0, r2
   24874:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   24878:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   2487c:	bf08      	it	eq
   2487e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   24882:	bd70      	pop	{r4, r5, r6, pc}
   24884:	f094 0f00 	teq	r4, #0
   24888:	d10f      	bne.n	248aa <__aeabi_dmul+0x1c2>
   2488a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   2488e:	0040      	lsls	r0, r0, #1
   24890:	eb41 0101 	adc.w	r1, r1, r1
   24894:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   24898:	bf08      	it	eq
   2489a:	3c01      	subeq	r4, #1
   2489c:	d0f7      	beq.n	2488e <__aeabi_dmul+0x1a6>
   2489e:	ea41 0106 	orr.w	r1, r1, r6
   248a2:	f095 0f00 	teq	r5, #0
   248a6:	bf18      	it	ne
   248a8:	4770      	bxne	lr
   248aa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   248ae:	0052      	lsls	r2, r2, #1
   248b0:	eb43 0303 	adc.w	r3, r3, r3
   248b4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   248b8:	bf08      	it	eq
   248ba:	3d01      	subeq	r5, #1
   248bc:	d0f7      	beq.n	248ae <__aeabi_dmul+0x1c6>
   248be:	ea43 0306 	orr.w	r3, r3, r6
   248c2:	4770      	bx	lr
   248c4:	ea94 0f0c 	teq	r4, ip
   248c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   248cc:	bf18      	it	ne
   248ce:	ea95 0f0c 	teqne	r5, ip
   248d2:	d00c      	beq.n	248ee <__aeabi_dmul+0x206>
   248d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   248d8:	bf18      	it	ne
   248da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   248de:	d1d1      	bne.n	24884 <__aeabi_dmul+0x19c>
   248e0:	ea81 0103 	eor.w	r1, r1, r3
   248e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   248e8:	f04f 0000 	mov.w	r0, #0
   248ec:	bd70      	pop	{r4, r5, r6, pc}
   248ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   248f2:	bf06      	itte	eq
   248f4:	4610      	moveq	r0, r2
   248f6:	4619      	moveq	r1, r3
   248f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   248fc:	d019      	beq.n	24932 <__aeabi_dmul+0x24a>
   248fe:	ea94 0f0c 	teq	r4, ip
   24902:	d102      	bne.n	2490a <__aeabi_dmul+0x222>
   24904:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   24908:	d113      	bne.n	24932 <__aeabi_dmul+0x24a>
   2490a:	ea95 0f0c 	teq	r5, ip
   2490e:	d105      	bne.n	2491c <__aeabi_dmul+0x234>
   24910:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   24914:	bf1c      	itt	ne
   24916:	4610      	movne	r0, r2
   24918:	4619      	movne	r1, r3
   2491a:	d10a      	bne.n	24932 <__aeabi_dmul+0x24a>
   2491c:	ea81 0103 	eor.w	r1, r1, r3
   24920:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   24924:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   24928:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   2492c:	f04f 0000 	mov.w	r0, #0
   24930:	bd70      	pop	{r4, r5, r6, pc}
   24932:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   24936:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   2493a:	bd70      	pop	{r4, r5, r6, pc}

0002493c <__aeabi_ddiv>:
__divdf3():
   2493c:	b570      	push	{r4, r5, r6, lr}
   2493e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   24942:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   24946:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   2494a:	bf1d      	ittte	ne
   2494c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   24950:	ea94 0f0c 	teqne	r4, ip
   24954:	ea95 0f0c 	teqne	r5, ip
   24958:	f000 f8a7 	bleq	24aaa <__aeabi_ddiv+0x16e>
   2495c:	eba4 0405 	sub.w	r4, r4, r5
   24960:	ea81 0e03 	eor.w	lr, r1, r3
   24964:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   24968:	ea4f 3101 	mov.w	r1, r1, lsl #12
   2496c:	f000 8088 	beq.w	24a80 <__aeabi_ddiv+0x144>
   24970:	ea4f 3303 	mov.w	r3, r3, lsl #12
   24974:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   24978:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   2497c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   24980:	ea4f 2202 	mov.w	r2, r2, lsl #8
   24984:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   24988:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   2498c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   24990:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   24994:	429d      	cmp	r5, r3
   24996:	bf08      	it	eq
   24998:	4296      	cmpeq	r6, r2
   2499a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   2499e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   249a2:	d202      	bcs.n	249aa <__aeabi_ddiv+0x6e>
   249a4:	085b      	lsrs	r3, r3, #1
   249a6:	ea4f 0232 	mov.w	r2, r2, rrx
   249aa:	1ab6      	subs	r6, r6, r2
   249ac:	eb65 0503 	sbc.w	r5, r5, r3
   249b0:	085b      	lsrs	r3, r3, #1
   249b2:	ea4f 0232 	mov.w	r2, r2, rrx
   249b6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   249ba:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   249be:	ebb6 0e02 	subs.w	lr, r6, r2
   249c2:	eb75 0e03 	sbcs.w	lr, r5, r3
   249c6:	bf22      	ittt	cs
   249c8:	1ab6      	subcs	r6, r6, r2
   249ca:	4675      	movcs	r5, lr
   249cc:	ea40 000c 	orrcs.w	r0, r0, ip
   249d0:	085b      	lsrs	r3, r3, #1
   249d2:	ea4f 0232 	mov.w	r2, r2, rrx
   249d6:	ebb6 0e02 	subs.w	lr, r6, r2
   249da:	eb75 0e03 	sbcs.w	lr, r5, r3
   249de:	bf22      	ittt	cs
   249e0:	1ab6      	subcs	r6, r6, r2
   249e2:	4675      	movcs	r5, lr
   249e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   249e8:	085b      	lsrs	r3, r3, #1
   249ea:	ea4f 0232 	mov.w	r2, r2, rrx
   249ee:	ebb6 0e02 	subs.w	lr, r6, r2
   249f2:	eb75 0e03 	sbcs.w	lr, r5, r3
   249f6:	bf22      	ittt	cs
   249f8:	1ab6      	subcs	r6, r6, r2
   249fa:	4675      	movcs	r5, lr
   249fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   24a00:	085b      	lsrs	r3, r3, #1
   24a02:	ea4f 0232 	mov.w	r2, r2, rrx
   24a06:	ebb6 0e02 	subs.w	lr, r6, r2
   24a0a:	eb75 0e03 	sbcs.w	lr, r5, r3
   24a0e:	bf22      	ittt	cs
   24a10:	1ab6      	subcs	r6, r6, r2
   24a12:	4675      	movcs	r5, lr
   24a14:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   24a18:	ea55 0e06 	orrs.w	lr, r5, r6
   24a1c:	d018      	beq.n	24a50 <__aeabi_ddiv+0x114>
   24a1e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   24a22:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   24a26:	ea4f 1606 	mov.w	r6, r6, lsl #4
   24a2a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   24a2e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   24a32:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   24a36:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   24a3a:	d1c0      	bne.n	249be <__aeabi_ddiv+0x82>
   24a3c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   24a40:	d10b      	bne.n	24a5a <__aeabi_ddiv+0x11e>
   24a42:	ea41 0100 	orr.w	r1, r1, r0
   24a46:	f04f 0000 	mov.w	r0, #0
   24a4a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   24a4e:	e7b6      	b.n	249be <__aeabi_ddiv+0x82>
   24a50:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   24a54:	bf04      	itt	eq
   24a56:	4301      	orreq	r1, r0
   24a58:	2000      	moveq	r0, #0
   24a5a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   24a5e:	bf88      	it	hi
   24a60:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   24a64:	f63f aeaf 	bhi.w	247c6 <__aeabi_dmul+0xde>
   24a68:	ebb5 0c03 	subs.w	ip, r5, r3
   24a6c:	bf04      	itt	eq
   24a6e:	ebb6 0c02 	subseq.w	ip, r6, r2
   24a72:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   24a76:	f150 0000 	adcs.w	r0, r0, #0
   24a7a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   24a7e:	bd70      	pop	{r4, r5, r6, pc}
   24a80:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   24a84:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   24a88:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   24a8c:	bfc2      	ittt	gt
   24a8e:	ebd4 050c 	rsbsgt	r5, r4, ip
   24a92:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   24a96:	bd70      	popgt	{r4, r5, r6, pc}
   24a98:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   24a9c:	f04f 0e00 	mov.w	lr, #0
   24aa0:	3c01      	subs	r4, #1
   24aa2:	e690      	b.n	247c6 <__aeabi_dmul+0xde>
   24aa4:	ea45 0e06 	orr.w	lr, r5, r6
   24aa8:	e68d      	b.n	247c6 <__aeabi_dmul+0xde>
   24aaa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   24aae:	ea94 0f0c 	teq	r4, ip
   24ab2:	bf08      	it	eq
   24ab4:	ea95 0f0c 	teqeq	r5, ip
   24ab8:	f43f af3b 	beq.w	24932 <__aeabi_dmul+0x24a>
   24abc:	ea94 0f0c 	teq	r4, ip
   24ac0:	d10a      	bne.n	24ad8 <__aeabi_ddiv+0x19c>
   24ac2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   24ac6:	f47f af34 	bne.w	24932 <__aeabi_dmul+0x24a>
   24aca:	ea95 0f0c 	teq	r5, ip
   24ace:	f47f af25 	bne.w	2491c <__aeabi_dmul+0x234>
   24ad2:	4610      	mov	r0, r2
   24ad4:	4619      	mov	r1, r3
   24ad6:	e72c      	b.n	24932 <__aeabi_dmul+0x24a>
   24ad8:	ea95 0f0c 	teq	r5, ip
   24adc:	d106      	bne.n	24aec <__aeabi_ddiv+0x1b0>
   24ade:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   24ae2:	f43f aefd 	beq.w	248e0 <__aeabi_dmul+0x1f8>
   24ae6:	4610      	mov	r0, r2
   24ae8:	4619      	mov	r1, r3
   24aea:	e722      	b.n	24932 <__aeabi_dmul+0x24a>
   24aec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   24af0:	bf18      	it	ne
   24af2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   24af6:	f47f aec5 	bne.w	24884 <__aeabi_dmul+0x19c>
   24afa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   24afe:	f47f af0d 	bne.w	2491c <__aeabi_dmul+0x234>
   24b02:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   24b06:	f47f aeeb 	bne.w	248e0 <__aeabi_dmul+0x1f8>
   24b0a:	e712      	b.n	24932 <__aeabi_dmul+0x24a>

00024b0c <__gedf2>:
__gedf2():
   24b0c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   24b10:	e006      	b.n	24b20 <__cmpdf2+0x4>
   24b12:	bf00      	nop

00024b14 <__ledf2>:
__ledf2():
   24b14:	f04f 0c01 	mov.w	ip, #1
   24b18:	e002      	b.n	24b20 <__cmpdf2+0x4>
   24b1a:	bf00      	nop

00024b1c <__cmpdf2>:
__nedf2():
   24b1c:	f04f 0c01 	mov.w	ip, #1
   24b20:	f84d cd04 	str.w	ip, [sp, #-4]!
   24b24:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24b28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24b2c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24b30:	bf18      	it	ne
   24b32:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   24b36:	d01b      	beq.n	24b70 <__cmpdf2+0x54>
   24b38:	b001      	add	sp, #4
   24b3a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   24b3e:	bf0c      	ite	eq
   24b40:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   24b44:	ea91 0f03 	teqne	r1, r3
   24b48:	bf02      	ittt	eq
   24b4a:	ea90 0f02 	teqeq	r0, r2
   24b4e:	2000      	moveq	r0, #0
   24b50:	4770      	bxeq	lr
   24b52:	f110 0f00 	cmn.w	r0, #0
   24b56:	ea91 0f03 	teq	r1, r3
   24b5a:	bf58      	it	pl
   24b5c:	4299      	cmppl	r1, r3
   24b5e:	bf08      	it	eq
   24b60:	4290      	cmpeq	r0, r2
   24b62:	bf2c      	ite	cs
   24b64:	17d8      	asrcs	r0, r3, #31
   24b66:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   24b6a:	f040 0001 	orr.w	r0, r0, #1
   24b6e:	4770      	bx	lr
   24b70:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24b74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24b78:	d102      	bne.n	24b80 <__cmpdf2+0x64>
   24b7a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   24b7e:	d107      	bne.n	24b90 <__cmpdf2+0x74>
   24b80:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24b84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24b88:	d1d6      	bne.n	24b38 <__cmpdf2+0x1c>
   24b8a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   24b8e:	d0d3      	beq.n	24b38 <__cmpdf2+0x1c>
   24b90:	f85d 0b04 	ldr.w	r0, [sp], #4
   24b94:	4770      	bx	lr
   24b96:	bf00      	nop

00024b98 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   24b98:	4684      	mov	ip, r0
   24b9a:	4610      	mov	r0, r2
   24b9c:	4662      	mov	r2, ip
   24b9e:	468c      	mov	ip, r1
   24ba0:	4619      	mov	r1, r3
   24ba2:	4663      	mov	r3, ip
   24ba4:	e000      	b.n	24ba8 <__aeabi_cdcmpeq>
   24ba6:	bf00      	nop

00024ba8 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   24ba8:	b501      	push	{r0, lr}
   24baa:	f7ff ffb7 	bl	24b1c <__cmpdf2>
   24bae:	2800      	cmp	r0, #0
   24bb0:	bf48      	it	mi
   24bb2:	f110 0f00 	cmnmi.w	r0, #0
   24bb6:	bd01      	pop	{r0, pc}

00024bb8 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   24bb8:	f84d ed08 	str.w	lr, [sp, #-8]!
   24bbc:	f7ff fff4 	bl	24ba8 <__aeabi_cdcmpeq>
   24bc0:	bf0c      	ite	eq
   24bc2:	2001      	moveq	r0, #1
   24bc4:	2000      	movne	r0, #0
   24bc6:	f85d fb08 	ldr.w	pc, [sp], #8
   24bca:	bf00      	nop

00024bcc <__aeabi_dcmplt>:
__aeabi_dcmplt():
   24bcc:	f84d ed08 	str.w	lr, [sp, #-8]!
   24bd0:	f7ff ffea 	bl	24ba8 <__aeabi_cdcmpeq>
   24bd4:	bf34      	ite	cc
   24bd6:	2001      	movcc	r0, #1
   24bd8:	2000      	movcs	r0, #0
   24bda:	f85d fb08 	ldr.w	pc, [sp], #8
   24bde:	bf00      	nop

00024be0 <__aeabi_dcmple>:
__aeabi_dcmple():
   24be0:	f84d ed08 	str.w	lr, [sp, #-8]!
   24be4:	f7ff ffe0 	bl	24ba8 <__aeabi_cdcmpeq>
   24be8:	bf94      	ite	ls
   24bea:	2001      	movls	r0, #1
   24bec:	2000      	movhi	r0, #0
   24bee:	f85d fb08 	ldr.w	pc, [sp], #8
   24bf2:	bf00      	nop

00024bf4 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   24bf4:	f84d ed08 	str.w	lr, [sp, #-8]!
   24bf8:	f7ff ffce 	bl	24b98 <__aeabi_cdrcmple>
   24bfc:	bf94      	ite	ls
   24bfe:	2001      	movls	r0, #1
   24c00:	2000      	movhi	r0, #0
   24c02:	f85d fb08 	ldr.w	pc, [sp], #8
   24c06:	bf00      	nop

00024c08 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   24c08:	f84d ed08 	str.w	lr, [sp, #-8]!
   24c0c:	f7ff ffc4 	bl	24b98 <__aeabi_cdrcmple>
   24c10:	bf34      	ite	cc
   24c12:	2001      	movcc	r0, #1
   24c14:	2000      	movcs	r0, #0
   24c16:	f85d fb08 	ldr.w	pc, [sp], #8
   24c1a:	bf00      	nop

00024c1c <__aeabi_dcmpun>:
__unorddf2():
   24c1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24c20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24c24:	d102      	bne.n	24c2c <__aeabi_dcmpun+0x10>
   24c26:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   24c2a:	d10a      	bne.n	24c42 <__aeabi_dcmpun+0x26>
   24c2c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24c30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24c34:	d102      	bne.n	24c3c <__aeabi_dcmpun+0x20>
   24c36:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   24c3a:	d102      	bne.n	24c42 <__aeabi_dcmpun+0x26>
   24c3c:	f04f 0000 	mov.w	r0, #0
   24c40:	4770      	bx	lr
   24c42:	f04f 0001 	mov.w	r0, #1
   24c46:	4770      	bx	lr

00024c48 <__aeabi_d2iz>:
__aeabi_d2iz():
   24c48:	ea4f 0241 	mov.w	r2, r1, lsl #1
   24c4c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   24c50:	d215      	bcs.n	24c7e <__aeabi_d2iz+0x36>
   24c52:	d511      	bpl.n	24c78 <__aeabi_d2iz+0x30>
   24c54:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   24c58:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   24c5c:	d912      	bls.n	24c84 <__aeabi_d2iz+0x3c>
   24c5e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   24c62:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   24c66:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   24c6a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   24c6e:	fa23 f002 	lsr.w	r0, r3, r2
   24c72:	bf18      	it	ne
   24c74:	4240      	negne	r0, r0
   24c76:	4770      	bx	lr
   24c78:	f04f 0000 	mov.w	r0, #0
   24c7c:	4770      	bx	lr
   24c7e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   24c82:	d105      	bne.n	24c90 <__aeabi_d2iz+0x48>
   24c84:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   24c88:	bf08      	it	eq
   24c8a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   24c8e:	4770      	bx	lr
   24c90:	f04f 0000 	mov.w	r0, #0
   24c94:	4770      	bx	lr
   24c96:	bf00      	nop
   24c98:	74737953 	.word	0x74737953
   24c9c:	50206d65 	.word	0x50206d65
   24ca0:	7265776f 	.word	0x7265776f
   24ca4:	3a6e6f2d 	.word	0x3a6e6f2d
   24ca8:	6f6f4220 	.word	0x6f6f4220
   24cac:	676e6974 	.word	0x676e6974
   24cb0:	2e2e2e20 	.word	0x2e2e2e20
   24cb4:	73795300 	.word	0x73795300
   24cb8:	206d6574 	.word	0x206d6574
   24cbc:	73617243 	.word	0x73617243
   24cc0:	52203a68 	.word	0x52203a68
   24cc4:	6f622d65 	.word	0x6f622d65
   24cc8:	6e69746f 	.word	0x6e69746f
   24ccc:	2e2e2067 	.word	0x2e2e2067
   24cd0:	6157002e 	.word	0x6157002e
   24cd4:	64686374 	.word	0x64686374
   24cd8:	5320676f 	.word	0x5320676f
   24cdc:	65747379 	.word	0x65747379
   24ce0:	6552206d 	.word	0x6552206d
   24ce4:	3a746573 	.word	0x3a746573
   24ce8:	6f6f4220 	.word	0x6f6f4220
   24cec:	676e6974 	.word	0x676e6974
   24cf0:	2e2e2e20 	.word	0x2e2e2e20
   24cf4:	00          	.byte	0x00
   24cf5:	55          	.byte	0x55
   24cf6:	656e      	.short	0x656e
   24cf8:	63657078 	.word	0x63657078
   24cfc:	20646574 	.word	0x20646574
   24d00:	20525349 	.word	0x20525349
   24d04:	6c6c6163 	.word	0x6c6c6163
   24d08:	20746120 	.word	0x20746120
   24d0c:	5f63706c 	.word	0x5f63706c
   24d10:	2e737973 	.word	0x2e737973
   24d14:	0063      	.short	0x0063
   24d16:	654d      	.short	0x654d
   24d18:	79726f6d 	.word	0x79726f6d
   24d1c:	666e4920 	.word	0x666e4920
   24d20:	616d726f 	.word	0x616d726f
   24d24:	6e6f6974 	.word	0x6e6f6974
   24d28:	6c470a3a 	.word	0x6c470a3a
   24d2c:	6c61626f 	.word	0x6c61626f
   24d30:	65735520 	.word	0x65735520
   24d34:	20202064 	.word	0x20202064
   24d38:	3525203a 	.word	0x3525203a
   24d3c:	616d0a64 	.word	0x616d0a64
   24d40:	636f6c6c 	.word	0x636f6c6c
   24d44:	65735520 	.word	0x65735520
   24d48:	20202064 	.word	0x20202064
   24d4c:	3525203a 	.word	0x3525203a
   24d50:	616d0a64 	.word	0x616d0a64
   24d54:	636f6c6c 	.word	0x636f6c6c
   24d58:	61764120 	.word	0x61764120
   24d5c:	202e6c69 	.word	0x202e6c69
   24d60:	3525203a 	.word	0x3525203a
   24d64:	79530a64 	.word	0x79530a64
   24d68:	6d657473 	.word	0x6d657473
   24d6c:	61764120 	.word	0x61764120
   24d70:	202e6c69 	.word	0x202e6c69
   24d74:	3525203a 	.word	0x3525203a
   24d78:	654e0a64 	.word	0x654e0a64
   24d7c:	48207478 	.word	0x48207478
   24d80:	20706165 	.word	0x20706165
   24d84:	20727470 	.word	0x20727470
   24d88:	3a202020 	.word	0x3a202020
   24d8c:	25783020 	.word	0x25783020
   24d90:	0a583830 	.word	0x0a583830
   24d94:	7473614c 	.word	0x7473614c
   24d98:	72627320 	.word	0x72627320
   24d9c:	2029286b 	.word	0x2029286b
   24da0:	20727470 	.word	0x20727470
   24da4:	30203a20 	.word	0x30203a20
   24da8:	38302578 	.word	0x38302578
   24dac:	614c0a58 	.word	0x614c0a58
   24db0:	73207473 	.word	0x73207473
   24db4:	286b7262 	.word	0x286b7262
   24db8:	69732029 	.word	0x69732029
   24dbc:	3a20657a 	.word	0x3a20657a
   24dc0:	0a752520 	.word	0x0a752520
   24dc4:	206d754e 	.word	0x206d754e
   24dc8:	72627320 	.word	0x72627320
   24dcc:	2029286b 	.word	0x2029286b
   24dd0:	6c6c6163 	.word	0x6c6c6163
   24dd4:	25203a73 	.word	0x25203a73
   24dd8:	0a75      	.short	0x0a75
   24dda:	00          	.byte	0x00
   24ddb:	25          	.byte	0x25
   24ddc:	52492075 	.word	0x52492075
   24de0:	61772051 	.word	0x61772051
   24de4:	72742073 	.word	0x72742073
   24de8:	65676769 	.word	0x65676769
   24dec:	2c646572 	.word	0x2c646572
   24df0:	74756220 	.word	0x74756220
   24df4:	206f6e20 	.word	0x206f6e20
   24df8:	20515249 	.word	0x20515249
   24dfc:	76726573 	.word	0x76726573
   24e00:	20656369 	.word	0x20656369
   24e04:	20736177 	.word	0x20736177
   24e08:	69666564 	.word	0x69666564
   24e0c:	2164656e 	.word	0x2164656e
   24e10:	000a      	.short	0x000a
   24e12:	4d4e      	.short	0x4d4e
   24e14:	61462049 	.word	0x61462049
   24e18:	0a746c75 	.word	0x0a746c75
   24e1c:	6d654d00 	.word	0x6d654d00
   24e20:	75614620 	.word	0x75614620
   24e24:	000a746c 	.word	0x000a746c
   24e28:	20535542 	.word	0x20535542
   24e2c:	6c756146 	.word	0x6c756146
   24e30:	55000a74 	.word	0x55000a74
   24e34:	65676173 	.word	0x65676173
   24e38:	75614620 	.word	0x75614620
   24e3c:	000a746c 	.word	0x000a746c
   24e40:	4d474244 	.word	0x4d474244
   24e44:	46204e4f 	.word	0x46204e4f
   24e48:	746c7561 	.word	0x746c7561
   24e4c:	5249000a 	.word	0x5249000a
   24e50:	6f6e2051 	.word	0x6f6e2051
   24e54:	65722074 	.word	0x65722074
   24e58:	74736967 	.word	0x74736967
   24e5c:	64657265 	.word	0x64657265
   24e60:	616d0021 	.word	0x616d0021
   24e64:	29286e69 	.word	0x29286e69
   24e68:	6f687320 	.word	0x6f687320
   24e6c:	20646c75 	.word	0x20646c75
   24e70:	6576656e 	.word	0x6576656e
   24e74:	78652072 	.word	0x78652072
   24e78:	6f207469 	.word	0x6f207469
   24e7c:	6874206e 	.word	0x6874206e
   24e80:	73207369 	.word	0x73207369
   24e84:	65747379 	.word	0x65747379
   24e88:	0a6d      	.short	0x0a6d
   24e8a:	00          	.byte	0x00
   24e8b:	e7          	.byte	0xe7
   24e8c:	e7e7adde 	.word	0xe7e7adde
   24e90:	65646f6e 	.word	0x65646f6e
   24e94:	00          	.byte	0x00
   24e95:	48          	.byte	0x48
   24e96:	4c45      	.short	0x4c45
   24e98:	000a4f4c 	.word	0x000a4f4c

00024e9c <ExCvt>:
   24e9c:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   24eac:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   24ebc:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   24ecc:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   24edc:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   24eec:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   24efc:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   24f0c:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00024f1c <LfnOfs>:
   24f1c:	07050301 12100e09 1c181614 8000ff1e              ..............

00024f2a <cst.6348>:
   24f2a:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   24f3a:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   24f4a:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   24f5a:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   24f6a:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   24f7a:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

00024f84 <vst.6347>:
   24f84:	02000400 00800100 00200040 00080010     ........@. .....
   24f94:	00020004 00c70000                                ......

00024f9a <Tbl>:
   24f9a:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   24faa:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   24fba:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   24fca:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   24fda:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   24fea:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   24ffa:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   2500a:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   2501a:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   2502a:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   2503a:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   2504a:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   2505a:	00df03b1 03c00393 03c303a3 03c400b5     ................
   2506a:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   2507a:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   2508a:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

0002509a <tbl_lower.5775>:
   2509a:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   250aa:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   250ba:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   250ca:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   250da:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   250ea:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   250fa:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   2510a:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   2511a:	01050103 01090107 010d010b 0111010f     ................
   2512a:	01150113 01190117 011d011b 0121011f     ..............!.
   2513a:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   2514a:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   2515a:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   2516a:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   2517a:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   2518a:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   2519a:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   251aa:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   251ba:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   251ca:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   251da:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   251ea:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   251fa:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   2520a:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   2521a:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   2522a:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   2523a:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   2524a:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   2525a:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   2526a:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

0002527a <tbl_upper.5776>:
   2527a:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   2528a:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   2529a:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   252aa:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   252ba:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   252ca:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   252da:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   252ea:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   252fa:	01040102 01080106 010c010a 0110010e     ................
   2530a:	01140112 01180116 011c011a 0120011e     .............. .
   2531a:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   2532a:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   2533a:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   2534a:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   2535a:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   2536a:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   2537a:	03940393 03960395 03980397 039a0399     ................
   2538a:	039c039b 039e039d 03a0039f 03a303a1     ................
   2539a:	03a503a4 03a703a6 03a903a8 041003aa     ................
   253aa:	04120411 04140413 04160415 04180417     ................
   253ba:	041a0419 041c041b 041e041d 0420041f     .............. .
   253ca:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   253da:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   253ea:	04030402 04050404 04070406 04090408     ................
   253fa:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   2540a:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   2541a:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   2542a:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   2543a:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   2544a:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   2545a:	c7ffff9f ff9a8094 0000ffff                       ..........

00025464 <CSWTCH.70>:
   25464:	00100000 00200000 00400000 00800000     ...... ...@.....

00025474 <LED_DISPLAY_CHARMAP>:
	...
   25494:	00008600 00000000 00000000 00804000     .............@..
   254a4:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   254b4:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   254c4:	6d000073 00003f00 00000000 00000000     s..m.?..........
   254d4:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   254e4:	6d000073 00003f00 00000000 00000000     s..m.?..........
   254f4:	3a696c25 3a692500 30252c00 53005832     %li:.%i:.,%02X.S
   25504:	54524154 4e45003a 66003a44 65736c61     TART:.END:.false
   25514:	746e6900 69253a38 69252c00 746e6900     .int8:%i.,%i.int
   25524:	253a3631 6e690069 3a323374 00696c25     16:%i.int32:%li.
   25534:	696c252c 746e6900 253a3436 00696c6c     ,%li.int64:%lli.
   25544:	6c6c252c 69750069 3a38746e 2c007525     ,%lli.uint8:%u.,
   25554:	75007525 31746e69 75253a36 6e697500     %u.uint16:%u.uin
   25564:	3a323374 00756c25 756c252c 6e697500     t32:%lu.,%lu.uin
   25574:	3a343674 756c6c25 6c252c00 6300756c     t64:%llu.,%llu.c
   25584:	3a726168 2c006325 62006325 72616e69     har:%c.,%c.binar
   25594:	63253a79 72747300 3a676e69 62007325     y:%c.string:%s.b
   255a4:	3a6c6f6f 2c007325 66007325 74616f6c     ool:%s.,%s.float
   255b4:	0066253a 0066252c 62756f64 253a656c     :%f.,%f.double:%
   255c4:	72740066 48006575 20706c65 20746f6e     f.true.Help not 
   255d4:	63657073 65696669 6f662064 68742072     specified for th
   255e4:	63207369 616d6d6f 4300646e 616d6d6f     is command.Comma
   255f4:	4920646e 6c61766e 202e6469 79725420     nd Invalid.  Try
   25604:	65682720 2027706c 6d6d6f63 00646e61      'help' command.
   25614:	68000a0d 00706c65 6d6d6f43 20646e61     ...help.Command 
   25624:	6c696166 20216465 6d6f4320 646e616d     failed!  Command
   25634:	68207327 20706c65 203a7369 73372500     's help is: .%7s
   25644:	75530020 726f7070 20646574 6d6d6f43      .Supported Comm
   25654:	73646e61 200a003a 73303125 25203a20     ands:.. %10s : %
   25664:	7332332e 2e2e2e20 25200a00 20733031     .32s ..... %10s 
   25674:	7325203a 27200a00 706c6568 6f633c20     : %s.. 'help <co
   25684:	6e616d6d 20273e64 67206f74 68207465     mmand>' to get h
   25694:	20706c65 6120666f 6d6f6320 646e616d     elp of a command
	...

000256a5 <typeinfo name for scheduler_task>:
   256a5:	63733431 75646568 5f72656c 6b736174     14scheduler_task
   256b5:	9cffff00                                         ...

000256b8 <typeinfo for scheduler_task>:
   256b8:	0002789c 000256a5                       .x...V..

000256c0 <vtable for scheduler_task>:
   256c0:	00000000 000256b8 00000000 00000000     .....V..........
   256d0:	00015e4d 00015e51 00015e55 0001c6e5     M^..Q^..U^......
   256e0:	5320202a 74726174 20676e69 65686373     *  Starting sche
   256f0:	656c7564 2e2e2072 45000a2e 524f5252     duler .....ERROR
   25700:	6f53203a 6e6f656d 696b2065 64656c6c     : Someone killed
   25710:	65687420 68637320 6c756465 45007265      the scheduler.E
   25720:	524f5252 6552203a 69737566 7420676e     RROR: Refusing t
   25730:	7473206f 20747261 7320534f 64656863     o start OS sched
   25740:	72656c75 65756420 206f7420 6f727265     uler due to erro
   25750:	29732872 52524500 203a524f 74204f4e     r(s).ERROR: NO t
   25760:	736b7361 64646120 62206465 63732079     asks added by sc
   25770:	75646568 5f72656c 5f646461 6b736174     heduler_add_task
   25780:	2a002928 72432020 69746165 7420676e     ().*  Creating t
   25790:	736b7361 2e2e2e20 2020000a 203e2d2d     asks .....  --> 
   257a0:	4c494146 78204445 6b736154 61657243     FAILED xTaskCrea
   257b0:	29286574 52524500 203a524f 61657243     te().ERROR: Crea
   257c0:	676e6974 756f6320 6e69746e 65732067     ting counting se
   257d0:	6870616d 0065726f 4920202a 6974696e     maphore.*  Initi
   257e0:	7a696c61 20676e69 6b736174 2e2e2073     alizing tasks ..
   257f0:	20000a2e 3e2d2d20 49414620 2044454c     ...  --> FAILED 
   25800:	74696e69 2a002928 65522020 74736967     init().*  Regist
   25810:	6e697265 61742067 27736b73 6c657420     ering tasks' tel
   25820:	74656d65 2e207972 000a2e2e 65657266     emetry .....free
   25830:	6174735f 72006b63 635f6e75 746e756f     _stack.run_count
   25840:	2d202000 46203e2d 454c4941 65742044     .  --> FAILED te
   25850:	656d656c 20797274 69676572 61727473     lemetry registra
   25860:	6e6f6974 20202a00 74736552 6e69726f     tion.*  Restorin
   25870:	69642067 74206b73 6d656c65 79727465     g disk telemetry
   25880:	202a000a 74200020 206b7361 6c6c6163     ..*  . task call
   25890:	20676e69 6b736174 72746e45 20292879     ing taskEntry() 
   258a0:	20726f66 206c6c61 6b736174 2e2e2073     for all tasks ..
   258b0:	2a00202e 61452020 74206863 206b7361     . .*  Each task 
   258c0:	6c6c6977 65687420 6e65206e 20726574     will then enter 
   258d0:	20656874 286e7572 6f6c2029 000a706f     the run() loop..
   258e0:	2d2d2020 4146203e 44454c49 73617420       --> FAILED tas
   258f0:	746e456b 29287972 52524500 203a524f     kEntry().ERROR: 
   25900:	6c6c694b 20676e69 65657246 534f5452     Killing FreeRTOS
   25910:	65756420 206f7420 6f727265 29732872      due to error(s)
   25920:	2d2d2000 4146203e 52554c49 65642045     . --> FAILURE de
   25930:	74636574 203b6465 70737573 69646e65     tected; suspendi
   25940:	7420676e 20736968 6b736174 2e2e2e20     ng this task ...
   25950:	ffffff00 00025a08 00026cea 00025a0e     .....Z...l...Z..
   25960:	00025a13 67676f6c 45007265 524f5252     .Z..logger.ERROR
   25970:	6f6c203a 72656767 696e6920 6c616974     : logger initial
   25980:	74617a69 206e6f69 6c696166 00657275     ization failure.
   25990:	252f6425 30252c64 253a6432 3a643230     %d/%d,%02d:%02d:
   259a0:	64323025 2c75252c 252c7325 73252c73     %02d,%u,%s,%s,%s
   259b0:	252c7325 30002c75 676f6c3a 7673632e     %s,%u,.0:log.csv
   259c0:	69614600 2064656c 656c6966 69727720     .Failed file wri
   259d0:	203a6574 72724500 2520726f 72772075     te: .Error %u wr
   259e0:	6e697469 6f6c2067 6c696667 25202e65     iting logfile. %
   259f0:	75252f75 69727720 6e657474 7046202e     u/%u written. Fp
   25a00:	203a7274 000a7525 75626564 61770067     tr: %u..debug.wa
   25a10:	65006e72 726f7272 656e5500 63657078     rn.error.Unexpec
   25a20:	20646574 6c6c6163 206f7420 74697865     ted call to exit
   25a30:	55002928 7078656e 65746365 61632064     ().Unexpected ca
   25a40:	74206c6c 696b206f 29286c6c 65642f00     ll to kill()./de
   25a50:	61752f76 00307472 7665642f 7261752f     v/uart0./dev/uar
   25a60:	2f003174 2f766564 00627375              t1./dev/usb.

00025a6c <typeinfo for UartDev>:
   25a6c:	000278fc 00025a78 00025aa0              .x..xZ...Z..

00025a78 <typeinfo name for UartDev>:
   25a78:	72615537 76654474 ffffff00              7UartDev....

00025a84 <vtable for UartDev>:
   25a84:	00000000 00025a6c 00017919 00017875     ....lZ...y..ux..
   25a94:	000178f9 000178d1 000178e5              .x...x...x..

00025aa0 <typeinfo for CharDev>:
   25aa0:	0002789c 00025aa8                       .x...Z..

00025aa8 <typeinfo name for CharDev>:
   25aa8:	61684337 76654472 ffffff00              7CharDev....

00025ab4 <vtable for CharDev>:
   25ab4:	00000000 00025aa0 0001c6e5 0001c6e5     .....Z..........
   25ac4:	00017b4d 00000000 00000000              M{..........

00025ad0 <typeinfo name for SingletonTemplate<Uart3>>:
   25ad0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25ae0:	49657461 72615535 00453374              ateI5Uart3E.

00025aec <typeinfo for SingletonTemplate<Uart3>>:
   25aec:	0002789c 00025ad0                       .x...Z..

00025af4 <typeinfo name for Uart3>:
   25af4:	72615535 ff003374                       5Uart3..

00025afc <typeinfo for Uart3>:
   25afc:	00027974 00025af4 00000000 00000002     ty...Z..........
   25b0c:	00025a6c 00000002 00025aec 00000002     lZ.......Z......

00025b1c <vtable for Uart3>:
   25b1c:	00000000 00025afc 00017919 00017875     .....Z...y..ux..
   25b2c:	000178f9 000180ad 000180c1              .x..........

00025b38 <typeinfo name for SingletonTemplate<Uart2>>:
   25b38:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25b48:	49657461 72615535 00453274              ateI5Uart2E.

00025b54 <typeinfo for SingletonTemplate<Uart2>>:
   25b54:	0002789c 00025b38                       .x..8[..

00025b5c <typeinfo name for Uart2>:
   25b5c:	72615535 ff003274                       5Uart2..

00025b64 <typeinfo for Uart2>:
   25b64:	00027974 00025b5c 00000000 00000002     ty..\[..........
   25b74:	00025a6c 00000002 00025b54 00000002     lZ......T[......

00025b84 <vtable for Uart2>:
   25b84:	00000000 00025b64 00017919 00017875     ....d[...y..ux..
   25b94:	000178f9 00018115 00018129              .x......)...

00025ba0 <typeinfo name for SingletonTemplate<NordicStream>>:
   25ba0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25bb0:	49657461 6f4e3231 63696472 65727453     ateI12NordicStre
   25bc0:	00456d61                                amE.

00025bc4 <typeinfo for SingletonTemplate<NordicStream>>:
   25bc4:	0002789c 00025ba0                       .x...[..

00025bcc <typeinfo for NordicStream>:
   25bcc:	00027974 00025bec 00000000 00000002     ty...[..........
   25bdc:	00025aa0 00000002 00025bc4 00000002     .Z.......[......

00025bec <typeinfo name for NordicStream>:
   25bec:	6f4e3231 63696472 65727453 ff006d61     12NordicStream..

00025bfc <vtable for NordicStream>:
   25bfc:	00000000 00025bcc 00018223 00018201     .....[..#.......
   25c0c:	0001817d 000181d9 000181ed              }...........

00025c18 <typeinfo name for SingletonTemplate<Uart0>>:
   25c18:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   25c28:	49657461 72615535 00453074              ateI5Uart0E.

00025c34 <typeinfo for SingletonTemplate<Uart0>>:
   25c34:	0002789c 00025c18                       .x...\..

00025c3c <typeinfo name for Uart0>:
   25c3c:	72615535 ff003074                       5Uart0..

00025c44 <typeinfo for Uart0>:
   25c44:	00027974 00025c3c 00000000 00000002     ty..<\..........
   25c54:	00025a6c 00000002 00025c34 00000002     lZ......4\......

00025c64 <vtable for Uart0>:
   25c64:	00000000 00025c44 00017919 00017875     ....D\...y..ux..
   25c74:	000178f9 000182a9 000182bd 40004000     .x...........@.@
   25c84:	40008000 40090000 40094000 544c4148     ...@...@.@.@HALT
   25c94:	20474e49 54535953 203a4d45 72756f59     ING SYSTEM: Your
   25ca4:	73797320 206d6574 206e6172 2074756f      system ran out 
   25cb4:	6d20666f 726f6d65 52282079 21294d41     of memory (RAM)!
   25cc4:	4148000a 4e49544c 59532047 4d455453     ..HALTING SYSTEM
   25cd4:	7453203a 206b6361 7265766f 776f6c66     : Stack overflow
   25ce4:	20796220 6b736174 0a00203a 20797254      by task: ..Try 
   25cf4:	72636e69 69736165 7320676e 6b636174     increasing stack
   25d04:	6d656d20 2079726f 7420666f 20736968      memory of this 
   25d14:	6b736174 49000a2e 00454c44 0002658d     task...IDLE..e..
   25d24:	00026591 00026595 00026599 0002659d     .e...e...e...e..
   25d34:	706f6e2d 746e6972 69614600 2064656c     -noprint.Failed 
   25d44:	6f206f74 3a6e6570 0a732520 65520a00     to open: %s...Re
   25d54:	25206461 79622064 20736574 64252040     ad %d bytes @ %d
   25d64:	2f624b20 00636573 4f525245 47203a52      Kb/sec.ERROR: G
   25d74:	20657669 7320656d 6372756f 6e612065     ive me source an
   25d84:	65642064 6e697473 6f697461 6964206e     d destination di
   25d94:	74636572 2079726f 61706573 65746172     rectory separate
   25da4:	79622064 73206120 65636170 766e4900     d by a space.Inv
   25db4:	64696c61 73656420 616e6974 6e6f6974     alid destination
   25dc4:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   25dd4:	6e49000a 696c6176 6f732064 65637275     ..Invalid source
   25de4:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   25df4:	7325000a 0073252f 79706f43 20732520     ..%s/%s.Copy %s 
   25e04:	25203e2d 203a2073 42206425 73657479     -> %s : %d Bytes
   25e14:	25203a20 45000a73 6c62616e 44006465      : %s..Enabled.D
   25e24:	62617369 0064656c 73756c66 6f4c0068     isabled.flush.Lo
   25e34:	29732867 76616820 65622065 66206e65     g(s) have been f
   25e44:	6873756c 73006465 75746174 6c420073     lushed.status.Bl
   25e54:	656b636f 61632064 20736c6c 25203a20     ocked calls  : %
   25e64:	51000a75 65756575 74617720 616d7265     u..Queue waterma
   25e74:	203a6b72 000a7525 68676948 20747365     rk: %u..Highest 
   25e84:	656c6966 69727720 74206574 3a656d69     file write time:
   25e94:	6d752520 43000a73 206c6c61 6e756f63      %ums..Call coun
   25ea4:	20207374 203a2020 64207525 25206267     ts    : %u dgb %
   25eb4:	6e692075 25206f66 61772075 25206e72     u info %u warn %
   25ec4:	72652075 72000a72 65007761 6c62616e     u err..raw.enabl
   25ed4:	64002065 62617369 0020656c 6c207325     e .disable .%s l
   25ee4:	6567676f 72702072 66746e69 726f6620     ogger printf for
   25ef4:	0a732520 73552f00 2f737265 73616b61      %s../Users/akas
   25f04:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   25f14:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   25f24:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   25f34:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   25f44:	61685f64 656c646e 682f7372 6c646e61     d_handlers/handl
   25f54:	2e737265 00707063 67676f4c 203a6465     ers.cpp.Logged: 
   25f64:	7c73257c 6573000a 2a250074 75252073     |%s|..set.%*s %u
   25f74:	20752520 25207525 75252075 20752520      %u %u %u %u %u 
   25f84:	77007525 65746972 73696400 65766f63     %u.write.discove
   25f94:	2a250072 30252073 30252078 75252078     r.%*s %0x %0x %u
   25fa4:	65654e00 65642064 65636976 646e6120     .Need device and
   25fb4:	67657220 65747369 64612072 73657264      register addres
   25fc4:	65520073 73206461 75746174 72662073     s.Read status fr
   25fd4:	64206d6f 63697665 23252065 203a5832     om device %#2X: 
   25fe4:	203a7325 2020000a 23252020 203a5832     %s: ..    %#2X: 
   25ff4:	58322325 2a25000a 30252073 30252078     %#2X..%*s %0x %0
   26004:	30252078 654e0078 64206465 63697665     x %0x.Need devic
   26014:	72202c65 73696765 20726574 72646461     e, register addr
   26024:	20737365 20646e61 61746164 6f725700     ess and data.Wro
   26034:	25206574 20583223 25206f74 3a583223     te %#2X to %#2X:
   26044:	3223253a 45000a58 726f7272 69727720     :%#2X..Error wri
   26054:	676e6974 206f7420 69766564 25206563     ting to device %
   26064:	000a7823 20433249 69766564 72206563     #x..I2C device r
   26074:	6f707365 6465646e 206f7420 72646461     esponded to addr
   26084:	20737365 78342325 7243000a 65746165     ess %#4x..Create
   26094:	72696420 6f746365 27207972 20277325      directory '%s' 
   260a4:	7325203a 6c46000a 3a687361 2f752520     : %s..Flash: %u/
   260b4:	4c207525 3a656669 25692520 70282025     %u Life: %i%% (p
   260c4:	20656761 77207525 74746972 25206e65     age %u written %
   260d4:	69742075 2973656d 6c46000a 3a687361     u times)..Flash:
   260e4:	2f752520 000a7525 706d6554 25203a20      %u/%u..Temp : %
   260f4:	75252e75 67694c0a 203a7468 540a7525     u.%u.Light: %u.T
   26104:	20656d69 7325203a 746f6f42 6d695420     ime : %sBoot Tim
   26114:	25203a65 2f753230 75323025 7534252f     e: %02u/%02u/%4u
   26124:	3230252c 30253a75 253a7532 0a753230     ,%02u:%02u:%02u.
   26134:	74726155 61572030 6d726574 736b7261     Uart0 Watermarks
   26144:	7525203a 2075252f 2f787228 0a297874     : %u/%u (rx/tx).
   26154:	62655200 69746f6f 5320676e 65747379     .Rebooting Syste
   26164:	654c006d 696e7261 6d20676e 2065646f     m.Learning mode 
   26174:	62616e65 0064656c 4f525245 53203a52     enabled.ERROR: S
   26184:	70616d65 65726f68 73617720 4c554e20     emaphore was NUL
   26194:	69202c4c 68742073 72272065 746f6d65     L, is the 'remot
   261a4:	74202765 206b7361 6e6e7572 3f676e69     e' task running?
   261b4:	616e5500 20656c62 6f206f74 206e6570     .Unable to open 
   261c4:	27732527 206f7420 74697277 68742065     '%s' to write th
   261d4:	69662065 000a656c 20646e45 20656874     e file..End the 
   261e4:	656c6966 20796220 6e697375 63252067     file by using %c
   261f4:	61686320 74636172 202e7265 20692520      character.  %i 
   26204:	74207369 74206568 6f656d69 000a7475     is the timeout..
   26214:	72726f53 6e202c79 6162206f 70736b63     Sorry, no backsp
   26224:	20656361 70707573 2074726f 000a283a     ace support :(..
   26234:	6f727245 636f2072 72727563 77206465     Error occurred w
   26244:	656c6968 69727720 676e6974 65687420     hile writing the
   26254:	6c696620 46000a65 616d726f 4b4f2074      file..Format OK
   26264:	726f4600 2074616d 4f525245 44530052     .Format ERROR.SD
   26274:	72614320 6f6d2064 65746e75 72450064      Card mounted.Er
   26284:	20726f72 6e756f6d 676e6974 20445320     ror mounting SD 
   26294:	64726143 616c4600 6d206873 746e756f     Card.Flash mount
   262a4:	45006465 726f7272 756f6d20 6e69746e     ed.Error mountin
   262b4:	6c462067 20687361 6f6d654d 66007972     g Flash Memory.f
   262c4:	616d726f 64732074 726f6600 2074616d     ormat sd.format 
   262d4:	73616c66 6f6d0068 20746e75 6d006473     flash.mount sd.m
   262e4:	746e756f 616c6620 4e006873 00656d61     ount flash.Name.
   262f4:	73303125 61745320 20725020 63617453     %10s Sta Pr Stac
   26304:	5043206b 20252555 20202020 20202020     k CPU%%         
   26314:	6d695420 25000a65 20733031 25207325      Time..%10s %s %
   26324:	25207532 25207535 25207534 20753031     2u %5u %4u %10u 
   26334:	000a7375 65766f28 61656872 25002964     us..(overhead).%
   26344:	20733031 202d2d2d 2d202d2d 2d2d2d2d     10s --- -- -----
   26354:	75342520 30312520 53752075 2a2a000a      %4u %10u uS..**
   26364:	52415720 474e494e 6e4f203a 7220796c      WARNING: Only r
   26374:	726f7065 20646574 73726966 75252074     eported first %u
   26384:	73617420 000a736b 69637361 61730069      tasks..ascii.sa
   26394:	54006576 6d656c65 79727465 73617720     ve.Telemetry was
   263a4:	76617320 74206465 6964206f 67006b73      saved to disk.g
   263b4:	45007465 726f7272 636f6c20 6e697461     et.Error locatin
   263c4:	726f2067 69727020 6e69746e 61762067     g or printing va
   263d4:	62616972 7620656c 65756c61 71655200     riable value.Req
   263e4:	65726975 61702064 656d6172 73726574     uired parameters
   263f4:	6727203a 3c207465 706d6f63 6d616e20     : 'get <comp nam
   26404:	3c203e65 20726176 656d616e 5245003e     e> <var name>.ER
   26414:	3a524f52 65655320 65682720 7420706c     ROR: See 'help t
   26424:	6d656c65 79727465 73250027 2073253a     elemetry'.%s:%s 
   26434:	20746573 25206f74 46000a73 656c6961     set to %s..Faile
   26444:	6f742064 74657320 3a732520 74207325     d to set %s:%s t
   26454:	7325206f 7245000a 20726f72 63207525     o %s..Error %u c
   26464:	6979706f 7c20676e 207c7325 7c203e2d     opying |%s| -> |
   26474:	0a7c7325 6e694600 65687369 20202164     %s|..Finished!  
   26484:	64616552 7525203a 2f624b20 2c636573     Read: %u Kb/sec,
   26494:	69725720 203a6574 4b207525 65732f62      Write: %u Kb/se
   264a4:	30000a63 6e49003a 696c6176 69642064     c..0:.Invalid di
   264b4:	74636572 3a79726f 73257c20 4528207c     rectory: |%s| (E
   264c4:	726f7272 29692520 6944000a 74636572     rror %i)..Direct
   264d4:	2079726f 7473696c 20676e69 203a666f     ory listing of: 
   264e4:	0a0a7325 25632500 25632563 20632563     %s...%c%c%c%c%c 
   264f4:	252f7525 2f753230 75323025 32302520     %u/%02u/%02u %02
   26504:	30253a75 25207532 756c3031 33312520     u:%02u %10lu %13
   26514:	2d200073 250a0020 46207534 28656c69     s. - ..%4u File(
   26524:	202c2973 64303125 74796220 74207365     s), %10d bytes t
   26534:	6c61746f 6434250a 72694420 00297328     otal.%4d Dir(s).
   26544:	3125202c 204b6430 65747962 72662073     , %10dK bytes fr
   26554:	000a6565 65766f4d 73252720 3e2d2027     ee..Move '%s' ->
   26564:	73252720 203a2027 000a7325 656c6544      '%s' : %s..Dele
   26574:	27206574 20277325 7325203a 6f6c000a              te '%s' : %s..

00026582 <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   26582:	48676f6c 6c646e61 52007265 52004e55     logHandler.RUN.R
   26592:	42005944 53004b4c 44005355 03004c45     DY.BLK.SUS.DEL..
   265a2:	2d040403 2d2d2d2d 2d2d2d2d 2d2d2d2d     ...-------------
   265b2:	2d2d2d2d 2d2d2d2d 2d2d2d2d 6f52000a     ------------..Ro
   265c2:	6e697475 61742067 20656c62 657a6973     uting table size
   265d2:	20736920 000a6925 5344207c 207c2054      is %i..| DST | 
   265e2:	7478654e 504f4820 48207c20 2053504f     Next HOP | HOPS 
   265f2:	7c000a7c 69332520 20207c20 69332520     |..| %3i |   %3i
   26602:	20202020 3325207c 7c202069 7327000a         | %3i  |..'s
   26612:	61657274 613c206d 3e726464 736d3c20     tream <addr> <ms
   26622:	20273e67 7453203a 6d616572 63206120     g>' : Stream a c
   26632:	616d6d6f 7420646e 6e61206f 6568746f     ommand to anothe
   26642:	6f622072 00647261 65727473 27006d61     r board.stream.'
   26652:	6e617274 72656673 72733c20 69662063     transfer <src fi
   26662:	616e656c 203e656d 7473643c 6c696620     lename> <dst fil
   26672:	6d616e65 3c203e65 6464616e 20273e72     ename> <naddr>' 
   26682:	7254203a 66736e61 61207265 6c696620     : Transfer a fil
   26692:	6f742065 6f6e6120 72656874 616f6220     e to another boa
   266a2:	74006472 736e6172 00726566 20787227     rd.transfer.'rx 
   266b2:	6d69743c 736d5f65 3a20273e 6c6f5020     <time_ms>' : Pol
   266c2:	6f66206c 20612072 6b636170 72007465     l for a packet.r
   266d2:	61270078 20726464 6464613c 20203e72     x.'addr <addr>  
   266e2:	53203a20 74207465 77206568 6c657269      : Set the wirel
   266f2:	20737365 72646461 00737365 756f7227     ess address.'rou
   26702:	27736574 53203a20 74206565 77206568     tes' : See the w
   26712:	6c657269 20737365 74756f72 27007365     ireless routes.'
   26722:	206b6361 6464613c 3c203e72 61746164     ack <addr> <data
   26732:	2020273e 6553203a 6120646e 63617020     >'  : Send a pac
   26742:	2074656b 20646e61 74696177 726f6620     ket and wait for
   26752:	6b636120 6c776f6e 6d676465 00746e65      acknowledgment.
   26762:	63616e27 613c206b 3e726464 61643c20     'nack <addr> <da
   26772:	273e6174 53203a20 20646e65 61702061     ta>' : Send a pa
   26782:	74656b63 63616e00 7327006b 73746174     cket.nack.'stats
   26792:	203a2027 20656553 20656874 65726977     ' : See the wire
   267a2:	7373656c 61747320 52007374 69656365     less stats.Recei
   267b2:	20646576 61746164 6f726620 6925206d     ved data from %i
   267c2:	6f4e000a 74616420 65722061 76696563     ..No data receiv
   267d2:	44006465 61637369 64656472 73206120     ed.Discarded a s
   267e2:	656c6174 72697720 73656c65 61702073     tale wireless pa
   267f2:	74656b63 72724500 7320726f 69646e65     cket.Error sendi
   26802:	7020676e 656b6361 63202c74 6b636568     ng packet, check
   26812:	72617020 74656d61 21737265 6d655200      parameters!.Rem
   26822:	2065746f 65646f6e 6d616e20 27203a65     ote node name: '
   26832:	63655200 65766965 68742064 63612065     .Received the ac
   26842:	776f6e6b 6764656c 746e656d 61500021     knowledgment!.Pa
   26852:	74656b63 6e657320 6f742074 20732520     cket sent to %s 
   26862:	20747562 41206f6e 72204b43 69656365     but no ACK recei
   26872:	00646576 4c494146 53004445 61207465     ved.FAILED.Set a
   26882:	65726464 74207373 6925206f 7325203a     ddress to %i: %s
   26892:	3125000a 20733832 38323125 69252073     ..%128s %128s %i
   268a2:	61725400 6566736e 73252072 3e2d2d20     .Transfer %s -->
   268b2:	3a692520 000a7325 656c6966 66756220      %i:%s..file buf
   268c2:	20726566 69252030 5245000a 3a524f52     fer 0 %i..ERROR:
   268d2:	65684320 75736b63 7845206d 74636570      Checksum Expect
   268e2:	25206465 63412069 6c617574 0a692520     ed %i Actual %i.
   268f2:	6c696600 6f632065 74696d6d 20732520     .file commit %s 
   26902:	25206925 6f000a69 5245006b 3a524f52     %i %i..ok.ERROR:
   26912:	6d655220 2065746f 65646f6e 64696420      Remote node did
   26922:	746f6e20 6b636120 6c776f6e 65676465      not acknowledge
   26932:	6c696620 72772065 20657469 29732528      file write (%s)
   26942:	6553000a 2520746e 69252f69 2020000a     ..Sent %i/%i..  
   26952:	65522020 76696563 25206465 79622069       Received %i by
   26962:	20736574 7265766f 20692520 6b636170     tes over %i pack
   26972:	0a737465 73552f00 2f737265 73616b61     ets../Users/akas
   26982:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   26992:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   269a2:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   269b2:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   269c2:	61685f64 656c646e 772f7372 6c657269     d_handlers/wirel
   269d2:	5f737365 646e6168 7372656c 7070632e     ess_handlers.cpp
   269e2:	6f685700 2173706f 70412020 786f7270     .Whoops!  Approx
   269f2:	74616d69 20796c65 62206925 73657479     imately %i bytes
   26a02:	756f6320 6e20646c 6220746f 72702065      could not be pr
   26a12:	65746e69 65622064 73756163 68742065     inted because th
   26a22:	756f2065 74757074 61686320 6c656e6e     e output channel
   26a32:	20736920 206f6f74 776f6c73 5020202e      is too slow.  P
   26a42:	7361656c 6f662065 776f6c6c 65687420     lease follow the
   26a52:	67757320 74736567 736e6f69 20746120      suggestions at 
   26a62:	656c6966 7325203a 6c206120 6c747469     file: %s a littl
   26a72:	69622065 62612074 2065766f 6c696877     e bit above whil
   26a82:	6f6c2065 6120706f 696c2074 6e20656e     e loop at line n
   26a92:	65626d75 69252072 6150000a 20657372     umber %i..Parse 
   26aa2:	6f727265 74203a72 203a7972 72747327     error: try: 'str
   26ab2:	206d6165 6464613c 3c203e72 6d6d6f63     eam <addr> <comm
   26ac2:	3e646e61 254e0027 52203a75 78542f78     and>'.N%u: Rx/Tx
   26ad2:	7452202c 764f2f65 52202c74 69727465     , Rte/Ovt, Retri
   26ae2:	4d2f6465 20687365 72746552 2f646569     ed/Mesh Retried/
   26af2:	65706552 64657461 000a203a 20202020     Repeated: ..    
   26b02:	2f753325 75332d25 2f752520 202c7525     %3u/%-3u %u/%u, 
   26b12:	252f7525 75252f75 4b4f000a 6946000a     %u/%u/%u..OK..Fi
   26b22:	7720656c 65746972 72726520 000a726f     le write error..
   26b32:	6d6d6f63 25007469 2520732a 73383231     commit.%*s %128s
   26b42:	20692520 62006925 65666675 2a250072      %i %i.buffer.%*
   26b52:	69252073 00692520 4f525245 4d203a52     s %i %i.ERROR: M
   26b62:	62207861 65666675 69732072 6920657a     ax buffer size i
   26b72:	69252073 74796220 000a7365 4f525245     s %i bytes..ERRO
   26b82:	54203a52 4f454d49 000a5455 63656843     R: TIMEOUT..Chec
   26b92:	6d75736b 0a692520 6c694600 6d616e65     ksum %i..Filenam
   26ba2:	68732065 646c756f 20656220 7373656c     e should be less
   26bb2:	61687420 6925206e 61686320 000a7372      than %i chars..
   26bc2:	28207325 62207525 73657479 69772029     %s (%u bytes) wi
   26bd2:	62206c6c 72702065 6172676f 64656d6d     ll be programmed
   26be2:	65520a2e 746f6f62 20676e69 20776f6e     ..Rebooting now 
   26bf2:	75206f74 61726770 66206564 776d7269     to upgrade firmw
   26c02:	21657261 55000a0a 6c62616e 6f742065     are!...Unable to
   26c12:	65706f20 2527206e 000a2773 6b736944      open '%s'..Disk
   26c22:	72617620 6c626169 63207365 676e6168      variables chang
   26c32:	2e2e6465 6843002e 65676e61 61732073     ed....Changes sa
   26c42:	20646576 64206f74 2e6b7369 44002e2e     ved to disk....D
   26c52:	206b7369 69726176 656c6261 61732073     isk variables sa
   26c62:	20646576 64206f74 006b7369 4c002008     ved to disk.. .L
   26c72:	203a4350 20202000 696e6946 64656873     PC: .   Finished
   26c82:	206e6920 75207525 6d000a73 6d6d6f43      in %u us..mComm
   26c92:	43646e61 746e756f 69446d00 6c546b73     andCount.mDiskTl
   26ca2:	7a69536d 61540065 432f6b73 49205550     mSize.Task/CPU I
   26cb2:	2e6f666e 73552020 69272065 206f666e     nfo.  Use 'info 
   26cc2:	27303032 206f7420 20746567 20555043     200' to get CPU 
   26cd2:	69727564 3220676e 736d3030 65655300     during 200ms.See
   26ce2:	6d656d20 2079726f 6f666e69 6d656d00      memory info.mem
   26cf2:	6f666e69 74754f00 20747570 74737973     info.Output syst
   26d02:	68206d65 746c6165 74270068 27656d69     em health.'time'
   26d12:	206f7420 77656976 6d697420 20202e65      to view time.  
   26d22:	6d697427 65732065 4d4d2074 20444420     'time set MM DD 
   26d32:	59595959 20484820 53204d4d 64572053     YYYY HH MM SS Wd
   26d42:	20277961 73206f74 74207465 00656d69     ay' to set time.
   26d52:	64616552 66206120 2e656c69 78452020     Read a file.  Ex
   26d62:	6327203a 30207461 6c69663a 78742e65     : 'cat 0:file.tx
   26d72:	6f202774 63272072 30207461 6c69663a     t' or 'cat 0:fil
   26d82:	78742e65 6e2d2074 6972706f 2027746e     e.txt -noprint' 
   26d92:	74206f74 20747365 66206669 20656c69     to test if file 
   26da2:	206e6163 72206562 00646165 00746163     can be read.cat.
   26db2:	79706f43 6c696620 66207365 2f6d6f72     Copy files from/
   26dc2:	46206f74 6873616c 2044532f 64726143     to Flash/SD Card
   26dd2:	4520202e 27203a78 30207063 6c69663a     .  Ex: 'cp 0:fil
   26de2:	78742e65 3a312074 656c6966 7478742e     e.txt 1:file.txt
   26df2:	6f430027 61207970 66206c6c 73656c69     '.Copy all files
   26e02:	20666f20 69642061 74636572 2079726f      of a directory 
   26e12:	61206f74 68746f6e 64207265 63657269     to another direc
   26e22:	79726f74 4520202e 27203a78 20706364     tory.  Ex: 'dcp 
   26e32:	72733a30 3a312063 27747364 70636400     0:src 1:dst'.dcp
   26e42:	65735500 736c2720 273a3020 726f6620     .Use 'ls 0:' for
   26e52:	616c4620 202c6873 2720726f 3120736c      Flash, or 'ls 1
   26e62:	6620273a 5320726f 61432044 6c006472     :' for SD Card.l
   26e72:	72430073 65746165 64206120 63657269     s.Create a direc
   26e82:	79726f74 7845202e 6d27203a 7269646b     tory. Ex: 'mkdir
   26e92:	73657420 6d002774 7269646b 6e655200      test'.mkdir.Ren
   26ea2:	20656d61 69662061 202e656c 203a7845     ame a file. Ex: 
   26eb2:	206d7227 69663a30 742e656c 30207478     'rm 0:file.txt 0
   26ec2:	77656e3a 7478742e 766d0027 69725700     :new.txt'.mv.Wri
   26ed2:	61206574 77656e20 6c696620 45202e65     te a new file. E
   26ee2:	27203a78 3c20666e 656c6966 7478742e     x: 'nf <file.txt
   26ef2:	6552003e 65766f6d 66206120 2e656c69     >.Remove a file.
   26f02:	3a784520 6d722720 663a3020 2e656c69      Ex: 'rm 0:file.
   26f12:	27747874 006d7200 63326927 61657220     txt'.rm.'i2c rea
   26f22:	78302064 30203130 20323078 756f633c     d 0x01 0x02 <cou
   26f32:	273e746e 52203a20 73646165 6f633c20     nt>' : Reads <co
   26f42:	3e746e75 67657220 65747369 6f207372     unt> registers o
   26f52:	65642066 65636976 30783020 74732031     f device 0x01 st
   26f62:	69747261 6620676e 206d6f72 32307830     arting from 0x02
   26f72:	3269270a 72772063 20657469 31307830     .'i2c write 0x01
   26f82:	30783020 78302032 20273330 203a2020      0x02 0x03'   : 
   26f92:	74697257 30207365 20333078 64206f74     Writes 0x03 to d
   26fa2:	63697665 78302065 202c3130 20676572     evice 0x01, reg 
   26fb2:	32307830 3269270a 69642063 766f6373     0x02.'i2c discov
   26fc2:	20277265 6944203a 766f6373 20737265     er' : Discovers 
   26fd2:	206c6c61 20433249 69766564 20736563     all I2C devices 
   26fe2:	74206e6f 42206568 69005355 50006332     on the BUS.i2c.P
   26ff2:	6d617261 72657465 27203a73 6d726f66     arameters: 'form
   27002:	73207461 202c2764 726f6627 2074616d     at sd', 'format 
   27012:	73616c66 202c2768 756f6d27 7320746e     flash', 'mount s
   27022:	202c2764 756f6d27 6620746e 6873616c     d', 'mount flash
   27032:	74730027 6761726f 65520065 746f6f62     '.storage.Reboot
   27042:	68742073 79732065 6d657473 62657200     s the system.reb
   27052:	00746f6f 676f6c27 65683c20 3e6f6c6c     oot.'log <hello>
   27062:	6c203a27 6120676f 6e69206e 6d206f66     ': log an info m
   27072:	61737365 270a6567 20676f6c 73756c66     essage.'log flus
   27082:	20202768 6c66203a 20687375 20656874     h'  : flush the 
   27092:	73676f6c 6f6c270a 74732067 73757461     logs.'log status
   270a2:	203a2027 20746567 74617473 6f207375     ' : get status o
   270b2:	68742066 6f6c2065 72656767 6f6c270a     f the logger.'lo
   270c2:	6e652067 656c6261 69727020 6420746e     g enable print d
   270d2:	67756265 666e692f 61772f6f 652f6e72     ebug/info/warn/e
   270e2:	726f7272 203a2027 62616e45 2073656c     rror' : Enables 
   270f2:	67676f6c 63207265 736c6c61 206f7420     logger calls to 
   27102:	6e697270 270a6674 20676f6c 61736964     printf.'log disa
   27112:	20656c62 6e697270 65642074 2f677562     ble print debug/
   27122:	6f666e69 7261772f 72652f6e 27726f72     info/warn/error'
   27132:	6944203a 6c626173 6c207365 6567676f     : Disables logge
   27142:	61632072 20736c6c 70206f74 746e6972     r calls to print
   27152:	6c000a66 4200676f 6e696765 206f7420     f..log.Begin to 
   27162:	7261656c 5249206e 646f6320 66207365     learn IR codes f
   27172:	6e20726f 65626d75 30207372 6c00392d     or numbers 0-9.l
   27182:	6e726165 65735500 69772720 656c6572     earn.Use 'wirele
   27192:	20277373 73206f74 74206565 6e206568     ss' to see the n
   271a2:	65747365 6f632064 6e616d6d 47007364     ested commands.G
   271b2:	61207465 6c696620 73752065 20676e69     et a file using 
   271c2:	6c74656e 2e64616f 20657865 6220726f     netload.exe or b
   271d2:	73752079 20676e69 20656874 6c6c6f66     y using the foll
   271e2:	6e69776f 72702067 636f746f 0a3a6c6f     owing protocol:.
   271f2:	74697257 75622065 72656666 7562203a     Write buffer: bu
   27202:	72656666 666f3c20 74657366 6e3c203e     ffer <offset> <n
   27212:	62206d75 73657479 2e2e203e 72570a2e     um bytes> ....Wr
   27222:	20657469 66667562 74207265 6966206f     ite buffer to fi
   27232:	203a656c 6d6d6f63 3c207469 656c6966     le: commit <file
   27242:	656d616e 663c203e 20656c69 7366666f     name> <file offs
   27252:	203e7465 6d756e3c 74796220 66207365     et> <num bytes f
   27262:	206d6f72 66667562 003e7265 616c6627     rom buffer>.'fla
   27272:	3c206873 656c6966 656d616e 5720273e     sh <filename>' W
   27282:	206c6c69 73616c66 50432068 69772055     ill flash CPU wi
   27292:	74206874 20736968 2077656e 616e6962     th this new bina
   272a2:	66207972 00656c69 7074754f 20737475     ry file.Outputs 
   272b2:	69676572 72657473 74206465 6d656c65     registered telem
   272c2:	79727465 7427203a 6d656c65 79727465     etry: 'telemetry
   272d2:	76617320 3a202765 76615320 64207365      save' : Saves d
   272e2:	206b7369 0a6c6574 6c657427 74656d65     isk tel.'telemet
   272f2:	61207972 69696373 203a2027 6e697250     ry ascii' : Prin
   27302:	61207374 74206c6c 6d656c65 79727465     ts all telemetry
   27312:	206e6920 616d7568 6572206e 62616461      in human readab
   27322:	6620656c 616d726f 74270a74 6d656c65     le format.'telem
   27332:	79727465 6f633c20 202e706d 656d616e     etry <comp. name
   27342:	6e3c203e 3e656d61 61763c20 3e65756c     > <name> <value>
   27352:	6f742027 74657320 74206120 6d656c65     ' to set a telem
   27362:	79727465 72617620 6c626169 74270a65     etry variable.'t
   27372:	6d656c65 79727465 74656720 6f633c20     elemetry get <co
   27382:	202e706d 656d616e 6e3c203e 3e656d61     mp. name> <name>
   27392:	6f742027 74656720 72617620 6c626169     ' to get variabl
   273a2:	61762065 0a65756c 6c657400 74656d65     e value..telemet
   273b2:	74007972 696d7265 006c616e 78fcffff              ry.terminal...

000273c0 <typeinfo for terminalTask>:
   273c0:	000278fc 000273cc 000256b8              .x...s...V..

000273cc <typeinfo name for terminalTask>:
   273cc:	65743231 6e696d72 61546c61 ff006b73     12terminalTask..

000273dc <vtable for terminalTask>:
   273dc:	00000000 000273c0 0001b45d 0001b4a9     .....s..].......
   273ec:	00015e4d 0001b4bd 0001b959 0001b84d     M^......Y...M...
   273fc:	656e6f44 72724500 4400726f 21656e6f     Done.Error.Done!
   2740c:	52524500 203a524f 73736f50 656c6269     .ERROR: Possible
   2741c:	6f687320 6f207472 4453206e 726f2041      short on SDA or
   2742c:	4c435320 72697720 49282065 29324332      SCL wire (I2C2)
   2743c:	52450021 3a524f52 69614620 2064656c     !.ERROR: Failed 
   2744c:	69206f74 6974696e 7a696c61 69772065     to initialize wi
   2745c:	656c6572 53007373 65747379 6f42206d     reless.System Bo
   2746c:	4020746f 332e2520 684d2066 53000a7a     ot @ %.3f Mhz..S
   2747c:	65747379 6572206d 746f6f62 61206465     ystem rebooted a
   2748c:	72657466 61726320 202e6873 6c655220     fter crash.  Rel
   2749c:	6e617665 6e692074 0a3a6f66 203a4350     evant info:.PC: 
   274ac:	30257830 202e5838 3a524c20 25783020     0x%08X.  LR: 0x%
   274bc:	2e583830 53502020 30203a52 38302578     08X.  PSR: 0x%08
   274cc:	6f500a58 62697373 6c20656c 20747361     X.Possible last 
   274dc:	6e6e7572 20676e69 5420534f 3a6b7361     running OS Task:
   274ec:	73252720 20000a27 73616c46 45002068      '%s'.. Flash .E
   274fc:	69736172 6120676e 6620646e 616d726f     rasing and forma
   2750c:	6e697474 50532067 6c662049 2c687361     tting SPI flash,
   2751c:	69687420 61632073 6174206e 6120656b      this can take a
   2752c:	69687720 2e20656c 00202e2e 20495053      while ... .SPI 
   2753c:	53414c46 73692048 736f7020 6c626973     FLASH is possibl
   2754c:	61642079 6567616d 50002164 20656761     y damaged!.Page 
   2755c:	657a6973 7525203a 654d000a 7320206d     size: %u..Mem  s
   2756c:	3a657a69 20752520 77617228 74796220     ize: %u (raw byt
   2757c:	0a297365 52524500 203a524f 65636341     es)..ERROR: Acce
   2758c:	6172656c 6e6f6974 6e655320 00726f73     leration Sensor.
   2759c:	4f525245 54203a52 65706d65 75746172     ERROR: Temperatu
   275ac:	53206572 6f736e65 52450072 3a524f52     re Sensor.ERROR:
   275bc:	532d3720 656d6765 4420746e 6c707369      7-Segment Displ
   275cc:	6e007961 72646461 74655300 72697720     ay.naddr.Set wir
   275dc:	73656c65 6f6e2073 61206564 65726464     eless node addre
   275ec:	74207373 6925206f 6f726620 2527206d     ss to %i from '%
   275fc:	66202773 3a656c69 0a732520 616f4200     s' file: %s..Boa
   2760c:	49206472 73692044 2527203a 28202773     rd ID is: '%s' (
   2761c:	30257830 0a295832 746e4500 61207265     0x%02X)..Enter a
   2762c:	616f6220 49206472 36282044 68632034      board ID (64 ch
   2763c:	20737261 2978616d 2500203a 00733436     ars max): .%64s.
   2764c:	72616f42 44492064 206f7420 676f7270     Board ID to prog
   2765c:	3a6d6172 73252720 45000a27 7265746e     ram: '%s'..Enter
   2766c:	27592720 206f7420 666e6f63 2e6d7269      'Y' to confirm.
   2767c:	4f422020 20445241 43204449 4f4e4e41       BOARD ID CANNO
   2768c:	45422054 41484320 4445474e 444e4120     T BE CHANGED AND
   2769c:	20534920 4d524550 4e454e41 33250054      IS PERMANENT.%3
   276ac:	6f420073 20647261 6e204449 7020746f     s.Board ID not p
   276bc:	72676f72 656d6d61 6f590064 61632075     rogrammed.You ca
   276cc:	7270206e 6172676f 2061206d 4d524550     n program a PERM
   276dc:	4e454e41 44492054 20666f20 72756f79     ANENT ID of your
   276ec:	616f6220 002e6472 64206f54 6874206f      board..To do th
   276fc:	202c7369 646c6f68 31575320 646e6120     is, hold SW1 and
   2770c:	34575320 646e6120 73657220 74207465      SW4 and reset t
   2771c:	62206568 6472616f 5043002e 6c662055     he board..CPU fl
   2772c:	20687361 65746c61 2f646572 676f7270     ash altered/prog
   2773c:	6d6d6172 63206465 746e756f 25203a73     rammed counts: %
   2774c:	75252f75 5043000a 72702055 6172676f     u/%u..CPU progra
   2775c:	64656d6d 616c6620 28206873 2f6e696d     mmed flash (min/
   2776c:	2978616d 7525203a 2d20624b 4b752520     max): %uKb - %uK
   2777c:	4c000a62 20747361 676f7270 6d6d6172     b..Last programm
   2778c:	20676e69 6b6f6f74 20752520 000a736d     ing took %u ms..
   2779c:	6c6c6143 20676e69 72756f79 69616d20     Calling your mai
   277ac:	0029286e 2d2d2d2d 2d2d2d2d 2d2d2d2d     n().------------
   277bc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   277cc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   277dc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 4b002d2d     --------------.K
   277ec:	424d0042 73655900 006f4e00 203a7325     B.MB.Yes.No.%s: 
   277fc:	2d204b4f 6143202d 69636170 25207974     OK -- Capacity %
   2780c:	2564352d 41202c73 6c696176 656c6261     -5d%s, Available
   2781c:	2d25203a 73257535 7325000a 7245203a     : %-5u%s..%s: Er
   2782c:	20726f72 6e20726f 7020746f 65736572     ror or not prese
   2783c:	202e746e 72724520 2320726f 202c6925     nt.  Error #%i, 
   2784c:	6e756f4d 3a646574 0a732520 00702500     Mounted: %s..%p.
   2785c:	76006425 0064654c                       %d.vLed.

00027864 <typeinfo for __cxxabiv1::__class_type_info>:
   27864:	000278fc 00027870 00027920              .x..px.. y..

00027870 <typeinfo name for __cxxabiv1::__class_type_info>:
   27870:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   27880:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   27890:	ffff0045                                E...

00027894 <vtable for __cxxabiv1::__class_type_info>:
   27894:	00000000 00027864 0001c621 0001c635     ....dx..!...5...
   278a4:	0001c7f5 0001c7f5 0001c661 0001c5e1     ........a.......
   278b4:	0001c649 0001c68b 0001c615              I...........

000278c0 <typeinfo for __cxxabiv1::__si_class_type_info>:
   278c0:	000278fc 000278cc 00027864              .x...x..dx..

000278cc <typeinfo name for __cxxabiv1::__si_class_type_info>:
   278cc:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   278dc:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   278ec:	456f666e ffffff00                       nfoE....

000278f4 <vtable for __cxxabiv1::__si_class_type_info>:
   278f4:	00000000 000278c0 0001c6ed 0001c701     .....x..........
   27904:	0001c7f5 0001c7f5 0001c661 0001c5e1     ........a.......
   27914:	0001c7c9 0001c74d 0001c715              ....M.......

00027920 <typeinfo for std::type_info>:
   27920:	0002789c 00027928                       .x..(y..

00027928 <typeinfo name for std::type_info>:
   27928:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

00027938 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   27938:	000278fc 00027944 00027864              .x..Dy..dx..

00027944 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   27944:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   27954:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   27964:	6f666e69 ffff0045                       infoE...

0002796c <vtable for __cxxabiv1::__vmi_class_type_info>:
   2796c:	00000000 00027938 0001c825 0001c839     ....8y..%...9...
   2797c:	0001c7f5 0001c7f5 0001c661 0001c5e1     ........a.......
   2798c:	0001cb7d 0001c8eb 0001c84d              }.......M...

00027998 <__sf_fake_stderr>:
	...

000279b8 <__sf_fake_stdin>:
	...

000279d8 <__sf_fake_stdout>:
	...

000279f8 <_global_impure_ptr>:
   279f8:	2007c0e4 4f500043 00584953              ... C.POSIX.

00027a04 <DAYS_IN_MONTH>:
   27a04:	0000001f 0000001c 0000001f 0000001e     ................
   27a14:	0000001f 0000001e 0000001f 0000001f     ................
   27a24:	0000001e 0000001f 0000001e 0000001f     ................

00027a34 <_DAYS_BEFORE_MONTH>:
   27a34:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   27a44:	00000078 00000097 000000b5 000000d4     x...............
   27a54:	000000f3 00000111 00000130 0000014e     ........0...N...

00027a64 <__month_lengths>:
   27a64:	0000001f 0000001c 0000001f 0000001e     ................
   27a74:	0000001f 0000001e 0000001f 0000001f     ................
   27a84:	0000001e 0000001f 0000001e 0000001f     ................
   27a94:	0000001f 0000001d 0000001f 0000001e     ................
   27aa4:	0000001f 0000001e 0000001f 0000001f     ................
   27ab4:	0000001e 0000001f 0000001e 0000001f     ................
   27ac4:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   27ad4:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   27ae4:	32313000 36353433 61393837 65646362     .0123456789abcde
   27af4:	25650066 ff00646c                       f.e%ld..

00027afc <fpi.6129>:
   27afc:	00000035 fffffbce 000003cb 00000001     5...............
   27b0c:	00000000                                ....

00027b10 <fpinan.6165>:
   27b10:	00000034 fffffbce 000003cb 00000001     4...............
   27b20:	00000000 ffffffff                       ........

00027b28 <tinytens>:
   27b28:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   27b38:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   27b48:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   27b58:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   27b68:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   27b78:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   27b88:	006e2575 73332e25 332e2520 64332573     u%n.%.3s %.3s%3d
   27b98:	322e2520 2e253a64 253a6432 2064322e      %.2d:%.2d:%.2d 
   27ba8:	000a6425                                %d..

00027bac <day_name.4714>:
   27bac:	4d6e7553 75546e6f 64655765 46756854     SunMonTueWedThuF
   27bbc:	61536972 6e614a74                                riSat

00027bc1 <mon_name.4715>:
   27bc1:	466e614a 614d6265 72704172 4a79614d     JanFebMarAprMayJ
   27bd1:	754a6e75 6775416c 4f706553 6f4e7463     unJulAugSepOctNo
   27be1:	63654476                                vDec

00027be5 <_ctype_>:
   27be5:	20202000 20202020 28282020 20282828     .         ((((( 
   27bf5:	20202020 20202020 20202020 20202020                     
   27c05:	10108820 10101010 10101010 10101010      ...............
   27c15:	04040410 04040404 10040404 10101010     ................
   27c25:	41411010 41414141 01010101 01010101     ..AAAAAA........
   27c35:	01010101 01010101 01010101 10101010     ................
   27c45:	42421010 42424242 02020202 02020202     ..BBBBBB........
   27c55:	02020202 02020202 02020202 10101010     ................
   27c65:	00000020 00000000 00000000 00000000      ...............
	...
   27ce5:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   27cf5:	00ffffff                                         ...

00027cf8 <__mprec_bigtens>:
   27cf8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   27d08:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   27d18:	7f73bf3c 75154fdd                       <.s..O.u

00027d20 <__mprec_tens>:
   27d20:	00000000 3ff00000 00000000 40240000     .......?......$@
   27d30:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   27d40:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   27d50:	00000000 412e8480 00000000 416312d0     .......A......cA
   27d60:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   27d70:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   27d80:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   27d90:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   27da0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   27db0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   27dc0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   27dd0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   27de0:	79d99db4 44ea7843                       ...yCx.D

00027de8 <p05.6047>:
   27de8:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   27df8:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   27e08:	00027e26 00027e29 00027e2c 61462d41     &~..)~..,~..A-Fa
   27e18:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   27e28:	00303000 ff005878                       .00.xX..

00027e30 <APP_SYM_TABLE>:
__preinit_array_start():
   27e30:	31303030 63376637 41205420 495f4344     00017f7c T ADC_I
   27e40:	61485152 656c646e 30300a72 36383130     RQHandler.000186
   27e50:	54206338 4e414320 5152495f 646e6148     8c T CAN_IRQHand
   27e60:	0a72656c 31303030 38616537 45205420     ler.00017ea8 T E
   27e70:	33544e49 5152495f 646e6148 0a72656c     INT3_IRQHandler.
   27e80:	31303030 63383538 49205420 5f324332     0001858c T I2C2_
   27e90:	48515249 6c646e61 300a7265 37313030     IRQHandler.00017
   27ea0:	20343963 49522054 52495f54 6e614851     c94 T RIT_IRQHan
   27eb0:	72656c64 3030300a 32383631 20542034     dler.00016824 T 
   27ec0:	5f435452 48515249 6c646e61 300a7265     RTC_IRQHandler.0
   27ed0:	30313030 20383135 49542054 3152454d     0010518 T TIMER1
   27ee0:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   27ef0:	63323338 55205420 30545241 5152495f     832c T UART0_IRQ
   27f00:	646e6148 0a72656c 31303030 38353138     Handler.00018158
   27f10:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   27f20:	0a72656c 31303030 30663038 55205420     ler.000180f0 T U
   27f30:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   27f40:	31303030 63656639 63205420 61487461     00019fec T catHa
   27f50:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   27f60:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   27f70:	66336131 20542063 48706364 6c646e61     1a3fc T dcpHandl
   27f80:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   27f90:	76202c26 2a64696f 30300a29 64393130     &, void*).00019d
   27fa0:	54203464 676f6c20 646e6148 2872656c     d4 T logHandler(
   27fb0:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   27fc0:	64696f76 300a292a 63313030 20303435     void*).0001c540 
   27fd0:	43762054 5f6c6c61 6b636142 300a2928     T vCall_Back().0
   27fe0:	39313030 20303164 69742054 6148656d     0019d10 T timeHa
   27ff0:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   28000:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   28010:	66346331 20542038 6e6f4376 6c6f7274     1c4f8 T vControl
   28020:	2844454c 64696f76 300a292a 61313030     LED(void*).0001a
   28030:	20383639 32692054 486f4963 6c646e61     968 T i2cIoHandl
   28040:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   28050:	76202c26 2a64696f 30300a29 32613130     &, void*).0001a2
   28060:	54203037 646b6d20 61487269 656c646e     70 T mkdirHandle
   28070:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   28080:	6f76202c 292a6469 3030300a 61636131     , void*).0001aca
   28090:	20542063 74527377 6e614865 72656c64     c T wsRteHandler
   280a0:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   280b0:	696f7620 0a292a64 31303030 30633761      void*).0001a7c0
   280c0:	68205420 746c6165 6e614868 72656c64      T healthHandler
   280d0:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   280e0:	696f7620 0a292a64 31303030 34663561      void*).0001a5f4
   280f0:	72205420 6f6f6265 6e614874 72656c64      T rebootHandler
   28100:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   28110:	696f7620 0a292a64 31303030 34323362      void*).0001b324
   28120:	67205420 69467465 6148656c 656c646e      T getFileHandle
   28130:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   28140:	6f76202c 292a6469 3030300a 36376131     , void*).0001a76
   28150:	20542038 7261656c 4872496e 6c646e61     8 T learnIrHandl
   28160:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   28170:	76202c26 2a64696f 30300a29 32303130     &, void*).000102
   28180:	54203032 776f6c20 76656c5f 695f6c65     20 T low_level_i
   28190:	2874696e 30300a29 63393130 54206365     nit().00019cec T
   281a0:	6d656d20 6f666e49 646e6148 2872656c      memInfoHandler(
   281b0:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   281c0:	64696f76 300a292a 61313030 20343433     void*).0001a344 
   281d0:	656e2054 6c694677 6e614865 72656c64     T newFileHandler
   281e0:	72747328 43202c26 44726168 2c267665     (str&, CharDev&,
   281f0:	696f7620 0a292a64 31303030 38333561      void*).0001a538
   28200:	73205420 61726f74 61486567 656c646e      T storageHandle
   28210:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   28220:	6f76202c 292a6469 3030300a 35356331     , void*).0001c55
   28230:	20542034 69655f63 5f33746e 646e6168     4 T c_eint3_hand
   28240:	2872656c 30300a29 64623130 54206338     ler().0001bd8c T
   28250:	67696820 656c5f68 5f6c6576 74696e69      high_level_init
   28260:	300a2928 36313030 20306531 63732054     ().000161e0 T sc
   28270:	75646568 5f72656c 72617473 6f622874     heduler_start(bo
   28280:	202c6c6f 6c6f6f62 30300a29 63393130     ol, bool).00019c
   28290:	54203430 73617420 73694c6b 6e614874     04 T taskListHan
   282a0:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   282b0:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   282c0:	34616461 77205420 6c657269 48737365     ada4 T wirelessH
   282d0:	6c646e61 73287265 2c267274 61684320     andler(str&, Cha
   282e0:	76654472 76202c26 2a64696f 30300a29     rDev&, void*).00
   282f0:	32623130 54203037 616c6620 72506873     01b270 T flashPr
   28300:	6148676f 656c646e 74732872 202c2672     ogHandler(str&, 
   28310:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   28320:	3030300a 32366131 20542034 656c6574     .0001a624 T tele
   28330:	7274656d 6e614879 72656c64 72747328     metryHandler(str
   28340:	43202c26 44726168 2c267665 696f7620     &, CharDev&, voi
   28350:	0a292a64 31303030 34633136 73205420     d*).000161c4 T s
   28360:	64656863 72656c75 6464615f 7361745f     cheduler_add_tas
   28370:	6373286b 75646568 5f72656c 6b736174     k(scheduler_task
   28380:	300a292a 36313030 20343130 63732054     *).00016014 T sc
   28390:	75646568 5f72656c 74696e69 6c6c615f     heduler_init_all
   283a0:	6f6f6228 300a296c 30313030 20343037     (bool).00010704 
   283b0:	79732054 6c635f73 5f6b636f 666e6f63     T sys_clock_conf
   283c0:	72756769 0a292865 31303030 30666535     igure().00015ef0
   283d0:	73205420 64656863 72656c75 745f635f      T scheduler_c_t
   283e0:	5f6b7361 76697270 28657461 64696f76     ask_private(void
   283f0:	300a292a 30313030 20303831 73622054     *).00010180 T bs
   28400:	6e695f73 75287469 6769736e 2064656e     s_init(unsigned 
   28410:	2c746e69 736e7520 656e6769 6e692064     int, unsigned in
   28420:	300a2974 39313030 20633666 70632054     t).00019f6c T cp
   28430:	646e6148 2872656c 26727473 6843202c     Handler(str&, Ch
   28440:	65447261 202c2676 64696f76 300a292a     arDev&, void*).0
   28450:	30313030 20613631 61642054 695f6174     001016a T data_i
   28460:	2874696e 69736e75 64656e67 746e6920     nit(unsigned int
   28470:	6e75202c 6e676973 69206465 202c746e     , unsigned int, 
   28480:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   28490:	30613130 54206365 48736c20 6c646e61     01a0ec T lsHandl
   284a0:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   284b0:	76202c26 2a64696f 30300a29 32613130     &, void*).0001a2
   284c0:	54203865 48766d20 6c646e61 73287265     e8 T mvHandler(s
   284d0:	2c267274 61684320 76654472 76202c26     tr&, CharDev&, v
   284e0:	2a64696f 30300a29 32613130 54206361     oid*).0001a2ac T
   284f0:	486d7220 6c646e61 73287265 2c267274      rmHandler(str&,
   28500:	61684320 76654472 76202c26 2a64696f      CharDev&, void*
   28510:	30300a29 63343130 54203437 44454c20     ).00014c74 T LED
   28520:	7369445f 79616c70 65733a3a 66654c74     _Display::setLef
   28530:	67694474 63287469 29726168 3030300a     tDigit(char).000
   28540:	38633431 20542063 5f44454c 70736944     14c8c T LED_Disp
   28550:	3a79616c 7465733a 68676952 67694474     lay::setRightDig
   28560:	63287469 29726168 3030300a 61633431     it(char).00014ca
   28570:	20542034 5f44454c 70736944 3a79616c     4 T LED_Display:
   28580:	696e693a 0a292874 31303030 63646334     :init().00014cdc
   28590:	4c205420 445f4445 6c707369 3a3a7961      T LED_Display::
   285a0:	4e746573 65626d75 68632872 0a297261     setNumber(char).
   285b0:	31303030 30376434 4c205420 74686769     00014d70 T Light
   285c0:	6e65535f 3a726f73 7465673a 56776152     _Sensor::getRawV
   285d0:	65756c61 300a2928 34313030 20633664     alue().00014d6c 
   285e0:	694c2054 5f746867 736e6553 3a3a726f     T Light_Sensor::
   285f0:	74696e69 300a2928 38313030 20633731     init().0001817c 
   28600:	6f4e2054 63696472 65727453 3a3a6d61     T NordicStream::
   28610:	73756c66 0a292868 31303030 32323238     flush().00018222
   28620:	4e205420 6964726f 72745363 3a6d6165      T NordicStream:
   28630:	7465673a 72616843 61686328 202c2a72     :getChar(char*, 
   28640:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   28650:	32383130 54203030 726f4e20 53636964     018200 T NordicS
   28660:	61657274 703a3a6d 68437475 63287261     tream::putChar(c
   28670:	2c726168 736e7520 656e6769 6e692064     har, unsigned in
   28680:	300a2974 38313030 20383632 6f4e2054     t).00018268 T No
   28690:	63696472 65727453 3a3a6d61 64726f4e     rdicStream::Nord
   286a0:	74536369 6d616572 300a2928 38313030     icStream().00018
   286b0:	20383632 6f4e2054 63696472 65727453     268 T NordicStre
   286c0:	3a3a6d61 64726f4e 74536369 6d616572     am::NordicStream
   286d0:	300a2928 62313030 20383237 65742054     ().0001b728 T te
   286e0:	6e696d72 61546c61 3a3a6b73 43746567     rminalTask::getC
   286f0:	616d6d6f 2928646e 3030300a 66356231     ommand().0001b5f
   28700:	20542034 6d726574 6c616e69 6b736154     4 T terminalTask
   28710:	61733a3a 69446576 6c546b73 0a29286d     ::saveDiskTlm().
   28720:	31303030 38653662 74205420 696d7265     0001b6e8 T termi
   28730:	546c616e 3a6b7361 6464613a 6d6d6f43     nalTask::addComm
   28740:	43646e61 6e6e6168 43286c65 44726168     andChannel(CharD
   28750:	2c2a7665 6f6f6220 300a296c 62313030     ev*, bool).0001b
   28760:	20383736 65742054 6e696d72 61546c61     678 T terminalTa
   28770:	3a3a6b73 646e6168 6345656c 6e416f68     sk::handleEchoAn
   28780:	63614264 6170736b 74286563 696d7265     dBackspace(termi
   28790:	546c616e 3a6b7361 646d633a 6e616843     nalTask::cmdChan
   287a0:	2c2a745f 61686320 300a2972 62313030     _t*, char).0001b
   287b0:	20633438 65742054 6e696d72 61546c61     84c T terminalTa
   287c0:	3a3a6b73 286e7572 64696f76 300a292a     sk::run(void*).0
   287d0:	62313030 20636234 65742054 6e696d72     001b4bc T termin
   287e0:	61546c61 3a3a6b73 54676572 29286d6c     alTask::regTlm()
   287f0:	3030300a 35396231 20542038 6d726574     .0001b958 T term
   28800:	6c616e69 6b736154 61743a3a 6e456b73     inalTask::taskEn
   28810:	28797274 30300a29 35623130 54203434     try().0001b544 T
   28820:	72657420 616e696d 7361546c 743a3a6b      terminalTask::t
   28830:	696d7265 546c616e 286b7361 69736e75     erminalTask(unsi
   28840:	64656e67 61686320 300a2972 62313030     gned char).0001b
   28850:	20343435 65742054 6e696d72 61546c61     544 T terminalTa
   28860:	3a3a6b73 6d726574 6c616e69 6b736154     sk::terminalTask
   28870:	736e7528 656e6769 68632064 0a297261     (unsigned char).
   28880:	31303030 34353236 73205420 64656863     00016254 T sched
   28890:	72656c75 7361745f 673a3a6b 68537465     uler_task::getSh
   288a0:	64657261 656a624f 75287463 6769736e     aredObject(unsig
   288b0:	2064656e 72616863 30300a29 32363130     ned char).000162
   288c0:	54203032 68637320 6c756465 745f7265     20 T scheduler_t
   288d0:	3a6b7361 6863733a 6c756465 745f7265     ask::scheduler_t
   288e0:	286b7361 72616863 6e6f6320 2c2a7473     ask(char const*,
   288f0:	736e7520 656e6769 6f6c2064 202c676e      unsigned long, 
   28900:	69736e75 64656e67 61686320 76202c72     unsigned char, v
   28910:	2a64696f 30300a29 32363130 54203032     oid*).00016220 T
   28920:	68637320 6c756465 745f7265 3a6b7361      scheduler_task:
   28930:	6863733a 6c756465 745f7265 286b7361     :scheduler_task(
   28940:	72616863 6e6f6320 2c2a7473 736e7520     char const*, uns
   28950:	656e6769 6f6c2064 202c676e 69736e75     igned long, unsi
   28960:	64656e67 61686320 76202c72 2a64696f     gned char, void*
   28970:	30300a29 62353130 54203032 6d6f4320     ).00015b20 T Com
   28980:	646e616d 636f7250 6f737365 613a3a72     mandProcessor::a
   28990:	61486464 656c646e 6f622872 28206c6f     ddHandler(bool (
   289a0:	7328292a 2c267274 61684320 76654472     *)(str&, CharDev
   289b0:	76202c26 2a64696f 63202c29 20726168     &, void*), char 
   289c0:	736e6f63 202c2a74 72616863 6e6f6320     const*, char con
   289d0:	2c2a7473 696f7620 0a292a64 31303030     st*, void*).0001
   289e0:	63336335 43205420 616d6d6f 7250646e     5c3c T CommandPr
   289f0:	7365636f 3a726f73 7465673a 706c6548     ocessor::getHelp
   28a00:	74786554 72747328 43202c26 44726168     Text(str&, CharD
   28a10:	29267665 3030300a 65633531 20542038     ev&).00015ce8 T 
   28a20:	6d6d6f43 50646e61 65636f72 726f7373     CommandProcessor
   28a30:	61683a3a 656c646e 6d6d6f43 28646e61     ::handleCommand(
   28a40:	26727473 6843202c 65447261 0a292676     str&, CharDev&).
   28a50:	31303030 63616335 43205420 616d6d6f     00015cac T Comma
   28a60:	7250646e 7365636f 3a726f73 6572703a     ndProcessor::pre
   28a70:	65726170 50646d43 6d617261 72747328     pareCmdParam(str
   28a80:	63202c26 20726168 736e6f63 0a292a74     &, char const*).
   28a90:	31303030 63396235 43205420 616d6d6f     00015b9c T Comma
   28aa0:	7250646e 7365636f 3a726f73 7465673a     ndProcessor::get
   28ab0:	69676552 72657473 6f436465 6e616d6d     RegisteredComman
   28ac0:	73694c64 68432874 65447261 0a292676     dList(CharDev&).
   28ad0:	31303030 34313463 4c205420 50476261     0001c414 T LabGP
   28ae0:	6e494f49 72726574 73747075 65733a3a     IOInterrupts::se
   28af0:	73695274 45676e69 28656764 6c6f6f62     tRisingEdge(bool
   28b00:	30300a29 34633130 54203833 62614c20     ).0001c438 T Lab
   28b10:	4f495047 65746e49 70757272 3a3a7374     GPIOInterrupts::
   28b20:	46746573 696c6c61 6445676e 62286567     setFallingEdge(b
   28b30:	296c6f6f 3030300a 38336331 20542063     ool).0001c38c T 
   28b40:	4762614c 494f4950 7265746e 74707572     LabGPIOInterrupt
   28b50:	683a3a73 6c646e61 6e695f65 72726574     s::handle_interr
   28b60:	28747075 30300a29 34633130 54206335     upt().0001c45c T
   28b70:	62614c20 4f495047 65746e49 70757272      LabGPIOInterrup
   28b80:	3a3a7374 61747461 6e496863 72726574     ts::attachInterr
   28b90:	48747075 6c646e61 75287265 6769736e     uptHandler(unsig
   28ba0:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   28bb0:	63206465 2c726168 696f7620 2a282064     ed char, void (*
   28bc0:	2c292829 746e4920 75727265 6f437470     )(), InterruptCo
   28bd0:	7469646e 5f6e6f69 300a2945 63313030     ndition_E).0001c
   28be0:	20633733 614c2054 49504762 746e494f     37c T LabGPIOInt
   28bf0:	75727265 3a737470 696e693a 0a292874     errupts::init().
   28c00:	31303030 30616234 41205420 6c656363     00014ba0 T Accel
   28c10:	74617265 5f6e6f69 736e6553 3a3a726f     eration_Sensor::
   28c20:	74696e69 300a2928 34313030 20363164     init().00014d16 
   28c30:	454c2054 693a3a44 2874696e 30300a29     T LED::init().00
   28c40:	64343130 54206331 44454c20 65733a3a     014d1c T LED::se
   28c50:	6c6c4174 736e7528 656e6769 68632064     tAll(unsigned ch
   28c60:	0a297261 31303030 36386236 73205420     ar).00016b86 T s
   28c70:	3a3a7274 73617265 74664165 69287265     tr::eraseAfter(i
   28c80:	202c746e 29746e69 3030300a 34623631     nt, int).00016b4
   28c90:	20542030 3a727473 6172653a 69466573     0 T str::eraseFi
   28ca0:	28747372 29746e69 3030300a 38643631     rst(int).00016d8
   28cb0:	20542036 3a727473 736e693a 41747265     6 T str::insertA
   28cc0:	646e4574 61686328 6f632072 2a74736e     tEnd(char const*
   28cd0:	30300a29 63363130 54206361 72747320     ).00016cac T str
   28ce0:	65723a3a 6f6c6c41 65746163 286d654d     ::reAllocateMem(
   28cf0:	29746e69 3030300a 65623631 20542036     int).00016be6 T 
   28d00:	3a727473 6172653a 69466573 57747372     str::eraseFirstW
   28d10:	7364726f 746e6928 6863202c 0a297261     ords(int, char).
   28d20:	31303030 34366436 73205420 3a3a7274     00016d64 T str::
   28d30:	75736e65 654d6572 79726f6d 6e496f54     ensureMemoryToIn
   28d40:	74726573 6168434e 69287372 0a29746e     sertNChars(int).
   28d50:	31303030 34373936 73205420 3a3a7274     00016974 T str::
   28d60:	61656c63 0a292872 31303030 65626236     clear().00016bbe
   28d70:	73205420 3a3a7274 73617265 68632865      T str::erase(ch
   28d80:	63207261 74736e6f 300a292a 36313030     ar const*).00016
   28d90:	20633739 74732054 733a3a72 666e6163     97c T str::scanf
   28da0:	61686328 6f632072 2a74736e 2e2e202c     (char const*, ..
   28db0:	300a292e 36313030 20323264 74732054     .).00016d22 T st
   28dc0:	703a3a72 746e6972 68632866 63207261     r::printf(char c
   28dd0:	74736e6f 2e202c2a 0a292e2e 31303030     onst*, ...).0001
   28de0:	34316436 73205420 3a3a7274 65736572     6d14 T str::rese
   28df0:	28657672 29746e69 3030300a 35633631     rve(int).00016c5
   28e00:	20542030 3a727473 6972743a 646e456d     0 T str::trimEnd
   28e10:	61686328 6f632072 2a74736e 30300a29     (char const*).00
   28e20:	64363130 54203463 72747320 6f633a3a     016dc4 T str::co
   28e30:	72467970 63286d6f 20726168 736e6f63     pyFrom(char cons
   28e40:	0a292a74 31303030 38393936 73205420     t*).00016998 T s
   28e50:	3a3a7274 656b6f74 657a696e 61686328     tr::tokenize(cha
   28e60:	6f632072 2a74736e 6e69202c 2e202c74     r const*, int, .
   28e70:	0a292e2e 31303030 38366236 73205420     ..).00016b68 T s
   28e80:	3a3a7274 73617265 73614c65 6e692874     tr::eraseLast(in
   28e90:	300a2974 36313030 20303163 74732054     t).00016c10 T st
   28ea0:	743a3a72 536d6972 74726174 61686328     r::trimStart(cha
   28eb0:	6f632072 2a74736e 30300a29 39363130     r const*).000169
   28ec0:	54206331 72747320 74733a3a 68632872     1c T str::str(ch
   28ed0:	2c2a7261 746e6920 30300a29 64363130     ar*, int).00016d
   28ee0:	54203830 72747320 74733a3a 6e692872     08 T str::str(in
   28ef0:	300a2974 36313030 20633139 74732054     t).0001691c T st
   28f00:	733a3a72 63287274 2a726168 6e69202c     r::str(char*, in
   28f10:	300a2974 36313030 20383064 74732054     t).00016d08 T st
   28f20:	733a3a72 69287274 0a29746e 31303030     r::str(int).0001
   28f30:	34343936 73205420 3a3a7274 7274737e     6944 T str::~str
   28f40:	300a2928 36313030 20343439 74732054     ().00016944 T st
   28f50:	7e3a3a72 28727473 30300a29 65363130     r::~str().00016e
   28f60:	54203030 72747320 706f3a3a 74617265     00 T str::operat
   28f70:	283d726f 72616863 6e6f6320 292a7473     or=(char const*)
   28f80:	3030300a 39633631 20542038 3a727473     .00016c98 T str:
   28f90:	65706f3a 6f746172 285d5b72 29746e69     :operator[](int)
   28fa0:	3030300a 61643631 20542061 3a727473     .00016daa T str:
   28fb0:	65706f3a 6f746172 283d2b72 72616863     :operator+=(char
   28fc0:	30300a29 35383130 54206330 43324920     ).0001850c T I2C
   28fd0:	693a3a32 2874696e 69736e75 64656e67     2::init(unsigned
   28fe0:	746e6920 30300a29 35383130 54203837      int).00018578 T
   28ff0:	43324920 493a3a32 28324332 30300a29      I2C2::I2C2().00
   29000:	35383130 54203837 43324920 493a3a32     018578 T I2C2::I
   29010:	28324332 30300a29 32383130 54203064     2C2().000182d0 T
   29020:	72615520 3a3a3074 74696e69 736e7528      Uart0::init(uns
   29030:	656e6769 6e692064 69202c74 202c746e     igned int, int, 
   29040:	29746e69 3030300a 31333831 20542030     int).00018310 T 
   29050:	74726155 553a3a30 30747261 300a2928     Uart0::Uart0().0
   29060:	38313030 20303133 61552054 3a307472     0018310 T Uart0:
   29070:	7261553a 29283074 3030300a 33313831     :Uart0().0001813
   29080:	20542063 74726155 553a3a32 32747261     c T Uart2::Uart2
   29090:	300a2928 38313030 20633331 61552054     ().0001813c T Ua
   290a0:	3a327472 7261553a 29283274 3030300a     rt2::Uart2().000
   290b0:	64303831 20542034 74726155 553a3a33     180d4 T Uart3::U
   290c0:	33747261 300a2928 38313030 20346430     art3().000180d4 
   290d0:	61552054 3a337472 7261553a 29283374     T Uart3::Uart3()
   290e0:	3030300a 35623731 20542030 72616843     .00017b50 T Char
   290f0:	3a766544 7475703a 61686328 6f632072     Dev::put(char co
   29100:	2a74736e 6e75202c 6e676973 69206465     nst*, unsigned i
   29110:	0a29746e 31303030 34396237 43205420     nt).00017b94 T C
   29120:	44726168 3a3a7665 73746567 61686328     harDev::gets(cha
   29130:	202c2a72 2c746e69 736e7520 656e6769     r*, int, unsigne
   29140:	6e692064 300a2974 37313030 20346562     d int).00017be4 
   29150:	68432054 65447261 703a3a76 746e6972     T CharDev::print
   29160:	68632866 63207261 74736e6f 2e202c2a     f(char const*, .
   29170:	0a292e2e 31303030 38376237 43205420     ..).00017b78 T C
   29180:	44726168 3a3a7665 6c747570 28656e69     harDev::putline(
   29190:	72616863 6e6f6320 2c2a7473 736e7520     char const*, uns
   291a0:	656e6769 6e692064 300a2974 37313030     igned int).00017
   291b0:	20633563 68432054 65447261 433a3a76     c5c T CharDev::C
   291c0:	44726168 29287665 3030300a 35633731     harDev().00017c5
   291d0:	20542063 72616843 3a766544 6168433a     c T CharDev::Cha
   291e0:	76654472 300a2928 37313030 20633763     rDev().00017c7c 
   291f0:	68432054 65447261 7e3a3a76 72616843     T CharDev::~Char
   29200:	28766544 30300a29 63373130 54206337     Dev().00017c7c T
   29210:	61684320 76654472 437e3a3a 44726168      CharDev::~CharD
   29220:	29287665 3030300a 33336331 20542038     ev().0001c338 T 
   29230:	4762614c 3a4f4950 7465733a 6e497341     LabGPIO::setAsIn
   29240:	28747570 30300a29 33633130 54203034     put().0001c340 T
   29250:	62614c20 4f495047 65733a3a 4f734174      LabGPIO::setAsO
   29260:	75707475 0a292874 31303030 30353363     utput().0001c350
   29270:	4c205420 50476261 3a3a4f49 44746573      T LabGPIO::setD
   29280:	63657269 6e6f6974 6f6f6228 300a296c     irection(bool).0
   29290:	63313030 20323733 614c2054 49504762     001c372 T LabGPI
   292a0:	733a3a4f 62287465 296c6f6f 3030300a     O::set(bool).000
   292b0:	36336331 20542036 4762614c 3a4f4950     1c366 T LabGPIO:
   292c0:	7465733a 28776f4c 30300a29 33633130     :setLow().0001c3
   292d0:	54206135 62614c20 4f495047 65733a3a     5a T LabGPIO::se
   292e0:	67694874 0a292868 31303030 63653263     tHigh().0001c2ec
   292f0:	4c205420 50476261 3a3a4f49 4762614c      T LabGPIO::LabG
   29300:	284f4950 69736e75 64656e67 61686320     PIO(unsigned cha
   29310:	75202c72 6769736e 2064656e 72616863     r, unsigned char
   29320:	30300a29 32633130 54206365 62614c20     ).0001c2ec T Lab
   29330:	4f495047 614c3a3a 49504762 6e75284f     GPIO::LabGPIO(un
   29340:	6e676973 63206465 2c726168 736e7520     signed char, uns
   29350:	656e6769 68632064 0a297261 31303030     igned char).0001
   29360:	61613934 53205420 61726f74 3a3a6567     49aa T Storage::
   29370:	79706f63 61686328 6f632072 2a74736e     copy(char const*
   29380:	6863202c 63207261 74736e6f 75202c2a     , char const*, u
   29390:	6769736e 2064656e 2a746e69 6e75202c     nsigned int*, un
   293a0:	6e676973 69206465 2c2a746e 736e7520     signed int*, uns
   293b0:	656e6769 6e692064 0a292a74 31303030     igned int*).0001
   293c0:	61396134 53205420 61726f74 3a3a6567     4a9a T Storage::
   293d0:	64616572 61686328 6f632072 2a74736e     read(char const*
   293e0:	6f76202c 2c2a6469 736e7520 656e6769     , void*, unsigne
   293f0:	6e692064 75202c74 6769736e 2064656e     d int, unsigned 
   29400:	29746e69 3030300a 64613431 20542065     int).00014ade T 
   29410:	726f7453 3a656761 6972773a 63286574     Storage::write(c
   29420:	20726168 736e6f63 202c2a74 64696f76     har const*, void
   29430:	75202c2a 6769736e 2064656e 2c746e69     *, unsigned int,
   29440:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   29450:	34313030 20323262 74532054 6761726f     0014b22 T Storag
   29460:	613a3a65 6e657070 68632864 63207261     e::append(char c
   29470:	74736e6f 76202c2a 2064696f 736e6f63     onst*, void cons
   29480:	202c2a74 69736e75 64656e67 746e6920     t*, unsigned int
   29490:	6e75202c 6e676973 69206465 0a29746e     , unsigned int).
   294a0:	31303030 34383937 55205420 44747261     00017984 T UartD
   294b0:	3a3a7665 42746573 52647561 28657461     ev::setBaudRate(
   294c0:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   294d0:	39373130 54203862 72615520 76654474     0179b8 T UartDev
   294e0:	61683a3a 656c646e 65746e49 70757272     ::handleInterrup
   294f0:	0a292874 31303030 30616137 55205420     t().00017aa0 T U
   29500:	44747261 3a3a7665 74696e69 736e7528     artDev::init(uns
   29510:	656e6769 6e692064 75202c74 6769736e     igned int, unsig
   29520:	2064656e 2c746e69 746e6920 6e69202c     ned int, int, in
   29530:	300a2974 37313030 20386638 61552054     t).000178f8 T Ua
   29540:	65447472 663a3a76 6873756c 300a2928     rtDev::flush().0
   29550:	37313030 20383139 61552054 65447472     0017918 T UartDe
   29560:	673a3a76 68437465 63287261 2a726168     v::getChar(char*
   29570:	6e75202c 6e676973 69206465 0a29746e     , unsigned int).
   29580:	31303030 34373837 55205420 44747261     00017874 T UartD
   29590:	3a3a7665 43747570 28726168 72616863     ev::putChar(char
   295a0:	6e75202c 6e676973 69206465 0a29746e     , unsigned int).
   295b0:	31303030 38376137 55205420 44747261     00017a78 T UartD
   295c0:	3a3a7665 74726155 28766544 69736e75     ev::UartDev(unsi
   295d0:	64656e67 746e6920 300a292a 37313030     gned int*).00017
   295e0:	20383761 61552054 65447472 553a3a76     a78 T UartDev::U
   295f0:	44747261 75287665 6769736e 2064656e     artDev(unsigned 
   29600:	2a746e69 30300a29 35373130 54206165     int*).000175ea T
   29610:	43324920 7361425f 723a3a65 52646165      I2C_Base::readR
   29620:	73696765 73726574 736e7528 656e6769     egisters(unsigne
   29630:	68632064 202c7261 69736e75 64656e67     d char, unsigned
   29640:	61686320 202c2a72 69736e75 64656e67      char*, unsigned
   29650:	6e6f6c20 300a2967 37313030 20346135      long).000175a4 
   29660:	32492054 61425f43 3a3a6573 64616572     T I2C_Base::read
   29670:	69676552 72657473 6e752873 6e676973     Registers(unsign
   29680:	63206465 2c726168 736e7520 656e6769     ed char, unsigne
   29690:	68632064 202c7261 69736e75 64656e67     d char, unsigned
   296a0:	61686320 202c2a72 69736e75 64656e67      char*, unsigned
   296b0:	6e6f6c20 300a2967 37313030 20656235      long).000175be 
   296c0:	32492054 61425f43 3a3a6573 74697277     T I2C_Base::writ
   296d0:	67655265 65747369 75287372 6769736e     eRegisters(unsig
   296e0:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   296f0:	63206465 2a726168 6e75202c 6e676973     ed char*, unsign
   29700:	6c206465 29676e6f 3030300a 33383731     ed long).0001783
   29710:	20542063 5f433249 65736142 61683a3a     c T I2C_Base::ha
   29720:	656c646e 65746e49 70757272 0a292874     ndleInterrupt().
   29730:	31303030 32303637 49205420 425f4332     00017602 T I2C_B
   29740:	3a657361 6568633a 65446b63 65636976     ase::checkDevice
   29750:	70736552 65736e6f 736e7528 656e6769     Response(unsigne
   29760:	68632064 0a297261 31303030 30373537     d char).00017570
   29770:	49205420 425f4332 3a657361 6972773a      T I2C_Base::wri
   29780:	65526574 74736967 68547265 65526e65     teRegisterThenRe
   29790:	75286461 6769736e 2064656e 72616863     ad(unsigned char
   297a0:	6e75202c 6e676973 63206465 2a726168     , unsigned char*
   297b0:	6e75202c 6e676973 6c206465 2c676e6f     , unsigned long,
   297c0:	736e7520 656e6769 68632064 2c2a7261      unsigned char*,
   297d0:	736e7520 656e6769 6f6c2064 0a29676e      unsigned long).
   297e0:	31303030 34373637 49205420 425f4332     00017674 T I2C_B
   297f0:	3a657361 696e693a 6e752874 6e676973     ase::init(unsign
   29800:	6c206465 2c676e6f 736e7520 656e6769     ed long, unsigne
   29810:	6f6c2064 0a29676e 31303030 63373537     d long).0001757c
   29820:	49205420 425f4332 3a657361 6165723a      T I2C_Base::rea
   29830:	67655264 736e7528 656e6769 68632064     dReg(unsigned ch
   29840:	202c7261 69736e75 64656e67 61686320     ar, unsigned cha
   29850:	300a2972 37313030 20383634 32492054     r).00017468 T I2
   29860:	61425f43 3a3a6573 6e617274 72656673     C_Base::transfer
   29870:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   29880:	69736e75 64656e67 61686320 202c2a72     unsigned char*, 
   29890:	69736e75 64656e67 6e6f6c20 75202c67     unsigned long, u
   298a0:	6769736e 2064656e 72616863 75202c2a     nsigned char*, u
   298b0:	6769736e 2064656e 676e6f6c 30300a29     nsigned long).00
   298c0:	35373130 54203264 43324920 7361425f     0175d2 T I2C_Bas
   298d0:	773a3a65 65746972 28676552 69736e75     e::writeReg(unsi
   298e0:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   298f0:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   29900:	63206465 29726168 3030300a 31363731     ed char).0001761
   29910:	20542038 5f433249 65736142 32493a3a     8 T I2C_Base::I2
   29920:	61425f43 4c286573 495f4350 545f4332     C_Base(LPC_I2C_T
   29930:	44657079 292a6665 3030300a 31363731     ypeDef*).0001761
   29940:	20542038 5f433249 65736142 32493a3a     8 T I2C_Base::I2
   29950:	61425f43 4c286573 495f4350 545f4332     C_Base(LPC_I2C_T
   29960:	44657079 292a6665 3030300a 62643431     ypeDef*).00014db
   29970:	20542036 5f433249 706d6554 65673a3a     6 T I2C_Temp::ge
   29980:	6c654374 73756973 300a2928 34313030     tCelsius().00014
   29990:	20386564 32492054 65545f43 3a3a706d     de8 T I2C_Temp::
   299a0:	46746567 6e657261 74696568 300a2928     getFarenheit().0
   299b0:	34313030 20343964 32492054 65545f43     0014d94 T I2C_Te
   299c0:	3a3a706d 74696e69 300a2928 34313030     mp::init().00014
   299d0:	20633764 77532054 68637469 3a3a7365     d7c T Switches::
   299e0:	53746567 63746977 6c615668 28736575     getSwitchValues(
   299f0:	30300a29 64343130 54203637 69775320     ).00014d76 T Swi
   29a00:	65686374 693a3a73 2874696e 30300a29     tches::init().00
   29a10:	62343130 54203063 5f524920 736e6553     014bc0 T IR_Sens
   29a20:	3a3a726f 726f7473 43724965 2865646f     or::storeIrCode(
   29a30:	69736e75 64656e67 6e6f6c20 300a2967     unsigned long).0
   29a40:	34313030 20636462 52492054 6e65535f     0014bdc T IR_Sen
   29a50:	3a726f73 6365643a 4965646f 646f4372     sor::decodeIrCod
   29a60:	0a292865 31303030 30346334 49205420     e().00014c40 T I
   29a70:	65535f52 726f736e 6e693a3a 29287469     R_Sensor::init()
   29a80:	3030300a 61613631 20542063 3a727473     .00016aac T str:
   29a90:	6765623a 57736e69 28687469 72616863     :beginsWith(char
   29aa0:	6e6f6320 292a7473 6e6f6320 300a7473      const*) const.0
   29ab0:	36313030 20303739 74732054 673a3a72     0016970 T str::g
   29ac0:	61437465 69636170 29287974 6e6f6320     etCapacity() con
   29ad0:	300a7473 36313030 20363961 74732054     st.00016a96 T st
   29ae0:	663a3a72 74737269 65646e49 28664f78     r::firstIndexOf(
   29af0:	72616863 6e6f6320 292a7473 6e6f6320     char const*) con
   29b00:	300a7473 36313030 20383861 74732054     st.00016a88 T st
   29b10:	633a3a72 61746e6f 49736e69 726f6e67     r::containsIgnor
   29b20:	73614365 68632865 63207261 74736e6f     eCase(char const
   29b30:	6320292a 74736e6f 3030300a 66393631     *) const.000169f
   29b40:	20542038 3a727473 6d6f633a 65726170     8 T str::compare
   29b50:	67496f54 65726f6e 65736143 61686328     ToIgnoreCase(cha
   29b60:	6f632072 2a74736e 6f632029 0a74736e     r const*) const.
   29b70:	31303030 61646136 73205420 3a3a7274     00016ada T str::
   29b80:	69676562 6957736e 67496874 65726f6e     beginsWithIgnore
   29b90:	65736143 61686328 6f632072 2a74736e     Case(char const*
   29ba0:	6f632029 0a74736e 31303030 38306136     ) const.00016a08
   29bb0:	73205420 3a3a7274 73726966 646e4974      T str::firstInd
   29bc0:	664f7865 6f6e6749 61436572 63286573     exOfIgnoreCase(c
   29bd0:	20726168 736e6f63 20292a74 736e6f63     har const*) cons
   29be0:	30300a74 62363130 54203830 72747320     t.00016b08 T str
   29bf0:	65623a3a 736e6967 68746957 6c6f6857     ::beginsWithWhol
   29c00:	726f5765 6e674964 4365726f 28657361     eWordIgnoreCase(
   29c10:	72616863 6e6f6320 2c2a7473 61686320     char const*, cha
   29c20:	63202972 74736e6f 3030300a 36393631     r) const.0001696
   29c30:	20542061 3a727473 7465673a 286e654c     a T str::getLen(
   29c40:	6f632029 0a74736e 31303030 34653936     ) const.000169e4
   29c50:	73205420 3a3a7274 706d6f63 54657261      T str::compareT
   29c60:	6863286f 63207261 74736e6f 6320292a     o(char const*) c
   29c70:	74736e6f 3030300a 38633631 20542065     onst.00016c8e T 
   29c80:	3a727473 65706f3a 6f746172 28292872     str::operator()(
   29c90:	6f632029 0a74736e 31303030 32396336     ) const.00016c92
   29ca0:	73205420 3a3a7274 7265706f 726f7461      T str::operator
   29cb0:	746e6920 63202928 74736e6f 3030300a      int() const.000
   29cc0:	38633631 20542061 3a727473 65706f3a     16c8a T str::ope
   29cd0:	6f746172 283d3d72 72616863 6e6f6320     rator==(char con
   29ce0:	292a7473 6e6f6320 300a7473 63313030     st*) const.0001c
   29cf0:	20346637 74732054 743a3a64 5f657079     7f4 T std::type_
   29d00:	6f666e69 5f5f3a3a 705f7369 746e696f     info::__is_point
   29d10:	705f7265 63202928 74736e6f 3030300a     er_p() const.000
   29d20:	66376331 20542034 3a647473 7079743a     1c7f4 T std::typ
   29d30:	6e695f65 3a3a6f66 73695f5f 6e75665f     e_info::__is_fun
   29d40:	6f697463 28705f6e 6f632029 0a74736e     ction_p() const.
   29d50:	31303030 38663763 73205420 3a3a6474     0001c7f8 T std::
   29d60:	65707974 666e695f 6f3a3a6f 61726570     type_info::opera
   29d70:	3d726f74 7473283d 743a3a64 5f657079     tor==(std::type_
   29d80:	6f666e69 6e6f6320 29267473 6e6f6320     info const&) con
   29d90:	300a7473 63313030 20326637 74732054     st.0001c7f2 T st
   29da0:	743a3a64 5f657079 6f666e69 747e3a3a     d::type_info::~t
   29db0:	5f657079 6f666e69 300a2928 63313030     ype_info().0001c
   29dc0:	20326637 74732054 743a3a64 5f657079     7f2 T std::type_
   29dd0:	6f666e69 747e3a3a 5f657079 6f666e69     info::~type_info
   29de0:	300a2928 63313030 20306263 74732054     ().0001ccb0 T st
   29df0:	673a3a64 745f7465 696d7265 6574616e     d::get_terminate
   29e00:	300a2928 63313030 20306363 74732054     ().0001ccc0 T st
   29e10:	743a3a64 696d7265 6574616e 300a2928     d::terminate().0
   29e20:	64313030 20633839 62612054 0a74726f     001d98c T abort.
   29e30:	31303030 38333038 61205420 5f306364     00018038 T adc0_
   29e40:	5f746567 64616572 0a676e69 31303030     get_reading.0001
   29e50:	34636637 61205420 5f306364 74696e69     7fc4 T adc0_init
   29e60:	3030300a 64363132 20542030 74637361     .000216d0 T asct
   29e70:	0a656d69 32303030 63663631 61205420     ime.000216fc T a
   29e80:	69746373 725f656d 3030300a 39396431     sctime_r.0001d99
   29e90:	20542061 696f7461 3030300a 34613531     a T atoi.00015a4
   29ea0:	20542063 696c5f63 635f7473 74616572     c T c_list_creat
   29eb0:	30300a65 61353130 54206163 6c5f6320     e.00015aca T c_l
   29ec0:	5f747369 646e6966 6d6c655f 3030300a     ist_find_elm.000
   29ed0:	66613531 20542036 696c5f63 665f7473     15af6 T c_list_f
   29ee0:	655f726f 5f686361 0a6d6c65 31303030     or_each_elm.0001
   29ef0:	65396135 63205420 73696c5f 65675f74     5a9e T c_list_ge
   29f00:	6c655f74 74615f6d 3030300a 36613531     t_elm_at.00015a6
   29f10:	20542036 696c5f63 695f7473 7265736e     6 T c_list_inser
   29f20:	6c655f74 6e655f6d 30300a64 61353130     t_elm_end.00015a
   29f30:	54203036 6c5f6320 5f747369 65646f6e     60 T c_list_node
   29f40:	756f635f 300a746e 64313030 20346139     _count.0001d9a4 
   29f50:	61632054 636f6c6c 3030300a 31303231     T calloc.0001201
   29f60:	20542030 73756c63 65733274 300a7463     0 T clust2sect.0
   29f70:	64313030 20346239 74632054 0a656d69     001d9b4 T ctime.
   29f80:	31303030 61663836 64205420 79616c65     000168fa T delay
   29f90:	0a736d5f 31303030 30643836 64205420     _ms.000168d0 T d
   29fa0:	79616c65 0a73755f 31303030 34373334     elay_us.00014374
   29fb0:	64205420 5f6b7369 74696e69 696c6169      T disk_initiali
   29fc0:	300a657a 34313030 20613134 69642054     ze.0001441a T di
   29fd0:	695f6b73 6c74636f 3030300a 61333431     sk_ioctl.000143a
   29fe0:	20542061 6b736964 6165725f 30300a64     a T disk_read.00
   29ff0:	33343130 54206139 73696420 74735f6b     01439a T disk_st
   2a000:	73757461 3030300a 65333431 20542032     atus.000143e2 T 
   2a010:	6b736964 6972775f 300a6574 31323030     disk_write.00021
   2a020:	20383637 69642054 30300a76 32393130     768 T div.000192
   2a030:	54203430 61546520 65476b73 61745374     04 T eTaskGetSta
   2a040:	300a6574 37313030 20383266 69652054     te.00017f28 T ei
   2a050:	5f33746e 62616e65 705f656c 3074726f     nt3_enable_port0
   2a060:	3030300a 36303331 20542030 6c635f66     .00013060 T f_cl
   2a070:	0a65736f 31303030 36623233 66205420     ose.000132b6 T f
   2a080:	7465675f 65657266 3030300a 38303331     _getfree.0001308
   2a090:	20542034 736c5f66 0a6b6565 31303030     4 T f_lseek.0001
   2a0a0:	63333433 66205420 646b6d5f 300a7269     343c T f_mkdir.0
   2a0b0:	33313030 20636136 5f662054 73666b6d     00136ac T f_mkfs
   2a0c0:	3030300a 31623231 20542030 6f6d5f66     .00012b10 T f_mo
   2a0d0:	0a746e75 31303030 63386232 66205420     unt.00012b8c T f
   2a0e0:	65706f5f 30300a6e 31333130 54203264     _open.000131d2 T
   2a0f0:	6f5f6620 646e6570 300a7269 32313030      f_opendir.00012
   2a100:	20616263 5f662054 64616572 3030300a     cba T f_read.000
   2a110:	35323331 20542038 65725f66 69646461     13258 T f_readdi
   2a120:	30300a72 35333130 54206538 725f6620     r.0001358e T f_r
   2a130:	6d616e65 30300a65 66323130 54203664     ename.00012fd6 T
   2a140:	735f6620 0a636e79 31303030 65373333      f_sync.0001337e
   2a150:	66205420 6c6e755f 0a6b6e69 31303030      T f_unlink.0001
   2a160:	61326532 66205420 6972775f 300a6574     2e2a T f_write.0
   2a170:	64313030 20343761 63662054 65736f6c     001da74 T fclose
   2a180:	3030300a 66623331 20542063 635f6666     .00013bfc T ff_c
   2a190:	65766e6f 300a7472 33313030 20306162     onvert.00013ba0 
   2a1a0:	66662054 6572635f 6e79735f 6a626f63     T ff_cre_syncobj
   2a1b0:	3030300a 62623331 20542034 645f6666     .00013bb4 T ff_d
   2a1c0:	735f6c65 6f636e79 300a6a62 33313030     el_syncobj.00013
   2a1d0:	20656462 66662054 6c65725f 6172675f     bde T ff_rel_gra
   2a1e0:	300a746e 33313030 20386262 66662054     nt.00013bb8 T ff
   2a1f0:	7165725f 6172675f 300a746e 33313030     _req_grant.00013
   2a200:	20383363 66662054 6f74775f 65707075     c38 T ff_wtouppe
   2a210:	30300a72 62643130 54203865 6c666620     r.0001dbe8 T ffl
   2a220:	0a687375 31303030 34366364 66205420     ush.0001dc64 T f
   2a230:	63746567 3030300a 33646431 20542038     getc.0001dd38 T 
   2a240:	74656766 30300a73 39343130 54206332     fgets.0001492c T
   2a250:	616c6620 635f6873 5f706968 73617265      flash_chip_eras
   2a260:	30300a65 38343130 54203031 616c6620     e.00014810 T fla
   2a270:	675f6873 705f7465 5f656761 6e756f63     sh_get_page_coun
   2a280:	30300a74 38343130 54203033 616c6620     t.00014830 T fla
   2a290:	675f6873 705f7465 5f656761 657a6973     sh_get_page_size
   2a2a0:	3030300a 64383431 20542038 73616c66     .000148d8 T flas
   2a2b0:	65675f68 61705f74 775f6567 65746972     h_get_page_write
   2a2c0:	756f635f 300a746e 34313030 20383336     _count.00014638 
   2a2d0:	6c662054 5f687361 74696e69 696c6169     T flash_initiali
   2a2e0:	300a657a 34313030 20633637 6c662054     ze.0001476c T fl
   2a2f0:	5f687361 74636f69 30300a6c 37343130     ash_ioctl.000147
   2a300:	54203865 616c6620 725f6873 5f646165     e8 T flash_read_
   2a310:	6d726570 6e656e61 64695f74 3030300a     permanent_id.000
   2a320:	64363431 20542030 73616c66 65725f68     146d0 T flash_re
   2a330:	735f6461 6f746365 300a7372 34313030     ad_sectors.00014
   2a340:	20633338 6c662054 5f687361 70707573     83c T flash_supp
   2a350:	7374726f 74656d5f 74616461 30300a61     orts_metadata.00
   2a360:	37343130 54203461 616c6620 775f6873     0147a4 T flash_w
   2a370:	65746972 7265705f 656e616d 695f746e     rite_permanent_i
   2a380:	30300a64 37343130 54203032 616c6620     d.00014720 T fla
   2a390:	775f6873 65746972 6365735f 73726f74     sh_write_sectors
   2a3a0:	3030300a 32666431 20542038 65706f66     .0001df28 T fope
   2a3b0:	30300a6e 34653130 54203862 65726620     n.0001e4b8 T fre
   2a3c0:	30300a65 31653130 54206336 72776620     e.0001e16c T fwr
   2a3d0:	0a657469 31303030 30303030 67205420     ite.00010000 T g
   2a3e0:	6e66705f 74636556 0a73726f 31303030     _pfnVectors.0001
   2a3f0:	36323032 67205420 665f7465 300a7461     2026 T get_fat.0
   2a400:	34313030 20383539 65672054 61665f74     0014958 T get_fa
   2a410:	6d697474 30300a65 62323230 54203864     ttime.00022bd8 T
   2a420:	746d6720 5f656d69 30300a72 38663130      gmtime_r.0001f8
   2a430:	54203863 72706920 66746e69 3030300a     c8 T iprintf.000
   2a440:	65383631 20542063 665f7369 72656572     168ec T is_freer
   2a450:	5f736f74 6e6e7572 0a676e69 31303030     tos_running.0001
   2a460:	38336366 69205420 6e616373 30300a66     fc38 T iscanf.00
   2a470:	31303130 54203834 72736920 6665645f     010148 T isr_def
   2a480:	746c7561 6e61685f 72656c64 3030300a     ault_handler.000
   2a490:	32363031 20542030 5f727369 64726168     10620 T isr_hard
   2a4a0:	7561665f 685f746c 6c646e61 300a7265     _fault_handler.0
   2a4b0:	30313030 20303136 73692054 65725f72     0010610 T isr_re
   2a4c0:	74736967 300a7265 30313030 20343931     gister.00010194 
   2a4d0:	73692054 65725f72 0a746573 31303030     T isr_reset.0001
   2a4e0:	30643165 6c205420 6c61636f 656d6974     e1d0 T localtime
   2a4f0:	3030300a 66316531 20542034 61636f6c     .0001e1f4 T loca
   2a500:	6d69746c 0a725f65 31303030 38633436     ltime_r.000164c8
   2a510:	6c205420 6567676f 65675f72 6c625f74      T logger_get_bl
   2a520:	656b636f 61635f64 635f6c6c 746e756f     ocked_call_count
   2a530:	3030300a 64343631 20542034 67676f6c     .000164d4 T logg
   2a540:	675f7265 685f7465 65686769 665f7473     er_get_highest_f
   2a550:	5f656c69 74697277 69745f65 6d5f656d     ile_write_time_m
   2a560:	30300a73 34363130 54203462 676f6c20     s.000164b4 T log
   2a570:	5f726567 5f746567 67676f6c 635f6465     ger_get_logged_c
   2a580:	5f6c6c61 6e756f63 30300a74 34363130     all_count.000164
   2a590:	54203065 676f6c20 5f726567 5f746567     e0 T logger_get_
   2a5a0:	5f6d756e 66667562 5f737265 65746177     num_buffers_wate
   2a5b0:	72616d72 30300a6b 34363130 54206365     rmark.000164ec T
   2a5c0:	676f6c20 5f726567 74696e69 3030300a      logger_init.000
   2a5d0:	64353631 20542034 67676f6c 6c5f7265     165d4 T logger_l
   2a5e0:	300a676f 36313030 20633037 6f6c2054     og.0001670c T lo
   2a5f0:	72656767 676f6c5f 7761725f 3030300a     gger_log_raw.000
   2a600:	38343631 20542030 67676f6c 735f7265     16480 T logger_s
   2a610:	5f646e65 73756c66 65725f68 73657571     end_flush_reques
   2a620:	30300a74 35363130 54203862 676f6c20     t.000165b8 T log
   2a630:	5f726567 5f746573 6e697270 300a6674     ger_set_printf.0
   2a640:	30313030 20303539 706c2054 63705f63     0010950 T lpc_pc
   2a650:	300a6b6c 30313030 20633139 706c2054     lk.0001091c T lp
   2a660:	63705f63 0a706e6f 31303030 38343430     c_pconp.00010448
   2a670:	6c205420 735f6370 735f7379 70757465      T lpc_sys_setup
   2a680:	7379735f 5f6d6574 656d6974 30300a72     _system_timer.00
   2a690:	34383130 54203061 63706c20 6d69745f     0184a0 T lpc_tim
   2a6a0:	655f7265 6c62616e 30300a65 35633130     er_enable.0001c5
   2a6b0:	54203036 69616d20 30300a6e 61653130     60 T main.0001ea
   2a6c0:	54203833 6c616d20 666e696c 30300a6f     38 T mallinfo.00
   2a6d0:	34653130 54203861 6c616d20 0a636f6c     01e4a8 T malloc.
   2a6e0:	31303030 63653465 6d205420 68636d65     0001e4ec T memch
   2a6f0:	30300a72 35653130 54203830 6d656d20     r.0001e508 T mem
   2a700:	0a706d63 31303030 36323565 6d205420     cmp.0001e526 T m
   2a710:	70636d65 30300a79 35653130 54206333     emcpy.0001e53c T
   2a720:	6d656d20 65766f6d 3030300a 37356531      memmove.0001e57
   2a730:	20542030 736d656d 300a7465 31313030     0 T memset.00011
   2a740:	20636334 656d2054 665f6873 5f6d726f     4cc T mesh_form_
   2a750:	0a746b70 31303030 30636131 6d205420     pkt.00011ac0 T m
   2a760:	5f687365 5f746567 5f78616d 656d6974     esh_get_max_time
   2a770:	5f74756f 6f666562 705f6572 656b6361     out_before_packe
   2a780:	61665f74 0a736c69 31303030 30623431     t_fails.000114b0
   2a790:	6d205420 5f687365 5f746567 65646f6e      T mesh_get_node
   2a7a0:	6464615f 73736572 3030300a 61373131     _address.000117a
   2a7b0:	20542030 6873656d 7465675f 6d756e5f     0 T mesh_get_num
   2a7c0:	756f725f 676e6974 746e655f 73656972     _routing_entries
   2a7d0:	3030300a 38613131 20542063 6873656d     .00011a8c T mesh
   2a7e0:	7465675f 646e705f 746b705f 756f635f     _get_pnd_pkt_cou
   2a7f0:	300a746e 31313030 20343737 656d2054     nt.00011774 T me
   2a800:	675f6873 725f7465 6974756f 655f676e     sh_get_routing_e
   2a810:	7972746e 3030300a 65613131 20542034     ntry.00011ae4 T 
   2a820:	6873656d 7465675f 6174735f 300a7374     mesh_get_stats.0
   2a830:	31313030 20633136 656d2054 695f6873     001161c T mesh_i
   2a840:	0a74696e 31303030 63313731 6d205420     nit.0001171c T m
   2a850:	5f687365 646e6573 3030300a 63353131     esh_send.000115c
   2a860:	20542034 6873656d 6e65735f 6f665f64     4 T mesh_send_fo
   2a870:	64656d72 746b705f 3030300a 62373131     rmed_pkt.000117b
   2a880:	20542063 6873656d 7265735f 65636976     c T mesh_service
   2a890:	3030300a 39343131 20542038 6873656d     .00011498 T mesh
   2a8a0:	7465735f 646f6e5f 64615f65 73657264     _set_node_addres
   2a8b0:	30300a73 34313130 54206362 73656d20     s.000114bc T mes
   2a8c0:	65735f68 65725f74 5f797274 6e756f63     h_set_retry_coun
   2a8d0:	30300a74 37653130 54203034 746b6d20     t.0001e740 T mkt
   2a8e0:	0a656d69 31303030 34636466 6e205420     ime.0001fdc4 T n
   2a8f0:	0a666e61 31303030 63636130 6e205420     anf.00010acc T n
   2a900:	6964726f 6c635f63 5f726165 5f6c6c61     ordic_clear_all_
   2a910:	72746e69 616c665f 300a7367 30313030     intr_flags.00010
   2a920:	20633962 6f6e2054 63696472 656c635f     b9c T nordic_cle
   2a930:	705f7261 656b6361 76615f74 616c6961     ar_packet_availa
   2a940:	5f656c62 67616c66 3030300a 32623031     ble_flag.00010b2
   2a950:	20542063 64726f6e 635f6369 7261656c     c T nordic_clear
   2a960:	6361705f 5f74656b 746e6573 616c665f     _packet_sent_fla
   2a970:	30300a67 62303130 54203862 726f6e20     g.00010bb8 T nor
   2a980:	5f636964 73756c66 78725f68 6669665f     dic_flush_rx_fif
   2a990:	30300a6f 62303130 54203433 726f6e20     o.00010b34 T nor
   2a9a0:	5f636964 73756c66 78745f68 6669665f     dic_flush_tx_fif
   2a9b0:	30300a6f 64303130 54206334 726f6e20     o.00010d4c T nor
   2a9c0:	5f636964 74696e69 3030300a 38623031     dic_init.00010b8
   2a9d0:	20542063 64726f6e 695f6369 61705f73     c T nordic_is_pa
   2a9e0:	74656b63 6176615f 62616c69 300a656c     cket_available.0
   2a9f0:	30313030 20656261 6f6e2054 63696472     0010abe T nordic
   2aa00:	5f73695f 665f7874 5f6f6669 74706d65     _is_tx_fifo_empt
   2aa10:	30300a79 62303130 54203034 726f6e20     y.00010b40 T nor
   2aa20:	5f636964 65646f6d 65735f31 735f646e     dic_mode1_send_s
   2aa30:	6c676e69 61705f65 74656b63 3030300a     ingle_packet.000
   2aa40:	35633031 20542032 64726f6e 705f6369     10c52 T nordic_p
   2aa50:	7265776f 776f645f 30300a6e 63303130     ower_down.00010c
   2aa60:	54206133 726f6e20 5f636964 65776f70     3a T nordic_powe
   2aa70:	70755f72 3030300a 64613031 20542034     r_up.00010ad4 T 
   2aa80:	64726f6e 715f6369 65756575 5f78745f     nordic_queue_tx_
   2aa90:	6f666966 3030300a 61623031 20542034     fifo.00010ba4 T 
   2aaa0:	64726f6e 725f6369 5f646165 665f7872     nordic_read_rx_f
   2aab0:	0a6f6669 31303030 38666130 6e205420     ifo.00010af8 T n
   2aac0:	6964726f 78725f63 5f6f745f 6e617453     ordic_rx_to_Stan
   2aad0:	0a317962 31303030 63316430 6e205420     by1.00010d1c T n
   2aae0:	6964726f 65735f63 64615f74 775f7264     ordic_set_addr_w
   2aaf0:	68746469 3030300a 38633031 20542063     idth.00010c8c T 
   2ab00:	64726f6e 735f6369 615f7465 645f7269     nordic_set_air_d
   2ab10:	5f617461 65746172 3030300a 64633031     ata_rate.00010cd
   2ab20:	20542063 64726f6e 735f6369 615f7465     c T nordic_set_a
   2ab30:	5f6f7475 6e617274 74696d73 74706f5f     uto_transmit_opt
   2ab40:	736e6f69 3030300a 36633031 20542038     ions.00010c68 T 
   2ab50:	64726f6e 735f6369 635f7465 6e6e6168     nordic_set_chann
   2ab60:	300a6c65 30313030 20323063 6f6e2054     el.00010c02 T no
   2ab70:	63696472 7465735f 6372635f 3030300a     rdic_set_crc.000
   2ab80:	63623031 20542034 64726f6e 735f6369     10bc4 T nordic_s
   2ab90:	695f7465 5f72746e 6e676973 0a736c61     et_intr_signals.
   2aba0:	31303030 38306430 6e205420 6964726f     00010d08 T nordi
   2abb0:	65735f63 61705f74 616f6c79 6f665f64     c_set_payload_fo
   2abc0:	69705f72 300a6570 30313030 20386263     r_pipe.00010cb8 
   2abd0:	6f6e2054 63696472 7465735f 776f705f     T nordic_set_pow
   2abe0:	6c5f7265 6c657665 3030300a 33643031     er_level.00010d3
   2abf0:	20542065 64726f6e 735f6369 725f7465     e T nordic_set_r
   2ac00:	69705f78 5f306570 72646461 3030300a     x_pipe0_addr.000
   2ac10:	33643031 20542032 64726f6e 735f6369     10d32 T nordic_s
   2ac20:	745f7465 64615f78 73657264 30300a73     et_tx_address.00
   2ac30:	62303130 54203830 726f6e20 5f636964     010b08 T nordic_
   2ac40:	6e617473 31796264 5f6f745f 300a7872     standby1_to_rx.0
   2ac50:	30313030 20306561 6f6e2054 63696472     0010ae0 T nordic
   2ac60:	6174735f 7962646e 6f745f31 5f78745f     _standby1_to_tx_
   2ac70:	65646f6d 30300a31 63333130 54203465     mode1.00013ce4 T
   2ac80:	776f7020 6f5f7265 300a6666 66313030      power_off.0001f
   2ac90:	20386338 72702054 66746e69 3030300a     8c8 T printf.000
   2aca0:	34313231 20542063 5f747570 0a746166     1214c T put_fat.
   2acb0:	31303030 30623966 70205420 0a737475     0001f9b0 T puts.
   2acc0:	31303030 30633838 70205420 726f5076     000188c0 T pvPor
   2acd0:	6c614d74 0a636f6c 31303030 38396139     tMalloc.00019a98
   2ace0:	70205420 73615476 636e496b 656d6572      T pvTaskIncreme
   2acf0:	754d746e 48786574 43646c65 746e756f     ntMutexHeldCount
   2ad00:	3030300a 65363831 20542038 6f507870     .000186e8 T pxPo
   2ad10:	6e497472 61697469 6573696c 63617453     rtInitialiseStac
   2ad20:	30300a6b 65663130 54206331 69617220     k.0001fe1c T rai
   2ad30:	300a6573 66313030 20303161 61722054     se.0001fa10 T ra
   2ad40:	300a646e 33313030 20383064 63722054     nd.00013d08 T rc
   2ad50:	645f7276 62617461 6b636f6c 3030300a     vr_datablock.000
   2ad60:	38616631 20542034 6c616572 0a636f6c     1fa84 T realloc.
   2ad70:	31303030 30336537 72205420 675f6374     00017e30 T rtc_g
   2ad80:	645f7465 5f657461 656d6974 7274735f     et_date_time_str
   2ad90:	3030300a 62633731 20542030 5f637472     .00017cb0 T rtc_
   2ada0:	74746567 0a656d69 31303030 30366437     gettime.00017d60
   2adb0:	72205420 695f6374 0a74696e 31303030      T rtc_init.0001
   2adc0:	38666337 72205420 735f6374 69747465     7cf8 T rtc_setti
   2add0:	300a656d 38313030 20383338 74722054     me.00018838 T rt
   2ade0:	6f6e5f73 75665f74 745f6c6c 65636172     s_not_full_trace
   2adf0:	7465675f 3030300a 32383831 20542034     _get.00018824 T 
   2ae00:	5f737472 5f746f6e 6c6c7566 6172745f     rts_not_full_tra
   2ae10:	695f6563 0a74696e 31303030 63343838     ce_init.0001884c
   2ae20:	72205420 6e5f7374 665f746f 5f6c6c75      T rts_not_full_
   2ae30:	63617274 65725f65 0a746573 31303030     trace_reset.0001
   2ae40:	38336366 73205420 666e6163 3030300a     fc38 T scanf.000
   2ae50:	39653331 20542030 695f6473 6974696e     13e90 T sd_initi
   2ae60:	7a696c61 30300a65 31343130 54203835     alize.00014158 T
   2ae70:	5f647320 74636f69 30300a6c 30343130      sd_ioctl.000140
   2ae80:	54206330 5f647320 64616572 3030300a     0c T sd_read.000
   2ae90:	66663331 20542063 735f6473 75746174     13ffc T sd_statu
   2aea0:	30300a73 65333130 54206336 5f647320     s.00013e6c T sd_
   2aeb0:	61647075 635f6574 5f647261 74617473     update_card_stat
   2aec0:	300a7375 34313030 20346130 64732054     us.000140a4 T sd
   2aed0:	6972775f 300a6574 33313030 20306564     _write.00013de0 
   2aee0:	65732054 635f646e 300a646d 66313030     T send_cmd.0001f
   2aef0:	20383663 65732054 75627674 30300a66     c68 T setvbuf.00
   2af00:	65663130 54206362 70697320 746e6972     01febc T siprint
   2af10:	30300a66 66663130 54203430 73697320     f.0001ff04 T sis
   2af20:	666e6163 3030300a 35656631 20542034     canf.0001fe54 T 
   2af30:	70696e73 746e6972 30300a66 65663130     sniprintf.0001fe
   2af40:	54203435 706e7320 746e6972 30300a66     54 T snprintf.00
   2af50:	34383130 54206332 69707320 6f6c5f31     01842c T spi1_lo
   2af60:	300a6b63 38313030 20633534 70732054     ck.0001845c T sp
   2af70:	755f3169 636f6c6e 30300a6b 65663130     i1_unlock.0001fe
   2af80:	54206362 72707320 66746e69 3030300a     bc T sprintf.000
   2af90:	63396631 20542030 6e617273 30300a64     1f9c0 T srand.00
   2afa0:	66663130 54203430 63737320 0a666e61     01ff04 T sscanf.
   2afb0:	31303030 30353338 73205420 5f317073     00018350 T ssp1_
   2afc0:	5f616d64 74696e69 3030300a 36333831     dma_init.0001836
   2afd0:	20542063 31707373 616d645f 6172745f     c T ssp1_dma_tra
   2afe0:	6566736e 6c625f72 0a6b636f 31303030     nsfer_block.0001
   2aff0:	32656666 73205420 61637274 6d636573     ffe2 T strcasecm
   2b000:	30300a70 30303230 54206531 72747320     p.0002001e T str
   2b010:	0a746163 32303030 63333030 73205420     cat.0002003c T s
   2b020:	68637274 30300a72 30303230 54203835     trchr.00020058 T
   2b030:	72747320 0a706d63 32303030 63363030      strcmp.0002006c
   2b040:	73205420 70637274 30300a79 30303230      T strcpy.000200
   2b050:	54206337 72747320 0a6e656c 32303030     7c T strlen.0002
   2b060:	63383030 73205420 636e7274 63657361     008c T strncasec
   2b070:	300a706d 30323030 20616430 74732054     mp.000200da T st
   2b080:	6d636e72 30300a70 30303230 54206566     rncmp.000200fe T
   2b090:	72747320 7970636e 3030300a 32313032      strncpy.0002012
   2b0a0:	20542038 72727473 0a726863 32303030     8 T strrchr.0002
   2b0b0:	65343130 73205420 74737274 30300a72     014e T strstr.00
   2b0c0:	65303230 54206132 72747320 5f6b6f74     020e2a T strtok_
   2b0d0:	30300a72 66303230 54203435 72747320     r.00020f54 T str
   2b0e0:	0a6c6f74 32303030 63343534 73205420     tol.0002454c T s
   2b0f0:	6f747274 300a6c75 30313030 20633032     trtoul.0001020c 
   2b100:	79732054 65675f73 6f625f74 745f746f     T sys_get_boot_t
   2b110:	0a656d69 31303030 30303230 73205420     ime.00010200 T s
   2b120:	675f7379 625f7465 5f746f6f 65707974     ys_get_boot_type
   2b130:	3030300a 62373031 20542038 5f737973     .000107b8 T sys_
   2b140:	5f746567 5f757063 636f6c63 30300a6b     get_cpu_clock.00
   2b150:	65363130 54203038 73797320 7465675f     016e80 T sys_get
   2b160:	6d656d5f 666e695f 30300a6f 34303130     _mem_info.000104
   2b170:	54203863 73797320 7465675f 6d656d5f     c8 T sys_get_mem
   2b180:	666e695f 74735f6f 30300a72 34303130     _info_str.000104
   2b190:	54206339 73797320 7465675f 7470755f     9c T sys_get_upt
   2b1a0:	5f656d69 300a7375 37313030 20633830     ime_us.0001708c 
   2b1b0:	79732054 65735f73 6e695f74 72616863     T sys_set_inchar
   2b1c0:	6e75665f 30300a63 30373130 54203038     _func.00017080 T
   2b1d0:	73797320 7465735f 74756f5f 72616863      sys_set_outchar
   2b1e0:	6e75665f 30300a63 30373130 54203063     _func.000170c0 T
   2b1f0:	73797320 6c6c6163 6e695f73 300a7469      syscalls_init.0
   2b200:	30323030 20303866 69742054 300a656d     0020f80 T time.0
   2b210:	35313030 20303361 6c742054 69625f6d     0015a30 T tlm_bi
   2b220:	7972616e 6d6f635f 65726170 656e6f5f     nary_compare_one
   2b230:	3030300a 31613531 20542036 5f6d6c74     .00015a16 T tlm_
   2b240:	616e6962 675f7972 6f5f7465 300a656e     binary_get_one.0
   2b250:	35313030 20303061 6c742054 69625f6d     0015a00 T tlm_bi
   2b260:	7972616e 7465675f 7a69735f 6e6f5f65     nary_get_size_on
   2b270:	30300a65 31353130 54203062 6d6c7420     e.000151b0 T tlm
   2b280:	6d6f635f 656e6f70 615f746e 300a6464     _component_add.0
   2b290:	35313030 20633132 6c742054 6f635f6d     001521c T tlm_co
   2b2a0:	6e6f706d 5f746e65 5f726f66 68636165     mponent_for_each
   2b2b0:	3030300a 38313531 20542063 5f6d6c74     .0001518c T tlm_
   2b2c0:	706d6f63 6e656e6f 65675f74 79625f74     component_get_by
   2b2d0:	6d616e5f 30300a65 66343130 54203438     _name.00014f84 T
   2b2e0:	6d6c7420 7274735f 5f6d6165 0a6c6c61      tlm_stream_all.
   2b2f0:	31303030 34626634 74205420 735f6d6c     00014fb4 T tlm_s
   2b300:	61657274 65645f6d 65646f63 6c69665f     tream_decode_fil
   2b310:	30300a65 65343130 54203866 6d6c7420     e.00014ef8 T tlm
   2b320:	7274735f 5f6d6165 0a656e6f 31303030     _stream_one.0001
   2b330:	30616634 74205420 735f6d6c 61657274     4fa0 T tlm_strea
   2b340:	6e6f5f6d 69665f65 300a656c 35313030     m_one_file.00015
   2b350:	20383133 6c742054 61765f6d 62616972     318 T tlm_variab
   2b360:	675f656c 625f7465 6f635f79 615f706d     le_get_by_comp_a
   2b370:	6e5f646e 0a656d61 31303030 30663235     nd_name.000152f0
   2b380:	74205420 765f6d6c 61697261 5f656c62      T tlm_variable_
   2b390:	5f746567 6e5f7962 0a656d61 31303030     get_by_name.0001
   2b3a0:	34343935 74205420 765f6d6c 61697261     5944 T tlm_varia
   2b3b0:	5f656c62 5f746567 756c6176 30300a65     ble_get_value.00
   2b3c0:	35353130 54203433 6d6c7420 7261765f     015534 T tlm_var
   2b3d0:	6c626169 72705f65 5f746e69 756c6176     iable_print_valu
   2b3e0:	30300a65 32353130 54203437 6d6c7420     e.00015274 T tlm
   2b3f0:	7261765f 6c626169 65725f65 74736967     _variable_regist
   2b400:	300a7265 35313030 20383433 6c742054     er.00015348 T tl
   2b410:	61765f6d 62616972 735f656c 765f7465     m_variable_set_v
   2b420:	65756c61 3030300a 61663032 20542038     alue.00020fa8 T 
   2b430:	6f6c6f74 0a726577 32303030 32636630     tolower.00020fc2
   2b440:	74205420 7070756f 300a7265 36313030      T toupper.00016
   2b450:	20613637 30752054 6762645f 6972705f     76a T u0_dbg_pri
   2b460:	0a66746e 31303030 63343736 75205420     ntf.0001674c T u
   2b470:	62645f30 75705f67 30300a74 38303130     0_dbg_put.000108
   2b480:	54203063 72617520 675f3074 68637465     c0 T uart0_getch
   2b490:	300a7261 30313030 20303638 61752054     ar.00010860 T ua
   2b4a0:	5f307472 74696e69 3030300a 64383031     rt0_init.000108d
   2b4b0:	20542038 74726175 75705f30 61686374     8 T uart0_putcha
   2b4c0:	30300a72 38303130 54203066 72617520     r.000108f0 T uar
   2b4d0:	705f3074 0a737475 31303030 61353938     t0_puts.0001895a
   2b4e0:	75205420 73694c78 6d655274 0a65766f      T uxListRemove.
   2b4f0:	31303030 63326638 75205420 65755178     00018f2c T uxQue
   2b500:	654d6575 67617373 61577365 6e697469     ueMessagesWaitin
   2b510:	30300a67 66383130 54206533 51787520     g.00018f3e T uxQ
   2b520:	65756575 7373654d 73656761 74696157     ueueMessagesWait
   2b530:	46676e69 496d6f72 300a5253 39313030     ingFromISR.00019
   2b540:	20343033 78752054 6b736154 4e746547     304 T uxTaskGetN
   2b550:	65626d75 54664f72 736b7361 3030300a     umberOfTasks.000
   2b560:	35393931 20542038 61547875 65476b73     19958 T uxTaskGe
   2b570:	61745374 69486b63 61576867 4d726574     tStackHighWaterM
   2b580:	0a6b7261 31303030 30633839 75205420     ark.000198c0 T u
   2b590:	73615478 7465476b 74737953 74536d65     xTaskGetSystemSt
   2b5a0:	0a657461 31303030 30363838 76205420     ate.00018860 T v
   2b5b0:	6c707041 74616369 496e6f69 48656c64     ApplicationIdleH
   2b5c0:	0a6b6f6f 31303030 63393838 76205420     ook.0001889c T v
   2b5d0:	6c707041 74616369 4d6e6f69 6f6c6c61     ApplicationMallo
   2b5e0:	69614663 4864656c 0a6b6f6f 31303030     cFailedHook.0001
   2b5f0:	34363838 76205420 6c707041 74616369     8864 T vApplicat
   2b600:	536e6f69 6b636174 7265764f 776f6c66     ionStackOverflow
   2b610:	6b6f6f48 3030300a 66383831 20542038     Hook.000188f8 T 
   2b620:	73694c76 696e4974 6c616974 0a657369     vListInitialise.
   2b630:	31303030 65303938 76205420 7473694c     0001890e T vList
   2b640:	74696e49 696c6169 74496573 300a6d65     InitialiseItem.0
   2b650:	38313030 20633239 4c762054 49747369     001892c T vListI
   2b660:	7265736e 30300a74 39383130 54203431     nsert.00018914 T
   2b670:	694c7620 6e497473 74726573 0a646e45      vListInsertEnd.
   2b680:	31303030 34333738 76205420 74726f50     00018734 T vPort
   2b690:	53646e45 64656863 72656c75 3030300a     EndScheduler.000
   2b6a0:	33373831 20542038 726f5076 746e4574     18738 T vPortEnt
   2b6b0:	72437265 63697469 300a6c61 38313030     erCritical.00018
   2b6c0:	20383537 50762054 4574726f 43746978     758 T vPortExitC
   2b6d0:	69746972 0a6c6163 31303030 65643838     ritical.000188de
   2b6e0:	76205420 74726f50 65657246 3030300a      T vPortFree.000
   2b6f0:	31373831 20542030 726f5076 43565374     18710 T vPortSVC
   2b700:	646e6148 0a72656c 31303030 38316239     Handler.00019b18
   2b710:	76205420 546e7552 53656d69 49746174      T vRunTimeStatI
   2b720:	6e457273 0a797274 31303030 30346239     srEntry.00019b40
   2b730:	76205420 546e7552 53656d69 49746174      T vRunTimeStatI
   2b740:	78457273 300a7469 39313030 20633435     srExit.0001954c 
   2b750:	54762054 446b7361 79616c65 3030300a     T vTaskDelay.000
   2b760:	66343931 20542034 73615476 6c65446b     194f4 T vTaskDel
   2b770:	6e557961 0a6c6974 31303030 63623239     ayUntil.000192bc
   2b780:	76205420 6b736154 53646e45 64656863      T vTaskEndSched
   2b790:	72656c75 3030300a 65373931 20542034     uler.000197e4 T 
   2b7a0:	73615476 7465476b 6f666e49 3030300a     vTaskGetInfo.000
   2b7b0:	64373931 20542038 73615476 73694d6b     197d8 T vTaskMis
   2b7c0:	59646573 646c6569 3030300a 65363931     sedYield.000196e
   2b7d0:	20542034 73615476 616c506b 6e4f6563     4 T vTaskPlaceOn
   2b7e0:	6e657645 73694c74 30300a74 39393130     EventList.000199
   2b7f0:	54203839 61547620 72506b73 69726f69     98 T vTaskPriori
   2b800:	6e497974 69726568 30300a74 61393130     tyInherit.00019a
   2b810:	54203062 61547620 65526b73 52746573     b0 T vTaskResetR
   2b820:	69546e75 7453656d 0a737461 31303030     unTimeStats.0001
   2b830:	34373739 76205420 6b736154 54746553     9774 T vTaskSetT
   2b840:	4f656d69 74537475 0a657461 31303030     imeOutState.0001
   2b850:	38353239 76205420 6b736154 72617453     9258 T vTaskStar
   2b860:	68635374 6c756465 300a7265 39313030     tScheduler.00019
   2b870:	20343336 54762054 536b7361 65707375     634 T vTaskSuspe
   2b880:	300a646e 39313030 20636432 54762054     nd.000192dc T vT
   2b890:	536b7361 65707375 6c41646e 30300a6c     askSuspendAll.00
   2b8a0:	35393130 54206337 61547620 77536b73     01957c T vTaskSw
   2b8b0:	68637469 746e6f43 0a747865 32303030     itchContext.0002
   2b8c0:	63663431 76205420 63736973 0a666e61     14fc T vsiscanf.
   2b8d0:	32303030 38393431 76205420 70696e73     00021498 T vsnip
   2b8e0:	746e6972 30300a66 34313230 54203839     rintf.00021498 T
   2b8f0:	6e737620 6e697270 300a6674 31323030      vsnprintf.00021
   2b900:	20636634 73762054 6e616373 30300a66     4fc T vsscanf.00
   2b910:	63333130 54203462 69617720 65725f74     013cb4 T wait_re
   2b920:	0a796461 31303030 63363031 77205420     ady.0001106c T w
   2b930:	6c657269 5f737365 5f746567 5f6b6361     ireless_get_ack_
   2b940:	0a746b70 31303030 63353031 77205420     pkt.0001105c T w
   2b950:	6c657269 5f737365 5f746567 705f7872     ireless_get_rx_p
   2b960:	300a746b 31313030 20303130 69772054     kt.00011010 T wi
   2b970:	656c6572 695f7373 0a74696e 31303030     reless_init.0001
   2b980:	63373031 77205420 6c657269 5f737365     107c T wireless_
   2b990:	76726573 0a656369 31303030 30373738     service.00018770
   2b9a0:	78205420 74726f50 646e6550 61485653      T xPortPendSVHa
   2b9b0:	656c646e 30300a72 37383130 54203466     ndler.000187f4 T
   2b9c0:	6f507820 74537472 53747261 64656863      xPortStartSched
   2b9d0:	72656c75 3030300a 62373831 20542034     uler.000187b4 T 
   2b9e0:	726f5078 73795374 6b636954 646e6148     xPortSysTickHand
   2b9f0:	0a72656c 31303030 65366238 78205420     ler.00018b6e T x
   2ba00:	75657551 65724365 43657461 746e756f     QueueCreateCount
   2ba10:	53676e69 70616d65 65726f68 3030300a     ingSemaphore.000
   2ba20:	38633831 20542034 65755178 72436575     18c84 T xQueueCr
   2ba30:	65746165 6574754d 30300a78 62383130     eateMutex.00018b
   2ba40:	54206333 75517820 47657565 72656e65     3c T xQueueGener
   2ba50:	72436369 65746165 3030300a 39643831     icCreate.00018d9
   2ba60:	20542030 65755178 65476575 6972656e     0 T xQueueGeneri
   2ba70:	63655263 65766965 3030300a 64613831     cReceive.00018ad
   2ba80:	20542030 65755178 65476575 6972656e     0 T xQueueGeneri
   2ba90:	73655263 300a7465 38313030 20303862     cReset.00018b80 
   2baa0:	51782054 65756575 656e6547 53636972     T xQueueGenericS
   2bab0:	0a646e65 31303030 38616338 78205420     end.00018ca8 T x
   2bac0:	75657551 6e654765 63697265 646e6553     QueueGenericSend
   2bad0:	6d6f7246 0a525349 31303030 38326438     FromISR.00018d28
   2bae0:	78205420 75657551 76694765 6f724665      T xQueueGiveFro
   2baf0:	5253496d 3030300a 63653831 20542034     mISR.00018ec4 T 
   2bb00:	65755178 65526575 76696563 6f724665     xQueueReceiveFro
   2bb10:	5253496d 3030300a 34663831 20542032     mISR.00018f42 T 
   2bb20:	65755178 65536575 7463656c 6d6f7246     xQueueSelectFrom
   2bb30:	0a746553 31303030 63383739 78205420     Set.0001978c T x
   2bb40:	6b736154 63656843 726f466b 656d6954     TaskCheckForTime
   2bb50:	0a74754f 31303030 30363039 78205420     Out.00019060 T x
   2bb60:	6b736154 61657243 300a6574 39313030     TaskCreate.00019
   2bb70:	20383739 54782054 476b7361 63537465     978 T xTaskGetSc
   2bb80:	75646568 5372656c 65746174 3030300a     hedulerState.000
   2bb90:	65323931 20542063 73615478 7465476b     192ec T xTaskGet
   2bba0:	6b636954 6e756f43 30300a74 32393130     TickCount.000192
   2bbb0:	54203866 61547820 65476b73 63695474     f8 T xTaskGetTic
   2bbc0:	756f436b 7246746e 53496d6f 30300a52     kCountFromISR.00
   2bbd0:	33393130 54203031 61547820 6e496b73     019310 T xTaskIn
   2bbe0:	6d657263 54746e65 0a6b6369 31303030     crementTick.0001
   2bbf0:	38326139 78205420 6b736154 6f697250     9a28 T xTaskPrio
   2bc00:	79746972 69736944 7265686e 300a7469     rityDisinherit.0
   2bc10:	39313030 20343037 54782054 526b7361     0019704 T xTaskR
   2bc20:	766f6d65 6f724665 6576456d 694c746e     emoveFromEventLi
   2bc30:	300a7473 39313030 20633134 54782054     st.0001941c T xT
   2bc40:	526b7361 6d757365 6c6c4165 3030300a     askResumeAll.000
   2bc50:	39643331 20542034 74696d78 7461645f     13d94 T xmit_dat
   2bc60:	6f6c6261 000a6b63                       ablock..
