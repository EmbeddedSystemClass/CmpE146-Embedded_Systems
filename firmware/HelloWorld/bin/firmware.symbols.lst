
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x00022798 vaddr 0x00022798 paddr 0x00022798 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x000127a0 memsz 0x000127a0 flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x000227a0 align 2**16
         filesz 0x000002fc memsz 0x000002fc flags rw-
    LOAD off    0x0002c300 vaddr 0x2007c300 paddr 0x00022a9c align 2**16
         filesz 0x00000000 memsz 0x000004b4 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00012796  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002fc  2007c000  000227a0  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004b4  2007c300  00022a9c  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  00022798  00022798  00022798  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   0004487e  00000000  00000000  0002c2fc  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000b8f4  00000000  00000000  00070b7a  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001788  00000000  00000000  0007c46e  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00012c32  00000000  00000000  0007dbf6  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000c168  00000000  00000000  00090828  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  0009c990  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  0009ca0f  2**0  CONTENTS, READONLY
 11 .debug_loc    00013c21  00000000  00000000  0009ca40  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000027d0  00000000  00000000  000b0661  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00006348  00000000  00000000  000b2e34  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
00022798 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
000105c0 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
00010654 l     F .text	00000014 sys_clock_pll0_feed()
00010668 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00010974 l     F .text	000000e8 nordic_transfer
00010a5c l     F .text	00000020 nordic_readRegister
00010a7c l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00010df0 l     F .text	00000070 nrf_driver_init
00010f08 l     F .text	00000034 nrf_irq_callback
00010e60 l     F .text	00000050 nrf_driver_app_recv
00010eb0 l     F .text	00000058 nrf_driver_send
00010f3c l     F .text	00000022 nrf_driver_receive
00010f5e l     F .text	00000028 nrf_driver_get_timer
2007c31c l     O .bss	00000004 g_ack_queue
2007c320 l     O .bss	00000004 g_nrf_activity_sem
2007c324 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 mesh.c
00011020 l     F .text	00000026 mesh_incr_soft_timers_for_arr
00011048 l     F .text	0000004c mesh_update_soft_timers
00011094 l     F .text	0000003c mesh_send_packet
000110d0 l     F .text	00000034 mesh_send_retry_packet
00011104 l     F .text	00000024 mesh_find_rte_tbl_entry
00011128 l     F .text	00000028 mesh_update_rte_scores
00011150 l     F .text	00000040 mesh_get_pnd_pkt_slot
00011190 l     F .text	00000090 mesh_pending_packets_add
00011220 l     F .text	00000058 mesh_get_rte_to_modify
00011278 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
000116a2 l     F .text	0000001a mesh_send_ack
2007c328 l     O .bss	00000014 g_driver
2007c33c l     O .bss	00000001 g_error_mask
2007c33d l     O .bss	00000001 g_locked
2007c33e l     O .bss	00000090 g_mesh_pnd_pkts
2007c3ce l     O .bss	0000000c g_mesh_stats
2007c3da l     O .bss	00000018 g_our_name
2007c3f2 l     O .bss	00000048 g_our_pnd_pkts
2007c43a l     O .bss	0000000c g_pkt_hist
2007c446 l     O .bss	00000001 g_rpt_node
2007c447 l     O .bss	00000010 g_rte_table
2007c457 l     O .bss	00000001 s_next_packet_id.5115
2007c458 l     O .bss	00000004 s_prev_time_ms.5129
2007c08c l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 ff.c
000119dc l     F .text	00000038 mem_cpy
00011a14 l     F .text	0000000e mem_set
00011a22 l     F .text	0000001e sum_sfn
00011a40 l     F .text	0000003a get_ldnumber
00011a7a l     F .text	00000046 sync_window.part.1
00011ac0 l     F .text	0000000c sync_window
00011acc l     F .text	00000074 sync_fs
00011b40 l     F .text	00000034 move_window
00011b74 l     F .text	0000004c check_fs
00011bc0 l     F .text	0000021c find_volume
00011ddc l     F .text	0000003a validate
00011e16 l     F .text	0000001a unlock_fs
00011eec l     F .text	00000080 dir_sdi
0001203e l     F .text	000000a0 create_chain
000120de l     F .text	000000ec dir_next
000121cc l     F .text	00000120 dir_find.part.9
000122ec l     F .text	00000270 follow_path
0001255c l     F .text	00000238 dir_register
00012794 l     F .text	00000058 remove_chain
2007c45c l     O .bss	00000008 FatFs
2007c464 l     O .bss	00000002 Fsid
0001f328 l     O .text	00000080 ExCvt
0001f3a8 l     O .text	0000000d LfnOfs
0001f3b6 l     O .text	00000016 cst.6348
0001f410 l     O .text	00000016 vst.6347
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
0001f426 l     O .text	00000100 Tbl
0001f526 l     O .text	000001e0 tbl_lower.5775
0001f706 l     O .text	000001e0 tbl_upper.5776
00000000 l    df *ABS*	00000000 sd.c
00013528 l     F .text	00000012 sys_get_uptime_ms
0001353c l     F .text	00000030 ssp1_set_max_clock
0001356c l     F .text	00000014 ssp1_exchange_byte
2007c466 l     O .bss	00000001 g_card_type
2007c095 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
00013d18 l     F .text	00000020 flash_get_mem_size_bytes()
00013d38 l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00013dac l     F .text	000000ac ssp1_exchange_data
00013e58 l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
00013e80 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00013ec4 l     F .text	00000040 flash_wait_for_ready()
00014118 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c468 l     O .bss	00000004 g_sector_count
2007c46c l     O .bss	00000001 g_flash_capacity
2007c46e l     O .bss	00000002 g_flash_pagesize
0001f8f0 l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c470 l     O .bss	00000080 g_ir_timings
2007c4f0 l     O .bss	00000002 g_signal_count
2007c4f4 l     O .bss	00000004 g_last_decoded_signal
0001f900 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 c_tlm_comp.c
00014560 l     F .text	00000010 tlm_component_find_by_name
2007c4f8 l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 file_logger.c
000146a4 l     F .text	000000b4 logger_write_to_file
00014758 l     F .text	000000d0 logger_task
2007c4fc l     O .bss	00000002 g_buffer_watermark
2007c500 l     O .bss	00000004 g_empty_buffer_queue
2007c504 l     O .bss	00000002 g_highest_file_write_time
2007c508 l     O .bss	00000004 g_write_buffer_queue
2007c50c l     O .bss	00000004 gp_file_buffer
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
0001494e l     F .text	00000024 for_each_recur_alarm_callback
00014972 l     F .text	0000005a for_each_alarm_callback
2007c510 l     O .bss	00000010 g_list_recur_alarms
2007c520 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 memory.cpp
2007c524 l     O .bss	00000004 g_sbrk_calls
2007c528 l     O .bss	00000004 g_last_sbrk_ptr
2007c52c l     O .bss	00000004 g_next_heap_ptr
2007c530 l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00014c6e l     F .text	00000056 remap_fatfs_errors
00014cc4 l     F .text	0000004c findslot
00014d10 l     F .text	00000028 remap_handle
2007c534 l     O .bss	00000004 g_input_dev_fptr
2007c538 l     O .bss	00000004 g_output_dev_fptr
2007c53c l     O .bss	00000001 initialized.8352
2007c540 l     O .bss	00000060 openfiles
2007c5a0 l     O .bss	00000004 slot.8318
2007c098 l     O .data	00000004 lastfh.8319
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c5a4 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 eint.c
000157b0 l     F .text	0000002c handle_eint_list
000157dc l     F .text	00000038 eint3_enable.isra.0
2007c5a8 l     O .bss	00000004 gp_port0_falling_list
2007c5ac l     O .bss	00000004 gp_port0_rising_list
2007c5b0 l     O .bss	00000004 gp_port2_falling_list
2007c5b4 l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 adc.c
000158c4 l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c5cc l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_timers.c
00015c80 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 can.c
00015db4 l     F .text	00000032 CAN_tx_now
00015de8 l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 port.c
00015eb4 l     F .text	00000012 prvTaskExitError
00015f10 l       .text	00000000 pxCurrentTCBConst2
00015f90 l       .text	00000000 pxCurrentTCBConst
2007c5d4 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c5d8 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000160ea l     F .text	00000066 prvCopyDataToQueue
00016150 l     F .text	0000004a prvNotifyQueueSetContainer
0001619a l     F .text	00000028 prvCopyDataFromQueue
000161c2 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000166a4 l     F .text	00000024 prvResetNextTaskUnblockTime
000166c8 l     F .text	0000008c prvAddCurrentTaskToDelayedList
2007c5e4 l     O .bss	00000004 pxDelayedTaskList
2007c5e8 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c5ec l     O .bss	000000c8 pxReadyTasksLists
2007c6b4 l     O .bss	00000004 ulTaskSwitchedInTime
2007c6b8 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c6bc l     O .bss	00000004 uxPendedTicks
2007c6c0 l     O .bss	00000004 uxSchedulerSuspended
2007c6c4 l     O .bss	00000004 uxTaskNumber
2007c6c8 l     O .bss	00000004 uxTopReadyPriority
2007c6cc l     O .bss	00000014 xDelayedTaskList1
2007c6e0 l     O .bss	00000014 xDelayedTaskList2
2007c6f4 l     O .bss	00000004 xNextTaskUnblockTime
2007c6f8 l     O .bss	00000004 xNumOfOverflows
2007c6fc l     O .bss	00000014 xPendingReadyList
2007c710 l     O .bss	00000004 xSchedulerRunning
2007c714 l     O .bss	00000014 xSuspendedTaskList
2007c728 l     O .bss	00000004 xTickCount
2007c72c l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 handlers.cpp
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
00016ef8 l     F .text	0000000c hl_print_line()
00016f04 l     F .text	0000002c ssp_set_max_clock
00016f30 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00018b50 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00018f1c l     F .text	000001c0 validate_structure
00020298 l     O .text	00000030 DAYS_IN_MONTH
000202c8 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
0001a3fc l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strtod.c
0001a90c l     F .text	00000042 sulp
00020390 l     O .text	00000014 fpi.6129
000203a4 l     O .text	00000014 fpinan.6165
000203b8 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
0001b560 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c788 l     O .bss	0000000b __tzname_dst
2007c793 l     O .bss	0000000b __tzname_std
2007c7a0 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
0001bdb8 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0001ca9c l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0001cf6e l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2b8 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00020620 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
0001e010 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
0001e8ba l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c7ac l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00015a40 g     F .text	0000001c Uart3::Uart3()
0001eb60 g     F .text	00000012 _malloc_usable_size_r
000195bc g     F .text	000000b8 __cvt
00010434 g     F .text	00000054 lpc_sys_setup_system_timer
0001e584 g     F .text	000000c6 _scanf_chars
0001784c g     F .text	00000004 std::type_info::__is_function_p() const
0001f0a8 g     F .text	0000002c .hidden __aeabi_dcmpun
000156e0 g     F .text	000000d0 rtc_init
0001d986 g     F .text	00000042 __any_on
0001d194 g     F .text	00000020 _isatty_r
0001f06c g     F .text	00000012 .hidden __aeabi_dcmple
0001a89e g     F .text	00000010 strcpy
00017d24 g     F .text	00000018 .hidden __ashldi3
00014d70 g     F .text	00000004 _getpid
0001a270 g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
0001efa8 g     F .text	0000007a .hidden __cmpdf2
0001d1d4 g     F .text	00000024 _lseek_r
00011e46 g     F .text	000000a6 get_fat
00015614 g     F .text	0000001c RIT_IRQHandler
00011414 g     F .text	000000f8 mesh_form_pkt
0001efa8 g     F .text	0000007a .hidden __eqdf2
00014108 g     F .text	00000010 flash_supports_metadata
0001fa40 g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
0001d168 g     F .text	00000024 _gettimeofday_r
00015f34 g     F .text	00000014 vPortExitCritical
00018050 g     F .text	0000005a .hidden __floatdidf
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c750  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001a73c g     F .text	00000024 _kill_r
0001a240 g     F .text	00000030 printf
00010488 g     F .text	0000002c sys_get_uptime_us
0001a85e g     F .text	00000024 __sseek
00018bc4 g     F .text	00000060 __sinit
00015a18  w    F .text	00000014 Uart3::~Uart3()
0001bbb0 g     F .text	000000a4 __swbuf_r
2007c7a4 g     O .bss	00000004 _daylight
2007c744  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
00017744 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00020160 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
0001fae4  w    O .text	0000001c vtable for Uart3
00018b98 g     F .text	0000002c __sfmoreglue
00014bf0 g     F .text	00000004 __malloc_unlock
0001450a g     F .text	00000030 I2C_Temp::getCelsius()
00017bd4 g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001b540 g     F .text	00000020 _strtod_r
00018510 g     F .text	00000136 .hidden __divsf3
000138d8 g     F .text	00000098 sd_read
0001fa98  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0001cb06 g     F .text	0000002a __hexdig_fun
00015484 g     F .text	0000006c UartDev::getChar(char*, unsigned int)
0001fab4  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00015ca0 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
00018ed8 g     F .text	00000034 memmove
00010b08 g     F .text	00000008 nordic_clear_packet_sent_flag
2007c5d0  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
00018d60 g     F .text	0000001c __locale_ctype_ptr
00016408 g     F .text	00000080 xQueueGenericSendFromISR
0001d1f8 g     F .text	00000068 _Balloc
000227a0 g       .ARM.exidx	00000000 __exidx_end
00015630 g     F .text	00000048 rtc_gettime
000100d8 g       .text	00000000 __data_section_table_end
00015894 g     F .text	00000030 eint3_enable_port0
00010148  w    F .text	00000010 I2C1_IRQHandler
00014a94 g     F .text	0000000e is_freertos_running
0001464c g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
0001ef98 g     F .text	0000008a .hidden __gtdf2
000189b0 g     F .text	0000000c __errno
0001fa34 g     O .text	0000000c typeinfo for UartDev
000106e0 g     F .text	000000b4 sys_clock_configure()
0001949c g     F .text	00000064 _mallinfo_r
00016e40 g     F .text	00000010 vRunTimeStatIsrExit
0001d1b4 g     F .text	00000004 __localeconv_l
00016fdc  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c5e0 g     O .bss	00000004 pxCurrentTCB
00013580 g     F .text	0000002e wait_ready
00015814 g     F .text	00000080 EINT3_IRQHandler
000142d8 g     F .text	00000064 IR_Sensor::decodeIrCode()
00010abc g     F .text	00000016 nordic_standby1_to_tx_mode1
00011408 g     F .text	0000000c mesh_get_node_address
0001433c g     F .text	00000034 IR_Sensor::init()
0001ca78 g     F .text	00000024 _fstat_r
2007c7b0 g     O .bss	00000004 errno
0001e64c g     F .text	000001ec _scanf_i
0001a822 g     F .text	00000004 __seofread
000227a0 g       .ARM.exidx	00000000 _etext
00010ba0 g     F .text	0000003e nordic_set_intr_signals
00014468 g     F .text	00000026 LED::on(unsigned char)
0001f034 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c5c4  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00010aa8 g     F .text	00000008 nordic_clear_all_intr_flags
0001513e g     F .text	00000018 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
00018198 g     F .text	00000160 .hidden __aeabi_fadd
00018194 g     F .text	00000164 .hidden __subsf3
00013504 g     F .text	00000024 ff_wtoupper
0001e534 g     F .text	00000050 _vfiscanf_r
0001092c g     F .text	00000048 lpc_pclk
00010148  w    F .text	00000010 TIMER3_IRQHandler
00015d78 g     F .text	00000014 I2C2::I2C2()
00010d1a g     F .text	0000000c nordic_set_rx_pipe0_addr
00015b2c g     F .text	00000024 UART0_IRQHandler
00018ec2 g     F .text	00000016 memcpy
00016be0 g     F .text	00000020 vTaskPlaceOnEventList
0001cfb8 g     F .text	00000120 __hexnan
00015b6c g     F .text	000000c0 ssp1_dma_transfer_block
0001f024 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
0001a578 g     F .text	0000015c setvbuf
00016e50  w    F .text	0000004c Storage::getFlashDrive()
0001fb00  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
00018b44 g     F .text	0000000c _cleanup_r
0001766c g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001dacc g     F .text	000001e8 _svfprintf_r
00017fe0 g     F .text	00000022 .hidden __floatsidf
00010b94 g     F .text	0000000c nordic_flush_rx_fifo
0001efa0 g     F .text	00000082 .hidden __ltdf2
00015f94 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
00013c40 g     F .text	00000026 disk_initialize
00017678 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00018688 g     F .text	00000000 .hidden __aeabi_uldivmod
0001529c  w    F .text	0000010a I2C_Base::i2cStateMachine()
0001a328 g     F .text	00000010 puts
000201cc g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
0001604e g     F .text	0000001a vPortFree
0001e534 g     F .text	00000050 _vfscanf_r
0001d902 g     F .text	00000050 __ratio
0001a548 g     F .text	00000030 iscanf
00014412 g     F .text	00000004 LED::init()
00013480 g     F .text	00000004 ff_del_syncobj
0001fb8c  w    O .text	00000007 typeinfo name for Uart0
00018e44 g     F .text	00000010 malloc
000155d8  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00014370 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001a6dc g     F .text	00000050 _raise_r
00014fa0 g     F .text	00000010 _fstat
00015c2c g     F .text	00000030 spi1_lock
00018300 g     F .text	0000001c .hidden __aeabi_i2f
00020558 g     O .text	000000c8 __mprec_tens
0001bb94 g     F .text	0000001c vsnprintf
00015f50 g     F .text	00000044 xPortPendSVHandler
000180ac g     F .text	00000040 .hidden __fixunsdfsi
00016084 g     F .text	00000018 vListInsertEnd
0001375c g     F .text	0000016c sd_initialize
00010cf8 g     F .text	00000016 nordic_set_addr_width
0001dd2e g     F .text	0000003a __ssrefill_r
00010d28 g     F .text	000000c8 nordic_init
0001a760 g     F .text	00000004 _getpid_r
00022796 g       .text	00000000 __symbol_table_end
00013c66 g     F .text	00000010 disk_status
00010f88 g     F .text	0000004c wireless_init
0001e9d8 g     F .text	0000002c strtoul
00017fc0 g     F .text	0000001e .hidden __aeabi_ui2d
00015d0c g     F .text	0000006c I2C2::init(unsigned int)
0001d1b8 g     F .text	0000001c _localeconv_r
0001787c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001d41c g     F .text	00000012 __i2b
000176b8 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000186b8 g     F .text	000002dc .hidden __udivmoddi4
00010c44 g     F .text	00000024 nordic_set_channel
00017d3c g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001a528 g     F .text	00000020 _sbrk_r
00011664 g     F .text	0000003e mesh_send
000144b6 g     F .text	0000000a LED::set(unsigned char, bool)
0001fb1c  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
0001e838 g     F .text	00000024 _read_r
0001607e g     F .text	00000006 vListInitialiseItem
00013ce6 g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
0001f058 g     F .text	00000012 .hidden __aeabi_dcmplt
00015e8c g     F .text	00000028 CAN_IRQHandler
00018b20 g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
00010148  w    F .text	00000010 PLL1_IRQHandler
0001fa70 g     O .text	00000009 typeinfo name for CharDev
000143a0 g     F .text	00000038 LED_Display::init()
00018004 g     F .text	0000003a .hidden __extendsfdf2
0001dd68 g     F .text	000002a8 __ssvfscanf_r
0001edc8 g     F .text	000001d0 .hidden __aeabi_ddiv
00010148  w    F .text	00000010 SSP0_IRQHandler
00010c68 g     F .text	0000002c nordic_set_air_data_rate
00017d48 g     F .text	00000276 .hidden __adddf3
00010148  w    F .text	00000010 CANAct_IRQHandler
00020188 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001d7c0 g     F .text	000000a4 __b2d
00022796 g       .text	00000000 __exidx_start
0001eb74 g     F .text	00000254 .hidden __aeabi_dmul
00010200 g     F .text	0000000c sys_get_boot_type
00014fb0 g     F .text	00000024 _isatty
000176a0 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010d0e g     F .text	0000000c nordic_set_tx_address
00014b34 g     F .text	00000004 operator delete(void*)
0002028c g     O .text	00000004 _global_impure_ptr
00017890 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001d9c8 g     F .text	0000004c _realloc_r
00018d10 g     F .text	00000048 __libc_init_array
00013660 g     F .text	0000004c xmit_datablock
000153e0 g     F .text	0000005c UartDev::putChar(char, unsigned int)
00014594 g     F .text	0000006c tlm_component_add
00010b80 g     F .text	00000014 nordic_read_rx_fifo
00020530 g     O .text	00000028 __mprec_bigtens
0001d304 g     F .text	0000007c __s2b
00018998 g     F .text	0000000e abort
00017fc0 g     F .text	0000001e .hidden __floatunsidf
00013f04 g     F .text	00000098 flash_initialize
00014ac4 g     F .text	0000006c _sbrk
0001d686 g     F .text	00000034 __mcmp
00016030 g     F .text	0000001e pvPortMalloc
0001fb24  w    O .text	00000007 typeinfo name for Uart2
00015afc  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
00014d74 g     F .text	00000004 _init
000104ec  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00015d8c g     F .text	00000028 I2C2_IRQHandler
00016068 g     F .text	00000016 vListInitialise
00014d78 g     F .text	00000034 syscalls_init
00015a18  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001b684 g     F .text	0000002c strtol
00015a80  w    F .text	00000014 Uart2::~Uart2()
00017d18 g     F .text	0000000a std::terminate()
000180ec g     F .text	0000009e .hidden __aeabi_d2f
00015156 g     F .text	00000018 I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)
000162e0 g     F .text	00000104 xQueueGenericSend
00018194 g     F .text	00000164 .hidden __aeabi_fsub
000149cc g     F .text	000000ac RTC_IRQHandler
0001a950 g     F .text	00000bf0 _strtod_l
0001cf92 g     F .text	00000026 __match
2007c7b4 g       .bss	00000000 _ebss
000178a4 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
000108e6 g     F .text	00000006 __set_PSP
00015464 g     F .text	00000020 UartDev::flush()
0001bb94 g     F .text	0000001c vsniprintf
00020104 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0001b82a g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0001d380 g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00010ce4 g     F .text	00000014 nordic_set_payload_for_pipe
0001f0d4 g     F .text	0000004e .hidden __fixdfsi
00016d90 g     F .text	00000070 xTaskPriorityDisinherit
00014070 g     F .text	00000044 flash_write_permanent_id
2007c5bc g     O .bss	00000004 g_adc_result_queue
0001832c g     F .text	0000007c .hidden __floatdisf
0001fb4c  w    O .text	0000001c vtable for Uart2
00017034 g     F .text	00000560 high_level_init()
000155b0 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001784a g     F .text	00000002 std::type_info::~type_info()
00010794 g     F .text	000000a8 sys_get_cpu_clock
00014272  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
0001020c g     F .text	00000228 low_level_init()
2007c2b0 g     O .data	00000008 _tzname
00016ebc  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
00016c00 g     F .text	00000070 xTaskRemoveFromEventList
0001600c g     F .text	00000024 vApplicationMallocFailedHook
2007c2f8 g     O .data	00000004 environ
00015b10 g     F .text	0000001c Uart0::Uart0()
000105fc g     F .text	00000058 isr_hard_fault_handler
0001771a g     F .text	00000004 operator delete(void*, unsigned int)
00017d48 g     F .text	00000276 .hidden __aeabi_dadd
0001efa0 g     F .text	00000082 .hidden __ledf2
2007c754  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
000150e8 g     F .text	00000028 I2C_Base::readReg(unsigned char, unsigned char)
00014678 g     F .text	0000002a c_list_for_each_elm
00014614 g     F .text	00000038 c_list_insert_elm_end
0001d548 g     F .text	0000009c __pow5mult
00018040 g     F .text	0000006a .hidden __aeabi_ul2d
00010ae4 g     F .text	00000024 nordic_standby1_to_rx
00010148  w    F .text	00000010 EINT1_IRQHandler
00010504 g     F .text	000000bc TIMER1_IRQHandler
000144d0 g     F .text	00000018 Switches::getSwitchValues()
0002022c g     O .text	00000020 __sf_fake_stderr
0001fb2c  w    O .text	00000020 typeinfo for Uart2
00017d08 g     F .text	00000010 std::get_terminate()
00010b1c g     F .text	0000004c nordic_mode1_send_single_packet
000135d4 g     F .text	0000008c rcvr_datablock
00015ac4 g     F .text	00000024 UART2_IRQHandler
0001543c  w    F .text	00000014 UartDev::~UartDev()
00015fc0 g     F .text	00000014 rts_not_full_trace_get
000116bc g     F .text	0000001c mesh_get_num_routing_entries
0001da14 g     F .text	000000b6 __ssputs_r
000113f0 g     F .text	00000018 mesh_set_node_address
00016e00 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00015ae8  w    F .text	00000014 Uart0::~Uart0()
000176e2 g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001787c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001f094 g     F .text	00000012 .hidden __aeabi_dcmpgt
00017638 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c730  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
0001e03c g     F .text	00000024 __sfputs_r
000144c4 g     F .text	00000006 Light_Sensor::getRawValue()
00018e88 g     F .text	0000001c memchr
000196e0  w    F .text	00000470 _printf_float
00015c5c g     F .text	00000024 spi1_unlock
00016c88 g     F .text	0000004c xTaskCheckForTimeOut
00019404 g     F .text	00000098 _free_r
0001f080 g     F .text	00000012 .hidden __aeabi_dcmpge
00015aa8 g     F .text	0000001c Uart2::Uart2()
00016e9c  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
0001083c g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
0001dcb4 g     F .text	0000007a _sungetc_r
0001701c  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00012d3c g     F .text	00000024 f_close
000138c8 g     F .text	00000010 sd_status
00017d44 g     F .text	0000027a .hidden __aeabi_dsub
000190dc g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
00010b78 g     F .text	00000008 nordic_clear_packet_available_flag
0001fb84  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
000168f8 g     F .text	00000010 vTaskSuspendAll
2007c5c0  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
000201bc g     O .text	0000000d typeinfo name for std::type_info
00016908 g     F .text	0000000c xTaskGetTickCountFromISR
00018040 g     F .text	0000006a .hidden __floatundidf
000140fc g     F .text	0000000c flash_get_page_size
0001a388 g     F .text	00000074 rand
00014e48 g     F .text	00000060 _lseek
0001773c g     F .text	00000006 __cxa_pure_virtual
0001d5e4 g     F .text	000000a2 __lshift
00018300 g     F .text	0000001c .hidden __floatsisf
000160ca g     F .text	00000020 uxListRemove
00014266  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
00014222 g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00012996 g     F .text	00000170 f_read
0001a8be g     F .text	00000024 strncmp
000158e8 g     F .text	00000048 ADC_IRQHandler
000177a4 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001089c g     F .text	00000018 uart0_getchar
0001d42e g     F .text	00000118 __multiply
00016d00 g     F .text	00000090 vTaskPriorityInherit
0001346c g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
000202f8 g     O .text	00000060 __month_lengths
0001a8e2 g     F .text	0000002a strncpy
2007c758 g     O .bss	00000028 __malloc_current_mallinfo
0001d864 g     F .text	0000009e __d2b
2007c73c  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
00016b28 g     F .text	000000b8 vTaskSwitchContext
0001784a g     F .text	00000002 std::type_info::~type_info()
00015b10 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
0001fa7c g     O .text	0000001c vtable for CharDev
00017820 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000201d8 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
00010fd4 g     F .text	0000004c wireless_service
0001e9b4 g     F .text	00000024 _strtoul_r
00013f9c g     F .text	00000050 flash_read_sectors
00010b68 g     F .text	00000010 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
00018510 g     F .text	00000136 .hidden __aeabi_fdiv
0001bd70 g     F .text	00000020 _close_r
2007c5c8  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
00017fe0 g     F .text	00000022 .hidden __aeabi_i2d
00011564 g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00014fd4 g     F .text	00000108 I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
000153a8 g     F .text	00000038 I2C_Base::handleInterrupt()
00018ea4 g     F .text	0000001e memcmp
00010148  w    F .text	00000010 USB_IRQHandler
0001831c g     F .text	0000008c .hidden __floatundisf
00017744 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001a7ac g     F .text	00000054 sscanf
0001bc94 g     F .text	000000dc __swsetup_r
2007c5b8 g     O .bss	00000004 g_adc_mutex
00015fd4 g     F .text	00000038 vApplicationStackOverflowHook
00018994  w    F .text	00000002 .hidden __aeabi_ldiv0
0001edc8 g     F .text	000001d0 .hidden __divdf3
00018c24 g     F .text	00000078 __sfp
0001d952 g     F .text	00000034 __copybits
0001784c g     F .text	00000004 std::type_info::__is_pointer_p() const
00016fc0  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
000182f8 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c09c g     O .data	00000040 g_can_structs
0001bb3c g     F .text	00000058 _vsnprintf_r
0001eb74 g     F .text	00000254 .hidden __muldf3
0001a800 g     F .text	00000022 __sread
000141d0 g     F .text	00000052 get_fattime
00014a78 g     F .text	0000001c delay_us
00015450  w    F .text	00000014 UartDev::~UartDev()
00010bde g     F .text	00000038 nordic_set_crc
00020668 g     O .text	0000212e APP_SYM_TABLE
000108cc g     F .text	0000001a uart0_puts
00015a80  w    F .text	00000014 Uart2::~Uart2()
000155dc g     F .text	00000020 CharDev::CharDev()
00014bec g     F .text	00000004 __malloc_lock
00020128 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
00018acc g     F .text	00000054 _fflush_r
000193e8 g     F .text	0000001c _calloc_r
000151e0 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
0002024c g     O .text	00000020 __sf_fake_stdin
0001b828 g     F .text	00000002 __tz_lock
00018f0c g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
00017594 g     F .text	000000a4 main
0001fb68  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00014aa2 g     F .text	00000022 delay_ms
00010a9a g     F .text	0000000e nordic_is_tx_fifo_empty
000144ca g     F .text	00000004 Switches::init()
00014b38 g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00010b10 g     F .text	0000000c nordic_flush_tx_fifo
0001832c g     F .text	0000007c .hidden __aeabi_l2f
0001a338 g     F .text	00000050 srand
000155b0 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00015184 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00012cb2 g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014388 g     F .text	00000018 LED_Display::setRightDigit(char)
000116d8 g     F .text	000002d0 mesh_service
0001609c g     F .text	0000002e vListInsert
0001a882 g     F .text	00000008 __sclose
2007c738  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001b660 g     F .text	00000024 _strtol_r
000180ec g     F .text	0000009e .hidden __truncdfsf2
00015930 g     F .text	00000074 adc0_init
0001d0d8 g     F .text	00000080 _findenv_r
00020668 g       .text	00000000 __init_array_end
00015ef0 g     F .text	00000024 vPortSVCHandler
0001bed0 g     F .text	00000ba8 _dtoa_r
00019500 g     F .text	000000bc _malloc_r
0001bc54 g     F .text	0000001a __ascii_wctomb
0001b6b0 g     F .text	00000028 time
0001150c g     F .text	00000058 mesh_send_formed_pkt
00012f78 g     F .text	000004f4 f_mkfs
00018050 g     F .text	0000005a .hidden __aeabi_l2d
00014418 g     F .text	00000050 LED::setAll(unsigned char)
000127ec g     F .text	0000007c f_mount
0001ea04 g     F .text	00000072 __submore
0001eb5e g     F .text	00000002 __env_unlock
000200f8 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
000142bc g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
00018c9c g     F .text	00000038 _fwalk
00016624 g     F .text	00000068 xQueueReceiveFromISR
0001831c g     F .text	0000008c .hidden __aeabi_ul2f
00013970 g     F .text	000000b4 sd_write
000162ac g     F .text	00000032 xQueueGenericCreate
0001fac4  w    O .text	00000020 typeinfo for Uart3
000183a8 g     F .text	00000168 .hidden __mulsf3
00010108  w    F .text	00000010 isr_mem_fault
00015110 g     F .text	0000001a I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001b82c g     F .text	0000000c _tzset_unlocked
0001a88a g     F .text	00000014 strcmp
0001a7ac g     F .text	00000054 siscanf
00010c16 g     F .text	00000018 nordic_power_up
00014d44 g     F .text	0000000c sys_set_inchar_func
00011f6c g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
0001efa8 g     F .text	0000007a .hidden __nedf2
0001fa68 g     O .text	00000008 typeinfo for CharDev
00017004  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001a240 g     F .text	00000030 iprintf
000134aa g     F .text	0000001e ff_rel_grant
00015a40 g     F .text	0000001c Uart3::Uart3()
00017758 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00016a20 g     F .text	000000d8 xTaskResumeAll
0001e28c g     F .text	000002a8 __svfiscanf_r
00012d60 g     F .text	0000014e f_lseek
0001a764 g     F .text	00000048 sprintf
0001543c  w    F .text	00000014 UartDev::~UartDev()
00019674 g     F .text	0000006a __exponent
0001fabc  w    O .text	00000007 typeinfo name for Uart3
0001429c g     F .text	00000020 Acceleration_Sensor::init()
00017736 g     F .text	00000006 __cxa_guard_release
000155dc g     F .text	00000020 CharDev::CharDev()
0001bc70 g     F .text	00000024 _write_r
0001fa4c g     O .text	0000001c vtable for UartDev
0001a548 g     F .text	00000030 scanf
2007c734  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001818c g     F .text	0000016c .hidden __aeabi_frsub
00020200 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00014d38 g     F .text	0000000c sys_set_outchar_func
000141a4 g     F .text	0000002c flash_chip_erase
0001448e g     F .text	00000028 LED::off(unsigned char)
0001a6d4 g     F .text	00000008 nanf
00019b50 g     F .text	000000ee _printf_common
000159a4 g     F .text	00000074 adc0_get_reading
2007c0e0 g     O .data	00000004 _impure_ptr
00014912 g     F .text	0000003c u0_dbg_printf
000189bc g     F .text	00000110 __sflush_r
000183a8 g     F .text	00000168 .hidden __aeabi_fmul
0001fbb4  w    O .text	0000001c vtable for Uart0
00020668 g       .text	00000000 __preinit_array_end
0001dacc g     F .text	000001e8 _svfiprintf_r
0001a410 g     F .text	00000118 __srefill_r
000135b0 g     F .text	00000024 power_off
0001453c g     F .text	00000024 I2C_Temp::getFarenheit()
00018e64 g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
00015d78 g     F .text	00000014 I2C2::I2C2()
000108ec g     F .text	00000006 __set_MSP
0001d778 g     F .text	00000048 __ulp
00015a2c  w    F .text	00000014 Uart3::~Uart3()
00015a94  w    F .text	00000014 Uart2::~Uart2()
00016cd4 g     F .text	0000000c vTaskMissedYield
00010ab0 g     F .text	0000000c nordic_queue_tx_fifo
2007c7b4 g       .bss	00000000 _pvHeapStart
000108b4 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
000193d4 g     F .text	00000014 mallinfo
0001512a g     F .text	00000014 I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)
000148f4 g     F .text	0000001e u0_dbg_put
000154f0 g     F .text	000000c0 UartDev::handleInterrupt()
0001516e g     F .text	00000014 I2C_Base::checkDeviceResponse(unsigned char)
0001bb3c g     F .text	00000058 _vsniprintf_r
0001668c g     F .text	00000012 uxQueueMessagesWaiting
000164f0 g     F .text	00000134 xQueueGenericReceive
000180ac g     F .text	00000040 .hidden __aeabi_d2uiz
00015184 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c7a8 g     O .bss	00000004 _timezone
000136ac g     F .text	0000008c send_cmd
00017678 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00015ae8  w    F .text	00000014 Uart0::~Uart0()
00016914 g     F .text	0000010c xTaskIncrementTick
0001dd68 g     F .text	000002a8 __ssvfiscanf_r
00010c2e g     F .text	00000016 nordic_power_down
00015678 g     F .text	00000068 rtc_settime
2007c740  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00011e30 g     F .text	00000016 clust2sect
00017d24 g     F .text	00000018 .hidden __aeabi_llsl
000104b4 g     F .text	00000038 sys_get_mem_info_str
00018d7c g     F .text	00000048 __swhatbuf_r
2007c0dc g     O .data	00000004 __cxxabiv1::__terminate_handler
000108f2 g     F .text	00000006 __set_BASEPRI
0001f044 g     F .text	00000012 .hidden __aeabi_dcmpeq
00015b50 g     F .text	0000001c ssp1_dma_init
00015aa8 g     F .text	0000001c Uart2::Uart2()
00020154 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00016240 g     F .text	0000006c xQueueGenericReset
00014ea8 g     F .text	000000a4 _write
2007c2fc g       .data	00000000 _edata
00017942 g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000143d8 g     F .text	0000003a LED_Display::setNumber(char)
000119a8 g     F .text	00000034 mesh_get_pnd_pkt_count
000140dc g     F .text	00000020 flash_get_page_count
000150dc g     F .text	0000000c I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00012b06 g     F .text	000001ac f_write
000144e8 g     F .text	00000022 I2C_Temp::init()
00013fec g     F .text	0000004c flash_write_sectors
0001b838 g     F .text	00000304 _tzset_unlocked_r
00016754 g     F .text	000001a4 xTaskCreate
00018648 g     F .text	0000003e .hidden __aeabi_f2uiz
000155fc g     F .text	00000018 CharDev::~CharDev()
0001a826 g     F .text	00000038 __swrite
00014b30 g     F .text	00000004 operator new(unsigned int)
00012868 g     F .text	0000012e f_open
00017918  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00013cae g     F .text	00000038 disk_write
00014038 g     F .text	00000036 flash_ioctl
00010cb8 g     F .text	0000002c nordic_set_auto_transmit_options
00014600 g     F .text	00000014 c_list_create
0001e060 g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00018cd4 g     F .text	0000003c _fwalk_reent
0001776c g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000182f8 g     F .text	00000024 .hidden __floatunsisf
0001d6ba g     F .text	000000be __mdiff
000155fc g     F .text	00000018 CharDev::~CharDev()
0001f0d4 g     F .text	0000004e .hidden __aeabi_d2iz
00017cfe g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00013484 g     F .text	00000026 ff_req_grant
2007c74c  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
00014d50 g     F .text	00000010 _kill
00010148  w    F .text	00000010 DMA_IRQHandler
00014570 g     F .text	00000024 tlm_component_get_by_name
00016af8 g     F .text	00000030 vTaskDelay
00015274  w    F .text	00000028 I2C_Base::setStop()
0002026c g     O .text	00000020 __sf_fake_stdout
0001a764 g     F .text	00000048 siprintf
0001e85c g     F .text	0000005e __sccl
000189a6 g     F .text	00000008 atoi
00014bf4 g     F .text	0000007a _gettimeofday
00016ce0 g     F .text	00000020 xTaskGetSchedulerState
0002041c g     O .text	00000101 _ctype_
00014dac g     F .text	0000009c _read
00020668 g       .text	00000000 __init_array_start
00018994  w    F .text	00000002 .hidden __aeabi_idiv0
0001f0a8 g     F .text	0000002c .hidden __unorddf2
00014828 g     F .text	000000cc logger_init
00018648 g     F .text	0000003e .hidden __fixunssfsi
00014d60 g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
000144c0 g     F .text	00000004 Light_Sensor::init()
00018dc4 g     F .text	00000080 __smakebuf_r
0001a8ae g     F .text	00000010 strlen
00013c76 g     F .text	00000038 disk_read
00015ec8 g     F .text	00000024 pxPortInitialiseStack
00019c40 g     F .text	00000240 _printf_i
00018d58 g     F .text	00000006 __locale_ctype_ptr_l
000201b4 g     O .text	00000008 typeinfo for std::type_info
0001f034 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0001ef98 g     F .text	0000008a .hidden __gedf2
00015a5c g     F .text	00000024 UART3_IRQHandler
0001cb30 g     F .text	0000043e __gethex
2007c784 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001bd90 g     F .text	00000028 div
00012eae g     F .text	000000c8 f_getfree
00016c70 g     F .text	00000018 vTaskSetTimeOutState
000134c8 g     F .text	0000003c ff_convert
00018004 g     F .text	0000003a .hidden __aeabi_f2d
00015f14 g     F .text	00000020 vPortEnterCritical
00020668 g       .text	00000000 __symbol_table_start
00013738 g     F .text	00000024 sd_update_card_status
000140b4 g     F .text	00000028 flash_read_permanent_id
2007c780 g     O .bss	00000004 __malloc_free_list
2007c748  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00010ad4 g     F .text	00000010 nordic_rx_to_Stanby1
0001669e g     F .text	00000004 uxQueueMessagesWaitingFromISR
0001eb5c g     F .text	00000002 __env_lock
00017d44 g     F .text	0000027a .hidden __subdf3
0001e060 g     F .text	0000022c _vfprintf_r
00020668 g       .text	00000000 __preinit_array_start
0001d3be g     F .text	0000005e __lo0bits
0001e28c g     F .text	000002a8 __svfscanf_r
0001b6d8 g     F .text	00000150 __tzcalc_limits
00016e18 g     F .text	00000028 vRunTimeStatIsrEntry
0001ea78 g     F .text	000000e4 _ungetc_r
00017850 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
0001771e g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
000163e4 g     F .text	00000024 xQueueCreateMutex
00018198 g     F .text	00000160 .hidden __addsf3
2007c144 g     O .data	0000016c __global_locale
00010c94 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
00016488 g     F .text	00000068 xQueueGiveFromISR
0001d18c g     F .text	00000008 __gettzinfo
0001a72c g     F .text	00000010 raise
00014f4c g     F .text	00000054 _close
00018e54 g     F .text	00000010 free
0001fb94  w    O .text	00000020 typeinfo for Uart0
00019e80  w    F .text	000003c0 _scanf_float
00013a24 g     F .text	0000021c sd_ioctl
0001d28e g     F .text	00000076 __multadd
0001768c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001d260 g     F .text	0000002e _Bfree
0001d158 g     F .text	0000000e _getenv_r
000108f8 g     F .text	00000034 lpc_pconp



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	f1 5e 01 00 39 01 01 00 00 00 00 00 51 5f 01 00     .^..9.......Q_..
   1003c:	59 01 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     Y...............
   1004c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1005c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1006c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1007c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1008c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1009c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   100ac:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   100bc:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	000227a0 	.word	0x000227a0
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000002fc 	.word	0x000002fc

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	000004b4 	.word	0x000004b4

000100e0 <isr_hard_fault>:
isr_hard_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 ba86 	b.w	105fc <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 ba82 	b.w	105fc <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f004 fbf9 	bl	148f4 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	0001f29e 	.word	0x0001f29e

00010108 <isr_mem_fault>:
isr_mem_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f004 fbf2 	bl	148f4 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	0001f2a9 	.word	0x0001f2a9

00010118 <isr_bus_fault>:
isr_bus_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f004 fbea 	bl	148f4 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	0001f2b4 	.word	0x0001f2b4

00010128 <isr_usage_fault>:
isr_usage_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f004 fbe2 	bl	148f4 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	0001f2bf 	.word	0x0001f2bf

00010138 <isr_debug_mon>:
isr_debug_mon():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f004 fbda 	bl	148f4 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	0001f2cc 	.word	0x0001f2cc

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f004 fbd2 	bl	148f4 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	0001f2da 	.word	0x0001f2da

00010158 <isr_sys_tick>:
isr_sys_tick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f006 fe5d 	bl	16e18 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f005 ff19 	bl	15f94 <xPortSysTickHandler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f006 be6b 	b.w	16e40 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 fba6 	bl	108e6 <__set_PSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 fba6 	bl	108ec <__set_MSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f008 fda0 	bl	18d10 <__libc_init_array>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f81c 	bl	1020c <low_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f006 ff2e 	bl	17034 <high_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f007 f9dc 	bl	17594 <main>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb2c 	bl	1083c <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f004 fb85 	bl	148f4 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	0001f2ee 	.word	0x0001f2ee

00010200 <sys_get_boot_type>:
sys_get_boot_type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10200:	4b01      	ldr	r3, [pc, #4]	; (10208 <sys_get_boot_type+0x8>)
   10202:	7818      	ldrb	r0, [r3, #0]
   10204:	4770      	bx	lr
   10206:	bf00      	nop
   10208:	2007c30c 	.word	0x2007c30c

0001020c <low_level_init()>:
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   1020c:	b530      	push	{r4, r5, lr}
   1020e:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10210:	f005 fa66 	bl	156e0 <rtc_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10214:	4668      	mov	r0, sp
   10216:	f005 fa0b 	bl	15630 <rtc_gettime>
   1021a:	4c77      	ldr	r4, [pc, #476]	; (103f8 <low_level_init()+0x1ec>)
   1021c:	9b00      	ldr	r3, [sp, #0]
   1021e:	6023      	str	r3, [r4, #0]
   10220:	9b01      	ldr	r3, [sp, #4]
   10222:	6063      	str	r3, [r4, #4]
   10224:	9b02      	ldr	r3, [sp, #8]
   10226:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   10228:	f000 fa5a 	bl	106e0 <sys_clock_configure()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   1022c:	f000 fab2 	bl	10794 <sys_get_cpu_clock>
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10230:	4b72      	ldr	r3, [pc, #456]	; (103fc <low_level_init()+0x1f0>)
   10232:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10236:	283c      	cmp	r0, #60	; 0x3c
   10238:	4b71      	ldr	r3, [pc, #452]	; (10400 <low_level_init()+0x1f4>)
   1023a:	f200 809a 	bhi.w	10372 <low_level_init()+0x166>
   1023e:	2829      	cmp	r0, #41	; 0x29
   10240:	f080 80a1 	bcs.w	10386 <low_level_init()+0x17a>
   10244:	2814      	cmp	r0, #20
   10246:	f200 809b 	bhi.w	10380 <low_level_init()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1024a:	223a      	movs	r2, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1024c:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   1024e:	2308      	movs	r3, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10250:	2298      	movs	r2, #152	; 0x98
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10252:	496c      	ldr	r1, [pc, #432]	; (10404 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10254:	2000      	movs	r0, #0
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   10256:	760b      	strb	r3, [r1, #24]
   10258:	764b      	strb	r3, [r1, #25]
   1025a:	768b      	strb	r3, [r1, #26]
   1025c:	f881 3020 	strb.w	r3, [r1, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10260:	4b69      	ldr	r3, [pc, #420]	; (10408 <low_level_init()+0x1fc>)
   10262:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   10266:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1026a:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   1026e:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10272:	2290      	movs	r2, #144	; 0x90
   10274:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   10278:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   1027c:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10280:	2270      	movs	r2, #112	; 0x70
   10282:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   10286:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1028a:	2258      	movs	r2, #88	; 0x58
   1028c:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   10290:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   10294:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   10298:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   1029c:	2278      	movs	r2, #120	; 0x78
   1029e:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102a2:	22a0      	movs	r2, #160	; 0xa0
   102a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102a8:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102ac:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102b0:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102b4:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102b8:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102bc:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102c0:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102c4:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102c8:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102cc:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102d0:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102d4:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102d8:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102dc:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102e0:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102e4:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102e8:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   102ec:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   102f0:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   102f4:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   102f8:	68cb      	ldr	r3, [r1, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   102fa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   102fe:	041b      	lsls	r3, r3, #16
   10300:	0c1b      	lsrs	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10302:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   10306:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1030a:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   1030c:	f000 faf1 	bl	108f2 <__set_BASEPRI>
__enable_fault_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10310:	b661      	cpsie	f
__enable_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10312:	b662      	cpsie	i
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10314:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   10318:	f000 fa90 	bl	1083c <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   1031c:	483b      	ldr	r0, [pc, #236]	; (1040c <low_level_init()+0x200>)
   1031e:	f004 fd0b 	bl	14d38 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10322:	483b      	ldr	r0, [pc, #236]	; (10410 <low_level_init()+0x204>)
   10324:	f004 fd0e 	bl	14d44 <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   10328:	2300      	movs	r3, #0
   1032a:	4c3a      	ldr	r4, [pc, #232]	; (10414 <low_level_init()+0x208>)
   1032c:	4619      	mov	r1, r3
   1032e:	6820      	ldr	r0, [r4, #0]
   10330:	2202      	movs	r2, #2
   10332:	6880      	ldr	r0, [r0, #8]
   10334:	f00a f920 	bl	1a578 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10338:	2300      	movs	r3, #0
   1033a:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   1033c:	4c30      	ldr	r4, [pc, #192]	; (10400 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1033e:	4619      	mov	r1, r3
   10340:	2202      	movs	r2, #2
   10342:	6840      	ldr	r0, [r0, #4]
   10344:	f00a f918 	bl	1a578 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   10348:	f004 fd16 	bl	14d78 <syscalls_init>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   1034c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10350:	4d31      	ldr	r5, [pc, #196]	; (10418 <low_level_init()+0x20c>)
   10352:	f013 0f01 	tst.w	r3, #1
   10356:	d01f      	beq.n	10398 <low_level_init()+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   10358:	4830      	ldr	r0, [pc, #192]	; (1041c <low_level_init()+0x210>)
   1035a:	f000 fab7 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   1035e:	2301      	movs	r3, #1
   10360:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10362:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10366:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1036a:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   1036e:	b005      	add	sp, #20
   10370:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10372:	2850      	cmp	r0, #80	; 0x50
   10374:	d90a      	bls.n	1038c <low_level_init()+0x180>
   10376:	2864      	cmp	r0, #100	; 0x64
   10378:	d90b      	bls.n	10392 <low_level_init()+0x186>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1037a:	f245 023a 	movw	r2, #20538	; 0x503a
   1037e:	e765      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10380:	f241 023a 	movw	r2, #4154	; 0x103a
   10384:	e762      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   10386:	f242 023a 	movw	r2, #8250	; 0x203a
   1038a:	e75f      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   1038c:	f243 023a 	movw	r2, #12346	; 0x303a
   10390:	e75c      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   10392:	f244 023a 	movw	r2, #16442	; 0x403a
   10396:	e759      	b.n	1024c <low_level_init()+0x40>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   10398:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1039c:	079b      	lsls	r3, r3, #30
   1039e:	d509      	bpl.n	103b4 <low_level_init()+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103a0:	481f      	ldr	r0, [pc, #124]	; (10420 <low_level_init()+0x214>)
   103a2:	f000 fa93 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103a6:	2302      	movs	r3, #2
   103a8:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103aa:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103ae:	f043 0302 	orr.w	r3, r3, #2
   103b2:	e7da      	b.n	1036a <low_level_init()+0x15e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103b4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b8:	f013 0304 	ands.w	r3, r3, #4
   103bc:	d019      	beq.n	103f2 <low_level_init()+0x1e6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103be:	4b19      	ldr	r3, [pc, #100]	; (10424 <low_level_init()+0x218>)
   103c0:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103c2:	4b19      	ldr	r3, [pc, #100]	; (10428 <low_level_init()+0x21c>)
   103c4:	429a      	cmp	r2, r3
   103c6:	d108      	bne.n	103da <low_level_init()+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103c8:	2305      	movs	r3, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103ca:	4818      	ldr	r0, [pc, #96]	; (1042c <low_level_init()+0x220>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103cc:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103ce:	f000 fa7d 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103d2:	2200      	movs	r2, #0
   103d4:	4b13      	ldr	r3, [pc, #76]	; (10424 <low_level_init()+0x218>)
   103d6:	649a      	str	r2, [r3, #72]	; 0x48
   103d8:	e7c9      	b.n	1036e <low_level_init()+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103da:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103dc:	4814      	ldr	r0, [pc, #80]	; (10430 <low_level_init()+0x224>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103de:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103e0:	f000 fa74 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103e4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103e8:	f043 0304 	orr.w	r3, r3, #4
   103ec:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   103f0:	e7ef      	b.n	103d2 <low_level_init()+0x1c6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   103f2:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   103f4:	e7bb      	b.n	1036e <low_level_init()+0x162>
   103f6:	bf00      	nop
   103f8:	2007c300 	.word	0x2007c300
   103fc:	000f4240 	.word	0x000f4240
   10400:	400fc000 	.word	0x400fc000
   10404:	e000ed00 	.word	0xe000ed00
   10408:	e000e100 	.word	0xe000e100
   1040c:	000108b5 	.word	0x000108b5
   10410:	0001089d 	.word	0x0001089d
   10414:	2007c0e0 	.word	0x2007c0e0
   10418:	2007c30c 	.word	0x2007c30c
   1041c:	0001f124 	.word	0x0001f124
   10420:	0001f167 	.word	0x0001f167
   10424:	40024000 	.word	0x40024000
   10428:	deadbeef 	.word	0xdeadbeef
   1042c:	0001f141 	.word	0x0001f141
   10430:	0001f15e 	.word	0x0001f15e

00010434 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10434:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   10436:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   10438:	4b0f      	ldr	r3, [pc, #60]	; (10478 <lpc_sys_setup_system_timer+0x44>)
   1043a:	4c10      	ldr	r4, [pc, #64]	; (1047c <lpc_sys_setup_system_timer+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   1043c:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   1043e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10440:	f005 fc2e 	bl	15ca0 <lpc_timer_enable>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   10444:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   10448:	6823      	ldr	r3, [r4, #0]
   1044a:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   1044c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10450:	61da      	str	r2, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   10452:	2200      	movs	r2, #0
   10454:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   10456:	4a0a      	ldr	r2, [pc, #40]	; (10480 <lpc_sys_setup_system_timer+0x4c>)
   10458:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   1045a:	f240 2209 	movw	r2, #521	; 0x209
   1045e:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   10460:	695a      	ldr	r2, [r3, #20]
   10462:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   10466:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10468:	2218      	movs	r2, #24
   1046a:	4b06      	ldr	r3, [pc, #24]	; (10484 <lpc_sys_setup_system_timer+0x50>)
   1046c:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10470:	2204      	movs	r2, #4
   10472:	601a      	str	r2, [r3, #0]
   10474:	bd10      	pop	{r4, pc}
   10476:	bf00      	nop
   10478:	40008000 	.word	0x40008000
   1047c:	2007c318 	.word	0x2007c318
   10480:	0016e360 	.word	0x0016e360
   10484:	e000e100 	.word	0xe000e100

00010488 <sys_get_uptime_us>:
sys_get_uptime_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   10488:	4b08      	ldr	r3, [pc, #32]	; (104ac <sys_get_uptime_us+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1048a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   1048c:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   1048e:	4c08      	ldr	r4, [pc, #32]	; (104b0 <sys_get_uptime_us+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   10490:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10492:	8821      	ldrh	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   10494:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10496:	b289      	uxth	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   10498:	4282      	cmp	r2, r0
   1049a:	d8f9      	bhi.n	10490 <sys_get_uptime_us+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   1049c:	460b      	mov	r3, r1
   1049e:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   104a0:	ea42 0200 	orr.w	r2, r2, r0
   104a4:	4610      	mov	r0, r2
   104a6:	4619      	mov	r1, r3
   104a8:	bd10      	pop	{r4, pc}
   104aa:	bf00      	nop
   104ac:	2007c318 	.word	0x2007c318
   104b0:	2007c314 	.word	0x2007c314

000104b4 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   104b4:	b510      	push	{r4, lr}
   104b6:	4604      	mov	r4, r0
   104b8:	b08e      	sub	sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   104ba:	a806      	add	r0, sp, #24
   104bc:	f004 fb3c 	bl	14b38 <sys_get_mem_info>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   104c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   104c2:	9a06      	ldr	r2, [sp, #24]
   104c4:	9305      	str	r3, [sp, #20]
   104c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   104c8:	4907      	ldr	r1, [pc, #28]	; (104e8 <sys_get_mem_info_str+0x34>)
   104ca:	9304      	str	r3, [sp, #16]
   104cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   104ce:	4620      	mov	r0, r4
   104d0:	9303      	str	r3, [sp, #12]
   104d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104d4:	9302      	str	r3, [sp, #8]
   104d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   104d8:	9301      	str	r3, [sp, #4]
   104da:	9b08      	ldr	r3, [sp, #32]
   104dc:	9300      	str	r3, [sp, #0]
   104de:	9b07      	ldr	r3, [sp, #28]
   104e0:	f00a f940 	bl	1a764 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   104e4:	b00e      	add	sp, #56	; 0x38
   104e6:	bd10      	pop	{r4, pc}
   104e8:	0001f1a2 	.word	0x0001f1a2

000104ec <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   104ec:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   104ee:	4c04      	ldr	r4, [pc, #16]	; (10500 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   104f0:	6823      	ldr	r3, [r4, #0]
   104f2:	b91b      	cbnz	r3, 104fc <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   104f4:	2001      	movs	r0, #1
   104f6:	f004 fb1b 	bl	14b30 <operator new(unsigned int)>
   104fa:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   104fc:	6820      	ldr	r0, [r4, #0]
   104fe:	bd10      	pop	{r4, pc}
   10500:	2007c310 	.word	0x2007c310

00010504 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10504:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   10506:	4c2b      	ldr	r4, [pc, #172]	; (105b4 <TIMER1_IRQHandler+0xb0>)
   10508:	6823      	ldr	r3, [r4, #0]
   1050a:	4625      	mov	r5, r4
   1050c:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   1050e:	f012 0f10 	tst.w	r2, #16
   10512:	d00e      	beq.n	10532 <TIMER1_IRQHandler+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10514:	2210      	movs	r2, #16
   10516:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   10518:	f7ff ffe8 	bl	104ec <SingletonTemplate<IR_Sensor>::getInstance()>
   1051c:	6823      	ldr	r3, [r4, #0]
   1051e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10520:	f003 fecc 	bl	142bc <IR_Sensor::storeIrCode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10524:	6822      	ldr	r2, [r4, #0]
   10526:	6893      	ldr	r3, [r2, #8]
   10528:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   1052c:	3310      	adds	r3, #16
   1052e:	6213      	str	r3, [r2, #32]
   10530:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   10532:	0754      	lsls	r4, r2, #29
   10534:	d507      	bpl.n	10546 <TIMER1_IRQHandler+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   10536:	2204      	movs	r2, #4
   10538:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   1053a:	f7ff ffd7 	bl	104ec <SingletonTemplate<IR_Sensor>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   1053e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   10542:	f003 bec9 	b.w	142d8 <IR_Sensor::decodeIrCode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   10546:	07d0      	lsls	r0, r2, #31
   10548:	d507      	bpl.n	1055a <TIMER1_IRQHandler+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   1054a:	2201      	movs	r2, #1
   1054c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   1054e:	4a1a      	ldr	r2, [pc, #104]	; (105b8 <TIMER1_IRQHandler+0xb4>)
   10550:	8813      	ldrh	r3, [r2, #0]
   10552:	3301      	adds	r3, #1
   10554:	b29b      	uxth	r3, r3
   10556:	8013      	strh	r3, [r2, #0]
   10558:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   1055a:	0791      	lsls	r1, r2, #30
   1055c:	d515      	bpl.n	1058a <TIMER1_IRQHandler+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   1055e:	2202      	movs	r2, #2
   10560:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   10562:	f006 fbbd 	bl	16ce0 <xTaskGetSchedulerState>
   10566:	2802      	cmp	r0, #2
   10568:	d009      	beq.n	1057e <TIMER1_IRQHandler+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   1056a:	f000 fd33 	bl	10fd4 <wireless_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   1056e:	682a      	ldr	r2, [r5, #0]
   10570:	6893      	ldr	r3, [r2, #8]
   10572:	69d1      	ldr	r1, [r2, #28]
   10574:	440b      	add	r3, r1
   10576:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1057a:	61d3      	str	r3, [r2, #28]
   1057c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   1057e:	682a      	ldr	r2, [r5, #0]
   10580:	6953      	ldr	r3, [r2, #20]
   10582:	f023 0308 	bic.w	r3, r3, #8
   10586:	6153      	str	r3, [r2, #20]
   10588:	e7f1      	b.n	1056e <TIMER1_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1058a:	0712      	lsls	r2, r2, #28
   1058c:	d50e      	bpl.n	105ac <TIMER1_IRQHandler+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   1058e:	2208      	movs	r2, #8
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   10590:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   10592:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   10594:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   10598:	7211      	strb	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   1059a:	2155      	movs	r1, #85	; 0x55
   1059c:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   1059e:	689a      	ldr	r2, [r3, #8]
   105a0:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   105a4:	f502 7258 	add.w	r2, r2, #864	; 0x360
   105a8:	625a      	str	r2, [r3, #36]	; 0x24
   105aa:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   105ac:	4803      	ldr	r0, [pc, #12]	; (105bc <TIMER1_IRQHandler+0xb8>)
   105ae:	f009 febb 	bl	1a328 <puts>
   105b2:	e7fe      	b.n	105b2 <TIMER1_IRQHandler+0xae>
   105b4:	2007c318 	.word	0x2007c318
   105b8:	2007c314 	.word	0x2007c314
   105bc:	0001f181 	.word	0x0001f181

000105c0 <isr_forwarder_routine>:
isr_forwarder_routine():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   105c0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   105c2:	f006 fc29 	bl	16e18 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105c6:	4b09      	ldr	r3, [pc, #36]	; (105ec <isr_forwarder_routine+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105c8:	4a09      	ldr	r2, [pc, #36]	; (105f0 <isr_forwarder_routine+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105ca:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105cc:	4b09      	ldr	r3, [pc, #36]	; (105f4 <isr_forwarder_routine+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105ce:	3910      	subs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105d0:	b2c9      	uxtb	r1, r1
   105d2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105d6:	4293      	cmp	r3, r2
   105d8:	d103      	bne.n	105e2 <isr_forwarder_routine+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   105da:	4807      	ldr	r0, [pc, #28]	; (105f8 <isr_forwarder_routine+0x38>)
   105dc:	f004 f999 	bl	14912 <u0_dbg_printf>
   105e0:	e7fe      	b.n	105e0 <isr_forwarder_routine+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   105e2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   105e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   105e8:	f006 bc2a 	b.w	16e40 <vRunTimeStatIsrExit>
   105ec:	e000ed04 	.word	0xe000ed04
   105f0:	00010149 	.word	0x00010149
   105f4:	2007c000 	.word	0x2007c000
   105f8:	0001f267 	.word	0x0001f267

000105fc <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   105fc:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   105fe:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10600:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10602:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10604:	4a11      	ldr	r2, [pc, #68]	; (1064c <isr_hard_fault_handler+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10606:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   10608:	6883      	ldr	r3, [r0, #8]
   1060a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   1060c:	68c3      	ldr	r3, [r0, #12]
   1060e:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10610:	6903      	ldr	r3, [r0, #16]
   10612:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10614:	6943      	ldr	r3, [r0, #20]
   10616:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   10618:	6983      	ldr	r3, [r0, #24]
   1061a:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   1061c:	69c3      	ldr	r3, [r0, #28]
   1061e:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10620:	4b0b      	ldr	r3, [pc, #44]	; (10650 <isr_hard_fault_handler+0x54>)
   10622:	649a      	str	r2, [r3, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10624:	9a06      	ldr	r2, [sp, #24]
   10626:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   10628:	9a05      	ldr	r2, [sp, #20]
   1062a:	3a01      	subs	r2, #1
   1062c:	651a      	str	r2, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   1062e:	9a07      	ldr	r2, [sp, #28]
   10630:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10632:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10636:	22aa      	movs	r2, #170	; 0xaa
   10638:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1063a:	2200      	movs	r2, #0
   1063c:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   1063e:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10640:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10642:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10644:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   10646:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   10648:	b008      	add	sp, #32
   1064a:	4770      	bx	lr
   1064c:	deadbeef 	.word	0xdeadbeef
   10650:	40024000 	.word	0x40024000

00010654 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   10654:	22aa      	movs	r2, #170	; 0xaa
   10656:	4b03      	ldr	r3, [pc, #12]	; (10664 <sys_clock_pll0_feed()+0x10>)
   10658:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   1065c:	2255      	movs	r2, #85	; 0x55
   1065e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10662:	4770      	bx	lr
   10664:	400fc000 	.word	0x400fc000

00010668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   10668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   1066c:	2400      	movs	r4, #0
   1066e:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10670:	6014      	str	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10672:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10674:	f240 14ff 	movw	r4, #511	; 0x1ff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   10678:	f8df a060 	ldr.w	sl, [pc, #96]	; 106dc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1067c:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10680:	2600      	movs	r6, #0
   10682:	fb04 5b05 	mla	fp, r4, r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   10686:	f106 0c01 	add.w	ip, r6, #1
   1068a:	fbbb f8fc 	udiv	r8, fp, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   1068e:	4f12      	ldr	r7, [pc, #72]	; (106d8 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   10690:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   10694:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   10698:	42bd      	cmp	r5, r7
   1069a:	d91a      	bls.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   1069c:	4666      	mov	r6, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   1069e:	2e20      	cmp	r6, #32
   106a0:	d1f1      	bne.n	10686 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106a2:	3c01      	subs	r4, #1
   106a4:	2c05      	cmp	r4, #5
   106a6:	d1e9      	bne.n	1067c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   106a8:	2000      	movs	r0, #0
   106aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   106ae:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   106b2:	464d      	mov	r5, r9
   106b4:	d0f2      	beq.n	1069c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   106b6:	f105 0901 	add.w	r9, r5, #1
   106ba:	fbb8 fef9 	udiv	lr, r8, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   106be:	45d6      	cmp	lr, sl
   106c0:	d8f5      	bhi.n	106ae <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106c2:	4586      	cmp	lr, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   106c4:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   106c6:	6016      	str	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   106c8:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106ca:	d1f0      	bne.n	106ae <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   106cc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106d2:	2503      	movs	r5, #3
   106d4:	e7ef      	b.n	106b6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   106d6:	bf00      	nop
   106d8:	00043238 	.word	0x00043238
   106dc:	000186a0 	.word	0x000186a0

000106e0 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   106e0:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   106e2:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106e4:	492a      	ldr	r1, [pc, #168]	; (10790 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   106e6:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106e8:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   106ec:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106ee:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   106f2:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   106f6:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   106f8:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106fa:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   106fe:	f7ff ffa9 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   10702:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   10706:	f023 0301 	bic.w	r3, r3, #1
   1070a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   1070e:	f7ff ffa1 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   10712:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   10716:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   1071a:	f7ff ff9b 	bl	10654 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   1071e:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   10720:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10724:	aa02      	add	r2, sp, #8
   10726:	a901      	add	r1, sp, #4
   10728:	f64b 3080 	movw	r0, #48000	; 0xbb80
   1072c:	f7ff ff9c 	bl	10668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   10730:	b930      	cbnz	r0, 10740 <sys_clock_configure()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   10732:	462b      	mov	r3, r5
   10734:	aa02      	add	r2, sp, #8
   10736:	a901      	add	r1, sp, #4
   10738:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   1073c:	f7ff ff94 	bl	10668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   10740:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10742:	4913      	ldr	r1, [pc, #76]	; (10790 <sys_clock_configure()+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   10744:	f363 040f 	bfi	r4, r3, #0, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   10748:	9b02      	ldr	r3, [sp, #8]
   1074a:	f363 4417 	bfi	r4, r3, #16, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   1074e:	2300      	movs	r3, #0
   10750:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   10754:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   10758:	f7ff ff7c 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   1075c:	2301      	movs	r3, #1
   1075e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10762:	f7ff ff77 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   10766:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1076a:	015b      	lsls	r3, r3, #5
   1076c:	d5fb      	bpl.n	10766 <sys_clock_configure()+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   1076e:	9b03      	ldr	r3, [sp, #12]
   10770:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10774:	2303      	movs	r3, #3
   10776:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1077a:	f7ff ff6b 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   1077e:	4a04      	ldr	r2, [pc, #16]	; (10790 <sys_clock_configure()+0xb0>)
   10780:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   10784:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   10788:	d0fa      	beq.n	10780 <sys_clock_configure()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   1078a:	b005      	add	sp, #20
   1078c:	bd30      	pop	{r4, r5, pc}
   1078e:	bf00      	nop
   10790:	400fc000 	.word	0x400fc000

00010794 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10794:	4b24      	ldr	r3, [pc, #144]	; (10828 <sys_get_cpu_clock+0x94>)
   10796:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1079a:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1079e:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107a0:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   107a4:	f002 0203 	and.w	r2, r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107a8:	d12d      	bne.n	10806 <sys_get_cpu_clock+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107aa:	2a01      	cmp	r2, #1
   107ac:	d016      	beq.n	107dc <sys_get_cpu_clock+0x48>
   107ae:	2a02      	cmp	r2, #2
   107b0:	d01e      	beq.n	107f0 <sys_get_cpu_clock+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107b2:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107b6:	481d      	ldr	r0, [pc, #116]	; (1082c <sys_get_cpu_clock+0x98>)
   107b8:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107bc:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107c0:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107c4:	fb01 0000 	mla	r0, r1, r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107c8:	f3c2 4207 	ubfx	r2, r2, #16, #8
   107cc:	3201      	adds	r2, #1
   107ce:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107d2:	b2db      	uxtb	r3, r3
   107d4:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   107d6:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   107da:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107dc:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107e0:	4813      	ldr	r0, [pc, #76]	; (10830 <sys_get_cpu_clock+0x9c>)
   107e2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107e6:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107ea:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   107ee:	e7e9      	b.n	107c4 <sys_get_cpu_clock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107f0:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107f4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107f8:	f3c0 000e 	ubfx	r0, r0, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107fc:	3001      	adds	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107fe:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10802:	0400      	lsls	r0, r0, #16
   10804:	e7e0      	b.n	107c8 <sys_get_cpu_clock+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10806:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1080a:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1080c:	b2c0      	uxtb	r0, r0
   1080e:	f100 0301 	add.w	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10812:	d003      	beq.n	1081c <sys_get_cpu_clock+0x88>
   10814:	2a02      	cmp	r2, #2
   10816:	d003      	beq.n	10820 <sys_get_cpu_clock+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10818:	4806      	ldr	r0, [pc, #24]	; (10834 <sys_get_cpu_clock+0xa0>)
   1081a:	e7dc      	b.n	107d6 <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1081c:	4806      	ldr	r0, [pc, #24]	; (10838 <sys_get_cpu_clock+0xa4>)
   1081e:	e7da      	b.n	107d6 <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10820:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10824:	e7d7      	b.n	107d6 <sys_get_cpu_clock+0x42>
   10826:	bf00      	nop
   10828:	400fc000 	.word	0x400fc000
   1082c:	007a1200 	.word	0x007a1200
   10830:	016e3600 	.word	0x016e3600
   10834:	003d0900 	.word	0x003d0900
   10838:	00b71b00 	.word	0x00b71b00

0001083c <uart0_init>:
uart0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   1083c:	b510      	push	{r4, lr}
   1083e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10840:	f7ff ffa8 	bl	10794 <sys_get_cpu_clock>
   10844:	0124      	lsls	r4, r4, #4
   10846:	fbb0 f0f4 	udiv	r0, r0, r4
   1084a:	f007 fbb9 	bl	17fc0 <__aeabi_ui2d>
   1084e:	2200      	movs	r2, #0
   10850:	4b10      	ldr	r3, [pc, #64]	; (10894 <uart0_init+0x58>)
   10852:	f007 fa79 	bl	17d48 <__adddf3>
   10856:	f007 fc29 	bl	180ac <__aeabi_d2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   1085a:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   1085c:	b284      	uxth	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   1085e:	2003      	movs	r0, #3
   10860:	f000 f84a 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10864:	2101      	movs	r1, #1
   10866:	2003      	movs	r0, #3
   10868:	f000 f860 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   1086c:	4b0a      	ldr	r3, [pc, #40]	; (10898 <uart0_init+0x5c>)
   1086e:	681a      	ldr	r2, [r3, #0]
   10870:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10874:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   10876:	681a      	ldr	r2, [r3, #0]
   10878:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1087c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   1087e:	2280      	movs	r2, #128	; 0x80
   10880:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   10884:	731a      	strb	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   10886:	0a22      	lsrs	r2, r4, #8
   10888:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   1088a:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   1088c:	b2e4      	uxtb	r4, r4
   1088e:	701c      	strb	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   10890:	731a      	strb	r2, [r3, #12]
   10892:	bd10      	pop	{r4, pc}
   10894:	3fe00000 	.word	0x3fe00000
   10898:	4002c000 	.word	0x4002c000

0001089c <uart0_getchar>:
uart0_getchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   1089c:	4a03      	ldr	r2, [pc, #12]	; (108ac <uart0_getchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   1089e:	6813      	ldr	r3, [r2, #0]
   108a0:	07db      	lsls	r3, r3, #31
   108a2:	d5fc      	bpl.n	1089e <uart0_getchar+0x2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   108a4:	4b02      	ldr	r3, [pc, #8]	; (108b0 <uart0_getchar+0x14>)
   108a6:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   108a8:	4770      	bx	lr
   108aa:	bf00      	nop
   108ac:	4000c014 	.word	0x4000c014
   108b0:	4000c000 	.word	0x4000c000

000108b4 <uart0_putchar>:
uart0_putchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   108b4:	4b03      	ldr	r3, [pc, #12]	; (108c4 <uart0_putchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   108b6:	4a04      	ldr	r2, [pc, #16]	; (108c8 <uart0_putchar+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   108b8:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   108ba:	6813      	ldr	r3, [r2, #0]
   108bc:	065b      	lsls	r3, r3, #25
   108be:	d5fc      	bpl.n	108ba <uart0_putchar+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   108c0:	2001      	movs	r0, #1
   108c2:	4770      	bx	lr
   108c4:	4000c000 	.word	0x4000c000
   108c8:	4000c014 	.word	0x4000c014

000108cc <uart0_puts>:
uart0_puts():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   108cc:	b508      	push	{r3, lr}
   108ce:	1e41      	subs	r1, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   108d0:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   108d4:	b920      	cbnz	r0, 108e0 <uart0_puts+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   108d6:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   108d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   108dc:	f7ff bfea 	b.w	108b4 <uart0_putchar>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   108e0:	f7ff ffe8 	bl	108b4 <uart0_putchar>
   108e4:	e7f4      	b.n	108d0 <uart0_puts+0x4>

000108e6 <__set_PSP>:
__set_PSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   108e6:	f380 8809 	msr	PSP, r0
   108ea:	4770      	bx	lr

000108ec <__set_MSP>:
__set_MSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   108ec:	f380 8808 	msr	MSP, r0
   108f0:	4770      	bx	lr

000108f2 <__set_BASEPRI>:
__set_BASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   108f2:	f380 8811 	msr	BASEPRI, r0
   108f6:	4770      	bx	lr

000108f8 <lpc_pconp>:
lpc_pconp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   108f8:	b538      	push	{r3, r4, r5, lr}
   108fa:	460d      	mov	r5, r1
   108fc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   108fe:	f005 fb09 	bl	15f14 <vPortEnterCritical>
   10902:	4a09      	ldr	r2, [pc, #36]	; (10928 <lpc_pconp+0x30>)
   10904:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   10906:	b14d      	cbz	r5, 1091c <lpc_pconp+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   10908:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   1090c:	40a3      	lsls	r3, r4
   1090e:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10910:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10914:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   10918:	f005 bb0c 	b.w	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   1091c:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10920:	40a3      	lsls	r3, r4
   10922:	ea21 0303 	bic.w	r3, r1, r3
   10926:	e7f3      	b.n	10910 <lpc_pconp+0x18>
   10928:	400fc000 	.word	0x400fc000

0001092c <lpc_pclk>:
lpc_pclk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   1092c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10930:	ea4f 0840 	mov.w	r8, r0, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10934:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   10936:	f005 faed 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1093a:	4642      	mov	r2, r8
   1093c:	2003      	movs	r0, #3
   1093e:	2100      	movs	r1, #0
   10940:	f007 f9f0 	bl	17d24 <__aeabi_llsl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10944:	4f0a      	ldr	r7, [pc, #40]	; (10970 <lpc_pclk+0x44>)
   10946:	4642      	mov	r2, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   10948:	e9d7 4500 	ldrd	r4, r5, [r7]
   1094c:	ea24 0400 	bic.w	r4, r4, r0
   10950:	ea25 0501 	bic.w	r5, r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10954:	f006 0003 	and.w	r0, r6, #3
   10958:	2100      	movs	r1, #0
   1095a:	f007 f9e3 	bl	17d24 <__aeabi_llsl>
   1095e:	4320      	orrs	r0, r4
   10960:	4329      	orrs	r1, r5
   10962:	e9c7 0100 	strd	r0, r1, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   10966:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   1096a:	f005 bae3 	b.w	15f34 <vPortExitCritical>
   1096e:	bf00      	nop
   10970:	400fc1a8 	.word	0x400fc1a8

00010974 <nordic_transfer>:
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   10974:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   10976:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1097a:	4c36      	ldr	r4, [pc, #216]	; (10a54 <nordic_transfer+0xe0>)
   1097c:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   1097e:	4c36      	ldr	r4, [pc, #216]	; (10a58 <nordic_transfer+0xe4>)
   10980:	60a0      	str	r0, [r4, #8]
   10982:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   10984:	68c4      	ldr	r4, [r0, #12]
   10986:	06e4      	lsls	r4, r4, #27
   10988:	d4fc      	bmi.n	10984 <nordic_transfer+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1098a:	6880      	ldr	r0, [r0, #8]
   1098c:	b2c0      	uxtb	r0, r0
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   1098e:	b963      	cbnz	r3, 109aa <nordic_transfer+0x36>
   10990:	460b      	mov	r3, r1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   10992:	4c31      	ldr	r4, [pc, #196]	; (10a58 <nordic_transfer+0xe4>)
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   10994:	1a5d      	subs	r5, r3, r1
   10996:	4295      	cmp	r5, r2
   10998:	da09      	bge.n	109ae <nordic_transfer+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   1099a:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   1099e:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109a0:	68e5      	ldr	r5, [r4, #12]
   109a2:	06ed      	lsls	r5, r5, #27
   109a4:	d4fc      	bmi.n	109a0 <nordic_transfer+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109a6:	68a5      	ldr	r5, [r4, #8]
   109a8:	e7f4      	b.n	10994 <nordic_transfer+0x20>
   109aa:	4b2b      	ldr	r3, [pc, #172]	; (10a58 <nordic_transfer+0xe4>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   109ac:	b922      	cbnz	r2, 109b8 <nordic_transfer+0x44>
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   109ae:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   109b2:	4b28      	ldr	r3, [pc, #160]	; (10a54 <nordic_transfer+0xe0>)
   109b4:	619a      	str	r2, [r3, #24]
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   109b6:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   109b8:	2a07      	cmp	r2, #7
   109ba:	780c      	ldrb	r4, [r1, #0]
   109bc:	dd29      	ble.n	10a12 <nordic_transfer+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109be:	609c      	str	r4, [r3, #8]
   109c0:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   109c2:	3a08      	subs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109c4:	609c      	str	r4, [r3, #8]
   109c6:	788c      	ldrb	r4, [r1, #2]
   109c8:	609c      	str	r4, [r3, #8]
   109ca:	78cc      	ldrb	r4, [r1, #3]
   109cc:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109ce:	790c      	ldrb	r4, [r1, #4]
   109d0:	609c      	str	r4, [r3, #8]
   109d2:	794c      	ldrb	r4, [r1, #5]
   109d4:	609c      	str	r4, [r3, #8]
   109d6:	798c      	ldrb	r4, [r1, #6]
   109d8:	609c      	str	r4, [r3, #8]
   109da:	79cd      	ldrb	r5, [r1, #7]
   109dc:	f101 0408 	add.w	r4, r1, #8
   109e0:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   109e2:	699d      	ldr	r5, [r3, #24]
   109e4:	076d      	lsls	r5, r5, #29
   109e6:	d5fc      	bpl.n	109e2 <nordic_transfer+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   109e8:	689d      	ldr	r5, [r3, #8]
   109ea:	700d      	strb	r5, [r1, #0]
   109ec:	689d      	ldr	r5, [r3, #8]
   109ee:	704d      	strb	r5, [r1, #1]
   109f0:	689d      	ldr	r5, [r3, #8]
   109f2:	708d      	strb	r5, [r1, #2]
   109f4:	689d      	ldr	r5, [r3, #8]
   109f6:	70cd      	strb	r5, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   109f8:	68dd      	ldr	r5, [r3, #12]
   109fa:	06ed      	lsls	r5, r5, #27
   109fc:	d4fc      	bmi.n	109f8 <nordic_transfer+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   109fe:	689d      	ldr	r5, [r3, #8]
   10a00:	710d      	strb	r5, [r1, #4]
   10a02:	689d      	ldr	r5, [r3, #8]
   10a04:	714d      	strb	r5, [r1, #5]
   10a06:	689d      	ldr	r5, [r3, #8]
   10a08:	718d      	strb	r5, [r1, #6]
   10a0a:	689d      	ldr	r5, [r3, #8]
   10a0c:	71cd      	strb	r5, [r1, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a0e:	4621      	mov	r1, r4
   10a10:	e7cc      	b.n	109ac <nordic_transfer+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   10a12:	2a03      	cmp	r2, #3
   10a14:	dd14      	ble.n	10a40 <nordic_transfer+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a16:	609c      	str	r4, [r3, #8]
   10a18:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   10a1a:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a1c:	609c      	str	r4, [r3, #8]
   10a1e:	788c      	ldrb	r4, [r1, #2]
   10a20:	609c      	str	r4, [r3, #8]
   10a22:	78cd      	ldrb	r5, [r1, #3]
   10a24:	1d0c      	adds	r4, r1, #4
   10a26:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   10a28:	68dd      	ldr	r5, [r3, #12]
   10a2a:	06ed      	lsls	r5, r5, #27
   10a2c:	d4fc      	bmi.n	10a28 <nordic_transfer+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a2e:	689d      	ldr	r5, [r3, #8]
   10a30:	700d      	strb	r5, [r1, #0]
   10a32:	689d      	ldr	r5, [r3, #8]
   10a34:	704d      	strb	r5, [r1, #1]
   10a36:	689d      	ldr	r5, [r3, #8]
   10a38:	708d      	strb	r5, [r1, #2]
   10a3a:	689d      	ldr	r5, [r3, #8]
   10a3c:	70cd      	strb	r5, [r1, #3]
   10a3e:	e7e6      	b.n	10a0e <nordic_transfer+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   10a40:	1c4d      	adds	r5, r1, #1
   10a42:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   10a44:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   10a46:	68dc      	ldr	r4, [r3, #12]
   10a48:	06e4      	lsls	r4, r4, #27
   10a4a:	d4fc      	bmi.n	10a46 <nordic_transfer+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   10a4c:	689c      	ldr	r4, [r3, #8]
   10a4e:	700c      	strb	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   10a50:	4629      	mov	r1, r5
   10a52:	e7ab      	b.n	109ac <nordic_transfer+0x38>
   10a54:	2009c000 	.word	0x2009c000
   10a58:	40088000 	.word	0x40088000

00010a5c <nordic_readRegister>:
nordic_readRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   10a5c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   10a5e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   10a60:	a902      	add	r1, sp, #8
   10a62:	f801 3d01 	strb.w	r3, [r1, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   10a66:	2301      	movs	r3, #1
   10a68:	f000 001f 	and.w	r0, r0, #31
   10a6c:	461a      	mov	r2, r3
   10a6e:	f7ff ff81 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   10a72:	f89d 0007 	ldrb.w	r0, [sp, #7]
   10a76:	b003      	add	sp, #12
   10a78:	f85d fb04 	ldr.w	pc, [sp], #4

00010a7c <nordic_writeRegister>:
nordic_writeRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   10a7c:	b513      	push	{r0, r1, r4, lr}
   10a7e:	ac02      	add	r4, sp, #8
   10a80:	f804 1d01 	strb.w	r1, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   10a84:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   10a88:	2300      	movs	r3, #0
   10a8a:	2201      	movs	r2, #1
   10a8c:	4621      	mov	r1, r4
   10a8e:	f040 0020 	orr.w	r0, r0, #32
   10a92:	f7ff ff6f 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   10a96:	b002      	add	sp, #8
   10a98:	bd10      	pop	{r4, pc}

00010a9a <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   10a9a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   10a9c:	2017      	movs	r0, #23
   10a9e:	f7ff ffdd 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   10aa2:	f3c0 1000 	ubfx	r0, r0, #4, #1
   10aa6:	bd08      	pop	{r3, pc}

00010aa8 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   10aa8:	2170      	movs	r1, #112	; 0x70
   10aaa:	2007      	movs	r0, #7
   10aac:	f7ff bfe6 	b.w	10a7c <nordic_writeRegister>

00010ab0 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   10ab0:	460a      	mov	r2, r1
   10ab2:	2300      	movs	r3, #0
   10ab4:	4601      	mov	r1, r0
   10ab6:	20a0      	movs	r0, #160	; 0xa0
   10ab8:	f7ff bf5c 	b.w	10974 <nordic_transfer>

00010abc <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   10abc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10abe:	2000      	movs	r0, #0
   10ac0:	f7ff ffcc 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   10ac4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10ac8:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   10acc:	2000      	movs	r0, #0
   10ace:	f7ff bfd5 	b.w	10a7c <nordic_writeRegister>
   10ad2:	Address 0x0000000000010ad2 is out of bounds.


00010ad4 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10ad4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10ad8:	4b01      	ldr	r3, [pc, #4]	; (10ae0 <nordic_rx_to_Stanby1+0xc>)
   10ada:	61da      	str	r2, [r3, #28]
   10adc:	4770      	bx	lr
   10ade:	bf00      	nop
   10ae0:	2009c020 	.word	0x2009c020

00010ae4 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   10ae4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   10ae6:	2000      	movs	r0, #0
   10ae8:	f7ff ffb8 	bl	10a5c <nordic_readRegister>
   10aec:	f040 0101 	orr.w	r1, r0, #1
   10af0:	b2c9      	uxtb	r1, r1
   10af2:	2000      	movs	r0, #0
   10af4:	f7ff ffc2 	bl	10a7c <nordic_writeRegister>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   10af8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10afc:	4b01      	ldr	r3, [pc, #4]	; (10b04 <nordic_standby1_to_rx+0x20>)
   10afe:	619a      	str	r2, [r3, #24]
   10b00:	bd08      	pop	{r3, pc}
   10b02:	bf00      	nop
   10b04:	2009c020 	.word	0x2009c020

00010b08 <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   10b08:	2120      	movs	r1, #32
   10b0a:	2007      	movs	r0, #7
   10b0c:	f7ff bfb6 	b.w	10a7c <nordic_writeRegister>

00010b10 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   10b10:	2300      	movs	r3, #0
   10b12:	20e1      	movs	r0, #225	; 0xe1
   10b14:	461a      	mov	r2, r3
   10b16:	4619      	mov	r1, r3
   10b18:	f7ff bf2c 	b.w	10974 <nordic_transfer>

00010b1c <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   10b1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10b1e:	4604      	mov	r4, r0
   10b20:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   10b22:	f7ff fff5 	bl	10b10 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   10b26:	4620      	mov	r0, r4
   10b28:	4629      	mov	r1, r5
   10b2a:	f7ff ffc1 	bl	10ab0 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   10b2e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b32:	4c0c      	ldr	r4, [pc, #48]	; (10b64 <nordic_mode1_send_single_packet+0x48>)
   10b34:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   10b36:	2200      	movs	r2, #0
   10b38:	f8ad 2006 	strh.w	r2, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10b40:	3301      	adds	r3, #1
   10b42:	b29b      	uxth	r3, r3
   10b44:	f8ad 3006 	strh.w	r3, [sp, #6]
   10b48:	b933      	cbnz	r3, 10b58 <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10b4a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10b4e:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   10b50:	f7ff ffde 	bl	10b10 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   10b54:	b003      	add	sp, #12
   10b56:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b58:	f7ff ff9f 	bl	10a9a <nordic_is_tx_fifo_empty>
   10b5c:	2800      	cmp	r0, #0
   10b5e:	d0ed      	beq.n	10b3c <nordic_mode1_send_single_packet+0x20>
   10b60:	e7f3      	b.n	10b4a <nordic_mode1_send_single_packet+0x2e>
   10b62:	bf00      	nop
   10b64:	2009c020 	.word	0x2009c020

00010b68 <nordic_is_packet_available>:
nordic_is_packet_available():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   10b68:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   10b6a:	2017      	movs	r0, #23
   10b6c:	f7ff ff76 	bl	10a5c <nordic_readRegister>
   10b70:	43c0      	mvns	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   10b72:	f000 0001 	and.w	r0, r0, #1
   10b76:	bd08      	pop	{r3, pc}

00010b78 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   10b78:	2140      	movs	r1, #64	; 0x40
   10b7a:	2007      	movs	r0, #7
   10b7c:	f7ff bf7e 	b.w	10a7c <nordic_writeRegister>

00010b80 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   10b80:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   10b82:	460a      	mov	r2, r1
   10b84:	2301      	movs	r3, #1
   10b86:	4601      	mov	r1, r0
   10b88:	2061      	movs	r0, #97	; 0x61
   10b8a:	f7ff fef3 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   10b8e:	f3c0 0042 	ubfx	r0, r0, #1, #3
   10b92:	bd08      	pop	{r3, pc}

00010b94 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   10b94:	2300      	movs	r3, #0
   10b96:	20e2      	movs	r0, #226	; 0xe2
   10b98:	461a      	mov	r2, r3
   10b9a:	4619      	mov	r1, r3
   10b9c:	f7ff beea 	b.w	10974 <nordic_transfer>

00010ba0 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   10ba0:	b570      	push	{r4, r5, r6, lr}
   10ba2:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10ba4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   10ba6:	460d      	mov	r5, r1
   10ba8:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10baa:	f7ff ff57 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bae:	b166      	cbz	r6, 10bca <nordic_set_intr_signals+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   10bb0:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bb4:	b16d      	cbz	r5, 10bd2 <nordic_set_intr_signals+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   10bb6:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bba:	b16c      	cbz	r4, 10bd8 <nordic_set_intr_signals+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   10bbc:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   10bc0:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   10bc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   10bc6:	f7ff bf59 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bca:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   10bce:	b2c0      	uxtb	r0, r0
   10bd0:	e7f0      	b.n	10bb4 <nordic_set_intr_signals+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bd2:	f040 0120 	orr.w	r1, r0, #32
   10bd6:	e7f0      	b.n	10bba <nordic_set_intr_signals+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bd8:	f041 0110 	orr.w	r1, r1, #16
   10bdc:	e7f0      	b.n	10bc0 <nordic_set_intr_signals+0x20>

00010bde <nordic_set_crc>:
nordic_set_crc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   10bde:	b510      	push	{r4, lr}
   10be0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   10be2:	2000      	movs	r0, #0
   10be4:	f7ff ff3a 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   10be8:	b934      	cbnz	r4, 10bf8 <nordic_set_crc+0x1a>
   10bea:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   10bee:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   10bf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   10bf4:	f7ff bf42 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   10bf8:	2c01      	cmp	r4, #1
   10bfa:	d104      	bne.n	10c06 <nordic_set_crc+0x28>
   10bfc:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   10c00:	f041 0108 	orr.w	r1, r1, #8
   10c04:	e7f3      	b.n	10bee <nordic_set_crc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c06:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   10c08:	bf14      	ite	ne
   10c0a:	f040 0108 	orrne.w	r1, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c0e:	f040 010c 	orreq.w	r1, r0, #12
   10c12:	b2c9      	uxtb	r1, r1
   10c14:	e7eb      	b.n	10bee <nordic_set_crc+0x10>

00010c16 <nordic_power_up>:
nordic_power_up():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   10c16:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c18:	2000      	movs	r0, #0
   10c1a:	f7ff ff1f 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   10c1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c22:	f040 0102 	orr.w	r1, r0, #2
   10c26:	b2c9      	uxtb	r1, r1
   10c28:	2000      	movs	r0, #0
   10c2a:	f7ff bf27 	b.w	10a7c <nordic_writeRegister>

00010c2e <nordic_power_down>:
nordic_power_down():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   10c2e:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c30:	2000      	movs	r0, #0
   10c32:	f7ff ff13 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   10c36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c3a:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   10c3e:	2000      	movs	r0, #0
   10c40:	f7ff bf1c 	b.w	10a7c <nordic_writeRegister>

00010c44 <nordic_set_channel>:
nordic_set_channel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c44:	f640 13dd 	movw	r3, #2525	; 0x9dd
   10c48:	4298      	cmp	r0, r3
   10c4a:	d80b      	bhi.n	10c64 <nordic_set_channel+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   10c4c:	f640 1362 	movw	r3, #2402	; 0x962
   10c50:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   10c54:	bf38      	it	cc
   10c56:	4618      	movcc	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   10c58:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   10c5c:	b2c9      	uxtb	r1, r1
   10c5e:	2005      	movs	r0, #5
   10c60:	f7ff bf0c 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c64:	4618      	mov	r0, r3
   10c66:	e7f7      	b.n	10c58 <nordic_set_channel+0x14>

00010c68 <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   10c68:	b510      	push	{r4, lr}
   10c6a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   10c6c:	2006      	movs	r0, #6
   10c6e:	f7ff fef5 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   10c72:	2cfa      	cmp	r4, #250	; 0xfa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   10c74:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   10c78:	d106      	bne.n	10c88 <nordic_set_air_data_rate+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   10c7a:	f041 0120 	orr.w	r1, r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   10c7e:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   10c80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   10c84:	f7ff befa 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   10c88:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   10c8c:	bf08      	it	eq
   10c8e:	f041 0108 	orreq.w	r1, r1, #8
   10c92:	e7f4      	b.n	10c7e <nordic_set_air_data_rate+0x16>

00010c94 <nordic_set_power_level>:
nordic_set_power_level():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   10c94:	b510      	push	{r4, lr}
   10c96:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10c98:	2006      	movs	r0, #6
   10c9a:	f7ff fedf 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10c9e:	2c03      	cmp	r4, #3
   10ca0:	bf28      	it	cs
   10ca2:	2403      	movcs	r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10ca4:	f020 0106 	bic.w	r1, r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10ca8:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   10cac:	b2c9      	uxtb	r1, r1
   10cae:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   10cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   10cb4:	f7ff bee2 	b.w	10a7c <nordic_writeRegister>

00010cb8 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   10cb8:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   10cbc:	bf28      	it	cs
   10cbe:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   10cc2:	28fa      	cmp	r0, #250	; 0xfa
   10cc4:	bf38      	it	cc
   10cc6:	20fa      	movcc	r0, #250	; 0xfa
   10cc8:	23fa      	movs	r3, #250	; 0xfa
   10cca:	fbb0 f3f3 	udiv	r3, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   10cce:	290f      	cmp	r1, #15
   10cd0:	bf28      	it	cs
   10cd2:	210f      	movcs	r1, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   10cd4:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   10cd6:	b2db      	uxtb	r3, r3
   10cd8:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   10cdc:	b2c9      	uxtb	r1, r1
   10cde:	2004      	movs	r0, #4
   10ce0:	f7ff becc 	b.w	10a7c <nordic_writeRegister>

00010ce4 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   10ce4:	3011      	adds	r0, #17
   10ce6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   10ce8:	2816      	cmp	r0, #22
   10cea:	d804      	bhi.n	10cf6 <nordic_set_payload_for_pipe+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   10cec:	2920      	cmp	r1, #32
   10cee:	bf28      	it	cs
   10cf0:	2120      	movcs	r1, #32
   10cf2:	f7ff bec3 	b.w	10a7c <nordic_writeRegister>
   10cf6:	4770      	bx	lr

00010cf8 <nordic_set_addr_width>:
nordic_set_addr_width():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   10cf8:	2803      	cmp	r0, #3
   10cfa:	d006      	beq.n	10d0a <nordic_set_addr_width+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   10cfc:	2804      	cmp	r0, #4
   10cfe:	bf14      	ite	ne
   10d00:	2103      	movne	r1, #3
   10d02:	2102      	moveq	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   10d04:	2003      	movs	r0, #3
   10d06:	f7ff beb9 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   10d0a:	2101      	movs	r1, #1
   10d0c:	e7fa      	b.n	10d04 <nordic_set_addr_width+0xc>

00010d0e <nordic_set_tx_address>:
nordic_set_tx_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   10d0e:	460a      	mov	r2, r1
   10d10:	2300      	movs	r3, #0
   10d12:	4601      	mov	r1, r0
   10d14:	2030      	movs	r0, #48	; 0x30
   10d16:	f7ff be2d 	b.w	10974 <nordic_transfer>

00010d1a <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   10d1a:	460a      	mov	r2, r1
   10d1c:	2300      	movs	r3, #0
   10d1e:	4601      	mov	r1, r0
   10d20:	202a      	movs	r0, #42	; 0x2a
   10d22:	f7ff be27 	b.w	10974 <nordic_transfer>
   10d26:	Address 0x0000000000010d26 is out of bounds.


00010d28 <nordic_init>:
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   10d28:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10d2a:	4604      	mov	r4, r0
   10d2c:	460e      	mov	r6, r1
   10d2e:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   10d30:	f7ff ff30 	bl	10b94 <nordic_flush_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   10d34:	f7ff feec 	bl	10b10 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   10d38:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10d3c:	4b2a      	ldr	r3, [pc, #168]	; (10de8 <nordic_init+0xc0>)
   10d3e:	61da      	str	r2, [r3, #28]
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   10d40:	f7ff ff75 	bl	10c2e <nordic_power_down>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   10d44:	2200      	movs	r2, #0
   10d46:	2001      	movs	r0, #1
   10d48:	4611      	mov	r1, r2
   10d4a:	f7ff ff29 	bl	10ba0 <nordic_set_intr_signals>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   10d4e:	f7ff feab 	bl	10aa8 <nordic_clear_all_intr_flags>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   10d52:	2002      	movs	r0, #2
   10d54:	f7ff ff43 	bl	10bde <nordic_set_crc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   10d58:	4630      	mov	r0, r6
   10d5a:	f7ff ff73 	bl	10c44 <nordic_set_channel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   10d5e:	4628      	mov	r0, r5
   10d60:	f7ff ff82 	bl	10c68 <nordic_set_air_data_rate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   10d64:	2003      	movs	r0, #3
   10d66:	f7ff ff95 	bl	10c94 <nordic_set_power_level>
nordic_enable_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   10d6a:	2103      	movs	r1, #3
   10d6c:	2002      	movs	r0, #2
   10d6e:	f7ff fe85 	bl	10a7c <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   10d72:	2100      	movs	r1, #0
   10d74:	2001      	movs	r0, #1
   10d76:	f7ff fe81 	bl	10a7c <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   10d7a:	2103      	movs	r1, #3
   10d7c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   10d80:	f7ff ff9a 	bl	10cb8 <nordic_set_auto_transmit_options>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   10d84:	4621      	mov	r1, r4
   10d86:	2000      	movs	r0, #0
   10d88:	f7ff ffac 	bl	10ce4 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   10d8c:	2100      	movs	r1, #0
   10d8e:	2012      	movs	r0, #18
   10d90:	f7ff fe74 	bl	10a7c <nordic_writeRegister>
   10d94:	2100      	movs	r1, #0
   10d96:	2013      	movs	r0, #19
   10d98:	f7ff fe70 	bl	10a7c <nordic_writeRegister>
   10d9c:	2100      	movs	r1, #0
   10d9e:	2014      	movs	r0, #20
   10da0:	f7ff fe6c 	bl	10a7c <nordic_writeRegister>
   10da4:	2100      	movs	r1, #0
   10da6:	2015      	movs	r0, #21
   10da8:	f7ff fe68 	bl	10a7c <nordic_writeRegister>
   10dac:	2100      	movs	r1, #0
   10dae:	2016      	movs	r0, #22
   10db0:	f7ff fe64 	bl	10a7c <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10db4:	4b0d      	ldr	r3, [pc, #52]	; (10dec <nordic_init+0xc4>)
   10db6:	6818      	ldr	r0, [r3, #0]
   10db8:	791b      	ldrb	r3, [r3, #4]
   10dba:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10dbc:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10dbe:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10dc2:	f7ff ff99 	bl	10cf8 <nordic_set_addr_width>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   10dc6:	4668      	mov	r0, sp
   10dc8:	2105      	movs	r1, #5
   10dca:	f7ff ffa0 	bl	10d0e <nordic_set_tx_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   10dce:	2105      	movs	r1, #5
   10dd0:	4668      	mov	r0, sp
   10dd2:	f7ff ffa2 	bl	10d1a <nordic_set_rx_pipe0_addr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   10dd6:	f7ff ff1e 	bl	10c16 <nordic_power_up>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   10dda:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10dde:	f003 fe4b 	bl	14a78 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   10de2:	b002      	add	sp, #8
   10de4:	bd70      	pop	{r4, r5, r6, pc}
   10de6:	bf00      	nop
   10de8:	2009c020 	.word	0x2009c020
   10dec:	0001f317 	.word	0x0001f317

00010df0 <nrf_driver_init>:
nrf_driver_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   10df0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   10df2:	4e17      	ldr	r6, [pc, #92]	; (10e50 <nrf_driver_init+0x60>)
   10df4:	6832      	ldr	r2, [r6, #0]
   10df6:	b922      	cbnz	r2, 10e02 <nrf_driver_init+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   10df8:	2120      	movs	r1, #32
   10dfa:	2003      	movs	r0, #3
   10dfc:	f005 fa56 	bl	162ac <xQueueGenericCreate>
   10e00:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   10e02:	4d14      	ldr	r5, [pc, #80]	; (10e54 <nrf_driver_init+0x64>)
   10e04:	682a      	ldr	r2, [r5, #0]
   10e06:	b922      	cbnz	r2, 10e12 <nrf_driver_init+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   10e08:	2120      	movs	r1, #32
   10e0a:	2001      	movs	r0, #1
   10e0c:	f005 fa4e 	bl	162ac <xQueueGenericCreate>
   10e10:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   10e12:	4c11      	ldr	r4, [pc, #68]	; (10e58 <nrf_driver_init+0x68>)
   10e14:	6821      	ldr	r1, [r4, #0]
   10e16:	b921      	cbnz	r1, 10e22 <nrf_driver_init+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   10e18:	2203      	movs	r2, #3
   10e1a:	2001      	movs	r0, #1
   10e1c:	f005 fa46 	bl	162ac <xQueueGenericCreate>
   10e20:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   10e22:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   10e26:	f640 11c3 	movw	r1, #2499	; 0x9c3
   10e2a:	2020      	movs	r0, #32
   10e2c:	f7ff ff7c 	bl	10d28 <nordic_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   10e30:	f7ff fe58 	bl	10ae4 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   10e34:	2016      	movs	r0, #22
   10e36:	4a09      	ldr	r2, [pc, #36]	; (10e5c <nrf_driver_init+0x6c>)
   10e38:	2101      	movs	r1, #1
   10e3a:	f004 fd2b 	bl	15894 <eint3_enable_port0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   10e3e:	6830      	ldr	r0, [r6, #0]
   10e40:	b128      	cbz	r0, 10e4e <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   10e42:	6828      	ldr	r0, [r5, #0]
   10e44:	b118      	cbz	r0, 10e4e <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   10e46:	6820      	ldr	r0, [r4, #0]
   10e48:	3000      	adds	r0, #0
   10e4a:	bf18      	it	ne
   10e4c:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   10e4e:	bd70      	pop	{r4, r5, r6, pc}
   10e50:	2007c324 	.word	0x2007c324
   10e54:	2007c31c 	.word	0x2007c31c
   10e58:	2007c320 	.word	0x2007c320
   10e5c:	00010f09 	.word	0x00010f09

00010e60 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e60:	7903      	ldrb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e62:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e64:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10e68:	2bc0      	cmp	r3, #192	; 0xc0
   10e6a:	bf0c      	ite	eq
   10e6c:	4b0e      	ldreq	r3, [pc, #56]	; (10ea8 <nrf_driver_app_recv+0x48>)
   10e6e:	4b0f      	ldrne	r3, [pc, #60]	; (10eac <nrf_driver_app_recv+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   10e70:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e72:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e74:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e76:	b088      	sub	sp, #32
   10e78:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e7a:	461a      	mov	r2, r3
   10e7c:	4628      	mov	r0, r5
   10e7e:	f005 fa2f 	bl	162e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   10e82:	4604      	mov	r4, r0
   10e84:	b960      	cbnz	r0, 10ea0 <nrf_driver_app_recv+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   10e86:	4603      	mov	r3, r0
   10e88:	4602      	mov	r2, r0
   10e8a:	4669      	mov	r1, sp
   10e8c:	4628      	mov	r0, r5
   10e8e:	f005 fb2f 	bl	164f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   10e92:	4623      	mov	r3, r4
   10e94:	4622      	mov	r2, r4
   10e96:	4631      	mov	r1, r6
   10e98:	4628      	mov	r0, r5
   10e9a:	f005 fa21 	bl	162e0 <xQueueGenericSend>
   10e9e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   10ea0:	4620      	mov	r0, r4
   10ea2:	b008      	add	sp, #32
   10ea4:	bd70      	pop	{r4, r5, r6, pc}
   10ea6:	bf00      	nop
   10ea8:	2007c31c 	.word	0x2007c31c
   10eac:	2007c324 	.word	0x2007c324

00010eb0 <nrf_driver_send>:
nrf_driver_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   10eb0:	b538      	push	{r3, r4, r5, lr}
   10eb2:	4604      	mov	r4, r0
   10eb4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   10eb6:	f000 faa7 	bl	11408 <mesh_get_node_address>
   10eba:	7823      	ldrb	r3, [r4, #0]
   10ebc:	4283      	cmp	r3, r0
   10ebe:	d00a      	beq.n	10ed6 <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   10ec0:	78e3      	ldrb	r3, [r4, #3]
   10ec2:	b943      	cbnz	r3, 10ed6 <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   10ec4:	f009 fa60 	bl	1a388 <rand>
   10ec8:	23bd      	movs	r3, #189	; 0xbd
   10eca:	f000 0003 	and.w	r0, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   10ece:	fb00 3003 	mla	r0, r0, r3, r3
   10ed2:	f003 fdd1 	bl	14a78 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   10ed6:	f7ff fdfd 	bl	10ad4 <nordic_rx_to_Stanby1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   10eda:	f7ff fdef 	bl	10abc <nordic_standby1_to_tx_mode1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   10ede:	b2a9      	uxth	r1, r5
   10ee0:	4620      	mov	r0, r4
   10ee2:	f7ff fe1b 	bl	10b1c <nordic_mode1_send_single_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   10ee6:	f7ff fe0f 	bl	10b08 <nordic_clear_packet_sent_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   10eea:	f7ff fdfb 	bl	10ae4 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10eee:	f005 fef7 	bl	16ce0 <xTaskGetSchedulerState>
   10ef2:	2802      	cmp	r0, #2
   10ef4:	d104      	bne.n	10f00 <nrf_driver_send+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   10ef6:	4b03      	ldr	r3, [pc, #12]	; (10f04 <nrf_driver_send+0x54>)
   10ef8:	2100      	movs	r1, #0
   10efa:	6818      	ldr	r0, [r3, #0]
   10efc:	f005 fac4 	bl	16488 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   10f00:	2001      	movs	r0, #1
   10f02:	bd38      	pop	{r3, r4, r5, pc}
   10f04:	2007c320 	.word	0x2007c320

00010f08 <nrf_irq_callback>:
nrf_irq_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f08:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   10f0a:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f0c:	a902      	add	r1, sp, #8
   10f0e:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   10f12:	4b08      	ldr	r3, [pc, #32]	; (10f34 <nrf_irq_callback+0x2c>)
   10f14:	6818      	ldr	r0, [r3, #0]
   10f16:	f005 fab7 	bl	16488 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   10f1a:	9b01      	ldr	r3, [sp, #4]
   10f1c:	b13b      	cbz	r3, 10f2e <nrf_irq_callback+0x26>
   10f1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10f22:	4b05      	ldr	r3, [pc, #20]	; (10f38 <nrf_irq_callback+0x30>)
   10f24:	601a      	str	r2, [r3, #0]
   10f26:	f3bf 8f4f 	dsb	sy
   10f2a:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   10f2e:	b003      	add	sp, #12
   10f30:	f85d fb04 	ldr.w	pc, [sp], #4
   10f34:	2007c320 	.word	0x2007c320
   10f38:	e000ed04 	.word	0xe000ed04

00010f3c <nrf_driver_receive>:
nrf_driver_receive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   10f3c:	b538      	push	{r3, r4, r5, lr}
   10f3e:	4604      	mov	r4, r0
   10f40:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   10f42:	f7ff fe11 	bl	10b68 <nordic_is_packet_available>
   10f46:	b148      	cbz	r0, 10f5c <nrf_driver_receive+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   10f48:	b2a9      	uxth	r1, r5
   10f4a:	4620      	mov	r0, r4
   10f4c:	f7ff fe18 	bl	10b80 <nordic_read_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f50:	f7ff fe0a 	bl	10b68 <nordic_is_packet_available>
   10f54:	b908      	cbnz	r0, 10f5a <nrf_driver_receive+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   10f56:	f7ff fe0f 	bl	10b78 <nordic_clear_packet_available_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f5a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   10f5c:	bd38      	pop	{r3, r4, r5, pc}

00010f5e <nrf_driver_get_timer>:
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10f5e:	2904      	cmp	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   10f60:	b538      	push	{r3, r4, r5, lr}
   10f62:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10f64:	d10d      	bne.n	10f82 <nrf_driver_get_timer+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   10f66:	1c04      	adds	r4, r0, #0
   10f68:	bf18      	it	ne
   10f6a:	2401      	movne	r4, #1
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   10f6c:	f7ff fa8c 	bl	10488 <sys_get_uptime_us>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   10f70:	b12c      	cbz	r4, 10f7e <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10f72:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10f76:	2300      	movs	r3, #0
   10f78:	f007 fb86 	bl	18688 <__aeabi_uldivmod>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   10f7c:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   10f7e:	4620      	mov	r0, r4
   10f80:	bd38      	pop	{r3, r4, r5, pc}
   10f82:	2400      	movs	r4, #0
   10f84:	e7f2      	b.n	10f6c <nrf_driver_get_timer+0xe>
   10f86:	Address 0x0000000000010f86 is out of bounds.


00010f88 <wireless_init>:
wireless_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   10f88:	b500      	push	{lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   10f8a:	4b0c      	ldr	r3, [pc, #48]	; (10fbc <wireless_init+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   10f8c:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   10f8e:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   10f90:	4b0b      	ldr	r3, [pc, #44]	; (10fc0 <wireless_init+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   10f92:	4a0c      	ldr	r2, [pc, #48]	; (10fc4 <wireless_init+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   10f94:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   10f96:	4b0c      	ldr	r3, [pc, #48]	; (10fc8 <wireless_init+0x40>)
   10f98:	930a      	str	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   10f9a:	ab0c      	add	r3, sp, #48	; 0x30
   10f9c:	f843 2d10 	str.w	r2, [r3, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   10fa0:	2200      	movs	r2, #0
   10fa2:	9204      	str	r2, [sp, #16]
   10fa4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   10fa6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   10faa:	4b08      	ldr	r3, [pc, #32]	; (10fcc <wireless_init+0x44>)
   10fac:	4a08      	ldr	r2, [pc, #32]	; (10fd0 <wireless_init+0x48>)
   10fae:	2101      	movs	r1, #1
   10fb0:	206a      	movs	r0, #106	; 0x6a
   10fb2:	f000 fad7 	bl	11564 <mesh_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   10fb6:	b00d      	add	sp, #52	; 0x34
   10fb8:	f85d fb04 	ldr.w	pc, [sp], #4
   10fbc:	00010df1 	.word	0x00010df1
   10fc0:	00010f3d 	.word	0x00010f3d
   10fc4:	00010f5f 	.word	0x00010f5f
   10fc8:	00010eb1 	.word	0x00010eb1
   10fcc:	00010e61 	.word	0x00010e61
   10fd0:	0001f31c 	.word	0x0001f31c

00010fd4 <wireless_service>:
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   10fd4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10fd6:	f005 fe83 	bl	16ce0 <xTaskGetSchedulerState>
   10fda:	4b0f      	ldr	r3, [pc, #60]	; (11018 <wireless_service+0x44>)
   10fdc:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   10fde:	695b      	ldr	r3, [r3, #20]
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   10fe0:	d112      	bne.n	11008 <wireless_service+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   10fe2:	025a      	lsls	r2, r3, #9
   10fe4:	d50c      	bpl.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   10fe6:	f000 fcdf 	bl	119a8 <mesh_get_pnd_pkt_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   10fea:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   10fec:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   10fee:	480b      	ldr	r0, [pc, #44]	; (1101c <wireless_service+0x48>)
   10ff0:	bf14      	ite	ne
   10ff2:	2201      	movne	r2, #1
   10ff4:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   10ff8:	4619      	mov	r1, r3
   10ffa:	6800      	ldr	r0, [r0, #0]
   10ffc:	f005 fa78 	bl	164f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   11000:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   11004:	f000 bb68 	b.w	116d8 <mesh_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   11008:	025b      	lsls	r3, r3, #9
   1100a:	d5f9      	bpl.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   1100c:	f000 fccc 	bl	119a8 <mesh_get_pnd_pkt_count>
   11010:	2800      	cmp	r0, #0
   11012:	d1f5      	bne.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   11014:	bd08      	pop	{r3, pc}
   11016:	bf00      	nop
   11018:	2009c000 	.word	0x2009c000
   1101c:	2007c320 	.word	0x2007c320

00011020 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   11020:	2324      	movs	r3, #36	; 0x24
   11022:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   11024:	f64f 74ff 	movw	r4, #65535	; 0xffff
   11028:	fb03 0101 	mla	r1, r3, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   1102c:	4288      	cmp	r0, r1
   1102e:	d100      	bne.n	11032 <mesh_incr_soft_timers_for_arr+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   11030:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   11032:	7843      	ldrb	r3, [r0, #1]
   11034:	b12b      	cbz	r3, 11042 <mesh_incr_soft_timers_for_arr+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   11036:	8c03      	ldrh	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   11038:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   1103a:	42a3      	cmp	r3, r4
   1103c:	bf28      	it	cs
   1103e:	4623      	movcs	r3, r4
   11040:	8403      	strh	r3, [r0, #32]
   11042:	3024      	adds	r0, #36	; 0x24
   11044:	e7f2      	b.n	1102c <mesh_incr_soft_timers_for_arr+0xc>
   11046:	Address 0x0000000000011046 is out of bounds.


00011048 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   11048:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   1104a:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   1104c:	a802      	add	r0, sp, #8
   1104e:	f840 3d04 	str.w	r3, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   11052:	4b0c      	ldr	r3, [pc, #48]	; (11084 <mesh_update_soft_timers+0x3c>)
   11054:	2104      	movs	r1, #4
   11056:	685b      	ldr	r3, [r3, #4]
   11058:	4798      	blx	r3
   1105a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   1105c:	4b0a      	ldr	r3, [pc, #40]	; (11088 <mesh_update_soft_timers+0x40>)
   1105e:	9a01      	ldr	r2, [sp, #4]
   11060:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11062:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   11064:	1b14      	subs	r4, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   11066:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11068:	4808      	ldr	r0, [pc, #32]	; (1108c <mesh_update_soft_timers+0x44>)
   1106a:	4622      	mov	r2, r4
   1106c:	f7ff ffd8 	bl	11020 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   11070:	4622      	mov	r2, r4
   11072:	2102      	movs	r1, #2
   11074:	4806      	ldr	r0, [pc, #24]	; (11090 <mesh_update_soft_timers+0x48>)
   11076:	f7ff ffd3 	bl	11020 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   1107a:	1c28      	adds	r0, r5, #0
   1107c:	bf18      	it	ne
   1107e:	2001      	movne	r0, #1
   11080:	b003      	add	sp, #12
   11082:	bd30      	pop	{r4, r5, pc}
   11084:	2007c328 	.word	0x2007c328
   11088:	2007c458 	.word	0x2007c458
   1108c:	2007c33e 	.word	0x2007c33e
   11090:	2007c3f2 	.word	0x2007c3f2

00011094 <mesh_send_packet>:
mesh_send_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   11094:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   11096:	4b0b      	ldr	r3, [pc, #44]	; (110c4 <mesh_send_packet+0x30>)
   11098:	7819      	ldrb	r1, [r3, #0]
   1109a:	7803      	ldrb	r3, [r0, #0]
   1109c:	428b      	cmp	r3, r1
   1109e:	4b0a      	ldr	r3, [pc, #40]	; (110c8 <mesh_send_packet+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110a0:	bf0b      	itete	eq
   110a2:	881a      	ldrheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   110a4:	889a      	ldrhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110a6:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   110a8:	3201      	addne	r2, #1
   110aa:	bf14      	ite	ne
   110ac:	809a      	strhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110ae:	801a      	strheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   110b0:	4b06      	ldr	r3, [pc, #24]	; (110cc <mesh_send_packet+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   110b2:	7081      	strb	r1, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   110b4:	68db      	ldr	r3, [r3, #12]
   110b6:	2120      	movs	r1, #32
   110b8:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   110ba:	3000      	adds	r0, #0
   110bc:	bf18      	it	ne
   110be:	2001      	movne	r0, #1
   110c0:	bd08      	pop	{r3, pc}
   110c2:	bf00      	nop
   110c4:	2007c08c 	.word	0x2007c08c
   110c8:	2007c3ce 	.word	0x2007c3ce
   110cc:	2007c328 	.word	0x2007c328

000110d0 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   110d0:	4b0a      	ldr	r3, [pc, #40]	; (110fc <mesh_send_retry_packet+0x2c>)
   110d2:	7802      	ldrb	r2, [r0, #0]
   110d4:	781b      	ldrb	r3, [r3, #0]
   110d6:	429a      	cmp	r2, r3
   110d8:	4b09      	ldr	r3, [pc, #36]	; (11100 <mesh_send_retry_packet+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110da:	bf0b      	itete	eq
   110dc:	88da      	ldrheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   110de:	891a      	ldrhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110e0:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   110e2:	3201      	addne	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110e4:	bf0c      	ite	eq
   110e6:	80da      	strheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   110e8:	811a      	strhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   110ea:	7903      	ldrb	r3, [r0, #4]
   110ec:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   110f0:	3207      	adds	r2, #7
   110f2:	f362 03c5 	bfi	r3, r2, #3, #3
   110f6:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   110f8:	f7ff bfcc 	b.w	11094 <mesh_send_packet>
   110fc:	2007c08c 	.word	0x2007c08c
   11100:	2007c3ce 	.word	0x2007c3ce

00011104 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   11104:	2200      	movs	r2, #0
   11106:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   11108:	4b06      	ldr	r3, [pc, #24]	; (11124 <mesh_find_rte_tbl_entry+0x20>)
   1110a:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   1110e:	0091      	lsls	r1, r2, #2
   11110:	4284      	cmp	r4, r0
   11112:	d101      	bne.n	11118 <mesh_find_rte_tbl_entry+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   11114:	1858      	adds	r0, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   11116:	bd10      	pop	{r4, pc}
   11118:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   1111a:	2a04      	cmp	r2, #4
   1111c:	d1f5      	bne.n	1110a <mesh_find_rte_tbl_entry+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   1111e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   11120:	bd10      	pop	{r4, pc}
   11122:	bf00      	nop
   11124:	2007c447 	.word	0x2007c447

00011128 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   11128:	b170      	cbz	r0, 11148 <mesh_update_rte_scores+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   1112a:	78c3      	ldrb	r3, [r0, #3]
   1112c:	3301      	adds	r3, #1
   1112e:	b2db      	uxtb	r3, r3
   11130:	2bff      	cmp	r3, #255	; 0xff
   11132:	70c3      	strb	r3, [r0, #3]
   11134:	d108      	bne.n	11148 <mesh_update_rte_scores+0x20>
   11136:	2300      	movs	r3, #0
   11138:	4804      	ldr	r0, [pc, #16]	; (1114c <mesh_update_rte_scores+0x24>)
   1113a:	18c1      	adds	r1, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   1113c:	78ca      	ldrb	r2, [r1, #3]
   1113e:	3304      	adds	r3, #4
   11140:	0852      	lsrs	r2, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   11142:	2b10      	cmp	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   11144:	70ca      	strb	r2, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   11146:	d1f8      	bne.n	1113a <mesh_update_rte_scores+0x12>
   11148:	4770      	bx	lr
   1114a:	bf00      	nop
   1114c:	2007c447 	.word	0x2007c447

00011150 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11150:	2224      	movs	r2, #36	; 0x24
   11152:	4603      	mov	r3, r0
   11154:	fb02 0101 	mla	r1, r2, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   11158:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   1115a:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   1115c:	4291      	cmp	r1, r2
   1115e:	d10f      	bne.n	11180 <mesh_get_pnd_pkt_slot+0x30>
   11160:	4604      	mov	r4, r0
   11162:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   11164:	429a      	cmp	r2, r3
   11166:	d011      	beq.n	1118c <mesh_get_pnd_pkt_slot+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   11168:	7919      	ldrb	r1, [r3, #4]
   1116a:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   1116e:	8c19      	ldrh	r1, [r3, #32]
   11170:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   11174:	42a9      	cmp	r1, r5
   11176:	bf84      	itt	hi
   11178:	461c      	movhi	r4, r3
   1117a:	460d      	movhi	r5, r1
   1117c:	3324      	adds	r3, #36	; 0x24
   1117e:	e7f1      	b.n	11164 <mesh_get_pnd_pkt_slot+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   11180:	4614      	mov	r4, r2
   11182:	3224      	adds	r2, #36	; 0x24
   11184:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11188:	2d00      	cmp	r5, #0
   1118a:	d1e7      	bne.n	1115c <mesh_get_pnd_pkt_slot+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   1118c:	4620      	mov	r0, r4
   1118e:	bd30      	pop	{r4, r5, pc}

00011190 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   11190:	b538      	push	{r3, r4, r5, lr}
   11192:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   11194:	00c9      	lsls	r1, r1, #3
   11196:	f101 0508 	add.w	r5, r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   1119a:	f7ff ff55 	bl	11048 <mesh_update_soft_timers>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   1119e:	4b1c      	ldr	r3, [pc, #112]	; (11210 <mesh_pending_packets_add+0x80>)
   111a0:	7822      	ldrb	r2, [r4, #0]
   111a2:	781b      	ldrb	r3, [r3, #0]
   111a4:	429a      	cmp	r2, r3
   111a6:	d124      	bne.n	111f2 <mesh_pending_packets_add+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   111a8:	2102      	movs	r1, #2
   111aa:	481a      	ldr	r0, [pc, #104]	; (11214 <mesh_pending_packets_add+0x84>)
   111ac:	f7ff ffd0 	bl	11150 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   111b0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   111b2:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   111b4:	f880 3020 	strb.w	r3, [r0, #32]
   111b8:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   111bc:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   111be:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   111c2:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   111c6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   111ca:	f3c5 2506 	ubfx	r5, r5, #8, #7
   111ce:	430d      	orrs	r5, r1
   111d0:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   111d4:	f104 0120 	add.w	r1, r4, #32
   111d8:	f853 4b04 	ldr.w	r4, [r3], #4
   111dc:	428b      	cmp	r3, r1
   111de:	f842 4b04 	str.w	r4, [r2], #4
   111e2:	d1f9      	bne.n	111d8 <mesh_pending_packets_add+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   111e4:	4a0c      	ldr	r2, [pc, #48]	; (11218 <mesh_pending_packets_add+0x88>)
   111e6:	7903      	ldrb	r3, [r0, #4]
   111e8:	7812      	ldrb	r2, [r2, #0]
   111ea:	f362 03c5 	bfi	r3, r2, #3, #3
   111ee:	7103      	strb	r3, [r0, #4]
   111f0:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   111f2:	2104      	movs	r1, #4
   111f4:	4809      	ldr	r0, [pc, #36]	; (1121c <mesh_pending_packets_add+0x8c>)
   111f6:	f7ff ffab 	bl	11150 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   111fa:	78e3      	ldrb	r3, [r4, #3]
   111fc:	2b00      	cmp	r3, #0
   111fe:	d1d7      	bne.n	111b0 <mesh_pending_packets_add+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   11200:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   11204:	2504      	movs	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   11206:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1120a:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   1120e:	e7cf      	b.n	111b0 <mesh_pending_packets_add+0x20>
   11210:	2007c08c 	.word	0x2007c08c
   11214:	2007c3f2 	.word	0x2007c3f2
   11218:	2007c094 	.word	0x2007c094
   1121c:	2007c33e 	.word	0x2007c33e

00011220 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   11220:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   11222:	f7ff ff6f 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   11226:	4603      	mov	r3, r0
   11228:	b9d8      	cbnz	r0, 11262 <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   1122a:	f7ff ff6b 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   1122e:	4603      	mov	r3, r0
   11230:	b9b8      	cbnz	r0, 11262 <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   11232:	4a0d      	ldr	r2, [pc, #52]	; (11268 <mesh_get_rte_to_modify+0x48>)
   11234:	78d3      	ldrb	r3, [r2, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   11236:	79d1      	ldrb	r1, [r2, #7]
   11238:	7ad0      	ldrb	r0, [r2, #11]
   1123a:	428b      	cmp	r3, r1
   1123c:	bf96      	itet	ls
   1123e:	4619      	movls	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   11240:	1d13      	addhi	r3, r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   11242:	4613      	movls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   11244:	4281      	cmp	r1, r0
   11246:	bf94      	ite	ls
   11248:	4608      	movls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   1124a:	4b08      	ldrhi	r3, [pc, #32]	; (1126c <mesh_get_rte_to_modify+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   1124c:	7bd1      	ldrb	r1, [r2, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   1124e:	4a08      	ldr	r2, [pc, #32]	; (11270 <mesh_get_rte_to_modify+0x50>)
   11250:	4281      	cmp	r1, r0
   11252:	bf38      	it	cc
   11254:	4613      	movcc	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   11256:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11258:	4906      	ldr	r1, [pc, #24]	; (11274 <mesh_get_rte_to_modify+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   1125a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   1125c:	7aca      	ldrb	r2, [r1, #11]
   1125e:	3201      	adds	r2, #1
   11260:	72ca      	strb	r2, [r1, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   11262:	4618      	mov	r0, r3
   11264:	bd08      	pop	{r3, pc}
   11266:	bf00      	nop
   11268:	2007c447 	.word	0x2007c447
   1126c:	2007c44f 	.word	0x2007c44f
   11270:	2007c453 	.word	0x2007c453
   11274:	2007c3ce 	.word	0x2007c3ce

00011278 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1127c:	f04f 0824 	mov.w	r8, #36	; 0x24
   11280:	4605      	mov	r5, r0
   11282:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   11284:	2700      	movs	r7, #0
   11286:	fb08 1802 	mla	r8, r8, r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   1128a:	f8df 915c 	ldr.w	r9, [pc, #348]	; 113e8 <mesh_handle_pnd_pkts_for_arr+0x170>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   1128e:	f8df a15c 	ldr.w	sl, [pc, #348]	; 113ec <mesh_handle_pnd_pkts_for_arr+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   11292:	45a0      	cmp	r8, r4
   11294:	d101      	bne.n	1129a <mesh_handle_pnd_pkts_for_arr+0x22>
   11296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   1129a:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   1129e:	2b00      	cmp	r3, #0
   112a0:	da29      	bge.n	112f6 <mesh_handle_pnd_pkts_for_arr+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   112a2:	b1cd      	cbz	r5, 112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   112a4:	782b      	ldrb	r3, [r5, #0]
   112a6:	7862      	ldrb	r2, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   112a8:	4293      	cmp	r3, r2
   112aa:	d109      	bne.n	112c0 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   112ac:	7868      	ldrb	r0, [r5, #1]
   112ae:	7821      	ldrb	r1, [r4, #0]
   112b0:	4288      	cmp	r0, r1
   112b2:	d105      	bne.n	112c0 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   112b4:	2224      	movs	r2, #36	; 0x24
   112b6:	2100      	movs	r1, #0
   112b8:	4620      	mov	r0, r4
   112ba:	f007 fe27 	bl	18f0c <memset>
   112be:	e069      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   112c0:	78e9      	ldrb	r1, [r5, #3]
   112c2:	b149      	cbz	r1, 112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   112c4:	7869      	ldrb	r1, [r5, #1]
   112c6:	4291      	cmp	r1, r2
   112c8:	d106      	bne.n	112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   112ca:	7822      	ldrb	r2, [r4, #0]
   112cc:	429a      	cmp	r2, r3
   112ce:	d103      	bne.n	112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   112d0:	79aa      	ldrb	r2, [r5, #6]
   112d2:	79a3      	ldrb	r3, [r4, #6]
   112d4:	429a      	cmp	r2, r3
   112d6:	d0ed      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   112d8:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   112dc:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   112e0:	8c21      	ldrh	r1, [r4, #32]
   112e2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   112e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   112ea:	4299      	cmp	r1, r3
   112ec:	db52      	blt.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   112ee:	4620      	mov	r0, r4
   112f0:	f7ff fed0 	bl	11094 <mesh_send_packet>
   112f4:	e7de      	b.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   112f6:	7863      	ldrb	r3, [r4, #1]
   112f8:	2b00      	cmp	r3, #0
   112fa:	d04b      	beq.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   112fc:	2d00      	cmp	r5, #0
   112fe:	d032      	beq.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   11300:	792a      	ldrb	r2, [r5, #4]
   11302:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   11306:	2ac0      	cmp	r2, #192	; 0xc0
   11308:	d12b      	bne.n	11362 <mesh_handle_pnd_pkts_for_arr+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   1130a:	7822      	ldrb	r2, [r4, #0]
   1130c:	7869      	ldrb	r1, [r5, #1]
   1130e:	428a      	cmp	r2, r1
   11310:	d102      	bne.n	11318 <mesh_handle_pnd_pkts_for_arr+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   11312:	7828      	ldrb	r0, [r5, #0]
   11314:	4298      	cmp	r0, r3
   11316:	d0cd      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   11318:	78e6      	ldrb	r6, [r4, #3]
   1131a:	78a8      	ldrb	r0, [r5, #2]
   1131c:	4286      	cmp	r6, r0
   1131e:	d108      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11320:	4299      	cmp	r1, r3
   11322:	d106      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11324:	7829      	ldrb	r1, [r5, #0]
   11326:	428a      	cmp	r2, r1
   11328:	d103      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1132a:	79a1      	ldrb	r1, [r4, #6]
   1132c:	79aa      	ldrb	r2, [r5, #6]
   1132e:	4291      	cmp	r1, r2
   11330:	d0c0      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   11332:	78a9      	ldrb	r1, [r5, #2]
   11334:	78e2      	ldrb	r2, [r4, #3]
   11336:	4291      	cmp	r1, r2
   11338:	d115      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1133a:	786a      	ldrb	r2, [r5, #1]
   1133c:	429a      	cmp	r2, r3
   1133e:	d112      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11340:	7821      	ldrb	r1, [r4, #0]
   11342:	782a      	ldrb	r2, [r5, #0]
   11344:	4291      	cmp	r1, r2
   11346:	d10e      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11348:	79a1      	ldrb	r1, [r4, #6]
   1134a:	79aa      	ldrb	r2, [r5, #6]
   1134c:	4291      	cmp	r1, r2
   1134e:	d10a      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11350:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   11352:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11356:	f367 03c5 	bfi	r3, r7, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   1135a:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   1135e:	7123      	strb	r3, [r4, #4]
   11360:	e018      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   11362:	2a00      	cmp	r2, #0
   11364:	d1e5      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   11366:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   1136a:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   1136e:	8c20      	ldrh	r0, [r4, #32]
   11370:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   11374:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   11378:	4290      	cmp	r0, r2
   1137a:	db0b      	blt.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1137c:	7922      	ldrb	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   1137e:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11382:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   11386:	b2ce      	uxtb	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11388:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1138c:	b126      	cbz	r6, 11398 <mesh_handle_pnd_pkts_for_arr+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   1138e:	4620      	mov	r0, r4
   11390:	f7ff fe9e 	bl	110d0 <mesh_send_retry_packet>
   11394:	3424      	adds	r4, #36	; 0x24
   11396:	e77c      	b.n	11292 <mesh_handle_pnd_pkts_for_arr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   11398:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   1139c:	2ac0      	cmp	r2, #192	; 0xc0
   1139e:	d020      	beq.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   113a0:	7820      	ldrb	r0, [r4, #0]
   113a2:	f899 2000 	ldrb.w	r2, [r9]
   113a6:	4290      	cmp	r0, r2
   113a8:	d11b      	bne.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   113aa:	78e2      	ldrb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   113ac:	4293      	cmp	r3, r2
   113ae:	d018      	beq.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   113b0:	b1ba      	cbz	r2, 113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   113b2:	2203      	movs	r2, #3
   113b4:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   113b6:	70e1      	strb	r1, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   113b8:	f362 1307 	bfi	r3, r2, #4, #4
   113bc:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   113be:	4620      	mov	r0, r4
   113c0:	f7ff fe86 	bl	110d0 <mesh_send_retry_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   113c4:	7923      	ldrb	r3, [r4, #4]
   113c6:	f89a 2000 	ldrb.w	r2, [sl]
   113ca:	f362 03c5 	bfi	r3, r2, #3, #3
   113ce:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   113d0:	7860      	ldrb	r0, [r4, #1]
   113d2:	f7ff fe97 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   113d6:	b100      	cbz	r0, 113da <mesh_handle_pnd_pkts_for_arr+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   113d8:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   113da:	2e00      	cmp	r6, #0
   113dc:	f47f af6a 	bne.w	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
   113e0:	e7d8      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   113e2:	2601      	movs	r6, #1
   113e4:	e7f4      	b.n	113d0 <mesh_handle_pnd_pkts_for_arr+0x158>
   113e6:	bf00      	nop
   113e8:	2007c08c 	.word	0x2007c08c
   113ec:	2007c094 	.word	0x2007c094

000113f0 <mesh_set_node_address>:
mesh_set_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   113f0:	1e43      	subs	r3, r0, #1
   113f2:	b2db      	uxtb	r3, r3
   113f4:	2bfd      	cmp	r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   113f6:	bf9d      	ittte	ls
   113f8:	4b02      	ldrls	r3, [pc, #8]	; (11404 <mesh_set_node_address+0x14>)
   113fa:	7018      	strbls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   113fc:	2001      	movls	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   113fe:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   11400:	4770      	bx	lr
   11402:	bf00      	nop
   11404:	2007c08c 	.word	0x2007c08c

00011408 <mesh_get_node_address>:
mesh_get_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   11408:	4b01      	ldr	r3, [pc, #4]	; (11410 <mesh_get_node_address+0x8>)
   1140a:	7818      	ldrb	r0, [r3, #0]
   1140c:	4770      	bx	lr
   1140e:	bf00      	nop
   11410:	2007c08c 	.word	0x2007c08c

00011414 <mesh_form_pkt>:
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   11414:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11418:	4604      	mov	r4, r0
   1141a:	4691      	mov	r9, r2
   1141c:	461e      	mov	r6, r3
   1141e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   11422:	460f      	mov	r7, r1
   11424:	2900      	cmp	r1, #0
   11426:	d065      	beq.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   11428:	4b34      	ldr	r3, [pc, #208]	; (114fc <mesh_form_pkt+0xe8>)
   1142a:	f893 8000 	ldrb.w	r8, [r3]
   1142e:	4541      	cmp	r1, r8
   11430:	d060      	beq.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   11432:	2e0f      	cmp	r6, #15
   11434:	d85e      	bhi.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   11436:	2800      	cmp	r0, #0
   11438:	d05e      	beq.n	114f8 <mesh_form_pkt+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   1143a:	2220      	movs	r2, #32
   1143c:	2100      	movs	r1, #0
   1143e:	f007 fd65 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11442:	2fff      	cmp	r7, #255	; 0xff
   11444:	bf08      	it	eq
   11446:	f04f 0900 	moveq.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   1144a:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   1144c:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   1144e:	7067      	strb	r7, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11450:	f369 1387 	bfi	r3, r9, #6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   11454:	f362 0302 	bfi	r3, r2, #0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11458:	4a29      	ldr	r2, [pc, #164]	; (11500 <mesh_form_pkt+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   1145a:	f884 8000 	strb.w	r8, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1145e:	7812      	ldrb	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   11460:	f884 8002 	strb.w	r8, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11464:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11468:	4a26      	ldr	r2, [pc, #152]	; (11504 <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1146a:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   1146c:	7813      	ldrb	r3, [r2, #0]
   1146e:	3301      	adds	r3, #1
   11470:	b2db      	uxtb	r3, r3
   11472:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   11474:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   11476:	ab0b      	add	r3, sp, #44	; 0x2c
   11478:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   1147a:	b9c5      	cbnz	r5, 114ae <mesh_form_pkt+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   1147c:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   1147e:	2301      	movs	r3, #1
   11480:	f8df 8084 	ldr.w	r8, [pc, #132]	; 11508 <mesh_form_pkt+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   11484:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   11486:	f888 3000 	strb.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   1148a:	f7ff fe3b 	bl	11104 <mesh_find_rte_tbl_entry>
   1148e:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   11490:	f7ff fe4a 	bl	11128 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   11494:	2300      	movs	r3, #0
   11496:	f888 3000 	strb.w	r3, [r8]
   1149a:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   1149c:	bb1f      	cbnz	r7, 114e6 <mesh_form_pkt+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   1149e:	f366 1307 	bfi	r3, r6, #4, #4
   114a2:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   114a4:	70e7      	strb	r7, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   114a6:	4628      	mov	r0, r5
   114a8:	b003      	add	sp, #12
   114aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   114ae:	f104 0908 	add.w	r9, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114b2:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   114b4:	79e0      	ldrb	r0, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114b6:	4613      	mov	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   114b8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114ba:	f853 1b08 	ldr.w	r1, [r3], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   114be:	eb00 0802 	add.w	r8, r0, r2
   114c2:	fa5f f888 	uxtb.w	r8, r8
   114c6:	3d01      	subs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   114c8:	f1b8 0f18 	cmp.w	r8, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   114cc:	9301      	str	r3, [sp, #4]
   114ce:	b2ed      	uxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   114d0:	d807      	bhi.n	114e2 <mesh_form_pkt+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   114d2:	4448      	add	r0, r9
   114d4:	f007 fcf5 	bl	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   114d8:	f884 8007 	strb.w	r8, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   114dc:	2d00      	cmp	r5, #0
   114de:	d1e8      	bne.n	114b2 <mesh_form_pkt+0x9e>
   114e0:	e7cc      	b.n	1147c <mesh_form_pkt+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   114e2:	2500      	movs	r5, #0
   114e4:	e7cb      	b.n	1147e <mesh_form_pkt+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   114e6:	78ba      	ldrb	r2, [r7, #2]
   114e8:	f362 1307 	bfi	r3, r2, #4, #4
   114ec:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   114ee:	787b      	ldrb	r3, [r7, #1]
   114f0:	70e3      	strb	r3, [r4, #3]
   114f2:	e7d8      	b.n	114a6 <mesh_form_pkt+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   114f4:	2500      	movs	r5, #0
   114f6:	e7d6      	b.n	114a6 <mesh_form_pkt+0x92>
   114f8:	4605      	mov	r5, r0
   114fa:	e7d4      	b.n	114a6 <mesh_form_pkt+0x92>
   114fc:	2007c08c 	.word	0x2007c08c
   11500:	2007c094 	.word	0x2007c094
   11504:	2007c457 	.word	0x2007c457
   11508:	2007c33d 	.word	0x2007c33d

0001150c <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   1150c:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   1150e:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   11510:	4e13      	ldr	r6, [pc, #76]	; (11560 <mesh_send_formed_pkt+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11512:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   11514:	7032      	strb	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11516:	b920      	cbnz	r0, 11522 <mesh_send_formed_pkt+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   11518:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   1151a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   1151c:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   1151e:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   11520:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11522:	f7ff fdb7 	bl	11094 <mesh_send_packet>
   11526:	4605      	mov	r5, r0
   11528:	2800      	cmp	r0, #0
   1152a:	d0f5      	beq.n	11518 <mesh_send_formed_pkt+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   1152c:	7923      	ldrb	r3, [r4, #4]
   1152e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11532:	2b40      	cmp	r3, #64	; 0x40
   11534:	d010      	beq.n	11558 <mesh_send_formed_pkt+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   11536:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   1153a:	424a      	negs	r2, r1
   1153c:	414a      	adcs	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   1153e:	2bc0      	cmp	r3, #192	; 0xc0
   11540:	d10b      	bne.n	1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   11542:	78e3      	ldrb	r3, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   11544:	b14b      	cbz	r3, 1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   11546:	7861      	ldrb	r1, [r4, #1]
   11548:	4299      	cmp	r1, r3
   1154a:	d006      	beq.n	1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   1154c:	7961      	ldrb	r1, [r4, #5]
   1154e:	4620      	mov	r0, r4
   11550:	0909      	lsrs	r1, r1, #4
   11552:	f7ff fe1d 	bl	11190 <mesh_pending_packets_add>
   11556:	e7e0      	b.n	1151a <mesh_send_formed_pkt+0xe>
   11558:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   1155a:	2a00      	cmp	r2, #0
   1155c:	d1f6      	bne.n	1154c <mesh_send_formed_pkt+0x40>
   1155e:	e7dc      	b.n	1151a <mesh_send_formed_pkt+0xe>
   11560:	2007c33d 	.word	0x2007c33d

00011564 <mesh_init>:
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11564:	b082      	sub	sp, #8
   11566:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1156a:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1156c:	1e42      	subs	r2, r0, #1
   1156e:	b2d2      	uxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11570:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11572:	2afd      	cmp	r2, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11574:	4605      	mov	r5, r0
   11576:	460e      	mov	r6, r1
   11578:	9315      	str	r3, [sp, #84]	; 0x54
   1157a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1157e:	d905      	bls.n	1158c <mesh_init+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   11580:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   11582:	b00d      	add	sp, #52	; 0x34
   11584:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11588:	b002      	add	sp, #8
   1158a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   1158c:	2b00      	cmp	r3, #0
   1158e:	d0f7      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   11590:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   11592:	2f00      	cmp	r7, #0
   11594:	d0f4      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   11596:	9b19      	ldr	r3, [sp, #100]	; 0x64
   11598:	2b00      	cmp	r3, #0
   1159a:	d0f1      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   1159c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   1159e:	2b00      	cmp	r3, #0
   115a0:	d0ee      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   115a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
   115a4:	2b00      	cmp	r3, #0
   115a6:	d0eb      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   115a8:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   115aa:	2248      	movs	r2, #72	; 0x48
   115ac:	2100      	movs	r1, #0
   115ae:	4823      	ldr	r0, [pc, #140]	; (1163c <mesh_init+0xd8>)
   115b0:	f007 fcac 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   115b4:	2290      	movs	r2, #144	; 0x90
   115b6:	2100      	movs	r1, #0
   115b8:	4821      	ldr	r0, [pc, #132]	; (11640 <mesh_init+0xdc>)
   115ba:	f007 fca7 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   115be:	2210      	movs	r2, #16
   115c0:	2100      	movs	r1, #0
   115c2:	4820      	ldr	r0, [pc, #128]	; (11644 <mesh_init+0xe0>)
   115c4:	f007 fca2 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   115c8:	4b1f      	ldr	r3, [pc, #124]	; (11648 <mesh_init+0xe4>)
   115ca:	601c      	str	r4, [r3, #0]
   115cc:	605c      	str	r4, [r3, #4]
   115ce:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   115d0:	4b1e      	ldr	r3, [pc, #120]	; (1164c <mesh_init+0xe8>)
   115d2:	601c      	str	r4, [r3, #0]
   115d4:	605c      	str	r4, [r3, #4]
   115d6:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   115d8:	4b1d      	ldr	r3, [pc, #116]	; (11650 <mesh_init+0xec>)
   115da:	701d      	strb	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   115dc:	4b1d      	ldr	r3, [pc, #116]	; (11654 <mesh_init+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115de:	4d1e      	ldr	r5, [pc, #120]	; (11658 <mesh_init+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   115e0:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115e2:	ae15      	add	r6, sp, #84	; 0x54
   115e4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   115e6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   115e8:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   115ea:	2218      	movs	r2, #24
   115ec:	4621      	mov	r1, r4
   115ee:	481b      	ldr	r0, [pc, #108]	; (1165c <mesh_init+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115f0:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   115f2:	f007 fc8b 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   115f6:	4649      	mov	r1, r9
   115f8:	2217      	movs	r2, #23
   115fa:	4818      	ldr	r0, [pc, #96]	; (1165c <mesh_init+0xf8>)
   115fc:	f009 f971 	bl	1a8e2 <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   11600:	4621      	mov	r1, r4
   11602:	4620      	mov	r0, r4
   11604:	47b8      	blx	r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   11606:	2800      	cmp	r0, #0
   11608:	d0ba      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   1160a:	f1b8 0f00 	cmp.w	r8, #0
   1160e:	d102      	bne.n	11616 <mesh_init+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   11610:	f7ff fd1a 	bl	11048 <mesh_update_soft_timers>
   11614:	e7b5      	b.n	11582 <mesh_init+0x1e>
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11616:	2306      	movs	r3, #6
   11618:	9302      	str	r3, [sp, #8]
   1161a:	4b11      	ldr	r3, [pc, #68]	; (11660 <mesh_init+0xfc>)
   1161c:	4622      	mov	r2, r4
   1161e:	9301      	str	r3, [sp, #4]
   11620:	2301      	movs	r3, #1
   11622:	21ff      	movs	r1, #255	; 0xff
   11624:	9300      	str	r3, [sp, #0]
   11626:	a804      	add	r0, sp, #16
   11628:	f7ff fef4 	bl	11414 <mesh_form_pkt>
   1162c:	2800      	cmp	r0, #0
   1162e:	d0a7      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11630:	a804      	add	r0, sp, #16
   11632:	f7ff ff6b 	bl	1150c <mesh_send_formed_pkt>
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   11636:	2800      	cmp	r0, #0
   11638:	d0a2      	beq.n	11580 <mesh_init+0x1c>
   1163a:	e7e9      	b.n	11610 <mesh_init+0xac>
   1163c:	2007c3f2 	.word	0x2007c3f2
   11640:	2007c33e 	.word	0x2007c33e
   11644:	2007c447 	.word	0x2007c447
   11648:	2007c43a 	.word	0x2007c43a
   1164c:	2007c3ce 	.word	0x2007c3ce
   11650:	2007c08c 	.word	0x2007c08c
   11654:	2007c446 	.word	0x2007c446
   11658:	2007c328 	.word	0x2007c328
   1165c:	2007c3da 	.word	0x2007c3da
   11660:	0001f321 	.word	0x0001f321

00011664 <mesh_send>:
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11664:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   11666:	2b18      	cmp	r3, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11668:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1166a:	d807      	bhi.n	1167c <mesh_send+0x18>
   1166c:	1c1d      	adds	r5, r3, #0
   1166e:	fab2 f482 	clz	r4, r2
   11672:	bf18      	it	ne
   11674:	2501      	movne	r5, #1
   11676:	0964      	lsrs	r4, r4, #5
   11678:	42ac      	cmp	r4, r5
   1167a:	d101      	bne.n	11680 <mesh_send+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   1167c:	2000      	movs	r0, #0
   1167e:	e00e      	b.n	1169e <mesh_send+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11680:	9302      	str	r3, [sp, #8]
   11682:	9201      	str	r2, [sp, #4]
   11684:	9500      	str	r5, [sp, #0]
   11686:	460a      	mov	r2, r1
   11688:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   1168c:	4601      	mov	r1, r0
   1168e:	a804      	add	r0, sp, #16
   11690:	f7ff fec0 	bl	11414 <mesh_form_pkt>
   11694:	2800      	cmp	r0, #0
   11696:	d0f1      	beq.n	1167c <mesh_send+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11698:	a804      	add	r0, sp, #16
   1169a:	f7ff ff37 	bl	1150c <mesh_send_formed_pkt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   1169e:	b00d      	add	sp, #52	; 0x34
   116a0:	bd30      	pop	{r4, r5, pc}

000116a2 <mesh_send_ack>:
mesh_send_ack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   116a2:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   116a4:	7953      	ldrb	r3, [r2, #5]
   116a6:	7814      	ldrb	r4, [r2, #0]
   116a8:	091b      	lsrs	r3, r3, #4
   116aa:	9300      	str	r3, [sp, #0]
   116ac:	4602      	mov	r2, r0
   116ae:	460b      	mov	r3, r1
   116b0:	4620      	mov	r0, r4
   116b2:	2103      	movs	r1, #3
   116b4:	f7ff ffd6 	bl	11664 <mesh_send>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   116b8:	b002      	add	sp, #8
   116ba:	bd10      	pop	{r4, pc}

000116bc <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

    return entry;
}

uint8_t mesh_get_num_routing_entries(void)
{
   116bc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   116be:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   116c0:	4a04      	ldr	r2, [pc, #16]	; (116d4 <mesh_get_num_routing_entries+0x18>)
   116c2:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   116c6:	b109      	cbz	r1, 116cc <mesh_get_num_routing_entries+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   116c8:	3001      	adds	r0, #1
   116ca:	b2c0      	uxtb	r0, r0
   116cc:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   116ce:	2b04      	cmp	r3, #4
   116d0:	d1f7      	bne.n	116c2 <mesh_get_num_routing_entries+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   116d2:	4770      	bx	lr
   116d4:	2007c447 	.word	0x2007c447

000116d8 <mesh_service>:
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   116d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   116dc:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   116de:	2220      	movs	r2, #32
   116e0:	2100      	movs	r1, #0
   116e2:	4668      	mov	r0, sp
   116e4:	f007 fc12 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   116e8:	4ba3      	ldr	r3, [pc, #652]	; (11978 <mesh_service+0x2a0>)
   116ea:	781b      	ldrb	r3, [r3, #0]
   116ec:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   116f0:	bb2b      	cbnz	r3, 1173e <mesh_service+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   116f2:	4fa2      	ldr	r7, [pc, #648]	; (1197c <mesh_service+0x2a4>)
   116f4:	2120      	movs	r1, #32
   116f6:	693b      	ldr	r3, [r7, #16]
   116f8:	4668      	mov	r0, sp
   116fa:	4798      	blx	r3
   116fc:	b908      	cbnz	r0, 11702 <mesh_service+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   116fe:	2400      	movs	r4, #0
   11700:	e011      	b.n	11726 <mesh_service+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   11702:	4d9f      	ldr	r5, [pc, #636]	; (11980 <mesh_service+0x2a8>)
   11704:	886b      	ldrh	r3, [r5, #2]
   11706:	3301      	adds	r3, #1
   11708:	806b      	strh	r3, [r5, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   1170a:	f7ff ffd7 	bl	116bc <mesh_get_num_routing_entries>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   1170e:	f89d 2004 	ldrb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   11712:	72a8      	strb	r0, [r5, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   11714:	f002 0307 	and.w	r3, r2, #7
   11718:	2b03      	cmp	r3, #3
   1171a:	d013      	beq.n	11744 <mesh_service+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   1171c:	4a99      	ldr	r2, [pc, #612]	; (11984 <mesh_service+0x2ac>)
   1171e:	7813      	ldrb	r3, [r2, #0]
   11720:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11724:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   11726:	f7ff fc8f 	bl	11048 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1172a:	2204      	movs	r2, #4
   1172c:	4996      	ldr	r1, [pc, #600]	; (11988 <mesh_service+0x2b0>)
   1172e:	4620      	mov	r0, r4
   11730:	f7ff fda2 	bl	11278 <mesh_handle_pnd_pkts_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   11734:	2202      	movs	r2, #2
   11736:	4995      	ldr	r1, [pc, #596]	; (1198c <mesh_service+0x2b4>)
   11738:	4620      	mov	r0, r4
   1173a:	f7ff fd9d 	bl	11278 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   1173e:	b008      	add	sp, #32
   11740:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   11744:	4b92      	ldr	r3, [pc, #584]	; (11990 <mesh_service+0x2b8>)
   11746:	f89d e002 	ldrb.w	lr, [sp, #2]
   1174a:	781e      	ldrb	r6, [r3, #0]
   1174c:	45b6      	cmp	lr, r6
   1174e:	d104      	bne.n	1175a <mesh_service+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11750:	4a8c      	ldr	r2, [pc, #560]	; (11984 <mesh_service+0x2ac>)
   11752:	7813      	ldrb	r3, [r2, #0]
   11754:	f043 0302 	orr.w	r3, r3, #2
   11758:	e7e4      	b.n	11724 <mesh_service+0x4c>
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1175a:	4d8e      	ldr	r5, [pc, #568]	; (11994 <mesh_service+0x2bc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   1175c:	4621      	mov	r1, r4
   1175e:	46a8      	mov	r8, r5
   11760:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   11764:	f89d 0000 	ldrb.w	r0, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   11768:	f89d c006 	ldrb.w	ip, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   1176c:	fa5f f982 	uxtb.w	r9, r2
   11770:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   11774:	f813 a005 	ldrb.w	sl, [r3, r5]
   11778:	4582      	cmp	sl, r0
   1177a:	d123      	bne.n	117c4 <mesh_service+0xec>
   1177c:	442b      	add	r3, r5
   1177e:	f893 a001 	ldrb.w	sl, [r3, #1]
   11782:	45e2      	cmp	sl, ip
   11784:	d11e      	bne.n	117c4 <mesh_service+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   11786:	789d      	ldrb	r5, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   11788:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1178a:	ebb5 0509 	subs.w	r5, r5, r9
   1178e:	bf18      	it	ne
   11790:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   11792:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   11796:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1179a:	f7ff fd41 	bl	11220 <mesh_get_rte_to_modify>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   1179e:	f89d 2002 	ldrb.w	r2, [sp, #2]
   117a2:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   117a4:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   117a6:	2200      	movs	r2, #0
   117a8:	7082      	strb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   117aa:	f7ff fcbd 	bl	11128 <mesh_update_rte_scores>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   117ae:	f1b9 0f00 	cmp.w	r9, #0
   117b2:	d001      	beq.n	117b8 <mesh_service+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   117b4:	2d00      	cmp	r5, #0
   117b6:	d0a2      	beq.n	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   117b8:	f89d 3000 	ldrb.w	r3, [sp]
   117bc:	42b3      	cmp	r3, r6
   117be:	d133      	bne.n	11828 <mesh_service+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   117c0:	466c      	mov	r4, sp
   117c2:	e7b0      	b.n	11726 <mesh_service+0x4e>
   117c4:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   117c6:	2904      	cmp	r1, #4
   117c8:	d1d2      	bne.n	11770 <mesh_service+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117ca:	4973      	ldr	r1, [pc, #460]	; (11998 <mesh_service+0x2c0>)
   117cc:	680b      	ldr	r3, [r1, #0]
   117ce:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117d0:	4a72      	ldr	r2, [pc, #456]	; (1199c <mesh_service+0x2c4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117d2:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117d4:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117d6:	f883 c001 	strb.w	ip, [r3, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117da:	d106      	bne.n	117ea <mesh_service+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   117dc:	f8c1 8000 	str.w	r8, [r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   117e0:	4586      	cmp	lr, r0
   117e2:	d105      	bne.n	117f0 <mesh_service+0x118>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   117e4:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   117e6:	46a9      	mov	r9, r5
   117e8:	e7d5      	b.n	11796 <mesh_service+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   117ea:	3303      	adds	r3, #3
   117ec:	600b      	str	r3, [r1, #0]
   117ee:	e7f7      	b.n	117e0 <mesh_service+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   117f0:	4286      	cmp	r6, r0
   117f2:	d0f7      	beq.n	117e4 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   117f4:	f7ff fd14 	bl	11220 <mesh_get_rte_to_modify>
   117f8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   117fa:	f7ff fc95 	bl	11128 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   117fe:	782b      	ldrb	r3, [r5, #0]
   11800:	b133      	cbz	r3, 11810 <mesh_service+0x138>
   11802:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11806:	78aa      	ldrb	r2, [r5, #2]
   11808:	f003 030f 	and.w	r3, r3, #15
   1180c:	4293      	cmp	r3, r2
   1180e:	dce9      	bgt.n	117e4 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   11810:	f89d 3000 	ldrb.w	r3, [sp]
   11814:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   11816:	f89d 3002 	ldrb.w	r3, [sp, #2]
   1181a:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   1181c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11820:	f3c3 0303 	ubfx	r3, r3, #0, #4
   11824:	70ab      	strb	r3, [r5, #2]
   11826:	e7dd      	b.n	117e4 <mesh_service+0x10c>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   11828:	f89d 8001 	ldrb.w	r8, [sp, #1]
   1182c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   11830:	d11b      	bne.n	1186a <mesh_service+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   11832:	683b      	ldr	r3, [r7, #0]
   11834:	2120      	movs	r1, #32
   11836:	4668      	mov	r0, sp
   11838:	4798      	blx	r3
   1183a:	b920      	cbnz	r0, 11846 <mesh_service+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   1183c:	4a51      	ldr	r2, [pc, #324]	; (11984 <mesh_service+0x2ac>)
   1183e:	7813      	ldrb	r3, [r2, #0]
   11840:	f043 0304 	orr.w	r3, r3, #4
   11844:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   11846:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1184a:	f003 020f 	and.w	r2, r3, #15
   1184e:	1c51      	adds	r1, r2, #1
   11850:	f361 0303 	bfi	r3, r1, #0, #4
   11854:	f88d 3005 	strb.w	r3, [sp, #5]
   11858:	f3c3 1303 	ubfx	r3, r3, #4, #4
   1185c:	429a      	cmp	r2, r3
   1185e:	f6bf af4e 	bge.w	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   11862:	4668      	mov	r0, sp
   11864:	f7ff fc16 	bl	11094 <mesh_send_packet>
   11868:	e749      	b.n	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1186a:	4546      	cmp	r6, r8
   1186c:	d12e      	bne.n	118cc <mesh_service+0x1f4>
mesh_handle_our_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   1186e:	f1b9 0f00 	cmp.w	r9, #0
   11872:	d10c      	bne.n	1188e <mesh_service+0x1b6>
   11874:	f89d 3007 	ldrb.w	r3, [sp, #7]
   11878:	b14b      	cbz	r3, 1188e <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1187a:	683b      	ldr	r3, [r7, #0]
   1187c:	2120      	movs	r1, #32
   1187e:	4668      	mov	r0, sp
   11880:	4798      	blx	r3
   11882:	b920      	cbnz	r0, 1188e <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   11884:	4a3f      	ldr	r2, [pc, #252]	; (11984 <mesh_service+0x2ac>)
   11886:	7813      	ldrb	r3, [r2, #0]
   11888:	f043 0304 	orr.w	r3, r3, #4
   1188c:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   1188e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11892:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11896:	2b40      	cmp	r3, #64	; 0x40
   11898:	d112      	bne.n	118c0 <mesh_service+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1189a:	f89d 3007 	ldrb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   1189e:	466a      	mov	r2, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   118a0:	b923      	cbnz	r3, 118ac <mesh_service+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   118a2:	2118      	movs	r1, #24
   118a4:	483e      	ldr	r0, [pc, #248]	; (119a0 <mesh_service+0x2c8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   118a6:	f7ff fefc 	bl	116a2 <mesh_send_ack>
   118aa:	e789      	b.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   118ac:	210c      	movs	r1, #12
   118ae:	4834      	ldr	r0, [pc, #208]	; (11980 <mesh_service+0x2a8>)
   118b0:	f7ff fef7 	bl	116a2 <mesh_send_ack>
   118b4:	2800      	cmp	r0, #0
   118b6:	d183      	bne.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   118b8:	2100      	movs	r1, #0
   118ba:	466a      	mov	r2, sp
   118bc:	4608      	mov	r0, r1
   118be:	e7f2      	b.n	118a6 <mesh_service+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   118c0:	f89d 3003 	ldrb.w	r3, [sp, #3]
   118c4:	2b00      	cmp	r3, #0
   118c6:	f47f af7b 	bne.w	117c0 <mesh_service+0xe8>
   118ca:	e7f5      	b.n	118b8 <mesh_service+0x1e0>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   118cc:	4b35      	ldr	r3, [pc, #212]	; (119a4 <mesh_service+0x2cc>)
   118ce:	781f      	ldrb	r7, [r3, #0]
   118d0:	2f00      	cmp	r7, #0
   118d2:	f43f af14 	beq.w	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   118d6:	f89d 5005 	ldrb.w	r5, [sp, #5]
   118da:	f005 090f 	and.w	r9, r5, #15
   118de:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   118e2:	45d1      	cmp	r9, sl
   118e4:	f6bf af0b 	bge.w	116fe <mesh_service+0x26>
mesh_handle_mesh_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   118e8:	4640      	mov	r0, r8
   118ea:	f7ff fc0b 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   118ee:	f89d 3003 	ldrb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   118f2:	f109 0901 	add.w	r9, r9, #1
   118f6:	f369 0503 	bfi	r5, r9, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   118fa:	429e      	cmp	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   118fc:	f88d 5005 	strb.w	r5, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   11900:	d124      	bne.n	1194c <mesh_service+0x274>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   11902:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11906:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1190a:	2b40      	cmp	r3, #64	; 0x40
   1190c:	d003      	beq.n	11916 <mesh_service+0x23e>
   1190e:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   11912:	4257      	negs	r7, r2
   11914:	4157      	adcs	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   11916:	b350      	cbz	r0, 1196e <mesh_service+0x296>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11918:	2bc0      	cmp	r3, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   1191a:	7844      	ldrb	r4, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1191c:	d120      	bne.n	11960 <mesh_service+0x288>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   1191e:	45a0      	cmp	r8, r4
   11920:	d012      	beq.n	11948 <mesh_service+0x270>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11922:	3400      	adds	r4, #0
   11924:	bf18      	it	ne
   11926:	2401      	movne	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11928:	433c      	orrs	r4, r7
   1192a:	f004 0401 	and.w	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   1192e:	b1d0      	cbz	r0, 11966 <mesh_service+0x28e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   11930:	7843      	ldrb	r3, [r0, #1]
   11932:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   11936:	7885      	ldrb	r5, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   11938:	4668      	mov	r0, sp
   1193a:	f7ff fbab 	bl	11094 <mesh_send_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   1193e:	2c00      	cmp	r4, #0
   11940:	f43f af3e 	beq.w	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11944:	4629      	mov	r1, r5
   11946:	e007      	b.n	11958 <mesh_service+0x280>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11948:	2400      	movs	r4, #0
   1194a:	e7ed      	b.n	11928 <mesh_service+0x250>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   1194c:	2b00      	cmp	r3, #0
   1194e:	f47f af37 	bne.w	117c0 <mesh_service+0xe8>
   11952:	2800      	cmp	r0, #0
   11954:	d1ec      	bne.n	11930 <mesh_service+0x258>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   11956:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11958:	4668      	mov	r0, sp
   1195a:	f7ff fc19 	bl	11190 <mesh_pending_packets_add>
   1195e:	e72f      	b.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11960:	463c      	mov	r4, r7
   11962:	e7e5      	b.n	11930 <mesh_service+0x258>
   11964:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   11966:	2500      	movs	r5, #0
   11968:	f88d 5003 	strb.w	r5, [sp, #3]
   1196c:	e7e4      	b.n	11938 <mesh_service+0x260>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1196e:	2bc0      	cmp	r3, #192	; 0xc0
   11970:	d1f8      	bne.n	11964 <mesh_service+0x28c>
   11972:	4604      	mov	r4, r0
   11974:	e7d8      	b.n	11928 <mesh_service+0x250>
   11976:	bf00      	nop
   11978:	2007c33d 	.word	0x2007c33d
   1197c:	2007c328 	.word	0x2007c328
   11980:	2007c3ce 	.word	0x2007c3ce
   11984:	2007c33c 	.word	0x2007c33c
   11988:	2007c33e 	.word	0x2007c33e
   1198c:	2007c3f2 	.word	0x2007c3f2
   11990:	2007c08c 	.word	0x2007c08c
   11994:	2007c43a 	.word	0x2007c43a
   11998:	2007c090 	.word	0x2007c090
   1199c:	2007c443 	.word	0x2007c443
   119a0:	2007c3da 	.word	0x2007c3da
   119a4:	2007c446 	.word	0x2007c446

000119a8 <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   119a8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   119aa:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   119ac:	4a09      	ldr	r2, [pc, #36]	; (119d4 <mesh_get_pnd_pkt_count+0x2c>)
   119ae:	18d1      	adds	r1, r2, r3
   119b0:	7849      	ldrb	r1, [r1, #1]
   119b2:	b109      	cbz	r1, 119b8 <mesh_get_pnd_pkt_count+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   119b4:	3001      	adds	r0, #1
   119b6:	b2c0      	uxtb	r0, r0
   119b8:	3324      	adds	r3, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   119ba:	2b90      	cmp	r3, #144	; 0x90
   119bc:	d1f7      	bne.n	119ae <mesh_get_pnd_pkt_count+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   119be:	4b06      	ldr	r3, [pc, #24]	; (119d8 <mesh_get_pnd_pkt_count+0x30>)
   119c0:	785a      	ldrb	r2, [r3, #1]
   119c2:	b10a      	cbz	r2, 119c8 <mesh_get_pnd_pkt_count+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   119c4:	3001      	adds	r0, #1
   119c6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   119c8:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   119cc:	b10b      	cbz	r3, 119d2 <mesh_get_pnd_pkt_count+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   119ce:	3001      	adds	r0, #1
   119d0:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   119d2:	4770      	bx	lr
   119d4:	2007c33e 	.word	0x2007c33e
   119d8:	2007c3f2 	.word	0x2007c3f2

000119dc <mem_cpy>:
mem_cpy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   119dc:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   119de:	4604      	mov	r4, r0
   119e0:	1f0d      	subs	r5, r1, #4
   119e2:	1b13      	subs	r3, r2, r4
   119e4:	4403      	add	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   119e6:	2b03      	cmp	r3, #3
   119e8:	d80a      	bhi.n	11a00 <mem_cpy+0x24>
   119ea:	f022 0303 	bic.w	r3, r2, #3
   119ee:	4419      	add	r1, r3
   119f0:	f002 0203 	and.w	r2, r2, #3
   119f4:	3b01      	subs	r3, #1
   119f6:	4418      	add	r0, r3
   119f8:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   119fa:	4291      	cmp	r1, r2
   119fc:	d105      	bne.n	11a0a <mem_cpy+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   119fe:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   11a00:	f855 3f04 	ldr.w	r3, [r5, #4]!
   11a04:	f844 3b04 	str.w	r3, [r4], #4
   11a08:	e7eb      	b.n	119e2 <mem_cpy+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   11a0a:	f811 3b01 	ldrb.w	r3, [r1], #1
   11a0e:	f800 3f01 	strb.w	r3, [r0, #1]!
   11a12:	e7f2      	b.n	119fa <mem_cpy+0x1e>

00011a14 <mem_set>:
mem_set():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   11a14:	4402      	add	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   11a16:	4290      	cmp	r0, r2
   11a18:	d100      	bne.n	11a1c <mem_set+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   11a1a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   11a1c:	f800 1b01 	strb.w	r1, [r0], #1
   11a20:	e7f9      	b.n	11a16 <mem_set+0x2>

00011a22 <sum_sfn>:
sum_sfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   11a22:	4602      	mov	r2, r0
   11a24:	f100 010b 	add.w	r1, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   11a28:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   11a2a:	01c3      	lsls	r3, r0, #7
   11a2c:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   11a30:	f812 0b01 	ldrb.w	r0, [r2], #1
   11a34:	4403      	add	r3, r0
   11a36:	428a      	cmp	r2, r1
   11a38:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   11a3c:	d1f5      	bne.n	11a2a <sum_sfn+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   11a3e:	4770      	bx	lr

00011a40 <get_ldnumber>:
get_ldnumber():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   11a40:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   11a42:	b510      	push	{r4, lr}
   11a44:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   11a46:	b153      	cbz	r3, 11a5e <get_ldnumber+0x1e>
   11a48:	4619      	mov	r1, r3
   11a4a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   11a4c:	f811 0b01 	ldrb.w	r0, [r1], #1
   11a50:	281f      	cmp	r0, #31
   11a52:	d910      	bls.n	11a76 <get_ldnumber+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   11a54:	283a      	cmp	r0, #58	; 0x3a
   11a56:	d1f8      	bne.n	11a4a <get_ldnumber+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   11a58:	1c59      	adds	r1, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   11a5a:	428a      	cmp	r2, r1
   11a5c:	d002      	beq.n	11a64 <get_ldnumber+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   11a5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   11a62:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11a64:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   11a66:	3b30      	subs	r3, #48	; 0x30
   11a68:	b2d9      	uxtb	r1, r3
   11a6a:	2901      	cmp	r1, #1
   11a6c:	d8f7      	bhi.n	11a5e <get_ldnumber+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11a6e:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11a70:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11a72:	6022      	str	r2, [r4, #0]
   11a74:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2122
		vol = 0;		/* Drive 0 */
   11a76:	2000      	movs	r0, #0
   11a78:	bd10      	pop	{r4, pc}

00011a7a <sync_window.part.1>:
sync_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11a7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   11a7c:	6b05      	ldr	r5, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11a7e:	f100 0734 	add.w	r7, r0, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11a82:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11a84:	2301      	movs	r3, #1
   11a86:	462a      	mov	r2, r5
   11a88:	4639      	mov	r1, r7
   11a8a:	7840      	ldrb	r0, [r0, #1]
   11a8c:	f002 f90f 	bl	13cae <disk_write>
   11a90:	b9a0      	cbnz	r0, 11abc <sync_window.part.1+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11a92:	6a63      	ldr	r3, [r4, #36]	; 0x24
   11a94:	69e2      	ldr	r2, [r4, #28]
   11a96:	1aeb      	subs	r3, r5, r3
   11a98:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   11a9a:	7120      	strb	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11a9c:	d301      	bcc.n	11aa2 <sync_window.part.1+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   11a9e:	2000      	movs	r0, #0
   11aa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11aa2:	78e6      	ldrb	r6, [r4, #3]
   11aa4:	2e01      	cmp	r6, #1
   11aa6:	d9fa      	bls.n	11a9e <sync_window.part.1+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11aa8:	69e3      	ldr	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11aaa:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11aac:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11aae:	462a      	mov	r2, r5
   11ab0:	2301      	movs	r3, #1
   11ab2:	7860      	ldrb	r0, [r4, #1]
   11ab4:	f002 f8fb 	bl	13cae <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11ab8:	3e01      	subs	r6, #1
   11aba:	e7f3      	b.n	11aa4 <sync_window.part.1+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   11abc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11abe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ac0 <sync_window>:
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   11ac0:	7903      	ldrb	r3, [r0, #4]
   11ac2:	b10b      	cbz	r3, 11ac8 <sync_window+0x8>
   11ac4:	f7ff bfd9 	b.w	11a7a <sync_window.part.1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ac8:	4618      	mov	r0, r3
   11aca:	4770      	bx	lr

00011acc <sync_fs>:
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   11acc:	b570      	push	{r4, r5, r6, lr}
   11ace:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   11ad0:	f7ff fff6 	bl	11ac0 <sync_window>
   11ad4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   11ad6:	bb80      	cbnz	r0, 11b3a <sync_fs+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   11ad8:	7823      	ldrb	r3, [r4, #0]
   11ada:	2b03      	cmp	r3, #3
   11adc:	d125      	bne.n	11b2a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   11ade:	7963      	ldrb	r3, [r4, #5]
   11ae0:	2b01      	cmp	r3, #1
   11ae2:	d122      	bne.n	11b2a <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   11ae4:	f104 0634 	add.w	r6, r4, #52	; 0x34
   11ae8:	4601      	mov	r1, r0
   11aea:	f44f 7200 	mov.w	r2, #512	; 0x200
   11aee:	4630      	mov	r0, r6
   11af0:	f7ff ff90 	bl	11a14 <mem_set>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11af4:	f64a 2255 	movw	r2, #43605	; 0xaa55
   11af8:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11afc:	4a0f      	ldr	r2, [pc, #60]	; (11b3c <sync_fs+0x70>)
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11afe:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11b00:	6362      	str	r2, [r4, #52]	; 0x34
   11b02:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   11b06:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   11b0a:	3220      	adds	r2, #32
   11b0c:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   11b10:	6962      	ldr	r2, [r4, #20]
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   11b12:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11b14:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   11b18:	6922      	ldr	r2, [r4, #16]
   11b1a:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   11b1e:	6a22      	ldr	r2, [r4, #32]
   11b20:	3201      	adds	r2, #1
   11b22:	6322      	str	r2, [r4, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11b24:	f002 f8c3 	bl	13cae <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   11b28:	7165      	strb	r5, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   11b2a:	2200      	movs	r2, #0
   11b2c:	7860      	ldrb	r0, [r4, #1]
   11b2e:	4611      	mov	r1, r2
   11b30:	f002 f8d9 	bl	13ce6 <disk_ioctl>
   11b34:	3000      	adds	r0, #0
   11b36:	bf18      	it	ne
   11b38:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   11b3a:	bd70      	pop	{r4, r5, r6, pc}
   11b3c:	41615252 	.word	0x41615252

00011b40 <move_window>:
move_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b40:	6b03      	ldr	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11b42:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b44:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11b46:	4605      	mov	r5, r0
   11b48:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b4a:	d011      	beq.n	11b70 <move_window+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   11b4c:	f7ff ffb8 	bl	11ac0 <sync_window>
   11b50:	4604      	mov	r4, r0
   11b52:	b110      	cbz	r0, 11b5a <move_window+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   11b54:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   11b56:	4620      	mov	r0, r4
   11b58:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   11b5a:	2301      	movs	r3, #1
   11b5c:	4632      	mov	r2, r6
   11b5e:	f105 0134 	add.w	r1, r5, #52	; 0x34
   11b62:	7868      	ldrb	r0, [r5, #1]
   11b64:	f002 f887 	bl	13c76 <disk_read>
   11b68:	2800      	cmp	r0, #0
   11b6a:	d1f3      	bne.n	11b54 <move_window+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   11b6c:	632e      	str	r6, [r5, #48]	; 0x30
   11b6e:	e7f2      	b.n	11b56 <move_window+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   11b70:	2400      	movs	r4, #0
   11b72:	e7f0      	b.n	11b56 <move_window+0x16>

00011b74 <check_fs>:
check_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11b74:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11b76:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11b78:	7103      	strb	r3, [r0, #4]
   11b7a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11b7e:	6303      	str	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11b80:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   11b82:	f7ff ffdd 	bl	11b40 <move_window>
   11b86:	b9a0      	cbnz	r0, 11bb2 <check_fs+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   11b88:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11b8c:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   11b90:	429a      	cmp	r2, r3
   11b92:	d110      	bne.n	11bb6 <check_fs+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   11b94:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   11b98:	4a08      	ldr	r2, [pc, #32]	; (11bbc <check_fs+0x48>)
   11b9a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   11b9e:	4293      	cmp	r3, r2
   11ba0:	d00a      	beq.n	11bb8 <check_fs+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   11ba2:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   11ba6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   11baa:	1a80      	subs	r0, r0, r2
   11bac:	bf18      	it	ne
   11bae:	2001      	movne	r0, #1
   11bb0:	bd10      	pop	{r4, pc}
   11bb2:	2003      	movs	r0, #3
   11bb4:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   11bb6:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   11bb8:	bd10      	pop	{r4, pc}
   11bba:	bf00      	nop
   11bbc:	00544146 	.word	0x00544146

00011bc0 <find_volume>:
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   11bc0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bc2:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   11bc4:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bc6:	b085      	sub	sp, #20
   11bc8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11bca:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bcc:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11bce:	f7ff ff37 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11bd2:	1e06      	subs	r6, r0, #0
   11bd4:	f2c0 80f1 	blt.w	11dba <find_volume+0x1fa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   11bd8:	4b7d      	ldr	r3, [pc, #500]	; (11dd0 <find_volume+0x210>)
   11bda:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11bde:	2c00      	cmp	r4, #0
   11be0:	f000 80ed 	beq.w	11dbe <find_volume+0x1fe>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11be4:	68e0      	ldr	r0, [r4, #12]
   11be6:	f001 fc4d 	bl	13484 <ff_req_grant>
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   11bea:	2800      	cmp	r0, #0
   11bec:	f000 80e9 	beq.w	11dc2 <find_volume+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   11bf0:	603c      	str	r4, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   11bf2:	7823      	ldrb	r3, [r4, #0]
   11bf4:	b16b      	cbz	r3, 11c12 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   11bf6:	7860      	ldrb	r0, [r4, #1]
   11bf8:	f002 f835 	bl	13c66 <disk_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   11bfc:	07c1      	lsls	r1, r0, #31
   11bfe:	d408      	bmi.n	11c12 <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   11c00:	2d00      	cmp	r5, #0
   11c02:	f000 80b7 	beq.w	11d74 <find_volume+0x1b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   11c06:	f010 0004 	ands.w	r0, r0, #4
   11c0a:	d000      	beq.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   11c0c:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   11c0e:	b005      	add	sp, #20
   11c10:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11c12:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11c14:	b2f0      	uxtb	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11c16:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11c18:	7060      	strb	r0, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   11c1a:	f002 f811 	bl	13c40 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   11c1e:	07c2      	lsls	r2, r0, #31
   11c20:	f100 80d1 	bmi.w	11dc6 <find_volume+0x206>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   11c24:	b10d      	cbz	r5, 11c2a <find_volume+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   11c26:	0743      	lsls	r3, r0, #29
   11c28:	d4f0      	bmi.n	11c0c <find_volume+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   11c2a:	2100      	movs	r1, #0
   11c2c:	4620      	mov	r0, r4
   11c2e:	f7ff ffa1 	bl	11b74 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   11c32:	2801      	cmp	r0, #1
   11c34:	f040 80ac 	bne.w	11d90 <find_volume+0x1d0>
   11c38:	4621      	mov	r1, r4
   11c3a:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   11c3c:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   11c40:	b10b      	cbz	r3, 11c46 <find_volume+0x86>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11c42:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   11c46:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   11c4a:	3201      	adds	r2, #1
   11c4c:	2a04      	cmp	r2, #4
   11c4e:	f101 0110 	add.w	r1, r1, #16
   11c52:	d1f3      	bne.n	11c3c <find_volume+0x7c>
   11c54:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   11c56:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11c5a:	2d00      	cmp	r5, #0
   11c5c:	f000 808c 	beq.w	11d78 <find_volume+0x1b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   11c60:	4629      	mov	r1, r5
   11c62:	4620      	mov	r0, r4
   11c64:	f7ff ff86 	bl	11b74 <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11c68:	2800      	cmp	r0, #0
   11c6a:	f040 8086 	bne.w	11d7a <find_volume+0x1ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   11c6e:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   11c72:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   11c76:	f040 8089 	bne.w	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   11c7a:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   11c7e:	b901      	cbnz	r1, 11c82 <find_volume+0xc2>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   11c80:	6da1      	ldr	r1, [r4, #88]	; 0x58
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11c82:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   11c86:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11c88:	1e53      	subs	r3, r2, #1
   11c8a:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11c8c:	70e2      	strb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11c8e:	d87d      	bhi.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   11c90:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
   11c94:	70a6      	strb	r6, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   11c96:	2e00      	cmp	r6, #0
   11c98:	d078      	beq.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   11c9a:	1e73      	subs	r3, r6, #1
   11c9c:	4233      	tst	r3, r6
   11c9e:	d175      	bne.n	11d8c <find_volume+0x1cc>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11ca0:	f8b4 e045 	ldrh.w	lr, [r4, #69]	; 0x45
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11ca4:	f01e 0f0f 	tst.w	lr, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   11ca8:	f8a4 e008 	strh.w	lr, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11cac:	d16e      	bne.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   11cae:	f8b4 3047 	ldrh.w	r3, [r4, #71]	; 0x47
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   11cb2:	b903      	cbnz	r3, 11cb6 <find_volume+0xf6>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11cb4:	6d63      	ldr	r3, [r4, #84]	; 0x54
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11cb6:	f8b4 7042 	ldrh.w	r7, [r4, #66]	; 0x42
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   11cba:	2f00      	cmp	r7, #0
   11cbc:	d066      	beq.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   11cbe:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   11cc0:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   11cc4:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   11cc6:	4283      	cmp	r3, r0
   11cc8:	d360      	bcc.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   11cca:	1a1b      	subs	r3, r3, r0
   11ccc:	fbb3 f3f6 	udiv	r3, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   11cd0:	2b00      	cmp	r3, #0
   11cd2:	d05b      	beq.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   11cd4:	f640 76f5 	movw	r6, #4085	; 0xff5
   11cd8:	42b3      	cmp	r3, r6
   11cda:	d95b      	bls.n	11d94 <find_volume+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   11cdc:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   11ce0:	42b3      	cmp	r3, r6
   11ce2:	bf94      	ite	ls
   11ce4:	2602      	movls	r6, #2
   11ce6:	2603      	movhi	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ce8:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11cea:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11cec:	4428      	add	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11cee:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11cf0:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   11cf2:	6225      	str	r5, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11cf4:	6267      	str	r7, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11cf6:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11cf8:	d14e      	bne.n	11d98 <find_volume+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   11cfa:	f1be 0f00 	cmp.w	lr, #0
   11cfe:	d145      	bne.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11d00:	6e22      	ldr	r2, [r4, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   11d02:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11d04:	62a2      	str	r2, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   11d06:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   11d0a:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   11d0e:	d33d      	bcc.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   11d10:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11d14:	6163      	str	r3, [r4, #20]
   11d16:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11d18:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11d1a:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11d1c:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11d1e:	d122      	bne.n	11d66 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   11d20:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   11d24:	2b01      	cmp	r3, #1
   11d26:	d11e      	bne.n	11d66 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   11d28:	1c69      	adds	r1, r5, #1
   11d2a:	4620      	mov	r0, r4
   11d2c:	f7ff ff08 	bl	11b40 <move_window>
   11d30:	b9c8      	cbnz	r0, 11d66 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11d32:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11d36:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   11d3a:	7160      	strb	r0, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11d3c:	429a      	cmp	r2, r3
   11d3e:	d112      	bne.n	11d66 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   11d40:	6b62      	ldr	r2, [r4, #52]	; 0x34
   11d42:	4b24      	ldr	r3, [pc, #144]	; (11dd4 <find_volume+0x214>)
   11d44:	429a      	cmp	r2, r3
   11d46:	d10e      	bne.n	11d66 <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   11d48:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   11d4c:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   11d50:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   11d54:	3320      	adds	r3, #32
   11d56:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   11d58:	bf01      	itttt	eq
   11d5a:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   11d5e:	6163      	streq	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   11d60:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   11d64:	6123      	streq	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11d66:	4a1c      	ldr	r2, [pc, #112]	; (11dd8 <find_volume+0x218>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   11d68:	7026      	strb	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11d6a:	8813      	ldrh	r3, [r2, #0]
   11d6c:	3301      	adds	r3, #1
   11d6e:	b29b      	uxth	r3, r3
   11d70:	8013      	strh	r3, [r2, #0]
   11d72:	80e3      	strh	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   11d74:	2000      	movs	r0, #0
   11d76:	e74a      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11d78:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11d7a:	3601      	adds	r6, #1
   11d7c:	2e04      	cmp	r6, #4
   11d7e:	f47f af6a 	bne.w	11c56 <find_volume+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11d82:	2803      	cmp	r0, #3
   11d84:	d021      	beq.n	11dca <find_volume+0x20a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   11d86:	2800      	cmp	r0, #0
   11d88:	f43f af71 	beq.w	11c6e <find_volume+0xae>
   11d8c:	200d      	movs	r0, #13
   11d8e:	e73e      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   11d90:	2500      	movs	r5, #0
   11d92:	e7f6      	b.n	11d82 <find_volume+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   11d94:	2601      	movs	r6, #1
   11d96:	e7a7      	b.n	11ce8 <find_volume+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   11d98:	f1be 0f00 	cmp.w	lr, #0
   11d9c:	d0f6      	beq.n	11d8c <find_volume+0x1cc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11d9e:	2e02      	cmp	r6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11da0:	4417      	add	r7, r2
   11da2:	ea4f 0243 	mov.w	r2, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11da6:	bf1c      	itt	ne
   11da8:	18d2      	addne	r2, r2, r3
   11daa:	f003 0301 	andne.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11dae:	62a7      	str	r7, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11db0:	bf0c      	ite	eq
   11db2:	4613      	moveq	r3, r2
   11db4:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   11db8:	e7a5      	b.n	11d06 <find_volume+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11dba:	200b      	movs	r0, #11
   11dbc:	e727      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11dbe:	200c      	movs	r0, #12
   11dc0:	e725      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   11dc2:	200f      	movs	r0, #15
   11dc4:	e723      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   11dc6:	2003      	movs	r0, #3
   11dc8:	e721      	b.n	11c0e <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11dca:	2001      	movs	r0, #1
   11dcc:	e71f      	b.n	11c0e <find_volume+0x4e>
   11dce:	bf00      	nop
   11dd0:	2007c45c 	.word	0x2007c45c
   11dd4:	41615252 	.word	0x41615252
   11dd8:	2007c464 	.word	0x2007c464

00011ddc <validate>:
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   11ddc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   11dde:	4604      	mov	r4, r0
   11de0:	b1a8      	cbz	r0, 11e0e <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   11de2:	6803      	ldr	r3, [r0, #0]
   11de4:	b19b      	cbz	r3, 11e0e <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   11de6:	781a      	ldrb	r2, [r3, #0]
   11de8:	b18a      	cbz	r2, 11e0e <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   11dea:	88d9      	ldrh	r1, [r3, #6]
   11dec:	8882      	ldrh	r2, [r0, #4]
   11dee:	4291      	cmp	r1, r2
   11df0:	d10d      	bne.n	11e0e <validate+0x32>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11df2:	68d8      	ldr	r0, [r3, #12]
   11df4:	f001 fb46 	bl	13484 <ff_req_grant>
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   11df8:	b158      	cbz	r0, 11e12 <validate+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   11dfa:	6823      	ldr	r3, [r4, #0]
   11dfc:	7858      	ldrb	r0, [r3, #1]
   11dfe:	f001 ff32 	bl	13c66 <disk_status>
   11e02:	f010 0f01 	tst.w	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   11e06:	bf14      	ite	ne
   11e08:	2003      	movne	r0, #3
   11e0a:	2000      	moveq	r0, #0
   11e0c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   11e0e:	2009      	movs	r0, #9
   11e10:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   11e12:	200f      	movs	r0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   11e14:	bd10      	pop	{r4, pc}

00011e16 <unlock_fs>:
unlock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   11e16:	b150      	cbz	r0, 11e2e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   11e18:	290f      	cmp	r1, #15
   11e1a:	d805      	bhi.n	11e28 <unlock_fs+0x12>
   11e1c:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   11e20:	fa23 f101 	lsr.w	r1, r3, r1
   11e24:	07cb      	lsls	r3, r1, #31
   11e26:	d402      	bmi.n	11e2e <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   11e28:	68c0      	ldr	r0, [r0, #12]
   11e2a:	f001 bb3e 	b.w	134aa <ff_rel_grant>
   11e2e:	4770      	bx	lr

00011e30 <clust2sect>:
clust2sect():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e30:	6983      	ldr	r3, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   11e32:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e34:	3b02      	subs	r3, #2
   11e36:	4299      	cmp	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   11e38:	bf3d      	ittte	cc
   11e3a:	7883      	ldrbcc	r3, [r0, #2]
   11e3c:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   11e3e:	fb01 0003 	mlacc	r0, r1, r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e42:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   11e44:	4770      	bx	lr

00011e46 <get_fat>:
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   11e46:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   11e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11e4a:	4607      	mov	r7, r0
   11e4c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   11e4e:	d94b      	bls.n	11ee8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   11e50:	6983      	ldr	r3, [r0, #24]
   11e52:	4299      	cmp	r1, r3
   11e54:	d248      	bcs.n	11ee8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   11e56:	7803      	ldrb	r3, [r0, #0]
   11e58:	2b02      	cmp	r3, #2
   11e5a:	d029      	beq.n	11eb0 <get_fat+0x6a>
   11e5c:	2b03      	cmp	r3, #3
   11e5e:	d034      	beq.n	11eca <get_fat+0x84>
   11e60:	2b01      	cmp	r3, #1
   11e62:	d141      	bne.n	11ee8 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   11e64:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e68:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11e6a:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   11e6e:	f7ff fe67 	bl	11b40 <move_window>
   11e72:	b110      	cbz	r0, 11e7a <get_fat+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   11e74:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11e78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e7a:	6a79      	ldr	r1, [r7, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   11e7c:	f3c6 0308 	ubfx	r3, r6, #0, #9
   11e80:	3601      	adds	r6, #1
   11e82:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e84:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   11e88:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   11e8a:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e8e:	f7ff fe57 	bl	11b40 <move_window>
   11e92:	2800      	cmp	r0, #0
   11e94:	d1ee      	bne.n	11e74 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   11e96:	f3c6 0608 	ubfx	r6, r6, #0, #9
   11e9a:	443e      	add	r6, r7
   11e9c:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   11ea0:	07e3      	lsls	r3, r4, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   11ea2:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   11ea6:	bf4c      	ite	mi
   11ea8:	0900      	lsrmi	r0, r0, #4
   11eaa:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   11eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   11eb0:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11eb2:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   11eb6:	f7ff fe43 	bl	11b40 <move_window>
   11eba:	2800      	cmp	r0, #0
   11ebc:	d1da      	bne.n	11e74 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   11ebe:	0066      	lsls	r6, r4, #1
   11ec0:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11ec4:	443e      	add	r6, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   11ec6:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   11ec8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   11eca:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11ecc:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   11ed0:	f7ff fe36 	bl	11b40 <move_window>
   11ed4:	2800      	cmp	r0, #0
   11ed6:	d1cd      	bne.n	11e74 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   11ed8:	00a4      	lsls	r4, r4, #2
   11eda:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11ede:	443c      	add	r4, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   11ee0:	6b60      	ldr	r0, [r4, #52]	; 0x34
   11ee2:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   11ee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   11ee8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   11eea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011eec <dir_sdi>:
dir_sdi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   11eec:	b570      	push	{r4, r5, r6, lr}
   11eee:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   11ef0:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   11ef2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11ef4:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   11ef6:	80e1      	strh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11ef8:	d101      	bne.n	11efe <dir_sdi+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   11efa:	2002      	movs	r0, #2
   11efc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11efe:	6803      	ldr	r3, [r0, #0]
   11f00:	6999      	ldr	r1, [r3, #24]
   11f02:	428a      	cmp	r2, r1
   11f04:	d2f9      	bcs.n	11efa <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   11f06:	b9ba      	cbnz	r2, 11f38 <dir_sdi+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   11f08:	7819      	ldrb	r1, [r3, #0]
   11f0a:	2903      	cmp	r1, #3
   11f0c:	d101      	bne.n	11f12 <dir_sdi+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   11f0e:	6a99      	ldr	r1, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   11f10:	b999      	cbnz	r1, 11f3a <dir_sdi+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   11f12:	8919      	ldrh	r1, [r3, #8]
   11f14:	428d      	cmp	r5, r1
   11f16:	d2f0      	bcs.n	11efa <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   11f18:	6a98      	ldr	r0, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   11f1a:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   11f1c:	2800      	cmp	r0, #0
   11f1e:	d0ec      	beq.n	11efa <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f20:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   11f22:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f26:	3334      	adds	r3, #52	; 0x34
   11f28:	f005 050f 	and.w	r5, r5, #15
   11f2c:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   11f30:	6120      	str	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f32:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   11f34:	2000      	movs	r0, #0
   11f36:	bd70      	pop	{r4, r5, r6, pc}
   11f38:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f3a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   11f3c:	789e      	ldrb	r6, [r3, #2]
   11f3e:	0136      	lsls	r6, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f40:	42b5      	cmp	r5, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f42:	4611      	mov	r1, r2
   11f44:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f46:	d202      	bcs.n	11f4e <dir_sdi+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   11f48:	f7ff ff72 	bl	11e30 <clust2sect>
   11f4c:	e7e5      	b.n	11f1a <dir_sdi+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f4e:	f7ff ff7a 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f52:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f54:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f56:	d007      	beq.n	11f68 <dir_sdi+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   11f58:	2801      	cmp	r0, #1
   11f5a:	d9ce      	bls.n	11efa <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   11f5c:	6823      	ldr	r3, [r4, #0]
   11f5e:	699b      	ldr	r3, [r3, #24]
   11f60:	4298      	cmp	r0, r3
   11f62:	d2ca      	bcs.n	11efa <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   11f64:	1bad      	subs	r5, r5, r6
   11f66:	e7eb      	b.n	11f40 <dir_sdi+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f68:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   11f6a:	bd70      	pop	{r4, r5, r6, pc}

00011f6c <put_fat>:
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   11f6c:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   11f6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11f70:	4605      	mov	r5, r0
   11f72:	460c      	mov	r4, r1
   11f74:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   11f76:	d960      	bls.n	1203a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   11f78:	6983      	ldr	r3, [r0, #24]
   11f7a:	4299      	cmp	r1, r3
   11f7c:	d25d      	bcs.n	1203a <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   11f7e:	7803      	ldrb	r3, [r0, #0]
   11f80:	2b02      	cmp	r3, #2
   11f82:	d03a      	beq.n	11ffa <put_fat+0x8e>
   11f84:	2b03      	cmp	r3, #3
   11f86:	d045      	beq.n	12014 <put_fat+0xa8>
   11f88:	2b01      	cmp	r3, #1
   11f8a:	d154      	bne.n	12036 <put_fat+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   11f8c:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11f90:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11f92:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   11f96:	f7ff fdd3 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   11f9a:	bb18      	cbnz	r0, 11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   11f9c:	f3c7 0308 	ubfx	r3, r7, #0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   11fa0:	f014 0401 	ands.w	r4, r4, #1
   11fa4:	442b      	add	r3, r5
   11fa6:	bf17      	itett	ne
   11fa8:	f893 2034 	ldrbne.w	r2, [r3, #52]	; 0x34
   11fac:	b2f2      	uxtbeq	r2, r6
   11fae:	f002 010f 	andne.w	r1, r2, #15
   11fb2:	0132      	lslne	r2, r6, #4
   11fb4:	bf1c      	itt	ne
   11fb6:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   11fba:	430a      	orrne	r2, r1
   11fbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11fc0:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11fc2:	6a69      	ldr	r1, [r5, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   11fc4:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11fc6:	712b      	strb	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11fc8:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   11fcc:	4628      	mov	r0, r5
   11fce:	f7ff fdb7 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   11fd2:	b938      	cbnz	r0, 11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   11fd4:	f3c7 0708 	ubfx	r7, r7, #0, #9
   11fd8:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   11fda:	b134      	cbz	r4, 11fea <put_fat+0x7e>
   11fdc:	f3c6 1607 	ubfx	r6, r6, #4, #8
   11fe0:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   11fe4:	2301      	movs	r3, #1
   11fe6:	712b      	strb	r3, [r5, #4]
   11fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   11fea:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   11fee:	f3c6 2603 	ubfx	r6, r6, #8, #4
   11ff2:	f023 030f 	bic.w	r3, r3, #15
   11ff6:	431e      	orrs	r6, r3
   11ff8:	e7f2      	b.n	11fe0 <put_fat+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   11ffa:	6a41      	ldr	r1, [r0, #36]	; 0x24
   11ffc:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   12000:	f7ff fd9e 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   12004:	2800      	cmp	r0, #0
   12006:	d1ed      	bne.n	11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   12008:	0064      	lsls	r4, r4, #1
   1200a:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1200e:	442c      	add	r4, r5
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   12010:	86a6      	strh	r6, [r4, #52]	; 0x34
   12012:	e7e7      	b.n	11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   12014:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12016:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   1201a:	f7ff fd91 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   1201e:	2800      	cmp	r0, #0
   12020:	d1e0      	bne.n	11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   12022:	00a4      	lsls	r4, r4, #2
   12024:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12028:	3434      	adds	r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   1202a:	592b      	ldr	r3, [r5, r4]
   1202c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   12030:	431e      	orrs	r6, r3
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12032:	512e      	str	r6, [r5, r4]
   12034:	e7d6      	b.n	11fe4 <put_fat+0x78>
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   12036:	2002      	movs	r0, #2
   12038:	e7d4      	b.n	11fe4 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   1203a:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   1203c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001203e <create_chain>:
create_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   1203e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12040:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   12042:	460f      	mov	r7, r1
   12044:	b971      	cbnz	r1, 12064 <create_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   12046:	6906      	ldr	r6, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12048:	b1e6      	cbz	r6, 12084 <create_chain+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   1204a:	6983      	ldr	r3, [r0, #24]
   1204c:	429e      	cmp	r6, r3
   1204e:	bf28      	it	cs
   12050:	2601      	movcs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   12052:	4634      	mov	r4, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12054:	69ab      	ldr	r3, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   12056:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12058:	429c      	cmp	r4, r3
   1205a:	d316      	bcc.n	1208a <create_chain+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   1205c:	2e01      	cmp	r6, #1
   1205e:	d813      	bhi.n	12088 <create_chain+0x4a>
   12060:	2400      	movs	r4, #0
   12062:	e008      	b.n	12076 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12064:	f7ff feef 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12068:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   1206a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   1206c:	d935      	bls.n	120da <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   1206e:	3001      	adds	r0, #1
   12070:	d103      	bne.n	1207a <create_chain+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12072:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   12076:	4620      	mov	r0, r4
   12078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   1207a:	69ab      	ldr	r3, [r5, #24]
   1207c:	429c      	cmp	r4, r3
   1207e:	d3fa      	bcc.n	12076 <create_chain+0x38>
   12080:	463e      	mov	r6, r7
   12082:	e7e6      	b.n	12052 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12084:	2601      	movs	r6, #1
   12086:	e7e4      	b.n	12052 <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12088:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   1208a:	4621      	mov	r1, r4
   1208c:	4628      	mov	r0, r5
   1208e:	f7ff feda 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   12092:	b130      	cbz	r0, 120a2 <create_chain+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   12094:	1c41      	adds	r1, r0, #1
   12096:	d0ec      	beq.n	12072 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   12098:	2801      	cmp	r0, #1
   1209a:	d01e      	beq.n	120da <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   1209c:	42b4      	cmp	r4, r6
   1209e:	d1d9      	bne.n	12054 <create_chain+0x16>
   120a0:	e7de      	b.n	12060 <create_chain+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   120a2:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   120a6:	4621      	mov	r1, r4
   120a8:	4628      	mov	r0, r5
   120aa:	f7ff ff5f 	bl	11f6c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   120ae:	b990      	cbnz	r0, 120d6 <create_chain+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   120b0:	b957      	cbnz	r7, 120c8 <create_chain+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   120b2:	696b      	ldr	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   120b4:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   120b6:	1c5a      	adds	r2, r3, #1
   120b8:	d0dd      	beq.n	12076 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   120ba:	3b01      	subs	r3, #1
   120bc:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   120be:	796b      	ldrb	r3, [r5, #5]
   120c0:	f043 0301 	orr.w	r3, r3, #1
   120c4:	716b      	strb	r3, [r5, #5]
   120c6:	e7d6      	b.n	12076 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   120c8:	4622      	mov	r2, r4
   120ca:	4639      	mov	r1, r7
   120cc:	4628      	mov	r0, r5
   120ce:	f7ff ff4d 	bl	11f6c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   120d2:	2800      	cmp	r0, #0
   120d4:	d0ed      	beq.n	120b2 <create_chain+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   120d6:	2801      	cmp	r0, #1
   120d8:	d0cb      	beq.n	12072 <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   120da:	2401      	movs	r4, #1
   120dc:	e7cb      	b.n	12076 <create_chain+0x38>

000120de <dir_next>:
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120de:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   120e2:	88c6      	ldrh	r6, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120e4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   120e6:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   120e8:	b2b3      	uxth	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120ea:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   120ec:	b913      	cbnz	r3, 120f4 <dir_next+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   120ee:	2004      	movs	r0, #4
   120f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   120f4:	6903      	ldr	r3, [r0, #16]
   120f6:	2b00      	cmp	r3, #0
   120f8:	d0f9      	beq.n	120ee <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   120fa:	f016 080f 	ands.w	r8, r6, #15
   120fe:	d107      	bne.n	12110 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   12100:	68c1      	ldr	r1, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   12102:	3301      	adds	r3, #1
   12104:	6103      	str	r3, [r0, #16]
   12106:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   12108:	b959      	cbnz	r1, 12122 <dir_next+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   1210a:	8903      	ldrh	r3, [r0, #8]
   1210c:	429e      	cmp	r6, r3
   1210e:	d2ee      	bcs.n	120ee <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   12110:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   12112:	80e6      	strh	r6, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   12114:	3334      	adds	r3, #52	; 0x34
   12116:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   1211a:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   1211c:	2000      	movs	r0, #0
   1211e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   12122:	7887      	ldrb	r7, [r0, #2]
   12124:	3f01      	subs	r7, #1
   12126:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   1212a:	d1f1      	bne.n	12110 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1212c:	f7ff fe8b 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12130:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   12132:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12134:	d802      	bhi.n	1213c <dir_next+0x5e>
   12136:	2002      	movs	r0, #2
   12138:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   1213c:	1c42      	adds	r2, r0, #1
   1213e:	d102      	bne.n	12146 <dir_next+0x68>
   12140:	2001      	movs	r0, #1
   12142:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   12146:	6820      	ldr	r0, [r4, #0]
   12148:	6983      	ldr	r3, [r0, #24]
   1214a:	429d      	cmp	r5, r3
   1214c:	d327      	bcc.n	1219e <dir_next+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   1214e:	f1b9 0f00 	cmp.w	r9, #0
   12152:	d0cc      	beq.n	120ee <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   12154:	68e1      	ldr	r1, [r4, #12]
   12156:	f7ff ff72 	bl	1203e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   1215a:	4605      	mov	r5, r0
   1215c:	2800      	cmp	r0, #0
   1215e:	d031      	beq.n	121c4 <dir_next+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   12160:	2801      	cmp	r0, #1
   12162:	d0e8      	beq.n	12136 <dir_next+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12164:	1c43      	adds	r3, r0, #1
   12166:	d0eb      	beq.n	12140 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   12168:	6820      	ldr	r0, [r4, #0]
   1216a:	f7ff fca9 	bl	11ac0 <sync_window>
   1216e:	4601      	mov	r1, r0
   12170:	2800      	cmp	r0, #0
   12172:	d1e5      	bne.n	12140 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   12174:	6820      	ldr	r0, [r4, #0]
   12176:	f44f 7200 	mov.w	r2, #512	; 0x200
   1217a:	3034      	adds	r0, #52	; 0x34
   1217c:	f7ff fc4a 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   12180:	6822      	ldr	r2, [r4, #0]
   12182:	4629      	mov	r1, r5
   12184:	4610      	mov	r0, r2
   12186:	f7ff fe53 	bl	11e30 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   1218a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1218e:	6310      	str	r0, [r2, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   12190:	6820      	ldr	r0, [r4, #0]
   12192:	7883      	ldrb	r3, [r0, #2]
   12194:	429f      	cmp	r7, r3
   12196:	d309      	bcc.n	121ac <dir_next+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   12198:	6b03      	ldr	r3, [r0, #48]	; 0x30
   1219a:	1bdf      	subs	r7, r3, r7
   1219c:	6307      	str	r7, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   1219e:	60e5      	str	r5, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   121a0:	4629      	mov	r1, r5
   121a2:	6820      	ldr	r0, [r4, #0]
   121a4:	f7ff fe44 	bl	11e30 <clust2sect>
   121a8:	6120      	str	r0, [r4, #16]
   121aa:	e7b1      	b.n	12110 <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   121ac:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   121b0:	f7ff fc63 	bl	11a7a <sync_window.part.1>
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   121b4:	2800      	cmp	r0, #0
   121b6:	d1c3      	bne.n	12140 <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   121b8:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   121ba:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   121bc:	6b13      	ldr	r3, [r2, #48]	; 0x30
   121be:	3301      	adds	r3, #1
   121c0:	6313      	str	r3, [r2, #48]	; 0x30
   121c2:	e7e5      	b.n	12190 <dir_next+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   121c4:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   121c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   121ca:	Address 0x00000000000121ca is out of bounds.


000121cc <dir_find.part.9>:
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   121cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   121d0:	f04f 08ff 	mov.w	r8, #255	; 0xff
   121d4:	f64f 77ff 	movw	r7, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   121d8:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   121da:	4644      	mov	r4, r8
   121dc:	8407      	strh	r7, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   121de:	6931      	ldr	r1, [r6, #16]
   121e0:	6830      	ldr	r0, [r6, #0]
   121e2:	f7ff fcad 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   121e6:	4682      	mov	sl, r0
   121e8:	2800      	cmp	r0, #0
   121ea:	d15e      	bne.n	122aa <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   121ec:	6975      	ldr	r5, [r6, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   121ee:	782b      	ldrb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   121f0:	2b00      	cmp	r3, #0
   121f2:	d076      	beq.n	122e2 <dir_find.part.9+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   121f4:	2be5      	cmp	r3, #229	; 0xe5
   121f6:	d006      	beq.n	12206 <dir_find.part.9+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   121f8:	7ae9      	ldrb	r1, [r5, #11]
   121fa:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   121fe:	0709      	lsls	r1, r1, #28
   12200:	d503      	bpl.n	1220a <dir_find.part.9+0x3e>
   12202:	2a0f      	cmp	r2, #15
   12204:	d003      	beq.n	1220e <dir_find.part.9+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   12206:	8437      	strh	r7, [r6, #32]
   12208:	e047      	b.n	1229a <dir_find.part.9+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   1220a:	2a0f      	cmp	r2, #15
   1220c:	d154      	bne.n	122b8 <dir_find.part.9+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   1220e:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   12212:	f1bb 0f00 	cmp.w	fp, #0
   12216:	d041      	beq.n	1229c <dir_find.part.9+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   12218:	0658      	lsls	r0, r3, #25
   1221a:	d53c      	bpl.n	12296 <dir_find.part.9+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   1221c:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12220:	88f3      	ldrh	r3, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   12222:	f895 800d 	ldrb.w	r8, [r5, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12226:	8433      	strh	r3, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12228:	7b6b      	ldrb	r3, [r5, #13]
   1222a:	4543      	cmp	r3, r8
   1222c:	d135      	bne.n	1229a <dir_find.part.9+0xce>
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1222e:	f895 a000 	ldrb.w	sl, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12232:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12234:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   12238:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   1223c:	f04f 0a0d 	mov.w	sl, #13
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   12240:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12244:	fb0a fa03 	mul.w	sl, sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   12248:	4b27      	ldr	r3, [pc, #156]	; (122e8 <dir_find.part.9+0x11c>)
   1224a:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   1224e:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   12250:	b378      	cbz	r0, 122b2 <dir_find.part.9+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   12252:	4610      	mov	r0, r2
   12254:	f001 f956 	bl	13504 <ff_wtoupper>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   12258:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1225c:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   1225e:	d81c      	bhi.n	1229a <dir_find.part.9+0xce>
   12260:	f10a 0201 	add.w	r2, sl, #1
   12264:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   12268:	9200      	str	r2, [sp, #0]
   1226a:	f001 f94b 	bl	13504 <ff_wtoupper>
   1226e:	9901      	ldr	r1, [sp, #4]
   12270:	4281      	cmp	r1, r0
   12272:	d112      	bne.n	1229a <dir_find.part.9+0xce>
   12274:	9a00      	ldr	r2, [sp, #0]
   12276:	4692      	mov	sl, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   12278:	f109 0901 	add.w	r9, r9, #1
   1227c:	f1b9 0f0d 	cmp.w	r9, #13
   12280:	d1e2      	bne.n	12248 <dir_find.part.9+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   12282:	782b      	ldrb	r3, [r5, #0]
   12284:	0659      	lsls	r1, r3, #25
   12286:	d503      	bpl.n	12290 <dir_find.part.9+0xc4>
   12288:	b110      	cbz	r0, 12290 <dir_find.part.9+0xc4>
   1228a:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   1228e:	b923      	cbnz	r3, 1229a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12290:	3c01      	subs	r4, #1
   12292:	b2e4      	uxtb	r4, r4
   12294:	e002      	b.n	1229c <dir_find.part.9+0xd0>
   12296:	42a3      	cmp	r3, r4
   12298:	d0c6      	beq.n	12228 <dir_find.part.9+0x5c>
   1229a:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   1229c:	2100      	movs	r1, #0
   1229e:	4630      	mov	r0, r6
   122a0:	f7ff ff1d 	bl	120de <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   122a4:	4682      	mov	sl, r0
   122a6:	2800      	cmp	r0, #0
   122a8:	d099      	beq.n	121de <dir_find.part.9+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   122aa:	4650      	mov	r0, sl
   122ac:	b003      	add	sp, #12
   122ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   122b2:	42ba      	cmp	r2, r7
   122b4:	d0e0      	beq.n	12278 <dir_find.part.9+0xac>
   122b6:	e7f0      	b.n	1229a <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   122b8:	b924      	cbnz	r4, 122c4 <dir_find.part.9+0xf8>
   122ba:	4628      	mov	r0, r5
   122bc:	f7ff fbb1 	bl	11a22 <sum_sfn>
   122c0:	4540      	cmp	r0, r8
   122c2:	d0f2      	beq.n	122aa <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   122c4:	69b3      	ldr	r3, [r6, #24]
   122c6:	7ada      	ldrb	r2, [r3, #11]
   122c8:	07d2      	lsls	r2, r2, #31
   122ca:	d49c      	bmi.n	12206 <dir_find.part.9+0x3a>
   122cc:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   122d0:	4298      	cmp	r0, r3
   122d2:	d0ea      	beq.n	122aa <dir_find.part.9+0xde>
   122d4:	f815 1b01 	ldrb.w	r1, [r5], #1
   122d8:	f813 2b01 	ldrb.w	r2, [r3], #1
   122dc:	4291      	cmp	r1, r2
   122de:	d0f7      	beq.n	122d0 <dir_find.part.9+0x104>
   122e0:	e791      	b.n	12206 <dir_find.part.9+0x3a>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   122e2:	f04f 0a04 	mov.w	sl, #4
   122e6:	e7e0      	b.n	122aa <dir_find.part.9+0xde>
   122e8:	0001f3a8 	.word	0x0001f3a8

000122ec <follow_path>:
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   122ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   122f0:	780b      	ldrb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   122f2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   122f4:	2b2f      	cmp	r3, #47	; 0x2f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   122f6:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   122f8:	d001      	beq.n	122fe <follow_path+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2031 (discriminator 1)
   122fa:	2b5c      	cmp	r3, #92	; 0x5c
   122fc:	d101      	bne.n	12302 <follow_path+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2032
		path++;
   122fe:	f108 0801 	add.w	r8, r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2033
	dp->sclust = 0;							/* Always start from the root directory */
   12302:	2400      	movs	r4, #0
   12304:	60bc      	str	r4, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   12306:	f898 3000 	ldrb.w	r3, [r8]
   1230a:	2b1f      	cmp	r3, #31
   1230c:	f200 8090 	bhi.w	12430 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   12310:	4621      	mov	r1, r4
   12312:	4638      	mov	r0, r7
   12314:	f7ff fdea 	bl	11eec <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   12318:	617c      	str	r4, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   1231a:	b003      	add	sp, #12
   1231c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   12320:	f825 0f02 	strh.w	r0, [r5, #2]!
   12324:	4646      	mov	r6, r8
   12326:	e093      	b.n	12450 <follow_path+0x164>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   12328:	2820      	cmp	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1232a:	44a0      	add	r8, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1232c:	bf34      	ite	cc
   1232e:	2404      	movcc	r4, #4
   12330:	2400      	movcs	r4, #0
   12332:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   12336:	2e00      	cmp	r6, #0
   12338:	f000 80a9 	beq.w	1248e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   1233c:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   12340:	2920      	cmp	r1, #32
   12342:	d002      	beq.n	1234a <follow_path+0x5e>
   12344:	292e      	cmp	r1, #46	; 0x2e
   12346:	f040 80a6 	bne.w	12496 <follow_path+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   1234a:	3e01      	subs	r6, #1
   1234c:	e7f3      	b.n	12336 <follow_path+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   1234e:	3101      	adds	r1, #1
   12350:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   12354:	2a20      	cmp	r2, #32
   12356:	d0fa      	beq.n	1234e <follow_path+0x62>
   12358:	2a2e      	cmp	r2, #46	; 0x2e
   1235a:	d0f8      	beq.n	1234e <follow_path+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   1235c:	b109      	cbz	r1, 12362 <follow_path+0x76>
   1235e:	f044 0403 	orr.w	r4, r4, #3
   12362:	464a      	mov	r2, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   12364:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   12368:	282e      	cmp	r0, #46	; 0x2e
   1236a:	d001      	beq.n	12370 <follow_path+0x84>
   1236c:	3e01      	subs	r6, #1
   1236e:	d1f9      	bne.n	12364 <follow_path+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12370:	f04f 0a00 	mov.w	sl, #0
   12374:	f04f 0908 	mov.w	r9, #8
   12378:	4655      	mov	r5, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   1237a:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   1237e:	1c4a      	adds	r2, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   12380:	2800      	cmp	r0, #0
   12382:	f000 809f 	beq.w	124c4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   12386:	2820      	cmp	r0, #32
   12388:	d004      	beq.n	12394 <follow_path+0xa8>
   1238a:	282e      	cmp	r0, #46	; 0x2e
   1238c:	d106      	bne.n	1239c <follow_path+0xb0>
   1238e:	42b2      	cmp	r2, r6
   12390:	f000 808d 	beq.w	124ae <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   12394:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12398:	4611      	mov	r1, r2
   1239a:	e7ee      	b.n	1237a <follow_path+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1239c:	45ca      	cmp	sl, r9
   1239e:	f080 8089 	bcs.w	124b4 <follow_path+0x1c8>
   123a2:	42b2      	cmp	r2, r6
   123a4:	d111      	bne.n	123ca <follow_path+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   123a6:	f1b9 0f0b 	cmp.w	r9, #11
   123aa:	d106      	bne.n	123ba <follow_path+0xce>
   123ac:	e086      	b.n	124bc <follow_path+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   123ae:	42b2      	cmp	r2, r6
   123b0:	d003      	beq.n	123ba <follow_path+0xce>
   123b2:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   123b6:	f200 8085 	bhi.w	124c4 <follow_path+0x1d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   123ba:	00ad      	lsls	r5, r5, #2
   123bc:	b2ed      	uxtb	r5, r5
   123be:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   123c0:	f04f 090b 	mov.w	r9, #11
   123c4:	f04f 0a08 	mov.w	sl, #8
   123c8:	e7e6      	b.n	12398 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   123ca:	287f      	cmp	r0, #127	; 0x7f
   123cc:	d90d      	bls.n	123ea <follow_path+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   123ce:	2100      	movs	r1, #0
   123d0:	9201      	str	r2, [sp, #4]
   123d2:	f001 f879 	bl	134c8 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   123d6:	9a01      	ldr	r2, [sp, #4]
   123d8:	b118      	cbz	r0, 123e2 <follow_path+0xf6>
   123da:	4b5d      	ldr	r3, [pc, #372]	; (12550 <follow_path+0x264>)
   123dc:	4418      	add	r0, r3
   123de:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   123e2:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   123e4:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   123e8:	b138      	cbz	r0, 123fa <follow_path+0x10e>
   123ea:	4b5a      	ldr	r3, [pc, #360]	; (12554 <follow_path+0x268>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   123ec:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   123f0:	2900      	cmp	r1, #0
   123f2:	f000 809f 	beq.w	12534 <follow_path+0x248>
   123f6:	4281      	cmp	r1, r0
   123f8:	d1f8      	bne.n	123ec <follow_path+0x100>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   123fa:	205f      	movs	r0, #95	; 0x5f
   123fc:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12400:	69b9      	ldr	r1, [r7, #24]
   12402:	f801 000a 	strb.w	r0, [r1, sl]
   12406:	f10a 0a01 	add.w	sl, sl, #1
   1240a:	e7c5      	b.n	12398 <follow_path+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   1240c:	f045 0502 	orr.w	r5, r5, #2
   12410:	e7f6      	b.n	12400 <follow_path+0x114>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   12412:	075a      	lsls	r2, r3, #29
   12414:	d481      	bmi.n	1231a <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   12416:	697a      	ldr	r2, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   12418:	7ad3      	ldrb	r3, [r2, #11]
   1241a:	06db      	lsls	r3, r3, #27
   1241c:	d539      	bpl.n	12492 <follow_path+0x1a6>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1241e:	6839      	ldr	r1, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12420:	8b53      	ldrh	r3, [r2, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12422:	7809      	ldrb	r1, [r1, #0]
   12424:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12426:	bf04      	itt	eq
   12428:	8a92      	ldrheq	r2, [r2, #20]
   1242a:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   1242e:	60bb      	str	r3, [r7, #8]
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   12430:	f898 3000 	ldrb.w	r3, [r8]
   12434:	4644      	mov	r4, r8
   12436:	2b2f      	cmp	r3, #47	; 0x2f
   12438:	f108 0801 	add.w	r8, r8, #1
   1243c:	d0f8      	beq.n	12430 <follow_path+0x144>
   1243e:	2b5c      	cmp	r3, #92	; 0x5c
   12440:	d0f6      	beq.n	12430 <follow_path+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   12442:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   12444:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   12448:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   1244c:	f1ab 0502 	sub.w	r5, fp, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   12450:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   12454:	f106 0801 	add.w	r8, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   12458:	281f      	cmp	r0, #31
   1245a:	f67f af65 	bls.w	12328 <follow_path+0x3c>
   1245e:	282f      	cmp	r0, #47	; 0x2f
   12460:	f43f af62 	beq.w	12328 <follow_path+0x3c>
   12464:	285c      	cmp	r0, #92	; 0x5c
   12466:	f43f af5f 	beq.w	12328 <follow_path+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   1246a:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   1246e:	d00e      	beq.n	1248e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   12470:	2101      	movs	r1, #1
   12472:	f001 f829 	bl	134c8 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   12476:	b150      	cbz	r0, 1248e <follow_path+0x1a2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   12478:	287f      	cmp	r0, #127	; 0x7f
   1247a:	f63f af51 	bhi.w	12320 <follow_path+0x34>
   1247e:	4936      	ldr	r1, [pc, #216]	; (12558 <follow_path+0x26c>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   12480:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   12484:	2a00      	cmp	r2, #0
   12486:	f43f af4b 	beq.w	12320 <follow_path+0x34>
   1248a:	4282      	cmp	r2, r0
   1248c:	d1f8      	bne.n	12480 <follow_path+0x194>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1248e:	2006      	movs	r0, #6
   12490:	e743      	b.n	1231a <follow_path+0x2e>
   12492:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   12494:	e741      	b.n	1231a <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12496:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12498:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1249a:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   1249e:	220b      	movs	r2, #11
   124a0:	69b8      	ldr	r0, [r7, #24]
   124a2:	f7ff fab7 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   124a6:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   124aa:	4629      	mov	r1, r5
   124ac:	e750      	b.n	12350 <follow_path+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   124ae:	45ca      	cmp	sl, r9
   124b0:	f4ff af79 	bcc.w	123a6 <follow_path+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   124b4:	f1b9 0f0b 	cmp.w	r9, #11
   124b8:	f47f af79 	bne.w	123ae <follow_path+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   124bc:	f04f 090b 	mov.w	r9, #11
   124c0:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   124c4:	69bb      	ldr	r3, [r7, #24]
   124c6:	781a      	ldrb	r2, [r3, #0]
   124c8:	2ae5      	cmp	r2, #229	; 0xe5
   124ca:	bf04      	itt	eq
   124cc:	2205      	moveq	r2, #5
   124ce:	701a      	strbeq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   124d0:	f1b9 0f08 	cmp.w	r9, #8
   124d4:	bf04      	itt	eq
   124d6:	00ad      	lsleq	r5, r5, #2
   124d8:	b2ed      	uxtbeq	r5, r5
   124da:	f005 030c 	and.w	r3, r5, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   124de:	2b0c      	cmp	r3, #12
   124e0:	d003      	beq.n	124ea <follow_path+0x1fe>
   124e2:	f005 0203 	and.w	r2, r5, #3
   124e6:	2a03      	cmp	r2, #3
   124e8:	d101      	bne.n	124ee <follow_path+0x202>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   124ea:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   124ee:	07a1      	lsls	r1, r4, #30
   124f0:	d409      	bmi.n	12506 <follow_path+0x21a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   124f2:	f005 0503 	and.w	r5, r5, #3
   124f6:	2d01      	cmp	r5, #1
   124f8:	bf08      	it	eq
   124fa:	f044 0410 	orreq.w	r4, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   124fe:	2b04      	cmp	r3, #4
   12500:	bf08      	it	eq
   12502:	f044 0408 	orreq.w	r4, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   12506:	69bb      	ldr	r3, [r7, #24]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   12508:	2100      	movs	r1, #0
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1250a:	72dc      	strb	r4, [r3, #11]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   1250c:	4638      	mov	r0, r7
   1250e:	f7ff fced 	bl	11eec <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   12512:	b910      	cbnz	r0, 1251a <follow_path+0x22e>
   12514:	4638      	mov	r0, r7
   12516:	f7ff fe59 	bl	121cc <dir_find.part.9>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   1251a:	69bb      	ldr	r3, [r7, #24]
   1251c:	7adb      	ldrb	r3, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   1251e:	2800      	cmp	r0, #0
   12520:	f43f af77 	beq.w	12412 <follow_path+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   12524:	2804      	cmp	r0, #4
   12526:	f47f aef8 	bne.w	1231a <follow_path+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   1252a:	f013 0f04 	tst.w	r3, #4
   1252e:	bf08      	it	eq
   12530:	2005      	moveq	r0, #5
   12532:	e6f2      	b.n	1231a <follow_path+0x2e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   12534:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   12538:	2919      	cmp	r1, #25
   1253a:	f67f af67 	bls.w	1240c <follow_path+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   1253e:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   12542:	2919      	cmp	r1, #25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   12544:	bf9e      	ittt	ls
   12546:	3820      	subls	r0, #32
   12548:	f045 0501 	orrls.w	r5, r5, #1
   1254c:	b280      	uxthls	r0, r0
   1254e:	e757      	b.n	12400 <follow_path+0x114>
   12550:	0001f328 	.word	0x0001f328
   12554:	0001f408 	.word	0x0001f408
   12558:	0001f3ff 	.word	0x0001f3ff

0001255c <dir_register>:
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1255c:	220c      	movs	r2, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   1255e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12562:	6986      	ldr	r6, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12564:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12566:	69c7      	ldr	r7, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12568:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1256a:	4631      	mov	r1, r6
   1256c:	eb0d 0002 	add.w	r0, sp, r2
   12570:	f7ff fa34 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   12574:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12578:	07db      	lsls	r3, r3, #31
   1257a:	d579      	bpl.n	12670 <dir_register+0x114>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1257c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   1257e:	f04f 0901 	mov.w	r9, #1
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12582:	f8df 8208 	ldr.w	r8, [pc, #520]	; 1278c <dir_register+0x230>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   12586:	72f3      	strb	r3, [r6, #11]
   12588:	61e3      	str	r3, [r4, #28]
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   1258a:	220b      	movs	r2, #11
   1258c:	a903      	add	r1, sp, #12
   1258e:	4630      	mov	r0, r6
   12590:	f7ff fa24 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   12594:	f1b9 0f05 	cmp.w	r9, #5
   12598:	d84f      	bhi.n	1263a <dir_register+0xde>
   1259a:	464b      	mov	r3, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1259c:	2207      	movs	r2, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   1259e:	f003 000f 	and.w	r0, r3, #15
   125a2:	f100 0130 	add.w	r1, r0, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   125a6:	2939      	cmp	r1, #57	; 0x39
   125a8:	bf88      	it	hi
   125aa:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   125ae:	3a01      	subs	r2, #1
   125b0:	a801      	add	r0, sp, #4
   125b2:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   125b4:	091b      	lsrs	r3, r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   125b6:	7041      	strb	r1, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   125b8:	d1f1      	bne.n	1259e <dir_register+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   125ba:	207e      	movs	r0, #126	; 0x7e
   125bc:	a906      	add	r1, sp, #24
   125be:	4411      	add	r1, r2
   125c0:	f801 0c14 	strb.w	r0, [r1, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   125c4:	429a      	cmp	r2, r3
   125c6:	d03d      	beq.n	12644 <dir_register+0xe8>
   125c8:	5cf1      	ldrb	r1, [r6, r3]
   125ca:	2920      	cmp	r1, #32
   125cc:	d138      	bne.n	12640 <dir_register+0xe4>
   125ce:	4433      	add	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   125d0:	2a07      	cmp	r2, #7
   125d2:	bf8f      	iteee	hi
   125d4:	2120      	movhi	r1, #32
   125d6:	a906      	addls	r1, sp, #24
   125d8:	1889      	addls	r1, r1, r2
   125da:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   125de:	bf98      	it	ls
   125e0:	3201      	addls	r2, #1
   125e2:	f803 1b01 	strb.w	r1, [r3], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   125e6:	1b99      	subs	r1, r3, r6
   125e8:	2907      	cmp	r1, #7
   125ea:	d9f1      	bls.n	125d0 <dir_register+0x74>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   125ec:	2100      	movs	r1, #0
   125ee:	4620      	mov	r0, r4
   125f0:	f7ff fc7c 	bl	11eec <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   125f4:	4605      	mov	r5, r0
   125f6:	bba8      	cbnz	r0, 12664 <dir_register+0x108>
   125f8:	4620      	mov	r0, r4
   125fa:	f7ff fde7 	bl	121cc <dir_find.part.9>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   125fe:	4605      	mov	r5, r0
   12600:	bb80      	cbnz	r0, 12664 <dir_register+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   12602:	f109 0901 	add.w	r9, r9, #1
   12606:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   1260a:	d1be      	bne.n	1258a <dir_register+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   1260c:	2507      	movs	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   1260e:	4628      	mov	r0, r5
   12610:	b007      	add	sp, #28
   12612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12616:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   12618:	f002 0501 	and.w	r5, r2, #1
   1261c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12620:	03dd      	lsls	r5, r3, #15
   12622:	bf48      	it	mi
   12624:	ea83 0308 	eormi.w	r3, r3, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   12628:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   1262a:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   1262e:	d1f3      	bne.n	12618 <dir_register+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12630:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   12634:	2a00      	cmp	r2, #0
   12636:	d1ee      	bne.n	12616 <dir_register+0xba>
   12638:	e7b0      	b.n	1259c <dir_register+0x40>
   1263a:	1eb8      	subs	r0, r7, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   1263c:	464b      	mov	r3, r9
   1263e:	e7f7      	b.n	12630 <dir_register+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   12640:	3301      	adds	r3, #1
   12642:	e7bf      	b.n	125c4 <dir_register+0x68>
   12644:	4613      	mov	r3, r2
   12646:	e7c2      	b.n	125ce <dir_register+0x72>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   12648:	3601      	adds	r6, #1
   1264a:	e016      	b.n	1267a <dir_register+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   1264c:	2601      	movs	r6, #1
   1264e:	e01c      	b.n	1268a <dir_register+0x12e>
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   12650:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   12652:	2101      	movs	r1, #1
   12654:	4620      	mov	r0, r4
   12656:	f7ff fd42 	bl	120de <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   1265a:	4605      	mov	r5, r0
   1265c:	b1e8      	cbz	r0, 1269a <dir_register+0x13e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   1265e:	2d04      	cmp	r5, #4
   12660:	d0d4      	beq.n	1260c <dir_register+0xb0>
   12662:	e7d4      	b.n	1260e <dir_register+0xb2>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   12664:	2d04      	cmp	r5, #4
   12666:	d1d2      	bne.n	1260e <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   12668:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1266c:	72f3      	strb	r3, [r6, #11]
   1266e:	61e7      	str	r7, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   12670:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12674:	079b      	lsls	r3, r3, #30
   12676:	d5e9      	bpl.n	1264c <dir_register+0xf0>
   12678:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   1267a:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   1267e:	2b00      	cmp	r3, #0
   12680:	d1e2      	bne.n	12648 <dir_register+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   12682:	230d      	movs	r3, #13
   12684:	3619      	adds	r6, #25
   12686:	fbb6 f6f3 	udiv	r6, r6, r3
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   1268a:	2100      	movs	r1, #0
   1268c:	4620      	mov	r0, r4
   1268e:	f7ff fc2d 	bl	11eec <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   12692:	4605      	mov	r5, r0
   12694:	2800      	cmp	r0, #0
   12696:	d1e2      	bne.n	1265e <dir_register+0x102>
   12698:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   1269a:	6921      	ldr	r1, [r4, #16]
   1269c:	6820      	ldr	r0, [r4, #0]
   1269e:	f7ff fa4f 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   126a2:	4605      	mov	r5, r0
   126a4:	2800      	cmp	r0, #0
   126a6:	d1da      	bne.n	1265e <dir_register+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   126a8:	6963      	ldr	r3, [r4, #20]
   126aa:	781b      	ldrb	r3, [r3, #0]
   126ac:	2be5      	cmp	r3, #229	; 0xe5
   126ae:	d001      	beq.n	126b4 <dir_register+0x158>
   126b0:	2b00      	cmp	r3, #0
   126b2:	d1cd      	bne.n	12650 <dir_register+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   126b4:	3701      	adds	r7, #1
   126b6:	42be      	cmp	r6, r7
   126b8:	d1cb      	bne.n	12652 <dir_register+0xf6>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   126ba:	3e01      	subs	r6, #1
   126bc:	d049      	beq.n	12752 <dir_register+0x1f6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   126be:	88e1      	ldrh	r1, [r4, #6]
   126c0:	4620      	mov	r0, r4
   126c2:	1b89      	subs	r1, r1, r6
   126c4:	f7ff fc12 	bl	11eec <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   126c8:	4605      	mov	r5, r0
   126ca:	2800      	cmp	r0, #0
   126cc:	d19f      	bne.n	1260e <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   126ce:	69a0      	ldr	r0, [r4, #24]
   126d0:	f7ff f9a7 	bl	11a22 <sum_sfn>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   126d4:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   126d8:	4607      	mov	r7, r0
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   126da:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 12790 <dir_register+0x234>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   126de:	6921      	ldr	r1, [r4, #16]
   126e0:	6820      	ldr	r0, [r4, #0]
   126e2:	f7ff fa2d 	bl	11b40 <move_window>
   126e6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   126e8:	2800      	cmp	r0, #0
   126ea:	d190      	bne.n	1260e <dir_register+0xb2>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   126ec:	220f      	movs	r2, #15
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   126ee:	6963      	ldr	r3, [r4, #20]
   126f0:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   126f4:	72da      	strb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   126f6:	220d      	movs	r2, #13
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   126f8:	b2f1      	uxtb	r1, r6
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   126fa:	1e4d      	subs	r5, r1, #1
   126fc:	436a      	muls	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   126fe:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   12700:	735f      	strb	r7, [r3, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   12702:	7318      	strb	r0, [r3, #12]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12704:	8358      	strh	r0, [r3, #26]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12706:	4548      	cmp	r0, r9
   12708:	bf18      	it	ne
   1270a:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   1270e:	f815 c008 	ldrb.w	ip, [r5, r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12712:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12716:	bf18      	it	ne
   12718:	3201      	addne	r2, #1
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1271a:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   1271e:	2800      	cmp	r0, #0
   12720:	bf08      	it	eq
   12722:	4648      	moveq	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12724:	2d0d      	cmp	r5, #13
   12726:	d1ee      	bne.n	12706 <dir_register+0x1aa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   12728:	4548      	cmp	r0, r9
   1272a:	d002      	beq.n	12732 <dir_register+0x1d6>
   1272c:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   12730:	b90a      	cbnz	r2, 12736 <dir_register+0x1da>
   12732:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   12736:	2201      	movs	r2, #1
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   12738:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1273a:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   1273c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1273e:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   12740:	4620      	mov	r0, r4
   12742:	f7ff fccc 	bl	120de <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   12746:	4605      	mov	r5, r0
   12748:	2800      	cmp	r0, #0
   1274a:	f47f af60 	bne.w	1260e <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   1274e:	3e01      	subs	r6, #1
   12750:	d1c5      	bne.n	126de <dir_register+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   12752:	6921      	ldr	r1, [r4, #16]
   12754:	6820      	ldr	r0, [r4, #0]
   12756:	f7ff f9f3 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   1275a:	4605      	mov	r5, r0
   1275c:	2800      	cmp	r0, #0
   1275e:	f47f af56 	bne.w	1260e <dir_register+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   12762:	2220      	movs	r2, #32
   12764:	4629      	mov	r1, r5
   12766:	6960      	ldr	r0, [r4, #20]
   12768:	f7ff f954 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   1276c:	220b      	movs	r2, #11
   1276e:	69a1      	ldr	r1, [r4, #24]
   12770:	6960      	ldr	r0, [r4, #20]
   12772:	f7ff f933 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   12776:	69a3      	ldr	r3, [r4, #24]
   12778:	6962      	ldr	r2, [r4, #20]
   1277a:	7adb      	ldrb	r3, [r3, #11]
   1277c:	f003 0318 	and.w	r3, r3, #24
   12780:	7313      	strb	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   12782:	2201      	movs	r2, #1
   12784:	6823      	ldr	r3, [r4, #0]
   12786:	711a      	strb	r2, [r3, #4]
   12788:	e741      	b.n	1260e <dir_register+0xb2>
   1278a:	bf00      	nop
   1278c:	00011021 	.word	0x00011021
   12790:	0001f3a8 	.word	0x0001f3a8

00012794 <remove_chain>:
remove_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12794:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12796:	b570      	push	{r4, r5, r6, lr}
   12798:	4604      	mov	r4, r0
   1279a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1279c:	d801      	bhi.n	127a2 <remove_chain+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   1279e:	2002      	movs	r0, #2
   127a0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   127a2:	6983      	ldr	r3, [r0, #24]
   127a4:	4299      	cmp	r1, r3
   127a6:	d2fa      	bcs.n	1279e <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   127a8:	69a3      	ldr	r3, [r4, #24]
   127aa:	429d      	cmp	r5, r3
   127ac:	d205      	bcs.n	127ba <remove_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   127ae:	4629      	mov	r1, r5
   127b0:	4620      	mov	r0, r4
   127b2:	f7ff fb48 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   127b6:	4606      	mov	r6, r0
   127b8:	b908      	cbnz	r0, 127be <remove_chain+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   127ba:	2000      	movs	r0, #0
   127bc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   127be:	2801      	cmp	r0, #1
   127c0:	d0ed      	beq.n	1279e <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   127c2:	1c41      	adds	r1, r0, #1
   127c4:	d010      	beq.n	127e8 <remove_chain+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   127c6:	2200      	movs	r2, #0
   127c8:	4629      	mov	r1, r5
   127ca:	4620      	mov	r0, r4
   127cc:	f7ff fbce 	bl	11f6c <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   127d0:	b958      	cbnz	r0, 127ea <remove_chain+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   127d2:	6963      	ldr	r3, [r4, #20]
   127d4:	1c5a      	adds	r2, r3, #1
   127d6:	d005      	beq.n	127e4 <remove_chain+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   127d8:	3301      	adds	r3, #1
   127da:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   127dc:	7963      	ldrb	r3, [r4, #5]
   127de:	f043 0301 	orr.w	r3, r3, #1
   127e2:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   127e4:	4635      	mov	r5, r6
   127e6:	e7df      	b.n	127a8 <remove_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   127e8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   127ea:	bd70      	pop	{r4, r5, r6, pc}

000127ec <f_mount>:
f_mount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   127ec:	b5f0      	push	{r4, r5, r6, r7, lr}
   127ee:	b085      	sub	sp, #20
   127f0:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   127f2:	a804      	add	r0, sp, #16
   127f4:	f840 1d04 	str.w	r1, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   127f8:	9100      	str	r1, [sp, #0]
   127fa:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   127fc:	f7ff f920 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12800:	1e05      	subs	r5, r0, #0
   12802:	db2a      	blt.n	1285a <f_mount+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   12804:	4f17      	ldr	r7, [pc, #92]	; (12864 <f_mount+0x78>)
   12806:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   1280a:	b14c      	cbz	r4, 12820 <f_mount+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   1280c:	68e0      	ldr	r0, [r4, #12]
   1280e:	f000 fe37 	bl	13480 <ff_del_syncobj>
   12812:	b918      	cbnz	r0, 1281c <f_mount+0x30>
   12814:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   12816:	4620      	mov	r0, r4
   12818:	b005      	add	sp, #20
   1281a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   1281c:	2300      	movs	r3, #0
   1281e:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   12820:	9901      	ldr	r1, [sp, #4]
   12822:	b989      	cbnz	r1, 12848 <f_mount+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   12824:	9c01      	ldr	r4, [sp, #4]
   12826:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   1282a:	2c00      	cmp	r4, #0
   1282c:	d0f3      	beq.n	12816 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   1282e:	2e01      	cmp	r6, #1
   12830:	d115      	bne.n	1285e <f_mount+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   12832:	4669      	mov	r1, sp
   12834:	2200      	movs	r2, #0
   12836:	a801      	add	r0, sp, #4
   12838:	f7ff f9c2 	bl	11bc0 <find_volume>
   1283c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   1283e:	4601      	mov	r1, r0
   12840:	9801      	ldr	r0, [sp, #4]
   12842:	f7ff fae8 	bl	11e16 <unlock_fs>
   12846:	e7e6      	b.n	12816 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12848:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   1284a:	b2e8      	uxtb	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   1284c:	f801 3b0c 	strb.w	r3, [r1], #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12850:	f000 fe0c 	bl	1346c <ff_cre_syncobj>
   12854:	2800      	cmp	r0, #0
   12856:	d0dd      	beq.n	12814 <f_mount+0x28>
   12858:	e7e4      	b.n	12824 <f_mount+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   1285a:	240b      	movs	r4, #11
   1285c:	e7db      	b.n	12816 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   1285e:	2400      	movs	r4, #0
   12860:	e7d9      	b.n	12816 <f_mount+0x2a>
   12862:	bf00      	nop
   12864:	2007c45c 	.word	0x2007c45c

00012868 <f_open>:
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   12868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1286c:	b0d1      	sub	sp, #324	; 0x144
   1286e:	9101      	str	r1, [sp, #4]
   12870:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   12872:	4606      	mov	r6, r0
   12874:	2800      	cmp	r0, #0
   12876:	f000 808c 	beq.w	12992 <f_open+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   1287a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   1287c:	f002 021e 	and.w	r2, r2, #30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12880:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12882:	a901      	add	r1, sp, #4
   12884:	a806      	add	r0, sp, #24
   12886:	f7ff f99b 	bl	11bc0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   1288a:	4605      	mov	r5, r0
   1288c:	2800      	cmp	r0, #0
   1288e:	d174      	bne.n	1297a <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12890:	ab03      	add	r3, sp, #12
   12892:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12894:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12896:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12898:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   1289a:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   1289c:	f7ff fd26 	bl	122ec <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   128a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   128a2:	b910      	cbnz	r0, 128aa <f_open+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   128a4:	2c00      	cmp	r4, #0
   128a6:	bf08      	it	eq
   128a8:	2006      	moveq	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   128aa:	f018 0f1c 	tst.w	r8, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   128ae:	f008 071f 	and.w	r7, r8, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   128b2:	d03d      	beq.n	12930 <f_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   128b4:	b398      	cbz	r0, 1291e <f_open+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   128b6:	2804      	cmp	r0, #4
   128b8:	d102      	bne.n	128c0 <f_open+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   128ba:	a806      	add	r0, sp, #24
   128bc:	f7ff fe4e 	bl	1255c <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   128c0:	f047 0708 	orr.w	r7, r7, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   128c4:	bb48      	cbnz	r0, 1291a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   128c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   128c8:	0738      	lsls	r0, r7, #28
   128ca:	d53b      	bpl.n	12944 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   128cc:	f001 fc80 	bl	141d0 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   128d0:	2300      	movs	r3, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   128d2:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   128d6:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   128d8:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   128da:	61e3      	str	r3, [r4, #28]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   128dc:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   128de:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   128e2:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   128e4:	bf08      	it	eq
   128e6:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   128e8:	8363      	strh	r3, [r4, #26]
   128ea:	82a3      	strh	r3, [r4, #20]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   128ec:	f04f 0301 	mov.w	r3, #1
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   128f0:	bf08      	it	eq
   128f2:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   128f6:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   128f8:	f1b8 0f00 	cmp.w	r8, #0
   128fc:	d022      	beq.n	12944 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   128fe:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   12900:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   12904:	f7ff ff46 	bl	12794 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   12908:	b938      	cbnz	r0, 1291a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   1290a:	9806      	ldr	r0, [sp, #24]
   1290c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   12910:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   12912:	4649      	mov	r1, r9
   12914:	f7ff f914 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   12918:	b1a0      	cbz	r0, 12944 <f_open+0xdc>
   1291a:	4605      	mov	r5, r0
   1291c:	e02d      	b.n	1297a <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   1291e:	7ae3      	ldrb	r3, [r4, #11]
   12920:	f013 0f11 	tst.w	r3, #17
   12924:	d133      	bne.n	1298e <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   12926:	f018 0f04 	tst.w	r8, #4
   1292a:	d0cd      	beq.n	128c8 <f_open+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   1292c:	2508      	movs	r5, #8
   1292e:	e024      	b.n	1297a <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   12930:	2800      	cmp	r0, #0
   12932:	d1f2      	bne.n	1291a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   12934:	7ae3      	ldrb	r3, [r4, #11]
   12936:	06d9      	lsls	r1, r3, #27
   12938:	d427      	bmi.n	1298a <f_open+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   1293a:	f018 0f02 	tst.w	r8, #2
   1293e:	d001      	beq.n	12944 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   12940:	07da      	lsls	r2, r3, #31
   12942:	d424      	bmi.n	1298e <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   12944:	073b      	lsls	r3, r7, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12946:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   12948:	bf48      	it	mi
   1294a:	f047 0720 	orrmi.w	r7, r7, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   1294e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   12950:	71b7      	strb	r7, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12952:	61f2      	str	r2, [r6, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12954:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   12956:	6234      	str	r4, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12958:	71f2      	strb	r2, [r6, #7]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1295a:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   1295c:	8b62      	ldrh	r2, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1295e:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12960:	bf04      	itt	eq
   12962:	8aa1      	ldrheq	r1, [r4, #20]
   12964:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   12968:	6132      	str	r2, [r6, #16]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   1296a:	69e2      	ldr	r2, [r4, #28]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   1296c:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   1296e:	60f2      	str	r2, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12970:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12972:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12974:	60b2      	str	r2, [r6, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   12976:	61b2      	str	r2, [r6, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12978:	80b3      	strh	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   1297a:	4629      	mov	r1, r5
   1297c:	9806      	ldr	r0, [sp, #24]
   1297e:	f7ff fa4a 	bl	11e16 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   12982:	4628      	mov	r0, r5
   12984:	b051      	add	sp, #324	; 0x144
   12986:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   1298a:	2504      	movs	r5, #4
   1298c:	e7f5      	b.n	1297a <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   1298e:	2507      	movs	r5, #7
   12990:	e7f3      	b.n	1297a <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   12992:	2509      	movs	r5, #9
   12994:	e7f5      	b.n	12982 <f_open+0x11a>

00012996 <f_read>:
f_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   12996:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1299a:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   1299c:	2300      	movs	r3, #0
   1299e:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   129a2:	4604      	mov	r4, r0
   129a4:	4689      	mov	r9, r1
   129a6:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   129a8:	f7ff fa18 	bl	11ddc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   129ac:	4605      	mov	r5, r0
   129ae:	b110      	cbz	r0, 129b6 <f_read+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   129b0:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   129b2:	6820      	ldr	r0, [r4, #0]
   129b4:	e04a      	b.n	12a4c <f_read+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   129b6:	79e1      	ldrb	r1, [r4, #7]
   129b8:	b139      	cbz	r1, 129ca <f_read+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   129ba:	6820      	ldr	r0, [r4, #0]
   129bc:	f7ff fa2b 	bl	11e16 <unlock_fs>
   129c0:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   129c2:	4628      	mov	r0, r5
   129c4:	b003      	add	sp, #12
   129c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   129ca:	79a3      	ldrb	r3, [r4, #6]
   129cc:	07d8      	lsls	r0, r3, #31
   129ce:	d405      	bmi.n	129dc <f_read+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   129d0:	2107      	movs	r1, #7
   129d2:	6820      	ldr	r0, [r4, #0]
   129d4:	f7ff fa1f 	bl	11e16 <unlock_fs>
   129d8:	2507      	movs	r5, #7
   129da:	e7f2      	b.n	129c2 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   129dc:	68e3      	ldr	r3, [r4, #12]
   129de:	68a7      	ldr	r7, [r4, #8]
   129e0:	1bdf      	subs	r7, r3, r7
   129e2:	42b7      	cmp	r7, r6
   129e4:	bf28      	it	cs
   129e6:	4637      	movcs	r7, r6
   129e8:	f104 0324 	add.w	r3, r4, #36	; 0x24
   129ec:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   129ee:	b90f      	cbnz	r7, 129f4 <f_read+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   129f0:	4639      	mov	r1, r7
   129f2:	e7de      	b.n	129b2 <f_read+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   129f4:	68a2      	ldr	r2, [r4, #8]
   129f6:	f3c2 0308 	ubfx	r3, r2, #0, #9
   129fa:	2b00      	cmp	r3, #0
   129fc:	d174      	bne.n	12ae8 <f_read+0x152>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   129fe:	6820      	ldr	r0, [r4, #0]
   12a00:	7883      	ldrb	r3, [r0, #2]
   12a02:	3b01      	subs	r3, #1
   12a04:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   12a08:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12a0c:	d111      	bne.n	12a32 <f_read+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   12a0e:	b92a      	cbnz	r2, 12a1c <f_read+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   12a10:	6920      	ldr	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   12a12:	2801      	cmp	r0, #1
   12a14:	d808      	bhi.n	12a28 <f_read+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   12a16:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12a18:	71e5      	strb	r5, [r4, #7]
   12a1a:	e7c9      	b.n	129b0 <f_read+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   12a1c:	6961      	ldr	r1, [r4, #20]
   12a1e:	9301      	str	r3, [sp, #4]
   12a20:	f7ff fa11 	bl	11e46 <get_fat>
   12a24:	9b01      	ldr	r3, [sp, #4]
   12a26:	e7f4      	b.n	12a12 <f_read+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12a28:	1c41      	adds	r1, r0, #1
   12a2a:	d101      	bne.n	12a30 <f_read+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12a2c:	2501      	movs	r5, #1
   12a2e:	e7f3      	b.n	12a18 <f_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   12a30:	6160      	str	r0, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12a32:	f8d4 a000 	ldr.w	sl, [r4]
   12a36:	6961      	ldr	r1, [r4, #20]
   12a38:	4650      	mov	r0, sl
   12a3a:	9301      	str	r3, [sp, #4]
   12a3c:	f7ff f9f8 	bl	11e30 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12a40:	9b01      	ldr	r3, [sp, #4]
   12a42:	b930      	cbnz	r0, 12a52 <f_read+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   12a44:	2502      	movs	r5, #2
   12a46:	4650      	mov	r0, sl
   12a48:	4629      	mov	r1, r5
   12a4a:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12a4c:	f7ff f9e3 	bl	11e16 <unlock_fs>
   12a50:	e7b7      	b.n	129c2 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12a52:	0a7e      	lsrs	r6, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   12a54:	eb00 0803 	add.w	r8, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12a58:	d029      	beq.n	12aae <f_read+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12a5a:	f89a 2002 	ldrb.w	r2, [sl, #2]
   12a5e:	1999      	adds	r1, r3, r6
   12a60:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   12a62:	bf88      	it	hi
   12a64:	1ad6      	subhi	r6, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   12a66:	b2f3      	uxtb	r3, r6
   12a68:	4642      	mov	r2, r8
   12a6a:	4649      	mov	r1, r9
   12a6c:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12a70:	f001 f901 	bl	13c76 <disk_read>
   12a74:	2800      	cmp	r0, #0
   12a76:	d1d9      	bne.n	12a2c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   12a78:	79a3      	ldrb	r3, [r4, #6]
   12a7a:	065a      	lsls	r2, r3, #25
   12a7c:	d50b      	bpl.n	12a96 <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   12a7e:	69a0      	ldr	r0, [r4, #24]
   12a80:	eba0 0008 	sub.w	r0, r0, r8
   12a84:	4286      	cmp	r6, r0
   12a86:	d906      	bls.n	12a96 <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   12a88:	f44f 7200 	mov.w	r2, #512	; 0x200
   12a8c:	9900      	ldr	r1, [sp, #0]
   12a8e:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   12a92:	f7fe ffa3 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   12a96:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   12a98:	68a3      	ldr	r3, [r4, #8]
   12a9a:	44b1      	add	r9, r6
   12a9c:	4433      	add	r3, r6
   12a9e:	60a3      	str	r3, [r4, #8]
   12aa0:	f8db 3000 	ldr.w	r3, [fp]
   12aa4:	1bbf      	subs	r7, r7, r6
   12aa6:	4433      	add	r3, r6
   12aa8:	f8cb 3000 	str.w	r3, [fp]
   12aac:	e79f      	b.n	129ee <f_read+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   12aae:	69a2      	ldr	r2, [r4, #24]
   12ab0:	4590      	cmp	r8, r2
   12ab2:	d017      	beq.n	12ae4 <f_read+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   12ab4:	79a3      	ldrb	r3, [r4, #6]
   12ab6:	065b      	lsls	r3, r3, #25
   12ab8:	d50b      	bpl.n	12ad2 <f_read+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12aba:	2301      	movs	r3, #1
   12abc:	9900      	ldr	r1, [sp, #0]
   12abe:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12ac2:	f001 f8f4 	bl	13cae <disk_write>
   12ac6:	2800      	cmp	r0, #0
   12ac8:	d1b0      	bne.n	12a2c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   12aca:	79a3      	ldrb	r3, [r4, #6]
   12acc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12ad0:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   12ad2:	6820      	ldr	r0, [r4, #0]
   12ad4:	2301      	movs	r3, #1
   12ad6:	4642      	mov	r2, r8
   12ad8:	9900      	ldr	r1, [sp, #0]
   12ada:	7840      	ldrb	r0, [r0, #1]
   12adc:	f001 f8cb 	bl	13c76 <disk_read>
   12ae0:	2800      	cmp	r0, #0
   12ae2:	d1a3      	bne.n	12a2c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   12ae4:	f8c4 8018 	str.w	r8, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12ae8:	68a1      	ldr	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12aea:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12aec:	f3c1 0108 	ubfx	r1, r1, #0, #9
   12af0:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   12af4:	42be      	cmp	r6, r7
   12af6:	bf28      	it	cs
   12af8:	463e      	movcs	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12afa:	3124      	adds	r1, #36	; 0x24
   12afc:	4632      	mov	r2, r6
   12afe:	4421      	add	r1, r4
   12b00:	f7fe ff6c 	bl	119dc <mem_cpy>
   12b04:	e7c8      	b.n	12a98 <f_read+0x102>

00012b06 <f_write>:
f_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   12b06:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b0a:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   12b0c:	2300      	movs	r3, #0
   12b0e:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   12b12:	4604      	mov	r4, r0
   12b14:	4689      	mov	r9, r1
   12b16:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   12b18:	f7ff f960 	bl	11ddc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12b1c:	4605      	mov	r5, r0
   12b1e:	b110      	cbz	r0, 12b26 <f_write+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   12b20:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   12b22:	6820      	ldr	r0, [r4, #0]
   12b24:	e068      	b.n	12bf8 <f_write+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   12b26:	79e1      	ldrb	r1, [r4, #7]
   12b28:	b139      	cbz	r1, 12b3a <f_write+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12b2a:	6820      	ldr	r0, [r4, #0]
   12b2c:	f7ff f973 	bl	11e16 <unlock_fs>
   12b30:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   12b32:	4628      	mov	r0, r5
   12b34:	b003      	add	sp, #12
   12b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   12b3a:	79a3      	ldrb	r3, [r4, #6]
   12b3c:	0799      	lsls	r1, r3, #30
   12b3e:	d405      	bmi.n	12b4c <f_write+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   12b40:	2107      	movs	r1, #7
   12b42:	6820      	ldr	r0, [r4, #0]
   12b44:	f7ff f967 	bl	11e16 <unlock_fs>
   12b48:	2507      	movs	r5, #7
   12b4a:	e7f2      	b.n	12b32 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   12b4c:	68a3      	ldr	r3, [r4, #8]
   12b4e:	eb13 0f08 	cmn.w	r3, r8
   12b52:	d205      	bcs.n	12b60 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12b54:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12b58:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   12b5a:	f1b8 0f00 	cmp.w	r8, #0
   12b5e:	d10a      	bne.n	12b76 <f_write+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12b60:	68a3      	ldr	r3, [r4, #8]
   12b62:	68e2      	ldr	r2, [r4, #12]
   12b64:	4293      	cmp	r3, r2
   12b66:	f200 80a2 	bhi.w	12cae <f_write+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12b6a:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12b6c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12b6e:	f043 0320 	orr.w	r3, r3, #32
   12b72:	71a3      	strb	r3, [r4, #6]
   12b74:	e7d5      	b.n	12b22 <f_write+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   12b76:	68a2      	ldr	r2, [r4, #8]
   12b78:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12b7c:	2b00      	cmp	r3, #0
   12b7e:	f040 8083 	bne.w	12c88 <f_write+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12b82:	6820      	ldr	r0, [r4, #0]
   12b84:	7883      	ldrb	r3, [r0, #2]
   12b86:	3b01      	subs	r3, #1
   12b88:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   12b8c:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12b90:	9300      	str	r3, [sp, #0]
   12b92:	d116      	bne.n	12bc2 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   12b94:	b95a      	cbnz	r2, 12bae <f_write+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   12b96:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   12b98:	b921      	cbnz	r1, 12ba4 <f_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12b9a:	f7ff fa50 	bl	1203e <create_chain>
   12b9e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   12ba0:	2800      	cmp	r0, #0
   12ba2:	d0dd      	beq.n	12b60 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12ba4:	2901      	cmp	r1, #1
   12ba6:	d104      	bne.n	12bb2 <f_write+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   12ba8:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12baa:	71e5      	strb	r5, [r4, #7]
   12bac:	e7b8      	b.n	12b20 <f_write+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12bae:	6961      	ldr	r1, [r4, #20]
   12bb0:	e7f3      	b.n	12b9a <f_write+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12bb2:	1c4a      	adds	r2, r1, #1
   12bb4:	d101      	bne.n	12bba <f_write+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12bb6:	2501      	movs	r5, #1
   12bb8:	e7f7      	b.n	12baa <f_write+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12bba:	6923      	ldr	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   12bbc:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12bbe:	b903      	cbnz	r3, 12bc2 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   12bc0:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   12bc2:	79a3      	ldrb	r3, [r4, #6]
   12bc4:	065b      	lsls	r3, r3, #25
   12bc6:	d50c      	bpl.n	12be2 <f_write+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12bc8:	6820      	ldr	r0, [r4, #0]
   12bca:	2301      	movs	r3, #1
   12bcc:	69a2      	ldr	r2, [r4, #24]
   12bce:	9901      	ldr	r1, [sp, #4]
   12bd0:	7840      	ldrb	r0, [r0, #1]
   12bd2:	f001 f86c 	bl	13cae <disk_write>
   12bd6:	2800      	cmp	r0, #0
   12bd8:	d1ed      	bne.n	12bb6 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   12bda:	79a3      	ldrb	r3, [r4, #6]
   12bdc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12be0:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12be2:	f8d4 a000 	ldr.w	sl, [r4]
   12be6:	6961      	ldr	r1, [r4, #20]
   12be8:	4650      	mov	r0, sl
   12bea:	f7ff f921 	bl	11e30 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12bee:	b930      	cbnz	r0, 12bfe <f_write+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   12bf0:	2502      	movs	r5, #2
   12bf2:	4650      	mov	r0, sl
   12bf4:	4629      	mov	r1, r5
   12bf6:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12bf8:	f7ff f90d 	bl	11e16 <unlock_fs>
   12bfc:	e799      	b.n	12b32 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12bfe:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12c00:	ea5f 2658 	movs.w	r6, r8, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12c04:	eb00 0703 	add.w	r7, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12c08:	d02d      	beq.n	12c66 <f_write+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12c0a:	9a00      	ldr	r2, [sp, #0]
   12c0c:	f89a 3002 	ldrb.w	r3, [sl, #2]
   12c10:	4432      	add	r2, r6
   12c12:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12c14:	bf88      	it	hi
   12c16:	9a00      	ldrhi	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12c18:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12c1a:	bf88      	it	hi
   12c1c:	1a9e      	subhi	r6, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12c1e:	b2f3      	uxtb	r3, r6
   12c20:	463a      	mov	r2, r7
   12c22:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12c26:	f001 f842 	bl	13cae <disk_write>
   12c2a:	2800      	cmp	r0, #0
   12c2c:	d1c3      	bne.n	12bb6 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   12c2e:	69a1      	ldr	r1, [r4, #24]
   12c30:	1bc9      	subs	r1, r1, r7
   12c32:	428e      	cmp	r6, r1
   12c34:	d90a      	bls.n	12c4c <f_write+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   12c36:	f44f 7200 	mov.w	r2, #512	; 0x200
   12c3a:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   12c3e:	9801      	ldr	r0, [sp, #4]
   12c40:	f7fe fecc 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   12c44:	79a3      	ldrb	r3, [r4, #6]
   12c46:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12c4a:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   12c4c:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   12c4e:	68a3      	ldr	r3, [r4, #8]
   12c50:	44b1      	add	r9, r6
   12c52:	4433      	add	r3, r6
   12c54:	60a3      	str	r3, [r4, #8]
   12c56:	f8db 3000 	ldr.w	r3, [fp]
   12c5a:	eba8 0806 	sub.w	r8, r8, r6
   12c5e:	4433      	add	r3, r6
   12c60:	f8cb 3000 	str.w	r3, [fp]
   12c64:	e779      	b.n	12b5a <f_write+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   12c66:	69a3      	ldr	r3, [r4, #24]
   12c68:	429f      	cmp	r7, r3
   12c6a:	d00c      	beq.n	12c86 <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   12c6c:	68a2      	ldr	r2, [r4, #8]
   12c6e:	68e3      	ldr	r3, [r4, #12]
   12c70:	429a      	cmp	r2, r3
   12c72:	d208      	bcs.n	12c86 <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12c74:	2301      	movs	r3, #1
   12c76:	463a      	mov	r2, r7
   12c78:	9901      	ldr	r1, [sp, #4]
   12c7a:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12c7e:	f000 fffa 	bl	13c76 <disk_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   12c82:	2800      	cmp	r0, #0
   12c84:	d197      	bne.n	12bb6 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   12c86:	61a7      	str	r7, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12c88:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12c8a:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12c8c:	f3c0 0008 	ubfx	r0, r0, #0, #9
   12c90:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   12c94:	4546      	cmp	r6, r8
   12c96:	bf28      	it	cs
   12c98:	4646      	movcs	r6, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12c9a:	3024      	adds	r0, #36	; 0x24
   12c9c:	4632      	mov	r2, r6
   12c9e:	4420      	add	r0, r4
   12ca0:	f7fe fe9c 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   12ca4:	79a3      	ldrb	r3, [r4, #6]
   12ca6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12caa:	71a3      	strb	r3, [r4, #6]
   12cac:	e7cf      	b.n	12c4e <f_write+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12cae:	60e3      	str	r3, [r4, #12]
   12cb0:	e75b      	b.n	12b6a <f_write+0x64>

00012cb2 <f_sync>:
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   12cb2:	b570      	push	{r4, r5, r6, lr}
   12cb4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   12cb6:	f7ff f891 	bl	11ddc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   12cba:	4605      	mov	r5, r0
   12cbc:	2800      	cmp	r0, #0
   12cbe:	d138      	bne.n	12d32 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   12cc0:	79a3      	ldrb	r3, [r4, #6]
   12cc2:	069a      	lsls	r2, r3, #26
   12cc4:	d535      	bpl.n	12d32 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   12cc6:	065b      	lsls	r3, r3, #25
   12cc8:	d513      	bpl.n	12cf2 <f_sync+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12cca:	6820      	ldr	r0, [r4, #0]
   12ccc:	2301      	movs	r3, #1
   12cce:	69a2      	ldr	r2, [r4, #24]
   12cd0:	f104 0124 	add.w	r1, r4, #36	; 0x24
   12cd4:	7840      	ldrb	r0, [r0, #1]
   12cd6:	f000 ffea 	bl	13cae <disk_write>
   12cda:	b130      	cbz	r0, 12cea <f_sync+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   12cdc:	2101      	movs	r1, #1
   12cde:	6820      	ldr	r0, [r4, #0]
   12ce0:	f7ff f899 	bl	11e16 <unlock_fs>
   12ce4:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   12ce6:	4628      	mov	r0, r5
   12ce8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   12cea:	79a3      	ldrb	r3, [r4, #6]
   12cec:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12cf0:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   12cf2:	69e1      	ldr	r1, [r4, #28]
   12cf4:	6820      	ldr	r0, [r4, #0]
   12cf6:	f7fe ff23 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   12cfa:	4605      	mov	r5, r0
   12cfc:	b9c8      	cbnz	r0, 12d32 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   12cfe:	6a26      	ldr	r6, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   12d00:	7af3      	ldrb	r3, [r6, #11]
   12d02:	f043 0320 	orr.w	r3, r3, #32
   12d06:	72f3      	strb	r3, [r6, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   12d08:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12d0a:	61f3      	str	r3, [r6, #28]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   12d0c:	6923      	ldr	r3, [r4, #16]
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   12d0e:	8373      	strh	r3, [r6, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   12d10:	0c1b      	lsrs	r3, r3, #16
   12d12:	82b3      	strh	r3, [r6, #20]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   12d14:	f001 fa5c 	bl	141d0 <get_fattime>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12d18:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12d1a:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   12d1e:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   12d20:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   12d22:	f023 0320 	bic.w	r3, r3, #32
   12d26:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   12d28:	2301      	movs	r3, #1
   12d2a:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   12d2c:	f7fe fece 	bl	11acc <sync_fs>
   12d30:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   12d32:	4629      	mov	r1, r5
   12d34:	6820      	ldr	r0, [r4, #0]
   12d36:	f7ff f86e 	bl	11e16 <unlock_fs>
   12d3a:	e7d4      	b.n	12ce6 <f_sync+0x34>

00012d3c <f_close>:
f_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   12d3c:	b538      	push	{r3, r4, r5, lr}
   12d3e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   12d40:	f7ff ffb7 	bl	12cb2 <f_sync>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   12d44:	4604      	mov	r4, r0
   12d46:	b948      	cbnz	r0, 12d5c <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   12d48:	4628      	mov	r0, r5
   12d4a:	f7ff f847 	bl	11ddc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   12d4e:	4604      	mov	r4, r0
   12d50:	b920      	cbnz	r0, 12d5c <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   12d52:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   12d54:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   12d56:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   12d58:	f7ff f85d 	bl	11e16 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   12d5c:	4620      	mov	r0, r4
   12d5e:	bd38      	pop	{r3, r4, r5, pc}

00012d60 <f_lseek>:
f_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   12d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12d62:	4604      	mov	r4, r0
   12d64:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   12d66:	f7ff f839 	bl	11ddc <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12d6a:	4605      	mov	r5, r0
   12d6c:	b110      	cbz	r0, 12d74 <f_lseek+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   12d6e:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   12d70:	6820      	ldr	r0, [r4, #0]
   12d72:	e06a      	b.n	12e4a <f_lseek+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   12d74:	79e1      	ldrb	r1, [r4, #7]
   12d76:	b129      	cbz	r1, 12d84 <f_lseek+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12d78:	6820      	ldr	r0, [r4, #0]
   12d7a:	f7ff f84c 	bl	11e16 <unlock_fs>
   12d7e:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   12d80:	4628      	mov	r0, r5
   12d82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   12d84:	68e3      	ldr	r3, [r4, #12]
   12d86:	42b3      	cmp	r3, r6
   12d88:	d204      	bcs.n	12d94 <f_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   12d8a:	79a2      	ldrb	r2, [r4, #6]
   12d8c:	f012 0f02 	tst.w	r2, #2
   12d90:	bf08      	it	eq
   12d92:	461e      	moveq	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12d94:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   12d96:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12d98:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   12d9a:	2e00      	cmp	r6, #0
   12d9c:	d130      	bne.n	12e00 <f_lseek+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   12d9e:	68a3      	ldr	r3, [r4, #8]
   12da0:	68e2      	ldr	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   12da2:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   12da4:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   12da6:	bf81      	itttt	hi
   12da8:	60e3      	strhi	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   12daa:	79a3      	ldrbhi	r3, [r4, #6]
   12dac:	f043 0320 	orrhi.w	r3, r3, #32
   12db0:	71a3      	strbhi	r3, [r4, #6]
   12db2:	e7dd      	b.n	12d70 <f_lseek+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12db4:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   12db6:	68a3      	ldr	r3, [r4, #8]
   12db8:	f3c3 0308 	ubfx	r3, r3, #0, #9
   12dbc:	2b00      	cmp	r3, #0
   12dbe:	d0ee      	beq.n	12d9e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   12dc0:	69a2      	ldr	r2, [r4, #24]
   12dc2:	4296      	cmp	r6, r2
   12dc4:	d0eb      	beq.n	12d9e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   12dc6:	79a3      	ldrb	r3, [r4, #6]
   12dc8:	f104 0724 	add.w	r7, r4, #36	; 0x24
   12dcc:	f013 0f40 	tst.w	r3, #64	; 0x40
   12dd0:	d00b      	beq.n	12dea <f_lseek+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12dd2:	6820      	ldr	r0, [r4, #0]
   12dd4:	2301      	movs	r3, #1
   12dd6:	4639      	mov	r1, r7
   12dd8:	7840      	ldrb	r0, [r0, #1]
   12dda:	f000 ff68 	bl	13cae <disk_write>
   12dde:	2800      	cmp	r0, #0
   12de0:	d142      	bne.n	12e68 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   12de2:	79a3      	ldrb	r3, [r4, #6]
   12de4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12de8:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   12dea:	6820      	ldr	r0, [r4, #0]
   12dec:	2301      	movs	r3, #1
   12dee:	4632      	mov	r2, r6
   12df0:	4639      	mov	r1, r7
   12df2:	7840      	ldrb	r0, [r0, #1]
   12df4:	f000 ff3f 	bl	13c76 <disk_read>
   12df8:	2800      	cmp	r0, #0
   12dfa:	d135      	bne.n	12e68 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   12dfc:	61a6      	str	r6, [r4, #24]
   12dfe:	e7ce      	b.n	12d9e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   12e00:	6820      	ldr	r0, [r4, #0]
   12e02:	7887      	ldrb	r7, [r0, #2]
   12e04:	027f      	lsls	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   12e06:	b31b      	cbz	r3, 12e50 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   12e08:	3b01      	subs	r3, #1
   12e0a:	1e72      	subs	r2, r6, #1
   12e0c:	fbb2 f2f7 	udiv	r2, r2, r7
   12e10:	fbb3 f1f7 	udiv	r1, r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   12e14:	428a      	cmp	r2, r1
   12e16:	d31b      	bcc.n	12e50 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   12e18:	427a      	negs	r2, r7
   12e1a:	4013      	ands	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   12e1c:	6961      	ldr	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   12e1e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   12e20:	1af6      	subs	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   12e22:	2900      	cmp	r1, #0
   12e24:	d0c6      	beq.n	12db4 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   12e26:	42be      	cmp	r6, r7
   12e28:	d823      	bhi.n	12e72 <f_lseek+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   12e2a:	68a3      	ldr	r3, [r4, #8]
   12e2c:	4433      	add	r3, r6
   12e2e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   12e30:	f3c6 0308 	ubfx	r3, r6, #0, #9
   12e34:	2b00      	cmp	r3, #0
   12e36:	d0bd      	beq.n	12db4 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   12e38:	6822      	ldr	r2, [r4, #0]
   12e3a:	4610      	mov	r0, r2
   12e3c:	f7fe fff8 	bl	11e30 <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   12e40:	bb90      	cbnz	r0, 12ea8 <f_lseek+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   12e42:	2502      	movs	r5, #2
   12e44:	4610      	mov	r0, r2
   12e46:	4629      	mov	r1, r5
   12e48:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   12e4a:	f7fe ffe4 	bl	11e16 <unlock_fs>
   12e4e:	e797      	b.n	12d80 <f_lseek+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   12e50:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   12e52:	b961      	cbnz	r1, 12e6e <f_lseek+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   12e54:	f7ff f8f3 	bl	1203e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12e58:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   12e5a:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12e5c:	d102      	bne.n	12e64 <f_lseek+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   12e5e:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   12e60:	71e5      	strb	r5, [r4, #7]
   12e62:	e784      	b.n	12d6e <f_lseek+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12e64:	3001      	adds	r0, #1
   12e66:	d101      	bne.n	12e6c <f_lseek+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   12e68:	2501      	movs	r5, #1
   12e6a:	e7f9      	b.n	12e60 <f_lseek+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   12e6c:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   12e6e:	6161      	str	r1, [r4, #20]
   12e70:	e7d7      	b.n	12e22 <f_lseek+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   12e72:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   12e74:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   12e76:	079a      	lsls	r2, r3, #30
   12e78:	d505      	bpl.n	12e86 <f_lseek+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   12e7a:	f7ff f8e0 	bl	1203e <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   12e7e:	4601      	mov	r1, r0
   12e80:	b920      	cbnz	r0, 12e8c <f_lseek+0x12c>
   12e82:	463e      	mov	r6, r7
   12e84:	e7d1      	b.n	12e2a <f_lseek+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   12e86:	f7fe ffde 	bl	11e46 <get_fat>
   12e8a:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12e8c:	1c4b      	adds	r3, r1, #1
   12e8e:	d0eb      	beq.n	12e68 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   12e90:	2901      	cmp	r1, #1
   12e92:	d9e4      	bls.n	12e5e <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   12e94:	6823      	ldr	r3, [r4, #0]
   12e96:	699b      	ldr	r3, [r3, #24]
   12e98:	4299      	cmp	r1, r3
   12e9a:	d2e0      	bcs.n	12e5e <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   12e9c:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   12e9e:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   12ea0:	443b      	add	r3, r7
   12ea2:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   12ea4:	1bf6      	subs	r6, r6, r7
   12ea6:	e7be      	b.n	12e26 <f_lseek+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   12ea8:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   12eac:	e783      	b.n	12db6 <f_lseek+0x56>

00012eae <f_getfree>:
f_getfree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   12eae:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12eb2:	4614      	mov	r4, r2
   12eb4:	ab02      	add	r3, sp, #8
   12eb6:	f843 0d04 	str.w	r0, [r3, #-4]!
   12eba:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   12ebc:	4620      	mov	r0, r4
   12ebe:	2200      	movs	r2, #0
   12ec0:	4619      	mov	r1, r3
   12ec2:	f7fe fe7d 	bl	11bc0 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   12ec6:	6824      	ldr	r4, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   12ec8:	4605      	mov	r5, r0
   12eca:	b930      	cbnz	r0, 12eda <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   12ecc:	69a7      	ldr	r7, [r4, #24]
   12ece:	6963      	ldr	r3, [r4, #20]
   12ed0:	1eba      	subs	r2, r7, #2
   12ed2:	4293      	cmp	r3, r2
   12ed4:	d809      	bhi.n	12eea <f_getfree+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   12ed6:	f8c8 3000 	str.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   12eda:	4620      	mov	r0, r4
   12edc:	4629      	mov	r1, r5
   12ede:	f7fe ff9a 	bl	11e16 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   12ee2:	4628      	mov	r0, r5
   12ee4:	b002      	add	sp, #8
   12ee6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   12eea:	f894 9000 	ldrb.w	r9, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   12eee:	f1b9 0f01 	cmp.w	r9, #1
   12ef2:	d117      	bne.n	12f24 <f_getfree+0x76>
   12ef4:	2702      	movs	r7, #2
   12ef6:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   12ef8:	4639      	mov	r1, r7
   12efa:	4620      	mov	r0, r4
   12efc:	f7fe ffa3 	bl	11e46 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   12f00:	1c43      	adds	r3, r0, #1
   12f02:	d032      	beq.n	12f6a <f_getfree+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   12f04:	2801      	cmp	r0, #1
   12f06:	d032      	beq.n	12f6e <f_getfree+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   12f08:	b900      	cbnz	r0, 12f0c <f_getfree+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   12f0a:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   12f0c:	69a3      	ldr	r3, [r4, #24]
   12f0e:	3701      	adds	r7, #1
   12f10:	429f      	cmp	r7, r3
   12f12:	d3f1      	bcc.n	12ef8 <f_getfree+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   12f14:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   12f16:	6166      	str	r6, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   12f18:	f043 0301 	orr.w	r3, r3, #1
   12f1c:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   12f1e:	f8c8 6000 	str.w	r6, [r8]
   12f22:	e7da      	b.n	12eda <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   12f24:	4603      	mov	r3, r0
   12f26:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   12f28:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   12f2a:	6a61      	ldr	r1, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   12f2c:	b952      	cbnz	r2, 12f44 <f_getfree+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12f2e:	4620      	mov	r0, r4
   12f30:	f101 0a01 	add.w	sl, r1, #1
   12f34:	f7fe fe04 	bl	11b40 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   12f38:	b9d8      	cbnz	r0, 12f72 <f_getfree+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12f3a:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   12f3c:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   12f40:	f104 0334 	add.w	r3, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   12f44:	f1b9 0f02 	cmp.w	r9, #2
   12f48:	d107      	bne.n	12f5a <f_getfree+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   12f4a:	8818      	ldrh	r0, [r3, #0]
   12f4c:	b900      	cbnz	r0, 12f50 <f_getfree+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   12f4e:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   12f50:	3302      	adds	r3, #2
   12f52:	3a02      	subs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   12f54:	3f01      	subs	r7, #1
   12f56:	d1e9      	bne.n	12f2c <f_getfree+0x7e>
   12f58:	e7dc      	b.n	12f14 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   12f5a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   12f5c:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   12f5e:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   12f62:	bf08      	it	eq
   12f64:	3601      	addeq	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   12f66:	3304      	adds	r3, #4
   12f68:	e7f4      	b.n	12f54 <f_getfree+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   12f6a:	2501      	movs	r5, #1
   12f6c:	e7d2      	b.n	12f14 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   12f6e:	2502      	movs	r5, #2
   12f70:	e7d0      	b.n	12f14 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12f72:	4605      	mov	r5, r0
   12f74:	e7ce      	b.n	12f14 <f_getfree+0x66>
   12f76:	Address 0x0000000000012f76 is out of bounds.


00012f78 <f_mkfs>:
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   12f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f7c:	b089      	sub	sp, #36	; 0x24
   12f7e:	ab08      	add	r3, sp, #32
   12f80:	f843 0d0c 	str.w	r0, [r3, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   12f84:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   12f86:	460e      	mov	r6, r1
   12f88:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   12f8a:	f7fe fd59 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   12f8e:	2800      	cmp	r0, #0
   12f90:	f2c0 81f7 	blt.w	13382 <f_mkfs+0x40a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   12f94:	2e01      	cmp	r6, #1
   12f96:	f200 81f6 	bhi.w	13386 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   12f9a:	1e6b      	subs	r3, r5, #1
   12f9c:	402b      	ands	r3, r5
   12f9e:	9302      	str	r3, [sp, #8]
   12fa0:	f040 81f1 	bne.w	13386 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   12fa4:	4b50      	ldr	r3, [pc, #320]	; (130e8 <f_mkfs+0x170>)
   12fa6:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   12faa:	2c00      	cmp	r4, #0
   12fac:	f000 81ed 	beq.w	1338a <f_mkfs+0x412>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   12fb0:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   12fb4:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   12fb6:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   12fb8:	4638      	mov	r0, r7
   12fba:	f000 fe41 	bl	13c40 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   12fbe:	07c2      	lsls	r2, r0, #31
   12fc0:	f100 81e5 	bmi.w	1338e <f_mkfs+0x416>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   12fc4:	0743      	lsls	r3, r0, #29
   12fc6:	f100 81e4 	bmi.w	13392 <f_mkfs+0x41a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   12fca:	aa07      	add	r2, sp, #28
   12fcc:	2101      	movs	r1, #1
   12fce:	4638      	mov	r0, r7
   12fd0:	f000 fe89 	bl	13ce6 <disk_ioctl>
   12fd4:	b118      	cbz	r0, 12fde <f_mkfs+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   12fd6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   12fd8:	b009      	add	sp, #36	; 0x24
   12fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   12fde:	9907      	ldr	r1, [sp, #28]
   12fe0:	297f      	cmp	r1, #127	; 0x7f
   12fe2:	d9f8      	bls.n	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   12fe4:	2e00      	cmp	r6, #0
   12fe6:	bf14      	ite	ne
   12fe8:	f04f 0a00 	movne.w	sl, #0
   12fec:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   12ff0:	eba1 010a 	sub.w	r1, r1, sl
   12ff4:	9107      	str	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   12ff6:	b95d      	cbnz	r5, 13010 <f_mkfs+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   12ff8:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   12ffc:	fbb1 f3f3 	udiv	r3, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   13000:	483a      	ldr	r0, [pc, #232]	; (130ec <f_mkfs+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   13002:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   13006:	4293      	cmp	r3, r2
   13008:	d318      	bcc.n	1303c <f_mkfs+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1300a:	4b39      	ldr	r3, [pc, #228]	; (130f0 <f_mkfs+0x178>)
   1300c:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13010:	0a6d      	lsrs	r5, r5, #9
   13012:	d015      	beq.n	13040 <f_mkfs+0xc8>
   13014:	2d80      	cmp	r5, #128	; 0x80
   13016:	bf28      	it	cs
   13018:	2580      	movcs	r5, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   1301a:	fbb1 f3f5 	udiv	r3, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1301e:	f640 72f5 	movw	r2, #4085	; 0xff5
   13022:	4293      	cmp	r3, r2
   13024:	f240 81f8 	bls.w	13418 <f_mkfs+0x4a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13028:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   1302c:	4293      	cmp	r3, r2
   1302e:	f200 81b2 	bhi.w	13396 <f_mkfs+0x41e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13032:	3302      	adds	r3, #2
   13034:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   13036:	f04f 0802 	mov.w	r8, #2
   1303a:	e1f4      	b.n	13426 <f_mkfs+0x4ae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   1303c:	3501      	adds	r5, #1
   1303e:	e7e0      	b.n	13002 <f_mkfs+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13040:	2501      	movs	r5, #1
   13042:	e7ea      	b.n	1301a <f_mkfs+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   13044:	aa06      	add	r2, sp, #24
   13046:	2103      	movs	r1, #3
   13048:	4638      	mov	r0, r7
   1304a:	f000 fe4c 	bl	13ce6 <disk_ioctl>
   1304e:	b920      	cbnz	r0, 1305a <f_mkfs+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   13050:	9b06      	ldr	r3, [sp, #24]
   13052:	3b01      	subs	r3, #1
   13054:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   13058:	d301      	bcc.n	1305e <f_mkfs+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   1305a:	2301      	movs	r3, #1
   1305c:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   1305e:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   13060:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   13064:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   13068:	444b      	add	r3, r9
   1306a:	f1c2 0200 	rsb	r2, r2, #0
   1306e:	ea03 0302 	and.w	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   13072:	eba3 0309 	sub.w	r3, r3, r9
   13076:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   13078:	d122      	bne.n	130c0 <f_mkfs+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   1307a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   1307c:	449b      	add	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   1307e:	441a      	add	r2, r3
   13080:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   13082:	9a07      	ldr	r2, [sp, #28]
   13084:	9900      	ldr	r1, [sp, #0]
   13086:	eba2 030b 	sub.w	r3, r2, fp
   1308a:	1a5b      	subs	r3, r3, r1
   1308c:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   1308e:	f1b8 0f02 	cmp.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   13092:	eba3 0301 	sub.w	r3, r3, r1
   13096:	fbb3 f3f5 	udiv	r3, r3, r5
   1309a:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   1309c:	d114      	bne.n	130c8 <f_mkfs+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   1309e:	f640 73f5 	movw	r3, #4085	; 0xff5
   130a2:	9904      	ldr	r1, [sp, #16]
   130a4:	4299      	cmp	r1, r3
   130a6:	f240 81d5 	bls.w	13454 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   130aa:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   130ae:	bf34      	ite	cc
   130b0:	f04f 0904 	movcc.w	r9, #4
   130b4:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   130b8:	b34e      	cbz	r6, 1310e <f_mkfs+0x196>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   130ba:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   130be:	e05d      	b.n	1317c <f_mkfs+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   130c0:	9a00      	ldr	r2, [sp, #0]
   130c2:	441a      	add	r2, r3
   130c4:	9200      	str	r2, [sp, #0]
   130c6:	e7dc      	b.n	13082 <f_mkfs+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   130c8:	f1b8 0f03 	cmp.w	r8, #3
   130cc:	d112      	bne.n	130f4 <f_mkfs+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   130ce:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   130d2:	9a04      	ldr	r2, [sp, #16]
   130d4:	429a      	cmp	r2, r3
   130d6:	f240 81bd 	bls.w	13454 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   130da:	2e00      	cmp	r6, #0
   130dc:	f040 8167 	bne.w	133ae <f_mkfs+0x436>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   130e0:	f04f 090c 	mov.w	r9, #12
   130e4:	e013      	b.n	1310e <f_mkfs+0x196>
   130e6:	bf00      	nop
   130e8:	2007c45c 	.word	0x2007c45c
   130ec:	0001f410 	.word	0x0001f410
   130f0:	0001f3b6 	.word	0x0001f3b6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   130f4:	f1b8 0f01 	cmp.w	r8, #1
   130f8:	d1d7      	bne.n	130aa <f_mkfs+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   130fa:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   130fe:	bf34      	ite	cc
   13100:	f04f 0901 	movcc.w	r9, #1
   13104:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   13108:	2e00      	cmp	r6, #0
   1310a:	f040 816b 	bne.w	133e4 <f_mkfs+0x46c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   1310e:	f104 0634 	add.w	r6, r4, #52	; 0x34
   13112:	f44f 7200 	mov.w	r2, #512	; 0x200
   13116:	2100      	movs	r1, #0
   13118:	4630      	mov	r0, r6
   1311a:	f7fe fc7b 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   1311e:	21fe      	movs	r1, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13120:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   13124:	f8dd e01c 	ldr.w	lr, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   13128:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1312c:	eb0a 010e 	add.w	r1, sl, lr
   13130:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   13134:	0888      	lsrs	r0, r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13136:	9106      	str	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   13138:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1313c:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   1313e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   13140:	2200      	movs	r2, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13142:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13146:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   1314a:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   1314e:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13152:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   13156:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   1315a:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   1315e:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   13162:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13166:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   1316a:	4631      	mov	r1, r6
   1316c:	4638      	mov	r0, r7
   1316e:	f000 fd9e 	bl	13cae <disk_write>
   13172:	2800      	cmp	r0, #0
   13174:	f47f af2f 	bne.w	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   13178:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   1317c:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13180:	f44f 7200 	mov.w	r2, #512	; 0x200
   13184:	2100      	movs	r1, #0
   13186:	4630      	mov	r0, r6
   13188:	f7fe fc44 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   1318c:	220b      	movs	r2, #11
   1318e:	49b2      	ldr	r1, [pc, #712]	; (13458 <f_mkfs+0x4e0>)
   13190:	4630      	mov	r0, r6
   13192:	f7fe fc23 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13196:	f44f 7300 	mov.w	r3, #512	; 0x200
   1319a:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1319e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   131a0:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   131a4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   131a8:	9b02      	ldr	r3, [sp, #8]
   131aa:	bf18      	it	ne
   131ac:	f44f 7300 	movne.w	r3, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   131b0:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   131b4:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   131b8:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   131ba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   131be:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   131c2:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   131c6:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   131c8:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   131cc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   131d0:	bf34      	ite	cc
   131d2:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   131d6:	6563      	strcs	r3, [r4, #84]	; 0x54
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   131d8:	233f      	movs	r3, #63	; 0x3f
   131da:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   131de:	23ff      	movs	r3, #255	; 0xff
   131e0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   131e4:	f000 fff4 	bl	141d0 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   131e8:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   131ec:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   131ee:	f040 809c 	bne.w	1332a <f_mkfs+0x3b2>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   131f2:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   131f4:	2213      	movs	r2, #19
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   131f6:	65a3      	str	r3, [r4, #88]	; 0x58
   131f8:	2302      	movs	r3, #2
   131fa:	6623      	str	r3, [r4, #96]	; 0x60
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   131fc:	2301      	movs	r3, #1
   131fe:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   13202:	2306      	movs	r3, #6
   13204:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   13208:	2380      	movs	r3, #128	; 0x80
   1320a:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1320e:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13210:	4992      	ldr	r1, [pc, #584]	; (1345c <f_mkfs+0x4e4>)
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13212:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13216:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   1321a:	f104 007b 	add.w	r0, r4, #123	; 0x7b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   1321e:	f7fe fbdd 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13222:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   13226:	4652      	mov	r2, sl
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13228:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   1322c:	4631      	mov	r1, r6
   1322e:	2301      	movs	r3, #1
   13230:	4638      	mov	r0, r7
   13232:	f000 fd3c 	bl	13cae <disk_write>
   13236:	2800      	cmp	r0, #0
   13238:	f47f aecd 	bne.w	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   1323c:	f1b8 0f03 	cmp.w	r8, #3
   13240:	d106      	bne.n	13250 <f_mkfs+0x2d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   13242:	2301      	movs	r3, #1
   13244:	f10a 0206 	add.w	r2, sl, #6
   13248:	4631      	mov	r1, r6
   1324a:	4638      	mov	r0, r7
   1324c:	f000 fd2f 	bl	13cae <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   13250:	f44f 7200 	mov.w	r2, #512	; 0x200
   13254:	2100      	movs	r1, #0
   13256:	4630      	mov	r0, r6
   13258:	f7fe fbdc 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   1325c:	f1b8 0f03 	cmp.w	r8, #3
   13260:	d074      	beq.n	1334c <f_mkfs+0x3d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   13262:	f1b8 0f01 	cmp.w	r8, #1
   13266:	4b7e      	ldr	r3, [pc, #504]	; (13460 <f_mkfs+0x4e8>)
   13268:	bf18      	it	ne
   1326a:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   1326e:	ea43 0309 	orr.w	r3, r3, r9
   13272:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13274:	6363      	str	r3, [r4, #52]	; 0x34
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   13276:	9b01      	ldr	r3, [sp, #4]
   13278:	4631      	mov	r1, r6
   1327a:	f103 0901 	add.w	r9, r3, #1
   1327e:	9a01      	ldr	r2, [sp, #4]
   13280:	2301      	movs	r3, #1
   13282:	4638      	mov	r0, r7
   13284:	f000 fd13 	bl	13cae <disk_write>
   13288:	4601      	mov	r1, r0
   1328a:	2800      	cmp	r0, #0
   1328c:	f47f aea3 	bne.w	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   13290:	f44f 7200 	mov.w	r2, #512	; 0x200
   13294:	4630      	mov	r0, r6
   13296:	f7fe fbbd 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   1329a:	2301      	movs	r3, #1
   1329c:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   1329e:	9b06      	ldr	r3, [sp, #24]
   132a0:	9a00      	ldr	r2, [sp, #0]
   132a2:	429a      	cmp	r2, r3
   132a4:	d85d      	bhi.n	13362 <f_mkfs+0x3ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   132a6:	9b03      	ldr	r3, [sp, #12]
   132a8:	464a      	mov	r2, r9
   132aa:	f1b8 0f03 	cmp.w	r8, #3
   132ae:	bf18      	it	ne
   132b0:	461d      	movne	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   132b2:	444d      	add	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   132b4:	2301      	movs	r3, #1
   132b6:	4631      	mov	r1, r6
   132b8:	4638      	mov	r0, r7
   132ba:	f102 0b01 	add.w	fp, r2, #1
   132be:	f000 fcf6 	bl	13cae <disk_write>
   132c2:	2800      	cmp	r0, #0
   132c4:	f47f ae87 	bne.w	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   132c8:	45ab      	cmp	fp, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   132ca:	465a      	mov	r2, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   132cc:	d1f2      	bne.n	132b4 <f_mkfs+0x33c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   132ce:	f1b8 0f03 	cmp.w	r8, #3
   132d2:	d121      	bne.n	13318 <f_mkfs+0x3a0>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   132d4:	4b63      	ldr	r3, [pc, #396]	; (13464 <f_mkfs+0x4ec>)
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   132d6:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   132d8:	6363      	str	r3, [r4, #52]	; 0x34
   132da:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   132de:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   132e2:	3320      	adds	r3, #32
   132e4:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   132e8:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   132ea:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   132ec:	3b01      	subs	r3, #1
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   132ee:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   132f2:	2302      	movs	r3, #2
   132f4:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   132f8:	f64a 2355 	movw	r3, #43605	; 0xaa55
   132fc:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13300:	2301      	movs	r3, #1
   13302:	eb0a 0203 	add.w	r2, sl, r3
   13306:	f000 fcd2 	bl	13cae <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   1330a:	2301      	movs	r3, #1
   1330c:	f10a 0207 	add.w	r2, sl, #7
   13310:	4631      	mov	r1, r6
   13312:	4638      	mov	r0, r7
   13314:	f000 fccb 	bl	13cae <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   13318:	2200      	movs	r2, #0
   1331a:	4638      	mov	r0, r7
   1331c:	4611      	mov	r1, r2
   1331e:	f000 fce2 	bl	13ce6 <disk_ioctl>
   13322:	3000      	adds	r0, #0
   13324:	bf18      	it	ne
   13326:	2001      	movne	r0, #1
   13328:	e656      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   1332a:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1332e:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   13332:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   13336:	2380      	movs	r3, #128	; 0x80
   13338:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   1333c:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   1333e:	2213      	movs	r2, #19
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13340:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13344:	4948      	ldr	r1, [pc, #288]	; (13468 <f_mkfs+0x4f0>)
   13346:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   1334a:	e768      	b.n	1321e <f_mkfs+0x2a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   1334c:	f069 03ff 	orn	r3, r9, #255	; 0xff
   13350:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13352:	6363      	str	r3, [r4, #52]	; 0x34
   13354:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13358:	63a3      	str	r3, [r4, #56]	; 0x38
   1335a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   1335e:	63e3      	str	r3, [r4, #60]	; 0x3c
   13360:	e789      	b.n	13276 <f_mkfs+0x2fe>
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   13362:	2301      	movs	r3, #1
   13364:	464a      	mov	r2, r9
   13366:	4631      	mov	r1, r6
   13368:	4638      	mov	r0, r7
   1336a:	f109 0b01 	add.w	fp, r9, #1
   1336e:	f000 fc9e 	bl	13cae <disk_write>
   13372:	2800      	cmp	r0, #0
   13374:	f47f ae2f 	bne.w	12fd6 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13378:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   1337a:	46d9      	mov	r9, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   1337c:	3301      	adds	r3, #1
   1337e:	9306      	str	r3, [sp, #24]
   13380:	e78d      	b.n	1329e <f_mkfs+0x326>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   13382:	200b      	movs	r0, #11
   13384:	e628      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13386:	2013      	movs	r0, #19
   13388:	e626      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   1338a:	200c      	movs	r0, #12
   1338c:	e624      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   1338e:	2003      	movs	r0, #3
   13390:	e622      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13392:	200a      	movs	r0, #10
   13394:	e620      	b.n	12fd8 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   13396:	009b      	lsls	r3, r3, #2
   13398:	f203 2307 	addw	r3, r3, #519	; 0x207
   1339c:	0a5b      	lsrs	r3, r3, #9
   1339e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   133a0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   133a2:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   133a6:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   133a8:	f04f 0b20 	mov.w	fp, #32
   133ac:	e043      	b.n	13436 <f_mkfs+0x4be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   133ae:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   133b2:	f44f 7200 	mov.w	r2, #512	; 0x200
   133b6:	2100      	movs	r1, #0
   133b8:	4630      	mov	r0, r6
   133ba:	f7fe fb2b 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   133be:	220b      	movs	r2, #11
   133c0:	4925      	ldr	r1, [pc, #148]	; (13458 <f_mkfs+0x4e0>)
   133c2:	4630      	mov	r0, r6
   133c4:	f7fe fb0a 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   133c8:	f44f 7300 	mov.w	r3, #512	; 0x200
   133cc:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   133d0:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   133d2:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   133d6:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   133da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   133de:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   133e2:	e6ea      	b.n	131ba <f_mkfs+0x242>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   133e4:	f104 0634 	add.w	r6, r4, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   133e8:	f44f 7200 	mov.w	r2, #512	; 0x200
   133ec:	2100      	movs	r1, #0
   133ee:	4630      	mov	r0, r6
   133f0:	f7fe fb10 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   133f4:	220b      	movs	r2, #11
   133f6:	4918      	ldr	r1, [pc, #96]	; (13458 <f_mkfs+0x4e0>)
   133f8:	4630      	mov	r0, r6
   133fa:	f7fe faef 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   133fe:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13402:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13406:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   1340a:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1340e:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13412:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13416:	e6cf      	b.n	131b8 <f_mkfs+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   13418:	f04f 0801 	mov.w	r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   1341c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   13420:	3301      	adds	r3, #1
   13422:	085b      	lsrs	r3, r3, #1
   13424:	3303      	adds	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   13426:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   1342a:	0a5b      	lsrs	r3, r3, #9
   1342c:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   1342e:	2320      	movs	r3, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   13430:	f04f 0b01 	mov.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13434:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   13436:	eb0b 030a 	add.w	r3, fp, sl
   1343a:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   1343c:	9a03      	ldr	r2, [sp, #12]
   1343e:	9b00      	ldr	r3, [sp, #0]
   13440:	eb03 0902 	add.w	r9, r3, r2
   13444:	9b01      	ldr	r3, [sp, #4]
   13446:	4499      	add	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   13448:	eba5 030a 	sub.w	r3, r5, sl
   1344c:	444b      	add	r3, r9
   1344e:	4299      	cmp	r1, r3
   13450:	f4bf adf8 	bcs.w	13044 <f_mkfs+0xcc>
   13454:	200e      	movs	r0, #14
   13456:	e5bf      	b.n	12fd8 <f_mkfs+0x60>
   13458:	0001f3cc 	.word	0x0001f3cc
   1345c:	0001f3d8 	.word	0x0001f3d8
   13460:	00ffff00 	.word	0x00ffff00
   13464:	41615252 	.word	0x41615252
   13468:	0001f3ec 	.word	0x0001f3ec

0001346c <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   1346c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   1346e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   13470:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13472:	f002 ffb7 	bl	163e4 <xQueueCreateMutex>
   13476:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   13478:	3000      	adds	r0, #0
   1347a:	bf18      	it	ne
   1347c:	2001      	movne	r0, #1
   1347e:	bd10      	pop	{r4, pc}

00013480 <ff_del_syncobj>:
ff_del_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   13480:	2001      	movs	r0, #1
   13482:	4770      	bx	lr

00013484 <ff_req_grant>:
ff_req_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   13484:	b510      	push	{r4, lr}
   13486:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13488:	f003 fc2a 	bl	16ce0 <xTaskGetSchedulerState>
   1348c:	2802      	cmp	r0, #2
   1348e:	d10a      	bne.n	134a6 <ff_req_grant+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   13490:	2300      	movs	r3, #0
   13492:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13496:	4619      	mov	r1, r3
   13498:	4620      	mov	r0, r4
   1349a:	f003 f829 	bl	164f0 <xQueueGenericReceive>
   1349e:	1e43      	subs	r3, r0, #1
   134a0:	4258      	negs	r0, r3
   134a2:	4158      	adcs	r0, r3
   134a4:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   134a6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   134a8:	bd10      	pop	{r4, pc}

000134aa <ff_rel_grant>:
ff_rel_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   134aa:	b510      	push	{r4, lr}
   134ac:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   134ae:	f003 fc17 	bl	16ce0 <xTaskGetSchedulerState>
   134b2:	2802      	cmp	r0, #2
   134b4:	d107      	bne.n	134c6 <ff_rel_grant+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   134b6:	2300      	movs	r3, #0
   134b8:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   134ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   134be:	461a      	mov	r2, r3
   134c0:	4619      	mov	r1, r3
   134c2:	f002 bf0d 	b.w	162e0 <xQueueGenericSend>
   134c6:	bd10      	pop	{r4, pc}

000134c8 <ff_convert>:
ff_convert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   134c8:	287f      	cmp	r0, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   134ca:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   134cc:	d916      	bls.n	134fc <ff_convert+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   134ce:	b131      	cbz	r1, 134de <ff_convert+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   134d0:	28ff      	cmp	r0, #255	; 0xff
   134d2:	d812      	bhi.n	134fa <ff_convert+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   134d4:	4b0a      	ldr	r3, [pc, #40]	; (13500 <ff_convert+0x38>)
   134d6:	3880      	subs	r0, #128	; 0x80
   134d8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   134dc:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   134de:	4a08      	ldr	r2, [pc, #32]	; (13500 <ff_convert+0x38>)
   134e0:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   134e4:	b28b      	uxth	r3, r1
   134e6:	4284      	cmp	r4, r0
   134e8:	d003      	beq.n	134f2 <ff_convert+0x2a>
   134ea:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   134ec:	2980      	cmp	r1, #128	; 0x80
   134ee:	d1f7      	bne.n	134e0 <ff_convert+0x18>
   134f0:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   134f2:	f103 0080 	add.w	r0, r3, #128	; 0x80
   134f6:	b2c0      	uxtb	r0, r0
   134f8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   134fa:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   134fc:	bd10      	pop	{r4, pc}
   134fe:	bf00      	nop
   13500:	0001f426 	.word	0x0001f426

00013504 <ff_wtoupper>:
ff_wtoupper():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13504:	2300      	movs	r3, #0
   13506:	4906      	ldr	r1, [pc, #24]	; (13520 <ff_wtoupper+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   13508:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   1350c:	b122      	cbz	r2, 13518 <ff_wtoupper+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   1350e:	4282      	cmp	r2, r0
   13510:	d103      	bne.n	1351a <ff_wtoupper+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   13512:	4a04      	ldr	r2, [pc, #16]	; (13524 <ff_wtoupper+0x20>)
   13514:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   13518:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   1351a:	3301      	adds	r3, #1
   1351c:	e7f4      	b.n	13508 <ff_wtoupper+0x4>
   1351e:	bf00      	nop
   13520:	0001f526 	.word	0x0001f526
   13524:	0001f706 	.word	0x0001f706

00013528 <sys_get_uptime_ms>:
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   13528:	b508      	push	{r3, lr}
   1352a:	f7fc ffad 	bl	10488 <sys_get_uptime_us>
   1352e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13532:	2300      	movs	r3, #0
   13534:	f005 f8a8 	bl	18688 <__aeabi_uldivmod>
   13538:	bd08      	pop	{r3, pc}
   1353a:	Address 0x000000000001353a is out of bounds.


0001353c <ssp1_set_max_clock>:
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   1353c:	b510      	push	{r4, lr}
   1353e:	4604      	mov	r4, r0
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   13540:	f7fd f928 	bl	10794 <sys_get_cpu_clock>
   13544:	4b07      	ldr	r3, [pc, #28]	; (13564 <ssp1_set_max_clock+0x28>)
   13546:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   1354a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1354c:	fbb0 f2f3 	udiv	r2, r0, r3
   13550:	4294      	cmp	r4, r2
   13552:	d302      	bcc.n	1355a <ssp1_set_max_clock+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   13554:	4a04      	ldr	r2, [pc, #16]	; (13568 <ssp1_set_max_clock+0x2c>)
   13556:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   13558:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1355a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1355e:	d0f9      	beq.n	13554 <ssp1_set_max_clock+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   13560:	3302      	adds	r3, #2
   13562:	e7f3      	b.n	1354c <ssp1_set_max_clock+0x10>
   13564:	000f4240 	.word	0x000f4240
   13568:	40030000 	.word	0x40030000

0001356c <ssp1_exchange_byte>:
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1356c:	4b03      	ldr	r3, [pc, #12]	; (1357c <ssp1_exchange_byte+0x10>)
   1356e:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13570:	68da      	ldr	r2, [r3, #12]
   13572:	06d2      	lsls	r2, r2, #27
   13574:	d4fc      	bmi.n	13570 <ssp1_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13576:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   13578:	b2c0      	uxtb	r0, r0
   1357a:	4770      	bx	lr
   1357c:	40030000 	.word	0x40030000

00013580 <wait_ready>:
wait_ready():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   13580:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   13582:	f7ff ffd1 	bl	13528 <sys_get_uptime_ms>
   13586:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   1358a:	20ff      	movs	r0, #255	; 0xff
   1358c:	f7ff ffee 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13590:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13592:	20ff      	movs	r0, #255	; 0xff
   13594:	f7ff ffea 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13598:	28ff      	cmp	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   1359a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   1359c:	d005      	beq.n	135aa <wait_ready+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   1359e:	f7ff ffc3 	bl	13528 <sys_get_uptime_ms>
   135a2:	42a9      	cmp	r1, r5
   135a4:	bf08      	it	eq
   135a6:	42a0      	cmpeq	r0, r4
   135a8:	d3f3      	bcc.n	13592 <wait_ready+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   135aa:	4630      	mov	r0, r6
   135ac:	bd70      	pop	{r4, r5, r6, pc}
   135ae:	Address 0x00000000000135ae is out of bounds.


000135b0 <power_off>:
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   135b0:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   135b2:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   135b6:	4c05      	ldr	r4, [pc, #20]	; (135cc <power_off+0x1c>)
   135b8:	61e5      	str	r5, [r4, #28]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   135ba:	f7ff ffe1 	bl	13580 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   135be:	4a04      	ldr	r2, [pc, #16]	; (135d0 <power_off+0x20>)
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   135c0:	61a5      	str	r5, [r4, #24]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   135c2:	7813      	ldrb	r3, [r2, #0]
   135c4:	f043 0301 	orr.w	r3, r3, #1
   135c8:	7013      	strb	r3, [r2, #0]
   135ca:	bd38      	pop	{r3, r4, r5, pc}
   135cc:	2009c020 	.word	0x2009c020
   135d0:	2007c095 	.word	0x2007c095

000135d4 <rcvr_datablock>:
rcvr_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   135d4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   135d8:	4606      	mov	r6, r0
   135da:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   135dc:	f7ff ffa4 	bl	13528 <sys_get_uptime_ms>
   135e0:	3064      	adds	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   135e2:	4680      	mov	r8, r0
   135e4:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   135e8:	20ff      	movs	r0, #255	; 0xff
   135ea:	f7ff ffbf 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   135ee:	28ff      	cmp	r0, #255	; 0xff
   135f0:	d108      	bne.n	13604 <rcvr_datablock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   135f2:	f7ff ff99 	bl	13528 <sys_get_uptime_ms>
   135f6:	4549      	cmp	r1, r9
   135f8:	bf08      	it	eq
   135fa:	4540      	cmpeq	r0, r8
   135fc:	d3f4      	bcc.n	135e8 <rcvr_datablock+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   135fe:	2000      	movs	r0, #0
   13600:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   13604:	28fe      	cmp	r0, #254	; 0xfe
   13606:	d1fa      	bne.n	135fe <rcvr_datablock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13608:	2d10      	cmp	r5, #16
   1360a:	d90e      	bls.n	1362a <rcvr_datablock+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   1360c:	2200      	movs	r2, #0
   1360e:	f44f 7100 	mov.w	r1, #512	; 0x200
   13612:	4630      	mov	r0, r6
   13614:	f002 faaa 	bl	15b6c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   13618:	20ff      	movs	r0, #255	; 0xff
   1361a:	f7ff ffa7 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   1361e:	20ff      	movs	r0, #255	; 0xff
   13620:	f7ff ffa4 	bl	1356c <ssp1_exchange_byte>
   13624:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   13626:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   1362a:	1d34      	adds	r4, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   1362c:	3504      	adds	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   1362e:	20ff      	movs	r0, #255	; 0xff
   13630:	f7ff ff9c 	bl	1356c <ssp1_exchange_byte>
   13634:	f804 0c04 	strb.w	r0, [r4, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   13638:	20ff      	movs	r0, #255	; 0xff
   1363a:	f7ff ff97 	bl	1356c <ssp1_exchange_byte>
   1363e:	f804 0c03 	strb.w	r0, [r4, #-3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   13642:	20ff      	movs	r0, #255	; 0xff
   13644:	f7ff ff92 	bl	1356c <ssp1_exchange_byte>
   13648:	f804 0c02 	strb.w	r0, [r4, #-2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   1364c:	20ff      	movs	r0, #255	; 0xff
   1364e:	f7ff ff8d 	bl	1356c <ssp1_exchange_byte>
   13652:	3404      	adds	r4, #4
   13654:	f804 0c05 	strb.w	r0, [r4, #-5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13658:	1b2b      	subs	r3, r5, r4
   1365a:	42de      	cmn	r6, r3
   1365c:	d1e7      	bne.n	1362e <rcvr_datablock+0x5a>
   1365e:	e7db      	b.n	13618 <rcvr_datablock+0x44>

00013660 <xmit_datablock>:
xmit_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   13660:	b570      	push	{r4, r5, r6, lr}
   13662:	4606      	mov	r6, r0
   13664:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   13666:	f7ff ff8b 	bl	13580 <wait_ready>
   1366a:	28ff      	cmp	r0, #255	; 0xff
   1366c:	4604      	mov	r4, r0
   1366e:	d119      	bne.n	136a4 <xmit_datablock+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   13670:	4628      	mov	r0, r5
   13672:	f7ff ff7b 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   13676:	2dfd      	cmp	r5, #253	; 0xfd
   13678:	d016      	beq.n	136a8 <xmit_datablock+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   1367a:	4622      	mov	r2, r4
   1367c:	f44f 7100 	mov.w	r1, #512	; 0x200
   13680:	4630      	mov	r0, r6
   13682:	f002 fa73 	bl	15b6c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   13686:	4620      	mov	r0, r4
   13688:	f7ff ff70 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   1368c:	4620      	mov	r0, r4
   1368e:	f7ff ff6d 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   13692:	4620      	mov	r0, r4
   13694:	f7ff ff6a 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13698:	f000 001f 	and.w	r0, r0, #31
   1369c:	1f43      	subs	r3, r0, #5
   1369e:	4258      	negs	r0, r3
   136a0:	4158      	adcs	r0, r3
   136a2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   136a4:	2000      	movs	r0, #0
   136a6:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   136a8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   136aa:	bd70      	pop	{r4, r5, r6, pc}

000136ac <send_cmd>:
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   136ac:	0602      	lsls	r2, r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   136ae:	b538      	push	{r3, r4, r5, lr}
   136b0:	4604      	mov	r4, r0
   136b2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   136b4:	d507      	bpl.n	136c6 <send_cmd+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   136b6:	2100      	movs	r1, #0
   136b8:	2077      	movs	r0, #119	; 0x77
   136ba:	f7ff fff7 	bl	136ac <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   136be:	2801      	cmp	r0, #1
   136c0:	d836      	bhi.n	13730 <send_cmd+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   136c2:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   136c6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   136ca:	4b1a      	ldr	r3, [pc, #104]	; (13734 <send_cmd+0x88>)
   136cc:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   136ce:	61da      	str	r2, [r3, #28]
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   136d0:	f7ff ff56 	bl	13580 <wait_ready>
   136d4:	28ff      	cmp	r0, #255	; 0xff
   136d6:	d12a      	bne.n	1372e <send_cmd+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   136d8:	4620      	mov	r0, r4
   136da:	f7ff ff47 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   136de:	0e28      	lsrs	r0, r5, #24
   136e0:	f7ff ff44 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   136e4:	f3c5 4007 	ubfx	r0, r5, #16, #8
   136e8:	f7ff ff40 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   136ec:	f3c5 2007 	ubfx	r0, r5, #8, #8
   136f0:	f7ff ff3c 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   136f4:	b2e8      	uxtb	r0, r5
   136f6:	f7ff ff39 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   136fa:	2c40      	cmp	r4, #64	; 0x40
   136fc:	d015      	beq.n	1372a <send_cmd+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   136fe:	2c48      	cmp	r4, #72	; 0x48
   13700:	bf14      	ite	ne
   13702:	2001      	movne	r0, #1
   13704:	2087      	moveq	r0, #135	; 0x87
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   13706:	f7ff ff31 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   1370a:	2c4c      	cmp	r4, #76	; 0x4c
   1370c:	d102      	bne.n	13714 <send_cmd+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   1370e:	20ff      	movs	r0, #255	; 0xff
   13710:	f7ff ff2c 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   13714:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   13716:	20ff      	movs	r0, #255	; 0xff
   13718:	f7ff ff28 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   1371c:	0603      	lsls	r3, r0, #24
   1371e:	d507      	bpl.n	13730 <send_cmd+0x84>
   13720:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   13722:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   13726:	d1f6      	bne.n	13716 <send_cmd+0x6a>
   13728:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   1372a:	2095      	movs	r0, #149	; 0x95
   1372c:	e7eb      	b.n	13706 <send_cmd+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   1372e:	20ff      	movs	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   13730:	bd38      	pop	{r3, r4, r5, pc}
   13732:	bf00      	nop
   13734:	2009c020 	.word	0x2009c020

00013738 <sd_update_card_status>:
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   13738:	4a06      	ldr	r2, [pc, #24]	; (13754 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   1373a:	4907      	ldr	r1, [pc, #28]	; (13758 <sd_update_card_status+0x20>)
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   1373c:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   1373e:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13740:	b2db      	uxtb	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   13742:	0149      	lsls	r1, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   13744:	bf54      	ite	pl
   13746:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   1374a:	f043 0303 	orrmi.w	r3, r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   1374e:	7013      	strb	r3, [r2, #0]
   13750:	4770      	bx	lr
   13752:	bf00      	nop
   13754:	2007c095 	.word	0x2007c095
   13758:	2009c020 	.word	0x2009c020

0001375c <sd_initialize>:
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   1375c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   13760:	f7ff ffea 	bl	13738 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   13764:	4b55      	ldr	r3, [pc, #340]	; (138bc <sd_initialize+0x160>)
   13766:	781a      	ldrb	r2, [r3, #0]
   13768:	461e      	mov	r6, r3
   1376a:	f012 0f02 	tst.w	r2, #2
   1376e:	d004      	beq.n	1377a <sd_initialize+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   13770:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13772:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   13774:	b003      	add	sp, #12
   13776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   1377a:	2001      	movs	r0, #1
   1377c:	f7ff fede 	bl	1353c <ssp1_set_max_clock>
   13780:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   13782:	20ff      	movs	r0, #255	; 0xff
   13784:	3c01      	subs	r4, #1
   13786:	f7ff fef1 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   1378a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   1378e:	d1f8      	bne.n	13782 <sd_initialize+0x26>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13790:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13794:	4f4a      	ldr	r7, [pc, #296]	; (138c0 <sd_initialize+0x164>)
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   13796:	4621      	mov	r1, r4
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   13798:	61fb      	str	r3, [r7, #28]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   1379a:	2040      	movs	r0, #64	; 0x40
   1379c:	f7ff ff86 	bl	136ac <send_cmd>
   137a0:	2801      	cmp	r0, #1
   137a2:	4680      	mov	r8, r0
   137a4:	d013      	beq.n	137ce <sd_initialize+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   137a6:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   137aa:	4b46      	ldr	r3, [pc, #280]	; (138c4 <sd_initialize+0x168>)
   137ac:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   137b0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   137b4:	61bb      	str	r3, [r7, #24]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   137b6:	f1b8 0f00 	cmp.w	r8, #0
   137ba:	d07b      	beq.n	138b4 <sd_initialize+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   137bc:	7833      	ldrb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   137be:	2018      	movs	r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   137c0:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   137c4:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   137c6:	f7ff feb9 	bl	1353c <ssp1_set_max_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   137ca:	7830      	ldrb	r0, [r6, #0]
   137cc:	e7d1      	b.n	13772 <sd_initialize+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   137ce:	f7ff feab 	bl	13528 <sys_get_uptime_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   137d2:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   137d6:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   137da:	2048      	movs	r0, #72	; 0x48
   137dc:	f7ff ff66 	bl	136ac <send_cmd>
   137e0:	2801      	cmp	r0, #1
   137e2:	d140      	bne.n	13866 <sd_initialize+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   137e4:	f10d 0804 	add.w	r8, sp, #4
   137e8:	20ff      	movs	r0, #255	; 0xff
   137ea:	f7ff febf 	bl	1356c <ssp1_exchange_byte>
   137ee:	f808 0004 	strb.w	r0, [r8, r4]
   137f2:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   137f4:	2c04      	cmp	r4, #4
   137f6:	d1f7      	bne.n	137e8 <sd_initialize+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   137f8:	f89d 3006 	ldrb.w	r3, [sp, #6]
   137fc:	2b01      	cmp	r3, #1
   137fe:	d1d2      	bne.n	137a6 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   13800:	f89d 3007 	ldrb.w	r3, [sp, #7]
   13804:	2baa      	cmp	r3, #170	; 0xaa
   13806:	d1ce      	bne.n	137a6 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   13808:	462c      	mov	r4, r5
   1380a:	2500      	movs	r5, #0
   1380c:	f7ff fe8c 	bl	13528 <sys_get_uptime_ms>
   13810:	42a9      	cmp	r1, r5
   13812:	bf08      	it	eq
   13814:	42a0      	cmpeq	r0, r4
   13816:	d31e      	bcc.n	13856 <sd_initialize+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   13818:	f7ff fe86 	bl	13528 <sys_get_uptime_ms>
   1381c:	42a9      	cmp	r1, r5
   1381e:	bf08      	it	eq
   13820:	42a0      	cmpeq	r0, r4
   13822:	d2c0      	bcs.n	137a6 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   13824:	2100      	movs	r1, #0
   13826:	207a      	movs	r0, #122	; 0x7a
   13828:	f7ff ff40 	bl	136ac <send_cmd>
   1382c:	2800      	cmp	r0, #0
   1382e:	d1ba      	bne.n	137a6 <sd_initialize+0x4a>
   13830:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   13832:	20ff      	movs	r0, #255	; 0xff
   13834:	f7ff fe9a 	bl	1356c <ssp1_exchange_byte>
   13838:	f808 0001 	strb.w	r0, [r8, r1]
   1383c:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   1383e:	2904      	cmp	r1, #4
   13840:	d1f7      	bne.n	13832 <sd_initialize+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   13842:	f89d 3004 	ldrb.w	r3, [sp, #4]
   13846:	f013 0f40 	tst.w	r3, #64	; 0x40
   1384a:	bf14      	ite	ne
   1384c:	f04f 080c 	movne.w	r8, #12
   13850:	f04f 0804 	moveq.w	r8, #4
   13854:	e7a9      	b.n	137aa <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   13856:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   1385a:	20e9      	movs	r0, #233	; 0xe9
   1385c:	f7ff ff26 	bl	136ac <send_cmd>
   13860:	2800      	cmp	r0, #0
   13862:	d1d3      	bne.n	1380c <sd_initialize+0xb0>
   13864:	e7d8      	b.n	13818 <sd_initialize+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   13866:	4621      	mov	r1, r4
   13868:	20e9      	movs	r0, #233	; 0xe9
   1386a:	f7ff ff1f 	bl	136ac <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   1386e:	2802      	cmp	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13870:	462c      	mov	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   13872:	bf36      	itet	cc
   13874:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   13878:	f04f 0941 	movcs.w	r9, #65	; 0x41
   1387c:	f04f 0802 	movcc.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13880:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   13882:	f7ff fe51 	bl	13528 <sys_get_uptime_ms>
   13886:	42a9      	cmp	r1, r5
   13888:	bf08      	it	eq
   1388a:	42a0      	cmpeq	r0, r4
   1388c:	d30b      	bcc.n	138a6 <sd_initialize+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   1388e:	f7ff fe4b 	bl	13528 <sys_get_uptime_ms>
   13892:	42a9      	cmp	r1, r5
   13894:	bf08      	it	eq
   13896:	42a0      	cmpeq	r0, r4
   13898:	d387      	bcc.n	137aa <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   1389a:	f44f 7100 	mov.w	r1, #512	; 0x200
   1389e:	2050      	movs	r0, #80	; 0x50
   138a0:	f7ff ff04 	bl	136ac <send_cmd>
   138a4:	e781      	b.n	137aa <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   138a6:	2100      	movs	r1, #0
   138a8:	4648      	mov	r0, r9
   138aa:	f7ff feff 	bl	136ac <send_cmd>
   138ae:	2800      	cmp	r0, #0
   138b0:	d1e7      	bne.n	13882 <sd_initialize+0x126>
   138b2:	e7ec      	b.n	1388e <sd_initialize+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   138b4:	f7ff fe7c 	bl	135b0 <power_off>
   138b8:	e787      	b.n	137ca <sd_initialize+0x6e>
   138ba:	bf00      	nop
   138bc:	2007c095 	.word	0x2007c095
   138c0:	2009c020 	.word	0x2009c020
   138c4:	2007c466 	.word	0x2007c466

000138c8 <sd_status>:
sd_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   138c8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   138ca:	f7ff ff35 	bl	13738 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   138ce:	4b01      	ldr	r3, [pc, #4]	; (138d4 <sd_status+0xc>)
   138d0:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   138d2:	bd08      	pop	{r3, pc}
   138d4:	2007c095 	.word	0x2007c095

000138d8 <sd_read>:
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   138d8:	b570      	push	{r4, r5, r6, lr}
   138da:	4614      	mov	r4, r2
   138dc:	4606      	mov	r6, r0
   138de:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   138e0:	f7ff ff2a 	bl	13738 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   138e4:	2c00      	cmp	r4, #0
   138e6:	d038      	beq.n	1395a <sd_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   138e8:	4b1e      	ldr	r3, [pc, #120]	; (13964 <sd_read+0x8c>)
   138ea:	781b      	ldrb	r3, [r3, #0]
   138ec:	07da      	lsls	r2, r3, #31
   138ee:	d436      	bmi.n	1395e <sd_read+0x86>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   138f0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   138f4:	4d1c      	ldr	r5, [pc, #112]	; (13968 <sd_read+0x90>)
   138f6:	61ea      	str	r2, [r5, #28]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   138f8:	4a1c      	ldr	r2, [pc, #112]	; (1396c <sd_read+0x94>)
   138fa:	7812      	ldrb	r2, [r2, #0]
   138fc:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   138fe:	bf58      	it	pl
   13900:	0240      	lslpl	r0, r0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   13902:	2c01      	cmp	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13904:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   13906:	d112      	bne.n	1392e <sd_read+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13908:	2051      	movs	r0, #81	; 0x51
   1390a:	f7ff fecf 	bl	136ac <send_cmd>
   1390e:	b938      	cbnz	r0, 13920 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   13910:	f44f 7100 	mov.w	r1, #512	; 0x200
   13914:	4630      	mov	r0, r6
   13916:	f7ff fe5d 	bl	135d4 <rcvr_datablock>
   1391a:	fab0 f480 	clz	r4, r0
   1391e:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13920:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   13924:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13926:	61ab      	str	r3, [r5, #24]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   13928:	bf18      	it	ne
   1392a:	2001      	movne	r0, #1
   1392c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   1392e:	2052      	movs	r0, #82	; 0x52
   13930:	f7ff febc 	bl	136ac <send_cmd>
   13934:	2800      	cmp	r0, #0
   13936:	d1f3      	bne.n	13920 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   13938:	f44f 7100 	mov.w	r1, #512	; 0x200
   1393c:	4630      	mov	r0, r6
   1393e:	f7ff fe49 	bl	135d4 <rcvr_datablock>
   13942:	b128      	cbz	r0, 13950 <sd_read+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   13944:	3c01      	subs	r4, #1
   13946:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   1394a:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   1394e:	d1f3      	bne.n	13938 <sd_read+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   13950:	2100      	movs	r1, #0
   13952:	204c      	movs	r0, #76	; 0x4c
   13954:	f7ff feaa 	bl	136ac <send_cmd>
   13958:	e7e2      	b.n	13920 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   1395a:	2004      	movs	r0, #4
   1395c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   1395e:	2003      	movs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   13960:	bd70      	pop	{r4, r5, r6, pc}
   13962:	bf00      	nop
   13964:	2007c095 	.word	0x2007c095
   13968:	2009c020 	.word	0x2009c020
   1396c:	2007c466 	.word	0x2007c466

00013970 <sd_write>:
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   13970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13972:	4614      	mov	r4, r2
   13974:	4606      	mov	r6, r0
   13976:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   13978:	f7ff fede 	bl	13738 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   1397c:	2c00      	cmp	r4, #0
   1397e:	d044      	beq.n	13a0a <sd_write+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   13980:	4b25      	ldr	r3, [pc, #148]	; (13a18 <sd_write+0xa8>)
   13982:	781a      	ldrb	r2, [r3, #0]
   13984:	07d1      	lsls	r1, r2, #31
   13986:	d442      	bmi.n	13a0e <sd_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   13988:	781b      	ldrb	r3, [r3, #0]
   1398a:	075a      	lsls	r2, r3, #29
   1398c:	d441      	bmi.n	13a12 <sd_write+0xa2>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1398e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13992:	4d22      	ldr	r5, [pc, #136]	; (13a1c <sd_write+0xac>)
   13994:	61ea      	str	r2, [r5, #28]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   13996:	4a22      	ldr	r2, [pc, #136]	; (13a20 <sd_write+0xb0>)
   13998:	7812      	ldrb	r2, [r2, #0]
   1399a:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   1399c:	bf58      	it	pl
   1399e:	027f      	lslpl	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   139a0:	2c01      	cmp	r4, #1
   139a2:	d112      	bne.n	139ca <sd_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   139a4:	4639      	mov	r1, r7
   139a6:	2058      	movs	r0, #88	; 0x58
   139a8:	f7ff fe80 	bl	136ac <send_cmd>
   139ac:	bb58      	cbnz	r0, 13a06 <sd_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   139ae:	21fe      	movs	r1, #254	; 0xfe
   139b0:	4630      	mov	r0, r6
   139b2:	f7ff fe55 	bl	13660 <xmit_datablock>
   139b6:	fab0 f480 	clz	r4, r0
   139ba:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   139bc:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   139c0:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   139c2:	61ab      	str	r3, [r5, #24]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   139c4:	bf18      	it	ne
   139c6:	2001      	movne	r0, #1
   139c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   139ca:	f012 0f06 	tst.w	r2, #6
   139ce:	d003      	beq.n	139d8 <sd_write+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   139d0:	4621      	mov	r1, r4
   139d2:	20d7      	movs	r0, #215	; 0xd7
   139d4:	f7ff fe6a 	bl	136ac <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   139d8:	4639      	mov	r1, r7
   139da:	2059      	movs	r0, #89	; 0x59
   139dc:	f7ff fe66 	bl	136ac <send_cmd>
   139e0:	2800      	cmp	r0, #0
   139e2:	d1eb      	bne.n	139bc <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   139e4:	21fc      	movs	r1, #252	; 0xfc
   139e6:	4630      	mov	r0, r6
   139e8:	f7ff fe3a 	bl	13660 <xmit_datablock>
   139ec:	b128      	cbz	r0, 139fa <sd_write+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   139ee:	3c01      	subs	r4, #1
   139f0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   139f4:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   139f8:	d1f4      	bne.n	139e4 <sd_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   139fa:	21fd      	movs	r1, #253	; 0xfd
   139fc:	2000      	movs	r0, #0
   139fe:	f7ff fe2f 	bl	13660 <xmit_datablock>
   13a02:	2800      	cmp	r0, #0
   13a04:	d1da      	bne.n	139bc <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   13a06:	2401      	movs	r4, #1
   13a08:	e7d8      	b.n	139bc <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   13a0a:	2004      	movs	r0, #4
   13a0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   13a0e:	2003      	movs	r0, #3
   13a10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   13a12:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   13a14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13a16:	bf00      	nop
   13a18:	2007c095 	.word	0x2007c095
   13a1c:	2009c020 	.word	0x2009c020
   13a20:	2007c466 	.word	0x2007c466

00013a24 <sd_ioctl>:
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   13a24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   13a26:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   13a28:	f7ff fe86 	bl	13738 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   13a2c:	2805      	cmp	r0, #5
   13a2e:	d11a      	bne.n	13a66 <sd_ioctl+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   13a30:	782b      	ldrb	r3, [r5, #0]
   13a32:	2b01      	cmp	r3, #1
   13a34:	d015      	beq.n	13a62 <sd_ioctl+0x3e>
   13a36:	d305      	bcc.n	13a44 <sd_ioctl+0x20>
   13a38:	2b02      	cmp	r3, #2
   13a3a:	d00b      	beq.n	13a54 <sd_ioctl+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   13a3c:	2404      	movs	r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   13a3e:	4620      	mov	r0, r4
   13a40:	b004      	add	sp, #16
   13a42:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13a44:	4b7b      	ldr	r3, [pc, #492]	; (13c34 <sd_ioctl+0x210>)
   13a46:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   13a48:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   13a4c:	d109      	bne.n	13a62 <sd_ioctl+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   13a4e:	f7ff fdaf 	bl	135b0 <power_off>
   13a52:	e7f4      	b.n	13a3e <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13a54:	4b77      	ldr	r3, [pc, #476]	; (13c34 <sd_ioctl+0x210>)
   13a56:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   13a58:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   13a5c:	f3c3 6380 	ubfx	r3, r3, #26, #1
   13a60:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   13a62:	2400      	movs	r4, #0
   13a64:	e7eb      	b.n	13a3e <sd_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   13a66:	4b74      	ldr	r3, [pc, #464]	; (13c38 <sd_ioctl+0x214>)
   13a68:	781b      	ldrb	r3, [r3, #0]
   13a6a:	07db      	lsls	r3, r3, #31
   13a6c:	f100 80e0 	bmi.w	13c30 <sd_ioctl+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   13a70:	280e      	cmp	r0, #14
   13a72:	f200 80db 	bhi.w	13c2c <sd_ioctl+0x208>
   13a76:	e8df f000 	tbb	[pc, r0]
   13a7a:	1708      	.short	0x1708
   13a7c:	d9d95a55 	.word	0xd9d95a55
   13a80:	d9d9d9d9 	.word	0xd9d9d9d9
   13a84:	bdbaaba7 	.word	0xbdbaaba7
   13a88:	cd          	.byte	0xcd
   13a89:	00          	.byte	0x00
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13a8a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13a8e:	4b69      	ldr	r3, [pc, #420]	; (13c34 <sd_ioctl+0x210>)
   13a90:	61da      	str	r2, [r3, #28]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   13a92:	f7ff fd75 	bl	13580 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   13a96:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   13a9a:	bf18      	it	ne
   13a9c:	2401      	movne	r4, #1
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13a9e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13aa2:	4b64      	ldr	r3, [pc, #400]	; (13c34 <sd_ioctl+0x210>)
   13aa4:	619a      	str	r2, [r3, #24]
   13aa6:	e7ca      	b.n	13a3e <sd_ioctl+0x1a>
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13aa8:	2100      	movs	r1, #0
   13aaa:	2049      	movs	r0, #73	; 0x49
   13aac:	f7ff fdfe 	bl	136ac <send_cmd>
   13ab0:	4604      	mov	r4, r0
   13ab2:	b108      	cbz	r0, 13ab8 <sd_ioctl+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   13ab4:	2401      	movs	r4, #1
   13ab6:	e7f2      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13ab8:	2110      	movs	r1, #16
   13aba:	4668      	mov	r0, sp
   13abc:	f7ff fd8a 	bl	135d4 <rcvr_datablock>
   13ac0:	2800      	cmp	r0, #0
   13ac2:	d0f7      	beq.n	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   13ac4:	f89d 3000 	ldrb.w	r3, [sp]
   13ac8:	f89d 1008 	ldrb.w	r1, [sp, #8]
   13acc:	099b      	lsrs	r3, r3, #6
   13ace:	2b01      	cmp	r3, #1
   13ad0:	f89d 3009 	ldrb.w	r3, [sp, #9]
   13ad4:	d106      	bne.n	13ae4 <sd_ioctl+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   13ad6:	1c5a      	adds	r2, r3, #1
   13ad8:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   13adc:	b292      	uxth	r2, r2
   13ade:	0292      	lsls	r2, r2, #10
   13ae0:	602a      	str	r2, [r5, #0]
   13ae2:	e7dc      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13ae4:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13ae8:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13aec:	0092      	lsls	r2, r2, #2
   13aee:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13af2:	f89d 1006 	ldrb.w	r1, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13af6:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13af8:	0289      	lsls	r1, r1, #10
   13afa:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13afe:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b00:	f89d 1005 	ldrb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13b04:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b06:	f001 010f 	and.w	r1, r1, #15
   13b0a:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   13b0e:	3102      	adds	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13b10:	f003 0306 	and.w	r3, r3, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b14:	440b      	add	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   13b16:	b2db      	uxtb	r3, r3
   13b18:	b292      	uxth	r2, r2
   13b1a:	3b09      	subs	r3, #9
   13b1c:	fa02 f303 	lsl.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13b20:	602b      	str	r3, [r5, #0]
   13b22:	e7bc      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   13b24:	f44f 7300 	mov.w	r3, #512	; 0x200
   13b28:	802b      	strh	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   13b2a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   13b2c:	e7b7      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   13b2e:	4e43      	ldr	r6, [pc, #268]	; (13c3c <sd_ioctl+0x218>)
   13b30:	7831      	ldrb	r1, [r6, #0]
   13b32:	f011 0104 	ands.w	r1, r1, #4
   13b36:	d01c      	beq.n	13b72 <sd_ioctl+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   13b38:	2100      	movs	r1, #0
   13b3a:	20cd      	movs	r0, #205	; 0xcd
   13b3c:	f7ff fdb6 	bl	136ac <send_cmd>
   13b40:	2800      	cmp	r0, #0
   13b42:	d1b7      	bne.n	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   13b44:	20ff      	movs	r0, #255	; 0xff
   13b46:	f7ff fd11 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   13b4a:	2110      	movs	r1, #16
   13b4c:	4668      	mov	r0, sp
   13b4e:	f7ff fd41 	bl	135d4 <rcvr_datablock>
   13b52:	2800      	cmp	r0, #0
   13b54:	d0ae      	beq.n	13ab4 <sd_ioctl+0x90>
   13b56:	2430      	movs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   13b58:	20ff      	movs	r0, #255	; 0xff
   13b5a:	f7ff fd07 	bl	1356c <ssp1_exchange_byte>
   13b5e:	1e60      	subs	r0, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   13b60:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   13b64:	d1f8      	bne.n	13b58 <sd_ioctl+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   13b66:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13b6a:	091a      	lsrs	r2, r3, #4
   13b6c:	2310      	movs	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13b6e:	4093      	lsls	r3, r2
   13b70:	e7d6      	b.n	13b20 <sd_ioctl+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13b72:	2049      	movs	r0, #73	; 0x49
   13b74:	f7ff fd9a 	bl	136ac <send_cmd>
   13b78:	4604      	mov	r4, r0
   13b7a:	2800      	cmp	r0, #0
   13b7c:	d19a      	bne.n	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   13b7e:	2110      	movs	r1, #16
   13b80:	4668      	mov	r0, sp
   13b82:	f7ff fd27 	bl	135d4 <rcvr_datablock>
   13b86:	2800      	cmp	r0, #0
   13b88:	d094      	beq.n	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   13b8a:	7830      	ldrb	r0, [r6, #0]
   13b8c:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13b90:	f010 0002 	ands.w	r0, r0, #2
   13b94:	f89d 100b 	ldrb.w	r1, [sp, #11]
   13b98:	d00a      	beq.n	13bb0 <sd_ioctl+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13b9a:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13b9c:	f89d 200d 	ldrb.w	r2, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13ba0:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   13ba4:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13ba8:	0992      	lsrs	r2, r2, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   13baa:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13bac:	3a01      	subs	r2, #1
   13bae:	e7de      	b.n	13b6e <sd_ioctl+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13bb0:	00ca      	lsls	r2, r1, #3
   13bb2:	f002 0218 	and.w	r2, r2, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13bb6:	f3c3 0384 	ubfx	r3, r3, #2, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   13bba:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13bbe:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13bc0:	fb02 3303 	mla	r3, r2, r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13bc4:	602b      	str	r3, [r5, #0]
   13bc6:	e7b0      	b.n	13b2a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   13bc8:	4b1c      	ldr	r3, [pc, #112]	; (13c3c <sd_ioctl+0x218>)
   13bca:	781b      	ldrb	r3, [r3, #0]
   13bcc:	702b      	strb	r3, [r5, #0]
   13bce:	e7ac      	b.n	13b2a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   13bd0:	2100      	movs	r1, #0
   13bd2:	2049      	movs	r0, #73	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   13bd4:	f7ff fd6a 	bl	136ac <send_cmd>
   13bd8:	2800      	cmp	r0, #0
   13bda:	f47f af6b 	bne.w	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   13bde:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13be0:	4628      	mov	r0, r5
   13be2:	f7ff fcf7 	bl	135d4 <rcvr_datablock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   13be6:	fab0 f480 	clz	r4, r0
   13bea:	0964      	lsrs	r4, r4, #5
   13bec:	e757      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   13bee:	2100      	movs	r1, #0
   13bf0:	204a      	movs	r0, #74	; 0x4a
   13bf2:	e7ef      	b.n	13bd4 <sd_ioctl+0x1b0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   13bf4:	2100      	movs	r1, #0
   13bf6:	207a      	movs	r0, #122	; 0x7a
   13bf8:	f7ff fd58 	bl	136ac <send_cmd>
   13bfc:	2800      	cmp	r0, #0
   13bfe:	f47f af59 	bne.w	13ab4 <sd_ioctl+0x90>
   13c02:	1d29      	adds	r1, r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   13c04:	20ff      	movs	r0, #255	; 0xff
   13c06:	f7ff fcb1 	bl	1356c <ssp1_exchange_byte>
   13c0a:	f805 0b01 	strb.w	r0, [r5], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   13c0e:	428d      	cmp	r5, r1
   13c10:	d1f8      	bne.n	13c04 <sd_ioctl+0x1e0>
   13c12:	e78a      	b.n	13b2a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   13c14:	2100      	movs	r1, #0
   13c16:	20cd      	movs	r0, #205	; 0xcd
   13c18:	f7ff fd48 	bl	136ac <send_cmd>
   13c1c:	2800      	cmp	r0, #0
   13c1e:	f47f af49 	bne.w	13ab4 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   13c22:	20ff      	movs	r0, #255	; 0xff
   13c24:	f7ff fca2 	bl	1356c <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13c28:	2140      	movs	r1, #64	; 0x40
   13c2a:	e7d9      	b.n	13be0 <sd_ioctl+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   13c2c:	2404      	movs	r4, #4
   13c2e:	e736      	b.n	13a9e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   13c30:	2403      	movs	r4, #3
   13c32:	e704      	b.n	13a3e <sd_ioctl+0x1a>
   13c34:	2009c020 	.word	0x2009c020
   13c38:	2007c095 	.word	0x2007c095
   13c3c:	2007c466 	.word	0x2007c466

00013c40 <disk_initialize>:
disk_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   13c40:	b510      	push	{r4, lr}
   13c42:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13c44:	f001 fff2 	bl	15c2c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   13c48:	b11c      	cbz	r4, 13c52 <disk_initialize+0x12>
   13c4a:	2c01      	cmp	r4, #1
   13c4c:	d008      	beq.n	13c60 <disk_initialize+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   13c4e:	2404      	movs	r4, #4
   13c50:	e002      	b.n	13c58 <disk_initialize+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   13c52:	f000 f957 	bl	13f04 <flash_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   13c56:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   13c58:	f002 f800 	bl	15c5c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   13c5c:	4620      	mov	r0, r4
   13c5e:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   13c60:	f7ff fd7c 	bl	1375c <sd_initialize>
   13c64:	e7f7      	b.n	13c56 <disk_initialize+0x16>

00013c66 <disk_status>:
disk_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   13c66:	b128      	cbz	r0, 13c74 <disk_status+0xe>
   13c68:	2801      	cmp	r0, #1
   13c6a:	d001      	beq.n	13c70 <disk_status+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   13c6c:	2004      	movs	r0, #4
   13c6e:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   13c70:	f7ff be2a 	b.w	138c8 <sd_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   13c74:	4770      	bx	lr

00013c76 <disk_read>:
disk_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   13c76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13c78:	4607      	mov	r7, r0
   13c7a:	460c      	mov	r4, r1
   13c7c:	4615      	mov	r5, r2
   13c7e:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13c80:	f001 ffd4 	bl	15c2c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   13c84:	b11f      	cbz	r7, 13c8e <disk_read+0x18>
   13c86:	2f01      	cmp	r7, #1
   13c88:	d00b      	beq.n	13ca2 <disk_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   13c8a:	2404      	movs	r4, #4
   13c8c:	e005      	b.n	13c9a <disk_read+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   13c8e:	4632      	mov	r2, r6
   13c90:	4629      	mov	r1, r5
   13c92:	4620      	mov	r0, r4
   13c94:	f000 f982 	bl	13f9c <flash_read_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   13c98:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   13c9a:	f001 ffdf 	bl	15c5c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   13c9e:	4620      	mov	r0, r4
   13ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   13ca2:	4632      	mov	r2, r6
   13ca4:	4629      	mov	r1, r5
   13ca6:	4620      	mov	r0, r4
   13ca8:	f7ff fe16 	bl	138d8 <sd_read>
   13cac:	e7f4      	b.n	13c98 <disk_read+0x22>

00013cae <disk_write>:
disk_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   13cae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13cb0:	4607      	mov	r7, r0
   13cb2:	460c      	mov	r4, r1
   13cb4:	4615      	mov	r5, r2
   13cb6:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13cb8:	f001 ffb8 	bl	15c2c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   13cbc:	b11f      	cbz	r7, 13cc6 <disk_write+0x18>
   13cbe:	2f01      	cmp	r7, #1
   13cc0:	d00b      	beq.n	13cda <disk_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   13cc2:	2404      	movs	r4, #4
   13cc4:	e005      	b.n	13cd2 <disk_write+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   13cc6:	4632      	mov	r2, r6
   13cc8:	4629      	mov	r1, r5
   13cca:	4620      	mov	r0, r4
   13ccc:	f000 f98e 	bl	13fec <flash_write_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   13cd0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   13cd2:	f001 ffc3 	bl	15c5c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   13cd6:	4620      	mov	r0, r4
   13cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   13cda:	4632      	mov	r2, r6
   13cdc:	4629      	mov	r1, r5
   13cde:	4620      	mov	r0, r4
   13ce0:	f7ff fe46 	bl	13970 <sd_write>
   13ce4:	e7f4      	b.n	13cd0 <disk_write+0x22>

00013ce6 <disk_ioctl>:
disk_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   13ce6:	b570      	push	{r4, r5, r6, lr}
   13ce8:	4606      	mov	r6, r0
   13cea:	460c      	mov	r4, r1
   13cec:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13cee:	f001 ff9d 	bl	15c2c <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   13cf2:	b11e      	cbz	r6, 13cfc <disk_ioctl+0x16>
   13cf4:	2e01      	cmp	r6, #1
   13cf6:	d00a      	beq.n	13d0e <disk_ioctl+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   13cf8:	2404      	movs	r4, #4
   13cfa:	e004      	b.n	13d06 <disk_ioctl+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   13cfc:	4629      	mov	r1, r5
   13cfe:	4620      	mov	r0, r4
   13d00:	f000 f99a 	bl	14038 <flash_ioctl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   13d04:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   13d06:	f001 ffa9 	bl	15c5c <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   13d0a:	4620      	mov	r0, r4
   13d0c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   13d0e:	4629      	mov	r1, r5
   13d10:	4620      	mov	r0, r4
   13d12:	f7ff fe87 	bl	13a24 <sd_ioctl>
   13d16:	e7f5      	b.n	13d04 <disk_ioctl+0x1e>

00013d18 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   13d18:	4b05      	ldr	r3, [pc, #20]	; (13d30 <flash_get_mem_size_bytes()+0x18>)
   13d1a:	781b      	ldrb	r3, [r3, #0]
   13d1c:	3b25      	subs	r3, #37	; 0x25
   13d1e:	b2db      	uxtb	r3, r3
   13d20:	2b03      	cmp	r3, #3
   13d22:	bf9a      	itte	ls
   13d24:	4a03      	ldrls	r2, [pc, #12]	; (13d34 <flash_get_mem_size_bytes()+0x1c>)
   13d26:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   13d2a:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   13d2c:	4770      	bx	lr
   13d2e:	bf00      	nop
   13d30:	2007c46c 	.word	0x2007c46c
   13d34:	0001f8f0 	.word	0x0001f8f0

00013d38 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13d38:	4b1b      	ldr	r3, [pc, #108]	; (13da8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13d3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13d3e:	881d      	ldrh	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13d40:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13d42:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13d46:	460f      	mov	r7, r1
   13d48:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13d4a:	d103      	bne.n	13d54 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   13d4c:	462a      	mov	r2, r5
   13d4e:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   13d50:	4638      	mov	r0, r7
   13d52:	e00b      	b.n	13d6c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   13d54:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   13d58:	d10c      	bne.n	13d74 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   13d5a:	462a      	mov	r2, r5
   13d5c:	4621      	mov	r1, r4
   13d5e:	4638      	mov	r0, r7
   13d60:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   13d62:	462a      	mov	r2, r5
   13d64:	f504 7180 	add.w	r1, r4, #256	; 0x100
   13d68:	f507 7080 	add.w	r0, r7, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   13d6c:	4633      	mov	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   13d6e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13d72:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   13d74:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   13d78:	d104      	bne.n	13d84 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   13d7a:	0a51      	lsrs	r1, r2, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   13d7c:	0289      	lsls	r1, r1, #10
   13d7e:	f44f 7200 	mov.w	r2, #512	; 0x200
   13d82:	e7e5      	b.n	13d50 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   13d84:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   13d88:	d10b      	bne.n	13da2 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   13d8a:	0a14      	lsrs	r4, r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   13d8c:	0261      	lsls	r1, r4, #9
   13d8e:	f44f 7280 	mov.w	r2, #256	; 0x100
   13d92:	4638      	mov	r0, r7
   13d94:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13d96:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   13d9a:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13d9c:	0261      	lsls	r1, r4, #9
   13d9e:	18b8      	adds	r0, r7, r2
   13da0:	e7e4      	b.n	13d6c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   13da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13da6:	bf00      	nop
   13da8:	2007c46e 	.word	0x2007c46e

00013dac <ssp1_exchange_data>:
ssp1_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   13dac:	b510      	push	{r4, lr}
   13dae:	4b29      	ldr	r3, [pc, #164]	; (13e54 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   13db0:	2900      	cmp	r1, #0
   13db2:	dd4d      	ble.n	13e50 <ssp1_exchange_data+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   13db4:	2907      	cmp	r1, #7
   13db6:	7802      	ldrb	r2, [r0, #0]
   13db8:	dd29      	ble.n	13e0e <ssp1_exchange_data+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13dba:	609a      	str	r2, [r3, #8]
   13dbc:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   13dbe:	3908      	subs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13dc0:	609a      	str	r2, [r3, #8]
   13dc2:	7882      	ldrb	r2, [r0, #2]
   13dc4:	609a      	str	r2, [r3, #8]
   13dc6:	78c2      	ldrb	r2, [r0, #3]
   13dc8:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13dca:	7902      	ldrb	r2, [r0, #4]
   13dcc:	609a      	str	r2, [r3, #8]
   13dce:	7942      	ldrb	r2, [r0, #5]
   13dd0:	609a      	str	r2, [r3, #8]
   13dd2:	7982      	ldrb	r2, [r0, #6]
   13dd4:	609a      	str	r2, [r3, #8]
   13dd6:	79c4      	ldrb	r4, [r0, #7]
   13dd8:	f100 0208 	add.w	r2, r0, #8
   13ddc:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   13dde:	699c      	ldr	r4, [r3, #24]
   13de0:	0764      	lsls	r4, r4, #29
   13de2:	d5fc      	bpl.n	13dde <ssp1_exchange_data+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13de4:	689c      	ldr	r4, [r3, #8]
   13de6:	7004      	strb	r4, [r0, #0]
   13de8:	689c      	ldr	r4, [r3, #8]
   13dea:	7044      	strb	r4, [r0, #1]
   13dec:	689c      	ldr	r4, [r3, #8]
   13dee:	7084      	strb	r4, [r0, #2]
   13df0:	689c      	ldr	r4, [r3, #8]
   13df2:	70c4      	strb	r4, [r0, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   13df4:	68dc      	ldr	r4, [r3, #12]
   13df6:	06e4      	lsls	r4, r4, #27
   13df8:	d4fc      	bmi.n	13df4 <ssp1_exchange_data+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13dfa:	689c      	ldr	r4, [r3, #8]
   13dfc:	7104      	strb	r4, [r0, #4]
   13dfe:	689c      	ldr	r4, [r3, #8]
   13e00:	7144      	strb	r4, [r0, #5]
   13e02:	689c      	ldr	r4, [r3, #8]
   13e04:	7184      	strb	r4, [r0, #6]
   13e06:	689c      	ldr	r4, [r3, #8]
   13e08:	71c4      	strb	r4, [r0, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e0a:	4610      	mov	r0, r2
   13e0c:	e7d0      	b.n	13db0 <ssp1_exchange_data+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   13e0e:	2903      	cmp	r1, #3
   13e10:	dd14      	ble.n	13e3c <ssp1_exchange_data+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e12:	609a      	str	r2, [r3, #8]
   13e14:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   13e16:	3904      	subs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e18:	609a      	str	r2, [r3, #8]
   13e1a:	7882      	ldrb	r2, [r0, #2]
   13e1c:	609a      	str	r2, [r3, #8]
   13e1e:	78c4      	ldrb	r4, [r0, #3]
   13e20:	1d02      	adds	r2, r0, #4
   13e22:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   13e24:	68dc      	ldr	r4, [r3, #12]
   13e26:	06e4      	lsls	r4, r4, #27
   13e28:	d4fc      	bmi.n	13e24 <ssp1_exchange_data+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13e2a:	689c      	ldr	r4, [r3, #8]
   13e2c:	7004      	strb	r4, [r0, #0]
   13e2e:	689c      	ldr	r4, [r3, #8]
   13e30:	7044      	strb	r4, [r0, #1]
   13e32:	689c      	ldr	r4, [r3, #8]
   13e34:	7084      	strb	r4, [r0, #2]
   13e36:	689c      	ldr	r4, [r3, #8]
   13e38:	70c4      	strb	r4, [r0, #3]
   13e3a:	e7e6      	b.n	13e0a <ssp1_exchange_data+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   13e3c:	1c44      	adds	r4, r0, #1
   13e3e:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   13e40:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   13e42:	68da      	ldr	r2, [r3, #12]
   13e44:	06d2      	lsls	r2, r2, #27
   13e46:	d4fc      	bmi.n	13e42 <ssp1_exchange_data+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   13e48:	689a      	ldr	r2, [r3, #8]
   13e4a:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   13e4c:	4620      	mov	r0, r4
   13e4e:	e7af      	b.n	13db0 <ssp1_exchange_data+0x4>
   13e50:	bd10      	pop	{r4, pc}
   13e52:	bf00      	nop
   13e54:	40030000 	.word	0x40030000

00013e58 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   13e58:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13e5a:	0c0b      	lsrs	r3, r1, #16
   13e5c:	f88d 3005 	strb.w	r3, [sp, #5]
   13e60:	f88d 1007 	strb.w	r1, [sp, #7]
   13e64:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13e66:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13e68:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13e6c:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13e70:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13e74:	f7ff ff9a 	bl	13dac <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   13e78:	b003      	add	sp, #12
   13e7a:	f85d fb04 	ldr.w	pc, [sp], #4
   13e7e:	Address 0x0000000000013e7e is out of bounds.


00013e80 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13e80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13e82:	2303      	movs	r3, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13e84:	2540      	movs	r5, #64	; 0x40
   13e86:	4c0e      	ldr	r4, [pc, #56]	; (13ec0 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13e88:	4617      	mov	r7, r2
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13e8a:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13e8c:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   13e90:	0c0b      	lsrs	r3, r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13e92:	f88d 3005 	strb.w	r3, [sp, #5]
   13e96:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   13e9a:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13e9c:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13e9e:	4606      	mov	r6, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13ea0:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13ea4:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13ea8:	f7ff ff80 	bl	13dac <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   13eac:	2200      	movs	r2, #0
   13eae:	4639      	mov	r1, r7
   13eb0:	4630      	mov	r0, r6
   13eb2:	f001 fe5b 	bl	15b6c <ssp1_dma_transfer_block>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13eb6:	61a5      	str	r5, [r4, #24]
   13eb8:	61a5      	str	r5, [r4, #24]
   13eba:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   13ebc:	b003      	add	sp, #12
   13ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13ec0:	2009c000 	.word	0x2009c000

00013ec4 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13ec4:	2240      	movs	r2, #64	; 0x40
   13ec6:	4b0d      	ldr	r3, [pc, #52]	; (13efc <flash_wait_for_ready()+0x38>)
   13ec8:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13eca:	22d7      	movs	r2, #215	; 0xd7
   13ecc:	4b0c      	ldr	r3, [pc, #48]	; (13f00 <flash_wait_for_ready()+0x3c>)
   13ece:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13ed0:	68da      	ldr	r2, [r3, #12]
   13ed2:	06d2      	lsls	r2, r2, #27
   13ed4:	d4fc      	bmi.n	13ed0 <flash_wait_for_ready()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13ed6:	4a0a      	ldr	r2, [pc, #40]	; (13f00 <flash_wait_for_ready()+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13ed8:	689b      	ldr	r3, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13eda:	21ff      	movs	r1, #255	; 0xff
   13edc:	4613      	mov	r3, r2
   13ede:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13ee0:	68d8      	ldr	r0, [r3, #12]
   13ee2:	06c0      	lsls	r0, r0, #27
   13ee4:	d4fc      	bmi.n	13ee0 <flash_wait_for_ready()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13ee6:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   13ee8:	f010 0f80 	tst.w	r0, #128	; 0x80
   13eec:	d0f7      	beq.n	13ede <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13eee:	2240      	movs	r2, #64	; 0x40
   13ef0:	4b02      	ldr	r3, [pc, #8]	; (13efc <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   13ef2:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   13ef4:	619a      	str	r2, [r3, #24]
   13ef6:	619a      	str	r2, [r3, #24]
   13ef8:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   13efa:	4770      	bx	lr
   13efc:	2009c000 	.word	0x2009c000
   13f00:	40030000 	.word	0x40030000

00013f04 <flash_initialize>:
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   13f04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   13f06:	f7ff ffdd 	bl	13ec4 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   13f0a:	2300      	movs	r3, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13f0c:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   13f0e:	4c1e      	ldr	r4, [pc, #120]	; (13f88 <flash_initialize+0x84>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13f10:	4e1e      	ldr	r6, [pc, #120]	; (13f8c <flash_initialize+0x88>)
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   13f12:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   13f14:	4b1e      	ldr	r3, [pc, #120]	; (13f90 <flash_initialize+0x8c>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13f16:	61f7      	str	r7, [r6, #28]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   13f18:	881a      	ldrh	r2, [r3, #0]
   13f1a:	789b      	ldrb	r3, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   13f1c:	4605      	mov	r5, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f1e:	2103      	movs	r1, #3
   13f20:	a801      	add	r0, sp, #4
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   13f22:	f8ad 2004 	strh.w	r2, [sp, #4]
   13f26:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f2a:	f7ff ff3f 	bl	13dac <ssp1_exchange_data>
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   13f2e:	f89d 2005 	ldrb.w	r2, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   13f32:	f89d 3006 	ldrb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   13f36:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13f38:	61b7      	str	r7, [r6, #24]
   13f3a:	61b7      	str	r7, [r6, #24]
   13f3c:	61b7      	str	r7, [r6, #24]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   13f3e:	d115      	bne.n	13f6c <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   13f40:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   13f44:	2a03      	cmp	r2, #3
   13f46:	d811      	bhi.n	13f6c <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   13f48:	4a12      	ldr	r2, [pc, #72]	; (13f94 <flash_initialize+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   13f4a:	2b25      	cmp	r3, #37	; 0x25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   13f4c:	7013      	strb	r3, [r2, #0]
   13f4e:	f005 0001 	and.w	r0, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   13f52:	d111      	bne.n	13f78 <flash_initialize+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   13f54:	2800      	cmp	r0, #0
   13f56:	bf14      	ite	ne
   13f58:	f44f 7380 	movne.w	r3, #256	; 0x100
   13f5c:	f44f 7384 	moveq.w	r3, #264	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13f60:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   13f62:	f7ff fed9 	bl	13d18 <flash_get_mem_size_bytes()>
   13f66:	4b0c      	ldr	r3, [pc, #48]	; (13f98 <flash_initialize+0x94>)
   13f68:	0a40      	lsrs	r0, r0, #9
   13f6a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   13f6c:	8820      	ldrh	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   13f6e:	fab0 f080 	clz	r0, r0
   13f72:	0940      	lsrs	r0, r0, #5
   13f74:	b003      	add	sp, #12
   13f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13f78:	2800      	cmp	r0, #0
   13f7a:	bf14      	ite	ne
   13f7c:	f44f 7300 	movne.w	r3, #512	; 0x200
   13f80:	f44f 7304 	moveq.w	r3, #528	; 0x210
   13f84:	e7ec      	b.n	13f60 <flash_initialize+0x5c>
   13f86:	bf00      	nop
   13f88:	2007c46e 	.word	0x2007c46e
   13f8c:	2009c000 	.word	0x2009c000
   13f90:	0001f8e6 	.word	0x0001f8e6
   13f94:	2007c46c 	.word	0x2007c46c
   13f98:	2007c468 	.word	0x2007c468

00013f9c <flash_read_sectors>:
flash_read_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   13f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13fa0:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   13fa2:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13fa4:	4a0f      	ldr	r2, [pc, #60]	; (13fe4 <flash_read_sectors+0x48>)
   13fa6:	3b01      	subs	r3, #1
   13fa8:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   13faa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13fac:	4293      	cmp	r3, r2
   13fae:	d812      	bhi.n	13fd6 <flash_read_sectors+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   13fb0:	024d      	lsls	r5, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   13fb2:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   13fb4:	f7ff ff86 	bl	13ec4 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   13fb8:	f8df 802c 	ldr.w	r8, [pc, #44]	; 13fe8 <flash_read_sectors+0x4c>
   13fbc:	1b2d      	subs	r5, r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   13fbe:	42be      	cmp	r6, r7
   13fc0:	eb04 0205 	add.w	r2, r4, r5
   13fc4:	da0a      	bge.n	13fdc <flash_read_sectors+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   13fc6:	4621      	mov	r1, r4
   13fc8:	4640      	mov	r0, r8
   13fca:	f7ff feb5 	bl	13d38 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   13fce:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   13fd2:	3601      	adds	r6, #1
   13fd4:	e7f3      	b.n	13fbe <flash_read_sectors+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   13fd6:	2001      	movs	r0, #1
   13fd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   13fdc:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   13fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13fe2:	bf00      	nop
   13fe4:	2007c468 	.word	0x2007c468
   13fe8:	00013e81 	.word	0x00013e81

00013fec <flash_write_sectors>:
flash_write_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13fec:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   13fee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13ff2:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13ff4:	4a0e      	ldr	r2, [pc, #56]	; (14030 <flash_write_sectors+0x44>)
   13ff6:	3b01      	subs	r3, #1
   13ff8:	6812      	ldr	r2, [r2, #0]
   13ffa:	4293      	cmp	r3, r2
   13ffc:	d811      	bhi.n	14022 <flash_write_sectors+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   13ffe:	4604      	mov	r4, r0
   14000:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14002:	f8df 8030 	ldr.w	r8, [pc, #48]	; 14034 <flash_write_sectors+0x48>
   14006:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1400a:	42be      	cmp	r6, r7
   1400c:	eb04 0205 	add.w	r2, r4, r5
   14010:	da0a      	bge.n	14028 <flash_write_sectors+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14012:	4621      	mov	r1, r4
   14014:	4640      	mov	r0, r8
   14016:	f7ff fe8f 	bl	13d38 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1401a:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   1401e:	3601      	adds	r6, #1
   14020:	e7f3      	b.n	1400a <flash_write_sectors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   14022:	2001      	movs	r0, #1
   14024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   14028:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   1402a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1402e:	bf00      	nop
   14030:	2007c468 	.word	0x2007c468
   14034:	00014119 	.word	0x00014119

00014038 <flash_ioctl>:
flash_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   14038:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   1403a:	2807      	cmp	r0, #7
   1403c:	d805      	bhi.n	1404a <flash_ioctl+0x12>
   1403e:	e8df f000 	tbb	[pc, r0]
   14042:	0a06      	.short	0x0a06
   14044:	0808130f 	.word	0x0808130f
   14048:	0808      	.short	0x0808
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   1404a:	2004      	movs	r0, #4
   1404c:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   1404e:	f7ff ff39 	bl	13ec4 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   14052:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   14054:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   14056:	f7ff fe5f 	bl	13d18 <flash_get_mem_size_bytes()>
   1405a:	0a40      	lsrs	r0, r0, #9
   1405c:	6008      	str	r0, [r1, #0]
   1405e:	e7f8      	b.n	14052 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   14060:	f44f 7300 	mov.w	r3, #512	; 0x200
   14064:	800b      	strh	r3, [r1, #0]
   14066:	e7f4      	b.n	14052 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   14068:	2301      	movs	r3, #1
   1406a:	600b      	str	r3, [r1, #0]
   1406c:	e7f1      	b.n	14052 <flash_ioctl+0x1a>
   1406e:	Address 0x000000000001406e is out of bounds.


00014070 <flash_write_permanent_id>:
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   14070:	b570      	push	{r4, r5, r6, lr}
   14072:	b090      	sub	sp, #64	; 0x40
   14074:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   14076:	466a      	mov	r2, sp
   14078:	466e      	mov	r6, sp
   1407a:	f100 0540 	add.w	r5, r0, #64	; 0x40
   1407e:	4614      	mov	r4, r2
   14080:	6818      	ldr	r0, [r3, #0]
   14082:	6859      	ldr	r1, [r3, #4]
   14084:	3308      	adds	r3, #8
   14086:	c403      	stmia	r4!, {r0, r1}
   14088:	42ab      	cmp	r3, r5
   1408a:	4622      	mov	r2, r4
   1408c:	d1f7      	bne.n	1407e <flash_write_permanent_id+0xe>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   1408e:	2440      	movs	r4, #64	; 0x40
   14090:	4d07      	ldr	r5, [pc, #28]	; (140b0 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   14092:	2100      	movs	r1, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14094:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   14096:	209b      	movs	r0, #155	; 0x9b
   14098:	f7ff fede 	bl	13e58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1409c:	4621      	mov	r1, r4
   1409e:	4630      	mov	r0, r6
   140a0:	f7ff fe84 	bl	13dac <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   140a4:	61ac      	str	r4, [r5, #24]
   140a6:	61ac      	str	r4, [r5, #24]
   140a8:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   140aa:	b010      	add	sp, #64	; 0x40
   140ac:	bd70      	pop	{r4, r5, r6, pc}
   140ae:	bf00      	nop
   140b0:	2009c000 	.word	0x2009c000

000140b4 <flash_read_permanent_id>:
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   140b4:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   140b6:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   140b8:	4606      	mov	r6, r0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   140ba:	4d07      	ldr	r5, [pc, #28]	; (140d8 <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   140bc:	2100      	movs	r1, #0
   140be:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   140c0:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   140c2:	f7ff fec9 	bl	13e58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   140c6:	4621      	mov	r1, r4
   140c8:	4630      	mov	r0, r6
   140ca:	f7ff fe6f 	bl	13dac <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   140ce:	61ac      	str	r4, [r5, #24]
   140d0:	61ac      	str	r4, [r5, #24]
   140d2:	61ac      	str	r4, [r5, #24]
   140d4:	bd70      	pop	{r4, r5, r6, pc}
   140d6:	bf00      	nop
   140d8:	2009c000 	.word	0x2009c000

000140dc <flash_get_page_count>:
flash_get_page_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   140dc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   140de:	4b06      	ldr	r3, [pc, #24]	; (140f8 <flash_get_page_count+0x1c>)
   140e0:	8819      	ldrh	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   140e2:	f031 011f 	bics.w	r1, r1, #31
   140e6:	d004      	beq.n	140f2 <flash_get_page_count+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   140e8:	f7ff fe16 	bl	13d18 <flash_get_mem_size_bytes()>
   140ec:	fbb0 f0f1 	udiv	r0, r0, r1
   140f0:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   140f2:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   140f4:	bd08      	pop	{r3, pc}
   140f6:	bf00      	nop
   140f8:	2007c46e 	.word	0x2007c46e

000140fc <flash_get_page_size>:
flash_get_page_size():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   140fc:	4b01      	ldr	r3, [pc, #4]	; (14104 <flash_get_page_size+0x8>)
   140fe:	8818      	ldrh	r0, [r3, #0]
   14100:	4770      	bx	lr
   14102:	bf00      	nop
   14104:	2007c46e 	.word	0x2007c46e

00014108 <flash_supports_metadata>:
flash_supports_metadata():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   14108:	4b02      	ldr	r3, [pc, #8]	; (14114 <flash_supports_metadata+0xc>)
   1410a:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   1410c:	3000      	adds	r0, #0
   1410e:	bf18      	it	ne
   14110:	2001      	movne	r0, #1
   14112:	4770      	bx	lr
   14114:	2007c46e 	.word	0x2007c46e

00014118 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14118:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   1411c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14120:	460f      	mov	r7, r1
   14122:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14124:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   14126:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   14128:	f7ff fecc 	bl	13ec4 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   1412c:	f7ff ffec 	bl	14108 <flash_supports_metadata>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   14130:	4606      	mov	r6, r0
   14132:	b1b8      	cbz	r0, 14164 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14134:	2540      	movs	r5, #64	; 0x40
   14136:	4c19      	ldr	r4, [pc, #100]	; (1419c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14138:	4b19      	ldr	r3, [pc, #100]	; (141a0 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1413a:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   1413c:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   1413e:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14140:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14144:	bf0c      	ite	eq
   14146:	f44f 7180 	moveq.w	r1, #256	; 0x100
   1414a:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   1414e:	4339      	orrs	r1, r7
   14150:	f7ff fe82 	bl	13e58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14154:	2104      	movs	r1, #4
   14156:	eb0d 0001 	add.w	r0, sp, r1
   1415a:	f7ff fe27 	bl	13dac <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1415e:	61a5      	str	r5, [r4, #24]
   14160:	61a5      	str	r5, [r4, #24]
   14162:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14164:	2340      	movs	r3, #64	; 0x40
   14166:	4c0d      	ldr	r4, [pc, #52]	; (1419c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   14168:	4639      	mov	r1, r7
   1416a:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1416c:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   1416e:	f7ff fe73 	bl	13e58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   14172:	2201      	movs	r2, #1
   14174:	4649      	mov	r1, r9
   14176:	4640      	mov	r0, r8
   14178:	f001 fcf8 	bl	15b6c <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   1417c:	b13e      	cbz	r6, 1418e <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   1417e:	9b01      	ldr	r3, [sp, #4]
   14180:	a802      	add	r0, sp, #8
   14182:	3301      	adds	r3, #1
   14184:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14188:	2104      	movs	r1, #4
   1418a:	f7ff fe0f 	bl	13dac <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1418e:	2340      	movs	r3, #64	; 0x40
   14190:	61a3      	str	r3, [r4, #24]
   14192:	61a3      	str	r3, [r4, #24]
   14194:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   14196:	b003      	add	sp, #12
   14198:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1419c:	2009c000 	.word	0x2009c000
   141a0:	2007c46e 	.word	0x2007c46e

000141a4 <flash_chip_erase>:
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
}

void flash_chip_erase(void)
{
   141a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   141a6:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   141a8:	2104      	movs	r1, #4
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   141aa:	4b07      	ldr	r3, [pc, #28]	; (141c8 <flash_chip_erase+0x24>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   141ac:	4c07      	ldr	r4, [pc, #28]	; (141cc <flash_chip_erase+0x28>)
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   141ae:	6818      	ldr	r0, [r3, #0]
   141b0:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   141b2:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   141b4:	eb0d 0001 	add.w	r0, sp, r1
   141b8:	f7ff fdf8 	bl	13dac <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   141bc:	61a5      	str	r5, [r4, #24]
   141be:	61a5      	str	r5, [r4, #24]
   141c0:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   141c2:	b003      	add	sp, #12
   141c4:	bd30      	pop	{r4, r5, pc}
   141c6:	bf00      	nop
   141c8:	0001f8e9 	.word	0x0001f8e9
   141cc:	2009c000 	.word	0x2009c000

000141d0 <get_fattime>:
get_fattime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   141d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   141d2:	a801      	add	r0, sp, #4
   141d4:	f001 fa2c 	bl	15630 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   141d8:	f89d 3009 	ldrb.w	r3, [sp, #9]
   141dc:	f003 000f 	and.w	r0, r3, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   141e0:	f89d 3008 	ldrb.w	r3, [sp, #8]
   141e4:	f003 031f 	and.w	r3, r3, #31
   141e8:	041b      	lsls	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   141ea:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   141ee:	f89d 0006 	ldrb.w	r0, [sp, #6]
   141f2:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   141f6:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   141fa:	f89d 0005 	ldrb.w	r0, [sp, #5]
   141fe:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   14202:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   14206:	f89d 0004 	ldrb.w	r0, [sp, #4]
   1420a:	f3c0 0044 	ubfx	r0, r0, #1, #5
   1420e:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   14210:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   14214:	0640      	lsls	r0, r0, #25
   14216:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   1421a:	4318      	orrs	r0, r3
   1421c:	b005      	add	sp, #20
   1421e:	f85d fb04 	ldr.w	pc, [sp], #4

00014222 <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

    return status;
}

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   14222:	b5f0      	push	{r4, r5, r6, r7, lr}
   14224:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   14226:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   14228:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   1422c:	460e      	mov	r6, r1
   1422e:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14230:	4601      	mov	r1, r0
   14232:	2201      	movs	r2, #1
   14234:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   14236:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14238:	f7fe fb16 	bl	12868 <f_open>
   1423c:	4604      	mov	r4, r0
   1423e:	b970      	cbnz	r0, 1425e <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   14240:	b11d      	cbz	r5, 1424a <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   14242:	4629      	mov	r1, r5
   14244:	a801      	add	r0, sp, #4
   14246:	f7fe fd8b 	bl	12d60 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   1424a:	466b      	mov	r3, sp
   1424c:	463a      	mov	r2, r7
   1424e:	4631      	mov	r1, r6
   14250:	a801      	add	r0, sp, #4
   14252:	f7fe fba0 	bl	12996 <f_read>
   14256:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   14258:	a801      	add	r0, sp, #4
   1425a:	f7fe fd6f 	bl	12d3c <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   1425e:	4620      	mov	r0, r4
   14260:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14264:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014266 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   14266:	4613      	mov	r3, r2
   14268:	460a      	mov	r2, r1
   1426a:	7901      	ldrb	r1, [r0, #4]
   1426c:	6800      	ldr	r0, [r0, #0]
   1426e:	f000 bf66 	b.w	1513e <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

00014272 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   14272:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   14274:	2200      	movs	r2, #0
   14276:	ab04      	add	r3, sp, #16
   14278:	f823 2d04 	strh.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   1427c:	2202      	movs	r2, #2
   1427e:	7904      	ldrb	r4, [r0, #4]
   14280:	9200      	str	r2, [sp, #0]
   14282:	6800      	ldr	r0, [r0, #0]
   14284:	460a      	mov	r2, r1
   14286:	4621      	mov	r1, r4
   14288:	f000 ff42 	bl	15110 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   1428c:	f89d 000c 	ldrb.w	r0, [sp, #12]
   14290:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   14294:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14298:	b004      	add	sp, #16
   1429a:	bd10      	pop	{r4, pc}

0001429c <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   1429c:	b510      	push	{r4, lr}
   1429e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   142a0:	2219      	movs	r2, #25
   142a2:	212a      	movs	r1, #42	; 0x2a
   142a4:	f7ff ffdf 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   142a8:	220d      	movs	r2, #13
   142aa:	7921      	ldrb	r1, [r4, #4]
   142ac:	6820      	ldr	r0, [r4, #0]
   142ae:	f000 ff1b 	bl	150e8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   142b2:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   142b6:	4258      	negs	r0, r3
   142b8:	4158      	adcs	r0, r3
   142ba:	bd10      	pop	{r4, pc}

000142bc <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   142bc:	4a04      	ldr	r2, [pc, #16]	; (142d0 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   142be:	8813      	ldrh	r3, [r2, #0]
   142c0:	2b1f      	cmp	r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   142c2:	bfdf      	itttt	le
   142c4:	1c58      	addle	r0, r3, #1
   142c6:	8010      	strhle	r0, [r2, #0]
   142c8:	4a02      	ldrle	r2, [pc, #8]	; (142d4 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   142ca:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   142ce:	4770      	bx	lr
   142d0:	2007c4f0 	.word	0x2007c4f0
   142d4:	2007c470 	.word	0x2007c470

000142d8 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   142d8:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   142da:	4e15      	ldr	r6, [pc, #84]	; (14330 <IR_Sensor::decodeIrCode()+0x58>)
   142dc:	8833      	ldrh	r3, [r6, #0]
   142de:	2b01      	cmp	r3, #1
   142e0:	dd23      	ble.n	1432a <IR_Sensor::decodeIrCode()+0x52>
   142e2:	4a14      	ldr	r2, [pc, #80]	; (14334 <IR_Sensor::decodeIrCode()+0x5c>)
   142e4:	2000      	movs	r0, #0
   142e6:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   142e8:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   142ea:	4298      	cmp	r0, r3
   142ec:	da08      	bge.n	14300 <IR_Sensor::decodeIrCode()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   142ee:	f852 1f04 	ldr.w	r1, [r2, #4]!
   142f2:	3001      	adds	r0, #1
   142f4:	f852 4c04 	ldr.w	r4, [r2, #-4]
   142f8:	1b09      	subs	r1, r1, r4
   142fa:	f842 1c04 	str.w	r1, [r2, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   142fe:	e7f4      	b.n	142ea <IR_Sensor::decodeIrCode()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14300:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   14302:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   14306:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14308:	6868      	ldr	r0, [r5, #4]
   1430a:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   1430e:	b28a      	uxth	r2, r1
   14310:	4293      	cmp	r3, r2
   14312:	dd08      	ble.n	14326 <IR_Sensor::decodeIrCode()+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   14314:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   14318:	3101      	adds	r1, #1
   1431a:	42b8      	cmp	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   1431c:	bf3c      	itt	cc
   1431e:	fa0e f202 	lslcc.w	r2, lr, r2
   14322:	4314      	orrcc	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14324:	e7f3      	b.n	1430e <IR_Sensor::decodeIrCode()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   14326:	4b04      	ldr	r3, [pc, #16]	; (14338 <IR_Sensor::decodeIrCode()+0x60>)
   14328:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   1432a:	2300      	movs	r3, #0
   1432c:	8033      	strh	r3, [r6, #0]
   1432e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14330:	2007c4f0 	.word	0x2007c4f0
   14334:	2007c470 	.word	0x2007c470
   14338:	2007c4f4 	.word	0x2007c4f4

0001433c <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   1433c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   1433e:	2101      	movs	r1, #1
   14340:	2002      	movs	r0, #2
   14342:	f7fc fad9 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14346:	4b08      	ldr	r3, [pc, #32]	; (14368 <IR_Sensor::init()+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   14348:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   1434a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1434c:	f022 0207 	bic.w	r2, r2, #7
   14350:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   14352:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14354:	f042 0206 	orr.w	r2, r2, #6
   14358:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   1435a:	4a04      	ldr	r2, [pc, #16]	; (1436c <IR_Sensor::init()+0x30>)
   1435c:	68d3      	ldr	r3, [r2, #12]
   1435e:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   14362:	60d3      	str	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   14364:	bd08      	pop	{r3, pc}
   14366:	bf00      	nop
   14368:	40008000 	.word	0x40008000
   1436c:	4002c000 	.word	0x4002c000

00014370 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   14370:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14372:	4b04      	ldr	r3, [pc, #16]	; (14384 <LED_Display::setLeftDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   14374:	7141      	strb	r1, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14376:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1437a:	5c5a      	ldrb	r2, [r3, r1]
   1437c:	2103      	movs	r1, #3
   1437e:	f7ff ff72 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14382:	bd08      	pop	{r3, pc}
   14384:	0001f900 	.word	0x0001f900

00014388 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14388:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1438a:	4b04      	ldr	r3, [pc, #16]	; (1439c <LED_Display::setRightDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   1438c:	7181      	strb	r1, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1438e:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14392:	5c5a      	ldrb	r2, [r3, r1]
   14394:	2102      	movs	r1, #2
   14396:	f7ff ff66 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1439a:	bd08      	pop	{r3, pc}
   1439c:	0001f900 	.word	0x0001f900

000143a0 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   143a0:	b538      	push	{r3, r4, r5, lr}
   143a2:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   143a4:	7901      	ldrb	r1, [r0, #4]
   143a6:	6800      	ldr	r0, [r0, #0]
   143a8:	f000 fee1 	bl	1516e <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   143ac:	4605      	mov	r5, r0
   143ae:	b188      	cbz	r0, 143d4 <LED_Display::init()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   143b0:	2200      	movs	r2, #0
   143b2:	2106      	movs	r1, #6
   143b4:	4620      	mov	r0, r4
   143b6:	f7ff ff56 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   143ba:	2200      	movs	r2, #0
   143bc:	2107      	movs	r1, #7
   143be:	4620      	mov	r0, r4
   143c0:	f7ff ff51 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   143c4:	212e      	movs	r1, #46	; 0x2e
   143c6:	4620      	mov	r0, r4
   143c8:	f7ff ffd2 	bl	14370 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   143cc:	212e      	movs	r1, #46	; 0x2e
   143ce:	4620      	mov	r0, r4
   143d0:	f7ff ffda 	bl	14388 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   143d4:	4628      	mov	r0, r5
   143d6:	bd38      	pop	{r3, r4, r5, pc}

000143d8 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   143d8:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   143da:	2464      	movs	r4, #100	; 0x64
   143dc:	fbb1 f3f4 	udiv	r3, r1, r4
   143e0:	fb03 1414 	mls	r4, r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   143e4:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   143e6:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   143e8:	fbb4 f5f1 	udiv	r5, r4, r1
   143ec:	fb01 4115 	mls	r1, r1, r5, r4
   143f0:	3130      	adds	r1, #48	; 0x30
   143f2:	b2c9      	uxtb	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   143f4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   143f6:	f7ff ffc7 	bl	14388 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   143fa:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   143fc:	bf88      	it	hi
   143fe:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   14402:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   14404:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   14408:	bf94      	ite	ls
   1440a:	2120      	movls	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   1440c:	b2c9      	uxtbhi	r1, r1
   1440e:	f7ff bfaf 	b.w	14370 <LED_Display::setLeftDigit(char)>

00014412 <LED::init()>:
_ZN3LED4initEv():
   14412:	2001      	movs	r0, #1
   14414:	4770      	bx	lr
   14416:	Address 0x0000000000014416 is out of bounds.


00014418 <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   14418:	b538      	push	{r3, r4, r5, lr}
   1441a:	460c      	mov	r4, r1
   1441c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   1441e:	f001 fd79 	bl	15f14 <vPortEnterCritical>
   14422:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   14424:	f004 030f 	and.w	r3, r4, #15
   14428:	702b      	strb	r3, [r5, #0]
   1442a:	4b0e      	ldr	r3, [pc, #56]	; (14464 <LED::setAll(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   1442c:	f014 0f01 	tst.w	r4, #1
   14430:	bf14      	ite	ne
   14432:	61da      	strne	r2, [r3, #28]
   14434:	619a      	streq	r2, [r3, #24]
   14436:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   14438:	f014 0f02 	tst.w	r4, #2
   1443c:	bf14      	ite	ne
   1443e:	61da      	strne	r2, [r3, #28]
   14440:	619a      	streq	r2, [r3, #24]
   14442:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   14444:	f014 0f04 	tst.w	r4, #4
   14448:	bf14      	ite	ne
   1444a:	61da      	strne	r2, [r3, #28]
   1444c:	619a      	streq	r2, [r3, #24]
   1444e:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   14452:	f014 0f08 	tst.w	r4, #8
   14456:	bf14      	ite	ne
   14458:	61da      	strne	r2, [r3, #28]
   1445a:	619a      	streq	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   1445c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   14460:	f001 bd68 	b.w	15f34 <vPortExitCritical>
   14464:	2009c020 	.word	0x2009c020

00014468 <LED::on(unsigned char)>:
_ZN3LED2onEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:272
{
   14468:	b538      	push	{r3, r4, r5, lr}
   1446a:	4604      	mov	r4, r0
   1446c:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:273
    portENTER_CRITICAL();
   1446e:	f001 fd51 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:274
    mLedValue or_eq (1 << (ledNum-1));
   14472:	2101      	movs	r1, #1
   14474:	7823      	ldrb	r3, [r4, #0]
   14476:	3d01      	subs	r5, #1
   14478:	40a9      	lsls	r1, r5
   1447a:	4319      	orrs	r1, r3
   1447c:	b2c9      	uxtb	r1, r1
   1447e:	7021      	strb	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:275
    setAll(mLedValue);
   14480:	4620      	mov	r0, r4
   14482:	f7ff ffc9 	bl	14418 <LED::setAll(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:277
}
   14486:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:276
    portEXIT_CRITICAL();
   1448a:	f001 bd53 	b.w	15f34 <vPortExitCritical>

0001448e <LED::off(unsigned char)>:
_ZN3LED3offEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:279
{
   1448e:	b538      	push	{r3, r4, r5, lr}
   14490:	460d      	mov	r5, r1
   14492:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:280
    portENTER_CRITICAL();
   14494:	f001 fd3e 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:281
    mLedValue and_eq ~(1 << (ledNum-1));
   14498:	2101      	movs	r1, #1
   1449a:	1e6b      	subs	r3, r5, #1
   1449c:	fa01 f303 	lsl.w	r3, r1, r3
   144a0:	7821      	ldrb	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:282
    setAll(mLedValue);
   144a2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:281
    mLedValue and_eq ~(1 << (ledNum-1));
   144a4:	ea21 0103 	bic.w	r1, r1, r3
   144a8:	7021      	strb	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:282
    setAll(mLedValue);
   144aa:	f7ff ffb5 	bl	14418 <LED::setAll(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:284
}
   144ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:283
    portEXIT_CRITICAL();
   144b2:	f001 bd3f 	b.w	15f34 <vPortExitCritical>

000144b6 <LED::set(unsigned char, bool)>:
_ZN3LED3setEhb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:294
    ON ? on(ledNum) : off(ledNum);
   144b6:	b10a      	cbz	r2, 144bc <LED::set(unsigned char, bool)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:294 (discriminator 1)
   144b8:	f7ff bfd6 	b.w	14468 <LED::on(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:294 (discriminator 2)
   144bc:	f7ff bfe7 	b.w	1448e <LED::off(unsigned char)>

000144c0 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   144c0:	2001      	movs	r0, #1
   144c2:	4770      	bx	lr

000144c4 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   144c4:	2002      	movs	r0, #2
   144c6:	f001 ba6d 	b.w	159a4 <adc0_get_reading>

000144ca <Switches::init()>:
_ZN8Switches4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   144ca:	2001      	movs	r0, #1
   144cc:	4770      	bx	lr
   144ce:	Address 0x00000000000144ce is out of bounds.


000144d0 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   144d0:	4b04      	ldr	r3, [pc, #16]	; (144e4 <Switches::getSwitchValues()+0x14>)
   144d2:	695b      	ldr	r3, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   144d4:	0b18      	lsrs	r0, r3, #12
   144d6:	f000 000c 	and.w	r0, r0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   144da:	f3c3 2341 	ubfx	r3, r3, #9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   144de:	4318      	orrs	r0, r3
   144e0:	4770      	bx	lr
   144e2:	bf00      	nop
   144e4:	2009c020 	.word	0x2009c020

000144e8 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   144e8:	b510      	push	{r4, lr}
   144ea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   144ec:	2281      	movs	r2, #129	; 0x81
   144ee:	2101      	movs	r1, #1
   144f0:	f7ff feb9 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   144f4:	2201      	movs	r2, #1
   144f6:	7921      	ldrb	r1, [r4, #4]
   144f8:	6820      	ldr	r0, [r4, #0]
   144fa:	f000 fdf5 	bl	150e8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   144fe:	f010 0f60 	tst.w	r0, #96	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   14502:	bf14      	ite	ne
   14504:	2001      	movne	r0, #1
   14506:	2000      	moveq	r0, #0
   14508:	bd10      	pop	{r4, pc}

0001450a <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   1450a:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   1450c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   1450e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14510:	f7ff feaf 	bl	14272 <i2c2_device::get16BitRegister(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14514:	2281      	movs	r2, #129	; 0x81
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14516:	b205      	sxth	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14518:	2101      	movs	r1, #1
   1451a:	4620      	mov	r0, r4
   1451c:	f7ff fea3 	bl	14266 <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   14520:	2010      	movs	r0, #16
   14522:	fb95 f0f0 	sdiv	r0, r5, r0
   14526:	f003 feeb 	bl	18300 <__aeabi_i2f>
   1452a:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   1452e:	f003 ff3b 	bl	183a8 <__aeabi_fmul>
   14532:	68a1      	ldr	r1, [r4, #8]
   14534:	f003 fe30 	bl	18198 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   14538:	bd38      	pop	{r3, r4, r5, pc}
   1453a:	Address 0x000000000001453a is out of bounds.


0001453c <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   1453c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   1453e:	f7ff ffe4 	bl	1450a <I2C_Temp::getCelsius()>
   14542:	4905      	ldr	r1, [pc, #20]	; (14558 <I2C_Temp::getFarenheit()+0x1c>)
   14544:	f003 ff30 	bl	183a8 <__aeabi_fmul>
   14548:	4904      	ldr	r1, [pc, #16]	; (1455c <I2C_Temp::getFarenheit()+0x20>)
   1454a:	f003 ffe1 	bl	18510 <__aeabi_fdiv>
   1454e:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   14552:	f003 fe21 	bl	18198 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   14556:	bd08      	pop	{r3, pc}
   14558:	41100000 	.word	0x41100000
   1455c:	40a00000 	.word	0x40a00000

00014560 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29

/** Private member of this file */
static c_list_ptr mp_tlm_component_list = NULL;

static bool tlm_component_find_by_name(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   14560:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    tlm_component *comp = elm_ptr;
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
   14562:	6800      	ldr	r0, [r0, #0]
   14564:	f006 f991 	bl	1a88a <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   14568:	3000      	adds	r0, #0
   1456a:	bf18      	it	ne
   1456c:	2001      	movne	r0, #1
   1456e:	bd08      	pop	{r3, pc}

00014570 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   14570:	b507      	push	{r0, r1, r2, lr}
   14572:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   14574:	b130      	cbz	r0, 14584 <tlm_component_get_by_name+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   14576:	4602      	mov	r2, r0
   14578:	4804      	ldr	r0, [pc, #16]	; (1458c <tlm_component_get_by_name+0x1c>)
   1457a:	9300      	str	r3, [sp, #0]
   1457c:	4904      	ldr	r1, [pc, #16]	; (14590 <tlm_component_get_by_name+0x20>)
   1457e:	6800      	ldr	r0, [r0, #0]
   14580:	f000 f864 	bl	1464c <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   14584:	b003      	add	sp, #12
   14586:	f85d fb04 	ldr.w	pc, [sp], #4
   1458a:	bf00      	nop
   1458c:	2007c4f8 	.word	0x2007c4f8
   14590:	00014561 	.word	0x00014561

00014594 <tlm_component_add>:
tlm_component_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   14594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   14596:	4606      	mov	r6, r0
   14598:	b910      	cbnz	r0, 145a0 <tlm_component_add+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   1459a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   1459c:	4620      	mov	r0, r4
   1459e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   145a0:	7803      	ldrb	r3, [r0, #0]
   145a2:	2b00      	cmp	r3, #0
   145a4:	d0f9      	beq.n	1459a <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   145a6:	4d15      	ldr	r5, [pc, #84]	; (145fc <tlm_component_add+0x68>)
   145a8:	682b      	ldr	r3, [r5, #0]
   145aa:	b913      	cbnz	r3, 145b2 <tlm_component_add+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   145ac:	f000 f828 	bl	14600 <c_list_create>
   145b0:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   145b2:	4630      	mov	r0, r6
   145b4:	f7ff ffdc 	bl	14570 <tlm_component_get_by_name>
   145b8:	4607      	mov	r7, r0
   145ba:	2800      	cmp	r0, #0
   145bc:	d1ed      	bne.n	1459a <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   145be:	2008      	movs	r0, #8
   145c0:	f004 fc40 	bl	18e44 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   145c4:	4604      	mov	r4, r0
   145c6:	2800      	cmp	r0, #0
   145c8:	d0e7      	beq.n	1459a <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   145ca:	e880 00c0 	stmia.w	r0, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   145ce:	f000 f817 	bl	14600 <c_list_create>
   145d2:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   145d4:	b918      	cbnz	r0, 145de <tlm_component_add+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   145d6:	4620      	mov	r0, r4
   145d8:	f004 fc3c 	bl	18e54 <free>
   145dc:	e7dd      	b.n	1459a <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   145de:	6828      	ldr	r0, [r5, #0]
   145e0:	4621      	mov	r1, r4
   145e2:	f000 f817 	bl	14614 <c_list_insert_elm_end>
   145e6:	4605      	mov	r5, r0
   145e8:	2800      	cmp	r0, #0
   145ea:	d1d7      	bne.n	1459c <tlm_component_add+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   145ec:	6860      	ldr	r0, [r4, #4]
   145ee:	f004 fc31 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   145f2:	4620      	mov	r0, r4
   145f4:	f004 fc2e 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   145f8:	462c      	mov	r4, r5
   145fa:	e7cf      	b.n	1459c <tlm_component_add+0x8>
   145fc:	2007c4f8 	.word	0x2007c4f8

00014600 <c_list_create>:
c_list_create():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   14600:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   14602:	200c      	movs	r0, #12
   14604:	f004 fc1e 	bl	18e44 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   14608:	b118      	cbz	r0, 14612 <c_list_create+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   1460a:	2300      	movs	r3, #0
   1460c:	6003      	str	r3, [r0, #0]
   1460e:	6043      	str	r3, [r0, #4]
   14610:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   14612:	bd08      	pop	{r3, pc}

00014614 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87
    const c_list_type *list = p;
    return list ? list->node_count : 0;
}

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   14614:	b538      	push	{r3, r4, r5, lr}
   14616:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   14618:	4604      	mov	r4, r0
   1461a:	b908      	cbnz	r0, 14620 <c_list_insert_elm_end+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   1461c:	2000      	movs	r0, #0
   1461e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   14620:	2008      	movs	r0, #8
   14622:	f004 fc0f 	bl	18e44 <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   14626:	2800      	cmp	r0, #0
   14628:	d0f8      	beq.n	1461c <c_list_insert_elm_end+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   1462a:	2300      	movs	r3, #0
   1462c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   1462e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   14630:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   14632:	b933      	cbnz	r3, 14642 <c_list_insert_elm_end+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   14634:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   14636:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   14638:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   1463a:	3301      	adds	r3, #1
   1463c:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   1463e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   14640:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   14642:	6863      	ldr	r3, [r4, #4]
   14644:	2b00      	cmp	r3, #0
   14646:	d0f6      	beq.n	14636 <c_list_insert_elm_end+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   14648:	6058      	str	r0, [r3, #4]
   1464a:	e7f4      	b.n	14636 <c_list_insert_elm_end+0x22>

0001464c <c_list_find_elm>:
c_list_find_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178
    }
}

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   1464c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1464e:	460d      	mov	r5, r1
   14650:	4616      	mov	r6, r2
   14652:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   14654:	b908      	cbnz	r0, 1465a <c_list_find_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   14656:	2000      	movs	r0, #0
   14658:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   1465a:	2900      	cmp	r1, #0
   1465c:	d0fb      	beq.n	14656 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   1465e:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   14660:	2c00      	cmp	r4, #0
   14662:	d0f8      	beq.n	14656 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   14664:	9b06      	ldr	r3, [sp, #24]
   14666:	463a      	mov	r2, r7
   14668:	4631      	mov	r1, r6
   1466a:	6820      	ldr	r0, [r4, #0]
   1466c:	47a8      	blx	r5
   1466e:	b908      	cbnz	r0, 14674 <c_list_find_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   14670:	6820      	ldr	r0, [r4, #0]
   14672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   14674:	6864      	ldr	r4, [r4, #4]
   14676:	e7f3      	b.n	14660 <c_list_find_elm+0x14>

00014678 <c_list_for_each_elm>:
c_list_for_each_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   14678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1467a:	460d      	mov	r5, r1
   1467c:	4616      	mov	r6, r2
   1467e:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   14680:	b908      	cbnz	r0, 14686 <c_list_for_each_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   14682:	2001      	movs	r0, #1
   14684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   14686:	2900      	cmp	r1, #0
   14688:	d0fb      	beq.n	14682 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   1468a:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   1468c:	2c00      	cmp	r4, #0
   1468e:	d0f8      	beq.n	14682 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   14690:	9b06      	ldr	r3, [sp, #24]
   14692:	463a      	mov	r2, r7
   14694:	4631      	mov	r1, r6
   14696:	6820      	ldr	r0, [r4, #0]
   14698:	47a8      	blx	r5
   1469a:	b108      	cbz	r0, 146a0 <c_list_for_each_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   1469c:	6864      	ldr	r4, [r4, #4]
   1469e:	e7f5      	b.n	1468c <c_list_for_each_elm+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   146a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   146a2:	Address 0x00000000000146a2 is out of bounds.


000146a4 <logger_write_to_file>:
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
 * Writes the buffer to the file.
 * @param [in] buffer   The data pointer to write from
 * @param [in] bytes_to_write  The number of bytes to write
 */
static bool logger_write_to_file(const void * buffer, const uint32_t bytes_to_write)
{
   146a4:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    bool success = false;
    FRESULT err = 0;
    UINT bytes_written = 0;
   146a6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   146a8:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   146ac:	460d      	mov	r5, r1
   146ae:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   146b0:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   146b2:	f7fb fee9 	bl	10488 <sys_get_uptime_us>
   146b6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   146ba:	2300      	movs	r3, #0
   146bc:	f003 ffe4 	bl	18688 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    const UINT bytes_to_write_uint = bytes_to_write;
    const uint32_t start_time = sys_get_uptime_ms();

    #if (!FILE_LOGGER_KEEP_FILE_OPEN)
    FIL fatfs_file = { 0 };
   146c0:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   146c4:	4606      	mov	r6, r0
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   146c6:	4621      	mov	r1, r4
   146c8:	a803      	add	r0, sp, #12
   146ca:	f004 fc1f 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    #endif

    if (0 == bytes_to_write_uint) {
   146ce:	2d00      	cmp	r5, #0
   146d0:	d038      	beq.n	14744 <logger_write_to_file+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    {
        f_sync(gp_file_ptr);
    }
    #else
    /* File not opened, open it, seek it, and then write it */
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   146d2:	2212      	movs	r2, #18
   146d4:	491c      	ldr	r1, [pc, #112]	; (14748 <logger_write_to_file+0xa4>)
   146d6:	a803      	add	r0, sp, #12
   146d8:	f7fe f8c6 	bl	12868 <f_open>
   146dc:	4604      	mov	r4, r0
   146de:	bb68      	cbnz	r0, 1473c <logger_write_to_file+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
    {
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   146e0:	9906      	ldr	r1, [sp, #24]
   146e2:	a803      	add	r0, sp, #12
   146e4:	f7fe fb3c 	bl	12d60 <f_lseek>
   146e8:	4604      	mov	r4, r0
   146ea:	b930      	cbnz	r0, 146fa <logger_write_to_file+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
        {
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   146ec:	ab02      	add	r3, sp, #8
   146ee:	462a      	mov	r2, r5
   146f0:	4639      	mov	r1, r7
   146f2:	a803      	add	r0, sp, #12
   146f4:	f7fe fa07 	bl	12b06 <f_write>
   146f8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        }
        f_close(&fatfs_file);
   146fa:	a803      	add	r0, sp, #12
   146fc:	f7fe fb1e 	bl	12d3c <f_close>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14700:	f7fb fec2 	bl	10488 <sys_get_uptime_us>
   14704:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14708:	2300      	movs	r3, #0
   1470a:	f003 ffbd 	bl	18688 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
        printf("Failed file write: ");
    }

    /* Capture the time */
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
    if (diff_time > g_highest_file_write_time) {
   1470e:	4b0f      	ldr	r3, [pc, #60]	; (1474c <logger_write_to_file+0xa8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   14710:	1b80      	subs	r0, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   14712:	881a      	ldrh	r2, [r3, #0]
   14714:	4290      	cmp	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
        g_highest_file_write_time = diff_time;
    }

    /* To be successful, bytes written should be the same count as the bytes intended to be written */
    success = (bytes_to_write_uint == bytes_written);
   14716:	9a02      	ldr	r2, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   14718:	bf88      	it	hi
   1471a:	8018      	strhhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   1471c:	4295      	cmp	r5, r2
   1471e:	bf0c      	ite	eq
   14720:	2601      	moveq	r6, #1
   14722:	2600      	movne	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106

    /* We don't want to silently fail, so print a message in case an error occurs */
    if (!success) {
   14724:	d006      	beq.n	14734 <logger_write_to_file+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   14726:	9b05      	ldr	r3, [sp, #20]
   14728:	4621      	mov	r1, r4
   1472a:	9300      	str	r3, [sp, #0]
   1472c:	4808      	ldr	r0, [pc, #32]	; (14750 <logger_write_to_file+0xac>)
   1472e:	462b      	mov	r3, r5
   14730:	f005 fd86 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
                (unsigned)err, (unsigned)bytes_written, (unsigned)bytes_to_write, (unsigned) fatfs_file.fptr);
#endif
    }

    return success;
}
   14734:	4630      	mov	r0, r6
   14736:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   1473a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   1473c:	4805      	ldr	r0, [pc, #20]	; (14754 <logger_write_to_file+0xb0>)
   1473e:	f005 fd7f 	bl	1a240 <iprintf>
   14742:	e7dd      	b.n	14700 <logger_write_to_file+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   14744:	462c      	mov	r4, r5
   14746:	e7db      	b.n	14700 <logger_write_to_file+0x5c>
   14748:	0001f9ac 	.word	0x0001f9ac
   1474c:	2007c504 	.word	0x2007c504
   14750:	0001f9ca 	.word	0x0001f9ca
   14754:	0001f9b6 	.word	0x0001f9b6

00014758 <logger_task>:
logger_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   14758:	4b2f      	ldr	r3, [pc, #188]	; (14818 <logger_task+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   1475a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   1475e:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   14760:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 14820 <logger_task+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   14764:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   14766:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 14824 <logger_task+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   1476a:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   1476e:	2300      	movs	r3, #0
   14770:	af02      	add	r7, sp, #8
   14772:	f847 3d04 	str.w	r3, [r7, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   14776:	f64e 2260 	movw	r2, #60000	; 0xea60
   1477a:	4639      	mov	r1, r7
   1477c:	f8d9 0000 	ldr.w	r0, [r9]
   14780:	f001 feb6 	bl	164f0 <xQueueGenericReceive>
   14784:	b108      	cbz	r0, 1478a <logger_task+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   14786:	9b01      	ldr	r3, [sp, #4]
   14788:	b92b      	cbnz	r3, 14796 <logger_task+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   1478a:	1b71      	subs	r1, r6, r5
   1478c:	4628      	mov	r0, r5
   1478e:	f7ff ff89 	bl	146a4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   14792:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   14794:	e7eb      	b.n	1476e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   14796:	f8d9 0000 	ldr.w	r0, [r9]
   1479a:	f001 ff77 	bl	1668c <uxQueueMessagesWaiting>
   1479e:	f8ba 3000 	ldrh.w	r3, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   147a2:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   147a4:	3001      	adds	r0, #1
   147a6:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   147a8:	bf88      	it	hi
   147aa:	f8aa 0000 	strhhi.w	r0, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   147ae:	4620      	mov	r0, r4
   147b0:	f006 f87d 	bl	1a8ae <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   147b4:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   147b6:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   147b8:	5423      	strb	r3, [r4, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   147ba:	f100 0b01 	add.w	fp, r0, #1
   147be:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   147c0:	eb06 040b 	add.w	r4, r6, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   147c4:	f802 100b 	strb.w	r1, [r2, fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   147c8:	45a0      	cmp	r8, r4
   147ca:	9901      	ldr	r1, [sp, #4]
   147cc:	d81f      	bhi.n	1480e <logger_task+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   147ce:	eba8 0206 	sub.w	r2, r8, r6
   147d2:	4630      	mov	r0, r6
   147d4:	f004 fb75 	bl	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   147d8:	eba4 0408 	sub.w	r4, r4, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   147dc:	f44f 6180 	mov.w	r1, #1024	; 0x400
   147e0:	4628      	mov	r0, r5
   147e2:	f7ff ff5f 	bl	146a4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   147e6:	b13c      	cbz	r4, 147f8 <logger_task+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   147e8:	9901      	ldr	r1, [sp, #4]
   147ea:	ebab 0b04 	sub.w	fp, fp, r4
   147ee:	4622      	mov	r2, r4
   147f0:	4459      	add	r1, fp
   147f2:	4628      	mov	r0, r5
   147f4:	f004 fb65 	bl	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   147f8:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   147fa:	4808      	ldr	r0, [pc, #32]	; (1481c <logger_task+0xc4>)
   147fc:	2300      	movs	r3, #0
   147fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14802:	4639      	mov	r1, r7
   14804:	6800      	ldr	r0, [r0, #0]
   14806:	f001 fd6b 	bl	162e0 <xQueueGenericSend>
   1480a:	4626      	mov	r6, r4
   1480c:	e7af      	b.n	1476e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   1480e:	465a      	mov	r2, fp
   14810:	4630      	mov	r0, r6
   14812:	f004 fb56 	bl	18ec2 <memcpy>
   14816:	e7f0      	b.n	147fa <logger_task+0xa2>
   14818:	2007c50c 	.word	0x2007c50c
   1481c:	2007c500 	.word	0x2007c500
   14820:	2007c508 	.word	0x2007c508
   14824:	2007c4fc 	.word	0x2007c4fc

00014828 <logger_init>:
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
    return g_buffer_watermark;
}

void logger_init(uint8_t logger_priority)
{
   14828:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1482c:	4c2b      	ldr	r4, [pc, #172]	; (148dc <logger_init+0xb4>)
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   1482e:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   14830:	6825      	ldr	r5, [r4, #0]
   14832:	2d00      	cmp	r5, #0
   14834:	d14a      	bne.n	148cc <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   14836:	f44f 6080 	mov.w	r0, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   1483a:	9503      	str	r5, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   1483c:	f004 fb02 	bl	18e44 <malloc>
   14840:	4e27      	ldr	r6, [pc, #156]	; (148e0 <logger_init+0xb8>)
   14842:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   14844:	b9a8      	cbnz	r0, 14872 <logger_init+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   14846:	6820      	ldr	r0, [r4, #0]
   14848:	2800      	cmp	r0, #0
   1484a:	d142      	bne.n	148d2 <logger_init+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   1484c:	6833      	ldr	r3, [r6, #0]
   1484e:	b163      	cbz	r3, 1486a <logger_init+0x42>
   14850:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   14852:	2300      	movs	r3, #0
   14854:	a903      	add	r1, sp, #12
   14856:	461a      	mov	r2, r3
   14858:	6830      	ldr	r0, [r6, #0]
   1485a:	f001 fe49 	bl	164f0 <xQueueGenericReceive>
   1485e:	b110      	cbz	r0, 14866 <logger_init+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   14860:	9803      	ldr	r0, [sp, #12]
   14862:	f004 faf7 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   14866:	3c01      	subs	r4, #1
   14868:	d1f3      	bne.n	14852 <logger_init+0x2a>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   1486a:	481e      	ldr	r0, [pc, #120]	; (148e4 <logger_init+0xbc>)
   1486c:	f005 fd5c 	bl	1a328 <puts>
   14870:	e02c      	b.n	148cc <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   14872:	462a      	mov	r2, r5
   14874:	2104      	movs	r1, #4
   14876:	200a      	movs	r0, #10
   14878:	f001 fd18 	bl	162ac <xQueueGenericCreate>
   1487c:	4f1a      	ldr	r7, [pc, #104]	; (148e8 <logger_init+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   1487e:	462a      	mov	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   14880:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   14882:	2104      	movs	r1, #4
   14884:	200a      	movs	r0, #10
   14886:	f001 fd11 	bl	162ac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   1488a:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   1488c:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   1488e:	2b00      	cmp	r3, #0
   14890:	d0d9      	beq.n	14846 <logger_init+0x1e>
   14892:	2800      	cmp	r0, #0
   14894:	d0d7      	beq.n	14846 <logger_init+0x1e>
   14896:	250a      	movs	r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   14898:	2096      	movs	r0, #150	; 0x96
   1489a:	f004 fad3 	bl	18e44 <malloc>
   1489e:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   148a0:	2800      	cmp	r0, #0
   148a2:	d0d0      	beq.n	14846 <logger_init+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   148a4:	2300      	movs	r3, #0
   148a6:	a903      	add	r1, sp, #12
   148a8:	461a      	mov	r2, r3
   148aa:	6830      	ldr	r0, [r6, #0]
   148ac:	f001 fd18 	bl	162e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   148b0:	3d01      	subs	r5, #1
   148b2:	d1f1      	bne.n	14898 <logger_init+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   148b4:	9501      	str	r5, [sp, #4]
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   148b6:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   148ba:	462b      	mov	r3, r5
   148bc:	f44f 72c0 	mov.w	r2, #384	; 0x180
   148c0:	490a      	ldr	r1, [pc, #40]	; (148ec <logger_init+0xc4>)
   148c2:	480b      	ldr	r0, [pc, #44]	; (148f0 <logger_init+0xc8>)
   148c4:	f001 ff46 	bl	16754 <xTaskCreate>
   148c8:	2800      	cmp	r0, #0
   148ca:	d0bc      	beq.n	14846 <logger_init+0x1e>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   148cc:	b004      	add	sp, #16
   148ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   148d2:	f004 fabf 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   148d6:	2300      	movs	r3, #0
   148d8:	6023      	str	r3, [r4, #0]
   148da:	e7b7      	b.n	1484c <logger_init+0x24>
   148dc:	2007c50c 	.word	0x2007c50c
   148e0:	2007c500 	.word	0x2007c500
   148e4:	0001f987 	.word	0x0001f987
   148e8:	2007c508 	.word	0x2007c508
   148ec:	0001f980 	.word	0x0001f980
   148f0:	00014759 	.word	0x00014759

000148f4 <u0_dbg_put>:
u0_dbg_put():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   148f4:	b510      	push	{r4, lr}
   148f6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   148f8:	f001 fb0c 	bl	15f14 <vPortEnterCritical>
   148fc:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   148fe:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   14902:	b918      	cbnz	r0, 1490c <u0_dbg_put+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   14904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   14908:	f001 bb14 	b.w	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   1490c:	f7fb ffd2 	bl	108b4 <uart0_putchar>
   14910:	e7f5      	b.n	148fe <u0_dbg_put+0xa>

00014912 <u0_dbg_printf>:
u0_dbg_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   14912:	b40f      	push	{r0, r1, r2, r3}
   14914:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   14916:	f44f 7580 	mov.w	r5, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   1491a:	b0c2      	sub	sp, #264	; 0x108
   1491c:	ac46      	add	r4, sp, #280	; 0x118
   1491e:	f854 6b04 	ldr.w	r6, [r4], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   14922:	462a      	mov	r2, r5
   14924:	2100      	movs	r1, #0
   14926:	a802      	add	r0, sp, #8
   14928:	f004 faf0 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   1492c:	4623      	mov	r3, r4
   1492e:	4632      	mov	r2, r6
   14930:	4629      	mov	r1, r5
   14932:	a802      	add	r0, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   14934:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   14936:	f007 f92d 	bl	1bb94 <vsniprintf>
   1493a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   1493c:	a802      	add	r0, sp, #8
   1493e:	f7ff ffd9 	bl	148f4 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   14942:	4620      	mov	r0, r4
   14944:	b042      	add	sp, #264	; 0x108
   14946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1494a:	b004      	add	sp, #16
   1494c:	4770      	bx	lr

0001494e <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   1494e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   14950:	b513      	push	{r0, r1, r4, lr}
   14952:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   14954:	a902      	add	r1, sp, #8
   14956:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   1495a:	6800      	ldr	r0, [r0, #0]
   1495c:	f001 fd94 	bl	16488 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   14960:	9b01      	ldr	r3, [sp, #4]
   14962:	b11b      	cbz	r3, 1496c <for_each_recur_alarm_callback+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   14964:	6823      	ldr	r3, [r4, #0]
   14966:	f043 0301 	orr.w	r3, r3, #1
   1496a:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   1496c:	2001      	movs	r0, #1
   1496e:	b002      	add	sp, #8
   14970:	bd10      	pop	{r4, pc}

00014972 <for_each_alarm_callback>:
for_each_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   14972:	b530      	push	{r4, r5, lr}
   14974:	4604      	mov	r4, r0
   14976:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   14978:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   1497a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   1497c:	f000 fe58 	bl	15630 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   14980:	f89d 3006 	ldrb.w	r3, [sp, #6]
   14984:	7922      	ldrb	r2, [r4, #4]
   14986:	f003 031f 	and.w	r3, r3, #31
   1498a:	429a      	cmp	r2, r3
   1498c:	d11b      	bne.n	149c6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   1498e:	f89d 3005 	ldrb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   14992:	7962      	ldrb	r2, [r4, #5]
   14994:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14998:	429a      	cmp	r2, r3
   1499a:	d114      	bne.n	149c6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   1499c:	f89d 3004 	ldrb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   149a0:	79a2      	ldrb	r2, [r4, #6]
   149a2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   149a6:	429a      	cmp	r2, r3
   149a8:	d10d      	bne.n	149c6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   149aa:	2300      	movs	r3, #0
   149ac:	a904      	add	r1, sp, #16
   149ae:	f841 3d10 	str.w	r3, [r1, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   149b2:	6823      	ldr	r3, [r4, #0]
   149b4:	6818      	ldr	r0, [r3, #0]
   149b6:	f001 fd67 	bl	16488 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   149ba:	9b00      	ldr	r3, [sp, #0]
   149bc:	b11b      	cbz	r3, 149c6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   149be:	682b      	ldr	r3, [r5, #0]
   149c0:	f043 0301 	orr.w	r3, r3, #1
   149c4:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   149c6:	2001      	movs	r0, #1
   149c8:	b005      	add	sp, #20
   149ca:	bd30      	pop	{r4, r5, pc}

000149cc <RTC_IRQHandler>:
RTC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   149cc:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   149ce:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   149d0:	4a23      	ldr	r2, [pc, #140]	; (14a60 <RTC_IRQHandler+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   149d2:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   149d4:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   149d6:	4c23      	ldr	r4, [pc, #140]	; (14a64 <RTC_IRQHandler+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   149d8:	f043 0301 	orr.w	r3, r3, #1
   149dc:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   149de:	a803      	add	r0, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   149e0:	9502      	str	r5, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   149e2:	f000 fe25 	bl	15630 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   149e6:	462b      	mov	r3, r5
   149e8:	9500      	str	r5, [sp, #0]
   149ea:	aa02      	add	r2, sp, #8
   149ec:	491e      	ldr	r1, [pc, #120]	; (14a68 <RTC_IRQHandler+0x9c>)
   149ee:	6820      	ldr	r0, [r4, #0]
   149f0:	f7ff fe42 	bl	14678 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   149f4:	f89d 300c 	ldrb.w	r3, [sp, #12]
   149f8:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   149fc:	d11b      	bne.n	14a36 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   149fe:	9300      	str	r3, [sp, #0]
   14a00:	aa02      	add	r2, sp, #8
   14a02:	4919      	ldr	r1, [pc, #100]	; (14a68 <RTC_IRQHandler+0x9c>)
   14a04:	6860      	ldr	r0, [r4, #4]
   14a06:	f7ff fe37 	bl	14678 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   14a0a:	f89d 300d 	ldrb.w	r3, [sp, #13]
   14a0e:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   14a12:	d110      	bne.n	14a36 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14a14:	9300      	str	r3, [sp, #0]
   14a16:	aa02      	add	r2, sp, #8
   14a18:	4913      	ldr	r1, [pc, #76]	; (14a68 <RTC_IRQHandler+0x9c>)
   14a1a:	68a0      	ldr	r0, [r4, #8]
   14a1c:	f7ff fe2c 	bl	14678 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   14a20:	f89d 300e 	ldrb.w	r3, [sp, #14]
   14a24:	f013 031f 	ands.w	r3, r3, #31
   14a28:	d105      	bne.n	14a36 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14a2a:	9300      	str	r3, [sp, #0]
   14a2c:	aa02      	add	r2, sp, #8
   14a2e:	490e      	ldr	r1, [pc, #56]	; (14a68 <RTC_IRQHandler+0x9c>)
   14a30:	68e0      	ldr	r0, [r4, #12]
   14a32:	f7ff fe21 	bl	14678 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   14a36:	2300      	movs	r3, #0
   14a38:	480c      	ldr	r0, [pc, #48]	; (14a6c <RTC_IRQHandler+0xa0>)
   14a3a:	9300      	str	r3, [sp, #0]
   14a3c:	aa02      	add	r2, sp, #8
   14a3e:	490c      	ldr	r1, [pc, #48]	; (14a70 <RTC_IRQHandler+0xa4>)
   14a40:	6800      	ldr	r0, [r0, #0]
   14a42:	f7ff fe19 	bl	14678 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   14a46:	9b02      	ldr	r3, [sp, #8]
   14a48:	b13b      	cbz	r3, 14a5a <RTC_IRQHandler+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   14a4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14a4e:	4b09      	ldr	r3, [pc, #36]	; (14a74 <RTC_IRQHandler+0xa8>)
   14a50:	601a      	str	r2, [r3, #0]
   14a52:	f3bf 8f4f 	dsb	sy
   14a56:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   14a5a:	b007      	add	sp, #28
   14a5c:	bd30      	pop	{r4, r5, pc}
   14a5e:	bf00      	nop
   14a60:	40024000 	.word	0x40024000
   14a64:	2007c510 	.word	0x2007c510
   14a68:	0001494f 	.word	0x0001494f
   14a6c:	2007c520 	.word	0x2007c520
   14a70:	00014973 	.word	0x00014973
   14a74:	e000ed04 	.word	0xe000ed04

00014a78 <delay_us>:
delay_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   14a78:	b570      	push	{r4, r5, r6, lr}
   14a7a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   14a7c:	f7fb fd04 	bl	10488 <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   14a80:	1984      	adds	r4, r0, r6
   14a82:	f141 0500 	adc.w	r5, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   14a86:	f7fb fcff 	bl	10488 <sys_get_uptime_us>
   14a8a:	42a9      	cmp	r1, r5
   14a8c:	bf08      	it	eq
   14a8e:	42a0      	cmpeq	r0, r4
   14a90:	d3f9      	bcc.n	14a86 <delay_us+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   14a92:	bd70      	pop	{r4, r5, r6, pc}

00014a94 <is_freertos_running>:
is_freertos_running():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   14a94:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   14a96:	f002 f923 	bl	16ce0 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   14a9a:	1e83      	subs	r3, r0, #2
   14a9c:	4258      	negs	r0, r3
   14a9e:	4158      	adcs	r0, r3
   14aa0:	bd08      	pop	{r3, pc}

00014aa2 <delay_ms>:
delay_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   14aa2:	b510      	push	{r4, lr}
   14aa4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   14aa6:	f7ff fff5 	bl	14a94 <is_freertos_running>
   14aaa:	b120      	cbz	r0, 14ab6 <delay_ms+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   14aac:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   14aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   14ab2:	f002 b821 	b.w	16af8 <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   14ab6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   14aba:	4360      	muls	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   14abc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   14ac0:	f7ff bfda 	b.w	14a78 <delay_us>

00014ac4 <_sbrk>:
_sbrk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   14ac4:	4b12      	ldr	r3, [pc, #72]	; (14b10 <_sbrk+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   14ac6:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   14ac8:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   14aca:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   14acc:	b912      	cbnz	r2, 14ad4 <_sbrk+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   14ace:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14ad2:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   14ad4:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   14ad6:	4a0f      	ldr	r2, [pc, #60]	; (14b14 <_sbrk+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   14ad8:	1844      	adds	r4, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   14ada:	4d0f      	ldr	r5, [pc, #60]	; (14b18 <_sbrk+0x54>)
   14adc:	4422      	add	r2, r4
   14ade:	42aa      	cmp	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   14ae0:	bf97      	itett	ls
   14ae2:	4a0e      	ldrls	r2, [pc, #56]	; (14b1c <_sbrk+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   14ae4:	601c      	strhi	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   14ae6:	1888      	addls	r0, r1, r2
   14ae8:	6018      	strls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   14aea:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   14aec:	bf98      	it	ls
   14aee:	4610      	movls	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   14af0:	4a0b      	ldr	r2, [pc, #44]	; (14b20 <_sbrk+0x5c>)
   14af2:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   14af4:	bf82      	ittt	hi
   14af6:	3201      	addhi	r2, #1
   14af8:	601a      	strhi	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   14afa:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   14afc:	b139      	cbz	r1, 14b0e <_sbrk+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   14afe:	4a09      	ldr	r2, [pc, #36]	; (14b24 <_sbrk+0x60>)
   14b00:	6813      	ldr	r3, [r2, #0]
   14b02:	3301      	adds	r3, #1
   14b04:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   14b06:	4b08      	ldr	r3, [pc, #32]	; (14b28 <_sbrk+0x64>)
   14b08:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   14b0a:	4b08      	ldr	r3, [pc, #32]	; (14b2c <_sbrk+0x68>)
   14b0c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   14b0e:	bd30      	pop	{r4, r5, pc}
   14b10:	2007c52c 	.word	0x2007c52c
   14b14:	efff7fff 	.word	0xefff7fff
   14b18:	10073ffe 	.word	0x10073ffe
   14b1c:	2007c7b4 	.word	0x2007c7b4
   14b20:	20083fff 	.word	0x20083fff
   14b24:	2007c524 	.word	0x2007c524
   14b28:	2007c528 	.word	0x2007c528
   14b2c:	2007c530 	.word	0x2007c530

00014b30 <operator new(unsigned int)>:
_Znwj():
   14b30:	f004 b988 	b.w	18e44 <malloc>

00014b34 <operator delete(void*)>:
_ZdlPv():
   14b34:	f004 b98e 	b.w	18e54 <free>

00014b38 <sys_get_mem_info>:
sys_get_mem_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   14b38:	b530      	push	{r4, r5, lr}
   14b3a:	4604      	mov	r4, r0
   14b3c:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   14b3e:	4668      	mov	r0, sp
   14b40:	f004 fc48 	bl	193d4 <mallinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   14b44:	4b21      	ldr	r3, [pc, #132]	; (14bcc <sys_get_mem_info+0x94>)
   14b46:	4d22      	ldr	r5, [pc, #136]	; (14bd0 <sys_get_mem_info+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   14b48:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   14b4a:	9b08      	ldr	r3, [sp, #32]
   14b4c:	4a21      	ldr	r2, [pc, #132]	; (14bd4 <sys_get_mem_info+0x9c>)
   14b4e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   14b50:	9b07      	ldr	r3, [sp, #28]
   14b52:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   14b54:	b953      	cbnz	r3, 14b6c <sys_get_mem_info+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   14b56:	6813      	ldr	r3, [r2, #0]
   14b58:	491f      	ldr	r1, [pc, #124]	; (14bd8 <sys_get_mem_info+0xa0>)
   14b5a:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   14b5c:	bf8a      	itet	hi
   14b5e:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   14b62:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   14b66:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   14b6a:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   14b6c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   14b6e:	6861      	ldr	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   14b70:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   14b72:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   14b76:	bf82      	ittt	hi
   14b78:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   14b7c:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   14b80:	6061      	strhi	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   14b82:	6811      	ldr	r1, [r2, #0]
   14b84:	4a14      	ldr	r2, [pc, #80]	; (14bd8 <sys_get_mem_info+0xa0>)
   14b86:	4291      	cmp	r1, r2
   14b88:	d813      	bhi.n	14bb2 <sys_get_mem_info+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   14b8a:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   14b8e:	1a52      	subs	r2, r2, r1
   14b90:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   14b94:	441a      	add	r2, r3
   14b96:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   14b98:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   14b9a:	4b10      	ldr	r3, [pc, #64]	; (14bdc <sys_get_mem_info+0xa4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   14b9c:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   14b9e:	681b      	ldr	r3, [r3, #0]
   14ba0:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   14ba2:	4b0f      	ldr	r3, [pc, #60]	; (14be0 <sys_get_mem_info+0xa8>)
   14ba4:	681b      	ldr	r3, [r3, #0]
   14ba6:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   14ba8:	4b0e      	ldr	r3, [pc, #56]	; (14be4 <sys_get_mem_info+0xac>)
   14baa:	681b      	ldr	r3, [r3, #0]
   14bac:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   14bae:	b00b      	add	sp, #44	; 0x2c
   14bb0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   14bb2:	4b0d      	ldr	r3, [pc, #52]	; (14be8 <sys_get_mem_info+0xb0>)
   14bb4:	4299      	cmp	r1, r3
   14bb6:	d8ef      	bhi.n	14b98 <sys_get_mem_info+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   14bb8:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   14bbc:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   14bc0:	1b5b      	subs	r3, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   14bc2:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   14bc4:	bfc8      	it	gt
   14bc6:	60e3      	strgt	r3, [r4, #12]
   14bc8:	e7e6      	b.n	14b98 <sys_get_mem_info+0x60>
   14bca:	bf00      	nop
   14bcc:	000007b4 	.word	0x000007b4
   14bd0:	2007c7b4 	.word	0x2007c7b4
   14bd4:	2007c52c 	.word	0x2007c52c
   14bd8:	10008000 	.word	0x10008000
   14bdc:	2007c528 	.word	0x2007c528
   14be0:	2007c530 	.word	0x2007c530
   14be4:	2007c524 	.word	0x2007c524
   14be8:	20083fff 	.word	0x20083fff

00014bec <__malloc_lock>:
__malloc_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   14bec:	f001 b992 	b.w	15f14 <vPortEnterCritical>

00014bf0 <__malloc_unlock>:
__malloc_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   14bf0:	f001 b9a0 	b.w	15f34 <vPortExitCritical>

00014bf4 <_gettimeofday>:
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   14bf4:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   14bf6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   14bf8:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   14bfa:	b3a8      	cbz	r0, 14c68 <_gettimeofday+0x74>
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   14bfc:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   14bfe:	4668      	mov	r0, sp
   14c00:	f000 fd16 	bl	15630 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   14c04:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   14c08:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   14c0a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14c0e:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   14c10:	f89d 3001 	ldrb.w	r3, [sp, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   14c14:	950b      	str	r5, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   14c16:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14c1a:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   14c1c:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14c20:	f003 031f 	and.w	r3, r3, #31
   14c24:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   14c26:	f89d 3004 	ldrb.w	r3, [sp, #4]
   14c2a:	f003 031f 	and.w	r3, r3, #31
   14c2e:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   14c30:	f89d 3005 	ldrb.w	r3, [sp, #5]
   14c34:	f003 030f 	and.w	r3, r3, #15
   14c38:	3b01      	subs	r3, #1
   14c3a:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   14c3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   14c40:	f3c3 030b 	ubfx	r3, r3, #0, #12
   14c44:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   14c48:	9308      	str	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   14c4a:	f89d 3003 	ldrb.w	r3, [sp, #3]
   14c4e:	f003 0307 	and.w	r3, r3, #7
   14c52:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   14c54:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   14c58:	f3c3 030b 	ubfx	r3, r3, #0, #12
   14c5c:	3b01      	subs	r3, #1
   14c5e:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   14c60:	f004 fa3c 	bl	190dc <mktime>
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   14c64:	e884 0021 	stmia.w	r4, {r0, r5}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   14c68:	2000      	movs	r0, #0
   14c6a:	b00d      	add	sp, #52	; 0x34
   14c6c:	bd30      	pop	{r4, r5, pc}

00014c6e <remap_fatfs_errors>:
remap_fatfs_errors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   14c6e:	3803      	subs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   14c70:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   14c72:	280a      	cmp	r0, #10
   14c74:	d822      	bhi.n	14cbc <remap_fatfs_errors+0x4e>
   14c76:	e8df f000 	tbb	[pc, r0]
   14c7a:	0621      	.short	0x0621
   14c7c:	15190d06 	.word	0x15190d06
   14c80:	2111191d 	.word	0x2111191d
   14c84:	21          	.byte	0x21
   14c85:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   14c86:	f003 fe93 	bl	189b0 <__errno>
   14c8a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   14c8c:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   14c8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14c92:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   14c94:	f003 fe8c 	bl	189b0 <__errno>
   14c98:	2316      	movs	r3, #22
   14c9a:	e7f7      	b.n	14c8c <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   14c9c:	f003 fe88 	bl	189b0 <__errno>
   14ca0:	2313      	movs	r3, #19
   14ca2:	e7f3      	b.n	14c8c <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   14ca4:	f003 fe84 	bl	189b0 <__errno>
   14ca8:	2311      	movs	r3, #17
   14caa:	e7ef      	b.n	14c8c <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   14cac:	f003 fe80 	bl	189b0 <__errno>
   14cb0:	230d      	movs	r3, #13
   14cb2:	e7eb      	b.n	14c8c <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   14cb4:	f003 fe7c 	bl	189b0 <__errno>
   14cb8:	2309      	movs	r3, #9
   14cba:	e7e7      	b.n	14c8c <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   14cbc:	f003 fe78 	bl	189b0 <__errno>
   14cc0:	2305      	movs	r3, #5
   14cc2:	e7e3      	b.n	14c8c <remap_fatfs_errors+0x1e>

00014cc4 <findslot>:
findslot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   14cc4:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   14cc6:	b570      	push	{r4, r5, r6, lr}
   14cc8:	490e      	ldr	r1, [pc, #56]	; (14d04 <findslot+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   14cca:	d006      	beq.n	14cda <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   14ccc:	4b0e      	ldr	r3, [pc, #56]	; (14d08 <findslot+0x44>)
   14cce:	681b      	ldr	r3, [r3, #0]
   14cd0:	4298      	cmp	r0, r3
   14cd2:	d102      	bne.n	14cda <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   14cd4:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   14cd6:	4610      	mov	r0, r2
   14cd8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   14cda:	2300      	movs	r3, #0
   14cdc:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14cde:	4d0b      	ldr	r5, [pc, #44]	; (14d0c <findslot+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   14ce0:	600b      	str	r3, [r1, #0]
   14ce2:	2b06      	cmp	r3, #6
   14ce4:	461a      	mov	r2, r3
   14ce6:	d006      	beq.n	14cf6 <findslot+0x32>
   14ce8:	1c53      	adds	r3, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14cea:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   14cee:	f856 6c10 	ldr.w	r6, [r6, #-16]
   14cf2:	42b0      	cmp	r0, r6
   14cf4:	d104      	bne.n	14d00 <findslot+0x3c>
   14cf6:	b104      	cbz	r4, 14cfa <findslot+0x36>
   14cf8:	600a      	str	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   14cfa:	4b03      	ldr	r3, [pc, #12]	; (14d08 <findslot+0x44>)
   14cfc:	6018      	str	r0, [r3, #0]
   14cfe:	e7ea      	b.n	14cd6 <findslot+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14d00:	2401      	movs	r4, #1
   14d02:	e7ee      	b.n	14ce2 <findslot+0x1e>
   14d04:	2007c5a0 	.word	0x2007c5a0
   14d08:	2007c098 	.word	0x2007c098
   14d0c:	2007c540 	.word	0x2007c540

00014d10 <remap_handle>:
remap_handle():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   14d10:	4b08      	ldr	r3, [pc, #32]	; (14d34 <remap_handle+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   14d12:	b510      	push	{r4, lr}
   14d14:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   14d16:	6818      	ldr	r0, [r3, #0]
   14d18:	b118      	cbz	r0, 14d22 <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   14d1a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   14d1c:	b90b      	cbnz	r3, 14d22 <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   14d1e:	f003 ff51 	bl	18bc4 <__sinit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   14d22:	b124      	cbz	r4, 14d2e <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   14d24:	2c01      	cmp	r4, #1
   14d26:	d002      	beq.n	14d2e <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   14d28:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   14d2a:	bf18      	it	ne
   14d2c:	3c20      	subne	r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   14d2e:	4620      	mov	r0, r4
   14d30:	bd10      	pop	{r4, pc}
   14d32:	bf00      	nop
   14d34:	2007c0e0 	.word	0x2007c0e0

00014d38 <sys_set_outchar_func>:
sys_set_outchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   14d38:	4b01      	ldr	r3, [pc, #4]	; (14d40 <sys_set_outchar_func+0x8>)
   14d3a:	6018      	str	r0, [r3, #0]
   14d3c:	4770      	bx	lr
   14d3e:	bf00      	nop
   14d40:	2007c538 	.word	0x2007c538

00014d44 <sys_set_inchar_func>:
sys_set_inchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   14d44:	4b01      	ldr	r3, [pc, #4]	; (14d4c <sys_set_inchar_func+0x8>)
   14d46:	6018      	str	r0, [r3, #0]
   14d48:	4770      	bx	lr
   14d4a:	bf00      	nop
   14d4c:	2007c534 	.word	0x2007c534

00014d50 <_kill>:
_kill():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   14d50:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   14d52:	4802      	ldr	r0, [pc, #8]	; (14d5c <_kill+0xc>)
   14d54:	f005 fae8 	bl	1a328 <puts>
   14d58:	e7fe      	b.n	14d58 <_kill+0x8>
   14d5a:	bf00      	nop
   14d5c:	0001fa17 	.word	0x0001fa17

00014d60 <_exit>:
_exit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   14d60:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   14d62:	4802      	ldr	r0, [pc, #8]	; (14d6c <_exit+0xc>)
   14d64:	f005 fae0 	bl	1a328 <puts>
   14d68:	e7fe      	b.n	14d68 <_exit+0x8>
   14d6a:	bf00      	nop
   14d6c:	0001f9fd 	.word	0x0001f9fd

00014d70 <_getpid>:
_getpid():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   14d70:	2000      	movs	r0, #0
   14d72:	4770      	bx	lr

00014d74 <_init>:
_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   14d74:	2001      	movs	r0, #1
   14d76:	4770      	bx	lr

00014d78 <syscalls_init>:
syscalls_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   14d78:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   14d7a:	4b0a      	ldr	r3, [pc, #40]	; (14da4 <syscalls_init+0x2c>)
   14d7c:	781d      	ldrb	r5, [r3, #0]
   14d7e:	b985      	cbnz	r5, 14da2 <syscalls_init+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   14d80:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   14d82:	4c09      	ldr	r4, [pc, #36]	; (14da8 <syscalls_init+0x30>)
   14d84:	2260      	movs	r2, #96	; 0x60
   14d86:	4629      	mov	r1, r5
   14d88:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   14d8a:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   14d8c:	f004 f8be 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   14d90:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   14d94:	6323      	str	r3, [r4, #48]	; 0x30
   14d96:	6423      	str	r3, [r4, #64]	; 0x40
   14d98:	6523      	str	r3, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   14d9a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   14d9c:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   14d9e:	6126      	str	r6, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   14da0:	6223      	str	r3, [r4, #32]
   14da2:	bd70      	pop	{r4, r5, r6, pc}
   14da4:	2007c53c 	.word	0x2007c53c
   14da8:	2007c540 	.word	0x2007c540

00014dac <_read>:
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   14dac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14db0:	4689      	mov	r9, r1
   14db2:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14db4:	f7ff ffac 	bl	14d10 <remap_handle>
   14db8:	4605      	mov	r5, r0
   14dba:	f7ff ff83 	bl	14cc4 <findslot>
   14dbe:	2806      	cmp	r0, #6
   14dc0:	d106      	bne.n	14dd0 <_read+0x24>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14dc2:	f003 fdf5 	bl	189b0 <__errno>
   14dc6:	2309      	movs	r3, #9
   14dc8:	6003      	str	r3, [r0, #0]
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   14dca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14dce:	e016      	b.n	14dfe <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   14dd0:	4e1b      	ldr	r6, [pc, #108]	; (14e40 <_read+0x94>)
   14dd2:	0107      	lsls	r7, r0, #4
   14dd4:	19f3      	adds	r3, r6, r7
   14dd6:	689b      	ldr	r3, [r3, #8]
   14dd8:	07db      	lsls	r3, r3, #31
   14dda:	d4f2      	bmi.n	14dc2 <_read+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   14ddc:	2d00      	cmp	r5, #0
   14dde:	d011      	beq.n	14e04 <_read+0x58>
   14de0:	db01      	blt.n	14de6 <_read+0x3a>
   14de2:	2d05      	cmp	r5, #5
   14de4:	ddf1      	ble.n	14dca <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   14de6:	19f3      	adds	r3, r6, r7
   14de8:	68d8      	ldr	r0, [r3, #12]
   14dea:	2800      	cmp	r0, #0
   14dec:	d0ed      	beq.n	14dca <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   14dee:	ab01      	add	r3, sp, #4
   14df0:	4622      	mov	r2, r4
   14df2:	4649      	mov	r1, r9
   14df4:	f7fd fdcf 	bl	12996 <f_read>
   14df8:	b1f8      	cbz	r0, 14e3a <_read+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   14dfa:	f7ff ff38 	bl	14c6e <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   14dfe:	b003      	add	sp, #12
   14e00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   14e04:	4b0f      	ldr	r3, [pc, #60]	; (14e44 <_read+0x98>)
   14e06:	681a      	ldr	r2, [r3, #0]
   14e08:	4698      	mov	r8, r3
   14e0a:	b132      	cbz	r2, 14e1a <_read+0x6e>
   14e0c:	464d      	mov	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   14e0e:	eba5 0309 	sub.w	r3, r5, r9
   14e12:	429c      	cmp	r4, r3
   14e14:	dc0a      	bgt.n	14e2c <_read+0x80>
   14e16:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   14e1a:	1b60      	subs	r0, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   14e1c:	2800      	cmp	r0, #0
   14e1e:	dbd4      	blt.n	14dca <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   14e20:	443e      	add	r6, r7
   14e22:	6873      	ldr	r3, [r6, #4]
   14e24:	1a20      	subs	r0, r4, r0
   14e26:	4403      	add	r3, r0
   14e28:	6073      	str	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   14e2a:	e7e8      	b.n	14dfe <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   14e2c:	f8d8 3000 	ldr.w	r3, [r8]
   14e30:	2000      	movs	r0, #0
   14e32:	4798      	blx	r3
   14e34:	f805 0b01 	strb.w	r0, [r5], #1
   14e38:	e7e9      	b.n	14e0e <_read+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   14e3a:	9801      	ldr	r0, [sp, #4]
   14e3c:	1a20      	subs	r0, r4, r0
   14e3e:	e7ed      	b.n	14e1c <_read+0x70>
   14e40:	2007c540 	.word	0x2007c540
   14e44:	2007c534 	.word	0x2007c534

00014e48 <_lseek>:
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   14e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14e4a:	460e      	mov	r6, r1
   14e4c:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14e4e:	f7ff ff5f 	bl	14d10 <remap_handle>
   14e52:	f7ff ff37 	bl	14cc4 <findslot>
   14e56:	2806      	cmp	r0, #6
   14e58:	d004      	beq.n	14e64 <_lseek+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   14e5a:	4c12      	ldr	r4, [pc, #72]	; (14ea4 <_lseek+0x5c>)
   14e5c:	0105      	lsls	r5, r0, #4
   14e5e:	1962      	adds	r2, r4, r5
   14e60:	68d0      	ldr	r0, [r2, #12]
   14e62:	b930      	cbnz	r0, 14e72 <_lseek+0x2a>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14e64:	f003 fda4 	bl	189b0 <__errno>
   14e68:	2309      	movs	r3, #9
   14e6a:	6003      	str	r3, [r0, #0]
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   14e6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14e70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   14e72:	b93f      	cbnz	r7, 14e84 <_lseek+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   14e74:	4631      	mov	r1, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   14e76:	f7fd ff73 	bl	12d60 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   14e7a:	b170      	cbz	r0, 14e9a <_lseek+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   14e7c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   14e80:	f7ff bef5 	b.w	14c6e <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   14e84:	2f01      	cmp	r7, #1
   14e86:	d102      	bne.n	14e8e <_lseek+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   14e88:	6881      	ldr	r1, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   14e8a:	4431      	add	r1, r6
   14e8c:	e7f3      	b.n	14e76 <_lseek+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   14e8e:	2f02      	cmp	r7, #2
   14e90:	d101      	bne.n	14e96 <_lseek+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   14e92:	68c1      	ldr	r1, [r0, #12]
   14e94:	e7f9      	b.n	14e8a <_lseek+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   14e96:	2009      	movs	r0, #9
   14e98:	e7f0      	b.n	14e7c <_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   14e9a:	1963      	adds	r3, r4, r5
   14e9c:	68da      	ldr	r2, [r3, #12]
   14e9e:	6890      	ldr	r0, [r2, #8]
   14ea0:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   14ea2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14ea4:	2007c540 	.word	0x2007c540

00014ea8 <_write>:
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   14ea8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   14eac:	460f      	mov	r7, r1
   14eae:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14eb0:	f7ff ff2e 	bl	14d10 <remap_handle>
   14eb4:	4606      	mov	r6, r0
   14eb6:	f7ff ff05 	bl	14cc4 <findslot>
   14eba:	2806      	cmp	r0, #6
   14ebc:	4605      	mov	r5, r0
   14ebe:	d104      	bne.n	14eca <_write+0x22>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14ec0:	f003 fd76 	bl	189b0 <__errno>
   14ec4:	2309      	movs	r3, #9
   14ec6:	6003      	str	r3, [r0, #0]
   14ec8:	e006      	b.n	14ed8 <_write+0x30>
   14eca:	2e05      	cmp	r6, #5
   14ecc:	d826      	bhi.n	14f1c <_write+0x74>
   14ece:	2001      	movs	r0, #1
   14ed0:	40b0      	lsls	r0, r6
   14ed2:	f010 0f39 	tst.w	r0, #57	; 0x39
   14ed6:	d002      	beq.n	14ede <_write+0x36>
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   14ed8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14edc:	e02c      	b.n	14f38 <_write+0x90>
   14ede:	f010 0f06 	tst.w	r0, #6
   14ee2:	d01b      	beq.n	14f1c <_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   14ee4:	4e17      	ldr	r6, [pc, #92]	; (14f44 <_write+0x9c>)
   14ee6:	6830      	ldr	r0, [r6, #0]
   14ee8:	b130      	cbz	r0, 14ef8 <_write+0x50>
   14eea:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   14eec:	eba8 0307 	sub.w	r3, r8, r7
   14ef0:	429c      	cmp	r4, r3
   14ef2:	dc0e      	bgt.n	14f12 <_write+0x6a>
   14ef4:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   14ef8:	1a20      	subs	r0, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   14efa:	1c43      	adds	r3, r0, #1
   14efc:	d0ec      	beq.n	14ed8 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   14efe:	42a0      	cmp	r0, r4
   14f00:	d0ea      	beq.n	14ed8 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   14f02:	4b11      	ldr	r3, [pc, #68]	; (14f48 <_write+0xa0>)
   14f04:	1a20      	subs	r0, r4, r0
   14f06:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   14f0a:	685a      	ldr	r2, [r3, #4]
   14f0c:	4402      	add	r2, r0
   14f0e:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   14f10:	e012      	b.n	14f38 <_write+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   14f12:	6833      	ldr	r3, [r6, #0]
   14f14:	f818 0b01 	ldrb.w	r0, [r8], #1
   14f18:	4798      	blx	r3
   14f1a:	e7e7      	b.n	14eec <_write+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   14f1c:	4b0a      	ldr	r3, [pc, #40]	; (14f48 <_write+0xa0>)
   14f1e:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   14f22:	68d8      	ldr	r0, [r3, #12]
   14f24:	2800      	cmp	r0, #0
   14f26:	d0cb      	beq.n	14ec0 <_write+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   14f28:	ab01      	add	r3, sp, #4
   14f2a:	4622      	mov	r2, r4
   14f2c:	4639      	mov	r1, r7
   14f2e:	f7fd fdea 	bl	12b06 <f_write>
   14f32:	b120      	cbz	r0, 14f3e <_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   14f34:	f7ff fe9b 	bl	14c6e <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   14f38:	b002      	add	sp, #8
   14f3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   14f3e:	9801      	ldr	r0, [sp, #4]
   14f40:	e7da      	b.n	14ef8 <_write+0x50>
   14f42:	bf00      	nop
   14f44:	2007c538 	.word	0x2007c538
   14f48:	2007c540 	.word	0x2007c540

00014f4c <_close>:
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
}

int _close(int fd)
{
   14f4c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   14f4e:	f7ff fedf 	bl	14d10 <remap_handle>
   14f52:	f7ff feb7 	bl	14cc4 <findslot>
   14f56:	2806      	cmp	r0, #6
   14f58:	d106      	bne.n	14f68 <_close+0x1c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14f5a:	f003 fd29 	bl	189b0 <__errno>
   14f5e:	2309      	movs	r3, #9
   14f60:	6003      	str	r3, [r0, #0]
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   14f62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14f66:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   14f68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14f6c:	4b0b      	ldr	r3, [pc, #44]	; (14f9c <_close+0x50>)
   14f6e:	0100      	lsls	r0, r0, #4
   14f70:	181c      	adds	r4, r3, r0
   14f72:	501a      	str	r2, [r3, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   14f74:	68e0      	ldr	r0, [r4, #12]
   14f76:	b908      	cbnz	r0, 14f7c <_close+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   14f78:	2000      	movs	r0, #0
   14f7a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   14f7c:	f7fd fede 	bl	12d3c <f_close>
   14f80:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   14f82:	68e0      	ldr	r0, [r4, #12]
   14f84:	f003 ff66 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   14f88:	2300      	movs	r3, #0
   14f8a:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   14f8c:	2d00      	cmp	r5, #0
   14f8e:	d0f3      	beq.n	14f78 <_close+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   14f90:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   14f92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   14f96:	f7ff be6a 	b.w	14c6e <remap_fatfs_errors>
   14f9a:	bf00      	nop
   14f9c:	2007c540 	.word	0x2007c540

00014fa0 <_fstat>:
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   14fa0:	b508      	push	{r3, lr}
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14fa2:	f003 fd05 	bl	189b0 <__errno>
   14fa6:	2358      	movs	r3, #88	; 0x58
   14fa8:	6003      	str	r3, [r0, #0]
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   14faa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14fae:	bd08      	pop	{r3, pc}

00014fb0 <_isatty>:
_isatty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   14fb0:	4b07      	ldr	r3, [pc, #28]	; (14fd0 <_isatty+0x20>)
   14fb2:	681b      	ldr	r3, [r3, #0]
   14fb4:	689a      	ldr	r2, [r3, #8]
   14fb6:	4282      	cmp	r2, r0
   14fb8:	d007      	beq.n	14fca <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   14fba:	685a      	ldr	r2, [r3, #4]
   14fbc:	4282      	cmp	r2, r0
   14fbe:	d004      	beq.n	14fca <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   14fc0:	68db      	ldr	r3, [r3, #12]
   14fc2:	1a1b      	subs	r3, r3, r0
   14fc4:	4258      	negs	r0, r3
   14fc6:	4158      	adcs	r0, r3
   14fc8:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   14fca:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   14fcc:	4770      	bx	lr
   14fce:	bf00      	nop
   14fd0:	2007c0e0 	.word	0x2007c0e0

00014fd4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
    I2C_SET_READ_MODE(address);
    return transfer(address, NULL, 0, rdata, rlength);
}

bool I2C_Base::transfer(uint8_t address, uint8_t * wdata, uint32_t wlength, uint8_t * rdata, uint32_t rlength)
{
   14fd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    bool status = false;
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   14fd8:	f890 5105 	ldrb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
{
   14fdc:	4604      	mov	r4, r0
   14fde:	468a      	mov	sl, r1
   14fe0:	4617      	mov	r7, r2
   14fe2:	4699      	mov	r9, r3
   14fe4:	9e08      	ldr	r6, [sp, #32]
   14fe6:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   14fea:	b11d      	cbz	r5, 14ff4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    {
        return status;
   14fec:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:130

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   14fee:	4628      	mov	r0, r5
   14ff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 1)
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   14ff4:	b90a      	cbnz	r2, 14ffa <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 2)
   14ff6:	2e00      	cmp	r6, #0
   14ff8:	d0f8      	beq.n	14fec <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:98
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   14ffa:	f001 fe71 	bl	16ce0 <xTaskGetSchedulerState>
   14ffe:	2802      	cmp	r0, #2
   15000:	d035      	beq.n	1506e <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x9a>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
/// Private ///

void I2C_Base::i2cKickOffTransfer(uint8_t addr, uint8_t * wbytes, uint32_t wlength, uint8_t * rbytes, uint32_t rlength)
{
    mTransaction.slaveAddr      = addr;
    mTransaction.error          = 0;
   15002:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mTransaction.dataWrite      = wbytes;
    mTransaction.writeLength    = wlength;
    mTransaction.dataRead       = rbytes;
    mTransaction.readLength     = rlength;
    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   15004:	2220      	movs	r2, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   15006:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   1500a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   1500e:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   15012:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   15016:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   1501a:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   1501e:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   15022:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15024:	f7fb fa30 	bl	10488 <sys_get_uptime_us>
   15028:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1502c:	2300      	movs	r3, #0
   1502e:	f003 fb2b 	bl	18688 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:103
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   15032:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   15036:	f141 0700 	adc.w	r7, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:104
        while (!xSemaphoreTake(mTransferCompleteSignal, 0))
   1503a:	2300      	movs	r3, #0
   1503c:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   15040:	461a      	mov	r2, r3
   15042:	4619      	mov	r1, r3
   15044:	f001 fa54 	bl	164f0 <xQueueGenericReceive>
   15048:	b128      	cbz	r0, 15056 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
        status = (0 == mTransaction.error);
   1504a:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   1504e:	fab5 f585 	clz	r5, r5
   15052:	096d      	lsrs	r5, r5, #5
   15054:	e7cb      	b.n	14fee <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15056:	f7fb fa17 	bl	10488 <sys_get_uptime_us>
   1505a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1505e:	2300      	movs	r3, #0
   15060:	f003 fb12 	bl	18688 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:106
            if (sys_get_uptime_ms() > timeout)
   15064:	428f      	cmp	r7, r1
   15066:	bf08      	it	eq
   15068:	4286      	cmpeq	r6, r0
   1506a:	d2e6      	bcs.n	1503a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x66>
   1506c:	e7ed      	b.n	1504a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   1506e:	2300      	movs	r3, #0
   15070:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15074:	4619      	mov	r1, r3
   15076:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   1507a:	f001 fa39 	bl	164f0 <xQueueGenericReceive>
   1507e:	2800      	cmp	r0, #0
   15080:	d0b4      	beq.n	14fec <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:117
        xSemaphoreTake(mTransferCompleteSignal, 0);
   15082:	2300      	movs	r3, #0
   15084:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   15088:	461a      	mov	r2, r3
   1508a:	4619      	mov	r1, r3
   1508c:	f001 fa30 	bl	164f0 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   15090:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   15092:	2120      	movs	r1, #32
   15094:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   15098:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   1509c:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   150a0:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   150a4:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   150a8:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   150ac:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   150b0:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   150b4:	6011      	str	r1, [r2, #0]
_ZN8I2C_Base8transferEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   150b6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   150ba:	4619      	mov	r1, r3
   150bc:	f001 fa18 	bl	164f0 <xQueueGenericReceive>
   150c0:	b120      	cbz	r0, 150cc <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:123
            status = (0 == mTransaction.error);
   150c2:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   150c6:	fab5 f585 	clz	r5, r5
   150ca:	096d      	lsrs	r5, r5, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
        xSemaphoreGive(mI2CMutex);
   150cc:	2300      	movs	r3, #0
   150ce:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   150d2:	461a      	mov	r2, r3
   150d4:	4619      	mov	r1, r3
   150d6:	f001 f903 	bl	162e0 <xQueueGenericSend>
   150da:	e788      	b.n	14fee <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>

000150dc <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base21writeRegisterThenReadEhPhmS0_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   150dc:	b410      	push	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   150de:	f041 0101 	orr.w	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:65
}
   150e2:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   150e4:	f7ff bf76 	b.w	14fd4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>

000150e8 <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   150e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:48
    uint8_t register_return = 0;
   150ea:	2300      	movs	r3, #0
   150ec:	f88d 3017 	strb.w	r3, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   150f0:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   150f2:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   150f6:	f10d 0217 	add.w	r2, sp, #23
   150fa:	9200      	str	r2, [sp, #0]
   150fc:	9301      	str	r3, [sp, #4]
   150fe:	f10d 020f 	add.w	r2, sp, #15
   15102:	f7ff ffeb 	bl	150dc <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
}
   15106:	f89d 0017 	ldrb.w	r0, [sp, #23]
   1510a:	b007      	add	sp, #28
   1510c:	f85d fb04 	ldr.w	pc, [sp], #4

00015110 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
{
   15110:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   15112:	ac04      	add	r4, sp, #16
   15114:	f804 2d01 	strb.w	r2, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:81
    return writeRegisterThenRead(deviceAddress, &firstReg, 1, pData, transferSize);
   15118:	9a06      	ldr	r2, [sp, #24]
   1511a:	9300      	str	r3, [sp, #0]
   1511c:	9201      	str	r2, [sp, #4]
   1511e:	2301      	movs	r3, #1
   15120:	4622      	mov	r2, r4
   15122:	f7ff ffdb 	bl	150dc <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:82
}
   15126:	b004      	add	sp, #16
   15128:	bd10      	pop	{r4, pc}

0001512a <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
{
   1512a:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:77
    return transfer(address, wdata, wlength, NULL, 0);
   1512c:	2400      	movs	r4, #0
   1512e:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   15132:	9401      	str	r4, [sp, #4]
   15134:	9400      	str	r4, [sp, #0]
   15136:	f7ff ff4d 	bl	14fd4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:78
}
   1513a:	b002      	add	sp, #8
   1513c:	bd10      	pop	{r4, pc}

0001513e <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
{
   1513e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:55
    writeBytes[0] = registerAddress;
   15140:	f88d 2004 	strb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:56
    writeBytes[1] = value;
   15144:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return writeRegisters(deviceAddress, writeBytes, 2);
   15148:	aa01      	add	r2, sp, #4
   1514a:	2302      	movs	r3, #2
   1514c:	f7ff ffed 	bl	1512a <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:59
}
   15150:	b003      	add	sp, #12
   15152:	f85d fb04 	ldr.w	pc, [sp], #4

00015156 <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:84
{
   15156:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
    return transfer(address, NULL, 0, rdata, rlength);
   15158:	e88d 000c 	stmia.w	sp, {r2, r3}
   1515c:	2300      	movs	r3, #0
   1515e:	f041 0101 	orr.w	r1, r1, #1
   15162:	461a      	mov	r2, r3
   15164:	f7ff ff36 	bl	14fd4 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
}
   15168:	b003      	add	sp, #12
   1516a:	f85d fb04 	ldr.w	pc, [sp], #4

0001516e <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   1516e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
{
   15170:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   15172:	aa02      	add	r2, sp, #8
   15174:	f802 3d01 	strb.w	r3, [r2, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
    return readRegisters(address, &notUsed, lenZeroToTestDeviceReady);
   15178:	f7ff ffed 	bl	15156 <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:140
}
   1517c:	b003      	add	sp, #12
   1517e:	f85d fb04 	ldr.w	pc, [sp], #4
   15182:	Address 0x0000000000015182 is out of bounds.


00015184 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   15184:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   15186:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   15188:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   1518a:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
   1518e:	f880 5105 	strb.w	r5, [r0, #261]	; 0x105
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   15192:	2001      	movs	r0, #1
   15194:	f001 f926 	bl	163e4 <xQueueCreateMutex>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   15198:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   1519a:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   1519e:	4629      	mov	r1, r5
   151a0:	2001      	movs	r0, #1
   151a2:	f001 f883 	bl	162ac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   151a6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   151aa:	4a0c      	ldr	r2, [pc, #48]	; (151dc <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   151ac:	f8c4 010c 	str.w	r0, [r4, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   151b0:	4293      	cmp	r3, r2
   151b2:	d00c      	beq.n	151ce <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4a>
   151b4:	f502 2288 	add.w	r2, r2, #278528	; 0x44000
   151b8:	4293      	cmp	r3, r2
   151ba:	d00a      	beq.n	151d2 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4e>
   151bc:	f5a2 2204 	sub.w	r2, r2, #540672	; 0x84000
   151c0:	4293      	cmp	r3, r2
   151c2:	d108      	bne.n	151d6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:156
            mIRQ = I2C0_IRQn;
   151c4:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   151c6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:168
}
   151ca:	4620      	mov	r0, r4
   151cc:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:159
            mIRQ = I2C1_IRQn;
   151ce:	230b      	movs	r3, #11
   151d0:	e7f9      	b.n	151c6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:162
            mIRQ = I2C2_IRQn;
   151d2:	230c      	movs	r3, #12
   151d4:	e7f7      	b.n	151c6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   151d6:	2363      	movs	r3, #99	; 0x63
   151d8:	e7f5      	b.n	151c6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
   151da:	bf00      	nop
   151dc:	4005c000 	.word	0x4005c000

000151e0 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   151e0:	f990 3104 	ldrsb.w	r3, [r0, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   151e4:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   151e6:	2b0b      	cmp	r3, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   151e8:	4605      	mov	r5, r0
   151ea:	460c      	mov	r4, r1
   151ec:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   151ee:	d035      	beq.n	1525c <I2C_Base::init(unsigned long, unsigned long)+0x7c>
   151f0:	2b0c      	cmp	r3, #12
   151f2:	d036      	beq.n	15262 <I2C_Base::init(unsigned long, unsigned long)+0x82>
   151f4:	2b0a      	cmp	r3, #10
   151f6:	d137      	bne.n	15268 <I2C_Base::init(unsigned long, unsigned long)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:175
        case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   151f8:	2101      	movs	r1, #1
   151fa:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   151fc:	f7fb fb7c 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   15200:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   15204:	bf98      	it	ls
   15206:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   1520a:	f04f 026c 	mov.w	r2, #108	; 0x6c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   1520e:	bf94      	ite	ls
   15210:	4371      	mulls	r1, r6
   15212:	4916      	ldrhi	r1, [pc, #88]	; (1526c <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   15214:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   15218:	fbb4 f1f1 	udiv	r1, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   1521c:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   1521e:	2228      	movs	r2, #40	; 0x28
   15220:	2064      	movs	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   15222:	0849      	lsrs	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   15224:	434a      	muls	r2, r1
   15226:	fbb2 f2f0 	udiv	r2, r2, r0
   1522a:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   1522c:	223c      	movs	r2, #60	; 0x3c
   1522e:	4351      	muls	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   15230:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   15232:	fbb1 f1f0 	udiv	r1, r1, r0
   15236:	6159      	str	r1, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   15238:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2ADR1 = 0;
   1523a:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:202
    mpI2CRegs->I2ADR2 = 0;
   1523c:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    mpI2CRegs->I2ADR3 = 0;
   1523e:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
    mpI2CRegs->I2CONSET = 0x40;
   15240:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15242:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
   15244:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:208
    NVIC_EnableIRQ(mIRQ);
   15246:	f995 3104 	ldrsb.w	r3, [r5, #260]	; 0x104
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1524a:	4a09      	ldr	r2, [pc, #36]	; (15270 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   1524c:	0959      	lsrs	r1, r3, #5
   1524e:	f003 031f 	and.w	r3, r3, #31
   15252:	fa00 f303 	lsl.w	r3, r0, r3
   15256:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   1525a:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
        case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   1525c:	2101      	movs	r1, #1
   1525e:	2013      	movs	r0, #19
   15260:	e7cc      	b.n	151fc <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   15262:	2101      	movs	r1, #1
   15264:	201a      	movs	r0, #26
   15266:	e7c9      	b.n	151fc <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:178
        default: return false;
   15268:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:211
}
   1526a:	bd70      	pop	{r4, r5, r6, pc}
   1526c:	000186a0 	.word	0x000186a0
   15270:	e000e100 	.word	0xe000e100

00015274 <I2C_Base::setStop()>:
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
{
    mpI2CRegs->I2CONSET = (1 << 5);
}
inline void I2C_Base::clearSTARTFlag()
{
    mpI2CRegs->I2CONCLR = (1 << 5);
   15274:	2220      	movs	r2, #32
   15276:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
   1527a:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:250
    mpI2CRegs->I2CONCLR = (1 << 2);
}
inline void I2C_Base::setStop()
{
    clearSTARTFlag();
    mpI2CRegs->I2CONSET = (1 << 4);
   1527c:	2210      	movs	r2, #16
   1527e:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   15280:	2208      	movs	r2, #8
   15282:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:252
    clearSIFlag();
    while ((mpI2CRegs->I2CONSET & (1 << 4)));
   15284:	681a      	ldr	r2, [r3, #0]
   15286:	06d2      	lsls	r2, r2, #27
   15288:	d4fc      	bmi.n	15284 <I2C_Base::setStop()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:253
    if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   1528a:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
   1528e:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:255
    {
        state = readComplete;
   15290:	bf4c      	ite	mi
   15292:	2301      	movmi	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:259
    }
    else
    {
        state = writeComplete;
   15294:	2302      	movpl	r3, #2
   15296:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
   1529a:	4770      	bx	lr

0001529c <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
        readModeNackedBySlave = 0x48,
        dataAvailableAckSent  = 0x50,
        dataAvailableNackSent = 0x58,
    };

    state = busy;
   1529c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   1529e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
    state = busy;
   152a0:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
     *  For 2+ bytes:  dataAvailableAckSent --> ... (dataAvailableAckSent) --> dataAvailableNackSent --> (stop)
     *  For 1  byte :  dataAvailableNackSent --> (stop)
     ***********************************************************************************************************
     */

    switch (mpI2CRegs->I2STAT)
   152a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   152a8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   152aa:	685a      	ldr	r2, [r3, #4]
   152ac:	2a28      	cmp	r2, #40	; 0x28
   152ae:	d044      	beq.n	1533a <I2C_Base::i2cStateMachine()+0x9e>
   152b0:	d80d      	bhi.n	152ce <I2C_Base::i2cStateMachine()+0x32>
   152b2:	2a10      	cmp	r2, #16
   152b4:	d027      	beq.n	15306 <I2C_Base::i2cStateMachine()+0x6a>
   152b6:	2a18      	cmp	r2, #24
   152b8:	d028      	beq.n	1530c <I2C_Base::i2cStateMachine()+0x70>
   152ba:	2a08      	cmp	r2, #8
   152bc:	d10c      	bne.n	152d8 <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:318
    {
        case start:
            //u0_dbg_printf("sta\n");
            if(mTransaction.writeLength == 0)
   152be:	f8d0 1118 	ldr.w	r1, [r0, #280]	; 0x118
   152c2:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   152c6:	b9b1      	cbnz	r1, 152f6 <I2C_Base::i2cStateMachine()+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            }
            clearSIFlag();
            break;
        case repeatStart:
            //u0_dbg_printf("rsta-%X\n", I2C_READ_ADDR(mTransaction.slaveAddr));
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   152c8:	f042 0201 	orr.w	r2, r2, #1
   152cc:	e015      	b.n	152fa <I2C_Base::i2cStateMachine()+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   152ce:	2a40      	cmp	r2, #64	; 0x40
   152d0:	d03e      	beq.n	15350 <I2C_Base::i2cStateMachine()+0xb4>
   152d2:	d805      	bhi.n	152e0 <I2C_Base::i2cStateMachine()+0x44>
   152d4:	2a38      	cmp	r2, #56	; 0x38
   152d6:	d059      	beq.n	1538c <I2C_Base::i2cStateMachine()+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:436
        case slaveAddressNacked:    // no break
        case dataNackedBySlave:     // no break
        case readModeNackedBySlave: // no break
        case busError:              // no break
        default:
            mTransaction.error = mpI2CRegs->I2STAT;
   152d8:	685b      	ldr	r3, [r3, #4]
   152da:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
   152de:	e01d      	b.n	1531c <I2C_Base::i2cStateMachine()+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   152e0:	2a50      	cmp	r2, #80	; 0x50
   152e2:	d03f      	beq.n	15364 <I2C_Base::i2cStateMachine()+0xc8>
   152e4:	2a58      	cmp	r2, #88	; 0x58
   152e6:	d1f7      	bne.n	152d8 <I2C_Base::i2cStateMachine()+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:421
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   152e8:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   152ec:	689b      	ldr	r3, [r3, #8]
   152ee:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   152f0:	f7ff ffc0 	bl	15274 <I2C_Base::setStop()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:438
            break;
   152f4:	e004      	b.n	15300 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
                mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   152f6:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   152fa:	609a      	str	r2, [r3, #8]
_ZN8I2C_Base11clearSIFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   152fc:	2208      	movs	r2, #8
   152fe:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:442
    }

    return state;
}
   15300:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
   15304:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   15306:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   1530a:	e7dd      	b.n	152c8 <I2C_Base::i2cStateMachine()+0x2c>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   1530c:	2220      	movs	r2, #32
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   1530e:	f8d0 1120 	ldr.w	r1, [r0, #288]	; 0x120
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   15312:	619a      	str	r2, [r3, #24]
   15314:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   15318:	b911      	cbnz	r1, 15320 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:340 (discriminator 1)
   1531a:	b90a      	cbnz	r2, 15320 <I2C_Base::i2cStateMachine()+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   1531c:	4620      	mov	r0, r4
   1531e:	e7e7      	b.n	152f0 <I2C_Base::i2cStateMachine()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:345
            else if(0 != mTransaction.writeLength)
   15320:	2a00      	cmp	r2, #0
   15322:	d0ed      	beq.n	15300 <I2C_Base::i2cStateMachine()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   15324:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   15328:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   1532a:	f811 0b01 	ldrb.w	r0, [r1], #1
   1532e:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
                ++mTransaction.dataWrite;
   15330:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   15334:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
   15338:	e7e0      	b.n	152fc <I2C_Base::i2cStateMachine()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:357
            if (0 == mTransaction.writeLength)
   1533a:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
   1533e:	2a00      	cmp	r2, #0
   15340:	d1f0      	bne.n	15324 <I2C_Base::i2cStateMachine()+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:360
                if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   15342:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   15346:	07d2      	lsls	r2, r2, #31
   15348:	d5e8      	bpl.n	1531c <I2C_Base::i2cStateMachine()+0x80>
_ZN8I2C_Base12setSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:233
    mpI2CRegs->I2CONSET = (1 << 5);
   1534a:	2220      	movs	r2, #32
   1534c:	601a      	str	r2, [r3, #0]
   1534e:	e7d5      	b.n	152fc <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base14clearSTARTFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   15350:	2220      	movs	r2, #32
   15352:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:387
            if (mTransaction.readLength > 1)
   15354:	f8d0 2120 	ldr.w	r2, [r0, #288]	; 0x120
   15358:	2a01      	cmp	r2, #1
   1535a:	f04f 0204 	mov.w	r2, #4
   1535e:	d8f5      	bhi.n	1534c <I2C_Base::i2cStateMachine()+0xb0>
_ZN8I2C_Base11setNackFlagEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:245
    mpI2CRegs->I2CONCLR = (1 << 2);
   15360:	619a      	str	r2, [r3, #24]
   15362:	e7cb      	b.n	152fc <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:400
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   15364:	689b      	ldr	r3, [r3, #8]
   15366:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   1536a:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
            ++mTransaction.dataRead;
   1536c:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
   15370:	2204      	movs	r2, #4
   15372:	3301      	adds	r3, #1
   15374:	f8c0 311c 	str.w	r3, [r0, #284]	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   15378:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
   1537c:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   1537e:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   15380:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   15384:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   15388:	d1e0      	bne.n	1534c <I2C_Base::i2cStateMachine()+0xb0>
   1538a:	e7e9      	b.n	15360 <I2C_Base::i2cStateMachine()+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   1538c:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   15390:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   15392:	f012 0f01 	tst.w	r2, #1
   15396:	bf14      	ite	ne
   15398:	2201      	movne	r2, #1
   1539a:	2202      	moveq	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   1539c:	f880 3111 	strb.w	r3, [r0, #273]	; 0x111
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   153a0:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:429
            break;
   153a4:	e7ac      	b.n	15300 <I2C_Base::i2cStateMachine()+0x64>
   153a6:	Address 0x00000000000153a6 is out of bounds.


000153a8 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:36
{
   153a8:	b513      	push	{r0, r1, r4, lr}
   153aa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:38
    if (busy != i2cStateMachine())
   153ac:	f7ff ff76 	bl	1529c <I2C_Base::i2cStateMachine()>
   153b0:	b188      	cbz	r0, 153d6 <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:40
        long higherPriorityTaskWaiting = 0;
   153b2:	2300      	movs	r3, #0
   153b4:	a902      	add	r1, sp, #8
   153b6:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   153ba:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   153be:	f001 f863 	bl	16488 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   153c2:	9b01      	ldr	r3, [sp, #4]
   153c4:	b13b      	cbz	r3, 153d6 <I2C_Base::handleInterrupt()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42 (discriminator 1)
   153c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   153ca:	4b04      	ldr	r3, [pc, #16]	; (153dc <I2C_Base::handleInterrupt()+0x34>)
   153cc:	601a      	str	r2, [r3, #0]
   153ce:	f3bf 8f4f 	dsb	sy
   153d2:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
}
   153d6:	b002      	add	sp, #8
   153d8:	bd10      	pop	{r4, pc}
   153da:	bf00      	nop
   153dc:	e000ed04 	.word	0xe000ed04

000153e0 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   153e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   153e2:	4604      	mov	r4, r0
   153e4:	4615      	mov	r5, r2
   153e6:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   153ea:	f001 fc79 	bl	16ce0 <xTaskGetSchedulerState>
   153ee:	2802      	cmp	r0, #2
   153f0:	d009      	beq.n	15406 <UartDev::putChar(char, unsigned int)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   153f2:	6963      	ldr	r3, [r4, #20]
   153f4:	f89d 2007 	ldrb.w	r2, [sp, #7]
   153f8:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   153fa:	7d1a      	ldrb	r2, [r3, #20]
   153fc:	0652      	lsls	r2, r2, #25
   153fe:	d5fc      	bpl.n	153fa <UartDev::putChar(char, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   15400:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   15402:	b003      	add	sp, #12
   15404:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   15406:	2300      	movs	r3, #0
   15408:	462a      	mov	r2, r5
   1540a:	f10d 0107 	add.w	r1, sp, #7
   1540e:	69e0      	ldr	r0, [r4, #28]
   15410:	f000 ff66 	bl	162e0 <xQueueGenericSend>
   15414:	2800      	cmp	r0, #0
   15416:	d0f4      	beq.n	15402 <UartDev::putChar(char, unsigned int)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   15418:	6963      	ldr	r3, [r4, #20]
   1541a:	7d1b      	ldrb	r3, [r3, #20]
   1541c:	065b      	lsls	r3, r3, #25
   1541e:	d5ef      	bpl.n	15400 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   15420:	2300      	movs	r3, #0
   15422:	f10d 0107 	add.w	r1, sp, #7
   15426:	461a      	mov	r2, r3
   15428:	69e0      	ldr	r0, [r4, #28]
   1542a:	f001 f861 	bl	164f0 <xQueueGenericReceive>
   1542e:	2800      	cmp	r0, #0
   15430:	d0e6      	beq.n	15400 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   15432:	6963      	ldr	r3, [r4, #20]
   15434:	f89d 2007 	ldrb.w	r2, [sp, #7]
   15438:	701a      	strb	r2, [r3, #0]
   1543a:	e7e1      	b.n	15400 <UartDev::putChar(char, unsigned int)+0x20>

0001543c <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   1543c:	b510      	push	{r4, lr}
   1543e:	4604      	mov	r4, r0
   15440:	4b02      	ldr	r3, [pc, #8]	; (1544c <UartDev::~UartDev()+0x10>)
   15442:	6003      	str	r3, [r0, #0]
   15444:	f000 f8da 	bl	155fc <CharDev::~CharDev()>
   15448:	4620      	mov	r0, r4
   1544a:	bd10      	pop	{r4, pc}
   1544c:	0001fa54 	.word	0x0001fa54

00015450 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   15450:	b510      	push	{r4, lr}
   15452:	4604      	mov	r4, r0
   15454:	f7ff fff2 	bl	1543c <UartDev::~UartDev()>
   15458:	4620      	mov	r0, r4
   1545a:	212c      	movs	r1, #44	; 0x2c
   1545c:	f002 f95d 	bl	1771a <operator delete(void*, unsigned int)>
   15460:	4620      	mov	r0, r4
   15462:	bd10      	pop	{r4, pc}

00015464 <UartDev::flush()>:
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   15464:	b510      	push	{r4, lr}
   15466:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15468:	f001 fc3a 	bl	16ce0 <xTaskGetSchedulerState>
   1546c:	2802      	cmp	r0, #2
   1546e:	d107      	bne.n	15480 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   15470:	69e0      	ldr	r0, [r4, #28]
   15472:	f001 f90b 	bl	1668c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   15476:	b118      	cbz	r0, 15480 <UartDev::flush()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   15478:	2001      	movs	r0, #1
   1547a:	f001 fb3d 	bl	16af8 <vTaskDelay>
   1547e:	e7f7      	b.n	15470 <UartDev::flush()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   15480:	2001      	movs	r0, #1
   15482:	bd10      	pop	{r4, pc}

00015484 <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   15484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15486:	4606      	mov	r6, r0
   15488:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   1548a:	460f      	mov	r7, r1
   1548c:	b909      	cbnz	r1, 15492 <UartDev::getChar(char*, unsigned int)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   1548e:	2000      	movs	r0, #0
   15490:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   15492:	6983      	ldr	r3, [r0, #24]
   15494:	2b00      	cmp	r3, #0
   15496:	d0fa      	beq.n	1548e <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15498:	f001 fc22 	bl	16ce0 <xTaskGetSchedulerState>
   1549c:	2802      	cmp	r0, #2
   1549e:	d109      	bne.n	154b4 <UartDev::getChar(char*, unsigned int)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   154a0:	2300      	movs	r3, #0
   154a2:	4622      	mov	r2, r4
   154a4:	4639      	mov	r1, r7
   154a6:	69b0      	ldr	r0, [r6, #24]
   154a8:	f001 f822 	bl	164f0 <xQueueGenericReceive>
   154ac:	3000      	adds	r0, #0
   154ae:	bf18      	it	ne
   154b0:	2001      	movne	r0, #1
   154b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   154b4:	f7fa ffe8 	bl	10488 <sys_get_uptime_us>
   154b8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   154bc:	2300      	movs	r3, #0
   154be:	f003 f8e3 	bl	18688 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   154c2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   154c4:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   154c6:	2300      	movs	r3, #0
   154c8:	4639      	mov	r1, r7
   154ca:	461a      	mov	r2, r3
   154cc:	69b0      	ldr	r0, [r6, #24]
   154ce:	f001 f80f 	bl	164f0 <xQueueGenericReceive>
   154d2:	b958      	cbnz	r0, 154ec <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   154d4:	f7fa ffd8 	bl	10488 <sys_get_uptime_us>
   154d8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   154dc:	2300      	movs	r3, #0
   154de:	f003 f8d3 	bl	18688 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   154e2:	428d      	cmp	r5, r1
   154e4:	bf08      	it	eq
   154e6:	4284      	cmpeq	r4, r0
   154e8:	d2ed      	bcs.n	154c6 <UartDev::getChar(char*, unsigned int)+0x42>
   154ea:	e7d0      	b.n	1548e <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   154ec:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   154ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000154f0 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   154f0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   154f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   154f4:	6942      	ldr	r2, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   154f6:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   154f8:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   154fc:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   154fe:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   15500:	f003 030e 	and.w	r3, r3, #14
   15504:	2b04      	cmp	r3, #4
   15506:	d021      	beq.n	1554c <UartDev::handleInterrupt()+0x5c>
   15508:	2b0c      	cmp	r3, #12
   1550a:	d01f      	beq.n	1554c <UartDev::handleInterrupt()+0x5c>
   1550c:	2b02      	cmp	r3, #2
   1550e:	d13f      	bne.n	15590 <UartDev::handleInterrupt()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   15510:	69c0      	ldr	r0, [r0, #28]
   15512:	f001 f8c4 	bl	1669e <uxQueueMessagesWaitingFromISR>
   15516:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   15518:	4298      	cmp	r0, r3
   1551a:	d903      	bls.n	15524 <UartDev::handleInterrupt()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   1551c:	69e0      	ldr	r0, [r4, #28]
   1551e:	f001 f8be 	bl	1669e <uxQueueMessagesWaitingFromISR>
   15522:	84e0      	strh	r0, [r4, #38]	; 0x26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   15524:	2610      	movs	r6, #16
   15526:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   15528:	aa01      	add	r2, sp, #4
   1552a:	f10d 0103 	add.w	r1, sp, #3
   1552e:	69e0      	ldr	r0, [r4, #28]
   15530:	f001 f878 	bl	16624 <xQueueReceiveFromISR>
   15534:	2800      	cmp	r0, #0
   15536:	d12e      	bne.n	15596 <UartDev::handleInterrupt()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   15538:	b35d      	cbz	r5, 15592 <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   1553a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1553e:	4b1b      	ldr	r3, [pc, #108]	; (155ac <UartDev::handleInterrupt()+0xbc>)
   15540:	601a      	str	r2, [r3, #0]
   15542:	f3bf 8f4f 	dsb	sy
   15546:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   1554a:	e022      	b.n	15592 <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   1554c:	f001 f9dc 	bl	16908 <xTaskGetTickCountFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   15550:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   15552:	62a0      	str	r0, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   15554:	6963      	ldr	r3, [r4, #20]
   15556:	7d1a      	ldrb	r2, [r3, #20]
   15558:	07d2      	lsls	r2, r2, #31
   1555a:	d50e      	bpl.n	1557a <UartDev::handleInterrupt()+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   1555c:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   1555e:	aa01      	add	r2, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   15560:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   15564:	f10d 0103 	add.w	r1, sp, #3
   15568:	2300      	movs	r3, #0
   1556a:	69a0      	ldr	r0, [r4, #24]
   1556c:	f000 ff4c 	bl	16408 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   15570:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   15572:	2b00      	cmp	r3, #0
   15574:	bf18      	it	ne
   15576:	2501      	movne	r5, #1
   15578:	e7ec      	b.n	15554 <UartDev::handleInterrupt()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   1557a:	69a0      	ldr	r0, [r4, #24]
   1557c:	f001 f88f 	bl	1669e <uxQueueMessagesWaitingFromISR>
   15580:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   15582:	4298      	cmp	r0, r3
   15584:	d9d8      	bls.n	15538 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   15586:	69a0      	ldr	r0, [r4, #24]
   15588:	f001 f889 	bl	1669e <uxQueueMessagesWaitingFromISR>
   1558c:	84a0      	strh	r0, [r4, #36]	; 0x24
   1558e:	e7d3      	b.n	15538 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   15590:	7d13      	ldrb	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   15592:	b002      	add	sp, #8
   15594:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   15596:	6963      	ldr	r3, [r4, #20]
   15598:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1559c:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   1559e:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   155a0:	2b00      	cmp	r3, #0
   155a2:	bf18      	it	ne
   155a4:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   155a6:	3e01      	subs	r6, #1
   155a8:	d0c6      	beq.n	15538 <UartDev::handleInterrupt()+0x48>
   155aa:	e7bd      	b.n	15528 <UartDev::handleInterrupt()+0x38>
   155ac:	e000ed04 	.word	0xe000ed04

000155b0 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   155b0:	b538      	push	{r3, r4, r5, lr}
   155b2:	4604      	mov	r4, r0
   155b4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   155b6:	f000 f811 	bl	155dc <CharDev::CharDev()>
   155ba:	4b06      	ldr	r3, [pc, #24]	; (155d4 <UartDev::UartDev(unsigned int*)+0x24>)
   155bc:	6165      	str	r5, [r4, #20]
   155be:	6023      	str	r3, [r4, #0]
   155c0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   155c2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   155c4:	61a3      	str	r3, [r4, #24]
   155c6:	61e3      	str	r3, [r4, #28]
   155c8:	6223      	str	r3, [r4, #32]
   155ca:	84a3      	strh	r3, [r4, #36]	; 0x24
   155cc:	84e3      	strh	r3, [r4, #38]	; 0x26
   155ce:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   155d0:	bd38      	pop	{r3, r4, r5, pc}
   155d2:	bf00      	nop
   155d4:	0001fa54 	.word	0x0001fa54

000155d8 <CharDev::flush()>:
_ZN7CharDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   155d8:	2001      	movs	r0, #1
   155da:	4770      	bx	lr

000155dc <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   155dc:	4b06      	ldr	r3, [pc, #24]	; (155f8 <CharDev::CharDev()+0x1c>)
   155de:	b510      	push	{r4, lr}
   155e0:	6003      	str	r3, [r0, #0]
   155e2:	2300      	movs	r3, #0
   155e4:	4604      	mov	r4, r0
   155e6:	6043      	str	r3, [r0, #4]
   155e8:	8103      	strh	r3, [r0, #8]
   155ea:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   155ec:	2001      	movs	r0, #1
   155ee:	f000 fef9 	bl	163e4 <xQueueCreateMutex>
   155f2:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   155f4:	4620      	mov	r0, r4
   155f6:	bd10      	pop	{r4, pc}
   155f8:	0001fa84 	.word	0x0001fa84

000155fc <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   155fc:	4b04      	ldr	r3, [pc, #16]	; (15610 <CharDev::~CharDev()+0x14>)
   155fe:	b510      	push	{r4, lr}
   15600:	4604      	mov	r4, r0
   15602:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   15604:	6840      	ldr	r0, [r0, #4]
   15606:	b108      	cbz	r0, 1560c <CharDev::~CharDev()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   15608:	f003 fc24 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   1560c:	4620      	mov	r0, r4
   1560e:	bd10      	pop	{r4, pc}
   15610:	0001fa84 	.word	0x0001fa84

00015614 <RIT_IRQHandler>:
RIT_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   15614:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   15616:	4b04      	ldr	r3, [pc, #16]	; (15628 <RIT_IRQHandler+0x14>)
   15618:	681b      	ldr	r3, [r3, #0]
   1561a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   1561c:	4a03      	ldr	r2, [pc, #12]	; (1562c <RIT_IRQHandler+0x18>)
   1561e:	7a13      	ldrb	r3, [r2, #8]
   15620:	f043 0301 	orr.w	r3, r3, #1
   15624:	7213      	strb	r3, [r2, #8]
   15626:	bd08      	pop	{r3, pc}
   15628:	2007c5a4 	.word	0x2007c5a4
   1562c:	400b0000 	.word	0x400b0000

00015630 <rtc_gettime>:
rtc_gettime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   15630:	b5f0      	push	{r4, r5, r6, r7, lr}
   15632:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15634:	466c      	mov	r4, sp
   15636:	4d0f      	ldr	r5, [pc, #60]	; (15674 <rtc_gettime+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   15638:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1563a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   1563e:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15642:	ae03      	add	r6, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15644:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   15648:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   1564c:	220c      	movs	r2, #12
   1564e:	4631      	mov	r1, r6
   15650:	4620      	mov	r0, r4
   15652:	f003 fc27 	bl	18ea4 <memcmp>
   15656:	b938      	cbnz	r0, 15668 <rtc_gettime+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   15658:	cc03      	ldmia	r4!, {r0, r1}
   1565a:	6038      	str	r0, [r7, #0]
   1565c:	6820      	ldr	r0, [r4, #0]
   1565e:	6079      	str	r1, [r7, #4]
   15660:	60b8      	str	r0, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   15662:	4638      	mov	r0, r7
   15664:	b007      	add	sp, #28
   15666:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15668:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   1566c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   15670:	e7e8      	b.n	15644 <rtc_gettime+0x14>
   15672:	bf00      	nop
   15674:	40024014 	.word	0x40024014

00015678 <rtc_settime>:
rtc_settime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   15678:	2200      	movs	r2, #0
   1567a:	4b18      	ldr	r3, [pc, #96]	; (156dc <rtc_settime+0x64>)
   1567c:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   1567e:	7802      	ldrb	r2, [r0, #0]
   15680:	f3c2 0205 	ubfx	r2, r2, #0, #6
   15684:	f883 2020 	strb.w	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   15688:	7842      	ldrb	r2, [r0, #1]
   1568a:	f3c2 0205 	ubfx	r2, r2, #0, #6
   1568e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   15692:	7882      	ldrb	r2, [r0, #2]
   15694:	f3c2 0204 	ubfx	r2, r2, #0, #5
   15698:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   1569c:	78c2      	ldrb	r2, [r0, #3]
   1569e:	f3c2 0202 	ubfx	r2, r2, #0, #3
   156a2:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   156a6:	7902      	ldrb	r2, [r0, #4]
   156a8:	f3c2 0204 	ubfx	r2, r2, #0, #5
   156ac:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   156b0:	7942      	ldrb	r2, [r0, #5]
   156b2:	f3c2 0203 	ubfx	r2, r2, #0, #4
   156b6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   156ba:	79c1      	ldrb	r1, [r0, #7]
   156bc:	7982      	ldrb	r2, [r0, #6]
   156be:	f001 010f 	and.w	r1, r1, #15
   156c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   156c6:	7a41      	ldrb	r1, [r0, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   156c8:	879a      	strh	r2, [r3, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   156ca:	7a02      	ldrb	r2, [r0, #8]
   156cc:	f001 010f 	and.w	r1, r1, #15
   156d0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   156d4:	869a      	strh	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   156d6:	2201      	movs	r2, #1
   156d8:	721a      	strb	r2, [r3, #8]
   156da:	4770      	bx	lr
   156dc:	40024000 	.word	0x40024000

000156e0 <rtc_init>:
rtc_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   156e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   156e2:	2101      	movs	r1, #1
   156e4:	2009      	movs	r0, #9
   156e6:	f7fb f907 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   156ea:	2201      	movs	r2, #1
   156ec:	4b2f      	ldr	r3, [pc, #188]	; (157ac <rtc_init+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   156ee:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   156f0:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   156f2:	f7ff ff9d 	bl	15630 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   156f6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   156fa:	f603 0326 	addw	r3, r3, #2086	; 0x826
   156fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
   15702:	2b0f      	cmp	r3, #15
   15704:	d81e      	bhi.n	15744 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   15706:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1570a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   1570e:	2b3b      	cmp	r3, #59	; 0x3b
   15710:	dc18      	bgt.n	15744 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   15712:	f89d 3004 	ldrb.w	r3, [sp, #4]
   15716:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1571a:	2b3b      	cmp	r3, #59	; 0x3b
   1571c:	dc12      	bgt.n	15744 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   1571e:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15722:	f003 031f 	and.w	r3, r3, #31
   15726:	2b17      	cmp	r3, #23
   15728:	dc0c      	bgt.n	15744 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   1572a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1572e:	f3c3 030b 	ubfx	r3, r3, #0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   15732:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   15736:	da05      	bge.n	15744 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   15738:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1573c:	f003 030f 	and.w	r3, r3, #15
   15740:	2b0c      	cmp	r3, #12
   15742:	dd2f      	ble.n	157a4 <rtc_init+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   15744:	2201      	movs	r2, #1
   15746:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   1574a:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   1574c:	f362 0304 	bfi	r3, r2, #0, #5
   15750:	f88d 3008 	strb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   15754:	f89d 3009 	ldrb.w	r3, [sp, #9]
   15758:	f362 0303 	bfi	r3, r2, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   1575c:	f240 72da 	movw	r2, #2010	; 0x7da
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   15760:	f88d 3009 	strb.w	r3, [sp, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   15764:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   15768:	f362 030b 	bfi	r3, r2, #0, #12
   1576c:	f8ad 300a 	strh.w	r3, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   15770:	f89d 3007 	ldrb.w	r3, [sp, #7]
   15774:	f36f 0302 	bfc	r3, #0, #3
   15778:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   1577c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15780:	f36f 0304 	bfc	r3, #0, #5
   15784:	f88d 3006 	strb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   15788:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1578c:	f36f 0305 	bfc	r3, #0, #6
   15790:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   15794:	f89d 3004 	ldrb.w	r3, [sp, #4]
   15798:	f36f 0305 	bfc	r3, #0, #6
   1579c:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   157a0:	f7ff ff6a 	bl	15678 <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   157a4:	b005      	add	sp, #20
   157a6:	f85d fb04 	ldr.w	pc, [sp], #4
   157aa:	bf00      	nop
   157ac:	40024000 	.word	0x40024000

000157b0 <handle_eint_list>:
handle_eint_list():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   157b0:	b570      	push	{r4, r5, r6, lr}
   157b2:	4605      	mov	r5, r0
   157b4:	460e      	mov	r6, r1
   157b6:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   157b8:	b10c      	cbz	r4, 157be <handle_eint_list+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   157ba:	682b      	ldr	r3, [r5, #0]
   157bc:	b903      	cbnz	r3, 157c0 <handle_eint_list+0x10>
   157be:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   157c0:	6822      	ldr	r2, [r4, #0]
   157c2:	4213      	tst	r3, r2
   157c4:	d008      	beq.n	157d8 <handle_eint_list+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   157c6:	6863      	ldr	r3, [r4, #4]
   157c8:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   157ca:	6822      	ldr	r2, [r4, #0]
   157cc:	682b      	ldr	r3, [r5, #0]
   157ce:	ea23 0302 	bic.w	r3, r3, r2
   157d2:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   157d4:	6823      	ldr	r3, [r4, #0]
   157d6:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   157d8:	68a4      	ldr	r4, [r4, #8]
   157da:	e7ed      	b.n	157b8 <handle_eint_list+0x8>

000157dc <eint3_enable.isra.0>:
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   157dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   157de:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   157e0:	4084      	lsls	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   157e2:	460f      	mov	r7, r1
   157e4:	4616      	mov	r6, r2
   157e6:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   157e8:	d010      	beq.n	1580c <eint3_enable.isra.0+0x30>
   157ea:	b179      	cbz	r1, 1580c <eint3_enable.isra.0+0x30>
   157ec:	200c      	movs	r0, #12
   157ee:	f003 fb29 	bl	18e44 <malloc>
   157f2:	b158      	cbz	r0, 1580c <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   157f4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   157f8:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   157fa:	e880 0090 	stmia.w	r0, {r4, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   157fe:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   15800:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   15802:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   15804:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15806:	4b02      	ldr	r3, [pc, #8]	; (15810 <eint3_enable.isra.0+0x34>)
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   15808:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1580a:	601a      	str	r2, [r3, #0]
   1580c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1580e:	bf00      	nop
   15810:	e000e100 	.word	0xe000e100

00015814 <EINT3_IRQHandler>:
EINT3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   15814:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   15816:	4c18      	ldr	r4, [pc, #96]	; (15878 <EINT3_IRQHandler+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   15818:	4918      	ldr	r1, [pc, #96]	; (1587c <EINT3_IRQHandler+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   1581a:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   1581c:	4668      	mov	r0, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   1581e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   15820:	68a3      	ldr	r3, [r4, #8]
   15822:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   15824:	6a63      	ldr	r3, [r4, #36]	; 0x24
   15826:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   15828:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1582a:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   1582c:	4b14      	ldr	r3, [pc, #80]	; (15880 <EINT3_IRQHandler+0x6c>)
   1582e:	681a      	ldr	r2, [r3, #0]
   15830:	f7ff ffbe 	bl	157b0 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   15834:	4b13      	ldr	r3, [pc, #76]	; (15884 <EINT3_IRQHandler+0x70>)
   15836:	4911      	ldr	r1, [pc, #68]	; (1587c <EINT3_IRQHandler+0x68>)
   15838:	681a      	ldr	r2, [r3, #0]
   1583a:	a801      	add	r0, sp, #4
   1583c:	f7ff ffb8 	bl	157b0 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   15840:	4b11      	ldr	r3, [pc, #68]	; (15888 <EINT3_IRQHandler+0x74>)
   15842:	4912      	ldr	r1, [pc, #72]	; (1588c <EINT3_IRQHandler+0x78>)
   15844:	681a      	ldr	r2, [r3, #0]
   15846:	a802      	add	r0, sp, #8
   15848:	f7ff ffb2 	bl	157b0 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   1584c:	4b10      	ldr	r3, [pc, #64]	; (15890 <EINT3_IRQHandler+0x7c>)
   1584e:	490f      	ldr	r1, [pc, #60]	; (1588c <EINT3_IRQHandler+0x78>)
   15850:	681a      	ldr	r2, [r3, #0]
   15852:	a803      	add	r0, sp, #12
   15854:	f7ff ffac 	bl	157b0 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   15858:	9b00      	ldr	r3, [sp, #0]
   1585a:	b90b      	cbnz	r3, 15860 <EINT3_IRQHandler+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   1585c:	9b01      	ldr	r3, [sp, #4]
   1585e:	b113      	cbz	r3, 15866 <EINT3_IRQHandler+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   15860:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   15864:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   15866:	9b02      	ldr	r3, [sp, #8]
   15868:	b90b      	cbnz	r3, 1586e <EINT3_IRQHandler+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   1586a:	9b03      	ldr	r3, [sp, #12]
   1586c:	b113      	cbz	r3, 15874 <EINT3_IRQHandler+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   1586e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   15872:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   15874:	b004      	add	sp, #16
   15876:	bd10      	pop	{r4, pc}
   15878:	40028080 	.word	0x40028080
   1587c:	4002808c 	.word	0x4002808c
   15880:	2007c5ac 	.word	0x2007c5ac
   15884:	2007c5a8 	.word	0x2007c5a8
   15888:	2007c5b4 	.word	0x2007c5b4
   1588c:	400280ac 	.word	0x400280ac
   15890:	2007c5b0 	.word	0x2007c5b0

00015894 <eint3_enable_port0>:
eint3_enable_port0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   15894:	b410      	push	{r4}
   15896:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   15898:	2900      	cmp	r1, #0
   1589a:	4a06      	ldr	r2, [pc, #24]	; (158b4 <eint3_enable_port0+0x20>)
   1589c:	4906      	ldr	r1, [pc, #24]	; (158b8 <eint3_enable_port0+0x24>)
   1589e:	4b07      	ldr	r3, [pc, #28]	; (158bc <eint3_enable_port0+0x28>)
   158a0:	bf18      	it	ne
   158a2:	4613      	movne	r3, r2
   158a4:	4a06      	ldr	r2, [pc, #24]	; (158c0 <eint3_enable_port0+0x2c>)
   158a6:	bf18      	it	ne
   158a8:	460a      	movne	r2, r1
   158aa:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   158ac:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   158ae:	f7ff bf95 	b.w	157dc <eint3_enable.isra.0>
   158b2:	bf00      	nop
   158b4:	40028094 	.word	0x40028094
   158b8:	2007c5a8 	.word	0x2007c5a8
   158bc:	40028090 	.word	0x40028090
   158c0:	2007c5ac 	.word	0x2007c5ac

000158c4 <adc0_start_conversion>:
adc0_start_conversion():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   158c4:	4a07      	ldr	r2, [pc, #28]	; (158e4 <adc0_start_conversion+0x20>)
   158c6:	6813      	ldr	r3, [r2, #0]
   158c8:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   158cc:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   158d0:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   158d2:	2301      	movs	r3, #1
   158d4:	6811      	ldr	r1, [r2, #0]
   158d6:	fa03 f000 	lsl.w	r0, r3, r0
   158da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   158de:	4308      	orrs	r0, r1
   158e0:	6010      	str	r0, [r2, #0]
   158e2:	4770      	bx	lr
   158e4:	40034000 	.word	0x40034000

000158e8 <ADC_IRQHandler>:
ADC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   158e8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   158ea:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   158ec:	4a0d      	ldr	r2, [pc, #52]	; (15924 <ADC_IRQHandler+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   158ee:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   158f0:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   158f2:	480d      	ldr	r0, [pc, #52]	; (15928 <ADC_IRQHandler+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   158f4:	f3c2 120b 	ubfx	r2, r2, #4, #12
   158f8:	f8ad 2002 	strh.w	r2, [sp, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   158fc:	f10d 0102 	add.w	r1, sp, #2
   15900:	aa01      	add	r2, sp, #4
   15902:	6800      	ldr	r0, [r0, #0]
   15904:	f000 fd80 	bl	16408 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   15908:	9b01      	ldr	r3, [sp, #4]
   1590a:	b13b      	cbz	r3, 1591c <ADC_IRQHandler+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   1590c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   15910:	4b06      	ldr	r3, [pc, #24]	; (1592c <ADC_IRQHandler+0x44>)
   15912:	601a      	str	r2, [r3, #0]
   15914:	f3bf 8f4f 	dsb	sy
   15918:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   1591c:	b003      	add	sp, #12
   1591e:	f85d fb04 	ldr.w	pc, [sp], #4
   15922:	bf00      	nop
   15924:	40034000 	.word	0x40034000
   15928:	2007c5bc 	.word	0x2007c5bc
   1592c:	e000ed04 	.word	0xe000ed04

00015930 <adc0_init>:
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   15930:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   15932:	f7fa ff2f 	bl	10794 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   15936:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   15938:	08c4      	lsrs	r4, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   1593a:	200c      	movs	r0, #12
   1593c:	f7fa ffdc 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   15940:	2103      	movs	r1, #3
   15942:	200c      	movs	r0, #12
   15944:	f7fa fff2 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15948:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   1594c:	4a10      	ldr	r2, [pc, #64]	; (15990 <adc0_init+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   1594e:	4911      	ldr	r1, [pc, #68]	; (15994 <adc0_init+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15950:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   15952:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   15954:	fbb4 f0f3 	udiv	r0, r4, r3
   15958:	4288      	cmp	r0, r1
   1595a:	d814      	bhi.n	15986 <adc0_init+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   1595c:	6811      	ldr	r1, [r2, #0]
   1595e:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   15962:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   15964:	2001      	movs	r0, #1
   15966:	f000 fd3d 	bl	163e4 <xQueueCreateMutex>
   1596a:	4b0b      	ldr	r3, [pc, #44]	; (15998 <adc0_init+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   1596c:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   1596e:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   15970:	2102      	movs	r1, #2
   15972:	2001      	movs	r0, #1
   15974:	f000 fc9a 	bl	162ac <xQueueGenericCreate>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15978:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   1597c:	4b07      	ldr	r3, [pc, #28]	; (1599c <adc0_init+0x6c>)
   1597e:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15980:	4b07      	ldr	r3, [pc, #28]	; (159a0 <adc0_init+0x70>)
   15982:	601a      	str	r2, [r3, #0]
   15984:	bd10      	pop	{r4, pc}
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   15986:	3302      	adds	r3, #2
   15988:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1598c:	d1e2      	bne.n	15954 <adc0_init+0x24>
   1598e:	e7e9      	b.n	15964 <adc0_init+0x34>
   15990:	40034000 	.word	0x40034000
   15994:	00c65d3f 	.word	0x00c65d3f
   15998:	2007c5b8 	.word	0x2007c5b8
   1599c:	2007c5bc 	.word	0x2007c5bc
   159a0:	e000e100 	.word	0xe000e100

000159a4 <adc0_get_reading>:
adc0_get_reading():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   159a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   159a6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   159a8:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   159aa:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   159ac:	f8ad 4006 	strh.w	r4, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   159b0:	d81d      	bhi.n	159ee <adc0_get_reading+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   159b2:	f001 f995 	bl	16ce0 <xTaskGetSchedulerState>
   159b6:	2802      	cmp	r0, #2
   159b8:	4e15      	ldr	r6, [pc, #84]	; (15a10 <adc0_get_reading+0x6c>)
   159ba:	d11c      	bne.n	159f6 <adc0_get_reading+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   159bc:	4f15      	ldr	r7, [pc, #84]	; (15a14 <adc0_get_reading+0x70>)
   159be:	4623      	mov	r3, r4
   159c0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   159c4:	4621      	mov	r1, r4
   159c6:	6838      	ldr	r0, [r7, #0]
   159c8:	f000 fd92 	bl	164f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   159cc:	4628      	mov	r0, r5
   159ce:	f7ff ff79 	bl	158c4 <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   159d2:	4623      	mov	r3, r4
   159d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   159d8:	f10d 0106 	add.w	r1, sp, #6
   159dc:	6830      	ldr	r0, [r6, #0]
   159de:	f000 fd87 	bl	164f0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   159e2:	4623      	mov	r3, r4
   159e4:	4622      	mov	r2, r4
   159e6:	4621      	mov	r1, r4
   159e8:	6838      	ldr	r0, [r7, #0]
   159ea:	f000 fc79 	bl	162e0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   159ee:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   159f2:	b003      	add	sp, #12
   159f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   159f6:	4628      	mov	r0, r5
   159f8:	f7ff ff64 	bl	158c4 <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   159fc:	2300      	movs	r3, #0
   159fe:	f10d 0106 	add.w	r1, sp, #6
   15a02:	461a      	mov	r2, r3
   15a04:	6830      	ldr	r0, [r6, #0]
   15a06:	f000 fd73 	bl	164f0 <xQueueGenericReceive>
   15a0a:	2800      	cmp	r0, #0
   15a0c:	d0f6      	beq.n	159fc <adc0_get_reading+0x58>
   15a0e:	e7ee      	b.n	159ee <adc0_get_reading+0x4a>
   15a10:	2007c5bc 	.word	0x2007c5bc
   15a14:	2007c5b8 	.word	0x2007c5b8

00015a18 <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   15a18:	b510      	push	{r4, lr}
   15a1a:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   15a1c:	4b02      	ldr	r3, [pc, #8]	; (15a28 <Uart3::~Uart3()+0x10>)
   15a1e:	6003      	str	r3, [r0, #0]
   15a20:	f7ff fdec 	bl	155fc <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   15a24:	4620      	mov	r0, r4
   15a26:	bd10      	pop	{r4, pc}
   15a28:	0001fa54 	.word	0x0001fa54

00015a2c <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   15a2c:	b510      	push	{r4, lr}
   15a2e:	4604      	mov	r4, r0
   15a30:	f7ff fff2 	bl	15a18 <Uart3::~Uart3()>
   15a34:	4620      	mov	r0, r4
   15a36:	212c      	movs	r1, #44	; 0x2c
   15a38:	f001 fe6f 	bl	1771a <operator delete(void*, unsigned int)>
   15a3c:	4620      	mov	r0, r4
   15a3e:	bd10      	pop	{r4, pc}

00015a40 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15a40:	b510      	push	{r4, lr}
   15a42:	4604      	mov	r4, r0
   15a44:	4903      	ldr	r1, [pc, #12]	; (15a54 <Uart3::Uart3()+0x14>)
   15a46:	f7ff fdb3 	bl	155b0 <UartDev::UartDev(unsigned int*)>
   15a4a:	4b03      	ldr	r3, [pc, #12]	; (15a58 <Uart3::Uart3()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   15a4c:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15a4e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   15a50:	bd10      	pop	{r4, pc}
   15a52:	bf00      	nop
   15a54:	4009c000 	.word	0x4009c000
   15a58:	0001faec 	.word	0x0001faec

00015a5c <UART3_IRQHandler>:
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   15a5c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15a5e:	4c07      	ldr	r4, [pc, #28]	; (15a7c <UART3_IRQHandler+0x20>)
   15a60:	6823      	ldr	r3, [r4, #0]
   15a62:	b933      	cbnz	r3, 15a72 <UART3_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15a64:	202c      	movs	r0, #44	; 0x2c
   15a66:	f7ff f863 	bl	14b30 <operator new(unsigned int)>
   15a6a:	4605      	mov	r5, r0
   15a6c:	f7ff ffe8 	bl	15a40 <Uart3::Uart3()>
   15a70:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   15a72:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   15a74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   15a78:	f7ff bd3a 	b.w	154f0 <UartDev::handleInterrupt()>
   15a7c:	2007c5c0 	.word	0x2007c5c0

00015a80 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   15a80:	b510      	push	{r4, lr}
   15a82:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   15a84:	4b02      	ldr	r3, [pc, #8]	; (15a90 <Uart2::~Uart2()+0x10>)
   15a86:	6003      	str	r3, [r0, #0]
   15a88:	f7ff fdb8 	bl	155fc <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   15a8c:	4620      	mov	r0, r4
   15a8e:	bd10      	pop	{r4, pc}
   15a90:	0001fa54 	.word	0x0001fa54

00015a94 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   15a94:	b510      	push	{r4, lr}
   15a96:	4604      	mov	r4, r0
   15a98:	f7ff fff2 	bl	15a80 <Uart2::~Uart2()>
   15a9c:	4620      	mov	r0, r4
   15a9e:	212c      	movs	r1, #44	; 0x2c
   15aa0:	f001 fe3b 	bl	1771a <operator delete(void*, unsigned int)>
   15aa4:	4620      	mov	r0, r4
   15aa6:	bd10      	pop	{r4, pc}

00015aa8 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   15aa8:	b510      	push	{r4, lr}
   15aaa:	4604      	mov	r4, r0
   15aac:	4903      	ldr	r1, [pc, #12]	; (15abc <Uart2::Uart2()+0x14>)
   15aae:	f7ff fd7f 	bl	155b0 <UartDev::UartDev(unsigned int*)>
   15ab2:	4b03      	ldr	r3, [pc, #12]	; (15ac0 <Uart2::Uart2()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   15ab4:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   15ab6:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   15ab8:	bd10      	pop	{r4, pc}
   15aba:	bf00      	nop
   15abc:	40098000 	.word	0x40098000
   15ac0:	0001fb54 	.word	0x0001fb54

00015ac4 <UART2_IRQHandler>:
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   15ac4:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15ac6:	4c07      	ldr	r4, [pc, #28]	; (15ae4 <UART2_IRQHandler+0x20>)
   15ac8:	6823      	ldr	r3, [r4, #0]
   15aca:	b933      	cbnz	r3, 15ada <UART2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15acc:	202c      	movs	r0, #44	; 0x2c
   15ace:	f7ff f82f 	bl	14b30 <operator new(unsigned int)>
   15ad2:	4605      	mov	r5, r0
   15ad4:	f7ff ffe8 	bl	15aa8 <Uart2::Uart2()>
   15ad8:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   15ada:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   15adc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   15ae0:	f7ff bd06 	b.w	154f0 <UartDev::handleInterrupt()>
   15ae4:	2007c5c4 	.word	0x2007c5c4

00015ae8 <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   15ae8:	b510      	push	{r4, lr}
   15aea:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   15aec:	4b02      	ldr	r3, [pc, #8]	; (15af8 <Uart0::~Uart0()+0x10>)
   15aee:	6003      	str	r3, [r0, #0]
   15af0:	f7ff fd84 	bl	155fc <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   15af4:	4620      	mov	r0, r4
   15af6:	bd10      	pop	{r4, pc}
   15af8:	0001fa54 	.word	0x0001fa54

00015afc <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   15afc:	b510      	push	{r4, lr}
   15afe:	4604      	mov	r4, r0
   15b00:	f7ff fff2 	bl	15ae8 <Uart0::~Uart0()>
   15b04:	4620      	mov	r0, r4
   15b06:	212c      	movs	r1, #44	; 0x2c
   15b08:	f001 fe07 	bl	1771a <operator delete(void*, unsigned int)>
   15b0c:	4620      	mov	r0, r4
   15b0e:	bd10      	pop	{r4, pc}

00015b10 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   15b10:	b510      	push	{r4, lr}
   15b12:	4604      	mov	r4, r0
   15b14:	4903      	ldr	r1, [pc, #12]	; (15b24 <Uart0::Uart0()+0x14>)
   15b16:	f7ff fd4b 	bl	155b0 <UartDev::UartDev(unsigned int*)>
   15b1a:	4b03      	ldr	r3, [pc, #12]	; (15b28 <Uart0::Uart0()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   15b1c:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   15b1e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   15b20:	bd10      	pop	{r4, pc}
   15b22:	bf00      	nop
   15b24:	4000c000 	.word	0x4000c000
   15b28:	0001fbbc 	.word	0x0001fbbc

00015b2c <UART0_IRQHandler>:
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   15b2c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15b2e:	4c07      	ldr	r4, [pc, #28]	; (15b4c <UART0_IRQHandler+0x20>)
   15b30:	6823      	ldr	r3, [r4, #0]
   15b32:	b933      	cbnz	r3, 15b42 <UART0_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15b34:	202c      	movs	r0, #44	; 0x2c
   15b36:	f7fe fffb 	bl	14b30 <operator new(unsigned int)>
   15b3a:	4605      	mov	r5, r0
   15b3c:	f7ff ffe8 	bl	15b10 <Uart0::Uart0()>
   15b40:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   15b42:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   15b44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   15b48:	f7ff bcd2 	b.w	154f0 <UartDev::handleInterrupt()>
   15b4c:	2007c5c8 	.word	0x2007c5c8

00015b50 <ssp1_dma_init>:
ssp1_dma_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   15b50:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   15b52:	2101      	movs	r1, #1
   15b54:	201d      	movs	r0, #29
   15b56:	f7fa fecf 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   15b5a:	2201      	movs	r2, #1
   15b5c:	4b02      	ldr	r3, [pc, #8]	; (15b68 <ssp1_dma_init+0x18>)
   15b5e:	631a      	str	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   15b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   15b62:	07d2      	lsls	r2, r2, #31
   15b64:	d5fc      	bpl.n	15b60 <ssp1_dma_init+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   15b66:	bd08      	pop	{r3, pc}
   15b68:	50004000 	.word	0x50004000

00015b6c <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   15b6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   15b70:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   15b72:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   15b76:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   15b78:	d24a      	bcs.n	15c10 <ssp1_dma_transfer_block+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   15b7a:	4b27      	ldr	r3, [pc, #156]	; (15c18 <ssp1_dma_transfer_block+0xac>)
   15b7c:	691c      	ldr	r4, [r3, #16]
   15b7e:	07e5      	lsls	r5, r4, #31
   15b80:	d448      	bmi.n	15c14 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   15b82:	4c26      	ldr	r4, [pc, #152]	; (15c1c <ssp1_dma_transfer_block+0xb0>)
   15b84:	6924      	ldr	r4, [r4, #16]
   15b86:	07e4      	lsls	r4, r4, #31
   15b88:	d444      	bmi.n	15c14 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   15b8a:	4c25      	ldr	r4, [pc, #148]	; (15c20 <ssp1_dma_transfer_block+0xb4>)
   15b8c:	68e5      	ldr	r5, [r4, #12]
   15b8e:	076d      	lsls	r5, r5, #29
   15b90:	d435      	bmi.n	15bfe <ssp1_dma_transfer_block+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   15b92:	2503      	movs	r5, #3
   15b94:	4c23      	ldr	r4, [pc, #140]	; (15c24 <ssp1_dma_transfer_block+0xb8>)
   15b96:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   15b98:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   15b9a:	4d23      	ldr	r5, [pc, #140]	; (15c28 <ssp1_dma_transfer_block+0xbc>)
   15b9c:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   15b9e:	2a00      	cmp	r2, #0
   15ba0:	d02f      	beq.n	15c02 <ssp1_dma_transfer_block+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   15ba2:	ac01      	add	r4, sp, #4
   15ba4:	605c      	str	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   15ba6:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   15baa:	60dc      	str	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   15bac:	2400      	movs	r4, #0
   15bae:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   15bb0:	f241 0406 	movw	r4, #4102	; 0x1006
   15bb4:	611c      	str	r4, [r3, #16]
   15bb6:	4c19      	ldr	r4, [pc, #100]	; (15c1c <ssp1_dma_transfer_block+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   15bb8:	b33a      	cbz	r2, 15c0a <ssp1_dma_transfer_block+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   15bba:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   15bbc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   15bc0:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   15bc2:	60e1      	str	r1, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   15bc4:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   15bc6:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   15bc8:	f44f 6208 	mov.w	r2, #2176	; 0x880
   15bcc:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   15bce:	691a      	ldr	r2, [r3, #16]
   15bd0:	f042 0201 	orr.w	r2, r2, #1
   15bd4:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   15bd6:	6922      	ldr	r2, [r4, #16]
   15bd8:	f042 0201 	orr.w	r2, r2, #1
   15bdc:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   15bde:	4a10      	ldr	r2, [pc, #64]	; (15c20 <ssp1_dma_transfer_block+0xb4>)
   15be0:	6a51      	ldr	r1, [r2, #36]	; 0x24
   15be2:	f041 0103 	orr.w	r1, r1, #3
   15be6:	6251      	str	r1, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   15be8:	68d8      	ldr	r0, [r3, #12]
   15bea:	f3c0 000b 	ubfx	r0, r0, #0, #12
   15bee:	2800      	cmp	r0, #0
   15bf0:	d1fa      	bne.n	15be8 <ssp1_dma_transfer_block+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   15bf2:	6a53      	ldr	r3, [r2, #36]	; 0x24
   15bf4:	f023 0303 	bic.w	r3, r3, #3
   15bf8:	6253      	str	r3, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   15bfa:	b003      	add	sp, #12
   15bfc:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   15bfe:	68a5      	ldr	r5, [r4, #8]
   15c00:	e7c4      	b.n	15b8c <ssp1_dma_transfer_block+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   15c02:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   15c04:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   15c08:	e7cf      	b.n	15baa <ssp1_dma_transfer_block+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   15c0a:	aa01      	add	r2, sp, #4
   15c0c:	6022      	str	r2, [r4, #0]
   15c0e:	e7d7      	b.n	15bc0 <ssp1_dma_transfer_block+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   15c10:	2001      	movs	r0, #1
   15c12:	e7f2      	b.n	15bfa <ssp1_dma_transfer_block+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   15c14:	2002      	movs	r0, #2
   15c16:	e7f0      	b.n	15bfa <ssp1_dma_transfer_block+0x8e>
   15c18:	50004120 	.word	0x50004120
   15c1c:	50004100 	.word	0x50004100
   15c20:	40030000 	.word	0x40030000
   15c24:	50004000 	.word	0x50004000
   15c28:	40030008 	.word	0x40030008

00015c2c <spi1_lock>:
spi1_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   15c2c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   15c2e:	4c0a      	ldr	r4, [pc, #40]	; (15c58 <spi1_lock+0x2c>)
   15c30:	6823      	ldr	r3, [r4, #0]
   15c32:	b91b      	cbnz	r3, 15c3c <spi1_lock+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   15c34:	2001      	movs	r0, #1
   15c36:	f000 fbd5 	bl	163e4 <xQueueCreateMutex>
   15c3a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15c3c:	f001 f850 	bl	16ce0 <xTaskGetSchedulerState>
   15c40:	2802      	cmp	r0, #2
   15c42:	d108      	bne.n	15c56 <spi1_lock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   15c44:	2300      	movs	r3, #0
   15c46:	6820      	ldr	r0, [r4, #0]
   15c48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   15c4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   15c50:	4619      	mov	r1, r3
   15c52:	f000 bc4d 	b.w	164f0 <xQueueGenericReceive>
   15c56:	bd10      	pop	{r4, pc}
   15c58:	2007c5cc 	.word	0x2007c5cc

00015c5c <spi1_unlock>:
spi1_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   15c5c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15c5e:	f001 f83f 	bl	16ce0 <xTaskGetSchedulerState>
   15c62:	2802      	cmp	r0, #2
   15c64:	d108      	bne.n	15c78 <spi1_unlock+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   15c66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   15c6a:	2300      	movs	r3, #0
   15c6c:	4803      	ldr	r0, [pc, #12]	; (15c7c <spi1_unlock+0x20>)
   15c6e:	461a      	mov	r2, r3
   15c70:	4619      	mov	r1, r3
   15c72:	6800      	ldr	r0, [r0, #0]
   15c74:	f000 bb34 	b.w	162e0 <xQueueGenericSend>
   15c78:	bd10      	pop	{r4, pc}
   15c7a:	bf00      	nop
   15c7c:	2007c5cc 	.word	0x2007c5cc

00015c80 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   15c80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   15c82:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   15c84:	4b05      	ldr	r3, [pc, #20]	; (15c9c <lpc_timer_get_struct+0x1c>)
   15c86:	f10d 0e10 	add.w	lr, sp, #16
   15c8a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   15c8c:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   15c90:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   15c94:	f854 0c10 	ldr.w	r0, [r4, #-16]
   15c98:	b004      	add	sp, #16
   15c9a:	bd10      	pop	{r4, pc}
   15c9c:	0001fbd0 	.word	0x0001fbd0

00015ca0 <lpc_timer_enable>:
lpc_timer_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   15ca0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15ca2:	460f      	mov	r7, r1
   15ca4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   15ca6:	f7ff ffeb 	bl	15c80 <lpc_timer_get_struct>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   15caa:	2317      	movs	r3, #23
   15cac:	2401      	movs	r4, #1
   15cae:	2216      	movs	r2, #22
   15cb0:	2102      	movs	r1, #2
   15cb2:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15cb6:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   15cba:	ab02      	add	r3, sp, #8
   15cbc:	441e      	add	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   15cbe:	f88d 2002 	strb.w	r2, [sp, #2]
   15cc2:	f88d 1001 	strb.w	r1, [sp, #1]
   15cc6:	f88d 4000 	strb.w	r4, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   15cca:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15ccc:	f88d 1005 	strb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   15cd0:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   15cd4:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15cd6:	f88d 2006 	strb.w	r2, [sp, #6]
   15cda:	f88d 4004 	strb.w	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   15cde:	f7fa fe0b 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   15ce2:	4621      	mov	r1, r4
   15ce4:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   15ce8:	f7fa fe20 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   15cec:	2300      	movs	r3, #0
   15cee:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   15cf0:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   15cf2:	672b      	str	r3, [r5, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   15cf4:	f7fa fd4e 	bl	10794 <sys_get_cpu_clock>
   15cf8:	4b03      	ldr	r3, [pc, #12]	; (15d08 <lpc_timer_enable+0x68>)
   15cfa:	fbb0 f0f3 	udiv	r0, r0, r3
   15cfe:	4347      	muls	r7, r0
   15d00:	60ef      	str	r7, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   15d02:	b003      	add	sp, #12
   15d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15d06:	bf00      	nop
   15d08:	000f4240 	.word	0x000f4240

00015d0c <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
}



bool I2C2::init(unsigned int speedInKhz)
{
   15d0c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15d0e:	4b18      	ldr	r3, [pc, #96]	; (15d70 <I2C2::init(unsigned int)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   15d10:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15d12:	695c      	ldr	r4, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15d14:	4b17      	ldr	r3, [pc, #92]	; (15d74 <I2C2::init(unsigned int)+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   15d16:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15d18:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   15d1a:	201a      	movs	r0, #26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15d1c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   15d20:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   15d22:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15d24:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   15d28:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   15d2c:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   15d2e:	6e99      	ldr	r1, [r3, #104]	; 0x68
   15d30:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   15d34:	6699      	str	r1, [r3, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   15d36:	6819      	ldr	r1, [r3, #0]
   15d38:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   15d3c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   15d3e:	6819      	ldr	r1, [r3, #0]
   15d40:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   15d44:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   15d46:	2103      	movs	r1, #3
   15d48:	f7fa fdf0 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   15d4c:	f7fa fd22 	bl	10794 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   15d50:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   15d54:	d106      	bne.n	15d64 <I2C2::init(unsigned int)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   15d56:	4632      	mov	r2, r6
   15d58:	08c1      	lsrs	r1, r0, #3
   15d5a:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   15d5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   15d60:	f7ff ba3e 	b.w	151e0 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
        /**
         * Disables I2C operation
         * This can be used to disable all I2C operations in case of severe I2C Bus Failure
         * @warning Once disabled, I2C cannot be enabled again
         */
        void disableOperation() { mDisableOperation = true; }
   15d64:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   15d66:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
   15d68:	f885 3105 	strb.w	r3, [r5, #261]	; 0x105
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   15d6c:	bd70      	pop	{r4, r5, r6, pc}
   15d6e:	bf00      	nop
   15d70:	2009c000 	.word	0x2009c000
   15d74:	4002c000 	.word	0x4002c000

00015d78 <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   15d78:	b510      	push	{r4, lr}
   15d7a:	4604      	mov	r4, r0
   15d7c:	4902      	ldr	r1, [pc, #8]	; (15d88 <I2C2::I2C2()+0x10>)
   15d7e:	f7ff fa01 	bl	15184 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   15d82:	4620      	mov	r0, r4
   15d84:	bd10      	pop	{r4, pc}
   15d86:	bf00      	nop
   15d88:	400a0000 	.word	0x400a0000

00015d8c <I2C2_IRQHandler>:
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   15d8c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15d8e:	4c08      	ldr	r4, [pc, #32]	; (15db0 <I2C2_IRQHandler+0x24>)
   15d90:	6823      	ldr	r3, [r4, #0]
   15d92:	b93b      	cbnz	r3, 15da4 <I2C2_IRQHandler+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15d94:	f44f 7094 	mov.w	r0, #296	; 0x128
   15d98:	f7fe feca 	bl	14b30 <operator new(unsigned int)>
   15d9c:	4605      	mov	r5, r0
   15d9e:	f7ff ffeb 	bl	15d78 <I2C2::I2C2()>
   15da2:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   15da4:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   15da6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   15daa:	f7ff bafd 	b.w	153a8 <I2C_Base::handleInterrupt()>
   15dae:	bf00      	nop
   15db0:	2007c5d0 	.word	0x2007c5d0

00015db4 <CAN_tx_now>:
CAN_tx_now():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   15db4:	6802      	ldr	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   15db6:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   15db8:	69d3      	ldr	r3, [r2, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   15dba:	f013 0304 	ands.w	r3, r3, #4
   15dbe:	d010      	beq.n	15de2 <CAN_tx_now+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   15dc0:	f102 0330 	add.w	r3, r2, #48	; 0x30
   15dc4:	f101 0410 	add.w	r4, r1, #16
   15dc8:	f851 5b04 	ldr.w	r5, [r1], #4
   15dcc:	42a1      	cmp	r1, r4
   15dce:	f843 5b04 	str.w	r5, [r3], #4
   15dd2:	d1f9      	bne.n	15dc8 <CAN_tx_now+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   15dd4:	8a43      	ldrh	r3, [r0, #18]
   15dd6:	3301      	adds	r3, #1
   15dd8:	8243      	strh	r3, [r0, #18]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   15dda:	2321      	movs	r3, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   15ddc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   15dde:	6053      	str	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   15de0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   15de2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   15de4:	bd30      	pop	{r4, r5, pc}
   15de6:	Address 0x0000000000015de6 is out of bounds.


00015de8 <CAN_handle_isr>:
CAN_handle_isr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   15de8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   15dec:	4c26      	ldr	r4, [pc, #152]	; (15e88 <CAN_handle_isr+0xa0>)
   15dee:	0145      	lsls	r5, r0, #5
   15df0:	f854 8005 	ldr.w	r8, [r4, r5]
   15df4:	1967      	adds	r7, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   15df6:	f8d8 600c 	ldr.w	r6, [r8, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   15dfa:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15dfe:	4333      	orrs	r3, r6
   15e00:	07d9      	lsls	r1, r3, #31
   15e02:	d516      	bpl.n	15e32 <CAN_handle_isr+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   15e04:	6878      	ldr	r0, [r7, #4]
   15e06:	f000 fc4a 	bl	1669e <uxQueueMessagesWaitingFromISR>
   15e0a:	89fb      	ldrh	r3, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15e0c:	f108 0120 	add.w	r1, r8, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   15e10:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15e12:	f04f 0300 	mov.w	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   15e16:	bf88      	it	hi
   15e18:	81f8      	strhhi	r0, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15e1a:	1967      	adds	r7, r4, r5
   15e1c:	461a      	mov	r2, r3
   15e1e:	6878      	ldr	r0, [r7, #4]
   15e20:	f000 faf2 	bl	16408 <xQueueGenericSendFromISR>
   15e24:	b358      	cbz	r0, 15e7e <CAN_handle_isr+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   15e26:	8abb      	ldrh	r3, [r7, #20]
   15e28:	3301      	adds	r3, #1
   15e2a:	82bb      	strh	r3, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   15e2c:	2304      	movs	r3, #4
   15e2e:	f8c8 3004 	str.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   15e32:	f240 6302 	movw	r3, #1538	; 0x602
   15e36:	421e      	tst	r6, r3
   15e38:	d012      	beq.n	15e60 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   15e3a:	1967      	adds	r7, r4, r5
   15e3c:	68b8      	ldr	r0, [r7, #8]
   15e3e:	f000 fc2e 	bl	1669e <uxQueueMessagesWaitingFromISR>
   15e42:	8a3b      	ldrh	r3, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15e44:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   15e46:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   15e48:	bf88      	it	hi
   15e4a:	8238      	strhhi	r0, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15e4c:	1967      	adds	r7, r4, r5
   15e4e:	4669      	mov	r1, sp
   15e50:	68b8      	ldr	r0, [r7, #8]
   15e52:	f000 fbe7 	bl	16624 <xQueueReceiveFromISR>
   15e56:	b118      	cbz	r0, 15e60 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   15e58:	4669      	mov	r1, sp
   15e5a:	4638      	mov	r0, r7
   15e5c:	f7ff ffaa 	bl	15db4 <CAN_tx_now>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   15e60:	06b2      	lsls	r2, r6, #26
   15e62:	d503      	bpl.n	15e6c <CAN_handle_isr+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   15e64:	1963      	adds	r3, r4, r5
   15e66:	699b      	ldr	r3, [r3, #24]
   15e68:	4630      	mov	r0, r6
   15e6a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   15e6c:	0733      	lsls	r3, r6, #28
   15e6e:	d503      	bpl.n	15e78 <CAN_handle_isr+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   15e70:	442c      	add	r4, r5
   15e72:	69e3      	ldr	r3, [r4, #28]
   15e74:	4630      	mov	r0, r6
   15e76:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   15e78:	b004      	add	sp, #16
   15e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   15e7e:	89bb      	ldrh	r3, [r7, #12]
   15e80:	3301      	adds	r3, #1
   15e82:	81bb      	strh	r3, [r7, #12]
   15e84:	e7d2      	b.n	15e2c <CAN_handle_isr+0x44>
   15e86:	bf00      	nop
   15e88:	2007c09c 	.word	0x2007c09c

00015e8c <CAN_IRQHandler>:
CAN_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   15e8c:	4b08      	ldr	r3, [pc, #32]	; (15eb0 <CAN_IRQHandler+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   15e8e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   15e90:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   15e94:	04a2      	lsls	r2, r4, #18
   15e96:	d502      	bpl.n	15e9e <CAN_IRQHandler+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   15e98:	2000      	movs	r0, #0
   15e9a:	f7ff ffa5 	bl	15de8 <CAN_handle_isr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   15e9e:	0463      	lsls	r3, r4, #17
   15ea0:	d504      	bpl.n	15eac <CAN_IRQHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   15ea2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   15ea6:	2001      	movs	r0, #1
   15ea8:	f7ff bf9e 	b.w	15de8 <CAN_handle_isr>
   15eac:	bd10      	pop	{r4, pc}
   15eae:	bf00      	nop
   15eb0:	400fc000 	.word	0x400fc000

00015eb4 <prvTaskExitError>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   15eb4:	f04f 0310 	mov.w	r3, #16
   15eb8:	f383 8811 	msr	BASEPRI, r3
   15ebc:	f3bf 8f6f 	isb	sy
   15ec0:	f3bf 8f4f 	dsb	sy
   15ec4:	e7fe      	b.n	15ec4 <prvTaskExitError+0x10>
prvTaskExitError():
   15ec6:	Address 0x0000000000015ec6 is out of bounds.


00015ec8 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
{
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   15ec8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   15ecc:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	pxTopOfStack--;
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
	pxTopOfStack--;
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   15ed0:	4b05      	ldr	r3, [pc, #20]	; (15ee8 <pxPortInitialiseStack+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   15ed2:	f021 0101 	bic.w	r1, r1, #1
   15ed6:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   15eda:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   15ede:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */

	return pxTopOfStack;
}
   15ee2:	3840      	subs	r0, #64	; 0x40
   15ee4:	4770      	bx	lr
   15ee6:	bf00      	nop
   15ee8:	00015eb5 	.word	0x00015eb5
   15eec:	ffffffff 	.word	0xffffffff

00015ef0 <vPortSVCHandler>:
vPortSVCHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
   15ef0:	4b07      	ldr	r3, [pc, #28]	; (15f10 <pxCurrentTCBConst2>)
   15ef2:	6819      	ldr	r1, [r3, #0]
   15ef4:	6808      	ldr	r0, [r1, #0]
   15ef6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   15efa:	f380 8809 	msr	PSP, r0
   15efe:	f3bf 8f6f 	isb	sy
   15f02:	f04f 0000 	mov.w	r0, #0
   15f06:	f380 8811 	msr	BASEPRI, r0
   15f0a:	f04e 0e0d 	orr.w	lr, lr, #13
   15f0e:	4770      	bx	lr

00015f10 <pxCurrentTCBConst2>:
   15f10:	2007c5e0 	.word	0x2007c5e0

00015f14 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   15f14:	f04f 0310 	mov.w	r3, #16
   15f18:	f383 8811 	msr	BASEPRI, r3
   15f1c:	f3bf 8f6f 	isb	sy
   15f20:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   15f24:	4a02      	ldr	r2, [pc, #8]	; (15f30 <vPortEnterCritical+0x1c>)
   15f26:	6813      	ldr	r3, [r2, #0]
   15f28:	3301      	adds	r3, #1
   15f2a:	6013      	str	r3, [r2, #0]
   15f2c:	4770      	bx	lr
   15f2e:	bf00      	nop
   15f30:	2007c5d4 	.word	0x2007c5d4

00015f34 <vPortExitCritical>:
vPortExitCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   15f34:	4a03      	ldr	r2, [pc, #12]	; (15f44 <vPortExitCritical+0x10>)
   15f36:	6813      	ldr	r3, [r2, #0]
   15f38:	3b01      	subs	r3, #1
   15f3a:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   15f3c:	b90b      	cbnz	r3, 15f42 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   15f3e:	f383 8811 	msr	BASEPRI, r3
   15f42:	4770      	bx	lr
   15f44:	2007c5d4 	.word	0x2007c5d4
vPortExitCritical():
   15f48:	ffffffff 	.word	0xffffffff
   15f4c:	ffffffff 	.word	0xffffffff

00015f50 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   15f50:	f3ef 8009 	mrs	r0, PSP
   15f54:	f3bf 8f6f 	isb	sy
   15f58:	4b0d      	ldr	r3, [pc, #52]	; (15f90 <pxCurrentTCBConst>)
   15f5a:	681a      	ldr	r2, [r3, #0]
   15f5c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   15f60:	6010      	str	r0, [r2, #0]
   15f62:	e92d 4008 	stmdb	sp!, {r3, lr}
   15f66:	f04f 0010 	mov.w	r0, #16
   15f6a:	f380 8811 	msr	BASEPRI, r0
   15f6e:	f000 fddb 	bl	16b28 <vTaskSwitchContext>
   15f72:	f04f 0000 	mov.w	r0, #0
   15f76:	f380 8811 	msr	BASEPRI, r0
   15f7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   15f7e:	6819      	ldr	r1, [r3, #0]
   15f80:	6808      	ldr	r0, [r1, #0]
   15f82:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   15f86:	f380 8809 	msr	PSP, r0
   15f8a:	f3bf 8f6f 	isb	sy
   15f8e:	4770      	bx	lr

00015f90 <pxCurrentTCBConst>:
   15f90:	2007c5e0 	.word	0x2007c5e0

00015f94 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   15f94:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   15f96:	f04f 0310 	mov.w	r3, #16
   15f9a:	f383 8811 	msr	BASEPRI, r3
   15f9e:	f3bf 8f6f 	isb	sy
   15fa2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   15fa6:	f000 fcb5 	bl	16914 <xTaskIncrementTick>
   15faa:	b118      	cbz	r0, 15fb4 <xPortSysTickHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   15fac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   15fb0:	4b02      	ldr	r3, [pc, #8]	; (15fbc <xPortSysTickHandler+0x28>)
   15fb2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   15fb4:	2300      	movs	r3, #0
   15fb6:	f383 8811 	msr	BASEPRI, r3
   15fba:	bd08      	pop	{r3, pc}
   15fbc:	e000ed04 	.word	0xe000ed04

00015fc0 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
}

unsigned int rts_not_full_trace_get()
{
   15fc0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   15fc2:	f7fa fa61 	bl	10488 <sys_get_uptime_us>
   15fc6:	4b02      	ldr	r3, [pc, #8]	; (15fd0 <rts_not_full_trace_get+0x10>)
   15fc8:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   15fca:	1ac0      	subs	r0, r0, r3
   15fcc:	bd08      	pop	{r3, pc}
   15fce:	bf00      	nop
   15fd0:	2007c5d8 	.word	0x2007c5d8

00015fd4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   15fd4:	b510      	push	{r4, lr}
   15fd6:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   15fd8:	4809      	ldr	r0, [pc, #36]	; (16000 <vApplicationStackOverflowHook+0x2c>)
   15fda:	f7fe fc8b 	bl	148f4 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   15fde:	4620      	mov	r0, r4
   15fe0:	f7fe fc88 	bl	148f4 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   15fe4:	4807      	ldr	r0, [pc, #28]	; (16004 <vApplicationStackOverflowHook+0x30>)
   15fe6:	f7fe fc85 	bl	148f4 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   15fea:	4807      	ldr	r0, [pc, #28]	; (16008 <vApplicationStackOverflowHook+0x34>)
   15fec:	f7fe fd44 	bl	14a78 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   15ff0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   15ff4:	22aa      	movs	r2, #170	; 0xaa
   15ff6:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   15ff8:	2200      	movs	r2, #0
   15ffa:	701a      	strb	r2, [r3, #0]
   15ffc:	bd10      	pop	{r4, pc}
   15ffe:	bf00      	nop
   16000:	0001fc16 	.word	0x0001fc16
   16004:	0001fc3f 	.word	0x0001fc3f
   16008:	002dc6c0 	.word	0x002dc6c0

0001600c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   1600c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   1600e:	4806      	ldr	r0, [pc, #24]	; (16028 <vApplicationMallocFailedHook+0x1c>)
   16010:	f7fe fc70 	bl	148f4 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   16014:	4805      	ldr	r0, [pc, #20]	; (1602c <vApplicationMallocFailedHook+0x20>)
   16016:	f7fe fd2f 	bl	14a78 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1601a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1601e:	22aa      	movs	r2, #170	; 0xaa
   16020:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   16022:	2200      	movs	r2, #0
   16024:	701a      	strb	r2, [r3, #0]
   16026:	bd08      	pop	{r3, pc}
   16028:	0001fbe0 	.word	0x0001fbe0
   1602c:	002dc6c0 	.word	0x002dc6c0

00016030 <pvPortMalloc>:
pvPortMalloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   16030:	b510      	push	{r4, lr}
   16032:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   16034:	f000 fc60 	bl	168f8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   16038:	4620      	mov	r0, r4
   1603a:	f002 ff03 	bl	18e44 <malloc>
   1603e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   16040:	f000 fcee 	bl	16a20 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   16044:	b90c      	cbnz	r4, 1604a <pvPortMalloc+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   16046:	f7ff ffe1 	bl	1600c <vApplicationMallocFailedHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   1604a:	4620      	mov	r0, r4
   1604c:	bd10      	pop	{r4, pc}

0001604e <vPortFree>:
vPortFree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   1604e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   16050:	4604      	mov	r4, r0
   16052:	b140      	cbz	r0, 16066 <vPortFree+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   16054:	f000 fc50 	bl	168f8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   16058:	4620      	mov	r0, r4
   1605a:	f002 fefb 	bl	18e54 <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   1605e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   16062:	f000 bcdd 	b.w	16a20 <xTaskResumeAll>
   16066:	bd10      	pop	{r4, pc}

00016068 <vListInitialise>:
vListInitialise():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16068:	f100 0308 	add.w	r3, r0, #8
   1606c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   1606e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16072:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16074:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   16076:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   16078:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   1607a:	6003      	str	r3, [r0, #0]
   1607c:	4770      	bx	lr

0001607e <vListInitialiseItem>:
vListInitialiseItem():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   1607e:	2300      	movs	r3, #0
   16080:	6103      	str	r3, [r0, #16]
   16082:	4770      	bx	lr

00016084 <vListInsertEnd>:
vListInsertEnd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   16084:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   16086:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   16088:	604b      	str	r3, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   1608a:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   1608c:	689a      	ldr	r2, [r3, #8]
   1608e:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   16090:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   16092:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   16094:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   16096:	3301      	adds	r3, #1
   16098:	6003      	str	r3, [r0, #0]
   1609a:	4770      	bx	lr

0001609c <vListInsert>:
vListInsert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   1609c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   1609e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   160a0:	1c53      	adds	r3, r2, #1
   160a2:	d10a      	bne.n	160ba <vListInsert+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   160a4:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   160a6:	685a      	ldr	r2, [r3, #4]
   160a8:	604a      	str	r2, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   160aa:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   160ac:	608b      	str	r3, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   160ae:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   160b0:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   160b2:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   160b4:	3301      	adds	r3, #1
   160b6:	6003      	str	r3, [r0, #0]
   160b8:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   160ba:	f100 0308 	add.w	r3, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   160be:	685c      	ldr	r4, [r3, #4]
   160c0:	6825      	ldr	r5, [r4, #0]
   160c2:	42aa      	cmp	r2, r5
   160c4:	d3ef      	bcc.n	160a6 <vListInsert+0xa>
   160c6:	4623      	mov	r3, r4
   160c8:	e7f9      	b.n	160be <vListInsert+0x22>

000160ca <uxListRemove>:
uxListRemove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   160ca:	6841      	ldr	r1, [r0, #4]
   160cc:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   160ce:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   160d0:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   160d2:	6882      	ldr	r2, [r0, #8]
   160d4:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   160d6:	6859      	ldr	r1, [r3, #4]
   160d8:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   160da:	bf08      	it	eq
   160dc:	605a      	streq	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   160de:	2200      	movs	r2, #0
   160e0:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   160e2:	6818      	ldr	r0, [r3, #0]
   160e4:	3801      	subs	r0, #1
   160e6:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   160e8:	4770      	bx	lr

000160ea <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   160ea:	b570      	push	{r4, r5, r6, lr}
   160ec:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   160ee:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   160f0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   160f2:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   160f4:	b942      	cbnz	r2, 16108 <prvCopyDataToQueue+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   160f6:	6805      	ldr	r5, [r0, #0]
   160f8:	b99d      	cbnz	r5, 16122 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   160fa:	6840      	ldr	r0, [r0, #4]
   160fc:	f000 fe48 	bl	16d90 <xTaskPriorityDisinherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   16100:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   16102:	3601      	adds	r6, #1
   16104:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   16106:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   16108:	b96d      	cbnz	r5, 16126 <prvCopyDataToQueue+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   1610a:	6880      	ldr	r0, [r0, #8]
   1610c:	f002 fed9 	bl	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   16110:	68a3      	ldr	r3, [r4, #8]
   16112:	6c22      	ldr	r2, [r4, #64]	; 0x40
   16114:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16116:	6862      	ldr	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   16118:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   1611a:	4293      	cmp	r3, r2
   1611c:	d301      	bcc.n	16122 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   1611e:	6823      	ldr	r3, [r4, #0]
   16120:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   16122:	2000      	movs	r0, #0
   16124:	e7ed      	b.n	16102 <prvCopyDataToQueue+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16126:	68c0      	ldr	r0, [r0, #12]
   16128:	f002 fecb 	bl	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   1612c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1612e:	68e2      	ldr	r2, [r4, #12]
   16130:	425b      	negs	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16132:	6821      	ldr	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16134:	441a      	add	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16136:	428a      	cmp	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16138:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   1613a:	bf3e      	ittt	cc
   1613c:	6862      	ldrcc	r2, [r4, #4]
   1613e:	189b      	addcc	r3, r3, r2
   16140:	60e3      	strcc	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   16142:	2d02      	cmp	r5, #2
   16144:	d1ed      	bne.n	16122 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16146:	b10e      	cbz	r6, 1614c <prvCopyDataToQueue+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   16148:	3e01      	subs	r6, #1
   1614a:	e7ea      	b.n	16122 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   1614c:	4630      	mov	r0, r6
   1614e:	e7d8      	b.n	16102 <prvCopyDataToQueue+0x18>

00016150 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   16150:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   16152:	6c85      	ldr	r5, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   16154:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   16156:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   16158:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   1615a:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   1615c:	4299      	cmp	r1, r3
   1615e:	d21a      	bcs.n	16196 <prvNotifyQueueSetContainer+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16160:	a901      	add	r1, sp, #4
   16162:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   16164:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16168:	f7ff ffbf 	bl	160ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   1616c:	b264      	sxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   1616e:	1c63      	adds	r3, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16170:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   16172:	d10b      	bne.n	1618c <prvNotifyQueueSetContainer+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   16174:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   16176:	b133      	cbz	r3, 16186 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   16178:	f105 0024 	add.w	r0, r5, #36	; 0x24
   1617c:	f000 fd40 	bl	16c00 <xTaskRemoveFromEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   16180:	2800      	cmp	r0, #0
   16182:	bf18      	it	ne
   16184:	2601      	movne	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   16186:	4630      	mov	r0, r6
   16188:	b002      	add	sp, #8
   1618a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1618c:	3401      	adds	r4, #1
   1618e:	b264      	sxtb	r4, r4
   16190:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   16194:	e7f7      	b.n	16186 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   16196:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   16198:	e7f5      	b.n	16186 <prvNotifyQueueSetContainer+0x36>

0001619a <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1619a:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   1619c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1619e:	b410      	push	{r4}
   161a0:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   161a2:	b162      	cbz	r2, 161be <prvCopyDataFromQueue+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   161a4:	68d9      	ldr	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   161a6:	685c      	ldr	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   161a8:	4411      	add	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   161aa:	42a1      	cmp	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   161ac:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   161ae:	bf28      	it	cs
   161b0:	6819      	ldrcs	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   161b2:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   161b4:	bf28      	it	cs
   161b6:	60d9      	strcs	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   161b8:	68d9      	ldr	r1, [r3, #12]
   161ba:	f002 be82 	b.w	18ec2 <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   161be:	bc10      	pop	{r4}
   161c0:	4770      	bx	lr

000161c2 <prvUnlockQueue>:
prvUnlockQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   161c2:	b570      	push	{r4, r5, r6, lr}
   161c4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   161c6:	f7ff fea5 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   161ca:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   161ce:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   161d2:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   161d4:	2d00      	cmp	r5, #0
   161d6:	dc14      	bgt.n	16202 <prvUnlockQueue+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   161d8:	23ff      	movs	r3, #255	; 0xff
   161da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   161de:	f7ff fea9 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   161e2:	f7ff fe97 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   161e6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   161ea:	f104 0610 	add.w	r6, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   161ee:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   161f0:	2d00      	cmp	r5, #0
   161f2:	dc19      	bgt.n	16228 <prvUnlockQueue+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   161f4:	23ff      	movs	r3, #255	; 0xff
   161f6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   161fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   161fe:	f7ff be99 	b.w	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   16202:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16204:	b14b      	cbz	r3, 1621a <prvUnlockQueue+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   16206:	2100      	movs	r1, #0
   16208:	4620      	mov	r0, r4
   1620a:	f7ff ffa1 	bl	16150 <prvNotifyQueueSetContainer>
   1620e:	b108      	cbz	r0, 16214 <prvUnlockQueue+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   16210:	f000 fd60 	bl	16cd4 <vTaskMissedYield>
   16214:	3d01      	subs	r5, #1
   16216:	b26d      	sxtb	r5, r5
   16218:	e7dc      	b.n	161d4 <prvUnlockQueue+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1621a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1621c:	2b00      	cmp	r3, #0
   1621e:	d0db      	beq.n	161d8 <prvUnlockQueue+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16220:	4630      	mov	r0, r6
   16222:	f000 fced 	bl	16c00 <xTaskRemoveFromEventList>
   16226:	e7f2      	b.n	1620e <prvUnlockQueue+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16228:	6923      	ldr	r3, [r4, #16]
   1622a:	2b00      	cmp	r3, #0
   1622c:	d0e2      	beq.n	161f4 <prvUnlockQueue+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1622e:	4630      	mov	r0, r6
   16230:	f000 fce6 	bl	16c00 <xTaskRemoveFromEventList>
   16234:	b108      	cbz	r0, 1623a <prvUnlockQueue+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   16236:	f000 fd4d 	bl	16cd4 <vTaskMissedYield>
   1623a:	3d01      	subs	r5, #1
   1623c:	b26d      	sxtb	r5, r5
   1623e:	e7d7      	b.n	161f0 <prvUnlockQueue+0x2e>

00016240 <xQueueGenericReset>:
xQueueGenericReset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   16240:	b538      	push	{r3, r4, r5, lr}
   16242:	4604      	mov	r4, r0
   16244:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   16246:	f7ff fe65 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   1624a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1624c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1624e:	6822      	ldr	r2, [r4, #0]
   16250:	4343      	muls	r3, r0
   16252:	18d1      	adds	r1, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   16254:	1a1b      	subs	r3, r3, r0
   16256:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   16258:	6061      	str	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   1625a:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   1625c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   1625e:	23ff      	movs	r3, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   16260:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   16262:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   16264:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   16268:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   1626c:	b995      	cbnz	r5, 16294 <xQueueGenericReset+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1626e:	6923      	ldr	r3, [r4, #16]
   16270:	b163      	cbz	r3, 1628c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16272:	f104 0010 	add.w	r0, r4, #16
   16276:	f000 fcc3 	bl	16c00 <xTaskRemoveFromEventList>
   1627a:	b138      	cbz	r0, 1628c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   1627c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16280:	4b09      	ldr	r3, [pc, #36]	; (162a8 <xQueueGenericReset+0x68>)
   16282:	601a      	str	r2, [r3, #0]
   16284:	f3bf 8f4f 	dsb	sy
   16288:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   1628c:	f7ff fe52 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   16290:	2001      	movs	r0, #1
   16292:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   16294:	f104 0010 	add.w	r0, r4, #16
   16298:	f7ff fee6 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   1629c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   162a0:	f7ff fee2 	bl	16068 <vListInitialise>
   162a4:	e7f2      	b.n	1628c <xQueueGenericReset+0x4c>
   162a6:	bf00      	nop
   162a8:	e000ed04 	.word	0xe000ed04

000162ac <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   162ac:	b570      	push	{r4, r5, r6, lr}
   162ae:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   162b0:	4348      	muls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   162b2:	304c      	adds	r0, #76	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   162b4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   162b6:	f7ff febb 	bl	16030 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   162ba:	4604      	mov	r4, r0
   162bc:	b148      	cbz	r0, 162d2 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   162be:	b955      	cbnz	r5, 162d6 <xQueueGenericCreate+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   162c0:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   162c2:	63e6      	str	r6, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   162c4:	6425      	str	r5, [r4, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   162c6:	2101      	movs	r1, #1
   162c8:	4620      	mov	r0, r4
   162ca:	f7ff ffb9 	bl	16240 <xQueueGenericReset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   162ce:	2300      	movs	r3, #0
   162d0:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   162d2:	4620      	mov	r0, r4
   162d4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   162d6:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   162da:	6003      	str	r3, [r0, #0]
   162dc:	e7f1      	b.n	162c2 <xQueueGenericCreate+0x16>
xQueueGenericCreate():
   162de:	Address 0x00000000000162de is out of bounds.


000162e0 <xQueueGenericSend>:
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   162e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   162e4:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   162e6:	4604      	mov	r4, r0
   162e8:	4689      	mov	r9, r1
   162ea:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   162ec:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   162ee:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 163e0 <xQueueGenericSend+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   162f2:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   162f4:	f7ff fe0e 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   162f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   162fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   162fc:	429a      	cmp	r2, r3
   162fe:	d301      	bcc.n	16304 <xQueueGenericSend+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   16300:	2e02      	cmp	r6, #2
   16302:	d121      	bne.n	16348 <xQueueGenericSend+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   16304:	4632      	mov	r2, r6
   16306:	4649      	mov	r1, r9
   16308:	4620      	mov	r0, r4
   1630a:	f7ff feee 	bl	160ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   1630e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16310:	b193      	cbz	r3, 16338 <xQueueGenericSend+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   16312:	4631      	mov	r1, r6
   16314:	4620      	mov	r0, r4
   16316:	f7ff ff1b 	bl	16150 <prvNotifyQueueSetContainer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   1631a:	b138      	cbz	r0, 1632c <xQueueGenericSend+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   1631c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16320:	4b2f      	ldr	r3, [pc, #188]	; (163e0 <xQueueGenericSend+0x100>)
   16322:	601a      	str	r2, [r3, #0]
   16324:	f3bf 8f4f 	dsb	sy
   16328:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   1632c:	f7ff fe02 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   16330:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   16332:	b004      	add	sp, #16
   16334:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16338:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1633a:	2b00      	cmp	r3, #0
   1633c:	d0ed      	beq.n	1631a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1633e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16342:	f000 fc5d 	bl	16c00 <xTaskRemoveFromEventList>
   16346:	e7e8      	b.n	1631a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   16348:	9d01      	ldr	r5, [sp, #4]
   1634a:	b91d      	cbnz	r5, 16354 <xQueueGenericSend+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   1634c:	f7ff fdf2 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   16350:	2000      	movs	r0, #0
   16352:	e7ee      	b.n	16332 <xQueueGenericSend+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   16354:	b917      	cbnz	r7, 1635c <xQueueGenericSend+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   16356:	a802      	add	r0, sp, #8
   16358:	f000 fc8a 	bl	16c70 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   1635c:	f7ff fdea 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   16360:	f000 faca 	bl	168f8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   16364:	f7ff fdd6 	bl	15f14 <vPortEnterCritical>
   16368:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1636c:	2bff      	cmp	r3, #255	; 0xff
   1636e:	bf08      	it	eq
   16370:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   16374:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16378:	2bff      	cmp	r3, #255	; 0xff
   1637a:	bf08      	it	eq
   1637c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   16380:	f7ff fdd8 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   16384:	a901      	add	r1, sp, #4
   16386:	a802      	add	r0, sp, #8
   16388:	f000 fc7e 	bl	16c88 <xTaskCheckForTimeOut>
   1638c:	bb10      	cbnz	r0, 163d4 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   1638e:	f7ff fdc1 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   16392:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   16394:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   16396:	f7ff fdcd 	bl	15f34 <vPortExitCritical>
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   1639a:	42af      	cmp	r7, r5
   1639c:	d114      	bne.n	163c8 <xQueueGenericSend+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   1639e:	9901      	ldr	r1, [sp, #4]
   163a0:	f104 0010 	add.w	r0, r4, #16
   163a4:	f000 fc1c 	bl	16be0 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   163a8:	4620      	mov	r0, r4
   163aa:	f7ff ff0a 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   163ae:	f000 fb37 	bl	16a20 <xTaskResumeAll>
   163b2:	b938      	cbnz	r0, 163c4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   163b4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   163b8:	f8ca 3000 	str.w	r3, [sl]
   163bc:	f3bf 8f4f 	dsb	sy
   163c0:	f3bf 8f6f 	isb	sy
   163c4:	2701      	movs	r7, #1
   163c6:	e795      	b.n	162f4 <xQueueGenericSend+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   163c8:	4620      	mov	r0, r4
   163ca:	f7ff fefa 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   163ce:	f000 fb27 	bl	16a20 <xTaskResumeAll>
   163d2:	e7f7      	b.n	163c4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   163d4:	4620      	mov	r0, r4
   163d6:	f7ff fef4 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   163da:	f000 fb21 	bl	16a20 <xTaskResumeAll>
   163de:	e7b7      	b.n	16350 <xQueueGenericSend+0x70>
   163e0:	e000ed04 	.word	0xe000ed04

000163e4 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   163e4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   163e6:	4602      	mov	r2, r0
   163e8:	2100      	movs	r1, #0
   163ea:	2001      	movs	r0, #1
   163ec:	f7ff ff5e 	bl	162ac <xQueueGenericCreate>
prvInitialiseMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   163f0:	4604      	mov	r4, r0
   163f2:	b138      	cbz	r0, 16404 <xQueueCreateMutex+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   163f4:	2300      	movs	r3, #0
   163f6:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   163f8:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   163fa:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   163fc:	461a      	mov	r2, r3
   163fe:	4619      	mov	r1, r3
   16400:	f7ff ff6e 	bl	162e0 <xQueueGenericSend>
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   16404:	4620      	mov	r0, r4
   16406:	bd10      	pop	{r4, pc}

00016408 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   16408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1640c:	4604      	mov	r4, r0
   1640e:	4690      	mov	r8, r2
   16410:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   16412:	f3ef 8611 	mrs	r6, BASEPRI
   16416:	f04f 0310 	mov.w	r3, #16
   1641a:	f383 8811 	msr	BASEPRI, r3
   1641e:	f3bf 8f6f 	isb	sy
   16422:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   16426:	6b82      	ldr	r2, [r0, #56]	; 0x38
   16428:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   1642a:	429a      	cmp	r2, r3
   1642c:	d301      	bcc.n	16432 <xQueueGenericSendFromISR+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   1642e:	2f02      	cmp	r7, #2
   16430:	d128      	bne.n	16484 <xQueueGenericSendFromISR+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16432:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   16436:	463a      	mov	r2, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16438:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   1643a:	4620      	mov	r0, r4
   1643c:	f7ff fe55 	bl	160ea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   16440:	1c6b      	adds	r3, r5, #1
   16442:	d11a      	bne.n	1647a <xQueueGenericSendFromISR+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   16444:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16446:	b183      	cbz	r3, 1646a <xQueueGenericSendFromISR+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   16448:	4639      	mov	r1, r7
   1644a:	4620      	mov	r0, r4
   1644c:	f7ff fe80 	bl	16150 <prvNotifyQueueSetContainer>
   16450:	b908      	cbnz	r0, 16456 <xQueueGenericSendFromISR+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   16452:	2001      	movs	r0, #1
   16454:	e005      	b.n	16462 <xQueueGenericSendFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   16456:	f1b8 0f00 	cmp.w	r8, #0
   1645a:	d0fa      	beq.n	16452 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   1645c:	2001      	movs	r0, #1
   1645e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16462:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   16466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1646a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1646c:	2b00      	cmp	r3, #0
   1646e:	d0f0      	beq.n	16452 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16470:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16474:	f000 fbc4 	bl	16c00 <xTaskRemoveFromEventList>
   16478:	e7ea      	b.n	16450 <xQueueGenericSendFromISR+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1647a:	3501      	adds	r5, #1
   1647c:	b26d      	sxtb	r5, r5
   1647e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   16482:	e7e6      	b.n	16452 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   16484:	2000      	movs	r0, #0
   16486:	e7ec      	b.n	16462 <xQueueGenericSendFromISR+0x5a>

00016488 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   16488:	b538      	push	{r3, r4, r5, lr}
   1648a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1648c:	f3ef 8411 	mrs	r4, BASEPRI
   16490:	f04f 0210 	mov.w	r2, #16
   16494:	f382 8811 	msr	BASEPRI, r2
   16498:	f3bf 8f6f 	isb	sy
   1649c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   164a0:	6b81      	ldr	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   164a2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   164a4:	4291      	cmp	r1, r2
   164a6:	d221      	bcs.n	164ec <xQueueGiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   164a8:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   164ac:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   164ae:	b252      	sxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   164b0:	6381      	str	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   164b2:	1c51      	adds	r1, r2, #1
   164b4:	d115      	bne.n	164e2 <xQueueGiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   164b6:	6c82      	ldr	r2, [r0, #72]	; 0x48
   164b8:	b162      	cbz	r2, 164d4 <xQueueGiveFromISR+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   164ba:	2100      	movs	r1, #0
   164bc:	f7ff fe48 	bl	16150 <prvNotifyQueueSetContainer>
   164c0:	b908      	cbnz	r0, 164c6 <xQueueGiveFromISR+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   164c2:	2001      	movs	r0, #1
   164c4:	e003      	b.n	164ce <xQueueGiveFromISR+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   164c6:	2d00      	cmp	r5, #0
   164c8:	d0fb      	beq.n	164c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   164ca:	2001      	movs	r0, #1
   164cc:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   164ce:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   164d2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   164d4:	6a42      	ldr	r2, [r0, #36]	; 0x24
   164d6:	2a00      	cmp	r2, #0
   164d8:	d0f3      	beq.n	164c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   164da:	3024      	adds	r0, #36	; 0x24
   164dc:	f000 fb90 	bl	16c00 <xTaskRemoveFromEventList>
   164e0:	e7ee      	b.n	164c0 <xQueueGiveFromISR+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   164e2:	3201      	adds	r2, #1
   164e4:	b252      	sxtb	r2, r2
   164e6:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   164ea:	e7ea      	b.n	164c2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   164ec:	2000      	movs	r0, #0
   164ee:	e7ee      	b.n	164ce <xQueueGiveFromISR+0x46>

000164f0 <xQueueGenericReceive>:
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   164f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   164f4:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   164f8:	4604      	mov	r4, r0
   164fa:	460f      	mov	r7, r1
   164fc:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   164fe:	4656      	mov	r6, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   16500:	f8df 911c 	ldr.w	r9, [pc, #284]	; 16620 <xQueueGenericReceive+0x130>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   16504:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   16506:	f7ff fd05 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   1650a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   1650c:	b355      	cbz	r5, 16564 <xQueueGenericReceive+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   1650e:	4639      	mov	r1, r7
   16510:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   16512:	68e6      	ldr	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   16514:	f7ff fe41 	bl	1619a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   16518:	f1b8 0f00 	cmp.w	r8, #0
   1651c:	d11b      	bne.n	16556 <xQueueGenericReceive+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   1651e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16520:	3d01      	subs	r5, #1
   16522:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   16524:	b913      	cbnz	r3, 1652c <xQueueGenericReceive+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   16526:	f000 fc6b 	bl	16e00 <pvTaskIncrementMutexHeldCount>
   1652a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1652c:	6923      	ldr	r3, [r4, #16]
   1652e:	b163      	cbz	r3, 1654a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16530:	f104 0010 	add.w	r0, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16534:	f000 fb64 	bl	16c00 <xTaskRemoveFromEventList>
   16538:	b138      	cbz	r0, 1654a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   1653a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1653e:	4b38      	ldr	r3, [pc, #224]	; (16620 <xQueueGenericReceive+0x130>)
   16540:	601a      	str	r2, [r3, #0]
   16542:	f3bf 8f4f 	dsb	sy
   16546:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   1654a:	f7ff fcf3 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   1654e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   16550:	b004      	add	sp, #16
   16552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16556:	6a63      	ldr	r3, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   16558:	60e6      	str	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1655a:	2b00      	cmp	r3, #0
   1655c:	d0f5      	beq.n	1654a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1655e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16562:	e7e7      	b.n	16534 <xQueueGenericReceive+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   16564:	9d01      	ldr	r5, [sp, #4]
   16566:	b91d      	cbnz	r5, 16570 <xQueueGenericReceive+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   16568:	f7ff fce4 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   1656c:	4628      	mov	r0, r5
   1656e:	e7ef      	b.n	16550 <xQueueGenericReceive+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   16570:	f1ba 0f00 	cmp.w	sl, #0
   16574:	d102      	bne.n	1657c <xQueueGenericReceive+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   16576:	a802      	add	r0, sp, #8
   16578:	f000 fb7a 	bl	16c70 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   1657c:	f7ff fcda 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   16580:	f000 f9ba 	bl	168f8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   16584:	f7ff fcc6 	bl	15f14 <vPortEnterCritical>
   16588:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1658c:	2bff      	cmp	r3, #255	; 0xff
   1658e:	bf08      	it	eq
   16590:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   16594:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16598:	2bff      	cmp	r3, #255	; 0xff
   1659a:	bf08      	it	eq
   1659c:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   165a0:	f7ff fcc8 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   165a4:	a901      	add	r1, sp, #4
   165a6:	a802      	add	r0, sp, #8
   165a8:	f000 fb6e 	bl	16c88 <xTaskCheckForTimeOut>
   165ac:	bb50      	cbnz	r0, 16604 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   165ae:	f7ff fcb1 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   165b2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   165b4:	f7ff fcbe 	bl	15f34 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   165b8:	b9f5      	cbnz	r5, 165f8 <xQueueGenericReceive+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   165ba:	6823      	ldr	r3, [r4, #0]
   165bc:	b933      	cbnz	r3, 165cc <xQueueGenericReceive+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   165be:	f7ff fca9 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   165c2:	6860      	ldr	r0, [r4, #4]
   165c4:	f000 fb9c 	bl	16d00 <vTaskPriorityInherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   165c8:	f7ff fcb4 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   165cc:	9901      	ldr	r1, [sp, #4]
   165ce:	f104 0024 	add.w	r0, r4, #36	; 0x24
   165d2:	f000 fb05 	bl	16be0 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   165d6:	4620      	mov	r0, r4
   165d8:	f7ff fdf3 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   165dc:	f000 fa20 	bl	16a20 <xTaskResumeAll>
   165e0:	b938      	cbnz	r0, 165f2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   165e2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   165e6:	f8c9 3000 	str.w	r3, [r9]
   165ea:	f3bf 8f4f 	dsb	sy
   165ee:	f3bf 8f6f 	isb	sy
   165f2:	f04f 0a01 	mov.w	sl, #1
   165f6:	e786      	b.n	16506 <xQueueGenericReceive+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   165f8:	4620      	mov	r0, r4
   165fa:	f7ff fde2 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   165fe:	f000 fa0f 	bl	16a20 <xTaskResumeAll>
   16602:	e7f6      	b.n	165f2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   16604:	4620      	mov	r0, r4
   16606:	f7ff fddc 	bl	161c2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   1660a:	f000 fa09 	bl	16a20 <xTaskResumeAll>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   1660e:	f7ff fc81 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   16612:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   16614:	f7ff fc8e 	bl	15f34 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   16618:	2d00      	cmp	r5, #0
   1661a:	d1ea      	bne.n	165f2 <xQueueGenericReceive+0x102>
   1661c:	e7a6      	b.n	1656c <xQueueGenericReceive+0x7c>
   1661e:	bf00      	nop
   16620:	e000ed04 	.word	0xe000ed04

00016624 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   16624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16628:	4607      	mov	r7, r0
   1662a:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1662c:	f3ef 8611 	mrs	r6, BASEPRI
   16630:	f04f 0310 	mov.w	r3, #16
   16634:	f383 8811 	msr	BASEPRI, r3
   16638:	f3bf 8f6f 	isb	sy
   1663c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   16640:	6b84      	ldr	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16642:	b30c      	cbz	r4, 16688 <xQueueReceiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   16644:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16648:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   1664a:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   1664c:	f7ff fda5 	bl	1619a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16650:	1c6b      	adds	r3, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16652:	63bc      	str	r4, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16654:	d113      	bne.n	1667e <xQueueReceiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16656:	693b      	ldr	r3, [r7, #16]
   16658:	b90b      	cbnz	r3, 1665e <xQueueReceiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   1665a:	2001      	movs	r0, #1
   1665c:	e00b      	b.n	16676 <xQueueReceiveFromISR+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1665e:	f107 0010 	add.w	r0, r7, #16
   16662:	f000 facd 	bl	16c00 <xTaskRemoveFromEventList>
   16666:	2800      	cmp	r0, #0
   16668:	d0f7      	beq.n	1665a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   1666a:	f1b8 0f00 	cmp.w	r8, #0
   1666e:	d0f4      	beq.n	1665a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   16670:	2001      	movs	r0, #1
   16672:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16676:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   1667a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   1667e:	3501      	adds	r5, #1
   16680:	b26d      	sxtb	r5, r5
   16682:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   16686:	e7e8      	b.n	1665a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   16688:	4620      	mov	r0, r4
   1668a:	e7f4      	b.n	16676 <xQueueReceiveFromISR+0x52>

0001668c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   1668c:	b510      	push	{r4, lr}
   1668e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   16690:	f7ff fc40 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   16694:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   16696:	f7ff fc4d 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   1669a:	4620      	mov	r0, r4
   1669c:	bd10      	pop	{r4, pc}

0001669e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   1669e:	6b80      	ldr	r0, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   166a0:	4770      	bx	lr
   166a2:	Address 0x00000000000166a2 is out of bounds.


000166a4 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   166a4:	4a06      	ldr	r2, [pc, #24]	; (166c0 <prvResetNextTaskUnblockTime+0x1c>)
   166a6:	6813      	ldr	r3, [r2, #0]
   166a8:	6819      	ldr	r1, [r3, #0]
   166aa:	4b06      	ldr	r3, [pc, #24]	; (166c4 <prvResetNextTaskUnblockTime+0x20>)
   166ac:	b919      	cbnz	r1, 166b6 <prvResetNextTaskUnblockTime+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   166ae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   166b2:	601a      	str	r2, [r3, #0]
   166b4:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   166b6:	6812      	ldr	r2, [r2, #0]
   166b8:	68d2      	ldr	r2, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   166ba:	68d2      	ldr	r2, [r2, #12]
   166bc:	6852      	ldr	r2, [r2, #4]
   166be:	e7f8      	b.n	166b2 <prvResetNextTaskUnblockTime+0xe>
   166c0:	2007c5e4 	.word	0x2007c5e4
   166c4:	2007c6f4 	.word	0x2007c6f4

000166c8 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   166c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   166ca:	4b1b      	ldr	r3, [pc, #108]	; (16738 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   166cc:	4e1b      	ldr	r6, [pc, #108]	; (1673c <prvAddCurrentTaskToDelayedList+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   166ce:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   166d0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   166d2:	6830      	ldr	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   166d4:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   166d6:	3004      	adds	r0, #4
   166d8:	f7ff fcf7 	bl	160ca <uxListRemove>
   166dc:	4633      	mov	r3, r6
   166de:	b940      	cbnz	r0, 166f2 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   166e0:	2001      	movs	r0, #1
   166e2:	6831      	ldr	r1, [r6, #0]
   166e4:	4e16      	ldr	r6, [pc, #88]	; (16740 <prvAddCurrentTaskToDelayedList+0x78>)
   166e6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   166e8:	6832      	ldr	r2, [r6, #0]
   166ea:	4088      	lsls	r0, r1
   166ec:	ea22 0200 	bic.w	r2, r2, r0
   166f0:	6032      	str	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   166f2:	1c62      	adds	r2, r4, #1
   166f4:	d107      	bne.n	16706 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   166f6:	b137      	cbz	r7, 16706 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   166f8:	6819      	ldr	r1, [r3, #0]
   166fa:	4812      	ldr	r0, [pc, #72]	; (16744 <prvAddCurrentTaskToDelayedList+0x7c>)
   166fc:	3104      	adds	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   166fe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16702:	f7ff bcbf 	b.w	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   16706:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   16708:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   1670a:	42a5      	cmp	r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   1670c:	6054      	str	r4, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   1670e:	d907      	bls.n	16720 <prvAddCurrentTaskToDelayedList+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16710:	4a0d      	ldr	r2, [pc, #52]	; (16748 <prvAddCurrentTaskToDelayedList+0x80>)
   16712:	6810      	ldr	r0, [r2, #0]
   16714:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   16716:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1671a:	3104      	adds	r1, #4
   1671c:	f7ff bcbe 	b.w	1609c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   16720:	4a0a      	ldr	r2, [pc, #40]	; (1674c <prvAddCurrentTaskToDelayedList+0x84>)
   16722:	6810      	ldr	r0, [r2, #0]
   16724:	6819      	ldr	r1, [r3, #0]
   16726:	3104      	adds	r1, #4
   16728:	f7ff fcb8 	bl	1609c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   1672c:	4b08      	ldr	r3, [pc, #32]	; (16750 <prvAddCurrentTaskToDelayedList+0x88>)
   1672e:	681a      	ldr	r2, [r3, #0]
   16730:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   16732:	bf38      	it	cc
   16734:	601c      	strcc	r4, [r3, #0]
   16736:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16738:	2007c728 	.word	0x2007c728
   1673c:	2007c5e0 	.word	0x2007c5e0
   16740:	2007c6c8 	.word	0x2007c6c8
   16744:	2007c714 	.word	0x2007c714
   16748:	2007c5e8 	.word	0x2007c5e8
   1674c:	2007c5e4 	.word	0x2007c5e4
   16750:	2007c6f4 	.word	0x2007c6f4

00016754 <xTaskCreate>:
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16754:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16758:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   1675c:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1675e:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16760:	460d      	mov	r5, r1
   16762:	4699      	mov	r9, r3
   16764:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16766:	f7ff fc63 	bl	16030 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   1676a:	4607      	mov	r7, r0
   1676c:	2800      	cmp	r0, #0
   1676e:	f000 809b 	beq.w	168a8 <xTaskCreate+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   16772:	2058      	movs	r0, #88	; 0x58
   16774:	f7ff fc5c 	bl	16030 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   16778:	4604      	mov	r4, r0
   1677a:	2800      	cmp	r0, #0
   1677c:	f000 8091 	beq.w	168a2 <xTaskCreate+0x14e>
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16780:	4652      	mov	r2, sl
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   16782:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16784:	21a5      	movs	r1, #165	; 0xa5
   16786:	4638      	mov	r0, r7
   16788:	f002 fbc0 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   1678c:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1678e:	f1aa 0a04 	sub.w	sl, sl, #4
   16792:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   16794:	f02a 0a07 	bic.w	sl, sl, #7
   16798:	1e6b      	subs	r3, r5, #1
   1679a:	f104 0234 	add.w	r2, r4, #52	; 0x34
   1679e:	3507      	adds	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   167a0:	7859      	ldrb	r1, [r3, #1]
   167a2:	f802 1b01 	strb.w	r1, [r2], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   167a6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   167aa:	b109      	cbz	r1, 167b0 <xTaskCreate+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   167ac:	42ab      	cmp	r3, r5
   167ae:	d1f7      	bne.n	167a0 <xTaskCreate+0x4c>
   167b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   167b2:	f04f 0b00 	mov.w	fp, #0
   167b6:	2d09      	cmp	r5, #9
   167b8:	bf28      	it	cs
   167ba:	2509      	movcs	r5, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   167bc:	1d27      	adds	r7, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   167be:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   167c0:	6465      	str	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   167c2:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   167c4:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   167c8:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   167cc:	f7ff fc57 	bl	1607e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   167d0:	f1c5 050a 	rsb	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   167d4:	f104 0018 	add.w	r0, r4, #24
   167d8:	f7ff fc51 	bl	1607e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   167dc:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   167e0:	6124      	str	r4, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   167e2:	61a5      	str	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   167e4:	6264      	str	r4, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   167e6:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   167ea:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   167ee:	464a      	mov	r2, r9
   167f0:	4641      	mov	r1, r8
   167f2:	4650      	mov	r0, sl
   167f4:	f7ff fb68 	bl	15ec8 <pxPortInitialiseStack>
   167f8:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   167fa:	b106      	cbz	r6, 167fe <xTaskCreate+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   167fc:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   167fe:	f7ff fb89 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   16802:	4b30      	ldr	r3, [pc, #192]	; (168c4 <xTaskCreate+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   16804:	4e30      	ldr	r6, [pc, #192]	; (168c8 <xTaskCreate+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   16806:	681a      	ldr	r2, [r3, #0]
   16808:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 168f0 <xTaskCreate+0x19c>
   1680c:	3201      	adds	r2, #1
   1680e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   16810:	6835      	ldr	r5, [r6, #0]
   16812:	2d00      	cmp	r5, #0
   16814:	d14b      	bne.n	168ae <xTaskCreate+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   16816:	6034      	str	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   16818:	681b      	ldr	r3, [r3, #0]
   1681a:	2b01      	cmp	r3, #1
   1681c:	d11a      	bne.n	16854 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   1681e:	eb08 0005 	add.w	r0, r8, r5
   16822:	3514      	adds	r5, #20
   16824:	f7ff fc20 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   16828:	2dc8      	cmp	r5, #200	; 0xc8
   1682a:	d1f8      	bne.n	1681e <xTaskCreate+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   1682c:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 168f4 <xTaskCreate+0x1a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16830:	4d26      	ldr	r5, [pc, #152]	; (168cc <xTaskCreate+0x178>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   16832:	4648      	mov	r0, r9
   16834:	f7ff fc18 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16838:	4628      	mov	r0, r5
   1683a:	f7ff fc15 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   1683e:	4824      	ldr	r0, [pc, #144]	; (168d0 <xTaskCreate+0x17c>)
   16840:	f7ff fc12 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   16844:	4823      	ldr	r0, [pc, #140]	; (168d4 <xTaskCreate+0x180>)
   16846:	f7ff fc0f 	bl	16068 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   1684a:	4b23      	ldr	r3, [pc, #140]	; (168d8 <xTaskCreate+0x184>)
   1684c:	f8c3 9000 	str.w	r9, [r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   16850:	4b22      	ldr	r3, [pc, #136]	; (168dc <xTaskCreate+0x188>)
   16852:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16854:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   16856:	4a22      	ldr	r2, [pc, #136]	; (168e0 <xTaskCreate+0x18c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16858:	4922      	ldr	r1, [pc, #136]	; (168e4 <xTaskCreate+0x190>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   1685a:	6813      	ldr	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   1685c:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   1685e:	3301      	adds	r3, #1
   16860:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16862:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16864:	fa05 f302 	lsl.w	r3, r5, r2
   16868:	4303      	orrs	r3, r0
   1686a:	2014      	movs	r0, #20
   1686c:	600b      	str	r3, [r1, #0]
   1686e:	fb00 8002 	mla	r0, r0, r2, r8
   16872:	4639      	mov	r1, r7
   16874:	f7ff fc06 	bl	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   16878:	f7ff fb5c 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   1687c:	4b1a      	ldr	r3, [pc, #104]	; (168e8 <xTaskCreate+0x194>)
   1687e:	681b      	ldr	r3, [r3, #0]
   16880:	b163      	cbz	r3, 1689c <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   16882:	6833      	ldr	r3, [r6, #0]
   16884:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   16886:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   16888:	429a      	cmp	r2, r3
   1688a:	d207      	bcs.n	1689c <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   1688c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16890:	4b16      	ldr	r3, [pc, #88]	; (168ec <xTaskCreate+0x198>)
   16892:	601a      	str	r2, [r3, #0]
   16894:	f3bf 8f4f 	dsb	sy
   16898:	f3bf 8f6f 	isb	sy
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   1689c:	4628      	mov	r0, r5
   1689e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   168a2:	4638      	mov	r0, r7
   168a4:	f7ff fbd3 	bl	1604e <vPortFree>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   168a8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   168ac:	e7f6      	b.n	1689c <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   168ae:	4b0e      	ldr	r3, [pc, #56]	; (168e8 <xTaskCreate+0x194>)
   168b0:	681b      	ldr	r3, [r3, #0]
   168b2:	2b00      	cmp	r3, #0
   168b4:	d1ce      	bne.n	16854 <xTaskCreate+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   168b6:	6833      	ldr	r3, [r6, #0]
   168b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   168ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   168bc:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   168be:	bf98      	it	ls
   168c0:	6034      	strls	r4, [r6, #0]
   168c2:	e7c7      	b.n	16854 <xTaskCreate+0x100>
   168c4:	2007c6b8 	.word	0x2007c6b8
   168c8:	2007c5e0 	.word	0x2007c5e0
   168cc:	2007c6e0 	.word	0x2007c6e0
   168d0:	2007c6fc 	.word	0x2007c6fc
   168d4:	2007c714 	.word	0x2007c714
   168d8:	2007c5e4 	.word	0x2007c5e4
   168dc:	2007c5e8 	.word	0x2007c5e8
   168e0:	2007c6c4 	.word	0x2007c6c4
   168e4:	2007c6c8 	.word	0x2007c6c8
   168e8:	2007c710 	.word	0x2007c710
   168ec:	e000ed04 	.word	0xe000ed04
   168f0:	2007c5ec 	.word	0x2007c5ec
   168f4:	2007c6cc 	.word	0x2007c6cc

000168f8 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   168f8:	4a02      	ldr	r2, [pc, #8]	; (16904 <vTaskSuspendAll+0xc>)
   168fa:	6813      	ldr	r3, [r2, #0]
   168fc:	3301      	adds	r3, #1
   168fe:	6013      	str	r3, [r2, #0]
   16900:	4770      	bx	lr
   16902:	bf00      	nop
   16904:	2007c6c0 	.word	0x2007c6c0

00016908 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   16908:	4b01      	ldr	r3, [pc, #4]	; (16910 <xTaskGetTickCountFromISR+0x8>)
   1690a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   1690c:	4770      	bx	lr
   1690e:	bf00      	nop
   16910:	2007c728 	.word	0x2007c728

00016914 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   16914:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16918:	4b36      	ldr	r3, [pc, #216]	; (169f4 <xTaskIncrementTick+0xe0>)
   1691a:	681b      	ldr	r3, [r3, #0]
   1691c:	2b00      	cmp	r3, #0
   1691e:	d147      	bne.n	169b0 <xTaskIncrementTick+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   16920:	4b35      	ldr	r3, [pc, #212]	; (169f8 <xTaskIncrementTick+0xe4>)
   16922:	681c      	ldr	r4, [r3, #0]
   16924:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   16926:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   16928:	b95c      	cbnz	r4, 16942 <xTaskIncrementTick+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   1692a:	4a34      	ldr	r2, [pc, #208]	; (169fc <xTaskIncrementTick+0xe8>)
   1692c:	4b34      	ldr	r3, [pc, #208]	; (16a00 <xTaskIncrementTick+0xec>)
   1692e:	6811      	ldr	r1, [r2, #0]
   16930:	6818      	ldr	r0, [r3, #0]
   16932:	6010      	str	r0, [r2, #0]
   16934:	4a33      	ldr	r2, [pc, #204]	; (16a04 <xTaskIncrementTick+0xf0>)
   16936:	6019      	str	r1, [r3, #0]
   16938:	6813      	ldr	r3, [r2, #0]
   1693a:	3301      	adds	r3, #1
   1693c:	6013      	str	r3, [r2, #0]
   1693e:	f7ff feb1 	bl	166a4 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   16942:	4d31      	ldr	r5, [pc, #196]	; (16a08 <xTaskIncrementTick+0xf4>)
   16944:	f04f 0b00 	mov.w	fp, #0
   16948:	682b      	ldr	r3, [r5, #0]
   1694a:	4f30      	ldr	r7, [pc, #192]	; (16a0c <xTaskIncrementTick+0xf8>)
   1694c:	429c      	cmp	r4, r3
   1694e:	d33e      	bcc.n	169ce <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16950:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 169fc <xTaskIncrementTick+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   16954:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 16a1c <xTaskIncrementTick+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16958:	f8d8 2000 	ldr.w	r2, [r8]
   1695c:	6812      	ldr	r2, [r2, #0]
   1695e:	bb72      	cbnz	r2, 169be <xTaskIncrementTick+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16960:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16964:	602a      	str	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   16966:	e032      	b.n	169ce <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16968:	f106 0a04 	add.w	sl, r6, #4
   1696c:	4650      	mov	r0, sl
   1696e:	f7ff fbac 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   16972:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   16974:	b119      	cbz	r1, 1697e <xTaskIncrementTick+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   16976:	f106 0018 	add.w	r0, r6, #24
   1697a:	f7ff fba6 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   1697e:	2201      	movs	r2, #1
   16980:	f04f 0e14 	mov.w	lr, #20
   16984:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   16986:	f8d9 3000 	ldr.w	r3, [r9]
   1698a:	fa02 f100 	lsl.w	r1, r2, r0
   1698e:	4319      	orrs	r1, r3
   16990:	4b1f      	ldr	r3, [pc, #124]	; (16a10 <xTaskIncrementTick+0xfc>)
   16992:	f8c9 1000 	str.w	r1, [r9]
   16996:	fb0e 3000 	mla	r0, lr, r0, r3
   1699a:	4651      	mov	r1, sl
   1699c:	f7ff fb72 	bl	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   169a0:	6838      	ldr	r0, [r7, #0]
   169a2:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   169a4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   169a6:	4291      	cmp	r1, r2
   169a8:	bf28      	it	cs
   169aa:	f04f 0b01 	movcs.w	fp, #1
   169ae:	e7d3      	b.n	16958 <xTaskIncrementTick+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   169b0:	4a18      	ldr	r2, [pc, #96]	; (16a14 <xTaskIncrementTick+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   169b2:	f04f 0b00 	mov.w	fp, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   169b6:	6813      	ldr	r3, [r2, #0]
   169b8:	3301      	adds	r3, #1
   169ba:	6013      	str	r3, [r2, #0]
   169bc:	e011      	b.n	169e2 <xTaskIncrementTick+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   169be:	f8d8 2000 	ldr.w	r2, [r8]
   169c2:	68d2      	ldr	r2, [r2, #12]
   169c4:	68d6      	ldr	r6, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   169c6:	6871      	ldr	r1, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   169c8:	428c      	cmp	r4, r1
   169ca:	d2cd      	bcs.n	16968 <xTaskIncrementTick+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   169cc:	6029      	str	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   169ce:	683a      	ldr	r2, [r7, #0]
   169d0:	4b0f      	ldr	r3, [pc, #60]	; (16a10 <xTaskIncrementTick+0xfc>)
   169d2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   169d4:	2214      	movs	r2, #20
   169d6:	434a      	muls	r2, r1
   169d8:	589a      	ldr	r2, [r3, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   169da:	2a02      	cmp	r2, #2
   169dc:	bf28      	it	cs
   169de:	f04f 0b01 	movcs.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   169e2:	4a0d      	ldr	r2, [pc, #52]	; (16a18 <xTaskIncrementTick+0x104>)
   169e4:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   169e6:	2a00      	cmp	r2, #0
   169e8:	bf18      	it	ne
   169ea:	f04f 0b01 	movne.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   169ee:	4658      	mov	r0, fp
   169f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169f4:	2007c6c0 	.word	0x2007c6c0
   169f8:	2007c728 	.word	0x2007c728
   169fc:	2007c5e4 	.word	0x2007c5e4
   16a00:	2007c5e8 	.word	0x2007c5e8
   16a04:	2007c6f8 	.word	0x2007c6f8
   16a08:	2007c6f4 	.word	0x2007c6f4
   16a0c:	2007c5e0 	.word	0x2007c5e0
   16a10:	2007c5ec 	.word	0x2007c5ec
   16a14:	2007c6bc 	.word	0x2007c6bc
   16a18:	2007c72c 	.word	0x2007c72c
   16a1c:	2007c6c8 	.word	0x2007c6c8

00016a20 <xTaskResumeAll>:
xTaskResumeAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   16a20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   16a24:	f7ff fa76 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   16a28:	4b2a      	ldr	r3, [pc, #168]	; (16ad4 <xTaskResumeAll+0xb4>)
   16a2a:	681a      	ldr	r2, [r3, #0]
   16a2c:	3a01      	subs	r2, #1
   16a2e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16a30:	681c      	ldr	r4, [r3, #0]
   16a32:	b12c      	cbz	r4, 16a40 <xTaskResumeAll+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   16a34:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   16a36:	f7ff fa7d 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   16a3a:	4620      	mov	r0, r4
   16a3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   16a40:	4b25      	ldr	r3, [pc, #148]	; (16ad8 <xTaskResumeAll+0xb8>)
   16a42:	681b      	ldr	r3, [r3, #0]
   16a44:	2b00      	cmp	r3, #0
   16a46:	d0f5      	beq.n	16a34 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   16a48:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 16af0 <xTaskResumeAll+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16a4c:	4f23      	ldr	r7, [pc, #140]	; (16adc <xTaskResumeAll+0xbc>)
   16a4e:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 16af4 <xTaskResumeAll+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   16a52:	f8d9 3000 	ldr.w	r3, [r9]
   16a56:	b9e3      	cbnz	r3, 16a92 <xTaskResumeAll+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   16a58:	b10c      	cbz	r4, 16a5e <xTaskResumeAll+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   16a5a:	f7ff fe23 	bl	166a4 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   16a5e:	4d20      	ldr	r5, [pc, #128]	; (16ae0 <xTaskResumeAll+0xc0>)
   16a60:	682c      	ldr	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   16a62:	b144      	cbz	r4, 16a76 <xTaskResumeAll+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   16a64:	2701      	movs	r7, #1
   16a66:	4e1f      	ldr	r6, [pc, #124]	; (16ae4 <xTaskResumeAll+0xc4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   16a68:	f7ff ff54 	bl	16914 <xTaskIncrementTick>
   16a6c:	b100      	cbz	r0, 16a70 <xTaskResumeAll+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   16a6e:	6037      	str	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   16a70:	3c01      	subs	r4, #1
   16a72:	d1f9      	bne.n	16a68 <xTaskResumeAll+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   16a74:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   16a76:	4b1b      	ldr	r3, [pc, #108]	; (16ae4 <xTaskResumeAll+0xc4>)
   16a78:	681b      	ldr	r3, [r3, #0]
   16a7a:	2b00      	cmp	r3, #0
   16a7c:	d0da      	beq.n	16a34 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   16a7e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16a82:	4b19      	ldr	r3, [pc, #100]	; (16ae8 <xTaskResumeAll+0xc8>)
   16a84:	601a      	str	r2, [r3, #0]
   16a86:	f3bf 8f4f 	dsb	sy
   16a8a:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   16a8e:	2401      	movs	r4, #1
   16a90:	e7d1      	b.n	16a36 <xTaskResumeAll+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   16a92:	f8d9 300c 	ldr.w	r3, [r9, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16a96:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   16a98:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16a9a:	1d26      	adds	r6, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   16a9c:	f104 0018 	add.w	r0, r4, #24
   16aa0:	f7ff fb13 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16aa4:	4630      	mov	r0, r6
   16aa6:	f7ff fb10 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16aaa:	2014      	movs	r0, #20
   16aac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16aae:	6839      	ldr	r1, [r7, #0]
   16ab0:	fa05 f302 	lsl.w	r3, r5, r2
   16ab4:	430b      	orrs	r3, r1
   16ab6:	fb00 8002 	mla	r0, r0, r2, r8
   16aba:	4631      	mov	r1, r6
   16abc:	603b      	str	r3, [r7, #0]
   16abe:	f7ff fae1 	bl	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   16ac2:	4b0a      	ldr	r3, [pc, #40]	; (16aec <xTaskResumeAll+0xcc>)
   16ac4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16ac6:	681b      	ldr	r3, [r3, #0]
   16ac8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16aca:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   16acc:	bf24      	itt	cs
   16ace:	4b05      	ldrcs	r3, [pc, #20]	; (16ae4 <xTaskResumeAll+0xc4>)
   16ad0:	601d      	strcs	r5, [r3, #0]
   16ad2:	e7be      	b.n	16a52 <xTaskResumeAll+0x32>
   16ad4:	2007c6c0 	.word	0x2007c6c0
   16ad8:	2007c6b8 	.word	0x2007c6b8
   16adc:	2007c6c8 	.word	0x2007c6c8
   16ae0:	2007c6bc 	.word	0x2007c6bc
   16ae4:	2007c72c 	.word	0x2007c72c
   16ae8:	e000ed04 	.word	0xe000ed04
   16aec:	2007c5e0 	.word	0x2007c5e0
   16af0:	2007c6fc 	.word	0x2007c6fc
   16af4:	2007c5ec 	.word	0x2007c5ec

00016af8 <vTaskDelay>:
vTaskDelay():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   16af8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   16afa:	b940      	cbnz	r0, 16b0e <vTaskDelay+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   16afc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16b00:	4b08      	ldr	r3, [pc, #32]	; (16b24 <vTaskDelay+0x2c>)
   16b02:	601a      	str	r2, [r3, #0]
   16b04:	f3bf 8f4f 	dsb	sy
   16b08:	f3bf 8f6f 	isb	sy
   16b0c:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   16b0e:	f7ff fef3 	bl	168f8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   16b12:	2100      	movs	r1, #0
   16b14:	f7ff fdd8 	bl	166c8 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   16b18:	f7ff ff82 	bl	16a20 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   16b1c:	2800      	cmp	r0, #0
   16b1e:	d0ed      	beq.n	16afc <vTaskDelay+0x4>
   16b20:	bd08      	pop	{r3, pc}
   16b22:	bf00      	nop
   16b24:	e000ed04 	.word	0xe000ed04

00016b28 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   16b28:	4b26      	ldr	r3, [pc, #152]	; (16bc4 <vTaskSwitchContext+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   16b2a:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   16b2c:	681a      	ldr	r2, [r3, #0]
   16b2e:	4b26      	ldr	r3, [pc, #152]	; (16bc8 <vTaskSwitchContext+0xa0>)
   16b30:	b112      	cbz	r2, 16b38 <vTaskSwitchContext+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   16b32:	2201      	movs	r2, #1
   16b34:	601a      	str	r2, [r3, #0]
   16b36:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   16b38:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   16b3a:	f7ff fa41 	bl	15fc0 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   16b3e:	4a23      	ldr	r2, [pc, #140]	; (16bcc <vTaskSwitchContext+0xa4>)
   16b40:	4c23      	ldr	r4, [pc, #140]	; (16bd0 <vTaskSwitchContext+0xa8>)
   16b42:	6815      	ldr	r5, [r2, #0]
   16b44:	42a8      	cmp	r0, r5
   16b46:	d904      	bls.n	16b52 <vTaskSwitchContext+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   16b48:	6821      	ldr	r1, [r4, #0]
   16b4a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   16b4c:	1b5b      	subs	r3, r3, r5
   16b4e:	4403      	add	r3, r0
   16b50:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   16b52:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   16b54:	6010      	str	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   16b56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   16b58:	681a      	ldr	r2, [r3, #0]
   16b5a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16b5e:	d10b      	bne.n	16b78 <vTaskSwitchContext+0x50>
   16b60:	685a      	ldr	r2, [r3, #4]
   16b62:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16b66:	d107      	bne.n	16b78 <vTaskSwitchContext+0x50>
   16b68:	689a      	ldr	r2, [r3, #8]
   16b6a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16b6e:	d103      	bne.n	16b78 <vTaskSwitchContext+0x50>
   16b70:	68db      	ldr	r3, [r3, #12]
   16b72:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   16b76:	d004      	beq.n	16b82 <vTaskSwitchContext+0x5a>
   16b78:	6820      	ldr	r0, [r4, #0]
   16b7a:	6821      	ldr	r1, [r4, #0]
   16b7c:	3134      	adds	r1, #52	; 0x34
   16b7e:	f7ff fa29 	bl	15fd4 <vApplicationStackOverflowHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   16b82:	4b14      	ldr	r3, [pc, #80]	; (16bd4 <vTaskSwitchContext+0xac>)
   16b84:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   16b86:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   16b8a:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   16b8c:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   16b8e:	f1c3 031f 	rsb	r3, r3, #31
   16b92:	fb00 f203 	mul.w	r2, r0, r3
   16b96:	4910      	ldr	r1, [pc, #64]	; (16bd8 <vTaskSwitchContext+0xb0>)
   16b98:	188d      	adds	r5, r1, r2
   16b9a:	686e      	ldr	r6, [r5, #4]
   16b9c:	3208      	adds	r2, #8
   16b9e:	6876      	ldr	r6, [r6, #4]
   16ba0:	440a      	add	r2, r1
   16ba2:	4296      	cmp	r6, r2
   16ba4:	fb00 1303 	mla	r3, r0, r3, r1
   16ba8:	bf08      	it	eq
   16baa:	6872      	ldreq	r2, [r6, #4]
   16bac:	606e      	str	r6, [r5, #4]
   16bae:	bf08      	it	eq
   16bb0:	606a      	streq	r2, [r5, #4]
   16bb2:	685b      	ldr	r3, [r3, #4]
   16bb4:	68db      	ldr	r3, [r3, #12]
   16bb6:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   16bb8:	6823      	ldr	r3, [r4, #0]
   16bba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   16bbc:	4b07      	ldr	r3, [pc, #28]	; (16bdc <vTaskSwitchContext+0xb4>)
   16bbe:	645a      	str	r2, [r3, #68]	; 0x44
   16bc0:	bd70      	pop	{r4, r5, r6, pc}
   16bc2:	bf00      	nop
   16bc4:	2007c6c0 	.word	0x2007c6c0
   16bc8:	2007c72c 	.word	0x2007c72c
   16bcc:	2007c6b4 	.word	0x2007c6b4
   16bd0:	2007c5e0 	.word	0x2007c5e0
   16bd4:	2007c6c8 	.word	0x2007c6c8
   16bd8:	2007c5ec 	.word	0x2007c5ec
   16bdc:	40024000 	.word	0x40024000

00016be0 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   16be0:	b510      	push	{r4, lr}
   16be2:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   16be4:	4b05      	ldr	r3, [pc, #20]	; (16bfc <vTaskPlaceOnEventList+0x1c>)
   16be6:	6819      	ldr	r1, [r3, #0]
   16be8:	3118      	adds	r1, #24
   16bea:	f7ff fa57 	bl	1609c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   16bee:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   16bf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   16bf4:	2101      	movs	r1, #1
   16bf6:	f7ff bd67 	b.w	166c8 <prvAddCurrentTaskToDelayedList>
   16bfa:	bf00      	nop
   16bfc:	2007c5e0 	.word	0x2007c5e0

00016c00 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   16c00:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   16c02:	68c3      	ldr	r3, [r0, #12]
   16c04:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   16c06:	f104 0518 	add.w	r5, r4, #24
   16c0a:	4628      	mov	r0, r5
   16c0c:	f7ff fa5d 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16c10:	4b11      	ldr	r3, [pc, #68]	; (16c58 <xTaskRemoveFromEventList+0x58>)
   16c12:	681b      	ldr	r3, [r3, #0]
   16c14:	b9e3      	cbnz	r3, 16c50 <xTaskRemoveFromEventList+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   16c16:	1d25      	adds	r5, r4, #4
   16c18:	4628      	mov	r0, r5
   16c1a:	f7ff fa56 	bl	160ca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   16c1e:	2301      	movs	r3, #1
   16c20:	490e      	ldr	r1, [pc, #56]	; (16c5c <xTaskRemoveFromEventList+0x5c>)
   16c22:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16c24:	6808      	ldr	r0, [r1, #0]
   16c26:	4093      	lsls	r3, r2
   16c28:	4303      	orrs	r3, r0
   16c2a:	2014      	movs	r0, #20
   16c2c:	600b      	str	r3, [r1, #0]
   16c2e:	4629      	mov	r1, r5
   16c30:	4b0b      	ldr	r3, [pc, #44]	; (16c60 <xTaskRemoveFromEventList+0x60>)
   16c32:	fb00 3002 	mla	r0, r0, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   16c36:	f7ff fa25 	bl	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   16c3a:	4b0a      	ldr	r3, [pc, #40]	; (16c64 <xTaskRemoveFromEventList+0x64>)
   16c3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16c3e:	681b      	ldr	r3, [r3, #0]
   16c40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16c42:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   16c44:	bf85      	ittet	hi
   16c46:	2001      	movhi	r0, #1
   16c48:	4b07      	ldrhi	r3, [pc, #28]	; (16c68 <xTaskRemoveFromEventList+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   16c4a:	2000      	movls	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   16c4c:	6018      	strhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   16c4e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   16c50:	4629      	mov	r1, r5
   16c52:	4806      	ldr	r0, [pc, #24]	; (16c6c <xTaskRemoveFromEventList+0x6c>)
   16c54:	e7ef      	b.n	16c36 <xTaskRemoveFromEventList+0x36>
   16c56:	bf00      	nop
   16c58:	2007c6c0 	.word	0x2007c6c0
   16c5c:	2007c6c8 	.word	0x2007c6c8
   16c60:	2007c5ec 	.word	0x2007c5ec
   16c64:	2007c5e0 	.word	0x2007c5e0
   16c68:	2007c72c 	.word	0x2007c72c
   16c6c:	2007c6fc 	.word	0x2007c6fc

00016c70 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   16c70:	4b03      	ldr	r3, [pc, #12]	; (16c80 <vTaskSetTimeOutState+0x10>)
   16c72:	681b      	ldr	r3, [r3, #0]
   16c74:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   16c76:	4b03      	ldr	r3, [pc, #12]	; (16c84 <vTaskSetTimeOutState+0x14>)
   16c78:	681b      	ldr	r3, [r3, #0]
   16c7a:	6043      	str	r3, [r0, #4]
   16c7c:	4770      	bx	lr
   16c7e:	bf00      	nop
   16c80:	2007c6f8 	.word	0x2007c6f8
   16c84:	2007c728 	.word	0x2007c728

00016c88 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   16c88:	b538      	push	{r3, r4, r5, lr}
   16c8a:	460d      	mov	r5, r1
   16c8c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   16c8e:	f7ff f941 	bl	15f14 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   16c92:	4b0e      	ldr	r3, [pc, #56]	; (16ccc <xTaskCheckForTimeOut+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   16c94:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   16c96:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   16c98:	1c53      	adds	r3, r2, #1
   16c9a:	d010      	beq.n	16cbe <xTaskCheckForTimeOut+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   16c9c:	4b0c      	ldr	r3, [pc, #48]	; (16cd0 <xTaskCheckForTimeOut+0x48>)
   16c9e:	6821      	ldr	r1, [r4, #0]
   16ca0:	681b      	ldr	r3, [r3, #0]
   16ca2:	4299      	cmp	r1, r3
   16ca4:	6863      	ldr	r3, [r4, #4]
   16ca6:	d001      	beq.n	16cac <xTaskCheckForTimeOut+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   16ca8:	4298      	cmp	r0, r3
   16caa:	d20d      	bcs.n	16cc8 <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   16cac:	1ac1      	subs	r1, r0, r3
   16cae:	428a      	cmp	r2, r1
   16cb0:	d90a      	bls.n	16cc8 <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   16cb2:	1a1b      	subs	r3, r3, r0
   16cb4:	4413      	add	r3, r2
   16cb6:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   16cb8:	4620      	mov	r0, r4
   16cba:	f7ff ffd9 	bl	16c70 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   16cbe:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   16cc0:	f7ff f938 	bl	15f34 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   16cc4:	4620      	mov	r0, r4
   16cc6:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   16cc8:	2401      	movs	r4, #1
   16cca:	e7f9      	b.n	16cc0 <xTaskCheckForTimeOut+0x38>
   16ccc:	2007c728 	.word	0x2007c728
   16cd0:	2007c6f8 	.word	0x2007c6f8

00016cd4 <vTaskMissedYield>:
vTaskMissedYield():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   16cd4:	2201      	movs	r2, #1
   16cd6:	4b01      	ldr	r3, [pc, #4]	; (16cdc <vTaskMissedYield+0x8>)
   16cd8:	601a      	str	r2, [r3, #0]
   16cda:	4770      	bx	lr
   16cdc:	2007c72c 	.word	0x2007c72c

00016ce0 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   16ce0:	4b05      	ldr	r3, [pc, #20]	; (16cf8 <xTaskGetSchedulerState+0x18>)
   16ce2:	681b      	ldr	r3, [r3, #0]
   16ce4:	b133      	cbz	r3, 16cf4 <xTaskGetSchedulerState+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16ce6:	4b05      	ldr	r3, [pc, #20]	; (16cfc <xTaskGetSchedulerState+0x1c>)
   16ce8:	681b      	ldr	r3, [r3, #0]
   16cea:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   16cec:	bf0c      	ite	eq
   16cee:	2002      	moveq	r0, #2
   16cf0:	2000      	movne	r0, #0
   16cf2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   16cf4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   16cf6:	4770      	bx	lr
   16cf8:	2007c710 	.word	0x2007c710
   16cfc:	2007c6c0 	.word	0x2007c6c0

00016d00 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   16d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   16d04:	4604      	mov	r4, r0
   16d06:	2800      	cmp	r0, #0
   16d08:	d039      	beq.n	16d7e <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   16d0a:	4d1e      	ldr	r5, [pc, #120]	; (16d84 <vTaskPriorityInherit+0x84>)
   16d0c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   16d0e:	682a      	ldr	r2, [r5, #0]
   16d10:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   16d12:	4293      	cmp	r3, r2
   16d14:	d233      	bcs.n	16d7e <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16d16:	2714      	movs	r7, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   16d18:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16d1a:	4e1b      	ldr	r6, [pc, #108]	; (16d88 <vTaskPriorityInherit+0x88>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   16d1c:	2a00      	cmp	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16d1e:	bfa8      	it	ge
   16d20:	682a      	ldrge	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16d22:	fb07 6303 	mla	r3, r7, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16d26:	bfa2      	ittt	ge
   16d28:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   16d2a:	f1c2 020a 	rsbge	r2, r2, #10
   16d2e:	6182      	strge	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16d30:	6942      	ldr	r2, [r0, #20]
   16d32:	429a      	cmp	r2, r3
   16d34:	d120      	bne.n	16d78 <vTaskPriorityInherit+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16d36:	f100 0804 	add.w	r8, r0, #4
   16d3a:	4640      	mov	r0, r8
   16d3c:	f7ff f9c5 	bl	160ca <uxListRemove>
   16d40:	4a12      	ldr	r2, [pc, #72]	; (16d8c <vTaskPriorityInherit+0x8c>)
   16d42:	b948      	cbnz	r0, 16d58 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   16d44:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   16d46:	4347      	muls	r7, r0
   16d48:	59f3      	ldr	r3, [r6, r7]
   16d4a:	b92b      	cbnz	r3, 16d58 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   16d4c:	2101      	movs	r1, #1
   16d4e:	6813      	ldr	r3, [r2, #0]
   16d50:	4081      	lsls	r1, r0
   16d52:	ea23 0301 	bic.w	r3, r3, r1
   16d56:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16d58:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16d5a:	6811      	ldr	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16d5c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16d5e:	2301      	movs	r3, #1
   16d60:	4083      	lsls	r3, r0
   16d62:	430b      	orrs	r3, r1
   16d64:	6013      	str	r3, [r2, #0]
   16d66:	2314      	movs	r3, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16d68:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16d6a:	4641      	mov	r1, r8
   16d6c:	fb03 6000 	mla	r0, r3, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   16d70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16d74:	f7ff b986 	b.w	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16d78:	682b      	ldr	r3, [r5, #0]
   16d7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16d7c:	62c3      	str	r3, [r0, #44]	; 0x2c
   16d7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16d82:	bf00      	nop
   16d84:	2007c5e0 	.word	0x2007c5e0
   16d88:	2007c5ec 	.word	0x2007c5ec
   16d8c:	2007c6c8 	.word	0x2007c6c8

00016d90 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   16d90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   16d92:	4604      	mov	r4, r0
   16d94:	b908      	cbnz	r0, 16d9a <xTaskPriorityDisinherit+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   16d96:	2000      	movs	r0, #0
   16d98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16d9a:	6c83      	ldr	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16d9c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   16d9e:	6c42      	ldr	r2, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16da0:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16da2:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16da4:	6483      	str	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16da6:	d0f6      	beq.n	16d96 <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   16da8:	2b00      	cmp	r3, #0
   16daa:	d1f4      	bne.n	16d96 <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16dac:	1d05      	adds	r5, r0, #4
   16dae:	4628      	mov	r0, r5
   16db0:	f7ff f98b 	bl	160ca <uxListRemove>
   16db4:	4e10      	ldr	r6, [pc, #64]	; (16df8 <xTaskPriorityDisinherit+0x68>)
   16db6:	4a11      	ldr	r2, [pc, #68]	; (16dfc <xTaskPriorityDisinherit+0x6c>)
   16db8:	b950      	cbnz	r0, 16dd0 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   16dba:	2114      	movs	r1, #20
   16dbc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   16dbe:	4379      	muls	r1, r7
   16dc0:	5873      	ldr	r3, [r6, r1]
   16dc2:	b92b      	cbnz	r3, 16dd0 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   16dc4:	2001      	movs	r0, #1
   16dc6:	6813      	ldr	r3, [r2, #0]
   16dc8:	40b8      	lsls	r0, r7
   16dca:	ea23 0300 	bic.w	r3, r3, r0
   16dce:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   16dd0:	6c63      	ldr	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16dd2:	f1c3 010a 	rsb	r1, r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   16dd6:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16dd8:	61a1      	str	r1, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   16dda:	2401      	movs	r4, #1
   16ddc:	6811      	ldr	r1, [r2, #0]
   16dde:	fa04 f003 	lsl.w	r0, r4, r3
   16de2:	4308      	orrs	r0, r1
   16de4:	6010      	str	r0, [r2, #0]
   16de6:	2014      	movs	r0, #20
   16de8:	4629      	mov	r1, r5
   16dea:	fb00 6003 	mla	r0, r0, r3, r6
   16dee:	f7ff f949 	bl	16084 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   16df2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   16df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16df6:	bf00      	nop
   16df8:	2007c5ec 	.word	0x2007c5ec
   16dfc:	2007c6c8 	.word	0x2007c6c8

00016e00 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   16e00:	4b04      	ldr	r3, [pc, #16]	; (16e14 <pvTaskIncrementMutexHeldCount+0x14>)
   16e02:	681a      	ldr	r2, [r3, #0]
   16e04:	b11a      	cbz	r2, 16e0e <pvTaskIncrementMutexHeldCount+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   16e06:	6819      	ldr	r1, [r3, #0]
   16e08:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   16e0a:	3201      	adds	r2, #1
   16e0c:	648a      	str	r2, [r1, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   16e0e:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   16e10:	4770      	bx	lr
   16e12:	bf00      	nop
   16e14:	2007c5e0 	.word	0x2007c5e0

00016e18 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99
    }
    xTaskResumeAll();
}

    void vRunTimeStatIsrEntry()
    {
   16e18:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   16e1a:	f7ff f8d1 	bl	15fc0 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   16e1e:	4b06      	ldr	r3, [pc, #24]	; (16e38 <vRunTimeStatIsrEntry+0x20>)
   16e20:	4a06      	ldr	r2, [pc, #24]	; (16e3c <vRunTimeStatIsrEntry+0x24>)
   16e22:	6819      	ldr	r1, [r3, #0]
   16e24:	b129      	cbz	r1, 16e32 <vRunTimeStatIsrEntry+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   16e26:	6819      	ldr	r1, [r3, #0]
   16e28:	6814      	ldr	r4, [r2, #0]
   16e2a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   16e2c:	1b1b      	subs	r3, r3, r4
   16e2e:	4403      	add	r3, r0
   16e30:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   16e32:	6010      	str	r0, [r2, #0]
   16e34:	bd10      	pop	{r4, pc}
   16e36:	bf00      	nop
   16e38:	2007c5e0 	.word	0x2007c5e0
   16e3c:	2007c6b4 	.word	0x2007c6b4

00016e40 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   16e40:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   16e42:	f7ff f8bd 	bl	15fc0 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   16e46:	4b01      	ldr	r3, [pc, #4]	; (16e4c <vRunTimeStatIsrExit+0xc>)
   16e48:	6018      	str	r0, [r3, #0]
   16e4a:	bd08      	pop	{r3, pc}
   16e4c:	2007c6b4 	.word	0x2007c6b4

00016e50 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   16e50:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   16e52:	4d10      	ldr	r5, [pc, #64]	; (16e94 <Storage::getFlashDrive()+0x44>)
   16e54:	4e10      	ldr	r6, [pc, #64]	; (16e98 <Storage::getFlashDrive()+0x48>)
   16e56:	782c      	ldrb	r4, [r5, #0]
   16e58:	f3bf 8f5b 	dmb	ish
   16e5c:	f014 0401 	ands.w	r4, r4, #1
   16e60:	d115      	bne.n	16e8e <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   16e62:	4628      	mov	r0, r5
   16e64:	f000 fc5b 	bl	1771e <__cxa_guard_acquire>
   16e68:	b188      	cbz	r0, 16e8e <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16e6a:	f44f 700e 	mov.w	r0, #568	; 0x238
   16e6e:	f7fd fe5f 	bl	14b30 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   16e72:	2330      	movs	r3, #48	; 0x30
   16e74:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16e78:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   16e7a:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16e7e:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   16e82:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16e86:	6030      	str	r0, [r6, #0]
   16e88:	4628      	mov	r0, r5
   16e8a:	f000 fc54 	bl	17736 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   16e8e:	6830      	ldr	r0, [r6, #0]
   16e90:	bd70      	pop	{r4, r5, r6, pc}
   16e92:	bf00      	nop
   16e94:	2007c740 	.word	0x2007c740
   16e98:	2007c744 	.word	0x2007c744

00016e9c <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16e9c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16e9e:	4c06      	ldr	r4, [pc, #24]	; (16eb8 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   16ea0:	6823      	ldr	r3, [r4, #0]
   16ea2:	b93b      	cbnz	r3, 16eb4 <SingletonTemplate<I2C2>::getInstance()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ea4:	f44f 7094 	mov.w	r0, #296	; 0x128
   16ea8:	f7fd fe42 	bl	14b30 <operator new(unsigned int)>
   16eac:	4605      	mov	r5, r0
   16eae:	f7fe ff63 	bl	15d78 <I2C2::I2C2()>
   16eb2:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16eb4:	6820      	ldr	r0, [r4, #0]
   16eb6:	bd38      	pop	{r3, r4, r5, pc}
   16eb8:	2007c5d0 	.word	0x2007c5d0

00016ebc <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16ebe:	4c0c      	ldr	r4, [pc, #48]	; (16ef0 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   16ec0:	6823      	ldr	r3, [r4, #0]
   16ec2:	b99b      	cbnz	r3, 16eec <SingletonTemplate<LED_Display>::getInstance()+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ec4:	2008      	movs	r0, #8
   16ec6:	f7fd fe33 	bl	14b30 <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16eca:	4d0a      	ldr	r5, [pc, #40]	; (16ef4 <SingletonTemplate<LED_Display>::getInstance()+0x38>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ecc:	4606      	mov	r6, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16ece:	682b      	ldr	r3, [r5, #0]
   16ed0:	b93b      	cbnz	r3, 16ee2 <SingletonTemplate<LED_Display>::getInstance()+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ed2:	f44f 7094 	mov.w	r0, #296	; 0x128
   16ed6:	f7fd fe2b 	bl	14b30 <operator new(unsigned int)>
   16eda:	4607      	mov	r7, r0
   16edc:	f7fe ff4c 	bl	15d78 <I2C2::I2C2()>
   16ee0:	602f      	str	r7, [r5, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   16ee2:	682b      	ldr	r3, [r5, #0]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   16ee4:	6026      	str	r6, [r4, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   16ee6:	6033      	str	r3, [r6, #0]
   16ee8:	2340      	movs	r3, #64	; 0x40
   16eea:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16eec:	6820      	ldr	r0, [r4, #0]
   16eee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16ef0:	2007c748 	.word	0x2007c748
   16ef4:	2007c5d0 	.word	0x2007c5d0

00016ef8 <hl_print_line()>:
_ZL13hl_print_linev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   16ef8:	4801      	ldr	r0, [pc, #4]	; (16f00 <hl_print_line()+0x8>)
   16efa:	f003 ba15 	b.w	1a328 <puts>
   16efe:	bf00      	nop
   16f00:	0002003c 	.word	0x0002003c

00016f04 <ssp_set_max_clock>:
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   16f04:	b538      	push	{r3, r4, r5, lr}
   16f06:	4604      	mov	r4, r0
   16f08:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   16f0a:	f7f9 fc43 	bl	10794 <sys_get_cpu_clock>
   16f0e:	4b07      	ldr	r3, [pc, #28]	; (16f2c <ssp_set_max_clock+0x28>)
   16f10:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   16f14:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16f16:	fbb0 f2f3 	udiv	r2, r0, r3
   16f1a:	42aa      	cmp	r2, r5
   16f1c:	d904      	bls.n	16f28 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   16f1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   16f22:	d001      	beq.n	16f28 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   16f24:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16f26:	e7f6      	b.n	16f16 <ssp_set_max_clock+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   16f28:	6123      	str	r3, [r4, #16]
   16f2a:	bd38      	pop	{r3, r4, r5, pc}
   16f2c:	000f4240 	.word	0x000f4240

00016f30 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   16f30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   16f32:	f200 2635 	addw	r6, r0, #565	; 0x235
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   16f36:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   16f38:	2201      	movs	r2, #1
   16f3a:	4631      	mov	r1, r6
   16f3c:	f7fb fc56 	bl	127ec <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   16f40:	4605      	mov	r5, r0
   16f42:	bb38      	cbnz	r0, 16f94 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   16f44:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   16f46:	aa02      	add	r2, sp, #8
   16f48:	a903      	add	r1, sp, #12
   16f4a:	4630      	mov	r0, r6
   16f4c:	f7fb ffaf 	bl	12eae <f_getfree>
   16f50:	bb40      	cbnz	r0, 16fa4 <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16f52:	9802      	ldr	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   16f54:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16f56:	7882      	ldrb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   16f58:	fb03 f102 	mul.w	r1, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16f5c:	6983      	ldr	r3, [r0, #24]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   16f5e:	4812      	ldr	r0, [pc, #72]	; (16fa8 <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   16f60:	3b02      	subs	r3, #2
   16f62:	435a      	muls	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   16f64:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   16f66:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   16f6a:	bf38      	it	cc
   16f6c:	2001      	movcc	r0, #1
   16f6e:	4b0f      	ldr	r3, [pc, #60]	; (16fac <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   16f70:	bf24      	itt	cs
   16f72:	4603      	movcs	r3, r0
   16f74:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   16f78:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   16f7a:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   16f7e:	fbb2 f2f0 	udiv	r2, r2, r0
   16f82:	9100      	str	r1, [sp, #0]
   16f84:	9301      	str	r3, [sp, #4]
   16f86:	4621      	mov	r1, r4
   16f88:	4809      	ldr	r0, [pc, #36]	; (16fb0 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   16f8a:	f003 f959 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   16f8e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   16f90:	b004      	add	sp, #16
   16f92:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   16f94:	4b07      	ldr	r3, [pc, #28]	; (16fb4 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   16f96:	462a      	mov	r2, r5
   16f98:	4621      	mov	r1, r4
   16f9a:	4807      	ldr	r0, [pc, #28]	; (16fb8 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   16f9c:	f003 f950 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   16fa0:	2000      	movs	r0, #0
   16fa2:	e7f5      	b.n	16f90 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   16fa4:	4b05      	ldr	r3, [pc, #20]	; (16fbc <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   16fa6:	e7f6      	b.n	16f96 <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   16fa8:	0002007a 	.word	0x0002007a
   16fac:	00020077 	.word	0x00020077
   16fb0:	00020084 	.word	0x00020084
   16fb4:	00020081 	.word	0x00020081
   16fb8:	000200b2 	.word	0x000200b2
   16fbc:	0002007d 	.word	0x0002007d

00016fc0 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16fc0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16fc2:	4c05      	ldr	r4, [pc, #20]	; (16fd8 <SingletonTemplate<LED>::getInstance()+0x18>)
   16fc4:	6825      	ldr	r5, [r4, #0]
   16fc6:	b925      	cbnz	r5, 16fd2 <SingletonTemplate<LED>::getInstance()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16fc8:	2001      	movs	r0, #1
   16fca:	f7fd fdb1 	bl	14b30 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   16fce:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   16fd0:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16fd2:	6820      	ldr	r0, [r4, #0]
   16fd4:	bd38      	pop	{r3, r4, r5, pc}
   16fd6:	bf00      	nop
   16fd8:	2007c750 	.word	0x2007c750

00016fdc <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16fdc:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16fde:	4c08      	ldr	r4, [pc, #32]	; (17000 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   16fe0:	6823      	ldr	r3, [r4, #0]
   16fe2:	b95b      	cbnz	r3, 16ffc <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16fe4:	200c      	movs	r0, #12
   16fe6:	f7fd fda3 	bl	14b30 <operator new(unsigned int)>
   16fea:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   16fec:	f7ff ff56 	bl	16e9c <SingletonTemplate<I2C2>::getInstance()>
   16ff0:	2390      	movs	r3, #144	; 0x90
   16ff2:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   16ff4:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   16ff6:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   16ff8:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   16ffa:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16ffc:	6820      	ldr	r0, [r4, #0]
   16ffe:	bd38      	pop	{r3, r4, r5, pc}
   17000:	2007c730 	.word	0x2007c730

00017004 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17004:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17006:	4c04      	ldr	r4, [pc, #16]	; (17018 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   17008:	6823      	ldr	r3, [r4, #0]
   1700a:	b91b      	cbnz	r3, 17014 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1700c:	2001      	movs	r0, #1
   1700e:	f7fd fd8f 	bl	14b30 <operator new(unsigned int)>
   17012:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   17014:	6820      	ldr	r0, [r4, #0]
   17016:	bd10      	pop	{r4, pc}
   17018:	2007c734 	.word	0x2007c734

0001701c <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1701c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1701e:	4c04      	ldr	r4, [pc, #16]	; (17030 <SingletonTemplate<Switches>::getInstance()+0x14>)
   17020:	6823      	ldr	r3, [r4, #0]
   17022:	b91b      	cbnz	r3, 1702c <SingletonTemplate<Switches>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17024:	2001      	movs	r0, #1
   17026:	f7fd fd83 	bl	14b30 <operator new(unsigned int)>
   1702a:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1702c:	6820      	ldr	r0, [r4, #0]
   1702e:	bd10      	pop	{r4, pc}
   17030:	2007c74c 	.word	0x2007c74c

00017034 <high_level_init()>:
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   17034:	2340      	movs	r3, #64	; 0x40
   17036:	49b6      	ldr	r1, [pc, #728]	; (17310 <high_level_init()+0x2dc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   17038:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1703a:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1703c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   17040:	4ab4      	ldr	r2, [pc, #720]	; (17314 <high_level_init()+0x2e0>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17042:	2507      	movs	r5, #7
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   17044:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   17046:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1704a:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   1704c:	4bb2      	ldr	r3, [pc, #712]	; (17318 <high_level_init()+0x2e4>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1704e:	2402      	movs	r4, #2
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   17050:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   17052:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   17056:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   1705a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   1705c:	6818      	ldr	r0, [r3, #0]
   1705e:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   17062:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   17064:	6818      	ldr	r0, [r3, #0]
   17066:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1706a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   1706c:	6808      	ldr	r0, [r1, #0]
   1706e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   17072:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   17074:	6818      	ldr	r0, [r3, #0]
   17076:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   1707a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   1707c:	6818      	ldr	r0, [r3, #0]
   1707e:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   17082:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   17084:	6818      	ldr	r0, [r3, #0]
   17086:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   1708a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   1708c:	6818      	ldr	r0, [r3, #0]
   1708e:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   17092:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   17094:	6818      	ldr	r0, [r3, #0]
   17096:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   1709a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   1709c:	6818      	ldr	r0, [r3, #0]
   1709e:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   170a2:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   170a4:	6858      	ldr	r0, [r3, #4]
   170a6:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   170aa:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   170ac:	6858      	ldr	r0, [r3, #4]
   170ae:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   170b2:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   170b4:	6858      	ldr	r0, [r3, #4]
   170b6:	f020 0003 	bic.w	r0, r0, #3
   170ba:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   170bc:	6808      	ldr	r0, [r1, #0]
   170be:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   170c2:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   170c4:	6858      	ldr	r0, [r3, #4]
   170c6:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   170ca:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   170cc:	6808      	ldr	r0, [r1, #0]
   170ce:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   170d2:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   170d4:	68d9      	ldr	r1, [r3, #12]
   170d6:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   170da:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   170dc:	6811      	ldr	r1, [r2, #0]
   170de:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   170e2:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   170e4:	6859      	ldr	r1, [r3, #4]
   170e6:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   170ea:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   170ec:	6859      	ldr	r1, [r3, #4]
   170ee:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   170f2:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   170f4:	6898      	ldr	r0, [r3, #8]
   170f6:	4989      	ldr	r1, [pc, #548]	; (1731c <high_level_init()+0x2e8>)
   170f8:	4001      	ands	r1, r0
   170fa:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   170fc:	6811      	ldr	r1, [r2, #0]
   170fe:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   17102:	f041 0101 	orr.w	r1, r1, #1
   17106:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   17108:	6899      	ldr	r1, [r3, #8]
   1710a:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1710e:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   17110:	6899      	ldr	r1, [r3, #8]
   17112:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   17116:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   17118:	6811      	ldr	r1, [r2, #0]
   1711a:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   1711e:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   17120:	68d9      	ldr	r1, [r3, #12]
   17122:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   17126:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   17128:	68d9      	ldr	r1, [r3, #12]
   1712a:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   1712e:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   17130:	68d9      	ldr	r1, [r3, #12]
   17132:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17136:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   17138:	6813      	ldr	r3, [r2, #0]
   1713a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   1713e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   17140:	6813      	ldr	r3, [r2, #0]
   17142:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   17146:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   17148:	f7fe fbf2 	bl	15930 <adc0_init>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   1714c:	2101      	movs	r1, #1
   1714e:	200a      	movs	r0, #10
   17150:	f7f9 fbd2 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   17154:	2101      	movs	r1, #1
   17156:	200a      	movs	r0, #10
   17158:	f7f9 fbe8 	bl	1092c <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1715c:	4870      	ldr	r0, [pc, #448]	; (17320 <high_level_init()+0x2ec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1715e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17160:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17162:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17164:	f7ff fece 	bl	16f04 <ssp_set_max_clock>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   17168:	f7fe fcf2 	bl	15b50 <ssp1_dma_init>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   1716c:	2101      	movs	r1, #1
   1716e:	2015      	movs	r0, #21
   17170:	f7f9 fbc2 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   17174:	2101      	movs	r1, #1
   17176:	2015      	movs	r0, #21
   17178:	f7f9 fbd8 	bl	1092c <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1717c:	4869      	ldr	r0, [pc, #420]	; (17324 <high_level_init()+0x2f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1717e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17180:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17182:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17184:	f7ff febe 	bl	16f04 <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   17188:	f7ff fe88 	bl	16e9c <SingletonTemplate<I2C2>::getInstance()>
   1718c:	2164      	movs	r1, #100	; 0x64
   1718e:	f7fe fdbd 	bl	15d0c <I2C2::init(unsigned int)>
   17192:	b910      	cbnz	r0, 1719a <high_level_init()+0x166>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   17194:	4864      	ldr	r0, [pc, #400]	; (17328 <high_level_init()+0x2f4>)
   17196:	f003 f8c7 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   1719a:	f7f9 f94b 	bl	10434 <lpc_sys_setup_system_timer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   1719e:	f7f9 fef3 	bl	10f88 <wireless_init>
   171a2:	b910      	cbnz	r0, 171aa <high_level_init()+0x176>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   171a4:	4861      	ldr	r0, [pc, #388]	; (1732c <high_level_init()+0x2f8>)
   171a6:	f003 f8bf 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   171aa:	4861      	ldr	r0, [pc, #388]	; (17330 <high_level_init()+0x2fc>)
   171ac:	f7fd f9f2 	bl	14594 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   171b0:	4860      	ldr	r0, [pc, #384]	; (17334 <high_level_init()+0x300>)
   171b2:	f7fd f9ef 	bl	14594 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   171b6:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   171ba:	f7fd fc72 	bl	14aa2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   171be:	f7ff fe9b 	bl	16ef8 <hl_print_line()>
hl_print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   171c2:	f7f9 fae7 	bl	10794 <sys_get_cpu_clock>
   171c6:	f001 f897 	bl	182f8 <__aeabi_ui2f>
   171ca:	495b      	ldr	r1, [pc, #364]	; (17338 <high_level_init()+0x304>)
   171cc:	f001 f9a0 	bl	18510 <__aeabi_fdiv>
   171d0:	f000 ff18 	bl	18004 <__aeabi_f2d>
   171d4:	4602      	mov	r2, r0
   171d6:	460b      	mov	r3, r1
   171d8:	4858      	ldr	r0, [pc, #352]	; (1733c <high_level_init()+0x308>)
   171da:	f003 f831 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   171de:	f7f9 f80f 	bl	10200 <sys_get_boot_type>
   171e2:	2805      	cmp	r0, #5
   171e4:	ac04      	add	r4, sp, #16
   171e6:	d114      	bne.n	17212 <high_level_init()+0x1de>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   171e8:	2300      	movs	r3, #0
   171ea:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   171ec:	4b54      	ldr	r3, [pc, #336]	; (17340 <high_level_init()+0x30c>)
   171ee:	681b      	ldr	r3, [r3, #0]
   171f0:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   171f2:	f7ff fe81 	bl	16ef8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   171f6:	4b53      	ldr	r3, [pc, #332]	; (17344 <high_level_init()+0x310>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   171f8:	4853      	ldr	r0, [pc, #332]	; (17348 <high_level_init()+0x314>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   171fa:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   171fc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   171fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   17200:	9400      	str	r4, [sp, #0]
   17202:	f003 f81d 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   17206:	f7ff fe77 	bl	16ef8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   1720a:	f241 3088 	movw	r0, #5000	; 0x1388
   1720e:	f7fd fc48 	bl	14aa2 <delay_ms>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   17212:	f7ff fe1d 	bl	16e50 <Storage::getFlashDrive()>
   17216:	494d      	ldr	r1, [pc, #308]	; (1734c <high_level_init()+0x318>)
   17218:	f7ff fe8a 	bl	16f30 <hl_mount_storage(FileSystemObject&, char const*)>
   1721c:	4605      	mov	r5, r0
   1721e:	bb68      	cbnz	r0, 1727c <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   17220:	484b      	ldr	r0, [pc, #300]	; (17350 <high_level_init()+0x31c>)
   17222:	f003 f80d 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   17226:	f7fc ffbd 	bl	141a4 <flash_chip_erase>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   1722a:	f7ff fe11 	bl	16e50 <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1722e:	4629      	mov	r1, r5
   17230:	462a      	mov	r2, r5
   17232:	f200 2035 	addw	r0, r0, #565	; 0x235
   17236:	f7fb fe9f 	bl	12f78 <f_mkfs>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   1723a:	4b46      	ldr	r3, [pc, #280]	; (17354 <high_level_init()+0x320>)
   1723c:	4a46      	ldr	r2, [pc, #280]	; (17358 <high_level_init()+0x324>)
   1723e:	2800      	cmp	r0, #0
   17240:	bf0c      	ite	eq
   17242:	4610      	moveq	r0, r2
   17244:	4618      	movne	r0, r3
   17246:	f003 f86f 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1724a:	f7ff fe01 	bl	16e50 <Storage::getFlashDrive()>
   1724e:	493f      	ldr	r1, [pc, #252]	; (1734c <high_level_init()+0x318>)
   17250:	f7ff fe6e 	bl	16f30 <hl_mount_storage(FileSystemObject&, char const*)>
   17254:	b990      	cbnz	r0, 1727c <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   17256:	4841      	ldr	r0, [pc, #260]	; (1735c <high_level_init()+0x328>)
   17258:	f003 f866 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   1725c:	f7fc ff4e 	bl	140fc <flash_get_page_size>
   17260:	4601      	mov	r1, r0
   17262:	483f      	ldr	r0, [pc, #252]	; (17360 <high_level_init()+0x32c>)
   17264:	f002 ffec 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   17268:	f7fc ff38 	bl	140dc <flash_get_page_count>
   1726c:	4605      	mov	r5, r0
   1726e:	f7fc ff45 	bl	140fc <flash_get_page_size>
   17272:	fb00 f105 	mul.w	r1, r0, r5
   17276:	483b      	ldr	r0, [pc, #236]	; (17364 <high_level_init()+0x330>)
   17278:	f002 ffe2 	bl	1a240 <iprintf>
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   1727c:	4e3a      	ldr	r6, [pc, #232]	; (17368 <high_level_init()+0x334>)
   1727e:	4f3b      	ldr	r7, [pc, #236]	; (1736c <high_level_init()+0x338>)
   17280:	7833      	ldrb	r3, [r6, #0]
   17282:	f3bf 8f5b 	dmb	ish
   17286:	f013 0501 	ands.w	r5, r3, #1
   1728a:	d116      	bne.n	172ba <high_level_init()+0x286>
   1728c:	4630      	mov	r0, r6
   1728e:	f000 fa46 	bl	1771e <__cxa_guard_acquire>
   17292:	b190      	cbz	r0, 172ba <high_level_init()+0x286>
   17294:	f44f 700e 	mov.w	r0, #568	; 0x238
   17298:	f7fd fc4a 	bl	14b30 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   1729c:	2301      	movs	r3, #1
   1729e:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   172a2:	2331      	movs	r3, #49	; 0x31
   172a4:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   172a8:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   172aa:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   172ae:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   172b2:	6038      	str	r0, [r7, #0]
   172b4:	4630      	mov	r0, r6
   172b6:	f000 fa3e 	bl	17736 <__cxa_guard_release>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   172ba:	492d      	ldr	r1, [pc, #180]	; (17370 <high_level_init()+0x33c>)
   172bc:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   172be:	4d2d      	ldr	r5, [pc, #180]	; (17374 <high_level_init()+0x340>)
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   172c0:	f7ff fe36 	bl	16f30 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   172c4:	2118      	movs	r1, #24
   172c6:	4816      	ldr	r0, [pc, #88]	; (17320 <high_level_init()+0x2ec>)
   172c8:	f7ff fe1c 	bl	16f04 <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   172cc:	f7ff fe14 	bl	16ef8 <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   172d0:	682b      	ldr	r3, [r5, #0]
   172d2:	b94b      	cbnz	r3, 172e8 <high_level_init()+0x2b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   172d4:	2008      	movs	r0, #8
   172d6:	f7fd fc2b 	bl	14b30 <operator new(unsigned int)>
   172da:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   172dc:	f7ff fdde 	bl	16e9c <SingletonTemplate<I2C2>::getInstance()>
   172e0:	2338      	movs	r3, #56	; 0x38
   172e2:	6030      	str	r0, [r6, #0]
   172e4:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   172e6:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   172e8:	6828      	ldr	r0, [r5, #0]
   172ea:	f7fc ffd7 	bl	1429c <Acceleration_Sensor::init()>
   172ee:	4606      	mov	r6, r0
   172f0:	b910      	cbnz	r0, 172f8 <high_level_init()+0x2c4>
   172f2:	4821      	ldr	r0, [pc, #132]	; (17378 <high_level_init()+0x344>)
   172f4:	f003 f818 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   172f8:	f7ff fe70 	bl	16fdc <SingletonTemplate<TemperatureSensor>::getInstance()>
   172fc:	f7fd f8f4 	bl	144e8 <I2C_Temp::init()>
   17300:	4605      	mov	r5, r0
   17302:	2800      	cmp	r0, #0
   17304:	d13c      	bne.n	17380 <high_level_init()+0x34c>
   17306:	481d      	ldr	r0, [pc, #116]	; (1737c <high_level_init()+0x348>)
   17308:	f003 f80e 	bl	1a328 <puts>
   1730c:	462e      	mov	r6, r5
   1730e:	e037      	b.n	17380 <high_level_init()+0x34c>
   17310:	2009c000 	.word	0x2009c000
   17314:	2009c020 	.word	0x2009c020
   17318:	4002c000 	.word	0x4002c000
   1731c:	fffcfcf0 	.word	0xfffcfcf0
   17320:	40030000 	.word	0x40030000
   17324:	40088000 	.word	0x40088000
   17328:	0001fc83 	.word	0x0001fc83
   1732c:	0001fcb4 	.word	0x0001fcb4
   17330:	0001fcd9 	.word	0x0001fcd9
   17334:	0001fcde 	.word	0x0001fcde
   17338:	49742400 	.word	0x49742400
   1733c:	0001fce4 	.word	0x0001fce4
   17340:	40024044 	.word	0x40024044
   17344:	40024000 	.word	0x40024000
   17348:	0001fcfc 	.word	0x0001fcfc
   1734c:	0001fd74 	.word	0x0001fd74
   17350:	0001fd7c 	.word	0x0001fd7c
   17354:	0001fc70 	.word	0x0001fc70
   17358:	0001fc6b 	.word	0x0001fc6b
   1735c:	0001fdb9 	.word	0x0001fdb9
   17360:	0001fdd8 	.word	0x0001fdd8
   17364:	0001fde7 	.word	0x0001fde7
   17368:	2007c738 	.word	0x2007c738
   1736c:	2007c73c 	.word	0x2007c73c
   17370:	0001fe02 	.word	0x0001fe02
   17374:	2007c754 	.word	0x2007c754
   17378:	0001fe0a 	.word	0x0001fe0a
   1737c:	0001fe25 	.word	0x0001fe25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   17380:	f7ff fd9c 	bl	16ebc <SingletonTemplate<LED_Display>::getInstance()>
   17384:	f7fd f80c 	bl	143a0 <LED_Display::init()>
   17388:	4605      	mov	r5, r0
   1738a:	b918      	cbnz	r0, 17394 <high_level_init()+0x360>
   1738c:	486d      	ldr	r0, [pc, #436]	; (17544 <high_level_init()+0x510>)
   1738e:	f002 ffcb 	bl	1a328 <puts>
   17392:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17394:	4d6c      	ldr	r5, [pc, #432]	; (17548 <high_level_init()+0x514>)
   17396:	682b      	ldr	r3, [r5, #0]
   17398:	b91b      	cbnz	r3, 173a2 <high_level_init()+0x36e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1739a:	2001      	movs	r0, #1
   1739c:	f7fd fbc8 	bl	14b30 <operator new(unsigned int)>
   173a0:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   173a2:	6828      	ldr	r0, [r5, #0]
   173a4:	f7fc ffca 	bl	1433c <IR_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   173a8:	f7ff fe2c 	bl	17004 <SingletonTemplate<Light_Sensor>::getInstance()>
   173ac:	f7fd f888 	bl	144c0 <Light_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   173b0:	f7ff fe06 	bl	16fc0 <SingletonTemplate<LED>::getInstance()>
   173b4:	f7fd f82d 	bl	14412 <LED::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   173b8:	f7ff fe30 	bl	1701c <SingletonTemplate<Switches>::getInstance()>
   173bc:	f7fd f885 	bl	144ca <Switches::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   173c0:	f7ff fdfe 	bl	16fc0 <SingletonTemplate<LED>::getInstance()>
   173c4:	2100      	movs	r1, #0
   173c6:	f7fd f827 	bl	14418 <LED::setAll(unsigned char)>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   173ca:	2e00      	cmp	r6, #0
   173cc:	f040 8081 	bne.w	174d2 <high_level_init()+0x49e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   173d0:	f7ff fd92 	bl	16ef8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   173d4:	f7ff fd72 	bl	16ebc <SingletonTemplate<LED_Display>::getInstance()>
   173d8:	212d      	movs	r1, #45	; 0x2d
   173da:	f7fc ffc9 	bl	14370 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   173de:	f7ff fd6d 	bl	16ebc <SingletonTemplate<LED_Display>::getInstance()>
   173e2:	212d      	movs	r1, #45	; 0x2d
   173e4:	f7fc ffd0 	bl	14388 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   173e8:	f7ff fdea 	bl	16fc0 <SingletonTemplate<LED>::getInstance()>
   173ec:	21ff      	movs	r1, #255	; 0xff
   173ee:	f7fd f813 	bl	14418 <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   173f2:	2210      	movs	r2, #16
   173f4:	2100      	movs	r1, #0
   173f6:	4620      	mov	r0, r4
   173f8:	f001 fd88 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   173fc:	2300      	movs	r3, #0
   173fe:	220f      	movs	r2, #15
   17400:	4621      	mov	r1, r4
   17402:	4852      	ldr	r0, [pc, #328]	; (1754c <high_level_init()+0x518>)
   17404:	f7fc ff0d 	bl	14222 <Storage::read(char const*, void*, unsigned int, unsigned int)>
   17408:	b980      	cbnz	r0, 1742c <high_level_init()+0x3f8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   1740a:	4620      	mov	r0, r4
   1740c:	f001 facb 	bl	189a6 <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   17410:	b2c5      	uxtb	r5, r0
   17412:	4628      	mov	r0, r5
   17414:	f7f9 ffec 	bl	113f0 <mesh_set_node_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   17418:	4a4d      	ldr	r2, [pc, #308]	; (17550 <high_level_init()+0x51c>)
   1741a:	4b4e      	ldr	r3, [pc, #312]	; (17554 <high_level_init()+0x520>)
   1741c:	4629      	mov	r1, r5
   1741e:	2800      	cmp	r0, #0
   17420:	bf18      	it	ne
   17422:	4613      	movne	r3, r2
   17424:	4a49      	ldr	r2, [pc, #292]	; (1754c <high_level_init()+0x518>)
   17426:	484c      	ldr	r0, [pc, #304]	; (17558 <high_level_init()+0x524>)
   17428:	f002 ff0a 	bl	1a240 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   1742c:	f7ff fdea 	bl	17004 <SingletonTemplate<Light_Sensor>::getInstance()>
   17430:	f7fd f848 	bl	144c4 <Light_Sensor::getRawValue()>
   17434:	4605      	mov	r5, r0
   17436:	2000      	movs	r0, #0
   17438:	f004 f93a 	bl	1b6b0 <time>
   1743c:	4428      	add	r0, r5
   1743e:	f002 ff7b 	bl	1a338 <srand>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   17442:	f44f 7200 	mov.w	r2, #512	; 0x200
   17446:	2100      	movs	r1, #0
   17448:	4620      	mov	r0, r4
   1744a:	f001 fd5f 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   1744e:	4620      	mov	r0, r4
   17450:	f7f9 f830 	bl	104b4 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   17454:	4621      	mov	r1, r4
   17456:	4841      	ldr	r0, [pc, #260]	; (1755c <high_level_init()+0x528>)
   17458:	f002 fef2 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   1745c:	f7ff fd4c 	bl	16ef8 <hl_print_line()>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   17460:	2280      	movs	r2, #128	; 0x80
   17462:	2100      	movs	r1, #0
   17464:	4620      	mov	r0, r4
   17466:	f001 fd51 	bl	18f0c <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   1746a:	4620      	mov	r0, r4
   1746c:	f7fc fe22 	bl	140b4 <flash_read_permanent_id>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   17470:	7822      	ldrb	r2, [r4, #0]
   17472:	2aff      	cmp	r2, #255	; 0xff
   17474:	d03b      	beq.n	174ee <high_level_init()+0x4ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   17476:	4621      	mov	r1, r4
   17478:	4839      	ldr	r0, [pc, #228]	; (17560 <high_level_init()+0x52c>)
   1747a:	f002 fee1 	bl	1a240 <iprintf>
chip_get_prog_max():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49

/// @returns the number of times the chip was programmed a different program than the preceding program
static inline uint32_t chip_get_prog_modify_count(void) {   return *(chip_get_magic_location() + 1);    }

/// @returns the highest program size that was programmed
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   1747e:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   17482:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52

/// @returns the lowest program size that was programmed
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   17484:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   17488:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55

/// @returns the number of milliseconds it took to program the last program.
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   1748a:	f24f 0310 	movw	r3, #61456	; 0xf010
   1748e:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   17490:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17494:	681a      	ldr	r2, [r3, #0]
   17496:	f24f 0304 	movw	r3, #61444	; 0xf004
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1749a:	0aad      	lsrs	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1749c:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1749e:	0aa4      	lsrs	r4, r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   174a0:	4830      	ldr	r0, [pc, #192]	; (17564 <high_level_init()+0x530>)
   174a2:	f002 fecd 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   174a6:	462a      	mov	r2, r5
   174a8:	4621      	mov	r1, r4
   174aa:	482f      	ldr	r0, [pc, #188]	; (17568 <high_level_init()+0x534>)
   174ac:	f002 fec8 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   174b0:	4631      	mov	r1, r6
   174b2:	482e      	ldr	r0, [pc, #184]	; (1756c <high_level_init()+0x538>)
   174b4:	f002 fec4 	bl	1a240 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   174b8:	f7ff fd1e 	bl	16ef8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   174bc:	2001      	movs	r0, #1
   174be:	f7fd f9b3 	bl	14828 <logger_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   174c2:	482b      	ldr	r0, [pc, #172]	; (17570 <high_level_init()+0x53c>)
   174c4:	f002 ff30 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   174c8:	f7ff fd16 	bl	16ef8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   174cc:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   174d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   174d2:	f7ff fcf3 	bl	16ebc <SingletonTemplate<LED_Display>::getInstance()>
   174d6:	4605      	mov	r5, r0
   174d8:	f7ff fd80 	bl	16fdc <SingletonTemplate<TemperatureSensor>::getInstance()>
   174dc:	f7fd f82e 	bl	1453c <I2C_Temp::getFarenheit()>
   174e0:	f001 f8b2 	bl	18648 <__aeabi_f2uiz>
   174e4:	b2c1      	uxtb	r1, r0
   174e6:	4628      	mov	r0, r5
   174e8:	f7fc ff76 	bl	143d8 <LED_Display::setNumber(char)>
   174ec:	e781      	b.n	173f2 <high_level_init()+0x3be>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   174ee:	f7ff fd95 	bl	1701c <SingletonTemplate<Switches>::getInstance()>
   174f2:	f7fc ffed 	bl	144d0 <Switches::getSwitchValues()>
   174f6:	2809      	cmp	r0, #9
   174f8:	d11f      	bne.n	1753a <high_level_init()+0x506>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   174fa:	481e      	ldr	r0, [pc, #120]	; (17574 <high_level_init()+0x540>)
   174fc:	f002 ff14 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   17500:	4621      	mov	r1, r4
   17502:	481d      	ldr	r0, [pc, #116]	; (17578 <high_level_init()+0x544>)
   17504:	f003 f820 	bl	1a548 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   17508:	4621      	mov	r1, r4
   1750a:	481c      	ldr	r0, [pc, #112]	; (1757c <high_level_init()+0x548>)
   1750c:	f002 fe98 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   17510:	481b      	ldr	r0, [pc, #108]	; (17580 <high_level_init()+0x54c>)
   17512:	f002 ff09 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   17516:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   17518:	a903      	add	r1, sp, #12
   1751a:	481a      	ldr	r0, [pc, #104]	; (17584 <high_level_init()+0x550>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1751c:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1751e:	f003 f813 	bl	1a548 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   17522:	f89d 300c 	ldrb.w	r3, [sp, #12]
   17526:	2b59      	cmp	r3, #89	; 0x59
   17528:	d103      	bne.n	17532 <high_level_init()+0x4fe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   1752a:	4620      	mov	r0, r4
   1752c:	f7fc fda0 	bl	14070 <flash_write_permanent_id>
   17530:	e7a5      	b.n	1747e <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   17532:	4815      	ldr	r0, [pc, #84]	; (17588 <high_level_init()+0x554>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17534:	f002 fef8 	bl	1a328 <puts>
   17538:	e7a1      	b.n	1747e <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   1753a:	4814      	ldr	r0, [pc, #80]	; (1758c <high_level_init()+0x558>)
   1753c:	f002 fef4 	bl	1a328 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17540:	4813      	ldr	r0, [pc, #76]	; (17590 <high_level_init()+0x55c>)
   17542:	e7f7      	b.n	17534 <high_level_init()+0x500>
   17544:	0001fe3f 	.word	0x0001fe3f
   17548:	2007c310 	.word	0x2007c310
   1754c:	0001fe58 	.word	0x0001fe58
   17550:	0001fc76 	.word	0x0001fc76
   17554:	0001fc7c 	.word	0x0001fc7c
   17558:	0001fe5e 	.word	0x0001fe5e
   1755c:	0001fe92 	.word	0x0001fe92
   17560:	0001fe95 	.word	0x0001fe95
   17564:	0001ffb2 	.word	0x0001ffb2
   17568:	0001ffde 	.word	0x0001ffde
   1756c:	0002000b 	.word	0x0002000b
   17570:	00020028 	.word	0x00020028
   17574:	0001feb1 	.word	0x0001feb1
   17578:	0001fed3 	.word	0x0001fed3
   1757c:	0001fed8 	.word	0x0001fed8
   17580:	0001fef3 	.word	0x0001fef3
   17584:	0001ff36 	.word	0x0001ff36
   17588:	0001ff3a 	.word	0x0001ff3a
   1758c:	0001ff52 	.word	0x0001ff52
   17590:	0001ff80 	.word	0x0001ff80

00017594 <main>:
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:34
{
    return (bool)(var & (1 << pos));
}

int main (void)
{
   17594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17598:	4e23      	ldr	r6, [pc, #140]	; (17628 <main+0x94>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
   1759a:	4f24      	ldr	r7, [pc, #144]	; (1762c <main+0x98>)
   1759c:	46b1      	mov	r9, r6
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:37
    while(1)
    {
        for(int i = 0; i < 16; i++)
   1759e:	2400      	movs	r4, #0
   175a0:	2504      	movs	r5, #4
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   175a2:	f8d6 8000 	ldr.w	r8, [r6]
   175a6:	f1b8 0f00 	cmp.w	r8, #0
   175aa:	d105      	bne.n	175b8 <main+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   175ac:	2001      	movs	r0, #1
   175ae:	f7fd fabf 	bl	14b30 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
   175b2:	f880 8000 	strb.w	r8, [r0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   175b6:	6030      	str	r0, [r6, #0]
_Z9CHECK_BITii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:30
    return (bool)(var & (1 << pos));
   175b8:	f1c5 0204 	rsb	r2, r5, #4
   175bc:	fa44 f202 	asr.w	r2, r4, r2
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:41
        {
            for(int j = 1; j < 5; j++)
            {
                LE.set((5-j), CHECK_BIT(i,j-1));
   175c0:	b2e9      	uxtb	r1, r5
   175c2:	f002 0201 	and.w	r2, r2, #1
   175c6:	f8d9 0000 	ldr.w	r0, [r9]
   175ca:	f7fc ff74 	bl	144b6 <LED::set(unsigned char, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:39
            for(int j = 1; j < 5; j++)
   175ce:	3d01      	subs	r5, #1
   175d0:	d1e7      	bne.n	175a2 <main+0xe>
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   175d2:	683b      	ldr	r3, [r7, #0]
   175d4:	b9bb      	cbnz	r3, 17606 <main+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   175d6:	2008      	movs	r0, #8
   175d8:	f7fd faaa 	bl	14b30 <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   175dc:	f8df 8054 	ldr.w	r8, [pc, #84]	; 17634 <main+0xa0>
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   175e0:	4605      	mov	r5, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   175e2:	f8d8 3000 	ldr.w	r3, [r8]
   175e6:	b943      	cbnz	r3, 175fa <main+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   175e8:	f44f 7094 	mov.w	r0, #296	; 0x128
   175ec:	f7fd faa0 	bl	14b30 <operator new(unsigned int)>
   175f0:	4682      	mov	sl, r0
   175f2:	f7fe fbc1 	bl	15d78 <I2C2::I2C2()>
   175f6:	f8c8 a000 	str.w	sl, [r8]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   175fa:	f8d8 3000 	ldr.w	r3, [r8]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   175fe:	603d      	str	r5, [r7, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   17600:	602b      	str	r3, [r5, #0]
   17602:	2340      	movs	r3, #64	; 0x40
   17604:	712b      	strb	r3, [r5, #4]
main():
            }
            LD.setNumber(i);
   17606:	b2e1      	uxtb	r1, r4
   17608:	6838      	ldr	r0, [r7, #0]
   1760a:	f7fc fee5 	bl	143d8 <LED_Display::setNumber(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:44
            printf("Hello World 0x%X\n", i);
   1760e:	4621      	mov	r1, r4
   17610:	4807      	ldr	r0, [pc, #28]	; (17630 <main+0x9c>)
   17612:	f002 fe15 	bl	1a240 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:37
        for(int i = 0; i < 16; i++)
   17616:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:45
            delay_ms(1000);
   17618:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1761c:	f7fd fa41 	bl	14aa2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/HelloWorld/L5_Application/main.cpp:37
        for(int i = 0; i < 16; i++)
   17620:	2c10      	cmp	r4, #16
   17622:	d0bc      	beq.n	1759e <main+0xa>
   17624:	e7bc      	b.n	175a0 <main+0xc>
   17626:	bf00      	nop
   17628:	2007c750 	.word	0x2007c750
   1762c:	2007c748 	.word	0x2007c748
   17630:	000200e5 	.word	0x000200e5
   17634:	2007c5d0 	.word	0x2007c5d0

00017638 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   17638:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1763a:	2310      	movs	r3, #16
   1763c:	2400      	movs	r4, #0
   1763e:	9302      	str	r3, [sp, #8]
   17640:	6803      	ldr	r3, [r0, #0]
   17642:	4615      	mov	r5, r2
   17644:	699e      	ldr	r6, [r3, #24]
   17646:	9400      	str	r4, [sp, #0]
   17648:	466b      	mov	r3, sp
   1764a:	f88d 4004 	strb.w	r4, [sp, #4]
   1764e:	9403      	str	r4, [sp, #12]
   17650:	6812      	ldr	r2, [r2, #0]
   17652:	47b0      	blx	r6
   17654:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17658:	f003 0306 	and.w	r3, r3, #6
   1765c:	2b06      	cmp	r3, #6
   1765e:	bf09      	itett	eq
   17660:	2001      	moveq	r0, #1
   17662:	4620      	movne	r0, r4
   17664:	9b00      	ldreq	r3, [sp, #0]
   17666:	602b      	streq	r3, [r5, #0]
   17668:	b004      	add	sp, #16
   1766a:	bd70      	pop	{r4, r5, r6, pc}

0001766c <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1766c:	9800      	ldr	r0, [sp, #0]
   1766e:	4290      	cmp	r0, r2
   17670:	bf0c      	ite	eq
   17672:	2006      	moveq	r0, #6
   17674:	2001      	movne	r0, #1
   17676:	4770      	bx	lr

00017678 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   17678:	b510      	push	{r4, lr}
   1767a:	4604      	mov	r4, r0
   1767c:	4b02      	ldr	r3, [pc, #8]	; (17688 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1767e:	6003      	str	r3, [r0, #0]
   17680:	f000 f8e3 	bl	1784a <std::type_info::~type_info()>
   17684:	4620      	mov	r0, r4
   17686:	bd10      	pop	{r4, pc}
   17688:	00020130 	.word	0x00020130

0001768c <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1768c:	b510      	push	{r4, lr}
   1768e:	4604      	mov	r4, r0
   17690:	f7ff fff2 	bl	17678 <__cxxabiv1::__class_type_info::~__class_type_info()>
   17694:	4620      	mov	r0, r4
   17696:	2108      	movs	r1, #8
   17698:	f000 f83f 	bl	1771a <operator delete(void*, unsigned int)>
   1769c:	4620      	mov	r0, r4
   1769e:	bd10      	pop	{r4, pc}

000176a0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   176a0:	b538      	push	{r3, r4, r5, lr}
   176a2:	4615      	mov	r5, r2
   176a4:	461c      	mov	r4, r3
   176a6:	f000 f8d3 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   176aa:	b120      	cbz	r0, 176b6 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   176ac:	2308      	movs	r3, #8
   176ae:	60e3      	str	r3, [r4, #12]
   176b0:	2306      	movs	r3, #6
   176b2:	6025      	str	r5, [r4, #0]
   176b4:	7123      	strb	r3, [r4, #4]
   176b6:	bd38      	pop	{r3, r4, r5, pc}

000176b8 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   176b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   176bc:	4605      	mov	r5, r0
   176be:	460c      	mov	r4, r1
   176c0:	4616      	mov	r6, r2
   176c2:	461f      	mov	r7, r3
   176c4:	f000 f8c4 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   176c8:	b948      	cbnz	r0, 176de <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   176ca:	2f03      	cmp	r7, #3
   176cc:	d807      	bhi.n	176de <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   176ce:	6823      	ldr	r3, [r4, #0]
   176d0:	4632      	mov	r2, r6
   176d2:	4629      	mov	r1, r5
   176d4:	4620      	mov	r0, r4
   176d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   176da:	695b      	ldr	r3, [r3, #20]
   176dc:	4718      	bx	r3
   176de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000176e2 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   176e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   176e6:	9e06      	ldr	r6, [sp, #24]
   176e8:	4698      	mov	r8, r3
   176ea:	9b08      	ldr	r3, [sp, #32]
   176ec:	4607      	mov	r7, r0
   176ee:	429e      	cmp	r6, r3
   176f0:	4615      	mov	r5, r2
   176f2:	9c09      	ldr	r4, [sp, #36]	; 0x24
   176f4:	d103      	bne.n	176fe <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   176f6:	9907      	ldr	r1, [sp, #28]
   176f8:	f000 f8aa 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   176fc:	b958      	cbnz	r0, 17716 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   176fe:	4641      	mov	r1, r8
   17700:	4638      	mov	r0, r7
   17702:	f000 f8a5 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   17706:	b118      	cbz	r0, 17710 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   17708:	2301      	movs	r3, #1
   1770a:	6026      	str	r6, [r4, #0]
   1770c:	7125      	strb	r5, [r4, #4]
   1770e:	71a3      	strb	r3, [r4, #6]
   17710:	2000      	movs	r0, #0
   17712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17716:	7165      	strb	r5, [r4, #5]
   17718:	e7fa      	b.n	17710 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>

0001771a <operator delete(void*, unsigned int)>:
_ZdlPvj():
   1771a:	f7fd ba0b 	b.w	14b34 <operator delete(void*)>

0001771e <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1771e:	6803      	ldr	r3, [r0, #0]
   17720:	07db      	lsls	r3, r3, #31
   17722:	d406      	bmi.n	17732 <__cxa_guard_acquire+0x14>
   17724:	7843      	ldrb	r3, [r0, #1]
   17726:	b103      	cbz	r3, 1772a <__cxa_guard_acquire+0xc>
   17728:	deff      	udf	#255	; 0xff
   1772a:	2301      	movs	r3, #1
   1772c:	7043      	strb	r3, [r0, #1]
   1772e:	4618      	mov	r0, r3
   17730:	4770      	bx	lr
   17732:	2000      	movs	r0, #0
   17734:	4770      	bx	lr

00017736 <__cxa_guard_release>:
__cxa_guard_release():
   17736:	2301      	movs	r3, #1
   17738:	6003      	str	r3, [r0, #0]
   1773a:	4770      	bx	lr

0001773c <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1773c:	b508      	push	{r3, lr}
   1773e:	f000 faeb 	bl	17d18 <std::terminate()>
   17742:	Address 0x0000000000017742 is out of bounds.


00017744 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   17744:	b510      	push	{r4, lr}
   17746:	4604      	mov	r4, r0
   17748:	4b02      	ldr	r3, [pc, #8]	; (17754 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1774a:	6003      	str	r3, [r0, #0]
   1774c:	f7ff ff94 	bl	17678 <__cxxabiv1::__class_type_info::~__class_type_info()>
   17750:	4620      	mov	r0, r4
   17752:	bd10      	pop	{r4, pc}
   17754:	00020190 	.word	0x00020190

00017758 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   17758:	b510      	push	{r4, lr}
   1775a:	4604      	mov	r4, r0
   1775c:	f7ff fff2 	bl	17744 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   17760:	4620      	mov	r0, r4
   17762:	210c      	movs	r1, #12
   17764:	f7ff ffd9 	bl	1771a <operator delete(void*, unsigned int)>
   17768:	4620      	mov	r0, r4
   1776a:	bd10      	pop	{r4, pc}

0001776c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1776c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17770:	9e06      	ldr	r6, [sp, #24]
   17772:	4680      	mov	r8, r0
   17774:	4296      	cmp	r6, r2
   17776:	460f      	mov	r7, r1
   17778:	4614      	mov	r4, r2
   1777a:	461d      	mov	r5, r3
   1777c:	d103      	bne.n	17786 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   1777e:	4619      	mov	r1, r3
   17780:	f000 f866 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   17784:	b958      	cbnz	r0, 1779e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   17786:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1778a:	4622      	mov	r2, r4
   1778c:	6803      	ldr	r3, [r0, #0]
   1778e:	9606      	str	r6, [sp, #24]
   17790:	6a1e      	ldr	r6, [r3, #32]
   17792:	4639      	mov	r1, r7
   17794:	462b      	mov	r3, r5
   17796:	46b4      	mov	ip, r6
   17798:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1779c:	4760      	bx	ip
   1779e:	2006      	movs	r0, #6
   177a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000177a4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   177a4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177a8:	460e      	mov	r6, r1
   177aa:	4619      	mov	r1, r3
   177ac:	4683      	mov	fp, r0
   177ae:	4617      	mov	r7, r2
   177b0:	4699      	mov	r9, r3
   177b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   177b4:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   177b8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   177bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   177be:	f000 f847 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   177c2:	b190      	cbz	r0, 177ea <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   177c4:	2e00      	cmp	r6, #0
   177c6:	602c      	str	r4, [r5, #0]
   177c8:	712f      	strb	r7, [r5, #4]
   177ca:	db09      	blt.n	177e0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   177cc:	4434      	add	r4, r6
   177ce:	45a0      	cmp	r8, r4
   177d0:	bf0c      	ite	eq
   177d2:	2406      	moveq	r4, #6
   177d4:	2401      	movne	r4, #1
   177d6:	71ac      	strb	r4, [r5, #6]
   177d8:	2000      	movs	r0, #0
   177da:	b001      	add	sp, #4
   177dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177e0:	3602      	adds	r6, #2
   177e2:	d1f9      	bne.n	177d8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   177e4:	2301      	movs	r3, #1
   177e6:	71ab      	strb	r3, [r5, #6]
   177e8:	e7f6      	b.n	177d8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   177ea:	4544      	cmp	r4, r8
   177ec:	d104      	bne.n	177f8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   177ee:	4651      	mov	r1, sl
   177f0:	4658      	mov	r0, fp
   177f2:	f000 f82d 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   177f6:	b988      	cbnz	r0, 1781c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   177f8:	f8db 0008 	ldr.w	r0, [fp, #8]
   177fc:	463a      	mov	r2, r7
   177fe:	6803      	ldr	r3, [r0, #0]
   17800:	950d      	str	r5, [sp, #52]	; 0x34
   17802:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   17806:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   1780a:	940a      	str	r4, [sp, #40]	; 0x28
   1780c:	69dc      	ldr	r4, [r3, #28]
   1780e:	4631      	mov	r1, r6
   17810:	464b      	mov	r3, r9
   17812:	46a4      	mov	ip, r4
   17814:	b001      	add	sp, #4
   17816:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1781a:	4760      	bx	ip
   1781c:	716f      	strb	r7, [r5, #5]
   1781e:	e7db      	b.n	177d8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

00017820 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   17820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17824:	4604      	mov	r4, r0
   17826:	460d      	mov	r5, r1
   17828:	4616      	mov	r6, r2
   1782a:	461f      	mov	r7, r3
   1782c:	f7ff ff38 	bl	176a0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   17830:	b948      	cbnz	r0, 17846 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   17832:	68a0      	ldr	r0, [r4, #8]
   17834:	4632      	mov	r2, r6
   17836:	6803      	ldr	r3, [r0, #0]
   17838:	4629      	mov	r1, r5
   1783a:	699c      	ldr	r4, [r3, #24]
   1783c:	463b      	mov	r3, r7
   1783e:	46a4      	mov	ip, r4
   17840:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   17844:	4760      	bx	ip
   17846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001784a <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   1784a:	4770      	bx	lr

0001784c <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1784c:	2000      	movs	r0, #0
   1784e:	4770      	bx	lr

00017850 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   17850:	4281      	cmp	r1, r0
   17852:	b508      	push	{r3, lr}
   17854:	d00e      	beq.n	17874 <std::type_info::operator==(std::type_info const&) const+0x24>
   17856:	6840      	ldr	r0, [r0, #4]
   17858:	7803      	ldrb	r3, [r0, #0]
   1785a:	2b2a      	cmp	r3, #42	; 0x2a
   1785c:	d00c      	beq.n	17878 <std::type_info::operator==(std::type_info const&) const+0x28>
   1785e:	6849      	ldr	r1, [r1, #4]
   17860:	780b      	ldrb	r3, [r1, #0]
   17862:	2b2a      	cmp	r3, #42	; 0x2a
   17864:	bf08      	it	eq
   17866:	3101      	addeq	r1, #1
   17868:	f003 f80f 	bl	1a88a <strcmp>
   1786c:	fab0 f080 	clz	r0, r0
   17870:	0940      	lsrs	r0, r0, #5
   17872:	bd08      	pop	{r3, pc}
   17874:	2001      	movs	r0, #1
   17876:	bd08      	pop	{r3, pc}
   17878:	2000      	movs	r0, #0
   1787a:	bd08      	pop	{r3, pc}

0001787c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   1787c:	b510      	push	{r4, lr}
   1787e:	4604      	mov	r4, r0
   17880:	4b02      	ldr	r3, [pc, #8]	; (1788c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   17882:	6003      	str	r3, [r0, #0]
   17884:	f7ff fef8 	bl	17678 <__cxxabiv1::__class_type_info::~__class_type_info()>
   17888:	4620      	mov	r0, r4
   1788a:	bd10      	pop	{r4, pc}
   1788c:	00020208 	.word	0x00020208

00017890 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   17890:	b510      	push	{r4, lr}
   17892:	4604      	mov	r4, r0
   17894:	f7ff fff2 	bl	1787c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   17898:	4620      	mov	r0, r4
   1789a:	2118      	movs	r1, #24
   1789c:	f7ff ff3d 	bl	1771a <operator delete(void*, unsigned int)>
   178a0:	4620      	mov	r0, r4
   178a2:	bd10      	pop	{r4, pc}

000178a4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   178a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178a8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   178ac:	4604      	mov	r4, r0
   178ae:	454a      	cmp	r2, r9
   178b0:	460f      	mov	r7, r1
   178b2:	4616      	mov	r6, r2
   178b4:	4698      	mov	r8, r3
   178b6:	d103      	bne.n	178c0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   178b8:	4619      	mov	r1, r3
   178ba:	f7ff ffc9 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   178be:	bb38      	cbnz	r0, 17910 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   178c0:	68e5      	ldr	r5, [r4, #12]
   178c2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   178c6:	e001      	b.n	178cc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   178c8:	3d01      	subs	r5, #1
   178ca:	3c08      	subs	r4, #8
   178cc:	b315      	cbz	r5, 17914 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   178ce:	68e3      	ldr	r3, [r4, #12]
   178d0:	079a      	lsls	r2, r3, #30
   178d2:	d5f9      	bpl.n	178c8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   178d4:	f013 0a01 	ands.w	sl, r3, #1
   178d8:	ea4f 2223 	mov.w	r2, r3, asr #8
   178dc:	d003      	beq.n	178e6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   178de:	1cfb      	adds	r3, r7, #3
   178e0:	d0f2      	beq.n	178c8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   178e2:	6833      	ldr	r3, [r6, #0]
   178e4:	589a      	ldr	r2, [r3, r2]
   178e6:	68a0      	ldr	r0, [r4, #8]
   178e8:	4432      	add	r2, r6
   178ea:	6803      	ldr	r3, [r0, #0]
   178ec:	f8cd 9000 	str.w	r9, [sp]
   178f0:	f8d3 b020 	ldr.w	fp, [r3, #32]
   178f4:	4639      	mov	r1, r7
   178f6:	4643      	mov	r3, r8
   178f8:	47d8      	blx	fp
   178fa:	2803      	cmp	r0, #3
   178fc:	dde4      	ble.n	178c8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   178fe:	f1ba 0f00 	cmp.w	sl, #0
   17902:	d002      	beq.n	1790a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   17904:	f040 0001 	orr.w	r0, r0, #1
   17908:	b2c0      	uxtb	r0, r0
   1790a:	b003      	add	sp, #12
   1790c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17910:	2006      	movs	r0, #6
   17912:	e7fa      	b.n	1790a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   17914:	2001      	movs	r0, #1
   17916:	e7f8      	b.n	1790a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

00017918 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   17918:	b4f0      	push	{r4, r5, r6, r7}
   1791a:	1e0e      	subs	r6, r1, #0
   1791c:	9c04      	ldr	r4, [sp, #16]
   1791e:	db06      	blt.n	1792e <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   17920:	1990      	adds	r0, r2, r6
   17922:	4284      	cmp	r4, r0
   17924:	bf14      	ite	ne
   17926:	2001      	movne	r0, #1
   17928:	2006      	moveq	r0, #6
   1792a:	bcf0      	pop	{r4, r5, r6, r7}
   1792c:	4770      	bx	lr
   1792e:	3602      	adds	r6, #2
   17930:	d005      	beq.n	1793e <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   17932:	6805      	ldr	r5, [r0, #0]
   17934:	9404      	str	r4, [sp, #16]
   17936:	6a2c      	ldr	r4, [r5, #32]
   17938:	46a4      	mov	ip, r4
   1793a:	bcf0      	pop	{r4, r5, r6, r7}
   1793c:	4760      	bx	ip
   1793e:	2001      	movs	r0, #1
   17940:	e7f3      	b.n	1792a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

00017942 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   17942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17946:	b091      	sub	sp, #68	; 0x44
   17948:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   1794a:	9308      	str	r3, [sp, #32]
   1794c:	68a3      	ldr	r3, [r4, #8]
   1794e:	4688      	mov	r8, r1
   17950:	06d9      	lsls	r1, r3, #27
   17952:	bf48      	it	mi
   17954:	6883      	ldrmi	r3, [r0, #8]
   17956:	9207      	str	r2, [sp, #28]
   17958:	bf48      	it	mi
   1795a:	60a3      	strmi	r3, [r4, #8]
   1795c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1795e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17960:	4681      	mov	r9, r0
   17962:	4293      	cmp	r3, r2
   17964:	d105      	bne.n	17972 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   17966:	991b      	ldr	r1, [sp, #108]	; 0x6c
   17968:	f7ff ff72 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   1796c:	2800      	cmp	r0, #0
   1796e:	f040 8119 	bne.w	17ba4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   17972:	9908      	ldr	r1, [sp, #32]
   17974:	4648      	mov	r0, r9
   17976:	f7ff ff6b 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   1797a:	4682      	mov	sl, r0
   1797c:	2800      	cmp	r0, #0
   1797e:	d16e      	bne.n	17a5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   17980:	2600      	movs	r6, #0
   17982:	f1b8 0f00 	cmp.w	r8, #0
   17986:	bfa8      	it	ge
   17988:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1798a:	46b3      	mov	fp, r6
   1798c:	bfa4      	itt	ge
   1798e:	eba3 0308 	subge.w	r3, r3, r8
   17992:	9309      	strge	r3, [sp, #36]	; 0x24
   17994:	f04f 0301 	mov.w	r3, #1
   17998:	930a      	str	r3, [sp, #40]	; 0x28
   1799a:	9b07      	ldr	r3, [sp, #28]
   1799c:	bfb8      	it	lt
   1799e:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   179a2:	f043 0301 	orr.w	r3, r3, #1
   179a6:	9606      	str	r6, [sp, #24]
   179a8:	930b      	str	r3, [sp, #44]	; 0x2c
   179aa:	f8d9 300c 	ldr.w	r3, [r9, #12]
   179ae:	9304      	str	r3, [sp, #16]
   179b0:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   179b4:	9305      	str	r3, [sp, #20]
   179b6:	9b04      	ldr	r3, [sp, #16]
   179b8:	2b00      	cmp	r3, #0
   179ba:	f000 80e9 	beq.w	17b90 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   179be:	9b05      	ldr	r3, [sp, #20]
   179c0:	68a5      	ldr	r5, [r4, #8]
   179c2:	68db      	ldr	r3, [r3, #12]
   179c4:	950f      	str	r5, [sp, #60]	; 0x3c
   179c6:	07da      	lsls	r2, r3, #31
   179c8:	bf48      	it	mi
   179ca:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   179cc:	ea4f 2123 	mov.w	r1, r3, asr #8
   179d0:	bf48      	it	mi
   179d2:	6800      	ldrmi	r0, [r0, #0]
   179d4:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   179d8:	bf48      	it	mi
   179da:	5841      	ldrmi	r1, [r0, r1]
   179dc:	981a      	ldr	r0, [sp, #104]	; 0x68
   179de:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   179e2:	4401      	add	r1, r0
   179e4:	9809      	ldr	r0, [sp, #36]	; 0x24
   179e6:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   179ea:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   179ee:	bf4c      	ite	mi
   179f0:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   179f2:	9a07      	ldrpl	r2, [sp, #28]
   179f4:	b138      	cbz	r0, 17a06 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   179f6:	4288      	cmp	r0, r1
   179f8:	bf2c      	ite	cs
   179fa:	2000      	movcs	r0, #0
   179fc:	2001      	movcc	r0, #1
   179fe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   17a00:	42b8      	cmp	r0, r7
   17a02:	f000 80ba 	beq.w	17b7a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   17a06:	079b      	lsls	r3, r3, #30
   17a08:	d407      	bmi.n	17a1a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   17a0a:	f118 0f02 	cmn.w	r8, #2
   17a0e:	d102      	bne.n	17a16 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   17a10:	07af      	lsls	r7, r5, #30
   17a12:	f000 80b4 	beq.w	17b7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   17a16:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   17a1a:	9b05      	ldr	r3, [sp, #20]
   17a1c:	ad0d      	add	r5, sp, #52	; 0x34
   17a1e:	6898      	ldr	r0, [r3, #8]
   17a20:	6803      	ldr	r3, [r0, #0]
   17a22:	9503      	str	r5, [sp, #12]
   17a24:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   17a26:	9502      	str	r5, [sp, #8]
   17a28:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   17a2a:	e88d 0022 	stmia.w	sp, {r1, r5}
   17a2e:	4641      	mov	r1, r8
   17a30:	69dd      	ldr	r5, [r3, #28]
   17a32:	9b08      	ldr	r3, [sp, #32]
   17a34:	47a8      	blx	r5
   17a36:	7961      	ldrb	r1, [r4, #5]
   17a38:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   17a3c:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   17a40:	4311      	orrs	r1, r2
   17a42:	2d06      	cmp	r5, #6
   17a44:	4603      	mov	r3, r0
   17a46:	7161      	strb	r1, [r4, #5]
   17a48:	d001      	beq.n	17a4e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   17a4a:	2d02      	cmp	r5, #2
   17a4c:	d122      	bne.n	17a94 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   17a4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17a50:	71a5      	strb	r5, [r4, #6]
   17a52:	6023      	str	r3, [r4, #0]
   17a54:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   17a58:	7123      	strb	r3, [r4, #4]
   17a5a:	4682      	mov	sl, r0
   17a5c:	e078      	b.n	17b50 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17a5e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17a60:	f1b8 0f00 	cmp.w	r8, #0
   17a64:	6023      	str	r3, [r4, #0]
   17a66:	f89d 301c 	ldrb.w	r3, [sp, #28]
   17a6a:	7123      	strb	r3, [r4, #4]
   17a6c:	db0c      	blt.n	17a88 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   17a6e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17a70:	4498      	add	r8, r3
   17a72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17a74:	4543      	cmp	r3, r8
   17a76:	bf0c      	ite	eq
   17a78:	f04f 0806 	moveq.w	r8, #6
   17a7c:	f04f 0801 	movne.w	r8, #1
   17a80:	f884 8006 	strb.w	r8, [r4, #6]
   17a84:	2600      	movs	r6, #0
   17a86:	e064      	b.n	17b52 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17a88:	f118 0f02 	cmn.w	r8, #2
   17a8c:	d1fa      	bne.n	17a84 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17a8e:	2301      	movs	r3, #1
   17a90:	71a3      	strb	r3, [r4, #6]
   17a92:	e7f7      	b.n	17a84 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17a94:	6822      	ldr	r2, [r4, #0]
   17a96:	b986      	cbnz	r6, 17aba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   17a98:	b97a      	cbnz	r2, 17aba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   17a9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17a9c:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   17aa0:	6022      	str	r2, [r4, #0]
   17aa2:	7125      	strb	r5, [r4, #4]
   17aa4:	b122      	cbz	r2, 17ab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17aa6:	b119      	cbz	r1, 17ab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17aa8:	f8d9 2008 	ldr.w	r2, [r9, #8]
   17aac:	07d5      	lsls	r5, r2, #31
   17aae:	d5d4      	bpl.n	17a5a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   17ab0:	7962      	ldrb	r2, [r4, #5]
   17ab2:	2a04      	cmp	r2, #4
   17ab4:	d164      	bne.n	17b80 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   17ab6:	469a      	mov	sl, r3
   17ab8:	e04a      	b.n	17b50 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17aba:	b15a      	cbz	r2, 17ad4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   17abc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17abe:	429a      	cmp	r2, r3
   17ac0:	d106      	bne.n	17ad0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   17ac2:	7923      	ldrb	r3, [r4, #4]
   17ac4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   17ac8:	4313      	orrs	r3, r2
   17aca:	7123      	strb	r3, [r4, #4]
   17acc:	4633      	mov	r3, r6
   17ace:	e7ef      	b.n	17ab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17ad0:	b92b      	cbnz	r3, 17ade <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   17ad2:	b920      	cbnz	r0, 17ade <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   17ad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17ad6:	2b00      	cmp	r3, #0
   17ad8:	d0f8      	beq.n	17acc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   17ada:	2e00      	cmp	r6, #0
   17adc:	d0f6      	beq.n	17acc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   17ade:	2903      	cmp	r1, #3
   17ae0:	79a7      	ldrb	r7, [r4, #6]
   17ae2:	d904      	bls.n	17aee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   17ae4:	07c8      	lsls	r0, r1, #31
   17ae6:	d561      	bpl.n	17bac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   17ae8:	68a3      	ldr	r3, [r4, #8]
   17aea:	0799      	lsls	r1, r3, #30
   17aec:	d55e      	bpl.n	17bac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   17aee:	b97f      	cbnz	r7, 17b10 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   17af0:	2d03      	cmp	r5, #3
   17af2:	dd05      	ble.n	17b00 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   17af4:	07eb      	lsls	r3, r5, #31
   17af6:	d560      	bpl.n	17bba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   17af8:	f8d9 3008 	ldr.w	r3, [r9, #8]
   17afc:	079f      	lsls	r7, r3, #30
   17afe:	d52c      	bpl.n	17b5a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   17b00:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17b02:	4641      	mov	r1, r8
   17b04:	9300      	str	r3, [sp, #0]
   17b06:	9808      	ldr	r0, [sp, #32]
   17b08:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   17b0a:	f7ff ff05 	bl	17918 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   17b0e:	4607      	mov	r7, r0
   17b10:	b945      	cbnz	r5, 17b24 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17b12:	2f03      	cmp	r7, #3
   17b14:	dd54      	ble.n	17bc0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   17b16:	07fd      	lsls	r5, r7, #31
   17b18:	d503      	bpl.n	17b22 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   17b1a:	f8d9 3008 	ldr.w	r3, [r9, #8]
   17b1e:	0798      	lsls	r0, r3, #30
   17b20:	d44e      	bmi.n	17bc0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   17b22:	2501      	movs	r5, #1
   17b24:	ea85 0307 	eor.w	r3, r5, r7
   17b28:	b2db      	uxtb	r3, r3
   17b2a:	2b03      	cmp	r3, #3
   17b2c:	d917      	bls.n	17b5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   17b2e:	2d03      	cmp	r5, #3
   17b30:	bfc5      	ittet	gt
   17b32:	462f      	movgt	r7, r5
   17b34:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   17b36:	4633      	movle	r3, r6
   17b38:	6023      	strgt	r3, [r4, #0]
   17b3a:	bfc8      	it	gt
   17b3c:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   17b40:	71a7      	strb	r7, [r4, #6]
   17b42:	bfc4      	itt	gt
   17b44:	7123      	strbgt	r3, [r4, #4]
   17b46:	2300      	movgt	r3, #0
   17b48:	07b9      	lsls	r1, r7, #30
   17b4a:	d401      	bmi.n	17b50 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17b4c:	07fa      	lsls	r2, r7, #31
   17b4e:	d4af      	bmi.n	17ab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17b50:	4656      	mov	r6, sl
   17b52:	4630      	mov	r0, r6
   17b54:	b011      	add	sp, #68	; 0x44
   17b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b5a:	2701      	movs	r7, #1
   17b5c:	e7e2      	b.n	17b24 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17b5e:	403d      	ands	r5, r7
   17b60:	b2ed      	uxtb	r5, r5
   17b62:	2d03      	cmp	r5, #3
   17b64:	f8c4 b000 	str.w	fp, [r4]
   17b68:	d904      	bls.n	17b74 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   17b6a:	2302      	movs	r3, #2
   17b6c:	f04f 0a01 	mov.w	sl, #1
   17b70:	71a3      	strb	r3, [r4, #6]
   17b72:	e7ed      	b.n	17b50 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17b74:	2301      	movs	r3, #1
   17b76:	71a3      	strb	r3, [r4, #6]
   17b78:	e79a      	b.n	17ab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17b7a:	2301      	movs	r3, #1
   17b7c:	9306      	str	r3, [sp, #24]
   17b7e:	4633      	mov	r3, r6
   17b80:	9a04      	ldr	r2, [sp, #16]
   17b82:	461e      	mov	r6, r3
   17b84:	3a01      	subs	r2, #1
   17b86:	9204      	str	r2, [sp, #16]
   17b88:	9a05      	ldr	r2, [sp, #20]
   17b8a:	3a08      	subs	r2, #8
   17b8c:	9205      	str	r2, [sp, #20]
   17b8e:	e712      	b.n	179b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   17b90:	9b06      	ldr	r3, [sp, #24]
   17b92:	2b00      	cmp	r3, #0
   17b94:	d0dd      	beq.n	17b52 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17b96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   17b98:	9306      	str	r3, [sp, #24]
   17b9a:	2b00      	cmp	r3, #0
   17b9c:	d0d9      	beq.n	17b52 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17b9e:	9b04      	ldr	r3, [sp, #16]
   17ba0:	930a      	str	r3, [sp, #40]	; 0x28
   17ba2:	e702      	b.n	179aa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   17ba4:	f89d 301c 	ldrb.w	r3, [sp, #28]
   17ba8:	7163      	strb	r3, [r4, #5]
   17baa:	e76b      	b.n	17a84 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17bac:	2f00      	cmp	r7, #0
   17bae:	bf08      	it	eq
   17bb0:	2701      	moveq	r7, #1
   17bb2:	2d00      	cmp	r5, #0
   17bb4:	bf08      	it	eq
   17bb6:	2501      	moveq	r5, #1
   17bb8:	e7b4      	b.n	17b24 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17bba:	2d00      	cmp	r5, #0
   17bbc:	d1cd      	bne.n	17b5a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   17bbe:	2701      	movs	r7, #1
   17bc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17bc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17bc4:	9300      	str	r3, [sp, #0]
   17bc6:	4641      	mov	r1, r8
   17bc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   17bca:	9808      	ldr	r0, [sp, #32]
   17bcc:	f7ff fea4 	bl	17918 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   17bd0:	4605      	mov	r5, r0
   17bd2:	e7a7      	b.n	17b24 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

00017bd4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   17bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bd8:	b089      	sub	sp, #36	; 0x24
   17bda:	4607      	mov	r7, r0
   17bdc:	9102      	str	r1, [sp, #8]
   17bde:	4692      	mov	sl, r2
   17be0:	461c      	mov	r4, r3
   17be2:	f7ff fd5d 	bl	176a0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   17be6:	4605      	mov	r5, r0
   17be8:	2800      	cmp	r0, #0
   17bea:	d155      	bne.n	17c98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17bec:	f04f 0b00 	mov.w	fp, #0
   17bf0:	f8d4 8008 	ldr.w	r8, [r4, #8]
   17bf4:	f8d7 900c 	ldr.w	r9, [r7, #12]
   17bf8:	f018 0f10 	tst.w	r8, #16
   17bfc:	bf18      	it	ne
   17bfe:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   17c02:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   17c06:	f008 0301 	and.w	r3, r8, #1
   17c0a:	9303      	str	r3, [sp, #12]
   17c0c:	f1b9 0f00 	cmp.w	r9, #0
   17c10:	d06b      	beq.n	17cea <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   17c12:	68f2      	ldr	r2, [r6, #12]
   17c14:	f8cd b010 	str.w	fp, [sp, #16]
   17c18:	f002 0301 	and.w	r3, r2, #1
   17c1c:	9300      	str	r3, [sp, #0]
   17c1e:	f012 0302 	ands.w	r3, r2, #2
   17c22:	f88d b014 	strb.w	fp, [sp, #20]
   17c26:	f8cd 8018 	str.w	r8, [sp, #24]
   17c2a:	f8cd b01c 	str.w	fp, [sp, #28]
   17c2e:	9301      	str	r3, [sp, #4]
   17c30:	d102      	bne.n	17c38 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   17c32:	9b03      	ldr	r3, [sp, #12]
   17c34:	2b00      	cmp	r3, #0
   17c36:	d04a      	beq.n	17cce <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17c38:	f1ba 0f00 	cmp.w	sl, #0
   17c3c:	d030      	beq.n	17ca0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   17c3e:	9b00      	ldr	r3, [sp, #0]
   17c40:	1212      	asrs	r2, r2, #8
   17c42:	b113      	cbz	r3, 17c4a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   17c44:	f8da 3000 	ldr.w	r3, [sl]
   17c48:	589a      	ldr	r2, [r3, r2]
   17c4a:	4452      	add	r2, sl
   17c4c:	68b0      	ldr	r0, [r6, #8]
   17c4e:	9902      	ldr	r1, [sp, #8]
   17c50:	6803      	ldr	r3, [r0, #0]
   17c52:	699d      	ldr	r5, [r3, #24]
   17c54:	ab04      	add	r3, sp, #16
   17c56:	47a8      	blx	r5
   17c58:	4605      	mov	r5, r0
   17c5a:	2800      	cmp	r0, #0
   17c5c:	d037      	beq.n	17cce <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17c5e:	9b07      	ldr	r3, [sp, #28]
   17c60:	2b08      	cmp	r3, #8
   17c62:	d103      	bne.n	17c6c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   17c64:	9b00      	ldr	r3, [sp, #0]
   17c66:	b10b      	cbz	r3, 17c6c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   17c68:	68b3      	ldr	r3, [r6, #8]
   17c6a:	9307      	str	r3, [sp, #28]
   17c6c:	f89d 3014 	ldrb.w	r3, [sp, #20]
   17c70:	2b03      	cmp	r3, #3
   17c72:	dd02      	ble.n	17c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   17c74:	9a01      	ldr	r2, [sp, #4]
   17c76:	2a00      	cmp	r2, #0
   17c78:	d03c      	beq.n	17cf4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   17c7a:	68e1      	ldr	r1, [r4, #12]
   17c7c:	b9c1      	cbnz	r1, 17cb0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   17c7e:	ab04      	add	r3, sp, #16
   17c80:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   17c82:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   17c86:	7923      	ldrb	r3, [r4, #4]
   17c88:	2b03      	cmp	r3, #3
   17c8a:	dd05      	ble.n	17c98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17c8c:	079a      	lsls	r2, r3, #30
   17c8e:	d509      	bpl.n	17ca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   17c90:	68bb      	ldr	r3, [r7, #8]
   17c92:	f013 0f01 	tst.w	r3, #1
   17c96:	d11a      	bne.n	17cce <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17c98:	4628      	mov	r0, r5
   17c9a:	b009      	add	sp, #36	; 0x24
   17c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ca0:	4652      	mov	r2, sl
   17ca2:	e7d3      	b.n	17c4c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   17ca4:	07db      	lsls	r3, r3, #31
   17ca6:	d5f7      	bpl.n	17c98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17ca8:	68bb      	ldr	r3, [r7, #8]
   17caa:	f013 0f02 	tst.w	r3, #2
   17cae:	e7f2      	b.n	17c96 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   17cb0:	6823      	ldr	r3, [r4, #0]
   17cb2:	9a04      	ldr	r2, [sp, #16]
   17cb4:	4293      	cmp	r3, r2
   17cb6:	d004      	beq.n	17cc2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   17cb8:	2300      	movs	r3, #0
   17cba:	6023      	str	r3, [r4, #0]
   17cbc:	2302      	movs	r3, #2
   17cbe:	7123      	strb	r3, [r4, #4]
   17cc0:	e7ea      	b.n	17c98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17cc2:	b143      	cbz	r3, 17cd6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   17cc4:	7923      	ldrb	r3, [r4, #4]
   17cc6:	f89d 2014 	ldrb.w	r2, [sp, #20]
   17cca:	4313      	orrs	r3, r2
   17ccc:	7123      	strb	r3, [r4, #4]
   17cce:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   17cd2:	3e08      	subs	r6, #8
   17cd4:	e79a      	b.n	17c0c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   17cd6:	9807      	ldr	r0, [sp, #28]
   17cd8:	2808      	cmp	r0, #8
   17cda:	d0ef      	beq.n	17cbc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17cdc:	2908      	cmp	r1, #8
   17cde:	d0ed      	beq.n	17cbc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17ce0:	f7ff fdb6 	bl	17850 <std::type_info::operator==(std::type_info const&) const>
   17ce4:	2800      	cmp	r0, #0
   17ce6:	d1ed      	bne.n	17cc4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   17ce8:	e7e8      	b.n	17cbc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17cea:	7925      	ldrb	r5, [r4, #4]
   17cec:	3500      	adds	r5, #0
   17cee:	bf18      	it	ne
   17cf0:	2501      	movne	r5, #1
   17cf2:	e7d1      	b.n	17c98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17cf4:	f023 0302 	bic.w	r3, r3, #2
   17cf8:	f88d 3014 	strb.w	r3, [sp, #20]
   17cfc:	e7bd      	b.n	17c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

00017cfe <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   17cfe:	b508      	push	{r3, lr}
   17d00:	4780      	blx	r0
   17d02:	f000 fe49 	bl	18998 <abort>
   17d06:	Address 0x0000000000017d06 is out of bounds.


00017d08 <std::get_terminate()>:
_ZSt13get_terminatev():
   17d08:	4b02      	ldr	r3, [pc, #8]	; (17d14 <std::get_terminate()+0xc>)
   17d0a:	6818      	ldr	r0, [r3, #0]
   17d0c:	f3bf 8f5b 	dmb	ish
   17d10:	4770      	bx	lr
   17d12:	bf00      	nop
   17d14:	2007c0dc 	.word	0x2007c0dc

00017d18 <std::terminate()>:
_ZSt9terminatev():
   17d18:	b508      	push	{r3, lr}
   17d1a:	f7ff fff5 	bl	17d08 <std::get_terminate()>
   17d1e:	f7ff ffee 	bl	17cfe <__cxxabiv1::__terminate(void (*)())>
   17d22:	Address 0x0000000000017d22 is out of bounds.


00017d24 <__aeabi_llsl>:
__aeabi_llsl():
   17d24:	4091      	lsls	r1, r2
   17d26:	1c03      	adds	r3, r0, #0
   17d28:	4090      	lsls	r0, r2
   17d2a:	469c      	mov	ip, r3
   17d2c:	3a20      	subs	r2, #32
   17d2e:	4093      	lsls	r3, r2
   17d30:	4319      	orrs	r1, r3
   17d32:	4252      	negs	r2, r2
   17d34:	4663      	mov	r3, ip
   17d36:	40d3      	lsrs	r3, r2
   17d38:	4319      	orrs	r1, r3
   17d3a:	4770      	bx	lr

00017d3c <__aeabi_drsub>:
__aeabi_drsub():
   17d3c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   17d40:	e002      	b.n	17d48 <__adddf3>
   17d42:	bf00      	nop

00017d44 <__aeabi_dsub>:
__subdf3():
   17d44:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00017d48 <__adddf3>:
__aeabi_dadd():
   17d48:	b530      	push	{r4, r5, lr}
   17d4a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   17d4e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   17d52:	ea94 0f05 	teq	r4, r5
   17d56:	bf08      	it	eq
   17d58:	ea90 0f02 	teqeq	r0, r2
   17d5c:	bf1f      	itttt	ne
   17d5e:	ea54 0c00 	orrsne.w	ip, r4, r0
   17d62:	ea55 0c02 	orrsne.w	ip, r5, r2
   17d66:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   17d6a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   17d6e:	f000 80e2 	beq.w	17f36 <__adddf3+0x1ee>
   17d72:	ea4f 5454 	mov.w	r4, r4, lsr #21
   17d76:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   17d7a:	bfb8      	it	lt
   17d7c:	426d      	neglt	r5, r5
   17d7e:	dd0c      	ble.n	17d9a <__adddf3+0x52>
   17d80:	442c      	add	r4, r5
   17d82:	ea80 0202 	eor.w	r2, r0, r2
   17d86:	ea81 0303 	eor.w	r3, r1, r3
   17d8a:	ea82 0000 	eor.w	r0, r2, r0
   17d8e:	ea83 0101 	eor.w	r1, r3, r1
   17d92:	ea80 0202 	eor.w	r2, r0, r2
   17d96:	ea81 0303 	eor.w	r3, r1, r3
   17d9a:	2d36      	cmp	r5, #54	; 0x36
   17d9c:	bf88      	it	hi
   17d9e:	bd30      	pophi	{r4, r5, pc}
   17da0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   17da4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   17da8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   17dac:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   17db0:	d002      	beq.n	17db8 <__adddf3+0x70>
   17db2:	4240      	negs	r0, r0
   17db4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   17db8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   17dbc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   17dc0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   17dc4:	d002      	beq.n	17dcc <__adddf3+0x84>
   17dc6:	4252      	negs	r2, r2
   17dc8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   17dcc:	ea94 0f05 	teq	r4, r5
   17dd0:	f000 80a7 	beq.w	17f22 <__adddf3+0x1da>
   17dd4:	f1a4 0401 	sub.w	r4, r4, #1
   17dd8:	f1d5 0e20 	rsbs	lr, r5, #32
   17ddc:	db0d      	blt.n	17dfa <__adddf3+0xb2>
   17dde:	fa02 fc0e 	lsl.w	ip, r2, lr
   17de2:	fa22 f205 	lsr.w	r2, r2, r5
   17de6:	1880      	adds	r0, r0, r2
   17de8:	f141 0100 	adc.w	r1, r1, #0
   17dec:	fa03 f20e 	lsl.w	r2, r3, lr
   17df0:	1880      	adds	r0, r0, r2
   17df2:	fa43 f305 	asr.w	r3, r3, r5
   17df6:	4159      	adcs	r1, r3
   17df8:	e00e      	b.n	17e18 <__adddf3+0xd0>
   17dfa:	f1a5 0520 	sub.w	r5, r5, #32
   17dfe:	f10e 0e20 	add.w	lr, lr, #32
   17e02:	2a01      	cmp	r2, #1
   17e04:	fa03 fc0e 	lsl.w	ip, r3, lr
   17e08:	bf28      	it	cs
   17e0a:	f04c 0c02 	orrcs.w	ip, ip, #2
   17e0e:	fa43 f305 	asr.w	r3, r3, r5
   17e12:	18c0      	adds	r0, r0, r3
   17e14:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   17e18:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   17e1c:	d507      	bpl.n	17e2e <__adddf3+0xe6>
   17e1e:	f04f 0e00 	mov.w	lr, #0
   17e22:	f1dc 0c00 	rsbs	ip, ip, #0
   17e26:	eb7e 0000 	sbcs.w	r0, lr, r0
   17e2a:	eb6e 0101 	sbc.w	r1, lr, r1
   17e2e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   17e32:	d31b      	bcc.n	17e6c <__adddf3+0x124>
   17e34:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   17e38:	d30c      	bcc.n	17e54 <__adddf3+0x10c>
   17e3a:	0849      	lsrs	r1, r1, #1
   17e3c:	ea5f 0030 	movs.w	r0, r0, rrx
   17e40:	ea4f 0c3c 	mov.w	ip, ip, rrx
   17e44:	f104 0401 	add.w	r4, r4, #1
   17e48:	ea4f 5244 	mov.w	r2, r4, lsl #21
   17e4c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   17e50:	f080 809a 	bcs.w	17f88 <__adddf3+0x240>
   17e54:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   17e58:	bf08      	it	eq
   17e5a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   17e5e:	f150 0000 	adcs.w	r0, r0, #0
   17e62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   17e66:	ea41 0105 	orr.w	r1, r1, r5
   17e6a:	bd30      	pop	{r4, r5, pc}
   17e6c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   17e70:	4140      	adcs	r0, r0
   17e72:	eb41 0101 	adc.w	r1, r1, r1
   17e76:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   17e7a:	f1a4 0401 	sub.w	r4, r4, #1
   17e7e:	d1e9      	bne.n	17e54 <__adddf3+0x10c>
   17e80:	f091 0f00 	teq	r1, #0
   17e84:	bf04      	itt	eq
   17e86:	4601      	moveq	r1, r0
   17e88:	2000      	moveq	r0, #0
   17e8a:	fab1 f381 	clz	r3, r1
   17e8e:	bf08      	it	eq
   17e90:	3320      	addeq	r3, #32
   17e92:	f1a3 030b 	sub.w	r3, r3, #11
   17e96:	f1b3 0220 	subs.w	r2, r3, #32
   17e9a:	da0c      	bge.n	17eb6 <__adddf3+0x16e>
   17e9c:	320c      	adds	r2, #12
   17e9e:	dd08      	ble.n	17eb2 <__adddf3+0x16a>
   17ea0:	f102 0c14 	add.w	ip, r2, #20
   17ea4:	f1c2 020c 	rsb	r2, r2, #12
   17ea8:	fa01 f00c 	lsl.w	r0, r1, ip
   17eac:	fa21 f102 	lsr.w	r1, r1, r2
   17eb0:	e00c      	b.n	17ecc <__adddf3+0x184>
   17eb2:	f102 0214 	add.w	r2, r2, #20
   17eb6:	bfd8      	it	le
   17eb8:	f1c2 0c20 	rsble	ip, r2, #32
   17ebc:	fa01 f102 	lsl.w	r1, r1, r2
   17ec0:	fa20 fc0c 	lsr.w	ip, r0, ip
   17ec4:	bfdc      	itt	le
   17ec6:	ea41 010c 	orrle.w	r1, r1, ip
   17eca:	4090      	lslle	r0, r2
   17ecc:	1ae4      	subs	r4, r4, r3
   17ece:	bfa2      	ittt	ge
   17ed0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   17ed4:	4329      	orrge	r1, r5
   17ed6:	bd30      	popge	{r4, r5, pc}
   17ed8:	ea6f 0404 	mvn.w	r4, r4
   17edc:	3c1f      	subs	r4, #31
   17ede:	da1c      	bge.n	17f1a <__adddf3+0x1d2>
   17ee0:	340c      	adds	r4, #12
   17ee2:	dc0e      	bgt.n	17f02 <__adddf3+0x1ba>
   17ee4:	f104 0414 	add.w	r4, r4, #20
   17ee8:	f1c4 0220 	rsb	r2, r4, #32
   17eec:	fa20 f004 	lsr.w	r0, r0, r4
   17ef0:	fa01 f302 	lsl.w	r3, r1, r2
   17ef4:	ea40 0003 	orr.w	r0, r0, r3
   17ef8:	fa21 f304 	lsr.w	r3, r1, r4
   17efc:	ea45 0103 	orr.w	r1, r5, r3
   17f00:	bd30      	pop	{r4, r5, pc}
   17f02:	f1c4 040c 	rsb	r4, r4, #12
   17f06:	f1c4 0220 	rsb	r2, r4, #32
   17f0a:	fa20 f002 	lsr.w	r0, r0, r2
   17f0e:	fa01 f304 	lsl.w	r3, r1, r4
   17f12:	ea40 0003 	orr.w	r0, r0, r3
   17f16:	4629      	mov	r1, r5
   17f18:	bd30      	pop	{r4, r5, pc}
   17f1a:	fa21 f004 	lsr.w	r0, r1, r4
   17f1e:	4629      	mov	r1, r5
   17f20:	bd30      	pop	{r4, r5, pc}
   17f22:	f094 0f00 	teq	r4, #0
   17f26:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   17f2a:	bf06      	itte	eq
   17f2c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   17f30:	3401      	addeq	r4, #1
   17f32:	3d01      	subne	r5, #1
   17f34:	e74e      	b.n	17dd4 <__adddf3+0x8c>
   17f36:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   17f3a:	bf18      	it	ne
   17f3c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   17f40:	d029      	beq.n	17f96 <__adddf3+0x24e>
   17f42:	ea94 0f05 	teq	r4, r5
   17f46:	bf08      	it	eq
   17f48:	ea90 0f02 	teqeq	r0, r2
   17f4c:	d005      	beq.n	17f5a <__adddf3+0x212>
   17f4e:	ea54 0c00 	orrs.w	ip, r4, r0
   17f52:	bf04      	itt	eq
   17f54:	4619      	moveq	r1, r3
   17f56:	4610      	moveq	r0, r2
   17f58:	bd30      	pop	{r4, r5, pc}
   17f5a:	ea91 0f03 	teq	r1, r3
   17f5e:	bf1e      	ittt	ne
   17f60:	2100      	movne	r1, #0
   17f62:	2000      	movne	r0, #0
   17f64:	bd30      	popne	{r4, r5, pc}
   17f66:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   17f6a:	d105      	bne.n	17f78 <__adddf3+0x230>
   17f6c:	0040      	lsls	r0, r0, #1
   17f6e:	4149      	adcs	r1, r1
   17f70:	bf28      	it	cs
   17f72:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   17f76:	bd30      	pop	{r4, r5, pc}
   17f78:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   17f7c:	bf3c      	itt	cc
   17f7e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   17f82:	bd30      	popcc	{r4, r5, pc}
   17f84:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   17f88:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   17f8c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   17f90:	f04f 0000 	mov.w	r0, #0
   17f94:	bd30      	pop	{r4, r5, pc}
   17f96:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   17f9a:	bf1a      	itte	ne
   17f9c:	4619      	movne	r1, r3
   17f9e:	4610      	movne	r0, r2
   17fa0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   17fa4:	bf1c      	itt	ne
   17fa6:	460b      	movne	r3, r1
   17fa8:	4602      	movne	r2, r0
   17faa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   17fae:	bf06      	itte	eq
   17fb0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   17fb4:	ea91 0f03 	teqeq	r1, r3
   17fb8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   17fbc:	bd30      	pop	{r4, r5, pc}
   17fbe:	bf00      	nop

00017fc0 <__aeabi_ui2d>:
__floatunsidf():
   17fc0:	f090 0f00 	teq	r0, #0
   17fc4:	bf04      	itt	eq
   17fc6:	2100      	moveq	r1, #0
   17fc8:	4770      	bxeq	lr
   17fca:	b530      	push	{r4, r5, lr}
   17fcc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   17fd0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   17fd4:	f04f 0500 	mov.w	r5, #0
   17fd8:	f04f 0100 	mov.w	r1, #0
   17fdc:	e750      	b.n	17e80 <__adddf3+0x138>
   17fde:	bf00      	nop

00017fe0 <__aeabi_i2d>:
__aeabi_i2d():
   17fe0:	f090 0f00 	teq	r0, #0
   17fe4:	bf04      	itt	eq
   17fe6:	2100      	moveq	r1, #0
   17fe8:	4770      	bxeq	lr
   17fea:	b530      	push	{r4, r5, lr}
   17fec:	f44f 6480 	mov.w	r4, #1024	; 0x400
   17ff0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   17ff4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   17ff8:	bf48      	it	mi
   17ffa:	4240      	negmi	r0, r0
   17ffc:	f04f 0100 	mov.w	r1, #0
   18000:	e73e      	b.n	17e80 <__adddf3+0x138>
   18002:	bf00      	nop

00018004 <__aeabi_f2d>:
__aeabi_f2d():
   18004:	0042      	lsls	r2, r0, #1
   18006:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1800a:	ea4f 0131 	mov.w	r1, r1, rrx
   1800e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   18012:	bf1f      	itttt	ne
   18014:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   18018:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1801c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   18020:	4770      	bxne	lr
   18022:	f092 0f00 	teq	r2, #0
   18026:	bf14      	ite	ne
   18028:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1802c:	4770      	bxeq	lr
   1802e:	b530      	push	{r4, r5, lr}
   18030:	f44f 7460 	mov.w	r4, #896	; 0x380
   18034:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18038:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1803c:	e720      	b.n	17e80 <__adddf3+0x138>
   1803e:	bf00      	nop

00018040 <__aeabi_ul2d>:
__floatundidf():
   18040:	ea50 0201 	orrs.w	r2, r0, r1
   18044:	bf08      	it	eq
   18046:	4770      	bxeq	lr
   18048:	b530      	push	{r4, r5, lr}
   1804a:	f04f 0500 	mov.w	r5, #0
   1804e:	e00a      	b.n	18066 <__aeabi_l2d+0x16>

00018050 <__aeabi_l2d>:
__aeabi_l2d():
   18050:	ea50 0201 	orrs.w	r2, r0, r1
   18054:	bf08      	it	eq
   18056:	4770      	bxeq	lr
   18058:	b530      	push	{r4, r5, lr}
   1805a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1805e:	d502      	bpl.n	18066 <__aeabi_l2d+0x16>
   18060:	4240      	negs	r0, r0
   18062:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18066:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1806a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1806e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   18072:	f43f aedc 	beq.w	17e2e <__adddf3+0xe6>
   18076:	f04f 0203 	mov.w	r2, #3
   1807a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1807e:	bf18      	it	ne
   18080:	3203      	addne	r2, #3
   18082:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   18086:	bf18      	it	ne
   18088:	3203      	addne	r2, #3
   1808a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1808e:	f1c2 0320 	rsb	r3, r2, #32
   18092:	fa00 fc03 	lsl.w	ip, r0, r3
   18096:	fa20 f002 	lsr.w	r0, r0, r2
   1809a:	fa01 fe03 	lsl.w	lr, r1, r3
   1809e:	ea40 000e 	orr.w	r0, r0, lr
   180a2:	fa21 f102 	lsr.w	r1, r1, r2
   180a6:	4414      	add	r4, r2
   180a8:	e6c1      	b.n	17e2e <__adddf3+0xe6>
   180aa:	bf00      	nop

000180ac <__aeabi_d2uiz>:
__aeabi_d2uiz():
   180ac:	004a      	lsls	r2, r1, #1
   180ae:	d211      	bcs.n	180d4 <__aeabi_d2uiz+0x28>
   180b0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   180b4:	d211      	bcs.n	180da <__aeabi_d2uiz+0x2e>
   180b6:	d50d      	bpl.n	180d4 <__aeabi_d2uiz+0x28>
   180b8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   180bc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   180c0:	d40e      	bmi.n	180e0 <__aeabi_d2uiz+0x34>
   180c2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   180c6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   180ca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   180ce:	fa23 f002 	lsr.w	r0, r3, r2
   180d2:	4770      	bx	lr
   180d4:	f04f 0000 	mov.w	r0, #0
   180d8:	4770      	bx	lr
   180da:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   180de:	d102      	bne.n	180e6 <__aeabi_d2uiz+0x3a>
   180e0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   180e4:	4770      	bx	lr
   180e6:	f04f 0000 	mov.w	r0, #0
   180ea:	4770      	bx	lr

000180ec <__aeabi_d2f>:
__truncdfsf2():
   180ec:	ea4f 0241 	mov.w	r2, r1, lsl #1
   180f0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   180f4:	bf24      	itt	cs
   180f6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   180fa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   180fe:	d90d      	bls.n	1811c <__aeabi_d2f+0x30>
   18100:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   18104:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   18108:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1810c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   18110:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   18114:	bf08      	it	eq
   18116:	f020 0001 	biceq.w	r0, r0, #1
   1811a:	4770      	bx	lr
   1811c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   18120:	d121      	bne.n	18166 <__aeabi_d2f+0x7a>
   18122:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   18126:	bfbc      	itt	lt
   18128:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1812c:	4770      	bxlt	lr
   1812e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   18132:	ea4f 5252 	mov.w	r2, r2, lsr #21
   18136:	f1c2 0218 	rsb	r2, r2, #24
   1813a:	f1c2 0c20 	rsb	ip, r2, #32
   1813e:	fa10 f30c 	lsls.w	r3, r0, ip
   18142:	fa20 f002 	lsr.w	r0, r0, r2
   18146:	bf18      	it	ne
   18148:	f040 0001 	orrne.w	r0, r0, #1
   1814c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18150:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   18154:	fa03 fc0c 	lsl.w	ip, r3, ip
   18158:	ea40 000c 	orr.w	r0, r0, ip
   1815c:	fa23 f302 	lsr.w	r3, r3, r2
   18160:	ea4f 0343 	mov.w	r3, r3, lsl #1
   18164:	e7cc      	b.n	18100 <__aeabi_d2f+0x14>
   18166:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1816a:	d107      	bne.n	1817c <__aeabi_d2f+0x90>
   1816c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   18170:	bf1e      	ittt	ne
   18172:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   18176:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1817a:	4770      	bxne	lr
   1817c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   18180:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   18184:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18188:	4770      	bx	lr
   1818a:	bf00      	nop

0001818c <__aeabi_frsub>:
__aeabi_frsub():
   1818c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   18190:	e002      	b.n	18198 <__addsf3>
   18192:	bf00      	nop

00018194 <__aeabi_fsub>:
__aeabi_fsub():
   18194:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00018198 <__addsf3>:
__addsf3():
   18198:	0042      	lsls	r2, r0, #1
   1819a:	bf1f      	itttt	ne
   1819c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   181a0:	ea92 0f03 	teqne	r2, r3
   181a4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   181a8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   181ac:	d06a      	beq.n	18284 <__addsf3+0xec>
   181ae:	ea4f 6212 	mov.w	r2, r2, lsr #24
   181b2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   181b6:	bfc1      	itttt	gt
   181b8:	18d2      	addgt	r2, r2, r3
   181ba:	4041      	eorgt	r1, r0
   181bc:	4048      	eorgt	r0, r1
   181be:	4041      	eorgt	r1, r0
   181c0:	bfb8      	it	lt
   181c2:	425b      	neglt	r3, r3
   181c4:	2b19      	cmp	r3, #25
   181c6:	bf88      	it	hi
   181c8:	4770      	bxhi	lr
   181ca:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   181ce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   181d2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   181d6:	bf18      	it	ne
   181d8:	4240      	negne	r0, r0
   181da:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   181de:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   181e2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   181e6:	bf18      	it	ne
   181e8:	4249      	negne	r1, r1
   181ea:	ea92 0f03 	teq	r2, r3
   181ee:	d03f      	beq.n	18270 <__addsf3+0xd8>
   181f0:	f1a2 0201 	sub.w	r2, r2, #1
   181f4:	fa41 fc03 	asr.w	ip, r1, r3
   181f8:	eb10 000c 	adds.w	r0, r0, ip
   181fc:	f1c3 0320 	rsb	r3, r3, #32
   18200:	fa01 f103 	lsl.w	r1, r1, r3
   18204:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   18208:	d502      	bpl.n	18210 <__addsf3+0x78>
   1820a:	4249      	negs	r1, r1
   1820c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   18210:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   18214:	d313      	bcc.n	1823e <__addsf3+0xa6>
   18216:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1821a:	d306      	bcc.n	1822a <__addsf3+0x92>
   1821c:	0840      	lsrs	r0, r0, #1
   1821e:	ea4f 0131 	mov.w	r1, r1, rrx
   18222:	f102 0201 	add.w	r2, r2, #1
   18226:	2afe      	cmp	r2, #254	; 0xfe
   18228:	d251      	bcs.n	182ce <__addsf3+0x136>
   1822a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1822e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   18232:	bf08      	it	eq
   18234:	f020 0001 	biceq.w	r0, r0, #1
   18238:	ea40 0003 	orr.w	r0, r0, r3
   1823c:	4770      	bx	lr
   1823e:	0049      	lsls	r1, r1, #1
   18240:	eb40 0000 	adc.w	r0, r0, r0
   18244:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   18248:	f1a2 0201 	sub.w	r2, r2, #1
   1824c:	d1ed      	bne.n	1822a <__addsf3+0x92>
   1824e:	fab0 fc80 	clz	ip, r0
   18252:	f1ac 0c08 	sub.w	ip, ip, #8
   18256:	ebb2 020c 	subs.w	r2, r2, ip
   1825a:	fa00 f00c 	lsl.w	r0, r0, ip
   1825e:	bfaa      	itet	ge
   18260:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   18264:	4252      	neglt	r2, r2
   18266:	4318      	orrge	r0, r3
   18268:	bfbc      	itt	lt
   1826a:	40d0      	lsrlt	r0, r2
   1826c:	4318      	orrlt	r0, r3
   1826e:	4770      	bx	lr
   18270:	f092 0f00 	teq	r2, #0
   18274:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   18278:	bf06      	itte	eq
   1827a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1827e:	3201      	addeq	r2, #1
   18280:	3b01      	subne	r3, #1
   18282:	e7b5      	b.n	181f0 <__addsf3+0x58>
   18284:	ea4f 0341 	mov.w	r3, r1, lsl #1
   18288:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1828c:	bf18      	it	ne
   1828e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   18292:	d021      	beq.n	182d8 <__addsf3+0x140>
   18294:	ea92 0f03 	teq	r2, r3
   18298:	d004      	beq.n	182a4 <__addsf3+0x10c>
   1829a:	f092 0f00 	teq	r2, #0
   1829e:	bf08      	it	eq
   182a0:	4608      	moveq	r0, r1
   182a2:	4770      	bx	lr
   182a4:	ea90 0f01 	teq	r0, r1
   182a8:	bf1c      	itt	ne
   182aa:	2000      	movne	r0, #0
   182ac:	4770      	bxne	lr
   182ae:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   182b2:	d104      	bne.n	182be <__addsf3+0x126>
   182b4:	0040      	lsls	r0, r0, #1
   182b6:	bf28      	it	cs
   182b8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   182bc:	4770      	bx	lr
   182be:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   182c2:	bf3c      	itt	cc
   182c4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   182c8:	4770      	bxcc	lr
   182ca:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   182ce:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   182d2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   182d6:	4770      	bx	lr
   182d8:	ea7f 6222 	mvns.w	r2, r2, asr #24
   182dc:	bf16      	itet	ne
   182de:	4608      	movne	r0, r1
   182e0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   182e4:	4601      	movne	r1, r0
   182e6:	0242      	lsls	r2, r0, #9
   182e8:	bf06      	itte	eq
   182ea:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   182ee:	ea90 0f01 	teqeq	r0, r1
   182f2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   182f6:	4770      	bx	lr

000182f8 <__aeabi_ui2f>:
__floatunsisf():
   182f8:	f04f 0300 	mov.w	r3, #0
   182fc:	e004      	b.n	18308 <__aeabi_i2f+0x8>
   182fe:	bf00      	nop

00018300 <__aeabi_i2f>:
__floatsisf():
   18300:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   18304:	bf48      	it	mi
   18306:	4240      	negmi	r0, r0
   18308:	ea5f 0c00 	movs.w	ip, r0
   1830c:	bf08      	it	eq
   1830e:	4770      	bxeq	lr
   18310:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   18314:	4601      	mov	r1, r0
   18316:	f04f 0000 	mov.w	r0, #0
   1831a:	e01c      	b.n	18356 <__aeabi_l2f+0x2a>

0001831c <__aeabi_ul2f>:
__aeabi_ul2f():
   1831c:	ea50 0201 	orrs.w	r2, r0, r1
   18320:	bf08      	it	eq
   18322:	4770      	bxeq	lr
   18324:	f04f 0300 	mov.w	r3, #0
   18328:	e00a      	b.n	18340 <__aeabi_l2f+0x14>
   1832a:	bf00      	nop

0001832c <__aeabi_l2f>:
__aeabi_l2f():
   1832c:	ea50 0201 	orrs.w	r2, r0, r1
   18330:	bf08      	it	eq
   18332:	4770      	bxeq	lr
   18334:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   18338:	d502      	bpl.n	18340 <__aeabi_l2f+0x14>
   1833a:	4240      	negs	r0, r0
   1833c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18340:	ea5f 0c01 	movs.w	ip, r1
   18344:	bf02      	ittt	eq
   18346:	4684      	moveq	ip, r0
   18348:	4601      	moveq	r1, r0
   1834a:	2000      	moveq	r0, #0
   1834c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   18350:	bf08      	it	eq
   18352:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   18356:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1835a:	fabc f28c 	clz	r2, ip
   1835e:	3a08      	subs	r2, #8
   18360:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   18364:	db10      	blt.n	18388 <__aeabi_l2f+0x5c>
   18366:	fa01 fc02 	lsl.w	ip, r1, r2
   1836a:	4463      	add	r3, ip
   1836c:	fa00 fc02 	lsl.w	ip, r0, r2
   18370:	f1c2 0220 	rsb	r2, r2, #32
   18374:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   18378:	fa20 f202 	lsr.w	r2, r0, r2
   1837c:	eb43 0002 	adc.w	r0, r3, r2
   18380:	bf08      	it	eq
   18382:	f020 0001 	biceq.w	r0, r0, #1
   18386:	4770      	bx	lr
   18388:	f102 0220 	add.w	r2, r2, #32
   1838c:	fa01 fc02 	lsl.w	ip, r1, r2
   18390:	f1c2 0220 	rsb	r2, r2, #32
   18394:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   18398:	fa21 f202 	lsr.w	r2, r1, r2
   1839c:	eb43 0002 	adc.w	r0, r3, r2
   183a0:	bf08      	it	eq
   183a2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   183a6:	4770      	bx	lr

000183a8 <__aeabi_fmul>:
__aeabi_fmul():
   183a8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   183ac:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   183b0:	bf1e      	ittt	ne
   183b2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   183b6:	ea92 0f0c 	teqne	r2, ip
   183ba:	ea93 0f0c 	teqne	r3, ip
   183be:	d06f      	beq.n	184a0 <__aeabi_fmul+0xf8>
   183c0:	441a      	add	r2, r3
   183c2:	ea80 0c01 	eor.w	ip, r0, r1
   183c6:	0240      	lsls	r0, r0, #9
   183c8:	bf18      	it	ne
   183ca:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   183ce:	d01e      	beq.n	1840e <__aeabi_fmul+0x66>
   183d0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   183d4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   183d8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   183dc:	fba0 3101 	umull	r3, r1, r0, r1
   183e0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   183e4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   183e8:	bf3e      	ittt	cc
   183ea:	0049      	lslcc	r1, r1, #1
   183ec:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   183f0:	005b      	lslcc	r3, r3, #1
   183f2:	ea40 0001 	orr.w	r0, r0, r1
   183f6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   183fa:	2afd      	cmp	r2, #253	; 0xfd
   183fc:	d81d      	bhi.n	1843a <__aeabi_fmul+0x92>
   183fe:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   18402:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   18406:	bf08      	it	eq
   18408:	f020 0001 	biceq.w	r0, r0, #1
   1840c:	4770      	bx	lr
   1840e:	f090 0f00 	teq	r0, #0
   18412:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   18416:	bf08      	it	eq
   18418:	0249      	lsleq	r1, r1, #9
   1841a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1841e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   18422:	3a7f      	subs	r2, #127	; 0x7f
   18424:	bfc2      	ittt	gt
   18426:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1842a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1842e:	4770      	bxgt	lr
   18430:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18434:	f04f 0300 	mov.w	r3, #0
   18438:	3a01      	subs	r2, #1
   1843a:	dc5d      	bgt.n	184f8 <__aeabi_fmul+0x150>
   1843c:	f112 0f19 	cmn.w	r2, #25
   18440:	bfdc      	itt	le
   18442:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   18446:	4770      	bxle	lr
   18448:	f1c2 0200 	rsb	r2, r2, #0
   1844c:	0041      	lsls	r1, r0, #1
   1844e:	fa21 f102 	lsr.w	r1, r1, r2
   18452:	f1c2 0220 	rsb	r2, r2, #32
   18456:	fa00 fc02 	lsl.w	ip, r0, r2
   1845a:	ea5f 0031 	movs.w	r0, r1, rrx
   1845e:	f140 0000 	adc.w	r0, r0, #0
   18462:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   18466:	bf08      	it	eq
   18468:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1846c:	4770      	bx	lr
   1846e:	f092 0f00 	teq	r2, #0
   18472:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   18476:	bf02      	ittt	eq
   18478:	0040      	lsleq	r0, r0, #1
   1847a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1847e:	3a01      	subeq	r2, #1
   18480:	d0f9      	beq.n	18476 <__aeabi_fmul+0xce>
   18482:	ea40 000c 	orr.w	r0, r0, ip
   18486:	f093 0f00 	teq	r3, #0
   1848a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1848e:	bf02      	ittt	eq
   18490:	0049      	lsleq	r1, r1, #1
   18492:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   18496:	3b01      	subeq	r3, #1
   18498:	d0f9      	beq.n	1848e <__aeabi_fmul+0xe6>
   1849a:	ea41 010c 	orr.w	r1, r1, ip
   1849e:	e78f      	b.n	183c0 <__aeabi_fmul+0x18>
   184a0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   184a4:	ea92 0f0c 	teq	r2, ip
   184a8:	bf18      	it	ne
   184aa:	ea93 0f0c 	teqne	r3, ip
   184ae:	d00a      	beq.n	184c6 <__aeabi_fmul+0x11e>
   184b0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   184b4:	bf18      	it	ne
   184b6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   184ba:	d1d8      	bne.n	1846e <__aeabi_fmul+0xc6>
   184bc:	ea80 0001 	eor.w	r0, r0, r1
   184c0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   184c4:	4770      	bx	lr
   184c6:	f090 0f00 	teq	r0, #0
   184ca:	bf17      	itett	ne
   184cc:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   184d0:	4608      	moveq	r0, r1
   184d2:	f091 0f00 	teqne	r1, #0
   184d6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   184da:	d014      	beq.n	18506 <__aeabi_fmul+0x15e>
   184dc:	ea92 0f0c 	teq	r2, ip
   184e0:	d101      	bne.n	184e6 <__aeabi_fmul+0x13e>
   184e2:	0242      	lsls	r2, r0, #9
   184e4:	d10f      	bne.n	18506 <__aeabi_fmul+0x15e>
   184e6:	ea93 0f0c 	teq	r3, ip
   184ea:	d103      	bne.n	184f4 <__aeabi_fmul+0x14c>
   184ec:	024b      	lsls	r3, r1, #9
   184ee:	bf18      	it	ne
   184f0:	4608      	movne	r0, r1
   184f2:	d108      	bne.n	18506 <__aeabi_fmul+0x15e>
   184f4:	ea80 0001 	eor.w	r0, r0, r1
   184f8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   184fc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   18500:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18504:	4770      	bx	lr
   18506:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1850a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1850e:	4770      	bx	lr

00018510 <__aeabi_fdiv>:
__aeabi_fdiv():
   18510:	f04f 0cff 	mov.w	ip, #255	; 0xff
   18514:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   18518:	bf1e      	ittt	ne
   1851a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1851e:	ea92 0f0c 	teqne	r2, ip
   18522:	ea93 0f0c 	teqne	r3, ip
   18526:	d069      	beq.n	185fc <__aeabi_fdiv+0xec>
   18528:	eba2 0203 	sub.w	r2, r2, r3
   1852c:	ea80 0c01 	eor.w	ip, r0, r1
   18530:	0249      	lsls	r1, r1, #9
   18532:	ea4f 2040 	mov.w	r0, r0, lsl #9
   18536:	d037      	beq.n	185a8 <__aeabi_fdiv+0x98>
   18538:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1853c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   18540:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   18544:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   18548:	428b      	cmp	r3, r1
   1854a:	bf38      	it	cc
   1854c:	005b      	lslcc	r3, r3, #1
   1854e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   18552:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   18556:	428b      	cmp	r3, r1
   18558:	bf24      	itt	cs
   1855a:	1a5b      	subcs	r3, r3, r1
   1855c:	ea40 000c 	orrcs.w	r0, r0, ip
   18560:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   18564:	bf24      	itt	cs
   18566:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1856a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1856e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   18572:	bf24      	itt	cs
   18574:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   18578:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1857c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   18580:	bf24      	itt	cs
   18582:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   18586:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1858a:	011b      	lsls	r3, r3, #4
   1858c:	bf18      	it	ne
   1858e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   18592:	d1e0      	bne.n	18556 <__aeabi_fdiv+0x46>
   18594:	2afd      	cmp	r2, #253	; 0xfd
   18596:	f63f af50 	bhi.w	1843a <__aeabi_fmul+0x92>
   1859a:	428b      	cmp	r3, r1
   1859c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   185a0:	bf08      	it	eq
   185a2:	f020 0001 	biceq.w	r0, r0, #1
   185a6:	4770      	bx	lr
   185a8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   185ac:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   185b0:	327f      	adds	r2, #127	; 0x7f
   185b2:	bfc2      	ittt	gt
   185b4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   185b8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   185bc:	4770      	bxgt	lr
   185be:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   185c2:	f04f 0300 	mov.w	r3, #0
   185c6:	3a01      	subs	r2, #1
   185c8:	e737      	b.n	1843a <__aeabi_fmul+0x92>
   185ca:	f092 0f00 	teq	r2, #0
   185ce:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   185d2:	bf02      	ittt	eq
   185d4:	0040      	lsleq	r0, r0, #1
   185d6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   185da:	3a01      	subeq	r2, #1
   185dc:	d0f9      	beq.n	185d2 <__aeabi_fdiv+0xc2>
   185de:	ea40 000c 	orr.w	r0, r0, ip
   185e2:	f093 0f00 	teq	r3, #0
   185e6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   185ea:	bf02      	ittt	eq
   185ec:	0049      	lsleq	r1, r1, #1
   185ee:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   185f2:	3b01      	subeq	r3, #1
   185f4:	d0f9      	beq.n	185ea <__aeabi_fdiv+0xda>
   185f6:	ea41 010c 	orr.w	r1, r1, ip
   185fa:	e795      	b.n	18528 <__aeabi_fdiv+0x18>
   185fc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   18600:	ea92 0f0c 	teq	r2, ip
   18604:	d108      	bne.n	18618 <__aeabi_fdiv+0x108>
   18606:	0242      	lsls	r2, r0, #9
   18608:	f47f af7d 	bne.w	18506 <__aeabi_fmul+0x15e>
   1860c:	ea93 0f0c 	teq	r3, ip
   18610:	f47f af70 	bne.w	184f4 <__aeabi_fmul+0x14c>
   18614:	4608      	mov	r0, r1
   18616:	e776      	b.n	18506 <__aeabi_fmul+0x15e>
   18618:	ea93 0f0c 	teq	r3, ip
   1861c:	d104      	bne.n	18628 <__aeabi_fdiv+0x118>
   1861e:	024b      	lsls	r3, r1, #9
   18620:	f43f af4c 	beq.w	184bc <__aeabi_fmul+0x114>
   18624:	4608      	mov	r0, r1
   18626:	e76e      	b.n	18506 <__aeabi_fmul+0x15e>
   18628:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1862c:	bf18      	it	ne
   1862e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   18632:	d1ca      	bne.n	185ca <__aeabi_fdiv+0xba>
   18634:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   18638:	f47f af5c 	bne.w	184f4 <__aeabi_fmul+0x14c>
   1863c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   18640:	f47f af3c 	bne.w	184bc <__aeabi_fmul+0x114>
   18644:	e75f      	b.n	18506 <__aeabi_fmul+0x15e>
   18646:	bf00      	nop

00018648 <__aeabi_f2uiz>:
__fixunssfsi():
   18648:	0042      	lsls	r2, r0, #1
   1864a:	d20e      	bcs.n	1866a <__aeabi_f2uiz+0x22>
   1864c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   18650:	d30b      	bcc.n	1866a <__aeabi_f2uiz+0x22>
   18652:	f04f 039e 	mov.w	r3, #158	; 0x9e
   18656:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1865a:	d409      	bmi.n	18670 <__aeabi_f2uiz+0x28>
   1865c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   18660:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   18664:	fa23 f002 	lsr.w	r0, r3, r2
   18668:	4770      	bx	lr
   1866a:	f04f 0000 	mov.w	r0, #0
   1866e:	4770      	bx	lr
   18670:	f112 0f61 	cmn.w	r2, #97	; 0x61
   18674:	d101      	bne.n	1867a <__aeabi_f2uiz+0x32>
   18676:	0242      	lsls	r2, r0, #9
   18678:	d102      	bne.n	18680 <__aeabi_f2uiz+0x38>
   1867a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1867e:	4770      	bx	lr
   18680:	f04f 0000 	mov.w	r0, #0
   18684:	4770      	bx	lr
   18686:	bf00      	nop

00018688 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   18688:	b953      	cbnz	r3, 186a0 <__aeabi_uldivmod+0x18>
   1868a:	b94a      	cbnz	r2, 186a0 <__aeabi_uldivmod+0x18>
   1868c:	2900      	cmp	r1, #0
   1868e:	bf08      	it	eq
   18690:	2800      	cmpeq	r0, #0
   18692:	bf1c      	itt	ne
   18694:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   18698:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1869c:	f000 b97a 	b.w	18994 <__aeabi_idiv0>
   186a0:	f1ad 0c08 	sub.w	ip, sp, #8
   186a4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   186a8:	f000 f806 	bl	186b8 <__udivmoddi4>
   186ac:	f8dd e004 	ldr.w	lr, [sp, #4]
   186b0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   186b4:	b004      	add	sp, #16
   186b6:	4770      	bx	lr

000186b8 <__udivmoddi4>:
__udivmoddi4():
   186b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   186bc:	468c      	mov	ip, r1
   186be:	460e      	mov	r6, r1
   186c0:	4604      	mov	r4, r0
   186c2:	9d08      	ldr	r5, [sp, #32]
   186c4:	2b00      	cmp	r3, #0
   186c6:	d150      	bne.n	1876a <__udivmoddi4+0xb2>
   186c8:	428a      	cmp	r2, r1
   186ca:	4617      	mov	r7, r2
   186cc:	d96c      	bls.n	187a8 <__udivmoddi4+0xf0>
   186ce:	fab2 fe82 	clz	lr, r2
   186d2:	f1be 0f00 	cmp.w	lr, #0
   186d6:	d00b      	beq.n	186f0 <__udivmoddi4+0x38>
   186d8:	f1ce 0c20 	rsb	ip, lr, #32
   186dc:	fa01 f60e 	lsl.w	r6, r1, lr
   186e0:	fa20 fc0c 	lsr.w	ip, r0, ip
   186e4:	fa02 f70e 	lsl.w	r7, r2, lr
   186e8:	ea4c 0c06 	orr.w	ip, ip, r6
   186ec:	fa00 f40e 	lsl.w	r4, r0, lr
   186f0:	0c3a      	lsrs	r2, r7, #16
   186f2:	fbbc f9f2 	udiv	r9, ip, r2
   186f6:	b2bb      	uxth	r3, r7
   186f8:	fb02 cc19 	mls	ip, r2, r9, ip
   186fc:	fb09 fa03 	mul.w	sl, r9, r3
   18700:	ea4f 4814 	mov.w	r8, r4, lsr #16
   18704:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   18708:	45b2      	cmp	sl, r6
   1870a:	d90a      	bls.n	18722 <__udivmoddi4+0x6a>
   1870c:	19f6      	adds	r6, r6, r7
   1870e:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   18712:	f080 8125 	bcs.w	18960 <__udivmoddi4+0x2a8>
   18716:	45b2      	cmp	sl, r6
   18718:	f240 8122 	bls.w	18960 <__udivmoddi4+0x2a8>
   1871c:	f1a9 0902 	sub.w	r9, r9, #2
   18720:	443e      	add	r6, r7
   18722:	eba6 060a 	sub.w	r6, r6, sl
   18726:	fbb6 f0f2 	udiv	r0, r6, r2
   1872a:	fb02 6610 	mls	r6, r2, r0, r6
   1872e:	fb00 f303 	mul.w	r3, r0, r3
   18732:	b2a4      	uxth	r4, r4
   18734:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   18738:	42a3      	cmp	r3, r4
   1873a:	d909      	bls.n	18750 <__udivmoddi4+0x98>
   1873c:	19e4      	adds	r4, r4, r7
   1873e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   18742:	f080 810b 	bcs.w	1895c <__udivmoddi4+0x2a4>
   18746:	42a3      	cmp	r3, r4
   18748:	f240 8108 	bls.w	1895c <__udivmoddi4+0x2a4>
   1874c:	3802      	subs	r0, #2
   1874e:	443c      	add	r4, r7
   18750:	2100      	movs	r1, #0
   18752:	1ae4      	subs	r4, r4, r3
   18754:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   18758:	2d00      	cmp	r5, #0
   1875a:	d062      	beq.n	18822 <__udivmoddi4+0x16a>
   1875c:	2300      	movs	r3, #0
   1875e:	fa24 f40e 	lsr.w	r4, r4, lr
   18762:	602c      	str	r4, [r5, #0]
   18764:	606b      	str	r3, [r5, #4]
   18766:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1876a:	428b      	cmp	r3, r1
   1876c:	d907      	bls.n	1877e <__udivmoddi4+0xc6>
   1876e:	2d00      	cmp	r5, #0
   18770:	d055      	beq.n	1881e <__udivmoddi4+0x166>
   18772:	2100      	movs	r1, #0
   18774:	e885 0041 	stmia.w	r5, {r0, r6}
   18778:	4608      	mov	r0, r1
   1877a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1877e:	fab3 f183 	clz	r1, r3
   18782:	2900      	cmp	r1, #0
   18784:	f040 808f 	bne.w	188a6 <__udivmoddi4+0x1ee>
   18788:	42b3      	cmp	r3, r6
   1878a:	d302      	bcc.n	18792 <__udivmoddi4+0xda>
   1878c:	4282      	cmp	r2, r0
   1878e:	f200 80fc 	bhi.w	1898a <__udivmoddi4+0x2d2>
   18792:	1a84      	subs	r4, r0, r2
   18794:	eb66 0603 	sbc.w	r6, r6, r3
   18798:	2001      	movs	r0, #1
   1879a:	46b4      	mov	ip, r6
   1879c:	2d00      	cmp	r5, #0
   1879e:	d040      	beq.n	18822 <__udivmoddi4+0x16a>
   187a0:	e885 1010 	stmia.w	r5, {r4, ip}
   187a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   187a8:	b912      	cbnz	r2, 187b0 <__udivmoddi4+0xf8>
   187aa:	2701      	movs	r7, #1
   187ac:	fbb7 f7f2 	udiv	r7, r7, r2
   187b0:	fab7 fe87 	clz	lr, r7
   187b4:	f1be 0f00 	cmp.w	lr, #0
   187b8:	d135      	bne.n	18826 <__udivmoddi4+0x16e>
   187ba:	2101      	movs	r1, #1
   187bc:	1bf6      	subs	r6, r6, r7
   187be:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   187c2:	fa1f f887 	uxth.w	r8, r7
   187c6:	fbb6 f2fc 	udiv	r2, r6, ip
   187ca:	fb0c 6612 	mls	r6, ip, r2, r6
   187ce:	fb08 f002 	mul.w	r0, r8, r2
   187d2:	0c23      	lsrs	r3, r4, #16
   187d4:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   187d8:	42b0      	cmp	r0, r6
   187da:	d907      	bls.n	187ec <__udivmoddi4+0x134>
   187dc:	19f6      	adds	r6, r6, r7
   187de:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   187e2:	d202      	bcs.n	187ea <__udivmoddi4+0x132>
   187e4:	42b0      	cmp	r0, r6
   187e6:	f200 80d2 	bhi.w	1898e <__udivmoddi4+0x2d6>
   187ea:	461a      	mov	r2, r3
   187ec:	1a36      	subs	r6, r6, r0
   187ee:	fbb6 f0fc 	udiv	r0, r6, ip
   187f2:	fb0c 6610 	mls	r6, ip, r0, r6
   187f6:	fb08 f800 	mul.w	r8, r8, r0
   187fa:	b2a3      	uxth	r3, r4
   187fc:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   18800:	45a0      	cmp	r8, r4
   18802:	d907      	bls.n	18814 <__udivmoddi4+0x15c>
   18804:	19e4      	adds	r4, r4, r7
   18806:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1880a:	d202      	bcs.n	18812 <__udivmoddi4+0x15a>
   1880c:	45a0      	cmp	r8, r4
   1880e:	f200 80b9 	bhi.w	18984 <__udivmoddi4+0x2cc>
   18812:	4618      	mov	r0, r3
   18814:	eba4 0408 	sub.w	r4, r4, r8
   18818:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   1881c:	e79c      	b.n	18758 <__udivmoddi4+0xa0>
   1881e:	4629      	mov	r1, r5
   18820:	4628      	mov	r0, r5
   18822:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18826:	fa07 f70e 	lsl.w	r7, r7, lr
   1882a:	f1ce 0320 	rsb	r3, lr, #32
   1882e:	fa26 f203 	lsr.w	r2, r6, r3
   18832:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   18836:	fbb2 f1fc 	udiv	r1, r2, ip
   1883a:	fa1f f887 	uxth.w	r8, r7
   1883e:	fb0c 2211 	mls	r2, ip, r1, r2
   18842:	fa06 f60e 	lsl.w	r6, r6, lr
   18846:	fa20 f303 	lsr.w	r3, r0, r3
   1884a:	fb01 f908 	mul.w	r9, r1, r8
   1884e:	4333      	orrs	r3, r6
   18850:	0c1e      	lsrs	r6, r3, #16
   18852:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   18856:	45b1      	cmp	r9, r6
   18858:	fa00 f40e 	lsl.w	r4, r0, lr
   1885c:	d909      	bls.n	18872 <__udivmoddi4+0x1ba>
   1885e:	19f6      	adds	r6, r6, r7
   18860:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   18864:	f080 808c 	bcs.w	18980 <__udivmoddi4+0x2c8>
   18868:	45b1      	cmp	r9, r6
   1886a:	f240 8089 	bls.w	18980 <__udivmoddi4+0x2c8>
   1886e:	3902      	subs	r1, #2
   18870:	443e      	add	r6, r7
   18872:	eba6 0609 	sub.w	r6, r6, r9
   18876:	fbb6 f0fc 	udiv	r0, r6, ip
   1887a:	fb0c 6210 	mls	r2, ip, r0, r6
   1887e:	fb00 f908 	mul.w	r9, r0, r8
   18882:	b29e      	uxth	r6, r3
   18884:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   18888:	45b1      	cmp	r9, r6
   1888a:	d907      	bls.n	1889c <__udivmoddi4+0x1e4>
   1888c:	19f6      	adds	r6, r6, r7
   1888e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   18892:	d271      	bcs.n	18978 <__udivmoddi4+0x2c0>
   18894:	45b1      	cmp	r9, r6
   18896:	d96f      	bls.n	18978 <__udivmoddi4+0x2c0>
   18898:	3802      	subs	r0, #2
   1889a:	443e      	add	r6, r7
   1889c:	eba6 0609 	sub.w	r6, r6, r9
   188a0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   188a4:	e78f      	b.n	187c6 <__udivmoddi4+0x10e>
   188a6:	f1c1 0720 	rsb	r7, r1, #32
   188aa:	fa22 f807 	lsr.w	r8, r2, r7
   188ae:	408b      	lsls	r3, r1
   188b0:	ea48 0303 	orr.w	r3, r8, r3
   188b4:	fa26 f407 	lsr.w	r4, r6, r7
   188b8:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   188bc:	fbb4 f9fe 	udiv	r9, r4, lr
   188c0:	fa1f fc83 	uxth.w	ip, r3
   188c4:	fb0e 4419 	mls	r4, lr, r9, r4
   188c8:	408e      	lsls	r6, r1
   188ca:	fa20 f807 	lsr.w	r8, r0, r7
   188ce:	fb09 fa0c 	mul.w	sl, r9, ip
   188d2:	ea48 0806 	orr.w	r8, r8, r6
   188d6:	ea4f 4618 	mov.w	r6, r8, lsr #16
   188da:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   188de:	45a2      	cmp	sl, r4
   188e0:	fa02 f201 	lsl.w	r2, r2, r1
   188e4:	fa00 f601 	lsl.w	r6, r0, r1
   188e8:	d908      	bls.n	188fc <__udivmoddi4+0x244>
   188ea:	18e4      	adds	r4, r4, r3
   188ec:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   188f0:	d244      	bcs.n	1897c <__udivmoddi4+0x2c4>
   188f2:	45a2      	cmp	sl, r4
   188f4:	d942      	bls.n	1897c <__udivmoddi4+0x2c4>
   188f6:	f1a9 0902 	sub.w	r9, r9, #2
   188fa:	441c      	add	r4, r3
   188fc:	eba4 040a 	sub.w	r4, r4, sl
   18900:	fbb4 f0fe 	udiv	r0, r4, lr
   18904:	fb0e 4410 	mls	r4, lr, r0, r4
   18908:	fb00 fc0c 	mul.w	ip, r0, ip
   1890c:	fa1f f888 	uxth.w	r8, r8
   18910:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   18914:	45a4      	cmp	ip, r4
   18916:	d907      	bls.n	18928 <__udivmoddi4+0x270>
   18918:	18e4      	adds	r4, r4, r3
   1891a:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1891e:	d229      	bcs.n	18974 <__udivmoddi4+0x2bc>
   18920:	45a4      	cmp	ip, r4
   18922:	d927      	bls.n	18974 <__udivmoddi4+0x2bc>
   18924:	3802      	subs	r0, #2
   18926:	441c      	add	r4, r3
   18928:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1892c:	fba0 8902 	umull	r8, r9, r0, r2
   18930:	eba4 0c0c 	sub.w	ip, r4, ip
   18934:	45cc      	cmp	ip, r9
   18936:	46c2      	mov	sl, r8
   18938:	46ce      	mov	lr, r9
   1893a:	d315      	bcc.n	18968 <__udivmoddi4+0x2b0>
   1893c:	d012      	beq.n	18964 <__udivmoddi4+0x2ac>
   1893e:	b155      	cbz	r5, 18956 <__udivmoddi4+0x29e>
   18940:	ebb6 030a 	subs.w	r3, r6, sl
   18944:	eb6c 060e 	sbc.w	r6, ip, lr
   18948:	fa06 f707 	lsl.w	r7, r6, r7
   1894c:	40cb      	lsrs	r3, r1
   1894e:	431f      	orrs	r7, r3
   18950:	40ce      	lsrs	r6, r1
   18952:	602f      	str	r7, [r5, #0]
   18954:	606e      	str	r6, [r5, #4]
   18956:	2100      	movs	r1, #0
   18958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1895c:	4610      	mov	r0, r2
   1895e:	e6f7      	b.n	18750 <__udivmoddi4+0x98>
   18960:	4689      	mov	r9, r1
   18962:	e6de      	b.n	18722 <__udivmoddi4+0x6a>
   18964:	4546      	cmp	r6, r8
   18966:	d2ea      	bcs.n	1893e <__udivmoddi4+0x286>
   18968:	ebb8 0a02 	subs.w	sl, r8, r2
   1896c:	eb69 0e03 	sbc.w	lr, r9, r3
   18970:	3801      	subs	r0, #1
   18972:	e7e4      	b.n	1893e <__udivmoddi4+0x286>
   18974:	4670      	mov	r0, lr
   18976:	e7d7      	b.n	18928 <__udivmoddi4+0x270>
   18978:	4618      	mov	r0, r3
   1897a:	e78f      	b.n	1889c <__udivmoddi4+0x1e4>
   1897c:	4681      	mov	r9, r0
   1897e:	e7bd      	b.n	188fc <__udivmoddi4+0x244>
   18980:	4611      	mov	r1, r2
   18982:	e776      	b.n	18872 <__udivmoddi4+0x1ba>
   18984:	3802      	subs	r0, #2
   18986:	443c      	add	r4, r7
   18988:	e744      	b.n	18814 <__udivmoddi4+0x15c>
   1898a:	4608      	mov	r0, r1
   1898c:	e706      	b.n	1879c <__udivmoddi4+0xe4>
   1898e:	3a02      	subs	r2, #2
   18990:	443e      	add	r6, r7
   18992:	e72b      	b.n	187ec <__udivmoddi4+0x134>

00018994 <__aeabi_idiv0>:
__aeabi_idiv0():
   18994:	4770      	bx	lr
   18996:	bf00      	nop

00018998 <abort>:
abort():
   18998:	b508      	push	{r3, lr}
   1899a:	2006      	movs	r0, #6
   1899c:	f001 fec6 	bl	1a72c <raise>
   189a0:	2001      	movs	r0, #1
   189a2:	f7fc f9dd 	bl	14d60 <_exit>

000189a6 <atoi>:
atoi():
   189a6:	220a      	movs	r2, #10
   189a8:	2100      	movs	r1, #0
   189aa:	f002 be6b 	b.w	1b684 <strtol>
   189ae:	Address 0x00000000000189ae is out of bounds.


000189b0 <__errno>:
__errno():
   189b0:	4b01      	ldr	r3, [pc, #4]	; (189b8 <__errno+0x8>)
   189b2:	6818      	ldr	r0, [r3, #0]
   189b4:	4770      	bx	lr
   189b6:	bf00      	nop
   189b8:	2007c0e0 	.word	0x2007c0e0

000189bc <__sflush_r>:
__sflush_r():
   189bc:	898a      	ldrh	r2, [r1, #12]
   189be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   189c2:	4605      	mov	r5, r0
   189c4:	0710      	lsls	r0, r2, #28
   189c6:	460c      	mov	r4, r1
   189c8:	d45a      	bmi.n	18a80 <__sflush_r+0xc4>
   189ca:	684b      	ldr	r3, [r1, #4]
   189cc:	2b00      	cmp	r3, #0
   189ce:	dc05      	bgt.n	189dc <__sflush_r+0x20>
   189d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   189d2:	2b00      	cmp	r3, #0
   189d4:	dc02      	bgt.n	189dc <__sflush_r+0x20>
   189d6:	2000      	movs	r0, #0
   189d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   189dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   189de:	2e00      	cmp	r6, #0
   189e0:	d0f9      	beq.n	189d6 <__sflush_r+0x1a>
   189e2:	2300      	movs	r3, #0
   189e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   189e8:	682f      	ldr	r7, [r5, #0]
   189ea:	602b      	str	r3, [r5, #0]
   189ec:	d033      	beq.n	18a56 <__sflush_r+0x9a>
   189ee:	6d60      	ldr	r0, [r4, #84]	; 0x54
   189f0:	89a3      	ldrh	r3, [r4, #12]
   189f2:	075a      	lsls	r2, r3, #29
   189f4:	d505      	bpl.n	18a02 <__sflush_r+0x46>
   189f6:	6863      	ldr	r3, [r4, #4]
   189f8:	1ac0      	subs	r0, r0, r3
   189fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
   189fc:	b10b      	cbz	r3, 18a02 <__sflush_r+0x46>
   189fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
   18a00:	1ac0      	subs	r0, r0, r3
   18a02:	2300      	movs	r3, #0
   18a04:	4602      	mov	r2, r0
   18a06:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   18a08:	6a21      	ldr	r1, [r4, #32]
   18a0a:	4628      	mov	r0, r5
   18a0c:	47b0      	blx	r6
   18a0e:	1c43      	adds	r3, r0, #1
   18a10:	89a3      	ldrh	r3, [r4, #12]
   18a12:	d106      	bne.n	18a22 <__sflush_r+0x66>
   18a14:	6829      	ldr	r1, [r5, #0]
   18a16:	291d      	cmp	r1, #29
   18a18:	d84b      	bhi.n	18ab2 <__sflush_r+0xf6>
   18a1a:	4a2b      	ldr	r2, [pc, #172]	; (18ac8 <__sflush_r+0x10c>)
   18a1c:	40ca      	lsrs	r2, r1
   18a1e:	07d6      	lsls	r6, r2, #31
   18a20:	d547      	bpl.n	18ab2 <__sflush_r+0xf6>
   18a22:	2200      	movs	r2, #0
   18a24:	6062      	str	r2, [r4, #4]
   18a26:	6922      	ldr	r2, [r4, #16]
   18a28:	04d9      	lsls	r1, r3, #19
   18a2a:	6022      	str	r2, [r4, #0]
   18a2c:	d504      	bpl.n	18a38 <__sflush_r+0x7c>
   18a2e:	1c42      	adds	r2, r0, #1
   18a30:	d101      	bne.n	18a36 <__sflush_r+0x7a>
   18a32:	682b      	ldr	r3, [r5, #0]
   18a34:	b903      	cbnz	r3, 18a38 <__sflush_r+0x7c>
   18a36:	6560      	str	r0, [r4, #84]	; 0x54
   18a38:	6b61      	ldr	r1, [r4, #52]	; 0x34
   18a3a:	602f      	str	r7, [r5, #0]
   18a3c:	2900      	cmp	r1, #0
   18a3e:	d0ca      	beq.n	189d6 <__sflush_r+0x1a>
   18a40:	f104 0344 	add.w	r3, r4, #68	; 0x44
   18a44:	4299      	cmp	r1, r3
   18a46:	d002      	beq.n	18a4e <__sflush_r+0x92>
   18a48:	4628      	mov	r0, r5
   18a4a:	f000 fcdb 	bl	19404 <_free_r>
   18a4e:	2000      	movs	r0, #0
   18a50:	6360      	str	r0, [r4, #52]	; 0x34
   18a52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18a56:	6a21      	ldr	r1, [r4, #32]
   18a58:	2301      	movs	r3, #1
   18a5a:	4628      	mov	r0, r5
   18a5c:	47b0      	blx	r6
   18a5e:	1c41      	adds	r1, r0, #1
   18a60:	d1c6      	bne.n	189f0 <__sflush_r+0x34>
   18a62:	682b      	ldr	r3, [r5, #0]
   18a64:	2b00      	cmp	r3, #0
   18a66:	d0c3      	beq.n	189f0 <__sflush_r+0x34>
   18a68:	2b1d      	cmp	r3, #29
   18a6a:	d001      	beq.n	18a70 <__sflush_r+0xb4>
   18a6c:	2b16      	cmp	r3, #22
   18a6e:	d101      	bne.n	18a74 <__sflush_r+0xb8>
   18a70:	602f      	str	r7, [r5, #0]
   18a72:	e7b0      	b.n	189d6 <__sflush_r+0x1a>
   18a74:	89a3      	ldrh	r3, [r4, #12]
   18a76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18a7a:	81a3      	strh	r3, [r4, #12]
   18a7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18a80:	690f      	ldr	r7, [r1, #16]
   18a82:	2f00      	cmp	r7, #0
   18a84:	d0a7      	beq.n	189d6 <__sflush_r+0x1a>
   18a86:	0793      	lsls	r3, r2, #30
   18a88:	bf18      	it	ne
   18a8a:	2300      	movne	r3, #0
   18a8c:	680e      	ldr	r6, [r1, #0]
   18a8e:	bf08      	it	eq
   18a90:	694b      	ldreq	r3, [r1, #20]
   18a92:	eba6 0807 	sub.w	r8, r6, r7
   18a96:	600f      	str	r7, [r1, #0]
   18a98:	608b      	str	r3, [r1, #8]
   18a9a:	f1b8 0f00 	cmp.w	r8, #0
   18a9e:	dd9a      	ble.n	189d6 <__sflush_r+0x1a>
   18aa0:	4643      	mov	r3, r8
   18aa2:	463a      	mov	r2, r7
   18aa4:	6a21      	ldr	r1, [r4, #32]
   18aa6:	4628      	mov	r0, r5
   18aa8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   18aaa:	47b0      	blx	r6
   18aac:	2800      	cmp	r0, #0
   18aae:	dc07      	bgt.n	18ac0 <__sflush_r+0x104>
   18ab0:	89a3      	ldrh	r3, [r4, #12]
   18ab2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18ab6:	81a3      	strh	r3, [r4, #12]
   18ab8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18abc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18ac0:	4407      	add	r7, r0
   18ac2:	eba8 0800 	sub.w	r8, r8, r0
   18ac6:	e7e8      	b.n	18a9a <__sflush_r+0xde>
   18ac8:	20400001 	.word	0x20400001

00018acc <_fflush_r>:
_fflush_r():
   18acc:	b538      	push	{r3, r4, r5, lr}
   18ace:	690b      	ldr	r3, [r1, #16]
   18ad0:	4605      	mov	r5, r0
   18ad2:	460c      	mov	r4, r1
   18ad4:	b1db      	cbz	r3, 18b0e <_fflush_r+0x42>
   18ad6:	b118      	cbz	r0, 18ae0 <_fflush_r+0x14>
   18ad8:	6983      	ldr	r3, [r0, #24]
   18ada:	b90b      	cbnz	r3, 18ae0 <_fflush_r+0x14>
   18adc:	f000 f872 	bl	18bc4 <__sinit>
   18ae0:	4b0c      	ldr	r3, [pc, #48]	; (18b14 <_fflush_r+0x48>)
   18ae2:	429c      	cmp	r4, r3
   18ae4:	d109      	bne.n	18afa <_fflush_r+0x2e>
   18ae6:	686c      	ldr	r4, [r5, #4]
   18ae8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   18aec:	b17b      	cbz	r3, 18b0e <_fflush_r+0x42>
   18aee:	4621      	mov	r1, r4
   18af0:	4628      	mov	r0, r5
   18af2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   18af6:	f7ff bf61 	b.w	189bc <__sflush_r>
   18afa:	4b07      	ldr	r3, [pc, #28]	; (18b18 <_fflush_r+0x4c>)
   18afc:	429c      	cmp	r4, r3
   18afe:	d101      	bne.n	18b04 <_fflush_r+0x38>
   18b00:	68ac      	ldr	r4, [r5, #8]
   18b02:	e7f1      	b.n	18ae8 <_fflush_r+0x1c>
   18b04:	4b05      	ldr	r3, [pc, #20]	; (18b1c <_fflush_r+0x50>)
   18b06:	429c      	cmp	r4, r3
   18b08:	bf08      	it	eq
   18b0a:	68ec      	ldreq	r4, [r5, #12]
   18b0c:	e7ec      	b.n	18ae8 <_fflush_r+0x1c>
   18b0e:	2000      	movs	r0, #0
   18b10:	bd38      	pop	{r3, r4, r5, pc}
   18b12:	bf00      	nop
   18b14:	0002024c 	.word	0x0002024c
   18b18:	0002026c 	.word	0x0002026c
   18b1c:	0002022c 	.word	0x0002022c

00018b20 <fflush>:
fflush():
   18b20:	4601      	mov	r1, r0
   18b22:	b920      	cbnz	r0, 18b2e <fflush+0xe>
   18b24:	4b04      	ldr	r3, [pc, #16]	; (18b38 <fflush+0x18>)
   18b26:	4905      	ldr	r1, [pc, #20]	; (18b3c <fflush+0x1c>)
   18b28:	6818      	ldr	r0, [r3, #0]
   18b2a:	f000 b8d3 	b.w	18cd4 <_fwalk_reent>
   18b2e:	4b04      	ldr	r3, [pc, #16]	; (18b40 <fflush+0x20>)
   18b30:	6818      	ldr	r0, [r3, #0]
   18b32:	f7ff bfcb 	b.w	18acc <_fflush_r>
   18b36:	bf00      	nop
   18b38:	0002028c 	.word	0x0002028c
   18b3c:	00018acd 	.word	0x00018acd
   18b40:	2007c0e0 	.word	0x2007c0e0

00018b44 <_cleanup_r>:
_cleanup_r():
   18b44:	4901      	ldr	r1, [pc, #4]	; (18b4c <_cleanup_r+0x8>)
   18b46:	f000 b8c5 	b.w	18cd4 <_fwalk_reent>
   18b4a:	bf00      	nop
   18b4c:	00018acd 	.word	0x00018acd

00018b50 <std.isra.0>:
std.isra.0():
   18b50:	2300      	movs	r3, #0
   18b52:	b510      	push	{r4, lr}
   18b54:	4604      	mov	r4, r0
   18b56:	6003      	str	r3, [r0, #0]
   18b58:	6043      	str	r3, [r0, #4]
   18b5a:	6083      	str	r3, [r0, #8]
   18b5c:	8181      	strh	r1, [r0, #12]
   18b5e:	6643      	str	r3, [r0, #100]	; 0x64
   18b60:	81c2      	strh	r2, [r0, #14]
   18b62:	6103      	str	r3, [r0, #16]
   18b64:	6143      	str	r3, [r0, #20]
   18b66:	6183      	str	r3, [r0, #24]
   18b68:	4619      	mov	r1, r3
   18b6a:	2208      	movs	r2, #8
   18b6c:	305c      	adds	r0, #92	; 0x5c
   18b6e:	f000 f9cd 	bl	18f0c <memset>
   18b72:	4b05      	ldr	r3, [pc, #20]	; (18b88 <std.isra.0+0x38>)
   18b74:	6224      	str	r4, [r4, #32]
   18b76:	6263      	str	r3, [r4, #36]	; 0x24
   18b78:	4b04      	ldr	r3, [pc, #16]	; (18b8c <std.isra.0+0x3c>)
   18b7a:	62a3      	str	r3, [r4, #40]	; 0x28
   18b7c:	4b04      	ldr	r3, [pc, #16]	; (18b90 <std.isra.0+0x40>)
   18b7e:	62e3      	str	r3, [r4, #44]	; 0x2c
   18b80:	4b04      	ldr	r3, [pc, #16]	; (18b94 <std.isra.0+0x44>)
   18b82:	6323      	str	r3, [r4, #48]	; 0x30
   18b84:	bd10      	pop	{r4, pc}
   18b86:	bf00      	nop
   18b88:	0001a801 	.word	0x0001a801
   18b8c:	0001a827 	.word	0x0001a827
   18b90:	0001a85f 	.word	0x0001a85f
   18b94:	0001a883 	.word	0x0001a883

00018b98 <__sfmoreglue>:
__sfmoreglue():
   18b98:	b570      	push	{r4, r5, r6, lr}
   18b9a:	2568      	movs	r5, #104	; 0x68
   18b9c:	1e4a      	subs	r2, r1, #1
   18b9e:	4355      	muls	r5, r2
   18ba0:	460e      	mov	r6, r1
   18ba2:	f105 0174 	add.w	r1, r5, #116	; 0x74
   18ba6:	f000 fcab 	bl	19500 <_malloc_r>
   18baa:	4604      	mov	r4, r0
   18bac:	b140      	cbz	r0, 18bc0 <__sfmoreglue+0x28>
   18bae:	2100      	movs	r1, #0
   18bb0:	e880 0042 	stmia.w	r0, {r1, r6}
   18bb4:	300c      	adds	r0, #12
   18bb6:	60a0      	str	r0, [r4, #8]
   18bb8:	f105 0268 	add.w	r2, r5, #104	; 0x68
   18bbc:	f000 f9a6 	bl	18f0c <memset>
   18bc0:	4620      	mov	r0, r4
   18bc2:	bd70      	pop	{r4, r5, r6, pc}

00018bc4 <__sinit>:
__sinit():
   18bc4:	6983      	ldr	r3, [r0, #24]
   18bc6:	b510      	push	{r4, lr}
   18bc8:	4604      	mov	r4, r0
   18bca:	bb33      	cbnz	r3, 18c1a <__sinit+0x56>
   18bcc:	6483      	str	r3, [r0, #72]	; 0x48
   18bce:	64c3      	str	r3, [r0, #76]	; 0x4c
   18bd0:	6503      	str	r3, [r0, #80]	; 0x50
   18bd2:	4b12      	ldr	r3, [pc, #72]	; (18c1c <__sinit+0x58>)
   18bd4:	4a12      	ldr	r2, [pc, #72]	; (18c20 <__sinit+0x5c>)
   18bd6:	681b      	ldr	r3, [r3, #0]
   18bd8:	6282      	str	r2, [r0, #40]	; 0x28
   18bda:	4298      	cmp	r0, r3
   18bdc:	bf04      	itt	eq
   18bde:	2301      	moveq	r3, #1
   18be0:	6183      	streq	r3, [r0, #24]
   18be2:	f000 f81f 	bl	18c24 <__sfp>
   18be6:	6060      	str	r0, [r4, #4]
   18be8:	4620      	mov	r0, r4
   18bea:	f000 f81b 	bl	18c24 <__sfp>
   18bee:	60a0      	str	r0, [r4, #8]
   18bf0:	4620      	mov	r0, r4
   18bf2:	f000 f817 	bl	18c24 <__sfp>
   18bf6:	2200      	movs	r2, #0
   18bf8:	60e0      	str	r0, [r4, #12]
   18bfa:	2104      	movs	r1, #4
   18bfc:	6860      	ldr	r0, [r4, #4]
   18bfe:	f7ff ffa7 	bl	18b50 <std.isra.0>
   18c02:	2201      	movs	r2, #1
   18c04:	2109      	movs	r1, #9
   18c06:	68a0      	ldr	r0, [r4, #8]
   18c08:	f7ff ffa2 	bl	18b50 <std.isra.0>
   18c0c:	2202      	movs	r2, #2
   18c0e:	2112      	movs	r1, #18
   18c10:	68e0      	ldr	r0, [r4, #12]
   18c12:	f7ff ff9d 	bl	18b50 <std.isra.0>
   18c16:	2301      	movs	r3, #1
   18c18:	61a3      	str	r3, [r4, #24]
   18c1a:	bd10      	pop	{r4, pc}
   18c1c:	0002028c 	.word	0x0002028c
   18c20:	00018b45 	.word	0x00018b45

00018c24 <__sfp>:
__sfp():
   18c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18c26:	4b1c      	ldr	r3, [pc, #112]	; (18c98 <__sfp+0x74>)
   18c28:	4607      	mov	r7, r0
   18c2a:	681e      	ldr	r6, [r3, #0]
   18c2c:	69b3      	ldr	r3, [r6, #24]
   18c2e:	b913      	cbnz	r3, 18c36 <__sfp+0x12>
   18c30:	4630      	mov	r0, r6
   18c32:	f7ff ffc7 	bl	18bc4 <__sinit>
   18c36:	3648      	adds	r6, #72	; 0x48
   18c38:	68b4      	ldr	r4, [r6, #8]
   18c3a:	6873      	ldr	r3, [r6, #4]
   18c3c:	3b01      	subs	r3, #1
   18c3e:	d503      	bpl.n	18c48 <__sfp+0x24>
   18c40:	6833      	ldr	r3, [r6, #0]
   18c42:	b133      	cbz	r3, 18c52 <__sfp+0x2e>
   18c44:	6836      	ldr	r6, [r6, #0]
   18c46:	e7f7      	b.n	18c38 <__sfp+0x14>
   18c48:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   18c4c:	b16d      	cbz	r5, 18c6a <__sfp+0x46>
   18c4e:	3468      	adds	r4, #104	; 0x68
   18c50:	e7f4      	b.n	18c3c <__sfp+0x18>
   18c52:	2104      	movs	r1, #4
   18c54:	4638      	mov	r0, r7
   18c56:	f7ff ff9f 	bl	18b98 <__sfmoreglue>
   18c5a:	6030      	str	r0, [r6, #0]
   18c5c:	2800      	cmp	r0, #0
   18c5e:	d1f1      	bne.n	18c44 <__sfp+0x20>
   18c60:	230c      	movs	r3, #12
   18c62:	4604      	mov	r4, r0
   18c64:	603b      	str	r3, [r7, #0]
   18c66:	4620      	mov	r0, r4
   18c68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18c6a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   18c6e:	81e3      	strh	r3, [r4, #14]
   18c70:	2301      	movs	r3, #1
   18c72:	6665      	str	r5, [r4, #100]	; 0x64
   18c74:	81a3      	strh	r3, [r4, #12]
   18c76:	6025      	str	r5, [r4, #0]
   18c78:	60a5      	str	r5, [r4, #8]
   18c7a:	6065      	str	r5, [r4, #4]
   18c7c:	6125      	str	r5, [r4, #16]
   18c7e:	6165      	str	r5, [r4, #20]
   18c80:	61a5      	str	r5, [r4, #24]
   18c82:	2208      	movs	r2, #8
   18c84:	4629      	mov	r1, r5
   18c86:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   18c8a:	f000 f93f 	bl	18f0c <memset>
   18c8e:	6365      	str	r5, [r4, #52]	; 0x34
   18c90:	63a5      	str	r5, [r4, #56]	; 0x38
   18c92:	64a5      	str	r5, [r4, #72]	; 0x48
   18c94:	64e5      	str	r5, [r4, #76]	; 0x4c
   18c96:	e7e6      	b.n	18c66 <__sfp+0x42>
   18c98:	0002028c 	.word	0x0002028c

00018c9c <_fwalk>:
_fwalk():
   18c9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18ca0:	4688      	mov	r8, r1
   18ca2:	2600      	movs	r6, #0
   18ca4:	f100 0448 	add.w	r4, r0, #72	; 0x48
   18ca8:	b914      	cbnz	r4, 18cb0 <_fwalk+0x14>
   18caa:	4630      	mov	r0, r6
   18cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18cb0:	68a5      	ldr	r5, [r4, #8]
   18cb2:	6867      	ldr	r7, [r4, #4]
   18cb4:	3f01      	subs	r7, #1
   18cb6:	d501      	bpl.n	18cbc <_fwalk+0x20>
   18cb8:	6824      	ldr	r4, [r4, #0]
   18cba:	e7f5      	b.n	18ca8 <_fwalk+0xc>
   18cbc:	89ab      	ldrh	r3, [r5, #12]
   18cbe:	2b01      	cmp	r3, #1
   18cc0:	d906      	bls.n	18cd0 <_fwalk+0x34>
   18cc2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   18cc6:	3301      	adds	r3, #1
   18cc8:	d002      	beq.n	18cd0 <_fwalk+0x34>
   18cca:	4628      	mov	r0, r5
   18ccc:	47c0      	blx	r8
   18cce:	4306      	orrs	r6, r0
   18cd0:	3568      	adds	r5, #104	; 0x68
   18cd2:	e7ef      	b.n	18cb4 <_fwalk+0x18>

00018cd4 <_fwalk_reent>:
_fwalk_reent():
   18cd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   18cd8:	4680      	mov	r8, r0
   18cda:	4689      	mov	r9, r1
   18cdc:	2600      	movs	r6, #0
   18cde:	f100 0448 	add.w	r4, r0, #72	; 0x48
   18ce2:	b914      	cbnz	r4, 18cea <_fwalk_reent+0x16>
   18ce4:	4630      	mov	r0, r6
   18ce6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   18cea:	68a5      	ldr	r5, [r4, #8]
   18cec:	6867      	ldr	r7, [r4, #4]
   18cee:	3f01      	subs	r7, #1
   18cf0:	d501      	bpl.n	18cf6 <_fwalk_reent+0x22>
   18cf2:	6824      	ldr	r4, [r4, #0]
   18cf4:	e7f5      	b.n	18ce2 <_fwalk_reent+0xe>
   18cf6:	89ab      	ldrh	r3, [r5, #12]
   18cf8:	2b01      	cmp	r3, #1
   18cfa:	d907      	bls.n	18d0c <_fwalk_reent+0x38>
   18cfc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   18d00:	3301      	adds	r3, #1
   18d02:	d003      	beq.n	18d0c <_fwalk_reent+0x38>
   18d04:	4629      	mov	r1, r5
   18d06:	4640      	mov	r0, r8
   18d08:	47c8      	blx	r9
   18d0a:	4306      	orrs	r6, r0
   18d0c:	3568      	adds	r5, #104	; 0x68
   18d0e:	e7ee      	b.n	18cee <_fwalk_reent+0x1a>

00018d10 <__libc_init_array>:
__libc_init_array():
   18d10:	b570      	push	{r4, r5, r6, lr}
   18d12:	2500      	movs	r5, #0
   18d14:	4e0c      	ldr	r6, [pc, #48]	; (18d48 <__libc_init_array+0x38>)
   18d16:	4c0d      	ldr	r4, [pc, #52]	; (18d4c <__libc_init_array+0x3c>)
   18d18:	1ba4      	subs	r4, r4, r6
   18d1a:	10a4      	asrs	r4, r4, #2
   18d1c:	42a5      	cmp	r5, r4
   18d1e:	d109      	bne.n	18d34 <__libc_init_array+0x24>
   18d20:	f7fc f828 	bl	14d74 <_init>
   18d24:	2500      	movs	r5, #0
   18d26:	4e0a      	ldr	r6, [pc, #40]	; (18d50 <__libc_init_array+0x40>)
   18d28:	4c0a      	ldr	r4, [pc, #40]	; (18d54 <__libc_init_array+0x44>)
   18d2a:	1ba4      	subs	r4, r4, r6
   18d2c:	10a4      	asrs	r4, r4, #2
   18d2e:	42a5      	cmp	r5, r4
   18d30:	d105      	bne.n	18d3e <__libc_init_array+0x2e>
   18d32:	bd70      	pop	{r4, r5, r6, pc}
   18d34:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   18d38:	4798      	blx	r3
   18d3a:	3501      	adds	r5, #1
   18d3c:	e7ee      	b.n	18d1c <__libc_init_array+0xc>
   18d3e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   18d42:	4798      	blx	r3
   18d44:	3501      	adds	r5, #1
   18d46:	e7f2      	b.n	18d2e <__libc_init_array+0x1e>
   18d48:	00020668 	.word	0x00020668
   18d4c:	00020668 	.word	0x00020668
   18d50:	00020668 	.word	0x00020668
   18d54:	00020668 	.word	0x00020668

00018d58 <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   18d58:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   18d5c:	4770      	bx	lr
   18d5e:	Address 0x0000000000018d5e is out of bounds.


00018d60 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   18d60:	4b04      	ldr	r3, [pc, #16]	; (18d74 <__locale_ctype_ptr+0x14>)
   18d62:	4a05      	ldr	r2, [pc, #20]	; (18d78 <__locale_ctype_ptr+0x18>)
   18d64:	681b      	ldr	r3, [r3, #0]
   18d66:	6a1b      	ldr	r3, [r3, #32]
   18d68:	2b00      	cmp	r3, #0
   18d6a:	bf08      	it	eq
   18d6c:	4613      	moveq	r3, r2
   18d6e:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   18d72:	4770      	bx	lr
   18d74:	2007c0e0 	.word	0x2007c0e0
   18d78:	2007c144 	.word	0x2007c144

00018d7c <__swhatbuf_r>:
__swhatbuf_r():
   18d7c:	b570      	push	{r4, r5, r6, lr}
   18d7e:	460e      	mov	r6, r1
   18d80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   18d84:	b090      	sub	sp, #64	; 0x40
   18d86:	2900      	cmp	r1, #0
   18d88:	4614      	mov	r4, r2
   18d8a:	461d      	mov	r5, r3
   18d8c:	da07      	bge.n	18d9e <__swhatbuf_r+0x22>
   18d8e:	2300      	movs	r3, #0
   18d90:	602b      	str	r3, [r5, #0]
   18d92:	89b3      	ldrh	r3, [r6, #12]
   18d94:	061a      	lsls	r2, r3, #24
   18d96:	d410      	bmi.n	18dba <__swhatbuf_r+0x3e>
   18d98:	f44f 6380 	mov.w	r3, #1024	; 0x400
   18d9c:	e00e      	b.n	18dbc <__swhatbuf_r+0x40>
   18d9e:	aa01      	add	r2, sp, #4
   18da0:	f003 fe6a 	bl	1ca78 <_fstat_r>
   18da4:	2800      	cmp	r0, #0
   18da6:	dbf2      	blt.n	18d8e <__swhatbuf_r+0x12>
   18da8:	9a02      	ldr	r2, [sp, #8]
   18daa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   18dae:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   18db2:	425a      	negs	r2, r3
   18db4:	415a      	adcs	r2, r3
   18db6:	602a      	str	r2, [r5, #0]
   18db8:	e7ee      	b.n	18d98 <__swhatbuf_r+0x1c>
   18dba:	2340      	movs	r3, #64	; 0x40
   18dbc:	2000      	movs	r0, #0
   18dbe:	6023      	str	r3, [r4, #0]
   18dc0:	b010      	add	sp, #64	; 0x40
   18dc2:	bd70      	pop	{r4, r5, r6, pc}

00018dc4 <__smakebuf_r>:
__smakebuf_r():
   18dc4:	898b      	ldrh	r3, [r1, #12]
   18dc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
   18dc8:	079d      	lsls	r5, r3, #30
   18dca:	4606      	mov	r6, r0
   18dcc:	460c      	mov	r4, r1
   18dce:	d507      	bpl.n	18de0 <__smakebuf_r+0x1c>
   18dd0:	f104 0347 	add.w	r3, r4, #71	; 0x47
   18dd4:	6023      	str	r3, [r4, #0]
   18dd6:	6123      	str	r3, [r4, #16]
   18dd8:	2301      	movs	r3, #1
   18dda:	6163      	str	r3, [r4, #20]
   18ddc:	b002      	add	sp, #8
   18dde:	bd70      	pop	{r4, r5, r6, pc}
   18de0:	ab01      	add	r3, sp, #4
   18de2:	466a      	mov	r2, sp
   18de4:	f7ff ffca 	bl	18d7c <__swhatbuf_r>
   18de8:	9900      	ldr	r1, [sp, #0]
   18dea:	4605      	mov	r5, r0
   18dec:	4630      	mov	r0, r6
   18dee:	f000 fb87 	bl	19500 <_malloc_r>
   18df2:	b948      	cbnz	r0, 18e08 <__smakebuf_r+0x44>
   18df4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   18df8:	059a      	lsls	r2, r3, #22
   18dfa:	d4ef      	bmi.n	18ddc <__smakebuf_r+0x18>
   18dfc:	f023 0303 	bic.w	r3, r3, #3
   18e00:	f043 0302 	orr.w	r3, r3, #2
   18e04:	81a3      	strh	r3, [r4, #12]
   18e06:	e7e3      	b.n	18dd0 <__smakebuf_r+0xc>
   18e08:	4b0d      	ldr	r3, [pc, #52]	; (18e40 <__smakebuf_r+0x7c>)
   18e0a:	62b3      	str	r3, [r6, #40]	; 0x28
   18e0c:	89a3      	ldrh	r3, [r4, #12]
   18e0e:	6020      	str	r0, [r4, #0]
   18e10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   18e14:	81a3      	strh	r3, [r4, #12]
   18e16:	9b00      	ldr	r3, [sp, #0]
   18e18:	6120      	str	r0, [r4, #16]
   18e1a:	6163      	str	r3, [r4, #20]
   18e1c:	9b01      	ldr	r3, [sp, #4]
   18e1e:	b15b      	cbz	r3, 18e38 <__smakebuf_r+0x74>
   18e20:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   18e24:	4630      	mov	r0, r6
   18e26:	f004 f9b5 	bl	1d194 <_isatty_r>
   18e2a:	b128      	cbz	r0, 18e38 <__smakebuf_r+0x74>
   18e2c:	89a3      	ldrh	r3, [r4, #12]
   18e2e:	f023 0303 	bic.w	r3, r3, #3
   18e32:	f043 0301 	orr.w	r3, r3, #1
   18e36:	81a3      	strh	r3, [r4, #12]
   18e38:	89a3      	ldrh	r3, [r4, #12]
   18e3a:	431d      	orrs	r5, r3
   18e3c:	81a5      	strh	r5, [r4, #12]
   18e3e:	e7cd      	b.n	18ddc <__smakebuf_r+0x18>
   18e40:	00018b45 	.word	0x00018b45

00018e44 <malloc>:
malloc():
   18e44:	4b02      	ldr	r3, [pc, #8]	; (18e50 <malloc+0xc>)
   18e46:	4601      	mov	r1, r0
   18e48:	6818      	ldr	r0, [r3, #0]
   18e4a:	f000 bb59 	b.w	19500 <_malloc_r>
   18e4e:	bf00      	nop
   18e50:	2007c0e0 	.word	0x2007c0e0

00018e54 <free>:
free():
   18e54:	4b02      	ldr	r3, [pc, #8]	; (18e60 <free+0xc>)
   18e56:	4601      	mov	r1, r0
   18e58:	6818      	ldr	r0, [r3, #0]
   18e5a:	f000 bad3 	b.w	19404 <_free_r>
   18e5e:	bf00      	nop
   18e60:	2007c0e0 	.word	0x2007c0e0

00018e64 <__ascii_mbtowc>:
__ascii_mbtowc():
   18e64:	b082      	sub	sp, #8
   18e66:	b901      	cbnz	r1, 18e6a <__ascii_mbtowc+0x6>
   18e68:	a901      	add	r1, sp, #4
   18e6a:	b142      	cbz	r2, 18e7e <__ascii_mbtowc+0x1a>
   18e6c:	b14b      	cbz	r3, 18e82 <__ascii_mbtowc+0x1e>
   18e6e:	7813      	ldrb	r3, [r2, #0]
   18e70:	600b      	str	r3, [r1, #0]
   18e72:	7812      	ldrb	r2, [r2, #0]
   18e74:	1c10      	adds	r0, r2, #0
   18e76:	bf18      	it	ne
   18e78:	2001      	movne	r0, #1
   18e7a:	b002      	add	sp, #8
   18e7c:	4770      	bx	lr
   18e7e:	4610      	mov	r0, r2
   18e80:	e7fb      	b.n	18e7a <__ascii_mbtowc+0x16>
   18e82:	f06f 0001 	mvn.w	r0, #1
   18e86:	e7f8      	b.n	18e7a <__ascii_mbtowc+0x16>

00018e88 <memchr>:
memchr():
   18e88:	b510      	push	{r4, lr}
   18e8a:	b2c9      	uxtb	r1, r1
   18e8c:	4402      	add	r2, r0
   18e8e:	4290      	cmp	r0, r2
   18e90:	4603      	mov	r3, r0
   18e92:	d101      	bne.n	18e98 <memchr+0x10>
   18e94:	2000      	movs	r0, #0
   18e96:	bd10      	pop	{r4, pc}
   18e98:	781c      	ldrb	r4, [r3, #0]
   18e9a:	3001      	adds	r0, #1
   18e9c:	428c      	cmp	r4, r1
   18e9e:	d1f6      	bne.n	18e8e <memchr+0x6>
   18ea0:	4618      	mov	r0, r3
   18ea2:	bd10      	pop	{r4, pc}

00018ea4 <memcmp>:
memcmp():
   18ea4:	b510      	push	{r4, lr}
   18ea6:	3901      	subs	r1, #1
   18ea8:	4402      	add	r2, r0
   18eaa:	4290      	cmp	r0, r2
   18eac:	d101      	bne.n	18eb2 <memcmp+0xe>
   18eae:	2000      	movs	r0, #0
   18eb0:	bd10      	pop	{r4, pc}
   18eb2:	f810 3b01 	ldrb.w	r3, [r0], #1
   18eb6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   18eba:	42a3      	cmp	r3, r4
   18ebc:	d0f5      	beq.n	18eaa <memcmp+0x6>
   18ebe:	1b18      	subs	r0, r3, r4
   18ec0:	bd10      	pop	{r4, pc}

00018ec2 <memcpy>:
memcpy():
   18ec2:	b510      	push	{r4, lr}
   18ec4:	1e43      	subs	r3, r0, #1
   18ec6:	440a      	add	r2, r1
   18ec8:	4291      	cmp	r1, r2
   18eca:	d100      	bne.n	18ece <memcpy+0xc>
   18ecc:	bd10      	pop	{r4, pc}
   18ece:	f811 4b01 	ldrb.w	r4, [r1], #1
   18ed2:	f803 4f01 	strb.w	r4, [r3, #1]!
   18ed6:	e7f7      	b.n	18ec8 <memcpy+0x6>

00018ed8 <memmove>:
memmove():
   18ed8:	4288      	cmp	r0, r1
   18eda:	b510      	push	{r4, lr}
   18edc:	eb01 0302 	add.w	r3, r1, r2
   18ee0:	d803      	bhi.n	18eea <memmove+0x12>
   18ee2:	1e42      	subs	r2, r0, #1
   18ee4:	4299      	cmp	r1, r3
   18ee6:	d10c      	bne.n	18f02 <memmove+0x2a>
   18ee8:	bd10      	pop	{r4, pc}
   18eea:	4298      	cmp	r0, r3
   18eec:	d2f9      	bcs.n	18ee2 <memmove+0xa>
   18eee:	1881      	adds	r1, r0, r2
   18ef0:	1ad2      	subs	r2, r2, r3
   18ef2:	42d3      	cmn	r3, r2
   18ef4:	d100      	bne.n	18ef8 <memmove+0x20>
   18ef6:	bd10      	pop	{r4, pc}
   18ef8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   18efc:	f801 4d01 	strb.w	r4, [r1, #-1]!
   18f00:	e7f7      	b.n	18ef2 <memmove+0x1a>
   18f02:	f811 4b01 	ldrb.w	r4, [r1], #1
   18f06:	f802 4f01 	strb.w	r4, [r2, #1]!
   18f0a:	e7eb      	b.n	18ee4 <memmove+0xc>

00018f0c <memset>:
memset():
   18f0c:	4603      	mov	r3, r0
   18f0e:	4402      	add	r2, r0
   18f10:	4293      	cmp	r3, r2
   18f12:	d100      	bne.n	18f16 <memset+0xa>
   18f14:	4770      	bx	lr
   18f16:	f803 1b01 	strb.w	r1, [r3], #1
   18f1a:	e7f9      	b.n	18f10 <memset+0x4>

00018f1c <validate_structure>:
validate_structure():
   18f1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   18f1e:	6801      	ldr	r1, [r0, #0]
   18f20:	4604      	mov	r4, r0
   18f22:	293b      	cmp	r1, #59	; 0x3b
   18f24:	d911      	bls.n	18f4a <validate_structure+0x2e>
   18f26:	223c      	movs	r2, #60	; 0x3c
   18f28:	4668      	mov	r0, sp
   18f2a:	f002 ff31 	bl	1bd90 <div>
   18f2e:	9a01      	ldr	r2, [sp, #4]
   18f30:	6863      	ldr	r3, [r4, #4]
   18f32:	9900      	ldr	r1, [sp, #0]
   18f34:	2a00      	cmp	r2, #0
   18f36:	440b      	add	r3, r1
   18f38:	6063      	str	r3, [r4, #4]
   18f3a:	bfbb      	ittet	lt
   18f3c:	323c      	addlt	r2, #60	; 0x3c
   18f3e:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   18f42:	6022      	strge	r2, [r4, #0]
   18f44:	6022      	strlt	r2, [r4, #0]
   18f46:	bfb8      	it	lt
   18f48:	6063      	strlt	r3, [r4, #4]
   18f4a:	6861      	ldr	r1, [r4, #4]
   18f4c:	293b      	cmp	r1, #59	; 0x3b
   18f4e:	d911      	bls.n	18f74 <validate_structure+0x58>
   18f50:	223c      	movs	r2, #60	; 0x3c
   18f52:	4668      	mov	r0, sp
   18f54:	f002 ff1c 	bl	1bd90 <div>
   18f58:	9a01      	ldr	r2, [sp, #4]
   18f5a:	68a3      	ldr	r3, [r4, #8]
   18f5c:	9900      	ldr	r1, [sp, #0]
   18f5e:	2a00      	cmp	r2, #0
   18f60:	440b      	add	r3, r1
   18f62:	60a3      	str	r3, [r4, #8]
   18f64:	bfbb      	ittet	lt
   18f66:	323c      	addlt	r2, #60	; 0x3c
   18f68:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   18f6c:	6062      	strge	r2, [r4, #4]
   18f6e:	6062      	strlt	r2, [r4, #4]
   18f70:	bfb8      	it	lt
   18f72:	60a3      	strlt	r3, [r4, #8]
   18f74:	68a1      	ldr	r1, [r4, #8]
   18f76:	2917      	cmp	r1, #23
   18f78:	d911      	bls.n	18f9e <validate_structure+0x82>
   18f7a:	2218      	movs	r2, #24
   18f7c:	4668      	mov	r0, sp
   18f7e:	f002 ff07 	bl	1bd90 <div>
   18f82:	9a01      	ldr	r2, [sp, #4]
   18f84:	68e3      	ldr	r3, [r4, #12]
   18f86:	9900      	ldr	r1, [sp, #0]
   18f88:	2a00      	cmp	r2, #0
   18f8a:	440b      	add	r3, r1
   18f8c:	60e3      	str	r3, [r4, #12]
   18f8e:	bfbb      	ittet	lt
   18f90:	3218      	addlt	r2, #24
   18f92:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   18f96:	60a2      	strge	r2, [r4, #8]
   18f98:	60a2      	strlt	r2, [r4, #8]
   18f9a:	bfb8      	it	lt
   18f9c:	60e3      	strlt	r3, [r4, #12]
   18f9e:	6921      	ldr	r1, [r4, #16]
   18fa0:	290b      	cmp	r1, #11
   18fa2:	d911      	bls.n	18fc8 <validate_structure+0xac>
   18fa4:	220c      	movs	r2, #12
   18fa6:	4668      	mov	r0, sp
   18fa8:	f002 fef2 	bl	1bd90 <div>
   18fac:	9a01      	ldr	r2, [sp, #4]
   18fae:	6963      	ldr	r3, [r4, #20]
   18fb0:	9900      	ldr	r1, [sp, #0]
   18fb2:	2a00      	cmp	r2, #0
   18fb4:	440b      	add	r3, r1
   18fb6:	6163      	str	r3, [r4, #20]
   18fb8:	bfbb      	ittet	lt
   18fba:	320c      	addlt	r2, #12
   18fbc:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   18fc0:	6122      	strge	r2, [r4, #16]
   18fc2:	6122      	strlt	r2, [r4, #16]
   18fc4:	bfb8      	it	lt
   18fc6:	6163      	strlt	r3, [r4, #20]
   18fc8:	6963      	ldr	r3, [r4, #20]
   18fca:	0799      	lsls	r1, r3, #30
   18fcc:	d143      	bne.n	19056 <validate_structure+0x13a>
   18fce:	2164      	movs	r1, #100	; 0x64
   18fd0:	fb93 f2f1 	sdiv	r2, r3, r1
   18fd4:	fb01 3212 	mls	r2, r1, r2, r3
   18fd8:	2a00      	cmp	r2, #0
   18fda:	d13e      	bne.n	1905a <validate_structure+0x13e>
   18fdc:	f44f 71c8 	mov.w	r1, #400	; 0x190
   18fe0:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   18fe4:	fb93 f2f1 	sdiv	r2, r3, r1
   18fe8:	fb01 3312 	mls	r3, r1, r2, r3
   18fec:	2b00      	cmp	r3, #0
   18fee:	bf14      	ite	ne
   18ff0:	231c      	movne	r3, #28
   18ff2:	231d      	moveq	r3, #29
   18ff4:	68e2      	ldr	r2, [r4, #12]
   18ff6:	2a00      	cmp	r2, #0
   18ff8:	dd31      	ble.n	1905e <validate_structure+0x142>
   18ffa:	2602      	movs	r6, #2
   18ffc:	f04f 0e00 	mov.w	lr, #0
   19000:	2064      	movs	r0, #100	; 0x64
   19002:	f44f 75c8 	mov.w	r5, #400	; 0x190
   19006:	4f34      	ldr	r7, [pc, #208]	; (190d8 <validate_structure+0x1bc>)
   19008:	6921      	ldr	r1, [r4, #16]
   1900a:	68e2      	ldr	r2, [r4, #12]
   1900c:	2901      	cmp	r1, #1
   1900e:	d05d      	beq.n	190cc <validate_structure+0x1b0>
   19010:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   19014:	4562      	cmp	r2, ip
   19016:	dd2c      	ble.n	19072 <validate_structure+0x156>
   19018:	3101      	adds	r1, #1
   1901a:	eba2 020c 	sub.w	r2, r2, ip
   1901e:	290c      	cmp	r1, #12
   19020:	60e2      	str	r2, [r4, #12]
   19022:	6121      	str	r1, [r4, #16]
   19024:	d1f0      	bne.n	19008 <validate_structure+0xec>
   19026:	6963      	ldr	r3, [r4, #20]
   19028:	f8c4 e010 	str.w	lr, [r4, #16]
   1902c:	1c5a      	adds	r2, r3, #1
   1902e:	0791      	lsls	r1, r2, #30
   19030:	6162      	str	r2, [r4, #20]
   19032:	d147      	bne.n	190c4 <validate_structure+0x1a8>
   19034:	fb92 f1f0 	sdiv	r1, r2, r0
   19038:	fb00 2211 	mls	r2, r0, r1, r2
   1903c:	2a00      	cmp	r2, #0
   1903e:	d143      	bne.n	190c8 <validate_structure+0x1ac>
   19040:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   19044:	fb93 f2f5 	sdiv	r2, r3, r5
   19048:	fb05 3312 	mls	r3, r5, r2, r3
   1904c:	2b00      	cmp	r3, #0
   1904e:	bf14      	ite	ne
   19050:	231c      	movne	r3, #28
   19052:	231d      	moveq	r3, #29
   19054:	e7d8      	b.n	19008 <validate_structure+0xec>
   19056:	231c      	movs	r3, #28
   19058:	e7cc      	b.n	18ff4 <validate_structure+0xd8>
   1905a:	231d      	movs	r3, #29
   1905c:	e7ca      	b.n	18ff4 <validate_structure+0xd8>
   1905e:	260b      	movs	r6, #11
   19060:	2064      	movs	r0, #100	; 0x64
   19062:	f44f 75c8 	mov.w	r5, #400	; 0x190
   19066:	4f1c      	ldr	r7, [pc, #112]	; (190d8 <validate_structure+0x1bc>)
   19068:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1906c:	f1be 0f00 	cmp.w	lr, #0
   19070:	dd01      	ble.n	19076 <validate_structure+0x15a>
   19072:	b003      	add	sp, #12
   19074:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19076:	6921      	ldr	r1, [r4, #16]
   19078:	3901      	subs	r1, #1
   1907a:	6121      	str	r1, [r4, #16]
   1907c:	3101      	adds	r1, #1
   1907e:	d114      	bne.n	190aa <validate_structure+0x18e>
   19080:	6963      	ldr	r3, [r4, #20]
   19082:	6126      	str	r6, [r4, #16]
   19084:	1e59      	subs	r1, r3, #1
   19086:	078a      	lsls	r2, r1, #30
   19088:	6161      	str	r1, [r4, #20]
   1908a:	d117      	bne.n	190bc <validate_structure+0x1a0>
   1908c:	fb91 f2f0 	sdiv	r2, r1, r0
   19090:	fb00 1112 	mls	r1, r0, r2, r1
   19094:	b9a1      	cbnz	r1, 190c0 <validate_structure+0x1a4>
   19096:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1909a:	fb93 f2f5 	sdiv	r2, r3, r5
   1909e:	fb05 3312 	mls	r3, r5, r2, r3
   190a2:	2b00      	cmp	r3, #0
   190a4:	bf14      	ite	ne
   190a6:	231c      	movne	r3, #28
   190a8:	231d      	moveq	r3, #29
   190aa:	6922      	ldr	r2, [r4, #16]
   190ac:	2a01      	cmp	r2, #1
   190ae:	bf0c      	ite	eq
   190b0:	461a      	moveq	r2, r3
   190b2:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   190b6:	4472      	add	r2, lr
   190b8:	60e2      	str	r2, [r4, #12]
   190ba:	e7d5      	b.n	19068 <validate_structure+0x14c>
   190bc:	231c      	movs	r3, #28
   190be:	e7f4      	b.n	190aa <validate_structure+0x18e>
   190c0:	231d      	movs	r3, #29
   190c2:	e7f2      	b.n	190aa <validate_structure+0x18e>
   190c4:	231c      	movs	r3, #28
   190c6:	e79f      	b.n	19008 <validate_structure+0xec>
   190c8:	231d      	movs	r3, #29
   190ca:	e79d      	b.n	19008 <validate_structure+0xec>
   190cc:	4293      	cmp	r3, r2
   190ce:	dad0      	bge.n	19072 <validate_structure+0x156>
   190d0:	1ad2      	subs	r2, r2, r3
   190d2:	60e2      	str	r2, [r4, #12]
   190d4:	6126      	str	r6, [r4, #16]
   190d6:	e797      	b.n	19008 <validate_structure+0xec>
   190d8:	00020298 	.word	0x00020298

000190dc <mktime>:
mktime():
   190dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   190e0:	4681      	mov	r9, r0
   190e2:	f004 f853 	bl	1d18c <__gettzinfo>
   190e6:	253c      	movs	r5, #60	; 0x3c
   190e8:	4680      	mov	r8, r0
   190ea:	4648      	mov	r0, r9
   190ec:	f7ff ff16 	bl	18f1c <validate_structure>
   190f0:	e899 0081 	ldmia.w	r9, {r0, r7}
   190f4:	fb05 0707 	mla	r7, r5, r7, r0
   190f8:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   190fc:	f8d9 3010 	ldr.w	r3, [r9, #16]
   19100:	4ab1      	ldr	r2, [pc, #708]	; (193c8 <mktime+0x2ec>)
   19102:	f8d9 400c 	ldr.w	r4, [r9, #12]
   19106:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1910a:	f8d9 0008 	ldr.w	r0, [r9, #8]
   1910e:	3c01      	subs	r4, #1
   19110:	2b01      	cmp	r3, #1
   19112:	fb05 7000 	mla	r0, r5, r0, r7
   19116:	4414      	add	r4, r2
   19118:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1911c:	dd11      	ble.n	19142 <mktime+0x66>
   1911e:	0799      	lsls	r1, r3, #30
   19120:	d10f      	bne.n	19142 <mktime+0x66>
   19122:	2164      	movs	r1, #100	; 0x64
   19124:	fb93 f2f1 	sdiv	r2, r3, r1
   19128:	fb01 3212 	mls	r2, r1, r2, r3
   1912c:	b942      	cbnz	r2, 19140 <mktime+0x64>
   1912e:	f44f 71c8 	mov.w	r1, #400	; 0x190
   19132:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   19136:	fb95 f2f1 	sdiv	r2, r5, r1
   1913a:	fb01 5212 	mls	r2, r1, r2, r5
   1913e:	b902      	cbnz	r2, 19142 <mktime+0x66>
   19140:	3401      	adds	r4, #1
   19142:	f644 6120 	movw	r1, #20000	; 0x4e20
   19146:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1914a:	3210      	adds	r2, #16
   1914c:	428a      	cmp	r2, r1
   1914e:	f8c9 401c 	str.w	r4, [r9, #28]
   19152:	f200 812d 	bhi.w	193b0 <mktime+0x2d4>
   19156:	2b46      	cmp	r3, #70	; 0x46
   19158:	dd70      	ble.n	1923c <mktime+0x160>
   1915a:	2546      	movs	r5, #70	; 0x46
   1915c:	f240 176d 	movw	r7, #365	; 0x16d
   19160:	2164      	movs	r1, #100	; 0x64
   19162:	f44f 76c8 	mov.w	r6, #400	; 0x190
   19166:	07aa      	lsls	r2, r5, #30
   19168:	d162      	bne.n	19230 <mktime+0x154>
   1916a:	fb95 f2f1 	sdiv	r2, r5, r1
   1916e:	fb01 5212 	mls	r2, r1, r2, r5
   19172:	2a00      	cmp	r2, #0
   19174:	d15f      	bne.n	19236 <mktime+0x15a>
   19176:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   1917a:	fb9e f2f6 	sdiv	r2, lr, r6
   1917e:	fb06 e212 	mls	r2, r6, r2, lr
   19182:	2a00      	cmp	r2, #0
   19184:	bf14      	ite	ne
   19186:	463a      	movne	r2, r7
   19188:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1918c:	3501      	adds	r5, #1
   1918e:	42ab      	cmp	r3, r5
   19190:	4414      	add	r4, r2
   19192:	d1e8      	bne.n	19166 <mktime+0x8a>
   19194:	4f8d      	ldr	r7, [pc, #564]	; (193cc <mktime+0x2f0>)
   19196:	fb07 0704 	mla	r7, r7, r4, r0
   1919a:	f002 fb45 	bl	1b828 <__tz_lock>
   1919e:	f002 fb45 	bl	1b82c <_tzset_unlocked>
   191a2:	4b8b      	ldr	r3, [pc, #556]	; (193d0 <mktime+0x2f4>)
   191a4:	681e      	ldr	r6, [r3, #0]
   191a6:	2e00      	cmp	r6, #0
   191a8:	f000 810a 	beq.w	193c0 <mktime+0x2e4>
   191ac:	f8d9 3020 	ldr.w	r3, [r9, #32]
   191b0:	f8d9 0014 	ldr.w	r0, [r9, #20]
   191b4:	2b01      	cmp	r3, #1
   191b6:	bfa8      	it	ge
   191b8:	2301      	movge	r3, #1
   191ba:	469a      	mov	sl, r3
   191bc:	f8d8 3004 	ldr.w	r3, [r8, #4]
   191c0:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   191c4:	4298      	cmp	r0, r3
   191c6:	d17c      	bne.n	192c2 <mktime+0x1e6>
   191c8:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   191cc:	f8d8 3020 	ldr.w	r3, [r8, #32]
   191d0:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   191d4:	f8d8 101c 	ldr.w	r1, [r8, #28]
   191d8:	1ad6      	subs	r6, r2, r3
   191da:	42b7      	cmp	r7, r6
   191dc:	eba1 0100 	sub.w	r1, r1, r0
   191e0:	da76      	bge.n	192d0 <mktime+0x1f4>
   191e2:	f8d8 2000 	ldr.w	r2, [r8]
   191e6:	2a00      	cmp	r2, #0
   191e8:	d076      	beq.n	192d8 <mktime+0x1fc>
   191ea:	428f      	cmp	r7, r1
   191ec:	f2c0 80e3 	blt.w	193b6 <mktime+0x2da>
   191f0:	42b7      	cmp	r7, r6
   191f2:	bfac      	ite	ge
   191f4:	2600      	movge	r6, #0
   191f6:	2601      	movlt	r6, #1
   191f8:	f1ba 0f00 	cmp.w	sl, #0
   191fc:	da72      	bge.n	192e4 <mktime+0x208>
   191fe:	2e01      	cmp	r6, #1
   19200:	f040 80de 	bne.w	193c0 <mktime+0x2e4>
   19204:	2601      	movs	r6, #1
   19206:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1920a:	443d      	add	r5, r7
   1920c:	f002 fb0d 	bl	1b82a <__tz_unlock>
   19210:	2307      	movs	r3, #7
   19212:	3404      	adds	r4, #4
   19214:	fb94 f3f3 	sdiv	r3, r4, r3
   19218:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1921c:	1ae4      	subs	r4, r4, r3
   1921e:	bf48      	it	mi
   19220:	3407      	addmi	r4, #7
   19222:	f8c9 6020 	str.w	r6, [r9, #32]
   19226:	f8c9 4018 	str.w	r4, [r9, #24]
   1922a:	4628      	mov	r0, r5
   1922c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19230:	f240 126d 	movw	r2, #365	; 0x16d
   19234:	e7aa      	b.n	1918c <mktime+0xb0>
   19236:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1923a:	e7a7      	b.n	1918c <mktime+0xb0>
   1923c:	d01e      	beq.n	1927c <mktime+0x1a0>
   1923e:	2245      	movs	r2, #69	; 0x45
   19240:	f240 176d 	movw	r7, #365	; 0x16d
   19244:	2564      	movs	r5, #100	; 0x64
   19246:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1924a:	429a      	cmp	r2, r3
   1924c:	dc18      	bgt.n	19280 <mktime+0x1a4>
   1924e:	079d      	lsls	r5, r3, #30
   19250:	d131      	bne.n	192b6 <mktime+0x1da>
   19252:	2164      	movs	r1, #100	; 0x64
   19254:	fb93 f2f1 	sdiv	r2, r3, r1
   19258:	fb01 3212 	mls	r2, r1, r2, r3
   1925c:	bb72      	cbnz	r2, 192bc <mktime+0x1e0>
   1925e:	f44f 71c8 	mov.w	r1, #400	; 0x190
   19262:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   19266:	fb95 f2f1 	sdiv	r2, r5, r1
   1926a:	fb01 5212 	mls	r2, r1, r2, r5
   1926e:	2a00      	cmp	r2, #0
   19270:	f240 126d 	movw	r2, #365	; 0x16d
   19274:	bf08      	it	eq
   19276:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1927a:	1aa4      	subs	r4, r4, r2
   1927c:	461d      	mov	r5, r3
   1927e:	e789      	b.n	19194 <mktime+0xb8>
   19280:	0791      	lsls	r1, r2, #30
   19282:	d112      	bne.n	192aa <mktime+0x1ce>
   19284:	fb92 f1f5 	sdiv	r1, r2, r5
   19288:	fb05 2111 	mls	r1, r5, r1, r2
   1928c:	b981      	cbnz	r1, 192b0 <mktime+0x1d4>
   1928e:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   19292:	fb9e f1f6 	sdiv	r1, lr, r6
   19296:	fb06 e111 	mls	r1, r6, r1, lr
   1929a:	2900      	cmp	r1, #0
   1929c:	bf14      	ite	ne
   1929e:	4639      	movne	r1, r7
   192a0:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   192a4:	1a64      	subs	r4, r4, r1
   192a6:	3a01      	subs	r2, #1
   192a8:	e7cf      	b.n	1924a <mktime+0x16e>
   192aa:	f240 116d 	movw	r1, #365	; 0x16d
   192ae:	e7f9      	b.n	192a4 <mktime+0x1c8>
   192b0:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   192b4:	e7f6      	b.n	192a4 <mktime+0x1c8>
   192b6:	f240 126d 	movw	r2, #365	; 0x16d
   192ba:	e7de      	b.n	1927a <mktime+0x19e>
   192bc:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   192c0:	e7db      	b.n	1927a <mktime+0x19e>
   192c2:	f002 fa09 	bl	1b6d8 <__tzcalc_limits>
   192c6:	2800      	cmp	r0, #0
   192c8:	f47f af7e 	bne.w	191c8 <mktime+0xec>
   192cc:	4656      	mov	r6, sl
   192ce:	e796      	b.n	191fe <mktime+0x122>
   192d0:	1a12      	subs	r2, r2, r0
   192d2:	4297      	cmp	r7, r2
   192d4:	dbfa      	blt.n	192cc <mktime+0x1f0>
   192d6:	e784      	b.n	191e2 <mktime+0x106>
   192d8:	428f      	cmp	r7, r1
   192da:	db89      	blt.n	191f0 <mktime+0x114>
   192dc:	f1ba 0f00 	cmp.w	sl, #0
   192e0:	db90      	blt.n	19204 <mktime+0x128>
   192e2:	2601      	movs	r6, #1
   192e4:	ea8a 0a06 	eor.w	sl, sl, r6
   192e8:	f1ba 0f01 	cmp.w	sl, #1
   192ec:	d187      	bne.n	191fe <mktime+0x122>
   192ee:	1a1b      	subs	r3, r3, r0
   192f0:	b906      	cbnz	r6, 192f4 <mktime+0x218>
   192f2:	425b      	negs	r3, r3
   192f4:	f8d9 2000 	ldr.w	r2, [r9]
   192f8:	4648      	mov	r0, r9
   192fa:	441a      	add	r2, r3
   192fc:	f8c9 2000 	str.w	r2, [r9]
   19300:	441f      	add	r7, r3
   19302:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   19306:	f7ff fe09 	bl	18f1c <validate_structure>
   1930a:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1930e:	ebb3 030a 	subs.w	r3, r3, sl
   19312:	f43f af74 	beq.w	191fe <mktime+0x122>
   19316:	2b01      	cmp	r3, #1
   19318:	dc21      	bgt.n	1935e <mktime+0x282>
   1931a:	1c98      	adds	r0, r3, #2
   1931c:	bfd8      	it	le
   1931e:	2301      	movle	r3, #1
   19320:	f8d9 201c 	ldr.w	r2, [r9, #28]
   19324:	441c      	add	r4, r3
   19326:	189b      	adds	r3, r3, r2
   19328:	d522      	bpl.n	19370 <mktime+0x294>
   1932a:	1e6a      	subs	r2, r5, #1
   1932c:	0791      	lsls	r1, r2, #30
   1932e:	d119      	bne.n	19364 <mktime+0x288>
   19330:	2164      	movs	r1, #100	; 0x64
   19332:	fb92 f3f1 	sdiv	r3, r2, r1
   19336:	fb01 2313 	mls	r3, r1, r3, r2
   1933a:	b9b3      	cbnz	r3, 1936a <mktime+0x28e>
   1933c:	f44f 72c8 	mov.w	r2, #400	; 0x190
   19340:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   19344:	fb95 f3f2 	sdiv	r3, r5, r2
   19348:	fb02 5513 	mls	r5, r2, r3, r5
   1934c:	2d00      	cmp	r5, #0
   1934e:	f240 136d 	movw	r3, #365	; 0x16d
   19352:	bf18      	it	ne
   19354:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   19358:	f8c9 301c 	str.w	r3, [r9, #28]
   1935c:	e74f      	b.n	191fe <mktime+0x122>
   1935e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   19362:	e7dd      	b.n	19320 <mktime+0x244>
   19364:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   19368:	e7f6      	b.n	19358 <mktime+0x27c>
   1936a:	f240 136d 	movw	r3, #365	; 0x16d
   1936e:	e7f3      	b.n	19358 <mktime+0x27c>
   19370:	07aa      	lsls	r2, r5, #30
   19372:	d117      	bne.n	193a4 <mktime+0x2c8>
   19374:	2164      	movs	r1, #100	; 0x64
   19376:	fb95 f2f1 	sdiv	r2, r5, r1
   1937a:	fb01 5212 	mls	r2, r1, r2, r5
   1937e:	b9a2      	cbnz	r2, 193aa <mktime+0x2ce>
   19380:	f44f 71c8 	mov.w	r1, #400	; 0x190
   19384:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   19388:	fb95 f2f1 	sdiv	r2, r5, r1
   1938c:	fb01 5512 	mls	r5, r1, r2, r5
   19390:	2d00      	cmp	r5, #0
   19392:	f240 126d 	movw	r2, #365	; 0x16d
   19396:	bf08      	it	eq
   19398:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1939c:	429a      	cmp	r2, r3
   1939e:	bfd8      	it	le
   193a0:	1a9b      	suble	r3, r3, r2
   193a2:	e7d9      	b.n	19358 <mktime+0x27c>
   193a4:	f240 126d 	movw	r2, #365	; 0x16d
   193a8:	e7f8      	b.n	1939c <mktime+0x2c0>
   193aa:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   193ae:	e7f5      	b.n	1939c <mktime+0x2c0>
   193b0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   193b4:	e739      	b.n	1922a <mktime+0x14e>
   193b6:	f1ba 0f00 	cmp.w	sl, #0
   193ba:	f04f 0600 	mov.w	r6, #0
   193be:	da91      	bge.n	192e4 <mktime+0x208>
   193c0:	f8d8 5020 	ldr.w	r5, [r8, #32]
   193c4:	443d      	add	r5, r7
   193c6:	e721      	b.n	1920c <mktime+0x130>
   193c8:	000202c8 	.word	0x000202c8
   193cc:	00015180 	.word	0x00015180
   193d0:	2007c7a4 	.word	0x2007c7a4

000193d4 <mallinfo>:
mallinfo():
   193d4:	b510      	push	{r4, lr}
   193d6:	4604      	mov	r4, r0
   193d8:	4b02      	ldr	r3, [pc, #8]	; (193e4 <mallinfo+0x10>)
   193da:	6819      	ldr	r1, [r3, #0]
   193dc:	f000 f85e 	bl	1949c <_mallinfo_r>
   193e0:	4620      	mov	r0, r4
   193e2:	bd10      	pop	{r4, pc}
   193e4:	2007c0e0 	.word	0x2007c0e0

000193e8 <_calloc_r>:
_calloc_r():
   193e8:	b538      	push	{r3, r4, r5, lr}
   193ea:	fb02 f401 	mul.w	r4, r2, r1
   193ee:	4621      	mov	r1, r4
   193f0:	f000 f886 	bl	19500 <_malloc_r>
   193f4:	4605      	mov	r5, r0
   193f6:	b118      	cbz	r0, 19400 <_calloc_r+0x18>
   193f8:	4622      	mov	r2, r4
   193fa:	2100      	movs	r1, #0
   193fc:	f7ff fd86 	bl	18f0c <memset>
   19400:	4628      	mov	r0, r5
   19402:	bd38      	pop	{r3, r4, r5, pc}

00019404 <_free_r>:
_free_r():
   19404:	b538      	push	{r3, r4, r5, lr}
   19406:	4605      	mov	r5, r0
   19408:	2900      	cmp	r1, #0
   1940a:	d043      	beq.n	19494 <_free_r+0x90>
   1940c:	f851 3c04 	ldr.w	r3, [r1, #-4]
   19410:	1f0c      	subs	r4, r1, #4
   19412:	2b00      	cmp	r3, #0
   19414:	bfb8      	it	lt
   19416:	18e4      	addlt	r4, r4, r3
   19418:	f7fb fbe8 	bl	14bec <__malloc_lock>
   1941c:	4a1e      	ldr	r2, [pc, #120]	; (19498 <_free_r+0x94>)
   1941e:	6813      	ldr	r3, [r2, #0]
   19420:	4610      	mov	r0, r2
   19422:	b933      	cbnz	r3, 19432 <_free_r+0x2e>
   19424:	6063      	str	r3, [r4, #4]
   19426:	6014      	str	r4, [r2, #0]
   19428:	4628      	mov	r0, r5
   1942a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1942e:	f7fb bbdf 	b.w	14bf0 <__malloc_unlock>
   19432:	42a3      	cmp	r3, r4
   19434:	d90b      	bls.n	1944e <_free_r+0x4a>
   19436:	6821      	ldr	r1, [r4, #0]
   19438:	1862      	adds	r2, r4, r1
   1943a:	4293      	cmp	r3, r2
   1943c:	bf01      	itttt	eq
   1943e:	681a      	ldreq	r2, [r3, #0]
   19440:	685b      	ldreq	r3, [r3, #4]
   19442:	1852      	addeq	r2, r2, r1
   19444:	6022      	streq	r2, [r4, #0]
   19446:	6063      	str	r3, [r4, #4]
   19448:	6004      	str	r4, [r0, #0]
   1944a:	e7ed      	b.n	19428 <_free_r+0x24>
   1944c:	4613      	mov	r3, r2
   1944e:	685a      	ldr	r2, [r3, #4]
   19450:	b10a      	cbz	r2, 19456 <_free_r+0x52>
   19452:	42a2      	cmp	r2, r4
   19454:	d9fa      	bls.n	1944c <_free_r+0x48>
   19456:	6819      	ldr	r1, [r3, #0]
   19458:	1858      	adds	r0, r3, r1
   1945a:	42a0      	cmp	r0, r4
   1945c:	d10b      	bne.n	19476 <_free_r+0x72>
   1945e:	6820      	ldr	r0, [r4, #0]
   19460:	4401      	add	r1, r0
   19462:	1858      	adds	r0, r3, r1
   19464:	4282      	cmp	r2, r0
   19466:	6019      	str	r1, [r3, #0]
   19468:	d1de      	bne.n	19428 <_free_r+0x24>
   1946a:	6810      	ldr	r0, [r2, #0]
   1946c:	6852      	ldr	r2, [r2, #4]
   1946e:	4401      	add	r1, r0
   19470:	6019      	str	r1, [r3, #0]
   19472:	605a      	str	r2, [r3, #4]
   19474:	e7d8      	b.n	19428 <_free_r+0x24>
   19476:	d902      	bls.n	1947e <_free_r+0x7a>
   19478:	230c      	movs	r3, #12
   1947a:	602b      	str	r3, [r5, #0]
   1947c:	e7d4      	b.n	19428 <_free_r+0x24>
   1947e:	6820      	ldr	r0, [r4, #0]
   19480:	1821      	adds	r1, r4, r0
   19482:	428a      	cmp	r2, r1
   19484:	bf01      	itttt	eq
   19486:	6811      	ldreq	r1, [r2, #0]
   19488:	6852      	ldreq	r2, [r2, #4]
   1948a:	1809      	addeq	r1, r1, r0
   1948c:	6021      	streq	r1, [r4, #0]
   1948e:	6062      	str	r2, [r4, #4]
   19490:	605c      	str	r4, [r3, #4]
   19492:	e7c9      	b.n	19428 <_free_r+0x24>
   19494:	bd38      	pop	{r3, r4, r5, pc}
   19496:	bf00      	nop
   19498:	2007c780 	.word	0x2007c780

0001949c <_mallinfo_r>:
_mallinfo_r():
   1949c:	b570      	push	{r4, r5, r6, lr}
   1949e:	4c15      	ldr	r4, [pc, #84]	; (194f4 <_mallinfo_r+0x58>)
   194a0:	4606      	mov	r6, r0
   194a2:	4608      	mov	r0, r1
   194a4:	460d      	mov	r5, r1
   194a6:	f7fb fba1 	bl	14bec <__malloc_lock>
   194aa:	6820      	ldr	r0, [r4, #0]
   194ac:	b138      	cbz	r0, 194be <_mallinfo_r+0x22>
   194ae:	2100      	movs	r1, #0
   194b0:	4628      	mov	r0, r5
   194b2:	f001 f839 	bl	1a528 <_sbrk_r>
   194b6:	1c43      	adds	r3, r0, #1
   194b8:	bf1c      	itt	ne
   194ba:	6823      	ldrne	r3, [r4, #0]
   194bc:	1ac0      	subne	r0, r0, r3
   194be:	4b0e      	ldr	r3, [pc, #56]	; (194f8 <_mallinfo_r+0x5c>)
   194c0:	681a      	ldr	r2, [r3, #0]
   194c2:	2300      	movs	r3, #0
   194c4:	b992      	cbnz	r2, 194ec <_mallinfo_r+0x50>
   194c6:	4c0d      	ldr	r4, [pc, #52]	; (194fc <_mallinfo_r+0x60>)
   194c8:	6020      	str	r0, [r4, #0]
   194ca:	1ac0      	subs	r0, r0, r3
   194cc:	61e0      	str	r0, [r4, #28]
   194ce:	4628      	mov	r0, r5
   194d0:	4635      	mov	r5, r6
   194d2:	6223      	str	r3, [r4, #32]
   194d4:	f7fb fb8c 	bl	14bf0 <__malloc_unlock>
   194d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   194da:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   194dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   194de:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   194e0:	e894 0003 	ldmia.w	r4, {r0, r1}
   194e4:	e885 0003 	stmia.w	r5, {r0, r1}
   194e8:	4630      	mov	r0, r6
   194ea:	bd70      	pop	{r4, r5, r6, pc}
   194ec:	6811      	ldr	r1, [r2, #0]
   194ee:	6852      	ldr	r2, [r2, #4]
   194f0:	440b      	add	r3, r1
   194f2:	e7e7      	b.n	194c4 <_mallinfo_r+0x28>
   194f4:	2007c784 	.word	0x2007c784
   194f8:	2007c780 	.word	0x2007c780
   194fc:	2007c758 	.word	0x2007c758

00019500 <_malloc_r>:
_malloc_r():
   19500:	b570      	push	{r4, r5, r6, lr}
   19502:	1ccd      	adds	r5, r1, #3
   19504:	f025 0503 	bic.w	r5, r5, #3
   19508:	3508      	adds	r5, #8
   1950a:	2d0c      	cmp	r5, #12
   1950c:	bf38      	it	cc
   1950e:	250c      	movcc	r5, #12
   19510:	2d00      	cmp	r5, #0
   19512:	4606      	mov	r6, r0
   19514:	db01      	blt.n	1951a <_malloc_r+0x1a>
   19516:	42a9      	cmp	r1, r5
   19518:	d903      	bls.n	19522 <_malloc_r+0x22>
   1951a:	230c      	movs	r3, #12
   1951c:	6033      	str	r3, [r6, #0]
   1951e:	2000      	movs	r0, #0
   19520:	bd70      	pop	{r4, r5, r6, pc}
   19522:	f7fb fb63 	bl	14bec <__malloc_lock>
   19526:	4a23      	ldr	r2, [pc, #140]	; (195b4 <_malloc_r+0xb4>)
   19528:	6814      	ldr	r4, [r2, #0]
   1952a:	4621      	mov	r1, r4
   1952c:	b991      	cbnz	r1, 19554 <_malloc_r+0x54>
   1952e:	4c22      	ldr	r4, [pc, #136]	; (195b8 <_malloc_r+0xb8>)
   19530:	6823      	ldr	r3, [r4, #0]
   19532:	b91b      	cbnz	r3, 1953c <_malloc_r+0x3c>
   19534:	4630      	mov	r0, r6
   19536:	f000 fff7 	bl	1a528 <_sbrk_r>
   1953a:	6020      	str	r0, [r4, #0]
   1953c:	4629      	mov	r1, r5
   1953e:	4630      	mov	r0, r6
   19540:	f000 fff2 	bl	1a528 <_sbrk_r>
   19544:	1c43      	adds	r3, r0, #1
   19546:	d126      	bne.n	19596 <_malloc_r+0x96>
   19548:	230c      	movs	r3, #12
   1954a:	4630      	mov	r0, r6
   1954c:	6033      	str	r3, [r6, #0]
   1954e:	f7fb fb4f 	bl	14bf0 <__malloc_unlock>
   19552:	e7e4      	b.n	1951e <_malloc_r+0x1e>
   19554:	680b      	ldr	r3, [r1, #0]
   19556:	1b5b      	subs	r3, r3, r5
   19558:	d41a      	bmi.n	19590 <_malloc_r+0x90>
   1955a:	2b0b      	cmp	r3, #11
   1955c:	d90f      	bls.n	1957e <_malloc_r+0x7e>
   1955e:	600b      	str	r3, [r1, #0]
   19560:	18cc      	adds	r4, r1, r3
   19562:	50cd      	str	r5, [r1, r3]
   19564:	4630      	mov	r0, r6
   19566:	f7fb fb43 	bl	14bf0 <__malloc_unlock>
   1956a:	f104 000b 	add.w	r0, r4, #11
   1956e:	1d23      	adds	r3, r4, #4
   19570:	f020 0007 	bic.w	r0, r0, #7
   19574:	1ac3      	subs	r3, r0, r3
   19576:	d01b      	beq.n	195b0 <_malloc_r+0xb0>
   19578:	425a      	negs	r2, r3
   1957a:	50e2      	str	r2, [r4, r3]
   1957c:	bd70      	pop	{r4, r5, r6, pc}
   1957e:	428c      	cmp	r4, r1
   19580:	bf0b      	itete	eq
   19582:	6863      	ldreq	r3, [r4, #4]
   19584:	684b      	ldrne	r3, [r1, #4]
   19586:	6013      	streq	r3, [r2, #0]
   19588:	6063      	strne	r3, [r4, #4]
   1958a:	bf18      	it	ne
   1958c:	460c      	movne	r4, r1
   1958e:	e7e9      	b.n	19564 <_malloc_r+0x64>
   19590:	460c      	mov	r4, r1
   19592:	6849      	ldr	r1, [r1, #4]
   19594:	e7ca      	b.n	1952c <_malloc_r+0x2c>
   19596:	1cc4      	adds	r4, r0, #3
   19598:	f024 0403 	bic.w	r4, r4, #3
   1959c:	42a0      	cmp	r0, r4
   1959e:	d005      	beq.n	195ac <_malloc_r+0xac>
   195a0:	1a21      	subs	r1, r4, r0
   195a2:	4630      	mov	r0, r6
   195a4:	f000 ffc0 	bl	1a528 <_sbrk_r>
   195a8:	3001      	adds	r0, #1
   195aa:	d0cd      	beq.n	19548 <_malloc_r+0x48>
   195ac:	6025      	str	r5, [r4, #0]
   195ae:	e7d9      	b.n	19564 <_malloc_r+0x64>
   195b0:	bd70      	pop	{r4, r5, r6, pc}
   195b2:	bf00      	nop
   195b4:	2007c780 	.word	0x2007c780
   195b8:	2007c784 	.word	0x2007c784

000195bc <__cvt>:
__cvt():
   195bc:	2b00      	cmp	r3, #0
   195be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   195c2:	461e      	mov	r6, r3
   195c4:	bfbb      	ittet	lt
   195c6:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   195ca:	461e      	movlt	r6, r3
   195cc:	2300      	movge	r3, #0
   195ce:	232d      	movlt	r3, #45	; 0x2d
   195d0:	b088      	sub	sp, #32
   195d2:	9f14      	ldr	r7, [sp, #80]	; 0x50
   195d4:	9912      	ldr	r1, [sp, #72]	; 0x48
   195d6:	f027 0720 	bic.w	r7, r7, #32
   195da:	2f46      	cmp	r7, #70	; 0x46
   195dc:	4614      	mov	r4, r2
   195de:	9d10      	ldr	r5, [sp, #64]	; 0x40
   195e0:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   195e4:	700b      	strb	r3, [r1, #0]
   195e6:	d004      	beq.n	195f2 <__cvt+0x36>
   195e8:	2f45      	cmp	r7, #69	; 0x45
   195ea:	d100      	bne.n	195ee <__cvt+0x32>
   195ec:	3501      	adds	r5, #1
   195ee:	2302      	movs	r3, #2
   195f0:	e000      	b.n	195f4 <__cvt+0x38>
   195f2:	2303      	movs	r3, #3
   195f4:	aa07      	add	r2, sp, #28
   195f6:	9204      	str	r2, [sp, #16]
   195f8:	aa06      	add	r2, sp, #24
   195fa:	9203      	str	r2, [sp, #12]
   195fc:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   19600:	4622      	mov	r2, r4
   19602:	4633      	mov	r3, r6
   19604:	f002 fc64 	bl	1bed0 <_dtoa_r>
   19608:	2f47      	cmp	r7, #71	; 0x47
   1960a:	4680      	mov	r8, r0
   1960c:	d102      	bne.n	19614 <__cvt+0x58>
   1960e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   19610:	07db      	lsls	r3, r3, #31
   19612:	d526      	bpl.n	19662 <__cvt+0xa6>
   19614:	2f46      	cmp	r7, #70	; 0x46
   19616:	eb08 0905 	add.w	r9, r8, r5
   1961a:	d111      	bne.n	19640 <__cvt+0x84>
   1961c:	f898 3000 	ldrb.w	r3, [r8]
   19620:	2b30      	cmp	r3, #48	; 0x30
   19622:	d10a      	bne.n	1963a <__cvt+0x7e>
   19624:	2200      	movs	r2, #0
   19626:	2300      	movs	r3, #0
   19628:	4620      	mov	r0, r4
   1962a:	4631      	mov	r1, r6
   1962c:	f005 fd0a 	bl	1f044 <__aeabi_dcmpeq>
   19630:	b918      	cbnz	r0, 1963a <__cvt+0x7e>
   19632:	f1c5 0501 	rsb	r5, r5, #1
   19636:	f8ca 5000 	str.w	r5, [sl]
   1963a:	f8da 3000 	ldr.w	r3, [sl]
   1963e:	4499      	add	r9, r3
   19640:	2200      	movs	r2, #0
   19642:	2300      	movs	r3, #0
   19644:	4620      	mov	r0, r4
   19646:	4631      	mov	r1, r6
   19648:	f005 fcfc 	bl	1f044 <__aeabi_dcmpeq>
   1964c:	b938      	cbnz	r0, 1965e <__cvt+0xa2>
   1964e:	2230      	movs	r2, #48	; 0x30
   19650:	9b07      	ldr	r3, [sp, #28]
   19652:	4599      	cmp	r9, r3
   19654:	d905      	bls.n	19662 <__cvt+0xa6>
   19656:	1c59      	adds	r1, r3, #1
   19658:	9107      	str	r1, [sp, #28]
   1965a:	701a      	strb	r2, [r3, #0]
   1965c:	e7f8      	b.n	19650 <__cvt+0x94>
   1965e:	f8cd 901c 	str.w	r9, [sp, #28]
   19662:	4640      	mov	r0, r8
   19664:	9b07      	ldr	r3, [sp, #28]
   19666:	9a15      	ldr	r2, [sp, #84]	; 0x54
   19668:	eba3 0308 	sub.w	r3, r3, r8
   1966c:	6013      	str	r3, [r2, #0]
   1966e:	b008      	add	sp, #32
   19670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00019674 <__exponent>:
__exponent():
   19674:	4603      	mov	r3, r0
   19676:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19678:	2900      	cmp	r1, #0
   1967a:	f803 2b02 	strb.w	r2, [r3], #2
   1967e:	bfb6      	itet	lt
   19680:	222d      	movlt	r2, #45	; 0x2d
   19682:	222b      	movge	r2, #43	; 0x2b
   19684:	4249      	neglt	r1, r1
   19686:	2909      	cmp	r1, #9
   19688:	7042      	strb	r2, [r0, #1]
   1968a:	dd21      	ble.n	196d0 <__exponent+0x5c>
   1968c:	f10d 0207 	add.w	r2, sp, #7
   19690:	4617      	mov	r7, r2
   19692:	260a      	movs	r6, #10
   19694:	fb91 f5f6 	sdiv	r5, r1, r6
   19698:	fb06 1115 	mls	r1, r6, r5, r1
   1969c:	2d09      	cmp	r5, #9
   1969e:	f101 0130 	add.w	r1, r1, #48	; 0x30
   196a2:	f802 1c01 	strb.w	r1, [r2, #-1]
   196a6:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   196aa:	4629      	mov	r1, r5
   196ac:	dc09      	bgt.n	196c2 <__exponent+0x4e>
   196ae:	3130      	adds	r1, #48	; 0x30
   196b0:	3a02      	subs	r2, #2
   196b2:	f804 1c01 	strb.w	r1, [r4, #-1]
   196b6:	42ba      	cmp	r2, r7
   196b8:	461c      	mov	r4, r3
   196ba:	d304      	bcc.n	196c6 <__exponent+0x52>
   196bc:	1a20      	subs	r0, r4, r0
   196be:	b003      	add	sp, #12
   196c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   196c2:	4622      	mov	r2, r4
   196c4:	e7e6      	b.n	19694 <__exponent+0x20>
   196c6:	f812 1b01 	ldrb.w	r1, [r2], #1
   196ca:	f803 1b01 	strb.w	r1, [r3], #1
   196ce:	e7f2      	b.n	196b6 <__exponent+0x42>
   196d0:	2230      	movs	r2, #48	; 0x30
   196d2:	461c      	mov	r4, r3
   196d4:	4411      	add	r1, r2
   196d6:	f804 2b02 	strb.w	r2, [r4], #2
   196da:	7059      	strb	r1, [r3, #1]
   196dc:	e7ee      	b.n	196bc <__exponent+0x48>
   196de:	Address 0x00000000000196de is out of bounds.


000196e0 <_printf_float>:
_printf_float():
   196e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   196e4:	b091      	sub	sp, #68	; 0x44
   196e6:	460c      	mov	r4, r1
   196e8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   196ea:	4693      	mov	fp, r2
   196ec:	461e      	mov	r6, r3
   196ee:	4605      	mov	r5, r0
   196f0:	f003 fd62 	bl	1d1b8 <_localeconv_r>
   196f4:	6803      	ldr	r3, [r0, #0]
   196f6:	4618      	mov	r0, r3
   196f8:	9309      	str	r3, [sp, #36]	; 0x24
   196fa:	f001 f8d8 	bl	1a8ae <strlen>
   196fe:	2300      	movs	r3, #0
   19700:	930e      	str	r3, [sp, #56]	; 0x38
   19702:	683b      	ldr	r3, [r7, #0]
   19704:	900a      	str	r0, [sp, #40]	; 0x28
   19706:	3307      	adds	r3, #7
   19708:	f023 0307 	bic.w	r3, r3, #7
   1970c:	f103 0208 	add.w	r2, r3, #8
   19710:	f894 8018 	ldrb.w	r8, [r4, #24]
   19714:	f8d4 a000 	ldr.w	sl, [r4]
   19718:	603a      	str	r2, [r7, #0]
   1971a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1971e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   19722:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   19726:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   19728:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1972c:	930b      	str	r3, [sp, #44]	; 0x2c
   1972e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19732:	4ba6      	ldr	r3, [pc, #664]	; (199cc <_printf_float+0x2ec>)
   19734:	4638      	mov	r0, r7
   19736:	990b      	ldr	r1, [sp, #44]	; 0x2c
   19738:	f005 fcb6 	bl	1f0a8 <__aeabi_dcmpun>
   1973c:	2800      	cmp	r0, #0
   1973e:	f040 81f7 	bne.w	19b30 <_printf_float+0x450>
   19742:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19746:	4ba1      	ldr	r3, [pc, #644]	; (199cc <_printf_float+0x2ec>)
   19748:	4638      	mov	r0, r7
   1974a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1974c:	f005 fc8e 	bl	1f06c <__aeabi_dcmple>
   19750:	2800      	cmp	r0, #0
   19752:	f040 81ed 	bne.w	19b30 <_printf_float+0x450>
   19756:	2200      	movs	r2, #0
   19758:	2300      	movs	r3, #0
   1975a:	4638      	mov	r0, r7
   1975c:	4649      	mov	r1, r9
   1975e:	f005 fc7b 	bl	1f058 <__aeabi_dcmplt>
   19762:	b110      	cbz	r0, 1976a <_printf_float+0x8a>
   19764:	232d      	movs	r3, #45	; 0x2d
   19766:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1976a:	4b99      	ldr	r3, [pc, #612]	; (199d0 <_printf_float+0x2f0>)
   1976c:	4f99      	ldr	r7, [pc, #612]	; (199d4 <_printf_float+0x2f4>)
   1976e:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   19772:	bf98      	it	ls
   19774:	461f      	movls	r7, r3
   19776:	2303      	movs	r3, #3
   19778:	f04f 0900 	mov.w	r9, #0
   1977c:	6123      	str	r3, [r4, #16]
   1977e:	f02a 0304 	bic.w	r3, sl, #4
   19782:	6023      	str	r3, [r4, #0]
   19784:	9600      	str	r6, [sp, #0]
   19786:	465b      	mov	r3, fp
   19788:	aa0f      	add	r2, sp, #60	; 0x3c
   1978a:	4621      	mov	r1, r4
   1978c:	4628      	mov	r0, r5
   1978e:	f000 f9df 	bl	19b50 <_printf_common>
   19792:	3001      	adds	r0, #1
   19794:	f040 809a 	bne.w	198cc <_printf_float+0x1ec>
   19798:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1979c:	b011      	add	sp, #68	; 0x44
   1979e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197a2:	6862      	ldr	r2, [r4, #4]
   197a4:	a80e      	add	r0, sp, #56	; 0x38
   197a6:	1c53      	adds	r3, r2, #1
   197a8:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   197ac:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   197b0:	d141      	bne.n	19836 <_printf_float+0x156>
   197b2:	2206      	movs	r2, #6
   197b4:	6062      	str	r2, [r4, #4]
   197b6:	2100      	movs	r1, #0
   197b8:	6023      	str	r3, [r4, #0]
   197ba:	9301      	str	r3, [sp, #4]
   197bc:	6863      	ldr	r3, [r4, #4]
   197be:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   197c2:	9005      	str	r0, [sp, #20]
   197c4:	9202      	str	r2, [sp, #8]
   197c6:	9300      	str	r3, [sp, #0]
   197c8:	463a      	mov	r2, r7
   197ca:	464b      	mov	r3, r9
   197cc:	9106      	str	r1, [sp, #24]
   197ce:	f8cd 8010 	str.w	r8, [sp, #16]
   197d2:	f8cd e00c 	str.w	lr, [sp, #12]
   197d6:	4628      	mov	r0, r5
   197d8:	f7ff fef0 	bl	195bc <__cvt>
   197dc:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   197e0:	2b47      	cmp	r3, #71	; 0x47
   197e2:	4607      	mov	r7, r0
   197e4:	d109      	bne.n	197fa <_printf_float+0x11a>
   197e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   197e8:	1cd8      	adds	r0, r3, #3
   197ea:	db02      	blt.n	197f2 <_printf_float+0x112>
   197ec:	6862      	ldr	r2, [r4, #4]
   197ee:	4293      	cmp	r3, r2
   197f0:	dd59      	ble.n	198a6 <_printf_float+0x1c6>
   197f2:	f1a8 0802 	sub.w	r8, r8, #2
   197f6:	fa5f f888 	uxtb.w	r8, r8
   197fa:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   197fe:	990d      	ldr	r1, [sp, #52]	; 0x34
   19800:	d836      	bhi.n	19870 <_printf_float+0x190>
   19802:	3901      	subs	r1, #1
   19804:	4642      	mov	r2, r8
   19806:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1980a:	910d      	str	r1, [sp, #52]	; 0x34
   1980c:	f7ff ff32 	bl	19674 <__exponent>
   19810:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19812:	4681      	mov	r9, r0
   19814:	1883      	adds	r3, r0, r2
   19816:	2a01      	cmp	r2, #1
   19818:	6123      	str	r3, [r4, #16]
   1981a:	dc02      	bgt.n	19822 <_printf_float+0x142>
   1981c:	6822      	ldr	r2, [r4, #0]
   1981e:	07d1      	lsls	r1, r2, #31
   19820:	d501      	bpl.n	19826 <_printf_float+0x146>
   19822:	3301      	adds	r3, #1
   19824:	6123      	str	r3, [r4, #16]
   19826:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1982a:	2b00      	cmp	r3, #0
   1982c:	d0aa      	beq.n	19784 <_printf_float+0xa4>
   1982e:	232d      	movs	r3, #45	; 0x2d
   19830:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   19834:	e7a6      	b.n	19784 <_printf_float+0xa4>
   19836:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1983a:	d002      	beq.n	19842 <_printf_float+0x162>
   1983c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   19840:	d1b9      	bne.n	197b6 <_printf_float+0xd6>
   19842:	b19a      	cbz	r2, 1986c <_printf_float+0x18c>
   19844:	2100      	movs	r1, #0
   19846:	9106      	str	r1, [sp, #24]
   19848:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1984c:	e88d 000c 	stmia.w	sp, {r2, r3}
   19850:	6023      	str	r3, [r4, #0]
   19852:	9005      	str	r0, [sp, #20]
   19854:	463a      	mov	r2, r7
   19856:	f8cd 8010 	str.w	r8, [sp, #16]
   1985a:	f8cd e00c 	str.w	lr, [sp, #12]
   1985e:	9102      	str	r1, [sp, #8]
   19860:	464b      	mov	r3, r9
   19862:	4628      	mov	r0, r5
   19864:	f7ff feaa 	bl	195bc <__cvt>
   19868:	4607      	mov	r7, r0
   1986a:	e7bc      	b.n	197e6 <_printf_float+0x106>
   1986c:	2201      	movs	r2, #1
   1986e:	e7a1      	b.n	197b4 <_printf_float+0xd4>
   19870:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   19874:	d119      	bne.n	198aa <_printf_float+0x1ca>
   19876:	2900      	cmp	r1, #0
   19878:	6863      	ldr	r3, [r4, #4]
   1987a:	dd0c      	ble.n	19896 <_printf_float+0x1b6>
   1987c:	6121      	str	r1, [r4, #16]
   1987e:	b913      	cbnz	r3, 19886 <_printf_float+0x1a6>
   19880:	6822      	ldr	r2, [r4, #0]
   19882:	07d2      	lsls	r2, r2, #31
   19884:	d502      	bpl.n	1988c <_printf_float+0x1ac>
   19886:	3301      	adds	r3, #1
   19888:	440b      	add	r3, r1
   1988a:	6123      	str	r3, [r4, #16]
   1988c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1988e:	f04f 0900 	mov.w	r9, #0
   19892:	65a3      	str	r3, [r4, #88]	; 0x58
   19894:	e7c7      	b.n	19826 <_printf_float+0x146>
   19896:	b913      	cbnz	r3, 1989e <_printf_float+0x1be>
   19898:	6822      	ldr	r2, [r4, #0]
   1989a:	07d0      	lsls	r0, r2, #31
   1989c:	d501      	bpl.n	198a2 <_printf_float+0x1c2>
   1989e:	3302      	adds	r3, #2
   198a0:	e7f3      	b.n	1988a <_printf_float+0x1aa>
   198a2:	2301      	movs	r3, #1
   198a4:	e7f1      	b.n	1988a <_printf_float+0x1aa>
   198a6:	f04f 0867 	mov.w	r8, #103	; 0x67
   198aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   198ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   198ae:	4293      	cmp	r3, r2
   198b0:	db05      	blt.n	198be <_printf_float+0x1de>
   198b2:	6822      	ldr	r2, [r4, #0]
   198b4:	6123      	str	r3, [r4, #16]
   198b6:	07d1      	lsls	r1, r2, #31
   198b8:	d5e8      	bpl.n	1988c <_printf_float+0x1ac>
   198ba:	3301      	adds	r3, #1
   198bc:	e7e5      	b.n	1988a <_printf_float+0x1aa>
   198be:	2b00      	cmp	r3, #0
   198c0:	bfcc      	ite	gt
   198c2:	2301      	movgt	r3, #1
   198c4:	f1c3 0302 	rsble	r3, r3, #2
   198c8:	4413      	add	r3, r2
   198ca:	e7de      	b.n	1988a <_printf_float+0x1aa>
   198cc:	6823      	ldr	r3, [r4, #0]
   198ce:	055a      	lsls	r2, r3, #21
   198d0:	d407      	bmi.n	198e2 <_printf_float+0x202>
   198d2:	6923      	ldr	r3, [r4, #16]
   198d4:	463a      	mov	r2, r7
   198d6:	4659      	mov	r1, fp
   198d8:	4628      	mov	r0, r5
   198da:	47b0      	blx	r6
   198dc:	3001      	adds	r0, #1
   198de:	d12a      	bne.n	19936 <_printf_float+0x256>
   198e0:	e75a      	b.n	19798 <_printf_float+0xb8>
   198e2:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   198e6:	f240 80dc 	bls.w	19aa2 <_printf_float+0x3c2>
   198ea:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   198ee:	2200      	movs	r2, #0
   198f0:	2300      	movs	r3, #0
   198f2:	f005 fba7 	bl	1f044 <__aeabi_dcmpeq>
   198f6:	2800      	cmp	r0, #0
   198f8:	d039      	beq.n	1996e <_printf_float+0x28e>
   198fa:	2301      	movs	r3, #1
   198fc:	4a36      	ldr	r2, [pc, #216]	; (199d8 <_printf_float+0x2f8>)
   198fe:	4659      	mov	r1, fp
   19900:	4628      	mov	r0, r5
   19902:	47b0      	blx	r6
   19904:	3001      	adds	r0, #1
   19906:	f43f af47 	beq.w	19798 <_printf_float+0xb8>
   1990a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1990c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1990e:	429a      	cmp	r2, r3
   19910:	db02      	blt.n	19918 <_printf_float+0x238>
   19912:	6823      	ldr	r3, [r4, #0]
   19914:	07d8      	lsls	r0, r3, #31
   19916:	d50e      	bpl.n	19936 <_printf_float+0x256>
   19918:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1991a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1991c:	4659      	mov	r1, fp
   1991e:	4628      	mov	r0, r5
   19920:	47b0      	blx	r6
   19922:	3001      	adds	r0, #1
   19924:	f43f af38 	beq.w	19798 <_printf_float+0xb8>
   19928:	2700      	movs	r7, #0
   1992a:	f104 081a 	add.w	r8, r4, #26
   1992e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19930:	3b01      	subs	r3, #1
   19932:	429f      	cmp	r7, r3
   19934:	db11      	blt.n	1995a <_printf_float+0x27a>
   19936:	6823      	ldr	r3, [r4, #0]
   19938:	079f      	lsls	r7, r3, #30
   1993a:	d508      	bpl.n	1994e <_printf_float+0x26e>
   1993c:	2700      	movs	r7, #0
   1993e:	f104 0819 	add.w	r8, r4, #25
   19942:	68e3      	ldr	r3, [r4, #12]
   19944:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   19946:	1a9b      	subs	r3, r3, r2
   19948:	429f      	cmp	r7, r3
   1994a:	f2c0 80e7 	blt.w	19b1c <_printf_float+0x43c>
   1994e:	68e0      	ldr	r0, [r4, #12]
   19950:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   19952:	4298      	cmp	r0, r3
   19954:	bfb8      	it	lt
   19956:	4618      	movlt	r0, r3
   19958:	e720      	b.n	1979c <_printf_float+0xbc>
   1995a:	2301      	movs	r3, #1
   1995c:	4642      	mov	r2, r8
   1995e:	4659      	mov	r1, fp
   19960:	4628      	mov	r0, r5
   19962:	47b0      	blx	r6
   19964:	3001      	adds	r0, #1
   19966:	f43f af17 	beq.w	19798 <_printf_float+0xb8>
   1996a:	3701      	adds	r7, #1
   1996c:	e7df      	b.n	1992e <_printf_float+0x24e>
   1996e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19970:	2b00      	cmp	r3, #0
   19972:	dc33      	bgt.n	199dc <_printf_float+0x2fc>
   19974:	2301      	movs	r3, #1
   19976:	4a18      	ldr	r2, [pc, #96]	; (199d8 <_printf_float+0x2f8>)
   19978:	4659      	mov	r1, fp
   1997a:	4628      	mov	r0, r5
   1997c:	47b0      	blx	r6
   1997e:	3001      	adds	r0, #1
   19980:	f43f af0a 	beq.w	19798 <_printf_float+0xb8>
   19984:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19986:	b923      	cbnz	r3, 19992 <_printf_float+0x2b2>
   19988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1998a:	b913      	cbnz	r3, 19992 <_printf_float+0x2b2>
   1998c:	6823      	ldr	r3, [r4, #0]
   1998e:	07d9      	lsls	r1, r3, #31
   19990:	d5d1      	bpl.n	19936 <_printf_float+0x256>
   19992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19994:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19996:	4659      	mov	r1, fp
   19998:	4628      	mov	r0, r5
   1999a:	47b0      	blx	r6
   1999c:	3001      	adds	r0, #1
   1999e:	f43f aefb 	beq.w	19798 <_printf_float+0xb8>
   199a2:	f04f 0800 	mov.w	r8, #0
   199a6:	f104 091a 	add.w	r9, r4, #26
   199aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   199ac:	425b      	negs	r3, r3
   199ae:	4598      	cmp	r8, r3
   199b0:	db01      	blt.n	199b6 <_printf_float+0x2d6>
   199b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   199b4:	e78e      	b.n	198d4 <_printf_float+0x1f4>
   199b6:	2301      	movs	r3, #1
   199b8:	464a      	mov	r2, r9
   199ba:	4659      	mov	r1, fp
   199bc:	4628      	mov	r0, r5
   199be:	47b0      	blx	r6
   199c0:	3001      	adds	r0, #1
   199c2:	f43f aee9 	beq.w	19798 <_printf_float+0xb8>
   199c6:	f108 0801 	add.w	r8, r8, #1
   199ca:	e7ee      	b.n	199aa <_printf_float+0x2ca>
   199cc:	7fefffff 	.word	0x7fefffff
   199d0:	00020358 	.word	0x00020358
   199d4:	0002035c 	.word	0x0002035c
   199d8:	0001f3d6 	.word	0x0001f3d6
   199dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   199de:	6da3      	ldr	r3, [r4, #88]	; 0x58
   199e0:	429a      	cmp	r2, r3
   199e2:	bfa8      	it	ge
   199e4:	461a      	movge	r2, r3
   199e6:	2a00      	cmp	r2, #0
   199e8:	4690      	mov	r8, r2
   199ea:	dc36      	bgt.n	19a5a <_printf_float+0x37a>
   199ec:	f04f 0a00 	mov.w	sl, #0
   199f0:	f104 031a 	add.w	r3, r4, #26
   199f4:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   199f8:	930b      	str	r3, [sp, #44]	; 0x2c
   199fa:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   199fe:	eba9 0308 	sub.w	r3, r9, r8
   19a02:	459a      	cmp	sl, r3
   19a04:	db31      	blt.n	19a6a <_printf_float+0x38a>
   19a06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19a08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19a0a:	429a      	cmp	r2, r3
   19a0c:	db38      	blt.n	19a80 <_printf_float+0x3a0>
   19a0e:	6823      	ldr	r3, [r4, #0]
   19a10:	07da      	lsls	r2, r3, #31
   19a12:	d435      	bmi.n	19a80 <_printf_float+0x3a0>
   19a14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19a16:	990d      	ldr	r1, [sp, #52]	; 0x34
   19a18:	eba3 0209 	sub.w	r2, r3, r9
   19a1c:	eba3 0801 	sub.w	r8, r3, r1
   19a20:	4590      	cmp	r8, r2
   19a22:	bfa8      	it	ge
   19a24:	4690      	movge	r8, r2
   19a26:	f1b8 0f00 	cmp.w	r8, #0
   19a2a:	dc31      	bgt.n	19a90 <_printf_float+0x3b0>
   19a2c:	2700      	movs	r7, #0
   19a2e:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   19a32:	f104 091a 	add.w	r9, r4, #26
   19a36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19a38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19a3a:	1a9b      	subs	r3, r3, r2
   19a3c:	eba3 0308 	sub.w	r3, r3, r8
   19a40:	429f      	cmp	r7, r3
   19a42:	f6bf af78 	bge.w	19936 <_printf_float+0x256>
   19a46:	2301      	movs	r3, #1
   19a48:	464a      	mov	r2, r9
   19a4a:	4659      	mov	r1, fp
   19a4c:	4628      	mov	r0, r5
   19a4e:	47b0      	blx	r6
   19a50:	3001      	adds	r0, #1
   19a52:	f43f aea1 	beq.w	19798 <_printf_float+0xb8>
   19a56:	3701      	adds	r7, #1
   19a58:	e7ed      	b.n	19a36 <_printf_float+0x356>
   19a5a:	4613      	mov	r3, r2
   19a5c:	4659      	mov	r1, fp
   19a5e:	463a      	mov	r2, r7
   19a60:	4628      	mov	r0, r5
   19a62:	47b0      	blx	r6
   19a64:	3001      	adds	r0, #1
   19a66:	d1c1      	bne.n	199ec <_printf_float+0x30c>
   19a68:	e696      	b.n	19798 <_printf_float+0xb8>
   19a6a:	2301      	movs	r3, #1
   19a6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   19a6e:	4659      	mov	r1, fp
   19a70:	4628      	mov	r0, r5
   19a72:	47b0      	blx	r6
   19a74:	3001      	adds	r0, #1
   19a76:	f43f ae8f 	beq.w	19798 <_printf_float+0xb8>
   19a7a:	f10a 0a01 	add.w	sl, sl, #1
   19a7e:	e7bc      	b.n	199fa <_printf_float+0x31a>
   19a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19a82:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19a84:	4659      	mov	r1, fp
   19a86:	4628      	mov	r0, r5
   19a88:	47b0      	blx	r6
   19a8a:	3001      	adds	r0, #1
   19a8c:	d1c2      	bne.n	19a14 <_printf_float+0x334>
   19a8e:	e683      	b.n	19798 <_printf_float+0xb8>
   19a90:	4643      	mov	r3, r8
   19a92:	eb07 0209 	add.w	r2, r7, r9
   19a96:	4659      	mov	r1, fp
   19a98:	4628      	mov	r0, r5
   19a9a:	47b0      	blx	r6
   19a9c:	3001      	adds	r0, #1
   19a9e:	d1c5      	bne.n	19a2c <_printf_float+0x34c>
   19aa0:	e67a      	b.n	19798 <_printf_float+0xb8>
   19aa2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19aa4:	2a01      	cmp	r2, #1
   19aa6:	dc01      	bgt.n	19aac <_printf_float+0x3cc>
   19aa8:	07db      	lsls	r3, r3, #31
   19aaa:	d534      	bpl.n	19b16 <_printf_float+0x436>
   19aac:	2301      	movs	r3, #1
   19aae:	463a      	mov	r2, r7
   19ab0:	4659      	mov	r1, fp
   19ab2:	4628      	mov	r0, r5
   19ab4:	47b0      	blx	r6
   19ab6:	3001      	adds	r0, #1
   19ab8:	f43f ae6e 	beq.w	19798 <_printf_float+0xb8>
   19abc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19abe:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19ac0:	4659      	mov	r1, fp
   19ac2:	4628      	mov	r0, r5
   19ac4:	47b0      	blx	r6
   19ac6:	3001      	adds	r0, #1
   19ac8:	f43f ae66 	beq.w	19798 <_printf_float+0xb8>
   19acc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   19ad0:	2200      	movs	r2, #0
   19ad2:	2300      	movs	r3, #0
   19ad4:	f005 fab6 	bl	1f044 <__aeabi_dcmpeq>
   19ad8:	b150      	cbz	r0, 19af0 <_printf_float+0x410>
   19ada:	2700      	movs	r7, #0
   19adc:	f104 081a 	add.w	r8, r4, #26
   19ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19ae2:	3b01      	subs	r3, #1
   19ae4:	429f      	cmp	r7, r3
   19ae6:	db0c      	blt.n	19b02 <_printf_float+0x422>
   19ae8:	464b      	mov	r3, r9
   19aea:	f104 0250 	add.w	r2, r4, #80	; 0x50
   19aee:	e6f2      	b.n	198d6 <_printf_float+0x1f6>
   19af0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19af2:	1c7a      	adds	r2, r7, #1
   19af4:	3b01      	subs	r3, #1
   19af6:	4659      	mov	r1, fp
   19af8:	4628      	mov	r0, r5
   19afa:	47b0      	blx	r6
   19afc:	3001      	adds	r0, #1
   19afe:	d1f3      	bne.n	19ae8 <_printf_float+0x408>
   19b00:	e64a      	b.n	19798 <_printf_float+0xb8>
   19b02:	2301      	movs	r3, #1
   19b04:	4642      	mov	r2, r8
   19b06:	4659      	mov	r1, fp
   19b08:	4628      	mov	r0, r5
   19b0a:	47b0      	blx	r6
   19b0c:	3001      	adds	r0, #1
   19b0e:	f43f ae43 	beq.w	19798 <_printf_float+0xb8>
   19b12:	3701      	adds	r7, #1
   19b14:	e7e4      	b.n	19ae0 <_printf_float+0x400>
   19b16:	2301      	movs	r3, #1
   19b18:	463a      	mov	r2, r7
   19b1a:	e7ec      	b.n	19af6 <_printf_float+0x416>
   19b1c:	2301      	movs	r3, #1
   19b1e:	4642      	mov	r2, r8
   19b20:	4659      	mov	r1, fp
   19b22:	4628      	mov	r0, r5
   19b24:	47b0      	blx	r6
   19b26:	3001      	adds	r0, #1
   19b28:	f43f ae36 	beq.w	19798 <_printf_float+0xb8>
   19b2c:	3701      	adds	r7, #1
   19b2e:	e708      	b.n	19942 <_printf_float+0x262>
   19b30:	463a      	mov	r2, r7
   19b32:	464b      	mov	r3, r9
   19b34:	4638      	mov	r0, r7
   19b36:	4649      	mov	r1, r9
   19b38:	f005 fab6 	bl	1f0a8 <__aeabi_dcmpun>
   19b3c:	2800      	cmp	r0, #0
   19b3e:	f43f ae30 	beq.w	197a2 <_printf_float+0xc2>
   19b42:	4b01      	ldr	r3, [pc, #4]	; (19b48 <_printf_float+0x468>)
   19b44:	4f01      	ldr	r7, [pc, #4]	; (19b4c <_printf_float+0x46c>)
   19b46:	e612      	b.n	1976e <_printf_float+0x8e>
   19b48:	00020360 	.word	0x00020360
   19b4c:	00020364 	.word	0x00020364

00019b50 <_printf_common>:
_printf_common():
   19b50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   19b54:	4691      	mov	r9, r2
   19b56:	461f      	mov	r7, r3
   19b58:	688a      	ldr	r2, [r1, #8]
   19b5a:	690b      	ldr	r3, [r1, #16]
   19b5c:	4606      	mov	r6, r0
   19b5e:	4293      	cmp	r3, r2
   19b60:	bfb8      	it	lt
   19b62:	4613      	movlt	r3, r2
   19b64:	f8c9 3000 	str.w	r3, [r9]
   19b68:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   19b6c:	460c      	mov	r4, r1
   19b6e:	f8dd 8020 	ldr.w	r8, [sp, #32]
   19b72:	b112      	cbz	r2, 19b7a <_printf_common+0x2a>
   19b74:	3301      	adds	r3, #1
   19b76:	f8c9 3000 	str.w	r3, [r9]
   19b7a:	6823      	ldr	r3, [r4, #0]
   19b7c:	0699      	lsls	r1, r3, #26
   19b7e:	bf42      	ittt	mi
   19b80:	f8d9 3000 	ldrmi.w	r3, [r9]
   19b84:	3302      	addmi	r3, #2
   19b86:	f8c9 3000 	strmi.w	r3, [r9]
   19b8a:	6825      	ldr	r5, [r4, #0]
   19b8c:	f015 0506 	ands.w	r5, r5, #6
   19b90:	d107      	bne.n	19ba2 <_printf_common+0x52>
   19b92:	f104 0a19 	add.w	sl, r4, #25
   19b96:	68e3      	ldr	r3, [r4, #12]
   19b98:	f8d9 2000 	ldr.w	r2, [r9]
   19b9c:	1a9b      	subs	r3, r3, r2
   19b9e:	429d      	cmp	r5, r3
   19ba0:	db2a      	blt.n	19bf8 <_printf_common+0xa8>
   19ba2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   19ba6:	6822      	ldr	r2, [r4, #0]
   19ba8:	3300      	adds	r3, #0
   19baa:	bf18      	it	ne
   19bac:	2301      	movne	r3, #1
   19bae:	0692      	lsls	r2, r2, #26
   19bb0:	d42f      	bmi.n	19c12 <_printf_common+0xc2>
   19bb2:	f104 0243 	add.w	r2, r4, #67	; 0x43
   19bb6:	4639      	mov	r1, r7
   19bb8:	4630      	mov	r0, r6
   19bba:	47c0      	blx	r8
   19bbc:	3001      	adds	r0, #1
   19bbe:	d022      	beq.n	19c06 <_printf_common+0xb6>
   19bc0:	6823      	ldr	r3, [r4, #0]
   19bc2:	68e5      	ldr	r5, [r4, #12]
   19bc4:	f003 0306 	and.w	r3, r3, #6
   19bc8:	2b04      	cmp	r3, #4
   19bca:	bf18      	it	ne
   19bcc:	2500      	movne	r5, #0
   19bce:	f8d9 2000 	ldr.w	r2, [r9]
   19bd2:	f04f 0900 	mov.w	r9, #0
   19bd6:	bf08      	it	eq
   19bd8:	1aad      	subeq	r5, r5, r2
   19bda:	68a3      	ldr	r3, [r4, #8]
   19bdc:	6922      	ldr	r2, [r4, #16]
   19bde:	bf08      	it	eq
   19be0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   19be4:	4293      	cmp	r3, r2
   19be6:	bfc4      	itt	gt
   19be8:	1a9b      	subgt	r3, r3, r2
   19bea:	18ed      	addgt	r5, r5, r3
   19bec:	341a      	adds	r4, #26
   19bee:	454d      	cmp	r5, r9
   19bf0:	d11b      	bne.n	19c2a <_printf_common+0xda>
   19bf2:	2000      	movs	r0, #0
   19bf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19bf8:	2301      	movs	r3, #1
   19bfa:	4652      	mov	r2, sl
   19bfc:	4639      	mov	r1, r7
   19bfe:	4630      	mov	r0, r6
   19c00:	47c0      	blx	r8
   19c02:	3001      	adds	r0, #1
   19c04:	d103      	bne.n	19c0e <_printf_common+0xbe>
   19c06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19c0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19c0e:	3501      	adds	r5, #1
   19c10:	e7c1      	b.n	19b96 <_printf_common+0x46>
   19c12:	2030      	movs	r0, #48	; 0x30
   19c14:	18e1      	adds	r1, r4, r3
   19c16:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   19c1a:	1c5a      	adds	r2, r3, #1
   19c1c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   19c20:	4422      	add	r2, r4
   19c22:	3302      	adds	r3, #2
   19c24:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   19c28:	e7c3      	b.n	19bb2 <_printf_common+0x62>
   19c2a:	2301      	movs	r3, #1
   19c2c:	4622      	mov	r2, r4
   19c2e:	4639      	mov	r1, r7
   19c30:	4630      	mov	r0, r6
   19c32:	47c0      	blx	r8
   19c34:	3001      	adds	r0, #1
   19c36:	d0e6      	beq.n	19c06 <_printf_common+0xb6>
   19c38:	f109 0901 	add.w	r9, r9, #1
   19c3c:	e7d7      	b.n	19bee <_printf_common+0x9e>
   19c3e:	Address 0x0000000000019c3e is out of bounds.


00019c40 <_printf_i>:
_printf_i():
   19c40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   19c44:	4617      	mov	r7, r2
   19c46:	7e0a      	ldrb	r2, [r1, #24]
   19c48:	b085      	sub	sp, #20
   19c4a:	2a6e      	cmp	r2, #110	; 0x6e
   19c4c:	4698      	mov	r8, r3
   19c4e:	4606      	mov	r6, r0
   19c50:	460c      	mov	r4, r1
   19c52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   19c54:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   19c58:	f000 80bc 	beq.w	19dd4 <_printf_i+0x194>
   19c5c:	d81a      	bhi.n	19c94 <_printf_i+0x54>
   19c5e:	2a63      	cmp	r2, #99	; 0x63
   19c60:	d02e      	beq.n	19cc0 <_printf_i+0x80>
   19c62:	d80a      	bhi.n	19c7a <_printf_i+0x3a>
   19c64:	2a00      	cmp	r2, #0
   19c66:	f000 80c8 	beq.w	19dfa <_printf_i+0x1ba>
   19c6a:	2a58      	cmp	r2, #88	; 0x58
   19c6c:	f000 808a 	beq.w	19d84 <_printf_i+0x144>
   19c70:	f104 0542 	add.w	r5, r4, #66	; 0x42
   19c74:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   19c78:	e02a      	b.n	19cd0 <_printf_i+0x90>
   19c7a:	2a64      	cmp	r2, #100	; 0x64
   19c7c:	d001      	beq.n	19c82 <_printf_i+0x42>
   19c7e:	2a69      	cmp	r2, #105	; 0x69
   19c80:	d1f6      	bne.n	19c70 <_printf_i+0x30>
   19c82:	6821      	ldr	r1, [r4, #0]
   19c84:	681a      	ldr	r2, [r3, #0]
   19c86:	f011 0f80 	tst.w	r1, #128	; 0x80
   19c8a:	d023      	beq.n	19cd4 <_printf_i+0x94>
   19c8c:	1d11      	adds	r1, r2, #4
   19c8e:	6019      	str	r1, [r3, #0]
   19c90:	6813      	ldr	r3, [r2, #0]
   19c92:	e027      	b.n	19ce4 <_printf_i+0xa4>
   19c94:	2a73      	cmp	r2, #115	; 0x73
   19c96:	f000 80b4 	beq.w	19e02 <_printf_i+0x1c2>
   19c9a:	d808      	bhi.n	19cae <_printf_i+0x6e>
   19c9c:	2a6f      	cmp	r2, #111	; 0x6f
   19c9e:	d02a      	beq.n	19cf6 <_printf_i+0xb6>
   19ca0:	2a70      	cmp	r2, #112	; 0x70
   19ca2:	d1e5      	bne.n	19c70 <_printf_i+0x30>
   19ca4:	680a      	ldr	r2, [r1, #0]
   19ca6:	f042 0220 	orr.w	r2, r2, #32
   19caa:	600a      	str	r2, [r1, #0]
   19cac:	e003      	b.n	19cb6 <_printf_i+0x76>
   19cae:	2a75      	cmp	r2, #117	; 0x75
   19cb0:	d021      	beq.n	19cf6 <_printf_i+0xb6>
   19cb2:	2a78      	cmp	r2, #120	; 0x78
   19cb4:	d1dc      	bne.n	19c70 <_printf_i+0x30>
   19cb6:	2278      	movs	r2, #120	; 0x78
   19cb8:	496f      	ldr	r1, [pc, #444]	; (19e78 <_printf_i+0x238>)
   19cba:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   19cbe:	e064      	b.n	19d8a <_printf_i+0x14a>
   19cc0:	681a      	ldr	r2, [r3, #0]
   19cc2:	f101 0542 	add.w	r5, r1, #66	; 0x42
   19cc6:	1d11      	adds	r1, r2, #4
   19cc8:	6019      	str	r1, [r3, #0]
   19cca:	6813      	ldr	r3, [r2, #0]
   19ccc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   19cd0:	2301      	movs	r3, #1
   19cd2:	e0a3      	b.n	19e1c <_printf_i+0x1dc>
   19cd4:	f011 0f40 	tst.w	r1, #64	; 0x40
   19cd8:	f102 0104 	add.w	r1, r2, #4
   19cdc:	6019      	str	r1, [r3, #0]
   19cde:	d0d7      	beq.n	19c90 <_printf_i+0x50>
   19ce0:	f9b2 3000 	ldrsh.w	r3, [r2]
   19ce4:	2b00      	cmp	r3, #0
   19ce6:	da03      	bge.n	19cf0 <_printf_i+0xb0>
   19ce8:	222d      	movs	r2, #45	; 0x2d
   19cea:	425b      	negs	r3, r3
   19cec:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   19cf0:	4962      	ldr	r1, [pc, #392]	; (19e7c <_printf_i+0x23c>)
   19cf2:	220a      	movs	r2, #10
   19cf4:	e017      	b.n	19d26 <_printf_i+0xe6>
   19cf6:	6820      	ldr	r0, [r4, #0]
   19cf8:	6819      	ldr	r1, [r3, #0]
   19cfa:	f010 0f80 	tst.w	r0, #128	; 0x80
   19cfe:	d003      	beq.n	19d08 <_printf_i+0xc8>
   19d00:	1d08      	adds	r0, r1, #4
   19d02:	6018      	str	r0, [r3, #0]
   19d04:	680b      	ldr	r3, [r1, #0]
   19d06:	e006      	b.n	19d16 <_printf_i+0xd6>
   19d08:	f010 0f40 	tst.w	r0, #64	; 0x40
   19d0c:	f101 0004 	add.w	r0, r1, #4
   19d10:	6018      	str	r0, [r3, #0]
   19d12:	d0f7      	beq.n	19d04 <_printf_i+0xc4>
   19d14:	880b      	ldrh	r3, [r1, #0]
   19d16:	2a6f      	cmp	r2, #111	; 0x6f
   19d18:	bf14      	ite	ne
   19d1a:	220a      	movne	r2, #10
   19d1c:	2208      	moveq	r2, #8
   19d1e:	4957      	ldr	r1, [pc, #348]	; (19e7c <_printf_i+0x23c>)
   19d20:	2000      	movs	r0, #0
   19d22:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   19d26:	6865      	ldr	r5, [r4, #4]
   19d28:	2d00      	cmp	r5, #0
   19d2a:	60a5      	str	r5, [r4, #8]
   19d2c:	f2c0 809c 	blt.w	19e68 <_printf_i+0x228>
   19d30:	6820      	ldr	r0, [r4, #0]
   19d32:	f020 0004 	bic.w	r0, r0, #4
   19d36:	6020      	str	r0, [r4, #0]
   19d38:	2b00      	cmp	r3, #0
   19d3a:	d13f      	bne.n	19dbc <_printf_i+0x17c>
   19d3c:	2d00      	cmp	r5, #0
   19d3e:	f040 8095 	bne.w	19e6c <_printf_i+0x22c>
   19d42:	4675      	mov	r5, lr
   19d44:	2a08      	cmp	r2, #8
   19d46:	d10b      	bne.n	19d60 <_printf_i+0x120>
   19d48:	6823      	ldr	r3, [r4, #0]
   19d4a:	07da      	lsls	r2, r3, #31
   19d4c:	d508      	bpl.n	19d60 <_printf_i+0x120>
   19d4e:	6923      	ldr	r3, [r4, #16]
   19d50:	6862      	ldr	r2, [r4, #4]
   19d52:	429a      	cmp	r2, r3
   19d54:	bfde      	ittt	le
   19d56:	2330      	movle	r3, #48	; 0x30
   19d58:	f805 3c01 	strble.w	r3, [r5, #-1]
   19d5c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   19d60:	ebae 0305 	sub.w	r3, lr, r5
   19d64:	6123      	str	r3, [r4, #16]
   19d66:	f8cd 8000 	str.w	r8, [sp]
   19d6a:	463b      	mov	r3, r7
   19d6c:	aa03      	add	r2, sp, #12
   19d6e:	4621      	mov	r1, r4
   19d70:	4630      	mov	r0, r6
   19d72:	f7ff feed 	bl	19b50 <_printf_common>
   19d76:	3001      	adds	r0, #1
   19d78:	d155      	bne.n	19e26 <_printf_i+0x1e6>
   19d7a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19d7e:	b005      	add	sp, #20
   19d80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   19d84:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   19d88:	493c      	ldr	r1, [pc, #240]	; (19e7c <_printf_i+0x23c>)
   19d8a:	6822      	ldr	r2, [r4, #0]
   19d8c:	6818      	ldr	r0, [r3, #0]
   19d8e:	f012 0f80 	tst.w	r2, #128	; 0x80
   19d92:	f100 0504 	add.w	r5, r0, #4
   19d96:	601d      	str	r5, [r3, #0]
   19d98:	d001      	beq.n	19d9e <_printf_i+0x15e>
   19d9a:	6803      	ldr	r3, [r0, #0]
   19d9c:	e002      	b.n	19da4 <_printf_i+0x164>
   19d9e:	0655      	lsls	r5, r2, #25
   19da0:	d5fb      	bpl.n	19d9a <_printf_i+0x15a>
   19da2:	8803      	ldrh	r3, [r0, #0]
   19da4:	07d0      	lsls	r0, r2, #31
   19da6:	bf44      	itt	mi
   19da8:	f042 0220 	orrmi.w	r2, r2, #32
   19dac:	6022      	strmi	r2, [r4, #0]
   19dae:	b91b      	cbnz	r3, 19db8 <_printf_i+0x178>
   19db0:	6822      	ldr	r2, [r4, #0]
   19db2:	f022 0220 	bic.w	r2, r2, #32
   19db6:	6022      	str	r2, [r4, #0]
   19db8:	2210      	movs	r2, #16
   19dba:	e7b1      	b.n	19d20 <_printf_i+0xe0>
   19dbc:	4675      	mov	r5, lr
   19dbe:	fbb3 f0f2 	udiv	r0, r3, r2
   19dc2:	fb02 3310 	mls	r3, r2, r0, r3
   19dc6:	5ccb      	ldrb	r3, [r1, r3]
   19dc8:	f805 3d01 	strb.w	r3, [r5, #-1]!
   19dcc:	4603      	mov	r3, r0
   19dce:	2800      	cmp	r0, #0
   19dd0:	d1f5      	bne.n	19dbe <_printf_i+0x17e>
   19dd2:	e7b7      	b.n	19d44 <_printf_i+0x104>
   19dd4:	6808      	ldr	r0, [r1, #0]
   19dd6:	681a      	ldr	r2, [r3, #0]
   19dd8:	f010 0f80 	tst.w	r0, #128	; 0x80
   19ddc:	6949      	ldr	r1, [r1, #20]
   19dde:	d004      	beq.n	19dea <_printf_i+0x1aa>
   19de0:	1d10      	adds	r0, r2, #4
   19de2:	6018      	str	r0, [r3, #0]
   19de4:	6813      	ldr	r3, [r2, #0]
   19de6:	6019      	str	r1, [r3, #0]
   19de8:	e007      	b.n	19dfa <_printf_i+0x1ba>
   19dea:	f010 0f40 	tst.w	r0, #64	; 0x40
   19dee:	f102 0004 	add.w	r0, r2, #4
   19df2:	6018      	str	r0, [r3, #0]
   19df4:	6813      	ldr	r3, [r2, #0]
   19df6:	d0f6      	beq.n	19de6 <_printf_i+0x1a6>
   19df8:	8019      	strh	r1, [r3, #0]
   19dfa:	2300      	movs	r3, #0
   19dfc:	4675      	mov	r5, lr
   19dfe:	6123      	str	r3, [r4, #16]
   19e00:	e7b1      	b.n	19d66 <_printf_i+0x126>
   19e02:	681a      	ldr	r2, [r3, #0]
   19e04:	1d11      	adds	r1, r2, #4
   19e06:	6019      	str	r1, [r3, #0]
   19e08:	6815      	ldr	r5, [r2, #0]
   19e0a:	2100      	movs	r1, #0
   19e0c:	6862      	ldr	r2, [r4, #4]
   19e0e:	4628      	mov	r0, r5
   19e10:	f7ff f83a 	bl	18e88 <memchr>
   19e14:	b108      	cbz	r0, 19e1a <_printf_i+0x1da>
   19e16:	1b40      	subs	r0, r0, r5
   19e18:	6060      	str	r0, [r4, #4]
   19e1a:	6863      	ldr	r3, [r4, #4]
   19e1c:	6123      	str	r3, [r4, #16]
   19e1e:	2300      	movs	r3, #0
   19e20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   19e24:	e79f      	b.n	19d66 <_printf_i+0x126>
   19e26:	6923      	ldr	r3, [r4, #16]
   19e28:	462a      	mov	r2, r5
   19e2a:	4639      	mov	r1, r7
   19e2c:	4630      	mov	r0, r6
   19e2e:	47c0      	blx	r8
   19e30:	3001      	adds	r0, #1
   19e32:	d0a2      	beq.n	19d7a <_printf_i+0x13a>
   19e34:	6823      	ldr	r3, [r4, #0]
   19e36:	079b      	lsls	r3, r3, #30
   19e38:	d507      	bpl.n	19e4a <_printf_i+0x20a>
   19e3a:	2500      	movs	r5, #0
   19e3c:	f104 0919 	add.w	r9, r4, #25
   19e40:	68e3      	ldr	r3, [r4, #12]
   19e42:	9a03      	ldr	r2, [sp, #12]
   19e44:	1a9b      	subs	r3, r3, r2
   19e46:	429d      	cmp	r5, r3
   19e48:	db05      	blt.n	19e56 <_printf_i+0x216>
   19e4a:	68e0      	ldr	r0, [r4, #12]
   19e4c:	9b03      	ldr	r3, [sp, #12]
   19e4e:	4298      	cmp	r0, r3
   19e50:	bfb8      	it	lt
   19e52:	4618      	movlt	r0, r3
   19e54:	e793      	b.n	19d7e <_printf_i+0x13e>
   19e56:	2301      	movs	r3, #1
   19e58:	464a      	mov	r2, r9
   19e5a:	4639      	mov	r1, r7
   19e5c:	4630      	mov	r0, r6
   19e5e:	47c0      	blx	r8
   19e60:	3001      	adds	r0, #1
   19e62:	d08a      	beq.n	19d7a <_printf_i+0x13a>
   19e64:	3501      	adds	r5, #1
   19e66:	e7eb      	b.n	19e40 <_printf_i+0x200>
   19e68:	2b00      	cmp	r3, #0
   19e6a:	d1a7      	bne.n	19dbc <_printf_i+0x17c>
   19e6c:	780b      	ldrb	r3, [r1, #0]
   19e6e:	f104 0542 	add.w	r5, r4, #66	; 0x42
   19e72:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   19e76:	e765      	b.n	19d44 <_printf_i+0x104>
   19e78:	00020379 	.word	0x00020379
   19e7c:	00020368 	.word	0x00020368

00019e80 <_scanf_float>:
_scanf_float():
   19e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e84:	469a      	mov	sl, r3
   19e86:	688b      	ldr	r3, [r1, #8]
   19e88:	4616      	mov	r6, r2
   19e8a:	1e5a      	subs	r2, r3, #1
   19e8c:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   19e90:	bf88      	it	hi
   19e92:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   19e96:	b087      	sub	sp, #28
   19e98:	bf85      	ittet	hi
   19e9a:	189b      	addhi	r3, r3, r2
   19e9c:	9301      	strhi	r3, [sp, #4]
   19e9e:	2300      	movls	r3, #0
   19ea0:	f240 135d 	movwhi	r3, #349	; 0x15d
   19ea4:	4688      	mov	r8, r1
   19ea6:	f04f 0b00 	mov.w	fp, #0
   19eaa:	bf8c      	ite	hi
   19eac:	608b      	strhi	r3, [r1, #8]
   19eae:	9301      	strls	r3, [sp, #4]
   19eb0:	680b      	ldr	r3, [r1, #0]
   19eb2:	4607      	mov	r7, r0
   19eb4:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   19eb8:	f848 3b1c 	str.w	r3, [r8], #28
   19ebc:	460c      	mov	r4, r1
   19ebe:	4645      	mov	r5, r8
   19ec0:	465a      	mov	r2, fp
   19ec2:	46d9      	mov	r9, fp
   19ec4:	f8cd b010 	str.w	fp, [sp, #16]
   19ec8:	f8cd b00c 	str.w	fp, [sp, #12]
   19ecc:	f8cd b008 	str.w	fp, [sp, #8]
   19ed0:	68a1      	ldr	r1, [r4, #8]
   19ed2:	b181      	cbz	r1, 19ef6 <_scanf_float+0x76>
   19ed4:	6833      	ldr	r3, [r6, #0]
   19ed6:	781b      	ldrb	r3, [r3, #0]
   19ed8:	2b49      	cmp	r3, #73	; 0x49
   19eda:	d071      	beq.n	19fc0 <_scanf_float+0x140>
   19edc:	d84d      	bhi.n	19f7a <_scanf_float+0xfa>
   19ede:	2b39      	cmp	r3, #57	; 0x39
   19ee0:	d840      	bhi.n	19f64 <_scanf_float+0xe4>
   19ee2:	2b31      	cmp	r3, #49	; 0x31
   19ee4:	f080 8088 	bcs.w	19ff8 <_scanf_float+0x178>
   19ee8:	2b2d      	cmp	r3, #45	; 0x2d
   19eea:	f000 8090 	beq.w	1a00e <_scanf_float+0x18e>
   19eee:	d815      	bhi.n	19f1c <_scanf_float+0x9c>
   19ef0:	2b2b      	cmp	r3, #43	; 0x2b
   19ef2:	f000 808c 	beq.w	1a00e <_scanf_float+0x18e>
   19ef6:	f1b9 0f00 	cmp.w	r9, #0
   19efa:	d003      	beq.n	19f04 <_scanf_float+0x84>
   19efc:	6823      	ldr	r3, [r4, #0]
   19efe:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   19f02:	6023      	str	r3, [r4, #0]
   19f04:	3a01      	subs	r2, #1
   19f06:	2a01      	cmp	r2, #1
   19f08:	f200 80ea 	bhi.w	1a0e0 <_scanf_float+0x260>
   19f0c:	4545      	cmp	r5, r8
   19f0e:	f200 80dc 	bhi.w	1a0ca <_scanf_float+0x24a>
   19f12:	2601      	movs	r6, #1
   19f14:	4630      	mov	r0, r6
   19f16:	b007      	add	sp, #28
   19f18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f1c:	2b2e      	cmp	r3, #46	; 0x2e
   19f1e:	f000 809f 	beq.w	1a060 <_scanf_float+0x1e0>
   19f22:	2b30      	cmp	r3, #48	; 0x30
   19f24:	d1e7      	bne.n	19ef6 <_scanf_float+0x76>
   19f26:	6820      	ldr	r0, [r4, #0]
   19f28:	f410 7f80 	tst.w	r0, #256	; 0x100
   19f2c:	d064      	beq.n	19ff8 <_scanf_float+0x178>
   19f2e:	9b01      	ldr	r3, [sp, #4]
   19f30:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   19f34:	6020      	str	r0, [r4, #0]
   19f36:	f109 0901 	add.w	r9, r9, #1
   19f3a:	b11b      	cbz	r3, 19f44 <_scanf_float+0xc4>
   19f3c:	3b01      	subs	r3, #1
   19f3e:	3101      	adds	r1, #1
   19f40:	9301      	str	r3, [sp, #4]
   19f42:	60a1      	str	r1, [r4, #8]
   19f44:	68a3      	ldr	r3, [r4, #8]
   19f46:	3b01      	subs	r3, #1
   19f48:	60a3      	str	r3, [r4, #8]
   19f4a:	6923      	ldr	r3, [r4, #16]
   19f4c:	3301      	adds	r3, #1
   19f4e:	6123      	str	r3, [r4, #16]
   19f50:	6873      	ldr	r3, [r6, #4]
   19f52:	3b01      	subs	r3, #1
   19f54:	2b00      	cmp	r3, #0
   19f56:	6073      	str	r3, [r6, #4]
   19f58:	f340 80ac 	ble.w	1a0b4 <_scanf_float+0x234>
   19f5c:	6833      	ldr	r3, [r6, #0]
   19f5e:	3301      	adds	r3, #1
   19f60:	6033      	str	r3, [r6, #0]
   19f62:	e7b5      	b.n	19ed0 <_scanf_float+0x50>
   19f64:	2b45      	cmp	r3, #69	; 0x45
   19f66:	f000 8085 	beq.w	1a074 <_scanf_float+0x1f4>
   19f6a:	2b46      	cmp	r3, #70	; 0x46
   19f6c:	d06a      	beq.n	1a044 <_scanf_float+0x1c4>
   19f6e:	2b41      	cmp	r3, #65	; 0x41
   19f70:	d1c1      	bne.n	19ef6 <_scanf_float+0x76>
   19f72:	2a01      	cmp	r2, #1
   19f74:	d1bf      	bne.n	19ef6 <_scanf_float+0x76>
   19f76:	2202      	movs	r2, #2
   19f78:	e046      	b.n	1a008 <_scanf_float+0x188>
   19f7a:	2b65      	cmp	r3, #101	; 0x65
   19f7c:	d07a      	beq.n	1a074 <_scanf_float+0x1f4>
   19f7e:	d818      	bhi.n	19fb2 <_scanf_float+0x132>
   19f80:	2b54      	cmp	r3, #84	; 0x54
   19f82:	d066      	beq.n	1a052 <_scanf_float+0x1d2>
   19f84:	d811      	bhi.n	19faa <_scanf_float+0x12a>
   19f86:	2b4e      	cmp	r3, #78	; 0x4e
   19f88:	d1b5      	bne.n	19ef6 <_scanf_float+0x76>
   19f8a:	2a00      	cmp	r2, #0
   19f8c:	d146      	bne.n	1a01c <_scanf_float+0x19c>
   19f8e:	f1b9 0f00 	cmp.w	r9, #0
   19f92:	d145      	bne.n	1a020 <_scanf_float+0x1a0>
   19f94:	6821      	ldr	r1, [r4, #0]
   19f96:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   19f9a:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   19f9e:	d13f      	bne.n	1a020 <_scanf_float+0x1a0>
   19fa0:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   19fa4:	6021      	str	r1, [r4, #0]
   19fa6:	2201      	movs	r2, #1
   19fa8:	e02e      	b.n	1a008 <_scanf_float+0x188>
   19faa:	2b59      	cmp	r3, #89	; 0x59
   19fac:	d01e      	beq.n	19fec <_scanf_float+0x16c>
   19fae:	2b61      	cmp	r3, #97	; 0x61
   19fb0:	e7de      	b.n	19f70 <_scanf_float+0xf0>
   19fb2:	2b6e      	cmp	r3, #110	; 0x6e
   19fb4:	d0e9      	beq.n	19f8a <_scanf_float+0x10a>
   19fb6:	d815      	bhi.n	19fe4 <_scanf_float+0x164>
   19fb8:	2b66      	cmp	r3, #102	; 0x66
   19fba:	d043      	beq.n	1a044 <_scanf_float+0x1c4>
   19fbc:	2b69      	cmp	r3, #105	; 0x69
   19fbe:	d19a      	bne.n	19ef6 <_scanf_float+0x76>
   19fc0:	f1bb 0f00 	cmp.w	fp, #0
   19fc4:	d138      	bne.n	1a038 <_scanf_float+0x1b8>
   19fc6:	f1b9 0f00 	cmp.w	r9, #0
   19fca:	d197      	bne.n	19efc <_scanf_float+0x7c>
   19fcc:	6821      	ldr	r1, [r4, #0]
   19fce:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   19fd2:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   19fd6:	d195      	bne.n	19f04 <_scanf_float+0x84>
   19fd8:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   19fdc:	6021      	str	r1, [r4, #0]
   19fde:	f04f 0b01 	mov.w	fp, #1
   19fe2:	e011      	b.n	1a008 <_scanf_float+0x188>
   19fe4:	2b74      	cmp	r3, #116	; 0x74
   19fe6:	d034      	beq.n	1a052 <_scanf_float+0x1d2>
   19fe8:	2b79      	cmp	r3, #121	; 0x79
   19fea:	d184      	bne.n	19ef6 <_scanf_float+0x76>
   19fec:	f1bb 0f07 	cmp.w	fp, #7
   19ff0:	d181      	bne.n	19ef6 <_scanf_float+0x76>
   19ff2:	f04f 0b08 	mov.w	fp, #8
   19ff6:	e007      	b.n	1a008 <_scanf_float+0x188>
   19ff8:	eb12 0f0b 	cmn.w	r2, fp
   19ffc:	f47f af7b 	bne.w	19ef6 <_scanf_float+0x76>
   1a000:	6821      	ldr	r1, [r4, #0]
   1a002:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1a006:	6021      	str	r1, [r4, #0]
   1a008:	702b      	strb	r3, [r5, #0]
   1a00a:	3501      	adds	r5, #1
   1a00c:	e79a      	b.n	19f44 <_scanf_float+0xc4>
   1a00e:	6821      	ldr	r1, [r4, #0]
   1a010:	0608      	lsls	r0, r1, #24
   1a012:	f57f af70 	bpl.w	19ef6 <_scanf_float+0x76>
   1a016:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1a01a:	e7f4      	b.n	1a006 <_scanf_float+0x186>
   1a01c:	2a02      	cmp	r2, #2
   1a01e:	d047      	beq.n	1a0b0 <_scanf_float+0x230>
   1a020:	f1bb 0f01 	cmp.w	fp, #1
   1a024:	d003      	beq.n	1a02e <_scanf_float+0x1ae>
   1a026:	f1bb 0f04 	cmp.w	fp, #4
   1a02a:	f47f af64 	bne.w	19ef6 <_scanf_float+0x76>
   1a02e:	f10b 0b01 	add.w	fp, fp, #1
   1a032:	fa5f fb8b 	uxtb.w	fp, fp
   1a036:	e7e7      	b.n	1a008 <_scanf_float+0x188>
   1a038:	f1bb 0f03 	cmp.w	fp, #3
   1a03c:	d0f7      	beq.n	1a02e <_scanf_float+0x1ae>
   1a03e:	f1bb 0f05 	cmp.w	fp, #5
   1a042:	e7f2      	b.n	1a02a <_scanf_float+0x1aa>
   1a044:	f1bb 0f02 	cmp.w	fp, #2
   1a048:	f47f af55 	bne.w	19ef6 <_scanf_float+0x76>
   1a04c:	f04f 0b03 	mov.w	fp, #3
   1a050:	e7da      	b.n	1a008 <_scanf_float+0x188>
   1a052:	f1bb 0f06 	cmp.w	fp, #6
   1a056:	f47f af4e 	bne.w	19ef6 <_scanf_float+0x76>
   1a05a:	f04f 0b07 	mov.w	fp, #7
   1a05e:	e7d3      	b.n	1a008 <_scanf_float+0x188>
   1a060:	6821      	ldr	r1, [r4, #0]
   1a062:	0588      	lsls	r0, r1, #22
   1a064:	f57f af47 	bpl.w	19ef6 <_scanf_float+0x76>
   1a068:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1a06c:	6021      	str	r1, [r4, #0]
   1a06e:	f8cd 9008 	str.w	r9, [sp, #8]
   1a072:	e7c9      	b.n	1a008 <_scanf_float+0x188>
   1a074:	6821      	ldr	r1, [r4, #0]
   1a076:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1a07a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1a07e:	d006      	beq.n	1a08e <_scanf_float+0x20e>
   1a080:	0548      	lsls	r0, r1, #21
   1a082:	f57f af38 	bpl.w	19ef6 <_scanf_float+0x76>
   1a086:	f1b9 0f00 	cmp.w	r9, #0
   1a08a:	f43f af3b 	beq.w	19f04 <_scanf_float+0x84>
   1a08e:	0588      	lsls	r0, r1, #22
   1a090:	bf58      	it	pl
   1a092:	9802      	ldrpl	r0, [sp, #8]
   1a094:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1a098:	bf58      	it	pl
   1a09a:	eba9 0000 	subpl.w	r0, r9, r0
   1a09e:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1a0a2:	bf5c      	itt	pl
   1a0a4:	9003      	strpl	r0, [sp, #12]
   1a0a6:	9504      	strpl	r5, [sp, #16]
   1a0a8:	6021      	str	r1, [r4, #0]
   1a0aa:	f04f 0900 	mov.w	r9, #0
   1a0ae:	e7ab      	b.n	1a008 <_scanf_float+0x188>
   1a0b0:	2203      	movs	r2, #3
   1a0b2:	e7a9      	b.n	1a008 <_scanf_float+0x188>
   1a0b4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1a0b8:	4631      	mov	r1, r6
   1a0ba:	4638      	mov	r0, r7
   1a0bc:	9205      	str	r2, [sp, #20]
   1a0be:	4798      	blx	r3
   1a0c0:	9a05      	ldr	r2, [sp, #20]
   1a0c2:	2800      	cmp	r0, #0
   1a0c4:	f43f af04 	beq.w	19ed0 <_scanf_float+0x50>
   1a0c8:	e715      	b.n	19ef6 <_scanf_float+0x76>
   1a0ca:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a0ce:	4632      	mov	r2, r6
   1a0d0:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a0d4:	4638      	mov	r0, r7
   1a0d6:	4798      	blx	r3
   1a0d8:	6923      	ldr	r3, [r4, #16]
   1a0da:	3b01      	subs	r3, #1
   1a0dc:	6123      	str	r3, [r4, #16]
   1a0de:	e715      	b.n	19f0c <_scanf_float+0x8c>
   1a0e0:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1a0e4:	2b06      	cmp	r3, #6
   1a0e6:	d80a      	bhi.n	1a0fe <_scanf_float+0x27e>
   1a0e8:	f1bb 0f02 	cmp.w	fp, #2
   1a0ec:	d92f      	bls.n	1a14e <_scanf_float+0x2ce>
   1a0ee:	f1ab 0b03 	sub.w	fp, fp, #3
   1a0f2:	fa5f fb8b 	uxtb.w	fp, fp
   1a0f6:	eba5 0b0b 	sub.w	fp, r5, fp
   1a0fa:	455d      	cmp	r5, fp
   1a0fc:	d112      	bne.n	1a124 <_scanf_float+0x2a4>
   1a0fe:	6823      	ldr	r3, [r4, #0]
   1a100:	05da      	lsls	r2, r3, #23
   1a102:	d545      	bpl.n	1a190 <_scanf_float+0x310>
   1a104:	055b      	lsls	r3, r3, #21
   1a106:	d525      	bpl.n	1a154 <_scanf_float+0x2d4>
   1a108:	4545      	cmp	r5, r8
   1a10a:	f67f af02 	bls.w	19f12 <_scanf_float+0x92>
   1a10e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a112:	4632      	mov	r2, r6
   1a114:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a118:	4638      	mov	r0, r7
   1a11a:	4798      	blx	r3
   1a11c:	6923      	ldr	r3, [r4, #16]
   1a11e:	3b01      	subs	r3, #1
   1a120:	6123      	str	r3, [r4, #16]
   1a122:	e7f1      	b.n	1a108 <_scanf_float+0x288>
   1a124:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a128:	4632      	mov	r2, r6
   1a12a:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a12e:	4638      	mov	r0, r7
   1a130:	4798      	blx	r3
   1a132:	6923      	ldr	r3, [r4, #16]
   1a134:	3b01      	subs	r3, #1
   1a136:	6123      	str	r3, [r4, #16]
   1a138:	e7df      	b.n	1a0fa <_scanf_float+0x27a>
   1a13a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a13e:	4632      	mov	r2, r6
   1a140:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a144:	4638      	mov	r0, r7
   1a146:	4798      	blx	r3
   1a148:	6923      	ldr	r3, [r4, #16]
   1a14a:	3b01      	subs	r3, #1
   1a14c:	6123      	str	r3, [r4, #16]
   1a14e:	4545      	cmp	r5, r8
   1a150:	d8f3      	bhi.n	1a13a <_scanf_float+0x2ba>
   1a152:	e6de      	b.n	19f12 <_scanf_float+0x92>
   1a154:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1a158:	6923      	ldr	r3, [r4, #16]
   1a15a:	2965      	cmp	r1, #101	; 0x65
   1a15c:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1a160:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1a164:	6123      	str	r3, [r4, #16]
   1a166:	d00d      	beq.n	1a184 <_scanf_float+0x304>
   1a168:	2945      	cmp	r1, #69	; 0x45
   1a16a:	d00b      	beq.n	1a184 <_scanf_float+0x304>
   1a16c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a170:	4632      	mov	r2, r6
   1a172:	4638      	mov	r0, r7
   1a174:	4798      	blx	r3
   1a176:	6923      	ldr	r3, [r4, #16]
   1a178:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1a17c:	3b01      	subs	r3, #1
   1a17e:	f1a5 0b02 	sub.w	fp, r5, #2
   1a182:	6123      	str	r3, [r4, #16]
   1a184:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a188:	4632      	mov	r2, r6
   1a18a:	4638      	mov	r0, r7
   1a18c:	4798      	blx	r3
   1a18e:	465d      	mov	r5, fp
   1a190:	6826      	ldr	r6, [r4, #0]
   1a192:	f016 0610 	ands.w	r6, r6, #16
   1a196:	d14e      	bne.n	1a236 <_scanf_float+0x3b6>
   1a198:	702e      	strb	r6, [r5, #0]
   1a19a:	6823      	ldr	r3, [r4, #0]
   1a19c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1a1a0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1a1a4:	d11c      	bne.n	1a1e0 <_scanf_float+0x360>
   1a1a6:	9b02      	ldr	r3, [sp, #8]
   1a1a8:	eba9 0303 	sub.w	r3, r9, r3
   1a1ac:	425a      	negs	r2, r3
   1a1ae:	bb23      	cbnz	r3, 1a1fa <_scanf_float+0x37a>
   1a1b0:	2200      	movs	r2, #0
   1a1b2:	4641      	mov	r1, r8
   1a1b4:	4638      	mov	r0, r7
   1a1b6:	f001 f9c3 	bl	1b540 <_strtod_r>
   1a1ba:	6825      	ldr	r5, [r4, #0]
   1a1bc:	f8da 3000 	ldr.w	r3, [sl]
   1a1c0:	f015 0f02 	tst.w	r5, #2
   1a1c4:	f103 0204 	add.w	r2, r3, #4
   1a1c8:	4680      	mov	r8, r0
   1a1ca:	4689      	mov	r9, r1
   1a1cc:	f8ca 2000 	str.w	r2, [sl]
   1a1d0:	d01e      	beq.n	1a210 <_scanf_float+0x390>
   1a1d2:	681b      	ldr	r3, [r3, #0]
   1a1d4:	e9c3 8900 	strd	r8, r9, [r3]
   1a1d8:	68e3      	ldr	r3, [r4, #12]
   1a1da:	3301      	adds	r3, #1
   1a1dc:	60e3      	str	r3, [r4, #12]
   1a1de:	e699      	b.n	19f14 <_scanf_float+0x94>
   1a1e0:	9b03      	ldr	r3, [sp, #12]
   1a1e2:	2b00      	cmp	r3, #0
   1a1e4:	d0e4      	beq.n	1a1b0 <_scanf_float+0x330>
   1a1e6:	9904      	ldr	r1, [sp, #16]
   1a1e8:	230a      	movs	r3, #10
   1a1ea:	4632      	mov	r2, r6
   1a1ec:	3101      	adds	r1, #1
   1a1ee:	4638      	mov	r0, r7
   1a1f0:	f001 fa36 	bl	1b660 <_strtol_r>
   1a1f4:	9b03      	ldr	r3, [sp, #12]
   1a1f6:	9d04      	ldr	r5, [sp, #16]
   1a1f8:	1ac2      	subs	r2, r0, r3
   1a1fa:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1a1fe:	429d      	cmp	r5, r3
   1a200:	bf28      	it	cs
   1a202:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1a206:	490d      	ldr	r1, [pc, #52]	; (1a23c <_scanf_float+0x3bc>)
   1a208:	4628      	mov	r0, r5
   1a20a:	f000 faab 	bl	1a764 <siprintf>
   1a20e:	e7cf      	b.n	1a1b0 <_scanf_float+0x330>
   1a210:	f015 0504 	ands.w	r5, r5, #4
   1a214:	d1dd      	bne.n	1a1d2 <_scanf_float+0x352>
   1a216:	681f      	ldr	r7, [r3, #0]
   1a218:	4602      	mov	r2, r0
   1a21a:	460b      	mov	r3, r1
   1a21c:	f004 ff44 	bl	1f0a8 <__aeabi_dcmpun>
   1a220:	b120      	cbz	r0, 1a22c <_scanf_float+0x3ac>
   1a222:	4628      	mov	r0, r5
   1a224:	f000 fa56 	bl	1a6d4 <nanf>
   1a228:	6038      	str	r0, [r7, #0]
   1a22a:	e7d5      	b.n	1a1d8 <_scanf_float+0x358>
   1a22c:	4640      	mov	r0, r8
   1a22e:	4649      	mov	r1, r9
   1a230:	f7fd ff5c 	bl	180ec <__aeabi_d2f>
   1a234:	e7f8      	b.n	1a228 <_scanf_float+0x3a8>
   1a236:	2600      	movs	r6, #0
   1a238:	e66c      	b.n	19f14 <_scanf_float+0x94>
   1a23a:	bf00      	nop
   1a23c:	0002038a 	.word	0x0002038a

0001a240 <iprintf>:
iprintf():
   1a240:	b40f      	push	{r0, r1, r2, r3}
   1a242:	4b0a      	ldr	r3, [pc, #40]	; (1a26c <iprintf+0x2c>)
   1a244:	b513      	push	{r0, r1, r4, lr}
   1a246:	681c      	ldr	r4, [r3, #0]
   1a248:	b124      	cbz	r4, 1a254 <iprintf+0x14>
   1a24a:	69a3      	ldr	r3, [r4, #24]
   1a24c:	b913      	cbnz	r3, 1a254 <iprintf+0x14>
   1a24e:	4620      	mov	r0, r4
   1a250:	f7fe fcb8 	bl	18bc4 <__sinit>
   1a254:	ab05      	add	r3, sp, #20
   1a256:	9a04      	ldr	r2, [sp, #16]
   1a258:	68a1      	ldr	r1, [r4, #8]
   1a25a:	4620      	mov	r0, r4
   1a25c:	9301      	str	r3, [sp, #4]
   1a25e:	f003 feff 	bl	1e060 <_vfiprintf_r>
   1a262:	b002      	add	sp, #8
   1a264:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a268:	b004      	add	sp, #16
   1a26a:	4770      	bx	lr
   1a26c:	2007c0e0 	.word	0x2007c0e0

0001a270 <_puts_r>:
_puts_r():
   1a270:	b570      	push	{r4, r5, r6, lr}
   1a272:	460e      	mov	r6, r1
   1a274:	4605      	mov	r5, r0
   1a276:	b118      	cbz	r0, 1a280 <_puts_r+0x10>
   1a278:	6983      	ldr	r3, [r0, #24]
   1a27a:	b90b      	cbnz	r3, 1a280 <_puts_r+0x10>
   1a27c:	f7fe fca2 	bl	18bc4 <__sinit>
   1a280:	69ab      	ldr	r3, [r5, #24]
   1a282:	68ac      	ldr	r4, [r5, #8]
   1a284:	b913      	cbnz	r3, 1a28c <_puts_r+0x1c>
   1a286:	4628      	mov	r0, r5
   1a288:	f7fe fc9c 	bl	18bc4 <__sinit>
   1a28c:	4b23      	ldr	r3, [pc, #140]	; (1a31c <_puts_r+0xac>)
   1a28e:	429c      	cmp	r4, r3
   1a290:	d117      	bne.n	1a2c2 <_puts_r+0x52>
   1a292:	686c      	ldr	r4, [r5, #4]
   1a294:	89a3      	ldrh	r3, [r4, #12]
   1a296:	071b      	lsls	r3, r3, #28
   1a298:	d51d      	bpl.n	1a2d6 <_puts_r+0x66>
   1a29a:	6923      	ldr	r3, [r4, #16]
   1a29c:	b1db      	cbz	r3, 1a2d6 <_puts_r+0x66>
   1a29e:	3e01      	subs	r6, #1
   1a2a0:	68a3      	ldr	r3, [r4, #8]
   1a2a2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1a2a6:	3b01      	subs	r3, #1
   1a2a8:	60a3      	str	r3, [r4, #8]
   1a2aa:	b9e9      	cbnz	r1, 1a2e8 <_puts_r+0x78>
   1a2ac:	2b00      	cmp	r3, #0
   1a2ae:	da2e      	bge.n	1a30e <_puts_r+0x9e>
   1a2b0:	4622      	mov	r2, r4
   1a2b2:	210a      	movs	r1, #10
   1a2b4:	4628      	mov	r0, r5
   1a2b6:	f001 fc7b 	bl	1bbb0 <__swbuf_r>
   1a2ba:	3001      	adds	r0, #1
   1a2bc:	d011      	beq.n	1a2e2 <_puts_r+0x72>
   1a2be:	200a      	movs	r0, #10
   1a2c0:	bd70      	pop	{r4, r5, r6, pc}
   1a2c2:	4b17      	ldr	r3, [pc, #92]	; (1a320 <_puts_r+0xb0>)
   1a2c4:	429c      	cmp	r4, r3
   1a2c6:	d101      	bne.n	1a2cc <_puts_r+0x5c>
   1a2c8:	68ac      	ldr	r4, [r5, #8]
   1a2ca:	e7e3      	b.n	1a294 <_puts_r+0x24>
   1a2cc:	4b15      	ldr	r3, [pc, #84]	; (1a324 <_puts_r+0xb4>)
   1a2ce:	429c      	cmp	r4, r3
   1a2d0:	bf08      	it	eq
   1a2d2:	68ec      	ldreq	r4, [r5, #12]
   1a2d4:	e7de      	b.n	1a294 <_puts_r+0x24>
   1a2d6:	4621      	mov	r1, r4
   1a2d8:	4628      	mov	r0, r5
   1a2da:	f001 fcdb 	bl	1bc94 <__swsetup_r>
   1a2de:	2800      	cmp	r0, #0
   1a2e0:	d0dd      	beq.n	1a29e <_puts_r+0x2e>
   1a2e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a2e6:	bd70      	pop	{r4, r5, r6, pc}
   1a2e8:	2b00      	cmp	r3, #0
   1a2ea:	da04      	bge.n	1a2f6 <_puts_r+0x86>
   1a2ec:	69a2      	ldr	r2, [r4, #24]
   1a2ee:	4293      	cmp	r3, r2
   1a2f0:	db06      	blt.n	1a300 <_puts_r+0x90>
   1a2f2:	290a      	cmp	r1, #10
   1a2f4:	d004      	beq.n	1a300 <_puts_r+0x90>
   1a2f6:	6823      	ldr	r3, [r4, #0]
   1a2f8:	1c5a      	adds	r2, r3, #1
   1a2fa:	6022      	str	r2, [r4, #0]
   1a2fc:	7019      	strb	r1, [r3, #0]
   1a2fe:	e7cf      	b.n	1a2a0 <_puts_r+0x30>
   1a300:	4622      	mov	r2, r4
   1a302:	4628      	mov	r0, r5
   1a304:	f001 fc54 	bl	1bbb0 <__swbuf_r>
   1a308:	3001      	adds	r0, #1
   1a30a:	d1c9      	bne.n	1a2a0 <_puts_r+0x30>
   1a30c:	e7e9      	b.n	1a2e2 <_puts_r+0x72>
   1a30e:	200a      	movs	r0, #10
   1a310:	6823      	ldr	r3, [r4, #0]
   1a312:	1c5a      	adds	r2, r3, #1
   1a314:	6022      	str	r2, [r4, #0]
   1a316:	7018      	strb	r0, [r3, #0]
   1a318:	bd70      	pop	{r4, r5, r6, pc}
   1a31a:	bf00      	nop
   1a31c:	0002024c 	.word	0x0002024c
   1a320:	0002026c 	.word	0x0002026c
   1a324:	0002022c 	.word	0x0002022c

0001a328 <puts>:
puts():
   1a328:	4b02      	ldr	r3, [pc, #8]	; (1a334 <puts+0xc>)
   1a32a:	4601      	mov	r1, r0
   1a32c:	6818      	ldr	r0, [r3, #0]
   1a32e:	f7ff bf9f 	b.w	1a270 <_puts_r>
   1a332:	bf00      	nop
   1a334:	2007c0e0 	.word	0x2007c0e0

0001a338 <srand>:
srand():
   1a338:	b538      	push	{r3, r4, r5, lr}
   1a33a:	4b12      	ldr	r3, [pc, #72]	; (1a384 <srand+0x4c>)
   1a33c:	4605      	mov	r5, r0
   1a33e:	681c      	ldr	r4, [r3, #0]
   1a340:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a342:	b9d3      	cbnz	r3, 1a37a <srand+0x42>
   1a344:	2018      	movs	r0, #24
   1a346:	f7fe fd7d 	bl	18e44 <malloc>
   1a34a:	f243 330e 	movw	r3, #13070	; 0x330e
   1a34e:	63a0      	str	r0, [r4, #56]	; 0x38
   1a350:	8003      	strh	r3, [r0, #0]
   1a352:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1a356:	8043      	strh	r3, [r0, #2]
   1a358:	f241 2334 	movw	r3, #4660	; 0x1234
   1a35c:	8083      	strh	r3, [r0, #4]
   1a35e:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1a362:	80c3      	strh	r3, [r0, #6]
   1a364:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1a368:	8103      	strh	r3, [r0, #8]
   1a36a:	2305      	movs	r3, #5
   1a36c:	8143      	strh	r3, [r0, #10]
   1a36e:	230b      	movs	r3, #11
   1a370:	2201      	movs	r2, #1
   1a372:	8183      	strh	r3, [r0, #12]
   1a374:	2300      	movs	r3, #0
   1a376:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1a37a:	2200      	movs	r2, #0
   1a37c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a37e:	611d      	str	r5, [r3, #16]
   1a380:	615a      	str	r2, [r3, #20]
   1a382:	bd38      	pop	{r3, r4, r5, pc}
   1a384:	2007c0e0 	.word	0x2007c0e0

0001a388 <rand>:
rand():
   1a388:	4b19      	ldr	r3, [pc, #100]	; (1a3f0 <rand+0x68>)
   1a38a:	b510      	push	{r4, lr}
   1a38c:	681c      	ldr	r4, [r3, #0]
   1a38e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a390:	b9d3      	cbnz	r3, 1a3c8 <rand+0x40>
   1a392:	2018      	movs	r0, #24
   1a394:	f7fe fd56 	bl	18e44 <malloc>
   1a398:	f243 330e 	movw	r3, #13070	; 0x330e
   1a39c:	63a0      	str	r0, [r4, #56]	; 0x38
   1a39e:	8003      	strh	r3, [r0, #0]
   1a3a0:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1a3a4:	8043      	strh	r3, [r0, #2]
   1a3a6:	f241 2334 	movw	r3, #4660	; 0x1234
   1a3aa:	8083      	strh	r3, [r0, #4]
   1a3ac:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1a3b0:	80c3      	strh	r3, [r0, #6]
   1a3b2:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1a3b6:	8103      	strh	r3, [r0, #8]
   1a3b8:	2305      	movs	r3, #5
   1a3ba:	8143      	strh	r3, [r0, #10]
   1a3bc:	230b      	movs	r3, #11
   1a3be:	2201      	movs	r2, #1
   1a3c0:	8183      	strh	r3, [r0, #12]
   1a3c2:	2300      	movs	r3, #0
   1a3c4:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1a3c8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1a3ca:	480a      	ldr	r0, [pc, #40]	; (1a3f4 <rand+0x6c>)
   1a3cc:	690a      	ldr	r2, [r1, #16]
   1a3ce:	694b      	ldr	r3, [r1, #20]
   1a3d0:	4350      	muls	r0, r2
   1a3d2:	4c09      	ldr	r4, [pc, #36]	; (1a3f8 <rand+0x70>)
   1a3d4:	fb04 0003 	mla	r0, r4, r3, r0
   1a3d8:	fba2 2304 	umull	r2, r3, r2, r4
   1a3dc:	3201      	adds	r2, #1
   1a3de:	4403      	add	r3, r0
   1a3e0:	f143 0300 	adc.w	r3, r3, #0
   1a3e4:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1a3e8:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1a3ec:	bd10      	pop	{r4, pc}
   1a3ee:	bf00      	nop
   1a3f0:	2007c0e0 	.word	0x2007c0e0
   1a3f4:	5851f42d 	.word	0x5851f42d
   1a3f8:	4c957f2d 	.word	0x4c957f2d

0001a3fc <lflush>:
lflush():
   1a3fc:	8983      	ldrh	r3, [r0, #12]
   1a3fe:	f003 0309 	and.w	r3, r3, #9
   1a402:	2b09      	cmp	r3, #9
   1a404:	d101      	bne.n	1a40a <lflush+0xe>
   1a406:	f7fe bb8b 	b.w	18b20 <fflush>
   1a40a:	2000      	movs	r0, #0
   1a40c:	4770      	bx	lr
   1a40e:	Address 0x000000000001a40e is out of bounds.


0001a410 <__srefill_r>:
__srefill_r():
   1a410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a412:	460c      	mov	r4, r1
   1a414:	4605      	mov	r5, r0
   1a416:	b118      	cbz	r0, 1a420 <__srefill_r+0x10>
   1a418:	6983      	ldr	r3, [r0, #24]
   1a41a:	b90b      	cbnz	r3, 1a420 <__srefill_r+0x10>
   1a41c:	f7fe fbd2 	bl	18bc4 <__sinit>
   1a420:	4b3c      	ldr	r3, [pc, #240]	; (1a514 <__srefill_r+0x104>)
   1a422:	429c      	cmp	r4, r3
   1a424:	d10a      	bne.n	1a43c <__srefill_r+0x2c>
   1a426:	686c      	ldr	r4, [r5, #4]
   1a428:	2300      	movs	r3, #0
   1a42a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1a42e:	6063      	str	r3, [r4, #4]
   1a430:	b293      	uxth	r3, r2
   1a432:	069e      	lsls	r6, r3, #26
   1a434:	d50c      	bpl.n	1a450 <__srefill_r+0x40>
   1a436:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a43c:	4b36      	ldr	r3, [pc, #216]	; (1a518 <__srefill_r+0x108>)
   1a43e:	429c      	cmp	r4, r3
   1a440:	d101      	bne.n	1a446 <__srefill_r+0x36>
   1a442:	68ac      	ldr	r4, [r5, #8]
   1a444:	e7f0      	b.n	1a428 <__srefill_r+0x18>
   1a446:	4b35      	ldr	r3, [pc, #212]	; (1a51c <__srefill_r+0x10c>)
   1a448:	429c      	cmp	r4, r3
   1a44a:	bf08      	it	eq
   1a44c:	68ec      	ldreq	r4, [r5, #12]
   1a44e:	e7eb      	b.n	1a428 <__srefill_r+0x18>
   1a450:	0758      	lsls	r0, r3, #29
   1a452:	d449      	bmi.n	1a4e8 <__srefill_r+0xd8>
   1a454:	06d9      	lsls	r1, r3, #27
   1a456:	d405      	bmi.n	1a464 <__srefill_r+0x54>
   1a458:	2309      	movs	r3, #9
   1a45a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1a45e:	602b      	str	r3, [r5, #0]
   1a460:	81a2      	strh	r2, [r4, #12]
   1a462:	e7e8      	b.n	1a436 <__srefill_r+0x26>
   1a464:	071a      	lsls	r2, r3, #28
   1a466:	d50b      	bpl.n	1a480 <__srefill_r+0x70>
   1a468:	4621      	mov	r1, r4
   1a46a:	4628      	mov	r0, r5
   1a46c:	f7fe fb2e 	bl	18acc <_fflush_r>
   1a470:	2800      	cmp	r0, #0
   1a472:	d1e0      	bne.n	1a436 <__srefill_r+0x26>
   1a474:	89a3      	ldrh	r3, [r4, #12]
   1a476:	60a0      	str	r0, [r4, #8]
   1a478:	f023 0308 	bic.w	r3, r3, #8
   1a47c:	81a3      	strh	r3, [r4, #12]
   1a47e:	61a0      	str	r0, [r4, #24]
   1a480:	89a3      	ldrh	r3, [r4, #12]
   1a482:	f043 0304 	orr.w	r3, r3, #4
   1a486:	81a3      	strh	r3, [r4, #12]
   1a488:	6923      	ldr	r3, [r4, #16]
   1a48a:	b91b      	cbnz	r3, 1a494 <__srefill_r+0x84>
   1a48c:	4621      	mov	r1, r4
   1a48e:	4628      	mov	r0, r5
   1a490:	f7fe fc98 	bl	18dc4 <__smakebuf_r>
   1a494:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1a498:	b2be      	uxth	r6, r7
   1a49a:	07b3      	lsls	r3, r6, #30
   1a49c:	d00f      	beq.n	1a4be <__srefill_r+0xae>
   1a49e:	2301      	movs	r3, #1
   1a4a0:	81a3      	strh	r3, [r4, #12]
   1a4a2:	4b1f      	ldr	r3, [pc, #124]	; (1a520 <__srefill_r+0x110>)
   1a4a4:	491f      	ldr	r1, [pc, #124]	; (1a524 <__srefill_r+0x114>)
   1a4a6:	6818      	ldr	r0, [r3, #0]
   1a4a8:	f006 0609 	and.w	r6, r6, #9
   1a4ac:	f7fe fbf6 	bl	18c9c <_fwalk>
   1a4b0:	2e09      	cmp	r6, #9
   1a4b2:	81a7      	strh	r7, [r4, #12]
   1a4b4:	d103      	bne.n	1a4be <__srefill_r+0xae>
   1a4b6:	4621      	mov	r1, r4
   1a4b8:	4628      	mov	r0, r5
   1a4ba:	f7fe fa7f 	bl	189bc <__sflush_r>
   1a4be:	6922      	ldr	r2, [r4, #16]
   1a4c0:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1a4c2:	6022      	str	r2, [r4, #0]
   1a4c4:	6963      	ldr	r3, [r4, #20]
   1a4c6:	6a21      	ldr	r1, [r4, #32]
   1a4c8:	4628      	mov	r0, r5
   1a4ca:	47b0      	blx	r6
   1a4cc:	2800      	cmp	r0, #0
   1a4ce:	6060      	str	r0, [r4, #4]
   1a4d0:	dc1d      	bgt.n	1a50e <__srefill_r+0xfe>
   1a4d2:	bf18      	it	ne
   1a4d4:	2200      	movne	r2, #0
   1a4d6:	89a3      	ldrh	r3, [r4, #12]
   1a4d8:	bf16      	itet	ne
   1a4da:	6062      	strne	r2, [r4, #4]
   1a4dc:	f043 0320 	orreq.w	r3, r3, #32
   1a4e0:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1a4e4:	81a3      	strh	r3, [r4, #12]
   1a4e6:	e7a6      	b.n	1a436 <__srefill_r+0x26>
   1a4e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a4ea:	2900      	cmp	r1, #0
   1a4ec:	d0cc      	beq.n	1a488 <__srefill_r+0x78>
   1a4ee:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a4f2:	4299      	cmp	r1, r3
   1a4f4:	d002      	beq.n	1a4fc <__srefill_r+0xec>
   1a4f6:	4628      	mov	r0, r5
   1a4f8:	f7fe ff84 	bl	19404 <_free_r>
   1a4fc:	2000      	movs	r0, #0
   1a4fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1a500:	6360      	str	r0, [r4, #52]	; 0x34
   1a502:	6063      	str	r3, [r4, #4]
   1a504:	2b00      	cmp	r3, #0
   1a506:	d0bf      	beq.n	1a488 <__srefill_r+0x78>
   1a508:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1a50a:	6023      	str	r3, [r4, #0]
   1a50c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a50e:	2000      	movs	r0, #0
   1a510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a512:	bf00      	nop
   1a514:	0002024c 	.word	0x0002024c
   1a518:	0002026c 	.word	0x0002026c
   1a51c:	0002022c 	.word	0x0002022c
   1a520:	0002028c 	.word	0x0002028c
   1a524:	0001a3fd 	.word	0x0001a3fd

0001a528 <_sbrk_r>:
_sbrk_r():
   1a528:	b538      	push	{r3, r4, r5, lr}
   1a52a:	2300      	movs	r3, #0
   1a52c:	4c05      	ldr	r4, [pc, #20]	; (1a544 <_sbrk_r+0x1c>)
   1a52e:	4605      	mov	r5, r0
   1a530:	4608      	mov	r0, r1
   1a532:	6023      	str	r3, [r4, #0]
   1a534:	f7fa fac6 	bl	14ac4 <_sbrk>
   1a538:	1c43      	adds	r3, r0, #1
   1a53a:	d102      	bne.n	1a542 <_sbrk_r+0x1a>
   1a53c:	6823      	ldr	r3, [r4, #0]
   1a53e:	b103      	cbz	r3, 1a542 <_sbrk_r+0x1a>
   1a540:	602b      	str	r3, [r5, #0]
   1a542:	bd38      	pop	{r3, r4, r5, pc}
   1a544:	2007c7b0 	.word	0x2007c7b0

0001a548 <iscanf>:
scanf():
   1a548:	b40f      	push	{r0, r1, r2, r3}
   1a54a:	4b0a      	ldr	r3, [pc, #40]	; (1a574 <iscanf+0x2c>)
   1a54c:	b513      	push	{r0, r1, r4, lr}
   1a54e:	681c      	ldr	r4, [r3, #0]
   1a550:	b124      	cbz	r4, 1a55c <iscanf+0x14>
   1a552:	69a3      	ldr	r3, [r4, #24]
   1a554:	b913      	cbnz	r3, 1a55c <iscanf+0x14>
   1a556:	4620      	mov	r0, r4
   1a558:	f7fe fb34 	bl	18bc4 <__sinit>
   1a55c:	ab05      	add	r3, sp, #20
   1a55e:	9a04      	ldr	r2, [sp, #16]
   1a560:	6861      	ldr	r1, [r4, #4]
   1a562:	4620      	mov	r0, r4
   1a564:	9301      	str	r3, [sp, #4]
   1a566:	f003 ffe5 	bl	1e534 <_vfiscanf_r>
   1a56a:	b002      	add	sp, #8
   1a56c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a570:	b004      	add	sp, #16
   1a572:	4770      	bx	lr
   1a574:	2007c0e0 	.word	0x2007c0e0

0001a578 <setvbuf>:
setvbuf():
   1a578:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1a57c:	461d      	mov	r5, r3
   1a57e:	4b51      	ldr	r3, [pc, #324]	; (1a6c4 <setvbuf+0x14c>)
   1a580:	4604      	mov	r4, r0
   1a582:	681e      	ldr	r6, [r3, #0]
   1a584:	460f      	mov	r7, r1
   1a586:	4690      	mov	r8, r2
   1a588:	b126      	cbz	r6, 1a594 <setvbuf+0x1c>
   1a58a:	69b3      	ldr	r3, [r6, #24]
   1a58c:	b913      	cbnz	r3, 1a594 <setvbuf+0x1c>
   1a58e:	4630      	mov	r0, r6
   1a590:	f7fe fb18 	bl	18bc4 <__sinit>
   1a594:	4b4c      	ldr	r3, [pc, #304]	; (1a6c8 <setvbuf+0x150>)
   1a596:	429c      	cmp	r4, r3
   1a598:	d152      	bne.n	1a640 <setvbuf+0xc8>
   1a59a:	6874      	ldr	r4, [r6, #4]
   1a59c:	f1b8 0f02 	cmp.w	r8, #2
   1a5a0:	d006      	beq.n	1a5b0 <setvbuf+0x38>
   1a5a2:	f1b8 0f01 	cmp.w	r8, #1
   1a5a6:	f200 8089 	bhi.w	1a6bc <setvbuf+0x144>
   1a5aa:	2d00      	cmp	r5, #0
   1a5ac:	f2c0 8086 	blt.w	1a6bc <setvbuf+0x144>
   1a5b0:	4621      	mov	r1, r4
   1a5b2:	4630      	mov	r0, r6
   1a5b4:	f7fe fa8a 	bl	18acc <_fflush_r>
   1a5b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a5ba:	b141      	cbz	r1, 1a5ce <setvbuf+0x56>
   1a5bc:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a5c0:	4299      	cmp	r1, r3
   1a5c2:	d002      	beq.n	1a5ca <setvbuf+0x52>
   1a5c4:	4630      	mov	r0, r6
   1a5c6:	f7fe ff1d 	bl	19404 <_free_r>
   1a5ca:	2300      	movs	r3, #0
   1a5cc:	6363      	str	r3, [r4, #52]	; 0x34
   1a5ce:	2300      	movs	r3, #0
   1a5d0:	61a3      	str	r3, [r4, #24]
   1a5d2:	6063      	str	r3, [r4, #4]
   1a5d4:	89a3      	ldrh	r3, [r4, #12]
   1a5d6:	061b      	lsls	r3, r3, #24
   1a5d8:	d503      	bpl.n	1a5e2 <setvbuf+0x6a>
   1a5da:	6921      	ldr	r1, [r4, #16]
   1a5dc:	4630      	mov	r0, r6
   1a5de:	f7fe ff11 	bl	19404 <_free_r>
   1a5e2:	89a3      	ldrh	r3, [r4, #12]
   1a5e4:	f1b8 0f02 	cmp.w	r8, #2
   1a5e8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1a5ec:	f023 0303 	bic.w	r3, r3, #3
   1a5f0:	81a3      	strh	r3, [r4, #12]
   1a5f2:	d05d      	beq.n	1a6b0 <setvbuf+0x138>
   1a5f4:	ab01      	add	r3, sp, #4
   1a5f6:	466a      	mov	r2, sp
   1a5f8:	4621      	mov	r1, r4
   1a5fa:	4630      	mov	r0, r6
   1a5fc:	f7fe fbbe 	bl	18d7c <__swhatbuf_r>
   1a600:	89a3      	ldrh	r3, [r4, #12]
   1a602:	4318      	orrs	r0, r3
   1a604:	81a0      	strh	r0, [r4, #12]
   1a606:	bb2d      	cbnz	r5, 1a654 <setvbuf+0xdc>
   1a608:	9d00      	ldr	r5, [sp, #0]
   1a60a:	4628      	mov	r0, r5
   1a60c:	f7fe fc1a 	bl	18e44 <malloc>
   1a610:	4607      	mov	r7, r0
   1a612:	2800      	cmp	r0, #0
   1a614:	d14e      	bne.n	1a6b4 <setvbuf+0x13c>
   1a616:	f8dd 9000 	ldr.w	r9, [sp]
   1a61a:	45a9      	cmp	r9, r5
   1a61c:	d13c      	bne.n	1a698 <setvbuf+0x120>
   1a61e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a622:	89a3      	ldrh	r3, [r4, #12]
   1a624:	f043 0302 	orr.w	r3, r3, #2
   1a628:	81a3      	strh	r3, [r4, #12]
   1a62a:	2300      	movs	r3, #0
   1a62c:	60a3      	str	r3, [r4, #8]
   1a62e:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1a632:	6023      	str	r3, [r4, #0]
   1a634:	6123      	str	r3, [r4, #16]
   1a636:	2301      	movs	r3, #1
   1a638:	6163      	str	r3, [r4, #20]
   1a63a:	b003      	add	sp, #12
   1a63c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a640:	4b22      	ldr	r3, [pc, #136]	; (1a6cc <setvbuf+0x154>)
   1a642:	429c      	cmp	r4, r3
   1a644:	d101      	bne.n	1a64a <setvbuf+0xd2>
   1a646:	68b4      	ldr	r4, [r6, #8]
   1a648:	e7a8      	b.n	1a59c <setvbuf+0x24>
   1a64a:	4b21      	ldr	r3, [pc, #132]	; (1a6d0 <setvbuf+0x158>)
   1a64c:	429c      	cmp	r4, r3
   1a64e:	bf08      	it	eq
   1a650:	68f4      	ldreq	r4, [r6, #12]
   1a652:	e7a3      	b.n	1a59c <setvbuf+0x24>
   1a654:	2f00      	cmp	r7, #0
   1a656:	d0d8      	beq.n	1a60a <setvbuf+0x92>
   1a658:	69b3      	ldr	r3, [r6, #24]
   1a65a:	b913      	cbnz	r3, 1a662 <setvbuf+0xea>
   1a65c:	4630      	mov	r0, r6
   1a65e:	f7fe fab1 	bl	18bc4 <__sinit>
   1a662:	f1b8 0f01 	cmp.w	r8, #1
   1a666:	bf08      	it	eq
   1a668:	89a3      	ldrheq	r3, [r4, #12]
   1a66a:	6027      	str	r7, [r4, #0]
   1a66c:	bf04      	itt	eq
   1a66e:	f043 0301 	orreq.w	r3, r3, #1
   1a672:	81a3      	strheq	r3, [r4, #12]
   1a674:	89a3      	ldrh	r3, [r4, #12]
   1a676:	6127      	str	r7, [r4, #16]
   1a678:	f013 0008 	ands.w	r0, r3, #8
   1a67c:	6165      	str	r5, [r4, #20]
   1a67e:	d01b      	beq.n	1a6b8 <setvbuf+0x140>
   1a680:	f013 0001 	ands.w	r0, r3, #1
   1a684:	f04f 0300 	mov.w	r3, #0
   1a688:	bf1f      	itttt	ne
   1a68a:	426d      	negne	r5, r5
   1a68c:	60a3      	strne	r3, [r4, #8]
   1a68e:	61a5      	strne	r5, [r4, #24]
   1a690:	4618      	movne	r0, r3
   1a692:	bf08      	it	eq
   1a694:	60a5      	streq	r5, [r4, #8]
   1a696:	e7d0      	b.n	1a63a <setvbuf+0xc2>
   1a698:	4648      	mov	r0, r9
   1a69a:	f7fe fbd3 	bl	18e44 <malloc>
   1a69e:	4607      	mov	r7, r0
   1a6a0:	2800      	cmp	r0, #0
   1a6a2:	d0bc      	beq.n	1a61e <setvbuf+0xa6>
   1a6a4:	89a3      	ldrh	r3, [r4, #12]
   1a6a6:	464d      	mov	r5, r9
   1a6a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1a6ac:	81a3      	strh	r3, [r4, #12]
   1a6ae:	e7d3      	b.n	1a658 <setvbuf+0xe0>
   1a6b0:	2000      	movs	r0, #0
   1a6b2:	e7b6      	b.n	1a622 <setvbuf+0xaa>
   1a6b4:	46a9      	mov	r9, r5
   1a6b6:	e7f5      	b.n	1a6a4 <setvbuf+0x12c>
   1a6b8:	60a0      	str	r0, [r4, #8]
   1a6ba:	e7be      	b.n	1a63a <setvbuf+0xc2>
   1a6bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a6c0:	e7bb      	b.n	1a63a <setvbuf+0xc2>
   1a6c2:	bf00      	nop
   1a6c4:	2007c0e0 	.word	0x2007c0e0
   1a6c8:	0002024c 	.word	0x0002024c
   1a6cc:	0002026c 	.word	0x0002026c
   1a6d0:	0002022c 	.word	0x0002022c

0001a6d4 <nanf>:
nanf():
   1a6d4:	4800      	ldr	r0, [pc, #0]	; (1a6d8 <nanf+0x4>)
   1a6d6:	4770      	bx	lr
   1a6d8:	7fc00000 	.word	0x7fc00000

0001a6dc <_raise_r>:
_raise_r():
   1a6dc:	291f      	cmp	r1, #31
   1a6de:	b538      	push	{r3, r4, r5, lr}
   1a6e0:	4604      	mov	r4, r0
   1a6e2:	460d      	mov	r5, r1
   1a6e4:	d904      	bls.n	1a6f0 <_raise_r+0x14>
   1a6e6:	2316      	movs	r3, #22
   1a6e8:	6003      	str	r3, [r0, #0]
   1a6ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a6ee:	bd38      	pop	{r3, r4, r5, pc}
   1a6f0:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1a6f2:	b112      	cbz	r2, 1a6fa <_raise_r+0x1e>
   1a6f4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1a6f8:	b94b      	cbnz	r3, 1a70e <_raise_r+0x32>
   1a6fa:	4620      	mov	r0, r4
   1a6fc:	f000 f830 	bl	1a760 <_getpid_r>
   1a700:	462a      	mov	r2, r5
   1a702:	4601      	mov	r1, r0
   1a704:	4620      	mov	r0, r4
   1a706:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a70a:	f000 b817 	b.w	1a73c <_kill_r>
   1a70e:	2b01      	cmp	r3, #1
   1a710:	d00a      	beq.n	1a728 <_raise_r+0x4c>
   1a712:	1c59      	adds	r1, r3, #1
   1a714:	d103      	bne.n	1a71e <_raise_r+0x42>
   1a716:	2316      	movs	r3, #22
   1a718:	6003      	str	r3, [r0, #0]
   1a71a:	2001      	movs	r0, #1
   1a71c:	bd38      	pop	{r3, r4, r5, pc}
   1a71e:	2400      	movs	r4, #0
   1a720:	4628      	mov	r0, r5
   1a722:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1a726:	4798      	blx	r3
   1a728:	2000      	movs	r0, #0
   1a72a:	bd38      	pop	{r3, r4, r5, pc}

0001a72c <raise>:
raise():
   1a72c:	4b02      	ldr	r3, [pc, #8]	; (1a738 <raise+0xc>)
   1a72e:	4601      	mov	r1, r0
   1a730:	6818      	ldr	r0, [r3, #0]
   1a732:	f7ff bfd3 	b.w	1a6dc <_raise_r>
   1a736:	bf00      	nop
   1a738:	2007c0e0 	.word	0x2007c0e0

0001a73c <_kill_r>:
_kill_r():
   1a73c:	b538      	push	{r3, r4, r5, lr}
   1a73e:	2300      	movs	r3, #0
   1a740:	4c06      	ldr	r4, [pc, #24]	; (1a75c <_kill_r+0x20>)
   1a742:	4605      	mov	r5, r0
   1a744:	4608      	mov	r0, r1
   1a746:	4611      	mov	r1, r2
   1a748:	6023      	str	r3, [r4, #0]
   1a74a:	f7fa fb01 	bl	14d50 <_kill>
   1a74e:	1c43      	adds	r3, r0, #1
   1a750:	d102      	bne.n	1a758 <_kill_r+0x1c>
   1a752:	6823      	ldr	r3, [r4, #0]
   1a754:	b103      	cbz	r3, 1a758 <_kill_r+0x1c>
   1a756:	602b      	str	r3, [r5, #0]
   1a758:	bd38      	pop	{r3, r4, r5, pc}
   1a75a:	bf00      	nop
   1a75c:	2007c7b0 	.word	0x2007c7b0

0001a760 <_getpid_r>:
_getpid_r():
   1a760:	f7fa bb06 	b.w	14d70 <_getpid>

0001a764 <siprintf>:
siprintf():
   1a764:	b40e      	push	{r1, r2, r3}
   1a766:	f44f 7102 	mov.w	r1, #520	; 0x208
   1a76a:	b500      	push	{lr}
   1a76c:	b09c      	sub	sp, #112	; 0x70
   1a76e:	f8ad 1014 	strh.w	r1, [sp, #20]
   1a772:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1a776:	9104      	str	r1, [sp, #16]
   1a778:	9107      	str	r1, [sp, #28]
   1a77a:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1a77e:	ab1d      	add	r3, sp, #116	; 0x74
   1a780:	9002      	str	r0, [sp, #8]
   1a782:	9006      	str	r0, [sp, #24]
   1a784:	4808      	ldr	r0, [pc, #32]	; (1a7a8 <siprintf+0x44>)
   1a786:	f853 2b04 	ldr.w	r2, [r3], #4
   1a78a:	f8ad 1016 	strh.w	r1, [sp, #22]
   1a78e:	6800      	ldr	r0, [r0, #0]
   1a790:	a902      	add	r1, sp, #8
   1a792:	9301      	str	r3, [sp, #4]
   1a794:	f003 f99a 	bl	1dacc <_svfiprintf_r>
   1a798:	2200      	movs	r2, #0
   1a79a:	9b02      	ldr	r3, [sp, #8]
   1a79c:	701a      	strb	r2, [r3, #0]
   1a79e:	b01c      	add	sp, #112	; 0x70
   1a7a0:	f85d eb04 	ldr.w	lr, [sp], #4
   1a7a4:	b003      	add	sp, #12
   1a7a6:	4770      	bx	lr
   1a7a8:	2007c0e0 	.word	0x2007c0e0

0001a7ac <siscanf>:
siscanf():
   1a7ac:	b40e      	push	{r1, r2, r3}
   1a7ae:	f44f 7201 	mov.w	r2, #516	; 0x204
   1a7b2:	b530      	push	{r4, r5, lr}
   1a7b4:	b09c      	sub	sp, #112	; 0x70
   1a7b6:	ac1f      	add	r4, sp, #124	; 0x7c
   1a7b8:	f854 5b04 	ldr.w	r5, [r4], #4
   1a7bc:	f8ad 2014 	strh.w	r2, [sp, #20]
   1a7c0:	9002      	str	r0, [sp, #8]
   1a7c2:	9006      	str	r0, [sp, #24]
   1a7c4:	f000 f873 	bl	1a8ae <strlen>
   1a7c8:	4b0b      	ldr	r3, [pc, #44]	; (1a7f8 <siscanf+0x4c>)
   1a7ca:	9003      	str	r0, [sp, #12]
   1a7cc:	930b      	str	r3, [sp, #44]	; 0x2c
   1a7ce:	2300      	movs	r3, #0
   1a7d0:	930f      	str	r3, [sp, #60]	; 0x3c
   1a7d2:	9314      	str	r3, [sp, #80]	; 0x50
   1a7d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1a7d8:	9007      	str	r0, [sp, #28]
   1a7da:	4808      	ldr	r0, [pc, #32]	; (1a7fc <siscanf+0x50>)
   1a7dc:	f8ad 3016 	strh.w	r3, [sp, #22]
   1a7e0:	462a      	mov	r2, r5
   1a7e2:	4623      	mov	r3, r4
   1a7e4:	a902      	add	r1, sp, #8
   1a7e6:	6800      	ldr	r0, [r0, #0]
   1a7e8:	9401      	str	r4, [sp, #4]
   1a7ea:	f003 fabd 	bl	1dd68 <__ssvfiscanf_r>
   1a7ee:	b01c      	add	sp, #112	; 0x70
   1a7f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1a7f4:	b003      	add	sp, #12
   1a7f6:	4770      	bx	lr
   1a7f8:	0001a823 	.word	0x0001a823
   1a7fc:	2007c0e0 	.word	0x2007c0e0

0001a800 <__sread>:
__sread():
   1a800:	b510      	push	{r4, lr}
   1a802:	460c      	mov	r4, r1
   1a804:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1a808:	f004 f816 	bl	1e838 <_read_r>
   1a80c:	2800      	cmp	r0, #0
   1a80e:	bfab      	itete	ge
   1a810:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1a812:	89a3      	ldrhlt	r3, [r4, #12]
   1a814:	181b      	addge	r3, r3, r0
   1a816:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1a81a:	bfac      	ite	ge
   1a81c:	6563      	strge	r3, [r4, #84]	; 0x54
   1a81e:	81a3      	strhlt	r3, [r4, #12]
   1a820:	bd10      	pop	{r4, pc}

0001a822 <__seofread>:
__seofread():
   1a822:	2000      	movs	r0, #0
   1a824:	4770      	bx	lr

0001a826 <__swrite>:
__swrite():
   1a826:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a82a:	461f      	mov	r7, r3
   1a82c:	898b      	ldrh	r3, [r1, #12]
   1a82e:	4605      	mov	r5, r0
   1a830:	05db      	lsls	r3, r3, #23
   1a832:	460c      	mov	r4, r1
   1a834:	4616      	mov	r6, r2
   1a836:	d505      	bpl.n	1a844 <__swrite+0x1e>
   1a838:	2302      	movs	r3, #2
   1a83a:	2200      	movs	r2, #0
   1a83c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1a840:	f002 fcc8 	bl	1d1d4 <_lseek_r>
   1a844:	89a3      	ldrh	r3, [r4, #12]
   1a846:	4632      	mov	r2, r6
   1a848:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1a84c:	81a3      	strh	r3, [r4, #12]
   1a84e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1a852:	463b      	mov	r3, r7
   1a854:	4628      	mov	r0, r5
   1a856:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1a85a:	f001 ba09 	b.w	1bc70 <_write_r>

0001a85e <__sseek>:
__sseek():
   1a85e:	b510      	push	{r4, lr}
   1a860:	460c      	mov	r4, r1
   1a862:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1a866:	f002 fcb5 	bl	1d1d4 <_lseek_r>
   1a86a:	1c43      	adds	r3, r0, #1
   1a86c:	89a3      	ldrh	r3, [r4, #12]
   1a86e:	bf15      	itete	ne
   1a870:	6560      	strne	r0, [r4, #84]	; 0x54
   1a872:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1a876:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1a87a:	81a3      	strheq	r3, [r4, #12]
   1a87c:	bf18      	it	ne
   1a87e:	81a3      	strhne	r3, [r4, #12]
   1a880:	bd10      	pop	{r4, pc}

0001a882 <__sclose>:
__sclose():
   1a882:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1a886:	f001 ba73 	b.w	1bd70 <_close_r>

0001a88a <strcmp>:
strcmp():
   1a88a:	f810 2b01 	ldrb.w	r2, [r0], #1
   1a88e:	f811 3b01 	ldrb.w	r3, [r1], #1
   1a892:	2a01      	cmp	r2, #1
   1a894:	bf28      	it	cs
   1a896:	429a      	cmpcs	r2, r3
   1a898:	d0f7      	beq.n	1a88a <strcmp>
   1a89a:	1ad0      	subs	r0, r2, r3
   1a89c:	4770      	bx	lr

0001a89e <strcpy>:
strcpy():
   1a89e:	4603      	mov	r3, r0
   1a8a0:	f811 2b01 	ldrb.w	r2, [r1], #1
   1a8a4:	f803 2b01 	strb.w	r2, [r3], #1
   1a8a8:	2a00      	cmp	r2, #0
   1a8aa:	d1f9      	bne.n	1a8a0 <strcpy+0x2>
   1a8ac:	4770      	bx	lr

0001a8ae <strlen>:
strlen():
   1a8ae:	4603      	mov	r3, r0
   1a8b0:	f813 2b01 	ldrb.w	r2, [r3], #1
   1a8b4:	2a00      	cmp	r2, #0
   1a8b6:	d1fb      	bne.n	1a8b0 <strlen+0x2>
   1a8b8:	1a18      	subs	r0, r3, r0
   1a8ba:	3801      	subs	r0, #1
   1a8bc:	4770      	bx	lr

0001a8be <strncmp>:
strncmp():
   1a8be:	b510      	push	{r4, lr}
   1a8c0:	b16a      	cbz	r2, 1a8de <strncmp+0x20>
   1a8c2:	3901      	subs	r1, #1
   1a8c4:	1884      	adds	r4, r0, r2
   1a8c6:	f810 3b01 	ldrb.w	r3, [r0], #1
   1a8ca:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   1a8ce:	4293      	cmp	r3, r2
   1a8d0:	d103      	bne.n	1a8da <strncmp+0x1c>
   1a8d2:	42a0      	cmp	r0, r4
   1a8d4:	d001      	beq.n	1a8da <strncmp+0x1c>
   1a8d6:	2b00      	cmp	r3, #0
   1a8d8:	d1f5      	bne.n	1a8c6 <strncmp+0x8>
   1a8da:	1a98      	subs	r0, r3, r2
   1a8dc:	bd10      	pop	{r4, pc}
   1a8de:	4610      	mov	r0, r2
   1a8e0:	bd10      	pop	{r4, pc}

0001a8e2 <strncpy>:
strncpy():
   1a8e2:	b570      	push	{r4, r5, r6, lr}
   1a8e4:	4604      	mov	r4, r0
   1a8e6:	b902      	cbnz	r2, 1a8ea <strncpy+0x8>
   1a8e8:	bd70      	pop	{r4, r5, r6, pc}
   1a8ea:	4623      	mov	r3, r4
   1a8ec:	f811 5b01 	ldrb.w	r5, [r1], #1
   1a8f0:	1e56      	subs	r6, r2, #1
   1a8f2:	f803 5b01 	strb.w	r5, [r3], #1
   1a8f6:	b91d      	cbnz	r5, 1a900 <strncpy+0x1e>
   1a8f8:	4414      	add	r4, r2
   1a8fa:	42a3      	cmp	r3, r4
   1a8fc:	d103      	bne.n	1a906 <strncpy+0x24>
   1a8fe:	bd70      	pop	{r4, r5, r6, pc}
   1a900:	461c      	mov	r4, r3
   1a902:	4632      	mov	r2, r6
   1a904:	e7ef      	b.n	1a8e6 <strncpy+0x4>
   1a906:	f803 5b01 	strb.w	r5, [r3], #1
   1a90a:	e7f6      	b.n	1a8fa <strncpy+0x18>

0001a90c <sulp>:
sulp():
   1a90c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a910:	460f      	mov	r7, r1
   1a912:	4690      	mov	r8, r2
   1a914:	f002 ff30 	bl	1d778 <__ulp>
   1a918:	4604      	mov	r4, r0
   1a91a:	460d      	mov	r5, r1
   1a91c:	f1b8 0f00 	cmp.w	r8, #0
   1a920:	d011      	beq.n	1a946 <sulp+0x3a>
   1a922:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1a926:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1a92a:	2b00      	cmp	r3, #0
   1a92c:	dd0b      	ble.n	1a946 <sulp+0x3a>
   1a92e:	2400      	movs	r4, #0
   1a930:	051b      	lsls	r3, r3, #20
   1a932:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   1a936:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1a93a:	4622      	mov	r2, r4
   1a93c:	462b      	mov	r3, r5
   1a93e:	f004 f919 	bl	1eb74 <__aeabi_dmul>
   1a942:	4604      	mov	r4, r0
   1a944:	460d      	mov	r5, r1
   1a946:	4620      	mov	r0, r4
   1a948:	4629      	mov	r1, r5
   1a94a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a94e:	Address 0x000000000001a94e is out of bounds.


0001a950 <_strtod_l>:
_strtod_l():
   1a950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a954:	4699      	mov	r9, r3
   1a956:	2300      	movs	r3, #0
   1a958:	b09f      	sub	sp, #124	; 0x7c
   1a95a:	4680      	mov	r8, r0
   1a95c:	4648      	mov	r0, r9
   1a95e:	460c      	mov	r4, r1
   1a960:	9215      	str	r2, [sp, #84]	; 0x54
   1a962:	931a      	str	r3, [sp, #104]	; 0x68
   1a964:	f002 fc26 	bl	1d1b4 <__localeconv_l>
   1a968:	4607      	mov	r7, r0
   1a96a:	6800      	ldr	r0, [r0, #0]
   1a96c:	f7ff ff9f 	bl	1a8ae <strlen>
   1a970:	f04f 0a00 	mov.w	sl, #0
   1a974:	4605      	mov	r5, r0
   1a976:	f04f 0b00 	mov.w	fp, #0
   1a97a:	9419      	str	r4, [sp, #100]	; 0x64
   1a97c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1a97e:	781a      	ldrb	r2, [r3, #0]
   1a980:	2a0d      	cmp	r2, #13
   1a982:	d833      	bhi.n	1a9ec <_strtod_l+0x9c>
   1a984:	2a09      	cmp	r2, #9
   1a986:	d237      	bcs.n	1a9f8 <_strtod_l+0xa8>
   1a988:	2a00      	cmp	r2, #0
   1a98a:	d03f      	beq.n	1aa0c <_strtod_l+0xbc>
   1a98c:	2300      	movs	r3, #0
   1a98e:	9309      	str	r3, [sp, #36]	; 0x24
   1a990:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1a992:	7833      	ldrb	r3, [r6, #0]
   1a994:	2b30      	cmp	r3, #48	; 0x30
   1a996:	f040 8101 	bne.w	1ab9c <_strtod_l+0x24c>
   1a99a:	7873      	ldrb	r3, [r6, #1]
   1a99c:	2b58      	cmp	r3, #88	; 0x58
   1a99e:	d001      	beq.n	1a9a4 <_strtod_l+0x54>
   1a9a0:	2b78      	cmp	r3, #120	; 0x78
   1a9a2:	d16b      	bne.n	1aa7c <_strtod_l+0x12c>
   1a9a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a9a6:	f8cd 9008 	str.w	r9, [sp, #8]
   1a9aa:	9301      	str	r3, [sp, #4]
   1a9ac:	ab1a      	add	r3, sp, #104	; 0x68
   1a9ae:	9300      	str	r3, [sp, #0]
   1a9b0:	4aaa      	ldr	r2, [pc, #680]	; (1ac5c <_strtod_l+0x30c>)
   1a9b2:	ab1b      	add	r3, sp, #108	; 0x6c
   1a9b4:	a919      	add	r1, sp, #100	; 0x64
   1a9b6:	4640      	mov	r0, r8
   1a9b8:	f002 f8ba 	bl	1cb30 <__gethex>
   1a9bc:	f010 0407 	ands.w	r4, r0, #7
   1a9c0:	4605      	mov	r5, r0
   1a9c2:	d005      	beq.n	1a9d0 <_strtod_l+0x80>
   1a9c4:	2c06      	cmp	r4, #6
   1a9c6:	d12b      	bne.n	1aa20 <_strtod_l+0xd0>
   1a9c8:	2300      	movs	r3, #0
   1a9ca:	3601      	adds	r6, #1
   1a9cc:	9619      	str	r6, [sp, #100]	; 0x64
   1a9ce:	9309      	str	r3, [sp, #36]	; 0x24
   1a9d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1a9d2:	2b00      	cmp	r3, #0
   1a9d4:	f040 859d 	bne.w	1b512 <_strtod_l+0xbc2>
   1a9d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a9da:	b1e3      	cbz	r3, 1aa16 <_strtod_l+0xc6>
   1a9dc:	4652      	mov	r2, sl
   1a9de:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   1a9e2:	4610      	mov	r0, r2
   1a9e4:	4619      	mov	r1, r3
   1a9e6:	b01f      	add	sp, #124	; 0x7c
   1a9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9ec:	2a2b      	cmp	r2, #43	; 0x2b
   1a9ee:	d006      	beq.n	1a9fe <_strtod_l+0xae>
   1a9f0:	2a2d      	cmp	r2, #45	; 0x2d
   1a9f2:	d013      	beq.n	1aa1c <_strtod_l+0xcc>
   1a9f4:	2a20      	cmp	r2, #32
   1a9f6:	d1c9      	bne.n	1a98c <_strtod_l+0x3c>
   1a9f8:	3301      	adds	r3, #1
   1a9fa:	9319      	str	r3, [sp, #100]	; 0x64
   1a9fc:	e7be      	b.n	1a97c <_strtod_l+0x2c>
   1a9fe:	2200      	movs	r2, #0
   1aa00:	9209      	str	r2, [sp, #36]	; 0x24
   1aa02:	1c5a      	adds	r2, r3, #1
   1aa04:	9219      	str	r2, [sp, #100]	; 0x64
   1aa06:	785b      	ldrb	r3, [r3, #1]
   1aa08:	2b00      	cmp	r3, #0
   1aa0a:	d1c1      	bne.n	1a990 <_strtod_l+0x40>
   1aa0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1aa0e:	9419      	str	r4, [sp, #100]	; 0x64
   1aa10:	2b00      	cmp	r3, #0
   1aa12:	f040 857c 	bne.w	1b50e <_strtod_l+0xbbe>
   1aa16:	4652      	mov	r2, sl
   1aa18:	465b      	mov	r3, fp
   1aa1a:	e7e2      	b.n	1a9e2 <_strtod_l+0x92>
   1aa1c:	2201      	movs	r2, #1
   1aa1e:	e7ef      	b.n	1aa00 <_strtod_l+0xb0>
   1aa20:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1aa22:	b13a      	cbz	r2, 1aa34 <_strtod_l+0xe4>
   1aa24:	2135      	movs	r1, #53	; 0x35
   1aa26:	a81c      	add	r0, sp, #112	; 0x70
   1aa28:	f002 ff93 	bl	1d952 <__copybits>
   1aa2c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1aa2e:	4640      	mov	r0, r8
   1aa30:	f002 fc16 	bl	1d260 <_Bfree>
   1aa34:	3c01      	subs	r4, #1
   1aa36:	2c04      	cmp	r4, #4
   1aa38:	d808      	bhi.n	1aa4c <_strtod_l+0xfc>
   1aa3a:	e8df f004 	tbb	[pc, r4]
   1aa3e:	030c      	.short	0x030c
   1aa40:	1a17      	.short	0x1a17
   1aa42:	0c          	.byte	0x0c
   1aa43:	00          	.byte	0x00
   1aa44:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1aa48:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1aa4c:	0729      	lsls	r1, r5, #28
   1aa4e:	d5bf      	bpl.n	1a9d0 <_strtod_l+0x80>
   1aa50:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1aa54:	e7bc      	b.n	1a9d0 <_strtod_l+0x80>
   1aa56:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1aa58:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1aa5a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1aa5e:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1aa62:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1aa66:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1aa6a:	e7ef      	b.n	1aa4c <_strtod_l+0xfc>
   1aa6c:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 1ac68 <_strtod_l+0x318>
   1aa70:	e7ec      	b.n	1aa4c <_strtod_l+0xfc>
   1aa72:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1aa76:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1aa7a:	e7e7      	b.n	1aa4c <_strtod_l+0xfc>
   1aa7c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1aa7e:	1c5a      	adds	r2, r3, #1
   1aa80:	9219      	str	r2, [sp, #100]	; 0x64
   1aa82:	785b      	ldrb	r3, [r3, #1]
   1aa84:	2b30      	cmp	r3, #48	; 0x30
   1aa86:	d0f9      	beq.n	1aa7c <_strtod_l+0x12c>
   1aa88:	2b00      	cmp	r3, #0
   1aa8a:	d0a1      	beq.n	1a9d0 <_strtod_l+0x80>
   1aa8c:	2301      	movs	r3, #1
   1aa8e:	9308      	str	r3, [sp, #32]
   1aa90:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1aa92:	220a      	movs	r2, #10
   1aa94:	930a      	str	r3, [sp, #40]	; 0x28
   1aa96:	2300      	movs	r3, #0
   1aa98:	9305      	str	r3, [sp, #20]
   1aa9a:	9306      	str	r3, [sp, #24]
   1aa9c:	9304      	str	r3, [sp, #16]
   1aa9e:	9819      	ldr	r0, [sp, #100]	; 0x64
   1aaa0:	7806      	ldrb	r6, [r0, #0]
   1aaa2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1aaa6:	b2d9      	uxtb	r1, r3
   1aaa8:	2909      	cmp	r1, #9
   1aaaa:	d979      	bls.n	1aba0 <_strtod_l+0x250>
   1aaac:	462a      	mov	r2, r5
   1aaae:	6839      	ldr	r1, [r7, #0]
   1aab0:	f7ff ff05 	bl	1a8be <strncmp>
   1aab4:	2800      	cmp	r0, #0
   1aab6:	f000 8085 	beq.w	1abc4 <_strtod_l+0x274>
   1aaba:	2000      	movs	r0, #0
   1aabc:	4633      	mov	r3, r6
   1aabe:	4602      	mov	r2, r0
   1aac0:	4601      	mov	r1, r0
   1aac2:	9d04      	ldr	r5, [sp, #16]
   1aac4:	2b65      	cmp	r3, #101	; 0x65
   1aac6:	d002      	beq.n	1aace <_strtod_l+0x17e>
   1aac8:	2b45      	cmp	r3, #69	; 0x45
   1aaca:	f040 80ef 	bne.w	1acac <_strtod_l+0x35c>
   1aace:	b925      	cbnz	r5, 1aada <_strtod_l+0x18a>
   1aad0:	b910      	cbnz	r0, 1aad8 <_strtod_l+0x188>
   1aad2:	9b08      	ldr	r3, [sp, #32]
   1aad4:	2b00      	cmp	r3, #0
   1aad6:	d099      	beq.n	1aa0c <_strtod_l+0xbc>
   1aad8:	2500      	movs	r5, #0
   1aada:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1aadc:	1c63      	adds	r3, r4, #1
   1aade:	9319      	str	r3, [sp, #100]	; 0x64
   1aae0:	7863      	ldrb	r3, [r4, #1]
   1aae2:	2b2b      	cmp	r3, #43	; 0x2b
   1aae4:	f000 80cf 	beq.w	1ac86 <_strtod_l+0x336>
   1aae8:	2b2d      	cmp	r3, #45	; 0x2d
   1aaea:	f000 80d2 	beq.w	1ac92 <_strtod_l+0x342>
   1aaee:	2600      	movs	r6, #0
   1aaf0:	9607      	str	r6, [sp, #28]
   1aaf2:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   1aaf6:	2e09      	cmp	r6, #9
   1aaf8:	f200 80d7 	bhi.w	1acaa <_strtod_l+0x35a>
   1aafc:	2b30      	cmp	r3, #48	; 0x30
   1aafe:	f000 80ca 	beq.w	1ac96 <_strtod_l+0x346>
   1ab02:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   1ab06:	2e08      	cmp	r6, #8
   1ab08:	f200 80d0 	bhi.w	1acac <_strtod_l+0x35c>
   1ab0c:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   1ab10:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ab12:	f04f 0c0a 	mov.w	ip, #10
   1ab16:	461f      	mov	r7, r3
   1ab18:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ab1a:	1c5e      	adds	r6, r3, #1
   1ab1c:	9619      	str	r6, [sp, #100]	; 0x64
   1ab1e:	785b      	ldrb	r3, [r3, #1]
   1ab20:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   1ab24:	f1b9 0f09 	cmp.w	r9, #9
   1ab28:	f240 80ba 	bls.w	1aca0 <_strtod_l+0x350>
   1ab2c:	1bf6      	subs	r6, r6, r7
   1ab2e:	2e08      	cmp	r6, #8
   1ab30:	f644 691f 	movw	r9, #19999	; 0x4e1f
   1ab34:	dc02      	bgt.n	1ab3c <_strtod_l+0x1ec>
   1ab36:	45f1      	cmp	r9, lr
   1ab38:	bfa8      	it	ge
   1ab3a:	46f1      	movge	r9, lr
   1ab3c:	9e07      	ldr	r6, [sp, #28]
   1ab3e:	b10e      	cbz	r6, 1ab44 <_strtod_l+0x1f4>
   1ab40:	f1c9 0900 	rsb	r9, r9, #0
   1ab44:	2d00      	cmp	r5, #0
   1ab46:	f040 80d7 	bne.w	1acf8 <_strtod_l+0x3a8>
   1ab4a:	2800      	cmp	r0, #0
   1ab4c:	f47f af40 	bne.w	1a9d0 <_strtod_l+0x80>
   1ab50:	9a08      	ldr	r2, [sp, #32]
   1ab52:	2a00      	cmp	r2, #0
   1ab54:	f47f af3c 	bne.w	1a9d0 <_strtod_l+0x80>
   1ab58:	2900      	cmp	r1, #0
   1ab5a:	f47f af57 	bne.w	1aa0c <_strtod_l+0xbc>
   1ab5e:	2b4e      	cmp	r3, #78	; 0x4e
   1ab60:	f000 80ad 	beq.w	1acbe <_strtod_l+0x36e>
   1ab64:	f300 80a5 	bgt.w	1acb2 <_strtod_l+0x362>
   1ab68:	2b49      	cmp	r3, #73	; 0x49
   1ab6a:	f47f af4f 	bne.w	1aa0c <_strtod_l+0xbc>
   1ab6e:	493c      	ldr	r1, [pc, #240]	; (1ac60 <_strtod_l+0x310>)
   1ab70:	a819      	add	r0, sp, #100	; 0x64
   1ab72:	f002 fa0e 	bl	1cf92 <__match>
   1ab76:	2800      	cmp	r0, #0
   1ab78:	f43f af48 	beq.w	1aa0c <_strtod_l+0xbc>
   1ab7c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ab7e:	4939      	ldr	r1, [pc, #228]	; (1ac64 <_strtod_l+0x314>)
   1ab80:	3b01      	subs	r3, #1
   1ab82:	a819      	add	r0, sp, #100	; 0x64
   1ab84:	9319      	str	r3, [sp, #100]	; 0x64
   1ab86:	f002 fa04 	bl	1cf92 <__match>
   1ab8a:	b910      	cbnz	r0, 1ab92 <_strtod_l+0x242>
   1ab8c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ab8e:	3301      	adds	r3, #1
   1ab90:	9319      	str	r3, [sp, #100]	; 0x64
   1ab92:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 1ac68 <_strtod_l+0x318>
   1ab96:	f04f 0a00 	mov.w	sl, #0
   1ab9a:	e719      	b.n	1a9d0 <_strtod_l+0x80>
   1ab9c:	2300      	movs	r3, #0
   1ab9e:	e776      	b.n	1aa8e <_strtod_l+0x13e>
   1aba0:	9904      	ldr	r1, [sp, #16]
   1aba2:	3001      	adds	r0, #1
   1aba4:	2908      	cmp	r1, #8
   1aba6:	bfd5      	itete	le
   1aba8:	9906      	ldrle	r1, [sp, #24]
   1abaa:	9905      	ldrgt	r1, [sp, #20]
   1abac:	fb02 3301 	mlale	r3, r2, r1, r3
   1abb0:	fb02 3301 	mlagt	r3, r2, r1, r3
   1abb4:	bfd4      	ite	le
   1abb6:	9306      	strle	r3, [sp, #24]
   1abb8:	9305      	strgt	r3, [sp, #20]
   1abba:	9b04      	ldr	r3, [sp, #16]
   1abbc:	9019      	str	r0, [sp, #100]	; 0x64
   1abbe:	3301      	adds	r3, #1
   1abc0:	9304      	str	r3, [sp, #16]
   1abc2:	e76c      	b.n	1aa9e <_strtod_l+0x14e>
   1abc4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1abc6:	195a      	adds	r2, r3, r5
   1abc8:	9219      	str	r2, [sp, #100]	; 0x64
   1abca:	9a04      	ldr	r2, [sp, #16]
   1abcc:	5d5b      	ldrb	r3, [r3, r5]
   1abce:	2a00      	cmp	r2, #0
   1abd0:	d154      	bne.n	1ac7c <_strtod_l+0x32c>
   1abd2:	4610      	mov	r0, r2
   1abd4:	2b30      	cmp	r3, #48	; 0x30
   1abd6:	d02a      	beq.n	1ac2e <_strtod_l+0x2de>
   1abd8:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   1abdc:	2a08      	cmp	r2, #8
   1abde:	f200 849d 	bhi.w	1b51c <_strtod_l+0xbcc>
   1abe2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1abe4:	920a      	str	r2, [sp, #40]	; 0x28
   1abe6:	4602      	mov	r2, r0
   1abe8:	2000      	movs	r0, #0
   1abea:	4605      	mov	r5, r0
   1abec:	3b30      	subs	r3, #48	; 0x30
   1abee:	f100 0101 	add.w	r1, r0, #1
   1abf2:	d011      	beq.n	1ac18 <_strtod_l+0x2c8>
   1abf4:	440a      	add	r2, r1
   1abf6:	260a      	movs	r6, #10
   1abf8:	4629      	mov	r1, r5
   1abfa:	eb00 0c05 	add.w	ip, r0, r5
   1abfe:	4561      	cmp	r1, ip
   1ac00:	d11b      	bne.n	1ac3a <_strtod_l+0x2ea>
   1ac02:	4428      	add	r0, r5
   1ac04:	2808      	cmp	r0, #8
   1ac06:	f100 0501 	add.w	r5, r0, #1
   1ac0a:	dc2f      	bgt.n	1ac6c <_strtod_l+0x31c>
   1ac0c:	210a      	movs	r1, #10
   1ac0e:	9806      	ldr	r0, [sp, #24]
   1ac10:	fb01 3300 	mla	r3, r1, r0, r3
   1ac14:	9306      	str	r3, [sp, #24]
   1ac16:	2100      	movs	r1, #0
   1ac18:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ac1a:	1c58      	adds	r0, r3, #1
   1ac1c:	9019      	str	r0, [sp, #100]	; 0x64
   1ac1e:	4608      	mov	r0, r1
   1ac20:	785b      	ldrb	r3, [r3, #1]
   1ac22:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   1ac26:	2909      	cmp	r1, #9
   1ac28:	d9e0      	bls.n	1abec <_strtod_l+0x29c>
   1ac2a:	2101      	movs	r1, #1
   1ac2c:	e74a      	b.n	1aac4 <_strtod_l+0x174>
   1ac2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ac30:	3001      	adds	r0, #1
   1ac32:	1c5a      	adds	r2, r3, #1
   1ac34:	9219      	str	r2, [sp, #100]	; 0x64
   1ac36:	785b      	ldrb	r3, [r3, #1]
   1ac38:	e7cc      	b.n	1abd4 <_strtod_l+0x284>
   1ac3a:	3101      	adds	r1, #1
   1ac3c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1ac40:	f1be 0f08 	cmp.w	lr, #8
   1ac44:	dc03      	bgt.n	1ac4e <_strtod_l+0x2fe>
   1ac46:	9f06      	ldr	r7, [sp, #24]
   1ac48:	4377      	muls	r7, r6
   1ac4a:	9706      	str	r7, [sp, #24]
   1ac4c:	e7d7      	b.n	1abfe <_strtod_l+0x2ae>
   1ac4e:	2910      	cmp	r1, #16
   1ac50:	bfde      	ittt	le
   1ac52:	9f05      	ldrle	r7, [sp, #20]
   1ac54:	4377      	mulle	r7, r6
   1ac56:	9705      	strle	r7, [sp, #20]
   1ac58:	e7d1      	b.n	1abfe <_strtod_l+0x2ae>
   1ac5a:	bf00      	nop
   1ac5c:	00020390 	.word	0x00020390
   1ac60:	0002035d 	.word	0x0002035d
   1ac64:	00020520 	.word	0x00020520
   1ac68:	7ff00000 	.word	0x7ff00000
   1ac6c:	2d10      	cmp	r5, #16
   1ac6e:	bfdf      	itttt	le
   1ac70:	210a      	movle	r1, #10
   1ac72:	9805      	ldrle	r0, [sp, #20]
   1ac74:	fb01 3300 	mlale	r3, r1, r0, r3
   1ac78:	9305      	strle	r3, [sp, #20]
   1ac7a:	e7cc      	b.n	1ac16 <_strtod_l+0x2c6>
   1ac7c:	4602      	mov	r2, r0
   1ac7e:	9d04      	ldr	r5, [sp, #16]
   1ac80:	e7cf      	b.n	1ac22 <_strtod_l+0x2d2>
   1ac82:	2101      	movs	r1, #1
   1ac84:	e724      	b.n	1aad0 <_strtod_l+0x180>
   1ac86:	2300      	movs	r3, #0
   1ac88:	9307      	str	r3, [sp, #28]
   1ac8a:	1ca3      	adds	r3, r4, #2
   1ac8c:	9319      	str	r3, [sp, #100]	; 0x64
   1ac8e:	78a3      	ldrb	r3, [r4, #2]
   1ac90:	e72f      	b.n	1aaf2 <_strtod_l+0x1a2>
   1ac92:	2301      	movs	r3, #1
   1ac94:	e7f8      	b.n	1ac88 <_strtod_l+0x338>
   1ac96:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ac98:	1c5e      	adds	r6, r3, #1
   1ac9a:	9619      	str	r6, [sp, #100]	; 0x64
   1ac9c:	785b      	ldrb	r3, [r3, #1]
   1ac9e:	e72d      	b.n	1aafc <_strtod_l+0x1ac>
   1aca0:	fb0c 3e0e 	mla	lr, ip, lr, r3
   1aca4:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   1aca8:	e736      	b.n	1ab18 <_strtod_l+0x1c8>
   1acaa:	9419      	str	r4, [sp, #100]	; 0x64
   1acac:	f04f 0900 	mov.w	r9, #0
   1acb0:	e748      	b.n	1ab44 <_strtod_l+0x1f4>
   1acb2:	2b69      	cmp	r3, #105	; 0x69
   1acb4:	f43f af5b 	beq.w	1ab6e <_strtod_l+0x21e>
   1acb8:	2b6e      	cmp	r3, #110	; 0x6e
   1acba:	f47f aea7 	bne.w	1aa0c <_strtod_l+0xbc>
   1acbe:	498c      	ldr	r1, [pc, #560]	; (1aef0 <_strtod_l+0x5a0>)
   1acc0:	a819      	add	r0, sp, #100	; 0x64
   1acc2:	f002 f966 	bl	1cf92 <__match>
   1acc6:	2800      	cmp	r0, #0
   1acc8:	f43f aea0 	beq.w	1aa0c <_strtod_l+0xbc>
   1accc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1acce:	781b      	ldrb	r3, [r3, #0]
   1acd0:	2b28      	cmp	r3, #40	; 0x28
   1acd2:	d10e      	bne.n	1acf2 <_strtod_l+0x3a2>
   1acd4:	aa1c      	add	r2, sp, #112	; 0x70
   1acd6:	4987      	ldr	r1, [pc, #540]	; (1aef4 <_strtod_l+0x5a4>)
   1acd8:	a819      	add	r0, sp, #100	; 0x64
   1acda:	f002 f96d 	bl	1cfb8 <__hexnan>
   1acde:	2805      	cmp	r0, #5
   1ace0:	d107      	bne.n	1acf2 <_strtod_l+0x3a2>
   1ace2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1ace4:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1ace8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   1acec:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   1acf0:	e66e      	b.n	1a9d0 <_strtod_l+0x80>
   1acf2:	f8df b210 	ldr.w	fp, [pc, #528]	; 1af04 <_strtod_l+0x5b4>
   1acf6:	e74e      	b.n	1ab96 <_strtod_l+0x246>
   1acf8:	9b04      	ldr	r3, [sp, #16]
   1acfa:	462c      	mov	r4, r5
   1acfc:	2b00      	cmp	r3, #0
   1acfe:	bf08      	it	eq
   1ad00:	462b      	moveq	r3, r5
   1ad02:	2d10      	cmp	r5, #16
   1ad04:	bfa8      	it	ge
   1ad06:	2410      	movge	r4, #16
   1ad08:	9806      	ldr	r0, [sp, #24]
   1ad0a:	eba9 0902 	sub.w	r9, r9, r2
   1ad0e:	9304      	str	r3, [sp, #16]
   1ad10:	f7fd f956 	bl	17fc0 <__aeabi_ui2d>
   1ad14:	2c09      	cmp	r4, #9
   1ad16:	4682      	mov	sl, r0
   1ad18:	468b      	mov	fp, r1
   1ad1a:	dd13      	ble.n	1ad44 <_strtod_l+0x3f4>
   1ad1c:	4b76      	ldr	r3, [pc, #472]	; (1aef8 <_strtod_l+0x5a8>)
   1ad1e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1ad22:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1ad26:	f003 ff25 	bl	1eb74 <__aeabi_dmul>
   1ad2a:	4606      	mov	r6, r0
   1ad2c:	9805      	ldr	r0, [sp, #20]
   1ad2e:	460f      	mov	r7, r1
   1ad30:	f7fd f946 	bl	17fc0 <__aeabi_ui2d>
   1ad34:	4602      	mov	r2, r0
   1ad36:	460b      	mov	r3, r1
   1ad38:	4630      	mov	r0, r6
   1ad3a:	4639      	mov	r1, r7
   1ad3c:	f7fd f804 	bl	17d48 <__adddf3>
   1ad40:	4682      	mov	sl, r0
   1ad42:	468b      	mov	fp, r1
   1ad44:	2d0f      	cmp	r5, #15
   1ad46:	dc36      	bgt.n	1adb6 <_strtod_l+0x466>
   1ad48:	f1b9 0f00 	cmp.w	r9, #0
   1ad4c:	f43f ae40 	beq.w	1a9d0 <_strtod_l+0x80>
   1ad50:	dd24      	ble.n	1ad9c <_strtod_l+0x44c>
   1ad52:	f1b9 0f16 	cmp.w	r9, #22
   1ad56:	dc0b      	bgt.n	1ad70 <_strtod_l+0x420>
   1ad58:	4652      	mov	r2, sl
   1ad5a:	465b      	mov	r3, fp
   1ad5c:	4d66      	ldr	r5, [pc, #408]	; (1aef8 <_strtod_l+0x5a8>)
   1ad5e:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   1ad62:	e9d9 0100 	ldrd	r0, r1, [r9]
   1ad66:	f003 ff05 	bl	1eb74 <__aeabi_dmul>
   1ad6a:	4682      	mov	sl, r0
   1ad6c:	468b      	mov	fp, r1
   1ad6e:	e62f      	b.n	1a9d0 <_strtod_l+0x80>
   1ad70:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1ad74:	4599      	cmp	r9, r3
   1ad76:	dc1e      	bgt.n	1adb6 <_strtod_l+0x466>
   1ad78:	4c5f      	ldr	r4, [pc, #380]	; (1aef8 <_strtod_l+0x5a8>)
   1ad7a:	f1c5 050f 	rsb	r5, r5, #15
   1ad7e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   1ad82:	eba9 0505 	sub.w	r5, r9, r5
   1ad86:	4652      	mov	r2, sl
   1ad88:	e9d1 0100 	ldrd	r0, r1, [r1]
   1ad8c:	465b      	mov	r3, fp
   1ad8e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1ad92:	f003 feef 	bl	1eb74 <__aeabi_dmul>
   1ad96:	e9d4 2300 	ldrd	r2, r3, [r4]
   1ad9a:	e7e4      	b.n	1ad66 <_strtod_l+0x416>
   1ad9c:	f119 0f16 	cmn.w	r9, #22
   1ada0:	db09      	blt.n	1adb6 <_strtod_l+0x466>
   1ada2:	4d55      	ldr	r5, [pc, #340]	; (1aef8 <_strtod_l+0x5a8>)
   1ada4:	4650      	mov	r0, sl
   1ada6:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   1adaa:	e9d9 2300 	ldrd	r2, r3, [r9]
   1adae:	4659      	mov	r1, fp
   1adb0:	f004 f80a 	bl	1edc8 <__aeabi_ddiv>
   1adb4:	e7d9      	b.n	1ad6a <_strtod_l+0x41a>
   1adb6:	1b2c      	subs	r4, r5, r4
   1adb8:	444c      	add	r4, r9
   1adba:	2c00      	cmp	r4, #0
   1adbc:	dd73      	ble.n	1aea6 <_strtod_l+0x556>
   1adbe:	f014 030f 	ands.w	r3, r4, #15
   1adc2:	d00a      	beq.n	1adda <_strtod_l+0x48a>
   1adc4:	494c      	ldr	r1, [pc, #304]	; (1aef8 <_strtod_l+0x5a8>)
   1adc6:	4652      	mov	r2, sl
   1adc8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   1adcc:	e9d1 0100 	ldrd	r0, r1, [r1]
   1add0:	465b      	mov	r3, fp
   1add2:	f003 fecf 	bl	1eb74 <__aeabi_dmul>
   1add6:	4682      	mov	sl, r0
   1add8:	468b      	mov	fp, r1
   1adda:	f034 040f 	bics.w	r4, r4, #15
   1adde:	d054      	beq.n	1ae8a <_strtod_l+0x53a>
   1ade0:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   1ade4:	dd27      	ble.n	1ae36 <_strtod_l+0x4e6>
   1ade6:	f04f 0900 	mov.w	r9, #0
   1adea:	f8cd 9010 	str.w	r9, [sp, #16]
   1adee:	f8cd 901c 	str.w	r9, [sp, #28]
   1adf2:	f8cd 9018 	str.w	r9, [sp, #24]
   1adf6:	2322      	movs	r3, #34	; 0x22
   1adf8:	f04f 0a00 	mov.w	sl, #0
   1adfc:	f8df b108 	ldr.w	fp, [pc, #264]	; 1af08 <_strtod_l+0x5b8>
   1ae00:	f8c8 3000 	str.w	r3, [r8]
   1ae04:	9b07      	ldr	r3, [sp, #28]
   1ae06:	2b00      	cmp	r3, #0
   1ae08:	f43f ade2 	beq.w	1a9d0 <_strtod_l+0x80>
   1ae0c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1ae0e:	4640      	mov	r0, r8
   1ae10:	f002 fa26 	bl	1d260 <_Bfree>
   1ae14:	9906      	ldr	r1, [sp, #24]
   1ae16:	4640      	mov	r0, r8
   1ae18:	f002 fa22 	bl	1d260 <_Bfree>
   1ae1c:	9904      	ldr	r1, [sp, #16]
   1ae1e:	4640      	mov	r0, r8
   1ae20:	f002 fa1e 	bl	1d260 <_Bfree>
   1ae24:	9907      	ldr	r1, [sp, #28]
   1ae26:	4640      	mov	r0, r8
   1ae28:	f002 fa1a 	bl	1d260 <_Bfree>
   1ae2c:	4649      	mov	r1, r9
   1ae2e:	4640      	mov	r0, r8
   1ae30:	f002 fa16 	bl	1d260 <_Bfree>
   1ae34:	e5cc      	b.n	1a9d0 <_strtod_l+0x80>
   1ae36:	2300      	movs	r3, #0
   1ae38:	4650      	mov	r0, sl
   1ae3a:	4659      	mov	r1, fp
   1ae3c:	461f      	mov	r7, r3
   1ae3e:	4e2f      	ldr	r6, [pc, #188]	; (1aefc <_strtod_l+0x5ac>)
   1ae40:	1124      	asrs	r4, r4, #4
   1ae42:	2c01      	cmp	r4, #1
   1ae44:	dc24      	bgt.n	1ae90 <_strtod_l+0x540>
   1ae46:	b10b      	cbz	r3, 1ae4c <_strtod_l+0x4fc>
   1ae48:	4682      	mov	sl, r0
   1ae4a:	468b      	mov	fp, r1
   1ae4c:	4b2b      	ldr	r3, [pc, #172]	; (1aefc <_strtod_l+0x5ac>)
   1ae4e:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1ae52:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   1ae56:	4652      	mov	r2, sl
   1ae58:	e9d7 0100 	ldrd	r0, r1, [r7]
   1ae5c:	465b      	mov	r3, fp
   1ae5e:	f003 fe89 	bl	1eb74 <__aeabi_dmul>
   1ae62:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1ae66:	468b      	mov	fp, r1
   1ae68:	460a      	mov	r2, r1
   1ae6a:	0d1b      	lsrs	r3, r3, #20
   1ae6c:	4924      	ldr	r1, [pc, #144]	; (1af00 <_strtod_l+0x5b0>)
   1ae6e:	051b      	lsls	r3, r3, #20
   1ae70:	428b      	cmp	r3, r1
   1ae72:	4682      	mov	sl, r0
   1ae74:	d8b7      	bhi.n	1ade6 <_strtod_l+0x496>
   1ae76:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1ae7a:	428b      	cmp	r3, r1
   1ae7c:	bf86      	itte	hi
   1ae7e:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   1ae82:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 1af0c <_strtod_l+0x5bc>
   1ae86:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   1ae8a:	2300      	movs	r3, #0
   1ae8c:	9305      	str	r3, [sp, #20]
   1ae8e:	e070      	b.n	1af72 <_strtod_l+0x622>
   1ae90:	07e2      	lsls	r2, r4, #31
   1ae92:	d504      	bpl.n	1ae9e <_strtod_l+0x54e>
   1ae94:	e9d6 2300 	ldrd	r2, r3, [r6]
   1ae98:	f003 fe6c 	bl	1eb74 <__aeabi_dmul>
   1ae9c:	2301      	movs	r3, #1
   1ae9e:	3701      	adds	r7, #1
   1aea0:	1064      	asrs	r4, r4, #1
   1aea2:	3608      	adds	r6, #8
   1aea4:	e7cd      	b.n	1ae42 <_strtod_l+0x4f2>
   1aea6:	d0f0      	beq.n	1ae8a <_strtod_l+0x53a>
   1aea8:	4264      	negs	r4, r4
   1aeaa:	f014 020f 	ands.w	r2, r4, #15
   1aeae:	d00a      	beq.n	1aec6 <_strtod_l+0x576>
   1aeb0:	4b11      	ldr	r3, [pc, #68]	; (1aef8 <_strtod_l+0x5a8>)
   1aeb2:	4650      	mov	r0, sl
   1aeb4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1aeb8:	4659      	mov	r1, fp
   1aeba:	e9d3 2300 	ldrd	r2, r3, [r3]
   1aebe:	f003 ff83 	bl	1edc8 <__aeabi_ddiv>
   1aec2:	4682      	mov	sl, r0
   1aec4:	468b      	mov	fp, r1
   1aec6:	1124      	asrs	r4, r4, #4
   1aec8:	d0df      	beq.n	1ae8a <_strtod_l+0x53a>
   1aeca:	2c1f      	cmp	r4, #31
   1aecc:	dd20      	ble.n	1af10 <_strtod_l+0x5c0>
   1aece:	f04f 0900 	mov.w	r9, #0
   1aed2:	f8cd 9010 	str.w	r9, [sp, #16]
   1aed6:	f8cd 901c 	str.w	r9, [sp, #28]
   1aeda:	f8cd 9018 	str.w	r9, [sp, #24]
   1aede:	2322      	movs	r3, #34	; 0x22
   1aee0:	f04f 0a00 	mov.w	sl, #0
   1aee4:	f04f 0b00 	mov.w	fp, #0
   1aee8:	f8c8 3000 	str.w	r3, [r8]
   1aeec:	e78a      	b.n	1ae04 <_strtod_l+0x4b4>
   1aeee:	bf00      	nop
   1aef0:	00020365 	.word	0x00020365
   1aef4:	000203a4 	.word	0x000203a4
   1aef8:	00020558 	.word	0x00020558
   1aefc:	00020530 	.word	0x00020530
   1af00:	7ca00000 	.word	0x7ca00000
   1af04:	fff80000 	.word	0xfff80000
   1af08:	7ff00000 	.word	0x7ff00000
   1af0c:	7fefffff 	.word	0x7fefffff
   1af10:	f014 0310 	ands.w	r3, r4, #16
   1af14:	bf18      	it	ne
   1af16:	236a      	movne	r3, #106	; 0x6a
   1af18:	4650      	mov	r0, sl
   1af1a:	9305      	str	r3, [sp, #20]
   1af1c:	4659      	mov	r1, fp
   1af1e:	2300      	movs	r3, #0
   1af20:	4e9f      	ldr	r6, [pc, #636]	; (1b1a0 <_strtod_l+0x850>)
   1af22:	2c00      	cmp	r4, #0
   1af24:	f300 8109 	bgt.w	1b13a <_strtod_l+0x7ea>
   1af28:	b10b      	cbz	r3, 1af2e <_strtod_l+0x5de>
   1af2a:	4682      	mov	sl, r0
   1af2c:	468b      	mov	fp, r1
   1af2e:	9b05      	ldr	r3, [sp, #20]
   1af30:	b1bb      	cbz	r3, 1af62 <_strtod_l+0x612>
   1af32:	f3cb 530a 	ubfx	r3, fp, #20, #11
   1af36:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1af3a:	2b00      	cmp	r3, #0
   1af3c:	4659      	mov	r1, fp
   1af3e:	dd10      	ble.n	1af62 <_strtod_l+0x612>
   1af40:	2b1f      	cmp	r3, #31
   1af42:	f340 8104 	ble.w	1b14e <_strtod_l+0x7fe>
   1af46:	2b34      	cmp	r3, #52	; 0x34
   1af48:	bfd8      	it	le
   1af4a:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   1af4e:	f04f 0a00 	mov.w	sl, #0
   1af52:	bfcf      	iteee	gt
   1af54:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   1af58:	3b20      	suble	r3, #32
   1af5a:	fa02 f303 	lslle.w	r3, r2, r3
   1af5e:	ea03 0b01 	andle.w	fp, r3, r1
   1af62:	2200      	movs	r2, #0
   1af64:	2300      	movs	r3, #0
   1af66:	4650      	mov	r0, sl
   1af68:	4659      	mov	r1, fp
   1af6a:	f004 f86b 	bl	1f044 <__aeabi_dcmpeq>
   1af6e:	2800      	cmp	r0, #0
   1af70:	d1ad      	bne.n	1aece <_strtod_l+0x57e>
   1af72:	9b06      	ldr	r3, [sp, #24]
   1af74:	9a04      	ldr	r2, [sp, #16]
   1af76:	9300      	str	r3, [sp, #0]
   1af78:	990a      	ldr	r1, [sp, #40]	; 0x28
   1af7a:	462b      	mov	r3, r5
   1af7c:	4640      	mov	r0, r8
   1af7e:	f002 f9c1 	bl	1d304 <__s2b>
   1af82:	9007      	str	r0, [sp, #28]
   1af84:	2800      	cmp	r0, #0
   1af86:	f43f af2e 	beq.w	1ade6 <_strtod_l+0x496>
   1af8a:	f1b9 0f00 	cmp.w	r9, #0
   1af8e:	f1c9 0300 	rsb	r3, r9, #0
   1af92:	bfa8      	it	ge
   1af94:	2300      	movge	r3, #0
   1af96:	930e      	str	r3, [sp, #56]	; 0x38
   1af98:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   1af9c:	f04f 0900 	mov.w	r9, #0
   1afa0:	930f      	str	r3, [sp, #60]	; 0x3c
   1afa2:	f8cd 9010 	str.w	r9, [sp, #16]
   1afa6:	9b07      	ldr	r3, [sp, #28]
   1afa8:	4640      	mov	r0, r8
   1afaa:	6859      	ldr	r1, [r3, #4]
   1afac:	f002 f924 	bl	1d1f8 <_Balloc>
   1afb0:	9006      	str	r0, [sp, #24]
   1afb2:	2800      	cmp	r0, #0
   1afb4:	f43f af1f 	beq.w	1adf6 <_strtod_l+0x4a6>
   1afb8:	9b07      	ldr	r3, [sp, #28]
   1afba:	300c      	adds	r0, #12
   1afbc:	691a      	ldr	r2, [r3, #16]
   1afbe:	f103 010c 	add.w	r1, r3, #12
   1afc2:	3202      	adds	r2, #2
   1afc4:	0092      	lsls	r2, r2, #2
   1afc6:	f7fd ff7c 	bl	18ec2 <memcpy>
   1afca:	ab1c      	add	r3, sp, #112	; 0x70
   1afcc:	9301      	str	r3, [sp, #4]
   1afce:	ab1b      	add	r3, sp, #108	; 0x6c
   1afd0:	9300      	str	r3, [sp, #0]
   1afd2:	4652      	mov	r2, sl
   1afd4:	465b      	mov	r3, fp
   1afd6:	4640      	mov	r0, r8
   1afd8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   1afdc:	f002 fc42 	bl	1d864 <__d2b>
   1afe0:	901a      	str	r0, [sp, #104]	; 0x68
   1afe2:	2800      	cmp	r0, #0
   1afe4:	f43f af07 	beq.w	1adf6 <_strtod_l+0x4a6>
   1afe8:	2101      	movs	r1, #1
   1afea:	4640      	mov	r0, r8
   1afec:	f002 fa16 	bl	1d41c <__i2b>
   1aff0:	9004      	str	r0, [sp, #16]
   1aff2:	4603      	mov	r3, r0
   1aff4:	2800      	cmp	r0, #0
   1aff6:	f43f aefe 	beq.w	1adf6 <_strtod_l+0x4a6>
   1affa:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1affc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1affe:	2d00      	cmp	r5, #0
   1b000:	bfab      	itete	ge
   1b002:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   1b004:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   1b006:	195e      	addge	r6, r3, r5
   1b008:	1b5c      	sublt	r4, r3, r5
   1b00a:	9b05      	ldr	r3, [sp, #20]
   1b00c:	bfa8      	it	ge
   1b00e:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   1b010:	eba5 0503 	sub.w	r5, r5, r3
   1b014:	4415      	add	r5, r2
   1b016:	4b63      	ldr	r3, [pc, #396]	; (1b1a4 <_strtod_l+0x854>)
   1b018:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   1b01c:	bfb8      	it	lt
   1b01e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   1b020:	429d      	cmp	r5, r3
   1b022:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   1b026:	f280 80a4 	bge.w	1b172 <_strtod_l+0x822>
   1b02a:	1b5b      	subs	r3, r3, r5
   1b02c:	2b1f      	cmp	r3, #31
   1b02e:	eba2 0203 	sub.w	r2, r2, r3
   1b032:	f04f 0701 	mov.w	r7, #1
   1b036:	f300 8091 	bgt.w	1b15c <_strtod_l+0x80c>
   1b03a:	2500      	movs	r5, #0
   1b03c:	fa07 f303 	lsl.w	r3, r7, r3
   1b040:	9314      	str	r3, [sp, #80]	; 0x50
   1b042:	18b7      	adds	r7, r6, r2
   1b044:	9b05      	ldr	r3, [sp, #20]
   1b046:	42be      	cmp	r6, r7
   1b048:	4414      	add	r4, r2
   1b04a:	441c      	add	r4, r3
   1b04c:	4633      	mov	r3, r6
   1b04e:	bfa8      	it	ge
   1b050:	463b      	movge	r3, r7
   1b052:	42a3      	cmp	r3, r4
   1b054:	bfa8      	it	ge
   1b056:	4623      	movge	r3, r4
   1b058:	2b00      	cmp	r3, #0
   1b05a:	bfc2      	ittt	gt
   1b05c:	1aff      	subgt	r7, r7, r3
   1b05e:	1ae4      	subgt	r4, r4, r3
   1b060:	1af6      	subgt	r6, r6, r3
   1b062:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b064:	b1bb      	cbz	r3, 1b096 <_strtod_l+0x746>
   1b066:	461a      	mov	r2, r3
   1b068:	9904      	ldr	r1, [sp, #16]
   1b06a:	4640      	mov	r0, r8
   1b06c:	f002 fa6c 	bl	1d548 <__pow5mult>
   1b070:	9004      	str	r0, [sp, #16]
   1b072:	2800      	cmp	r0, #0
   1b074:	f43f aebf 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b078:	4601      	mov	r1, r0
   1b07a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1b07c:	4640      	mov	r0, r8
   1b07e:	f002 f9d6 	bl	1d42e <__multiply>
   1b082:	9008      	str	r0, [sp, #32]
   1b084:	2800      	cmp	r0, #0
   1b086:	f43f aeb6 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b08a:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b08c:	4640      	mov	r0, r8
   1b08e:	f002 f8e7 	bl	1d260 <_Bfree>
   1b092:	9b08      	ldr	r3, [sp, #32]
   1b094:	931a      	str	r3, [sp, #104]	; 0x68
   1b096:	2f00      	cmp	r7, #0
   1b098:	dc6f      	bgt.n	1b17a <_strtod_l+0x82a>
   1b09a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1b09c:	2b00      	cmp	r3, #0
   1b09e:	d175      	bne.n	1b18c <_strtod_l+0x83c>
   1b0a0:	2c00      	cmp	r4, #0
   1b0a2:	dd08      	ble.n	1b0b6 <_strtod_l+0x766>
   1b0a4:	4622      	mov	r2, r4
   1b0a6:	9906      	ldr	r1, [sp, #24]
   1b0a8:	4640      	mov	r0, r8
   1b0aa:	f002 fa9b 	bl	1d5e4 <__lshift>
   1b0ae:	9006      	str	r0, [sp, #24]
   1b0b0:	2800      	cmp	r0, #0
   1b0b2:	f43f aea0 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b0b6:	2e00      	cmp	r6, #0
   1b0b8:	dd08      	ble.n	1b0cc <_strtod_l+0x77c>
   1b0ba:	4632      	mov	r2, r6
   1b0bc:	9904      	ldr	r1, [sp, #16]
   1b0be:	4640      	mov	r0, r8
   1b0c0:	f002 fa90 	bl	1d5e4 <__lshift>
   1b0c4:	9004      	str	r0, [sp, #16]
   1b0c6:	2800      	cmp	r0, #0
   1b0c8:	f43f ae95 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b0cc:	9a06      	ldr	r2, [sp, #24]
   1b0ce:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b0d0:	4640      	mov	r0, r8
   1b0d2:	f002 faf2 	bl	1d6ba <__mdiff>
   1b0d6:	4681      	mov	r9, r0
   1b0d8:	2800      	cmp	r0, #0
   1b0da:	f43f ae8c 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b0de:	2400      	movs	r4, #0
   1b0e0:	68c3      	ldr	r3, [r0, #12]
   1b0e2:	9904      	ldr	r1, [sp, #16]
   1b0e4:	60c4      	str	r4, [r0, #12]
   1b0e6:	9308      	str	r3, [sp, #32]
   1b0e8:	f002 facd 	bl	1d686 <__mcmp>
   1b0ec:	42a0      	cmp	r0, r4
   1b0ee:	da5b      	bge.n	1b1a8 <_strtod_l+0x858>
   1b0f0:	9b08      	ldr	r3, [sp, #32]
   1b0f2:	b9f3      	cbnz	r3, 1b132 <_strtod_l+0x7e2>
   1b0f4:	f1ba 0f00 	cmp.w	sl, #0
   1b0f8:	d11b      	bne.n	1b132 <_strtod_l+0x7e2>
   1b0fa:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b0fe:	b9c3      	cbnz	r3, 1b132 <_strtod_l+0x7e2>
   1b100:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b104:	0d1b      	lsrs	r3, r3, #20
   1b106:	051b      	lsls	r3, r3, #20
   1b108:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1b10c:	d911      	bls.n	1b132 <_strtod_l+0x7e2>
   1b10e:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1b112:	b91b      	cbnz	r3, 1b11c <_strtod_l+0x7cc>
   1b114:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1b118:	2b01      	cmp	r3, #1
   1b11a:	dd0a      	ble.n	1b132 <_strtod_l+0x7e2>
   1b11c:	4649      	mov	r1, r9
   1b11e:	2201      	movs	r2, #1
   1b120:	4640      	mov	r0, r8
   1b122:	f002 fa5f 	bl	1d5e4 <__lshift>
   1b126:	9904      	ldr	r1, [sp, #16]
   1b128:	4681      	mov	r9, r0
   1b12a:	f002 faac 	bl	1d686 <__mcmp>
   1b12e:	2800      	cmp	r0, #0
   1b130:	dc6b      	bgt.n	1b20a <_strtod_l+0x8ba>
   1b132:	9b05      	ldr	r3, [sp, #20]
   1b134:	2b00      	cmp	r3, #0
   1b136:	d175      	bne.n	1b224 <_strtod_l+0x8d4>
   1b138:	e668      	b.n	1ae0c <_strtod_l+0x4bc>
   1b13a:	07e2      	lsls	r2, r4, #31
   1b13c:	d504      	bpl.n	1b148 <_strtod_l+0x7f8>
   1b13e:	e9d6 2300 	ldrd	r2, r3, [r6]
   1b142:	f003 fd17 	bl	1eb74 <__aeabi_dmul>
   1b146:	2301      	movs	r3, #1
   1b148:	1064      	asrs	r4, r4, #1
   1b14a:	3608      	adds	r6, #8
   1b14c:	e6e9      	b.n	1af22 <_strtod_l+0x5d2>
   1b14e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b152:	fa02 f303 	lsl.w	r3, r2, r3
   1b156:	ea03 0a0a 	and.w	sl, r3, sl
   1b15a:	e702      	b.n	1af62 <_strtod_l+0x612>
   1b15c:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   1b160:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   1b164:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   1b168:	35e2      	adds	r5, #226	; 0xe2
   1b16a:	fa07 f505 	lsl.w	r5, r7, r5
   1b16e:	9714      	str	r7, [sp, #80]	; 0x50
   1b170:	e767      	b.n	1b042 <_strtod_l+0x6f2>
   1b172:	2301      	movs	r3, #1
   1b174:	2500      	movs	r5, #0
   1b176:	9314      	str	r3, [sp, #80]	; 0x50
   1b178:	e763      	b.n	1b042 <_strtod_l+0x6f2>
   1b17a:	463a      	mov	r2, r7
   1b17c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b17e:	4640      	mov	r0, r8
   1b180:	f002 fa30 	bl	1d5e4 <__lshift>
   1b184:	901a      	str	r0, [sp, #104]	; 0x68
   1b186:	2800      	cmp	r0, #0
   1b188:	d187      	bne.n	1b09a <_strtod_l+0x74a>
   1b18a:	e634      	b.n	1adf6 <_strtod_l+0x4a6>
   1b18c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1b18e:	9906      	ldr	r1, [sp, #24]
   1b190:	4640      	mov	r0, r8
   1b192:	f002 f9d9 	bl	1d548 <__pow5mult>
   1b196:	9006      	str	r0, [sp, #24]
   1b198:	2800      	cmp	r0, #0
   1b19a:	d181      	bne.n	1b0a0 <_strtod_l+0x750>
   1b19c:	e62b      	b.n	1adf6 <_strtod_l+0x4a6>
   1b19e:	bf00      	nop
   1b1a0:	000203b8 	.word	0x000203b8
   1b1a4:	fffffc02 	.word	0xfffffc02
   1b1a8:	f040 8086 	bne.w	1b2b8 <_strtod_l+0x968>
   1b1ac:	9a08      	ldr	r2, [sp, #32]
   1b1ae:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b1b2:	b332      	cbz	r2, 1b202 <_strtod_l+0x8b2>
   1b1b4:	4aac      	ldr	r2, [pc, #688]	; (1b468 <_strtod_l+0xb18>)
   1b1b6:	4659      	mov	r1, fp
   1b1b8:	4293      	cmp	r3, r2
   1b1ba:	d152      	bne.n	1b262 <_strtod_l+0x912>
   1b1bc:	9b05      	ldr	r3, [sp, #20]
   1b1be:	4650      	mov	r0, sl
   1b1c0:	b1d3      	cbz	r3, 1b1f8 <_strtod_l+0x8a8>
   1b1c2:	4aaa      	ldr	r2, [pc, #680]	; (1b46c <_strtod_l+0xb1c>)
   1b1c4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1b1c8:	400a      	ands	r2, r1
   1b1ca:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   1b1ce:	d816      	bhi.n	1b1fe <_strtod_l+0x8ae>
   1b1d0:	0d12      	lsrs	r2, r2, #20
   1b1d2:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   1b1d6:	fa04 f303 	lsl.w	r3, r4, r3
   1b1da:	4283      	cmp	r3, r0
   1b1dc:	d141      	bne.n	1b262 <_strtod_l+0x912>
   1b1de:	4aa4      	ldr	r2, [pc, #656]	; (1b470 <_strtod_l+0xb20>)
   1b1e0:	4291      	cmp	r1, r2
   1b1e2:	d102      	bne.n	1b1ea <_strtod_l+0x89a>
   1b1e4:	3301      	adds	r3, #1
   1b1e6:	f43f ae06 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b1ea:	4ba0      	ldr	r3, [pc, #640]	; (1b46c <_strtod_l+0xb1c>)
   1b1ec:	f04f 0a00 	mov.w	sl, #0
   1b1f0:	400b      	ands	r3, r1
   1b1f2:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   1b1f6:	e79c      	b.n	1b132 <_strtod_l+0x7e2>
   1b1f8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1b1fc:	e7ed      	b.n	1b1da <_strtod_l+0x88a>
   1b1fe:	4623      	mov	r3, r4
   1b200:	e7eb      	b.n	1b1da <_strtod_l+0x88a>
   1b202:	bb73      	cbnz	r3, 1b262 <_strtod_l+0x912>
   1b204:	f1ba 0f00 	cmp.w	sl, #0
   1b208:	d12b      	bne.n	1b262 <_strtod_l+0x912>
   1b20a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b20e:	9a05      	ldr	r2, [sp, #20]
   1b210:	0d1b      	lsrs	r3, r3, #20
   1b212:	051b      	lsls	r3, r3, #20
   1b214:	b1e2      	cbz	r2, 1b250 <_strtod_l+0x900>
   1b216:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1b21a:	dc19      	bgt.n	1b250 <_strtod_l+0x900>
   1b21c:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1b220:	f77f ae5d 	ble.w	1aede <_strtod_l+0x58e>
   1b224:	4b93      	ldr	r3, [pc, #588]	; (1b474 <_strtod_l+0xb24>)
   1b226:	4650      	mov	r0, sl
   1b228:	930d      	str	r3, [sp, #52]	; 0x34
   1b22a:	2300      	movs	r3, #0
   1b22c:	930c      	str	r3, [sp, #48]	; 0x30
   1b22e:	4659      	mov	r1, fp
   1b230:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1b234:	f003 fc9e 	bl	1eb74 <__aeabi_dmul>
   1b238:	4682      	mov	sl, r0
   1b23a:	468b      	mov	fp, r1
   1b23c:	2900      	cmp	r1, #0
   1b23e:	f47f ade5 	bne.w	1ae0c <_strtod_l+0x4bc>
   1b242:	2800      	cmp	r0, #0
   1b244:	f47f ade2 	bne.w	1ae0c <_strtod_l+0x4bc>
   1b248:	2322      	movs	r3, #34	; 0x22
   1b24a:	f8c8 3000 	str.w	r3, [r8]
   1b24e:	e5dd      	b.n	1ae0c <_strtod_l+0x4bc>
   1b250:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1b254:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   1b258:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1b25c:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   1b260:	e767      	b.n	1b132 <_strtod_l+0x7e2>
   1b262:	b19d      	cbz	r5, 1b28c <_strtod_l+0x93c>
   1b264:	ea15 0f0b 	tst.w	r5, fp
   1b268:	f43f af63 	beq.w	1b132 <_strtod_l+0x7e2>
   1b26c:	9b08      	ldr	r3, [sp, #32]
   1b26e:	9a05      	ldr	r2, [sp, #20]
   1b270:	4650      	mov	r0, sl
   1b272:	4659      	mov	r1, fp
   1b274:	b173      	cbz	r3, 1b294 <_strtod_l+0x944>
   1b276:	f7ff fb49 	bl	1a90c <sulp>
   1b27a:	4602      	mov	r2, r0
   1b27c:	460b      	mov	r3, r1
   1b27e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b282:	f7fc fd61 	bl	17d48 <__adddf3>
   1b286:	4682      	mov	sl, r0
   1b288:	468b      	mov	fp, r1
   1b28a:	e752      	b.n	1b132 <_strtod_l+0x7e2>
   1b28c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1b28e:	ea13 0f0a 	tst.w	r3, sl
   1b292:	e7e9      	b.n	1b268 <_strtod_l+0x918>
   1b294:	f7ff fb3a 	bl	1a90c <sulp>
   1b298:	4602      	mov	r2, r0
   1b29a:	460b      	mov	r3, r1
   1b29c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b2a0:	f7fc fd50 	bl	17d44 <__aeabi_dsub>
   1b2a4:	2200      	movs	r2, #0
   1b2a6:	2300      	movs	r3, #0
   1b2a8:	4682      	mov	sl, r0
   1b2aa:	468b      	mov	fp, r1
   1b2ac:	f003 feca 	bl	1f044 <__aeabi_dcmpeq>
   1b2b0:	2800      	cmp	r0, #0
   1b2b2:	f47f ae14 	bne.w	1aede <_strtod_l+0x58e>
   1b2b6:	e73c      	b.n	1b132 <_strtod_l+0x7e2>
   1b2b8:	9904      	ldr	r1, [sp, #16]
   1b2ba:	4648      	mov	r0, r9
   1b2bc:	f002 fb21 	bl	1d902 <__ratio>
   1b2c0:	2200      	movs	r2, #0
   1b2c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1b2c6:	4606      	mov	r6, r0
   1b2c8:	460f      	mov	r7, r1
   1b2ca:	f003 fecf 	bl	1f06c <__aeabi_dcmple>
   1b2ce:	2800      	cmp	r0, #0
   1b2d0:	d070      	beq.n	1b3b4 <_strtod_l+0xa64>
   1b2d2:	9b08      	ldr	r3, [sp, #32]
   1b2d4:	2b00      	cmp	r3, #0
   1b2d6:	d043      	beq.n	1b360 <_strtod_l+0xa10>
   1b2d8:	2600      	movs	r6, #0
   1b2da:	4f67      	ldr	r7, [pc, #412]	; (1b478 <_strtod_l+0xb28>)
   1b2dc:	4d66      	ldr	r5, [pc, #408]	; (1b478 <_strtod_l+0xb28>)
   1b2de:	4b63      	ldr	r3, [pc, #396]	; (1b46c <_strtod_l+0xb1c>)
   1b2e0:	ea0b 0303 	and.w	r3, fp, r3
   1b2e4:	9314      	str	r3, [sp, #80]	; 0x50
   1b2e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b2e8:	4b64      	ldr	r3, [pc, #400]	; (1b47c <_strtod_l+0xb2c>)
   1b2ea:	429a      	cmp	r2, r3
   1b2ec:	f040 80ce 	bne.w	1b48c <_strtod_l+0xb3c>
   1b2f0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1b2f4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1b2f8:	4650      	mov	r0, sl
   1b2fa:	4659      	mov	r1, fp
   1b2fc:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   1b300:	f002 fa3a 	bl	1d778 <__ulp>
   1b304:	4602      	mov	r2, r0
   1b306:	460b      	mov	r3, r1
   1b308:	4630      	mov	r0, r6
   1b30a:	4639      	mov	r1, r7
   1b30c:	f003 fc32 	bl	1eb74 <__aeabi_dmul>
   1b310:	4652      	mov	r2, sl
   1b312:	465b      	mov	r3, fp
   1b314:	f7fc fd18 	bl	17d48 <__adddf3>
   1b318:	4a54      	ldr	r2, [pc, #336]	; (1b46c <_strtod_l+0xb1c>)
   1b31a:	4b59      	ldr	r3, [pc, #356]	; (1b480 <_strtod_l+0xb30>)
   1b31c:	400a      	ands	r2, r1
   1b31e:	429a      	cmp	r2, r3
   1b320:	4682      	mov	sl, r0
   1b322:	d95d      	bls.n	1b3e0 <_strtod_l+0xa90>
   1b324:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b326:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   1b32a:	429a      	cmp	r2, r3
   1b32c:	d103      	bne.n	1b336 <_strtod_l+0x9e6>
   1b32e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1b330:	3301      	adds	r3, #1
   1b332:	f43f ad60 	beq.w	1adf6 <_strtod_l+0x4a6>
   1b336:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1b33a:	f8df b134 	ldr.w	fp, [pc, #308]	; 1b470 <_strtod_l+0xb20>
   1b33e:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b340:	4640      	mov	r0, r8
   1b342:	f001 ff8d 	bl	1d260 <_Bfree>
   1b346:	9906      	ldr	r1, [sp, #24]
   1b348:	4640      	mov	r0, r8
   1b34a:	f001 ff89 	bl	1d260 <_Bfree>
   1b34e:	9904      	ldr	r1, [sp, #16]
   1b350:	4640      	mov	r0, r8
   1b352:	f001 ff85 	bl	1d260 <_Bfree>
   1b356:	4649      	mov	r1, r9
   1b358:	4640      	mov	r0, r8
   1b35a:	f001 ff81 	bl	1d260 <_Bfree>
   1b35e:	e622      	b.n	1afa6 <_strtod_l+0x656>
   1b360:	f1ba 0f00 	cmp.w	sl, #0
   1b364:	d118      	bne.n	1b398 <_strtod_l+0xa48>
   1b366:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b36a:	b9e3      	cbnz	r3, 1b3a6 <_strtod_l+0xa56>
   1b36c:	2200      	movs	r2, #0
   1b36e:	4b42      	ldr	r3, [pc, #264]	; (1b478 <_strtod_l+0xb28>)
   1b370:	4630      	mov	r0, r6
   1b372:	4639      	mov	r1, r7
   1b374:	f003 fe70 	bl	1f058 <__aeabi_dcmplt>
   1b378:	b9c8      	cbnz	r0, 1b3ae <_strtod_l+0xa5e>
   1b37a:	2200      	movs	r2, #0
   1b37c:	4b41      	ldr	r3, [pc, #260]	; (1b484 <_strtod_l+0xb34>)
   1b37e:	4630      	mov	r0, r6
   1b380:	4639      	mov	r1, r7
   1b382:	f003 fbf7 	bl	1eb74 <__aeabi_dmul>
   1b386:	4604      	mov	r4, r0
   1b388:	460d      	mov	r5, r1
   1b38a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1b38e:	9416      	str	r4, [sp, #88]	; 0x58
   1b390:	9317      	str	r3, [sp, #92]	; 0x5c
   1b392:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   1b396:	e7a2      	b.n	1b2de <_strtod_l+0x98e>
   1b398:	f1ba 0f01 	cmp.w	sl, #1
   1b39c:	d103      	bne.n	1b3a6 <_strtod_l+0xa56>
   1b39e:	f1bb 0f00 	cmp.w	fp, #0
   1b3a2:	f43f ad9c 	beq.w	1aede <_strtod_l+0x58e>
   1b3a6:	2600      	movs	r6, #0
   1b3a8:	4f37      	ldr	r7, [pc, #220]	; (1b488 <_strtod_l+0xb38>)
   1b3aa:	2400      	movs	r4, #0
   1b3ac:	e796      	b.n	1b2dc <_strtod_l+0x98c>
   1b3ae:	9c08      	ldr	r4, [sp, #32]
   1b3b0:	4d34      	ldr	r5, [pc, #208]	; (1b484 <_strtod_l+0xb34>)
   1b3b2:	e7ea      	b.n	1b38a <_strtod_l+0xa3a>
   1b3b4:	4b33      	ldr	r3, [pc, #204]	; (1b484 <_strtod_l+0xb34>)
   1b3b6:	2200      	movs	r2, #0
   1b3b8:	4630      	mov	r0, r6
   1b3ba:	4639      	mov	r1, r7
   1b3bc:	f003 fbda 	bl	1eb74 <__aeabi_dmul>
   1b3c0:	9b08      	ldr	r3, [sp, #32]
   1b3c2:	4604      	mov	r4, r0
   1b3c4:	460d      	mov	r5, r1
   1b3c6:	b933      	cbnz	r3, 1b3d6 <_strtod_l+0xa86>
   1b3c8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1b3cc:	9010      	str	r0, [sp, #64]	; 0x40
   1b3ce:	9311      	str	r3, [sp, #68]	; 0x44
   1b3d0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1b3d4:	e783      	b.n	1b2de <_strtod_l+0x98e>
   1b3d6:	4602      	mov	r2, r0
   1b3d8:	460b      	mov	r3, r1
   1b3da:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1b3de:	e7f7      	b.n	1b3d0 <_strtod_l+0xa80>
   1b3e0:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   1b3e4:	9b05      	ldr	r3, [sp, #20]
   1b3e6:	2b00      	cmp	r3, #0
   1b3e8:	d1a9      	bne.n	1b33e <_strtod_l+0x9ee>
   1b3ea:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b3ee:	0d1b      	lsrs	r3, r3, #20
   1b3f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b3f2:	051b      	lsls	r3, r3, #20
   1b3f4:	429a      	cmp	r2, r3
   1b3f6:	465e      	mov	r6, fp
   1b3f8:	d1a1      	bne.n	1b33e <_strtod_l+0x9ee>
   1b3fa:	4629      	mov	r1, r5
   1b3fc:	4620      	mov	r0, r4
   1b3fe:	f003 fe69 	bl	1f0d4 <__aeabi_d2iz>
   1b402:	f7fc fded 	bl	17fe0 <__aeabi_i2d>
   1b406:	460b      	mov	r3, r1
   1b408:	4602      	mov	r2, r0
   1b40a:	4629      	mov	r1, r5
   1b40c:	4620      	mov	r0, r4
   1b40e:	f7fc fc99 	bl	17d44 <__aeabi_dsub>
   1b412:	9b08      	ldr	r3, [sp, #32]
   1b414:	4604      	mov	r4, r0
   1b416:	460d      	mov	r5, r1
   1b418:	b933      	cbnz	r3, 1b428 <_strtod_l+0xad8>
   1b41a:	f1ba 0f00 	cmp.w	sl, #0
   1b41e:	d103      	bne.n	1b428 <_strtod_l+0xad8>
   1b420:	f3cb 0613 	ubfx	r6, fp, #0, #20
   1b424:	2e00      	cmp	r6, #0
   1b426:	d06c      	beq.n	1b502 <_strtod_l+0xbb2>
   1b428:	a30b      	add	r3, pc, #44	; (adr r3, 1b458 <_strtod_l+0xb08>)
   1b42a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b42e:	4620      	mov	r0, r4
   1b430:	4629      	mov	r1, r5
   1b432:	f003 fe11 	bl	1f058 <__aeabi_dcmplt>
   1b436:	2800      	cmp	r0, #0
   1b438:	f47f ace8 	bne.w	1ae0c <_strtod_l+0x4bc>
   1b43c:	a308      	add	r3, pc, #32	; (adr r3, 1b460 <_strtod_l+0xb10>)
   1b43e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b442:	4620      	mov	r0, r4
   1b444:	4629      	mov	r1, r5
   1b446:	f003 fe25 	bl	1f094 <__aeabi_dcmpgt>
   1b44a:	2800      	cmp	r0, #0
   1b44c:	f43f af77 	beq.w	1b33e <_strtod_l+0x9ee>
   1b450:	e4dc      	b.n	1ae0c <_strtod_l+0x4bc>
   1b452:	bf00      	nop
   1b454:	f3af 8000 	nop.w
   1b458:	94a03595 	.word	0x94a03595
   1b45c:	3fdfffff 	.word	0x3fdfffff
   1b460:	35afe535 	.word	0x35afe535
   1b464:	3fe00000 	.word	0x3fe00000
   1b468:	000fffff 	.word	0x000fffff
   1b46c:	7ff00000 	.word	0x7ff00000
   1b470:	7fefffff 	.word	0x7fefffff
   1b474:	39500000 	.word	0x39500000
   1b478:	3ff00000 	.word	0x3ff00000
   1b47c:	7fe00000 	.word	0x7fe00000
   1b480:	7c9fffff 	.word	0x7c9fffff
   1b484:	3fe00000 	.word	0x3fe00000
   1b488:	bff00000 	.word	0xbff00000
   1b48c:	9b05      	ldr	r3, [sp, #20]
   1b48e:	b313      	cbz	r3, 1b4d6 <_strtod_l+0xb86>
   1b490:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1b492:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1b496:	d81e      	bhi.n	1b4d6 <_strtod_l+0xb86>
   1b498:	a325      	add	r3, pc, #148	; (adr r3, 1b530 <_strtod_l+0xbe0>)
   1b49a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b49e:	4620      	mov	r0, r4
   1b4a0:	4629      	mov	r1, r5
   1b4a2:	f003 fde3 	bl	1f06c <__aeabi_dcmple>
   1b4a6:	b190      	cbz	r0, 1b4ce <_strtod_l+0xb7e>
   1b4a8:	4629      	mov	r1, r5
   1b4aa:	4620      	mov	r0, r4
   1b4ac:	f7fc fdfe 	bl	180ac <__aeabi_d2uiz>
   1b4b0:	2800      	cmp	r0, #0
   1b4b2:	bf08      	it	eq
   1b4b4:	2001      	moveq	r0, #1
   1b4b6:	f7fc fd83 	bl	17fc0 <__aeabi_ui2d>
   1b4ba:	9b08      	ldr	r3, [sp, #32]
   1b4bc:	4604      	mov	r4, r0
   1b4be:	460d      	mov	r5, r1
   1b4c0:	b9d3      	cbnz	r3, 1b4f8 <_strtod_l+0xba8>
   1b4c2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1b4c6:	9012      	str	r0, [sp, #72]	; 0x48
   1b4c8:	9313      	str	r3, [sp, #76]	; 0x4c
   1b4ca:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   1b4ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b4d0:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1b4d4:	1a9f      	subs	r7, r3, r2
   1b4d6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b4da:	f002 f94d 	bl	1d778 <__ulp>
   1b4de:	4602      	mov	r2, r0
   1b4e0:	460b      	mov	r3, r1
   1b4e2:	4630      	mov	r0, r6
   1b4e4:	4639      	mov	r1, r7
   1b4e6:	f003 fb45 	bl	1eb74 <__aeabi_dmul>
   1b4ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1b4ee:	f7fc fc2b 	bl	17d48 <__adddf3>
   1b4f2:	4682      	mov	sl, r0
   1b4f4:	468b      	mov	fp, r1
   1b4f6:	e775      	b.n	1b3e4 <_strtod_l+0xa94>
   1b4f8:	4602      	mov	r2, r0
   1b4fa:	460b      	mov	r3, r1
   1b4fc:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   1b500:	e7e3      	b.n	1b4ca <_strtod_l+0xb7a>
   1b502:	a30d      	add	r3, pc, #52	; (adr r3, 1b538 <_strtod_l+0xbe8>)
   1b504:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b508:	f003 fda6 	bl	1f058 <__aeabi_dcmplt>
   1b50c:	e79d      	b.n	1b44a <_strtod_l+0xafa>
   1b50e:	2300      	movs	r3, #0
   1b510:	9309      	str	r3, [sp, #36]	; 0x24
   1b512:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b514:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1b516:	6013      	str	r3, [r2, #0]
   1b518:	f7ff ba5e 	b.w	1a9d8 <_strtod_l+0x88>
   1b51c:	2b65      	cmp	r3, #101	; 0x65
   1b51e:	f04f 0200 	mov.w	r2, #0
   1b522:	f43f abae 	beq.w	1ac82 <_strtod_l+0x332>
   1b526:	4615      	mov	r5, r2
   1b528:	2101      	movs	r1, #1
   1b52a:	f7ff bacd 	b.w	1aac8 <_strtod_l+0x178>
   1b52e:	bf00      	nop
   1b530:	ffc00000 	.word	0xffc00000
   1b534:	41dfffff 	.word	0x41dfffff
   1b538:	94a03595 	.word	0x94a03595
   1b53c:	3fcfffff 	.word	0x3fcfffff

0001b540 <_strtod_r>:
_strtod_r():
   1b540:	4b05      	ldr	r3, [pc, #20]	; (1b558 <_strtod_r+0x18>)
   1b542:	b410      	push	{r4}
   1b544:	681b      	ldr	r3, [r3, #0]
   1b546:	4c05      	ldr	r4, [pc, #20]	; (1b55c <_strtod_r+0x1c>)
   1b548:	6a1b      	ldr	r3, [r3, #32]
   1b54a:	2b00      	cmp	r3, #0
   1b54c:	bf08      	it	eq
   1b54e:	4623      	moveq	r3, r4
   1b550:	bc10      	pop	{r4}
   1b552:	f7ff b9fd 	b.w	1a950 <_strtod_l>
   1b556:	bf00      	nop
   1b558:	2007c0e0 	.word	0x2007c0e0
   1b55c:	2007c144 	.word	0x2007c144

0001b560 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   1b560:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b564:	4680      	mov	r8, r0
   1b566:	4689      	mov	r9, r1
   1b568:	4692      	mov	sl, r2
   1b56a:	461f      	mov	r7, r3
   1b56c:	468b      	mov	fp, r1
   1b56e:	465d      	mov	r5, fp
   1b570:	980a      	ldr	r0, [sp, #40]	; 0x28
   1b572:	f815 4b01 	ldrb.w	r4, [r5], #1
   1b576:	f7fd fbef 	bl	18d58 <__locale_ctype_ptr_l>
   1b57a:	4420      	add	r0, r4
   1b57c:	7846      	ldrb	r6, [r0, #1]
   1b57e:	f016 0608 	ands.w	r6, r6, #8
   1b582:	d10b      	bne.n	1b59c <_strtol_l.isra.0+0x3c>
   1b584:	2c2d      	cmp	r4, #45	; 0x2d
   1b586:	d10b      	bne.n	1b5a0 <_strtol_l.isra.0+0x40>
   1b588:	2601      	movs	r6, #1
   1b58a:	782c      	ldrb	r4, [r5, #0]
   1b58c:	f10b 0502 	add.w	r5, fp, #2
   1b590:	b167      	cbz	r7, 1b5ac <_strtol_l.isra.0+0x4c>
   1b592:	2f10      	cmp	r7, #16
   1b594:	d114      	bne.n	1b5c0 <_strtol_l.isra.0+0x60>
   1b596:	2c30      	cmp	r4, #48	; 0x30
   1b598:	d00a      	beq.n	1b5b0 <_strtol_l.isra.0+0x50>
   1b59a:	e011      	b.n	1b5c0 <_strtol_l.isra.0+0x60>
   1b59c:	46ab      	mov	fp, r5
   1b59e:	e7e6      	b.n	1b56e <_strtol_l.isra.0+0xe>
   1b5a0:	2c2b      	cmp	r4, #43	; 0x2b
   1b5a2:	bf04      	itt	eq
   1b5a4:	782c      	ldrbeq	r4, [r5, #0]
   1b5a6:	f10b 0502 	addeq.w	r5, fp, #2
   1b5aa:	e7f1      	b.n	1b590 <_strtol_l.isra.0+0x30>
   1b5ac:	2c30      	cmp	r4, #48	; 0x30
   1b5ae:	d127      	bne.n	1b600 <_strtol_l.isra.0+0xa0>
   1b5b0:	782b      	ldrb	r3, [r5, #0]
   1b5b2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   1b5b6:	2b58      	cmp	r3, #88	; 0x58
   1b5b8:	d14b      	bne.n	1b652 <_strtol_l.isra.0+0xf2>
   1b5ba:	2710      	movs	r7, #16
   1b5bc:	786c      	ldrb	r4, [r5, #1]
   1b5be:	3502      	adds	r5, #2
   1b5c0:	2e00      	cmp	r6, #0
   1b5c2:	bf0c      	ite	eq
   1b5c4:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   1b5c8:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   1b5cc:	2200      	movs	r2, #0
   1b5ce:	fbb1 fef7 	udiv	lr, r1, r7
   1b5d2:	4610      	mov	r0, r2
   1b5d4:	fb07 1c1e 	mls	ip, r7, lr, r1
   1b5d8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   1b5dc:	2b09      	cmp	r3, #9
   1b5de:	d811      	bhi.n	1b604 <_strtol_l.isra.0+0xa4>
   1b5e0:	461c      	mov	r4, r3
   1b5e2:	42a7      	cmp	r7, r4
   1b5e4:	dd1d      	ble.n	1b622 <_strtol_l.isra.0+0xc2>
   1b5e6:	1c53      	adds	r3, r2, #1
   1b5e8:	d007      	beq.n	1b5fa <_strtol_l.isra.0+0x9a>
   1b5ea:	4586      	cmp	lr, r0
   1b5ec:	d316      	bcc.n	1b61c <_strtol_l.isra.0+0xbc>
   1b5ee:	d101      	bne.n	1b5f4 <_strtol_l.isra.0+0x94>
   1b5f0:	45a4      	cmp	ip, r4
   1b5f2:	db13      	blt.n	1b61c <_strtol_l.isra.0+0xbc>
   1b5f4:	2201      	movs	r2, #1
   1b5f6:	fb00 4007 	mla	r0, r0, r7, r4
   1b5fa:	f815 4b01 	ldrb.w	r4, [r5], #1
   1b5fe:	e7eb      	b.n	1b5d8 <_strtol_l.isra.0+0x78>
   1b600:	270a      	movs	r7, #10
   1b602:	e7dd      	b.n	1b5c0 <_strtol_l.isra.0+0x60>
   1b604:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   1b608:	2b19      	cmp	r3, #25
   1b60a:	d801      	bhi.n	1b610 <_strtol_l.isra.0+0xb0>
   1b60c:	3c37      	subs	r4, #55	; 0x37
   1b60e:	e7e8      	b.n	1b5e2 <_strtol_l.isra.0+0x82>
   1b610:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   1b614:	2b19      	cmp	r3, #25
   1b616:	d804      	bhi.n	1b622 <_strtol_l.isra.0+0xc2>
   1b618:	3c57      	subs	r4, #87	; 0x57
   1b61a:	e7e2      	b.n	1b5e2 <_strtol_l.isra.0+0x82>
   1b61c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b620:	e7eb      	b.n	1b5fa <_strtol_l.isra.0+0x9a>
   1b622:	1c53      	adds	r3, r2, #1
   1b624:	d108      	bne.n	1b638 <_strtol_l.isra.0+0xd8>
   1b626:	2322      	movs	r3, #34	; 0x22
   1b628:	4608      	mov	r0, r1
   1b62a:	f8c8 3000 	str.w	r3, [r8]
   1b62e:	f1ba 0f00 	cmp.w	sl, #0
   1b632:	d107      	bne.n	1b644 <_strtol_l.isra.0+0xe4>
   1b634:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b638:	b106      	cbz	r6, 1b63c <_strtol_l.isra.0+0xdc>
   1b63a:	4240      	negs	r0, r0
   1b63c:	f1ba 0f00 	cmp.w	sl, #0
   1b640:	d00c      	beq.n	1b65c <_strtol_l.isra.0+0xfc>
   1b642:	b122      	cbz	r2, 1b64e <_strtol_l.isra.0+0xee>
   1b644:	3d01      	subs	r5, #1
   1b646:	f8ca 5000 	str.w	r5, [sl]
   1b64a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b64e:	464d      	mov	r5, r9
   1b650:	e7f9      	b.n	1b646 <_strtol_l.isra.0+0xe6>
   1b652:	2430      	movs	r4, #48	; 0x30
   1b654:	2f00      	cmp	r7, #0
   1b656:	d1b3      	bne.n	1b5c0 <_strtol_l.isra.0+0x60>
   1b658:	2708      	movs	r7, #8
   1b65a:	e7b1      	b.n	1b5c0 <_strtol_l.isra.0+0x60>
   1b65c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b660 <_strtol_r>:
_strtol_r():
   1b660:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1b662:	4c06      	ldr	r4, [pc, #24]	; (1b67c <_strtol_r+0x1c>)
   1b664:	4d06      	ldr	r5, [pc, #24]	; (1b680 <_strtol_r+0x20>)
   1b666:	6824      	ldr	r4, [r4, #0]
   1b668:	6a24      	ldr	r4, [r4, #32]
   1b66a:	2c00      	cmp	r4, #0
   1b66c:	bf08      	it	eq
   1b66e:	462c      	moveq	r4, r5
   1b670:	9400      	str	r4, [sp, #0]
   1b672:	f7ff ff75 	bl	1b560 <_strtol_l.isra.0>
   1b676:	b003      	add	sp, #12
   1b678:	bd30      	pop	{r4, r5, pc}
   1b67a:	bf00      	nop
   1b67c:	2007c0e0 	.word	0x2007c0e0
   1b680:	2007c144 	.word	0x2007c144

0001b684 <strtol>:
strtol():
   1b684:	4b08      	ldr	r3, [pc, #32]	; (1b6a8 <strtol+0x24>)
   1b686:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1b688:	681c      	ldr	r4, [r3, #0]
   1b68a:	4d08      	ldr	r5, [pc, #32]	; (1b6ac <strtol+0x28>)
   1b68c:	6a23      	ldr	r3, [r4, #32]
   1b68e:	2b00      	cmp	r3, #0
   1b690:	bf08      	it	eq
   1b692:	462b      	moveq	r3, r5
   1b694:	9300      	str	r3, [sp, #0]
   1b696:	4613      	mov	r3, r2
   1b698:	460a      	mov	r2, r1
   1b69a:	4601      	mov	r1, r0
   1b69c:	4620      	mov	r0, r4
   1b69e:	f7ff ff5f 	bl	1b560 <_strtol_l.isra.0>
   1b6a2:	b003      	add	sp, #12
   1b6a4:	bd30      	pop	{r4, r5, pc}
   1b6a6:	bf00      	nop
   1b6a8:	2007c0e0 	.word	0x2007c0e0
   1b6ac:	2007c144 	.word	0x2007c144

0001b6b0 <time>:
time():
   1b6b0:	b513      	push	{r0, r1, r4, lr}
   1b6b2:	4b08      	ldr	r3, [pc, #32]	; (1b6d4 <time+0x24>)
   1b6b4:	4604      	mov	r4, r0
   1b6b6:	2200      	movs	r2, #0
   1b6b8:	6818      	ldr	r0, [r3, #0]
   1b6ba:	4669      	mov	r1, sp
   1b6bc:	f001 fd54 	bl	1d168 <_gettimeofday_r>
   1b6c0:	2800      	cmp	r0, #0
   1b6c2:	bfbc      	itt	lt
   1b6c4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1b6c8:	9300      	strlt	r3, [sp, #0]
   1b6ca:	9800      	ldr	r0, [sp, #0]
   1b6cc:	b104      	cbz	r4, 1b6d0 <time+0x20>
   1b6ce:	6020      	str	r0, [r4, #0]
   1b6d0:	b002      	add	sp, #8
   1b6d2:	bd10      	pop	{r4, pc}
   1b6d4:	2007c0e0 	.word	0x2007c0e0

0001b6d8 <__tzcalc_limits>:
__tzcalc_limits():
   1b6d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6dc:	4604      	mov	r4, r0
   1b6de:	f001 fd55 	bl	1d18c <__gettzinfo>
   1b6e2:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1b6e6:	429c      	cmp	r4, r3
   1b6e8:	f340 8098 	ble.w	1b81c <__tzcalc_limits+0x144>
   1b6ec:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1b6f0:	f240 126d 	movw	r2, #365	; 0x16d
   1b6f4:	18e3      	adds	r3, r4, r3
   1b6f6:	109b      	asrs	r3, r3, #2
   1b6f8:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   1b6fc:	fb02 3505 	mla	r5, r2, r5, r3
   1b700:	f06f 0263 	mvn.w	r2, #99	; 0x63
   1b704:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   1b708:	fb93 f3f2 	sdiv	r3, r3, r2
   1b70c:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1b710:	441d      	add	r5, r3
   1b712:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1b716:	18a2      	adds	r2, r4, r2
   1b718:	fb92 f2f3 	sdiv	r2, r2, r3
   1b71c:	fb94 f7f3 	sdiv	r7, r4, r3
   1b720:	4415      	add	r5, r2
   1b722:	2264      	movs	r2, #100	; 0x64
   1b724:	fb03 4717 	mls	r7, r3, r7, r4
   1b728:	fb94 f6f2 	sdiv	r6, r4, r2
   1b72c:	fab7 fe87 	clz	lr, r7
   1b730:	4601      	mov	r1, r0
   1b732:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   1b736:	fb02 4616 	mls	r6, r2, r6, r4
   1b73a:	f100 0338 	add.w	r3, r0, #56	; 0x38
   1b73e:	9301      	str	r3, [sp, #4]
   1b740:	f004 0303 	and.w	r3, r4, #3
   1b744:	6044      	str	r4, [r0, #4]
   1b746:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1b74a:	9300      	str	r3, [sp, #0]
   1b74c:	7a0b      	ldrb	r3, [r1, #8]
   1b74e:	2b4a      	cmp	r3, #74	; 0x4a
   1b750:	d123      	bne.n	1b79a <__tzcalc_limits+0xc2>
   1b752:	694c      	ldr	r4, [r1, #20]
   1b754:	9a00      	ldr	r2, [sp, #0]
   1b756:	192b      	adds	r3, r5, r4
   1b758:	b902      	cbnz	r2, 1b75c <__tzcalc_limits+0x84>
   1b75a:	b906      	cbnz	r6, 1b75e <__tzcalc_limits+0x86>
   1b75c:	b9df      	cbnz	r7, 1b796 <__tzcalc_limits+0xbe>
   1b75e:	2c3b      	cmp	r4, #59	; 0x3b
   1b760:	bfd4      	ite	le
   1b762:	2400      	movle	r4, #0
   1b764:	2401      	movgt	r4, #1
   1b766:	441c      	add	r4, r3
   1b768:	3c01      	subs	r4, #1
   1b76a:	4b2d      	ldr	r3, [pc, #180]	; (1b820 <__tzcalc_limits+0x148>)
   1b76c:	698a      	ldr	r2, [r1, #24]
   1b76e:	fb03 2404 	mla	r4, r3, r4, r2
   1b772:	6a0b      	ldr	r3, [r1, #32]
   1b774:	441c      	add	r4, r3
   1b776:	9b01      	ldr	r3, [sp, #4]
   1b778:	f841 4f1c 	str.w	r4, [r1, #28]!
   1b77c:	428b      	cmp	r3, r1
   1b77e:	d1e5      	bne.n	1b74c <__tzcalc_limits+0x74>
   1b780:	69c3      	ldr	r3, [r0, #28]
   1b782:	6b82      	ldr	r2, [r0, #56]	; 0x38
   1b784:	4293      	cmp	r3, r2
   1b786:	bfac      	ite	ge
   1b788:	2300      	movge	r3, #0
   1b78a:	2301      	movlt	r3, #1
   1b78c:	6003      	str	r3, [r0, #0]
   1b78e:	2001      	movs	r0, #1
   1b790:	b003      	add	sp, #12
   1b792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b796:	2400      	movs	r4, #0
   1b798:	e7e5      	b.n	1b766 <__tzcalc_limits+0x8e>
   1b79a:	2b44      	cmp	r3, #68	; 0x44
   1b79c:	d102      	bne.n	1b7a4 <__tzcalc_limits+0xcc>
   1b79e:	694b      	ldr	r3, [r1, #20]
   1b7a0:	18ec      	adds	r4, r5, r3
   1b7a2:	e7e2      	b.n	1b76a <__tzcalc_limits+0x92>
   1b7a4:	9b00      	ldr	r3, [sp, #0]
   1b7a6:	bb7b      	cbnz	r3, 1b808 <__tzcalc_limits+0x130>
   1b7a8:	2e00      	cmp	r6, #0
   1b7aa:	bf0c      	ite	eq
   1b7ac:	46f0      	moveq	r8, lr
   1b7ae:	f04f 0801 	movne.w	r8, #1
   1b7b2:	2230      	movs	r2, #48	; 0x30
   1b7b4:	4b1b      	ldr	r3, [pc, #108]	; (1b824 <__tzcalc_limits+0x14c>)
   1b7b6:	f04f 0901 	mov.w	r9, #1
   1b7ba:	fb02 3808 	mla	r8, r2, r8, r3
   1b7be:	462b      	mov	r3, r5
   1b7c0:	68cc      	ldr	r4, [r1, #12]
   1b7c2:	f1a8 0a04 	sub.w	sl, r8, #4
   1b7c6:	45a1      	cmp	r9, r4
   1b7c8:	db20      	blt.n	1b80c <__tzcalc_limits+0x134>
   1b7ca:	2207      	movs	r2, #7
   1b7cc:	2c01      	cmp	r4, #1
   1b7ce:	bfb8      	it	lt
   1b7d0:	2401      	movlt	r4, #1
   1b7d2:	f103 0b04 	add.w	fp, r3, #4
   1b7d6:	fb9b faf2 	sdiv	sl, fp, r2
   1b7da:	46a1      	mov	r9, r4
   1b7dc:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1b7e0:	694c      	ldr	r4, [r1, #20]
   1b7e2:	ebab 0a0a 	sub.w	sl, fp, sl
   1b7e6:	ebb4 0a0a 	subs.w	sl, r4, sl
   1b7ea:	690c      	ldr	r4, [r1, #16]
   1b7ec:	44e1      	add	r9, ip
   1b7ee:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   1b7f2:	bf48      	it	mi
   1b7f4:	4492      	addmi	sl, r2
   1b7f6:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   1b7fa:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1b7fe:	4454      	add	r4, sl
   1b800:	4544      	cmp	r4, r8
   1b802:	da09      	bge.n	1b818 <__tzcalc_limits+0x140>
   1b804:	441c      	add	r4, r3
   1b806:	e7b0      	b.n	1b76a <__tzcalc_limits+0x92>
   1b808:	46f0      	mov	r8, lr
   1b80a:	e7d2      	b.n	1b7b2 <__tzcalc_limits+0xda>
   1b80c:	f85a bf04 	ldr.w	fp, [sl, #4]!
   1b810:	f109 0901 	add.w	r9, r9, #1
   1b814:	445b      	add	r3, fp
   1b816:	e7d6      	b.n	1b7c6 <__tzcalc_limits+0xee>
   1b818:	3c07      	subs	r4, #7
   1b81a:	e7f1      	b.n	1b800 <__tzcalc_limits+0x128>
   1b81c:	2000      	movs	r0, #0
   1b81e:	e7b7      	b.n	1b790 <__tzcalc_limits+0xb8>
   1b820:	00015180 	.word	0x00015180
   1b824:	000202f8 	.word	0x000202f8

0001b828 <__tz_lock>:
__tz_lock():
   1b828:	4770      	bx	lr

0001b82a <__tz_unlock>:
__tz_unlock():
   1b82a:	4770      	bx	lr

0001b82c <_tzset_unlocked>:
_tzset_unlocked():
   1b82c:	4b01      	ldr	r3, [pc, #4]	; (1b834 <_tzset_unlocked+0x8>)
   1b82e:	6818      	ldr	r0, [r3, #0]
   1b830:	f000 b802 	b.w	1b838 <_tzset_unlocked_r>
   1b834:	2007c0e0 	.word	0x2007c0e0

0001b838 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   1b838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b83c:	b08d      	sub	sp, #52	; 0x34
   1b83e:	4607      	mov	r7, r0
   1b840:	f001 fca4 	bl	1d18c <__gettzinfo>
   1b844:	49b1      	ldr	r1, [pc, #708]	; (1bb0c <_tzset_unlocked_r+0x2d4>)
   1b846:	4605      	mov	r5, r0
   1b848:	4638      	mov	r0, r7
   1b84a:	f001 fc85 	bl	1d158 <_getenv_r>
   1b84e:	4eb0      	ldr	r6, [pc, #704]	; (1bb10 <_tzset_unlocked_r+0x2d8>)
   1b850:	4604      	mov	r4, r0
   1b852:	b970      	cbnz	r0, 1b872 <_tzset_unlocked_r+0x3a>
   1b854:	4baf      	ldr	r3, [pc, #700]	; (1bb14 <_tzset_unlocked_r+0x2dc>)
   1b856:	4ab0      	ldr	r2, [pc, #704]	; (1bb18 <_tzset_unlocked_r+0x2e0>)
   1b858:	6018      	str	r0, [r3, #0]
   1b85a:	4bb0      	ldr	r3, [pc, #704]	; (1bb1c <_tzset_unlocked_r+0x2e4>)
   1b85c:	6018      	str	r0, [r3, #0]
   1b85e:	4bb0      	ldr	r3, [pc, #704]	; (1bb20 <_tzset_unlocked_r+0x2e8>)
   1b860:	6830      	ldr	r0, [r6, #0]
   1b862:	601a      	str	r2, [r3, #0]
   1b864:	605a      	str	r2, [r3, #4]
   1b866:	f7fd faf5 	bl	18e54 <free>
   1b86a:	6034      	str	r4, [r6, #0]
   1b86c:	b00d      	add	sp, #52	; 0x34
   1b86e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b872:	6831      	ldr	r1, [r6, #0]
   1b874:	2900      	cmp	r1, #0
   1b876:	d160      	bne.n	1b93a <_tzset_unlocked_r+0x102>
   1b878:	6830      	ldr	r0, [r6, #0]
   1b87a:	f7fd faeb 	bl	18e54 <free>
   1b87e:	4620      	mov	r0, r4
   1b880:	f7ff f815 	bl	1a8ae <strlen>
   1b884:	1c41      	adds	r1, r0, #1
   1b886:	4638      	mov	r0, r7
   1b888:	f7fd fe3a 	bl	19500 <_malloc_r>
   1b88c:	6030      	str	r0, [r6, #0]
   1b88e:	2800      	cmp	r0, #0
   1b890:	d158      	bne.n	1b944 <_tzset_unlocked_r+0x10c>
   1b892:	7823      	ldrb	r3, [r4, #0]
   1b894:	ae0a      	add	r6, sp, #40	; 0x28
   1b896:	2b3a      	cmp	r3, #58	; 0x3a
   1b898:	bf08      	it	eq
   1b89a:	3401      	addeq	r4, #1
   1b89c:	4633      	mov	r3, r6
   1b89e:	4aa1      	ldr	r2, [pc, #644]	; (1bb24 <_tzset_unlocked_r+0x2ec>)
   1b8a0:	49a1      	ldr	r1, [pc, #644]	; (1bb28 <_tzset_unlocked_r+0x2f0>)
   1b8a2:	4620      	mov	r0, r4
   1b8a4:	f7fe ff82 	bl	1a7ac <siscanf>
   1b8a8:	2800      	cmp	r0, #0
   1b8aa:	dddf      	ble.n	1b86c <_tzset_unlocked_r+0x34>
   1b8ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b8ae:	18e7      	adds	r7, r4, r3
   1b8b0:	5ce3      	ldrb	r3, [r4, r3]
   1b8b2:	2b2d      	cmp	r3, #45	; 0x2d
   1b8b4:	d14a      	bne.n	1b94c <_tzset_unlocked_r+0x114>
   1b8b6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1b8ba:	3701      	adds	r7, #1
   1b8bc:	f04f 0800 	mov.w	r8, #0
   1b8c0:	f10d 0a20 	add.w	sl, sp, #32
   1b8c4:	f10d 0b1e 	add.w	fp, sp, #30
   1b8c8:	9603      	str	r6, [sp, #12]
   1b8ca:	f8cd a008 	str.w	sl, [sp, #8]
   1b8ce:	9601      	str	r6, [sp, #4]
   1b8d0:	f8cd b000 	str.w	fp, [sp]
   1b8d4:	4633      	mov	r3, r6
   1b8d6:	aa07      	add	r2, sp, #28
   1b8d8:	4994      	ldr	r1, [pc, #592]	; (1bb2c <_tzset_unlocked_r+0x2f4>)
   1b8da:	4638      	mov	r0, r7
   1b8dc:	f8ad 801e 	strh.w	r8, [sp, #30]
   1b8e0:	f8ad 8020 	strh.w	r8, [sp, #32]
   1b8e4:	f7fe ff62 	bl	1a7ac <siscanf>
   1b8e8:	4540      	cmp	r0, r8
   1b8ea:	ddbf      	ble.n	1b86c <_tzset_unlocked_r+0x34>
   1b8ec:	213c      	movs	r1, #60	; 0x3c
   1b8ee:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1b8f2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1b8f6:	f8df 9240 	ldr.w	r9, [pc, #576]	; 1bb38 <_tzset_unlocked_r+0x300>
   1b8fa:	fb01 2203 	mla	r2, r1, r3, r2
   1b8fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1b902:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1b906:	fb01 2303 	mla	r3, r1, r3, r2
   1b90a:	435c      	muls	r4, r3
   1b90c:	4b85      	ldr	r3, [pc, #532]	; (1bb24 <_tzset_unlocked_r+0x2ec>)
   1b90e:	622c      	str	r4, [r5, #32]
   1b910:	4c83      	ldr	r4, [pc, #524]	; (1bb20 <_tzset_unlocked_r+0x2e8>)
   1b912:	464a      	mov	r2, r9
   1b914:	6023      	str	r3, [r4, #0]
   1b916:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b918:	4983      	ldr	r1, [pc, #524]	; (1bb28 <_tzset_unlocked_r+0x2f0>)
   1b91a:	441f      	add	r7, r3
   1b91c:	4638      	mov	r0, r7
   1b91e:	4633      	mov	r3, r6
   1b920:	f7fe ff44 	bl	1a7ac <siscanf>
   1b924:	4540      	cmp	r0, r8
   1b926:	dc16      	bgt.n	1b956 <_tzset_unlocked_r+0x11e>
   1b928:	6823      	ldr	r3, [r4, #0]
   1b92a:	6a2a      	ldr	r2, [r5, #32]
   1b92c:	6063      	str	r3, [r4, #4]
   1b92e:	4b79      	ldr	r3, [pc, #484]	; (1bb14 <_tzset_unlocked_r+0x2dc>)
   1b930:	601a      	str	r2, [r3, #0]
   1b932:	4b7a      	ldr	r3, [pc, #488]	; (1bb1c <_tzset_unlocked_r+0x2e4>)
   1b934:	f8c3 8000 	str.w	r8, [r3]
   1b938:	e798      	b.n	1b86c <_tzset_unlocked_r+0x34>
   1b93a:	f7fe ffa6 	bl	1a88a <strcmp>
   1b93e:	2800      	cmp	r0, #0
   1b940:	d094      	beq.n	1b86c <_tzset_unlocked_r+0x34>
   1b942:	e799      	b.n	1b878 <_tzset_unlocked_r+0x40>
   1b944:	4621      	mov	r1, r4
   1b946:	f7fe ffaa 	bl	1a89e <strcpy>
   1b94a:	e7a2      	b.n	1b892 <_tzset_unlocked_r+0x5a>
   1b94c:	2b2b      	cmp	r3, #43	; 0x2b
   1b94e:	bf08      	it	eq
   1b950:	3701      	addeq	r7, #1
   1b952:	2401      	movs	r4, #1
   1b954:	e7b2      	b.n	1b8bc <_tzset_unlocked_r+0x84>
   1b956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b958:	f8c4 9004 	str.w	r9, [r4, #4]
   1b95c:	18fc      	adds	r4, r7, r3
   1b95e:	5cfb      	ldrb	r3, [r7, r3]
   1b960:	2b2d      	cmp	r3, #45	; 0x2d
   1b962:	f040 8092 	bne.w	1ba8a <_tzset_unlocked_r+0x252>
   1b966:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1b96a:	3401      	adds	r4, #1
   1b96c:	2300      	movs	r3, #0
   1b96e:	9603      	str	r6, [sp, #12]
   1b970:	f8ad 301c 	strh.w	r3, [sp, #28]
   1b974:	f8ad 301e 	strh.w	r3, [sp, #30]
   1b978:	f8ad 3020 	strh.w	r3, [sp, #32]
   1b97c:	930a      	str	r3, [sp, #40]	; 0x28
   1b97e:	f8cd a008 	str.w	sl, [sp, #8]
   1b982:	9601      	str	r6, [sp, #4]
   1b984:	f8cd b000 	str.w	fp, [sp]
   1b988:	4633      	mov	r3, r6
   1b98a:	aa07      	add	r2, sp, #28
   1b98c:	4967      	ldr	r1, [pc, #412]	; (1bb2c <_tzset_unlocked_r+0x2f4>)
   1b98e:	4620      	mov	r0, r4
   1b990:	f7fe ff0c 	bl	1a7ac <siscanf>
   1b994:	2800      	cmp	r0, #0
   1b996:	dc7d      	bgt.n	1ba94 <_tzset_unlocked_r+0x25c>
   1b998:	6a2b      	ldr	r3, [r5, #32]
   1b99a:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   1b99e:	63eb      	str	r3, [r5, #60]	; 0x3c
   1b9a0:	462f      	mov	r7, r5
   1b9a2:	f04f 0900 	mov.w	r9, #0
   1b9a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b9a8:	441c      	add	r4, r3
   1b9aa:	7823      	ldrb	r3, [r4, #0]
   1b9ac:	2b2c      	cmp	r3, #44	; 0x2c
   1b9ae:	bf08      	it	eq
   1b9b0:	3401      	addeq	r4, #1
   1b9b2:	f894 8000 	ldrb.w	r8, [r4]
   1b9b6:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   1b9ba:	d17b      	bne.n	1bab4 <_tzset_unlocked_r+0x27c>
   1b9bc:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   1b9c0:	9302      	str	r3, [sp, #8]
   1b9c2:	ab09      	add	r3, sp, #36	; 0x24
   1b9c4:	9300      	str	r3, [sp, #0]
   1b9c6:	9603      	str	r6, [sp, #12]
   1b9c8:	9601      	str	r6, [sp, #4]
   1b9ca:	4633      	mov	r3, r6
   1b9cc:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   1b9d0:	4957      	ldr	r1, [pc, #348]	; (1bb30 <_tzset_unlocked_r+0x2f8>)
   1b9d2:	4620      	mov	r0, r4
   1b9d4:	f7fe feea 	bl	1a7ac <siscanf>
   1b9d8:	2803      	cmp	r0, #3
   1b9da:	f47f af47 	bne.w	1b86c <_tzset_unlocked_r+0x34>
   1b9de:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   1b9e2:	1e4b      	subs	r3, r1, #1
   1b9e4:	2b0b      	cmp	r3, #11
   1b9e6:	f63f af41 	bhi.w	1b86c <_tzset_unlocked_r+0x34>
   1b9ea:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   1b9ee:	1e53      	subs	r3, r2, #1
   1b9f0:	2b04      	cmp	r3, #4
   1b9f2:	f63f af3b 	bhi.w	1b86c <_tzset_unlocked_r+0x34>
   1b9f6:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   1b9fa:	2b06      	cmp	r3, #6
   1b9fc:	f63f af36 	bhi.w	1b86c <_tzset_unlocked_r+0x34>
   1ba00:	f887 8008 	strb.w	r8, [r7, #8]
   1ba04:	60f9      	str	r1, [r7, #12]
   1ba06:	613a      	str	r2, [r7, #16]
   1ba08:	617b      	str	r3, [r7, #20]
   1ba0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ba0c:	eb04 0803 	add.w	r8, r4, r3
   1ba10:	2302      	movs	r3, #2
   1ba12:	f8ad 301c 	strh.w	r3, [sp, #28]
   1ba16:	2300      	movs	r3, #0
   1ba18:	f8ad 301e 	strh.w	r3, [sp, #30]
   1ba1c:	f8ad 3020 	strh.w	r3, [sp, #32]
   1ba20:	930a      	str	r3, [sp, #40]	; 0x28
   1ba22:	f898 3000 	ldrb.w	r3, [r8]
   1ba26:	2b2f      	cmp	r3, #47	; 0x2f
   1ba28:	d10b      	bne.n	1ba42 <_tzset_unlocked_r+0x20a>
   1ba2a:	9603      	str	r6, [sp, #12]
   1ba2c:	f8cd a008 	str.w	sl, [sp, #8]
   1ba30:	9601      	str	r6, [sp, #4]
   1ba32:	f8cd b000 	str.w	fp, [sp]
   1ba36:	4633      	mov	r3, r6
   1ba38:	aa07      	add	r2, sp, #28
   1ba3a:	493e      	ldr	r1, [pc, #248]	; (1bb34 <_tzset_unlocked_r+0x2fc>)
   1ba3c:	4640      	mov	r0, r8
   1ba3e:	f7fe feb5 	bl	1a7ac <siscanf>
   1ba42:	213c      	movs	r1, #60	; 0x3c
   1ba44:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1ba48:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1ba4c:	f109 0901 	add.w	r9, r9, #1
   1ba50:	fb01 2203 	mla	r2, r1, r3, r2
   1ba54:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1ba58:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1ba5c:	f1b9 0f02 	cmp.w	r9, #2
   1ba60:	fb01 2303 	mla	r3, r1, r3, r2
   1ba64:	61bb      	str	r3, [r7, #24]
   1ba66:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1ba68:	f107 071c 	add.w	r7, r7, #28
   1ba6c:	4444      	add	r4, r8
   1ba6e:	d19c      	bne.n	1b9aa <_tzset_unlocked_r+0x172>
   1ba70:	6868      	ldr	r0, [r5, #4]
   1ba72:	f7ff fe31 	bl	1b6d8 <__tzcalc_limits>
   1ba76:	6a2a      	ldr	r2, [r5, #32]
   1ba78:	4b26      	ldr	r3, [pc, #152]	; (1bb14 <_tzset_unlocked_r+0x2dc>)
   1ba7a:	601a      	str	r2, [r3, #0]
   1ba7c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1ba7e:	1a9b      	subs	r3, r3, r2
   1ba80:	bf18      	it	ne
   1ba82:	2301      	movne	r3, #1
   1ba84:	4a25      	ldr	r2, [pc, #148]	; (1bb1c <_tzset_unlocked_r+0x2e4>)
   1ba86:	6013      	str	r3, [r2, #0]
   1ba88:	e6f0      	b.n	1b86c <_tzset_unlocked_r+0x34>
   1ba8a:	2b2b      	cmp	r3, #43	; 0x2b
   1ba8c:	bf08      	it	eq
   1ba8e:	3401      	addeq	r4, #1
   1ba90:	2701      	movs	r7, #1
   1ba92:	e76b      	b.n	1b96c <_tzset_unlocked_r+0x134>
   1ba94:	213c      	movs	r1, #60	; 0x3c
   1ba96:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1ba9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1ba9e:	fb01 2203 	mla	r2, r1, r3, r2
   1baa2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1baa6:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1baaa:	fb01 2303 	mla	r3, r1, r3, r2
   1baae:	435f      	muls	r7, r3
   1bab0:	63ef      	str	r7, [r5, #60]	; 0x3c
   1bab2:	e775      	b.n	1b9a0 <_tzset_unlocked_r+0x168>
   1bab4:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   1bab8:	bf0a      	itet	eq
   1baba:	4643      	moveq	r3, r8
   1babc:	2344      	movne	r3, #68	; 0x44
   1babe:	3401      	addeq	r4, #1
   1bac0:	220a      	movs	r2, #10
   1bac2:	a90b      	add	r1, sp, #44	; 0x2c
   1bac4:	4620      	mov	r0, r4
   1bac6:	9305      	str	r3, [sp, #20]
   1bac8:	f002 ff86 	bl	1e9d8 <strtoul>
   1bacc:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   1bad0:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   1bad4:	4544      	cmp	r4, r8
   1bad6:	9b05      	ldr	r3, [sp, #20]
   1bad8:	d114      	bne.n	1bb04 <_tzset_unlocked_r+0x2cc>
   1bada:	234d      	movs	r3, #77	; 0x4d
   1badc:	f1b9 0f00 	cmp.w	r9, #0
   1bae0:	d107      	bne.n	1baf2 <_tzset_unlocked_r+0x2ba>
   1bae2:	722b      	strb	r3, [r5, #8]
   1bae4:	2303      	movs	r3, #3
   1bae6:	60eb      	str	r3, [r5, #12]
   1bae8:	2302      	movs	r3, #2
   1baea:	f8c5 9014 	str.w	r9, [r5, #20]
   1baee:	612b      	str	r3, [r5, #16]
   1baf0:	e78e      	b.n	1ba10 <_tzset_unlocked_r+0x1d8>
   1baf2:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   1baf6:	230b      	movs	r3, #11
   1baf8:	62ab      	str	r3, [r5, #40]	; 0x28
   1bafa:	2301      	movs	r3, #1
   1bafc:	62eb      	str	r3, [r5, #44]	; 0x2c
   1bafe:	2300      	movs	r3, #0
   1bb00:	632b      	str	r3, [r5, #48]	; 0x30
   1bb02:	e785      	b.n	1ba10 <_tzset_unlocked_r+0x1d8>
   1bb04:	b280      	uxth	r0, r0
   1bb06:	723b      	strb	r3, [r7, #8]
   1bb08:	6178      	str	r0, [r7, #20]
   1bb0a:	e781      	b.n	1ba10 <_tzset_unlocked_r+0x1d8>
   1bb0c:	000203e0 	.word	0x000203e0
   1bb10:	2007c7a0 	.word	0x2007c7a0
   1bb14:	2007c7a8 	.word	0x2007c7a8
   1bb18:	000203e3 	.word	0x000203e3
   1bb1c:	2007c7a4 	.word	0x2007c7a4
   1bb20:	2007c2b0 	.word	0x2007c2b0
   1bb24:	2007c793 	.word	0x2007c793
   1bb28:	000203e7 	.word	0x000203e7
   1bb2c:	0002040a 	.word	0x0002040a
   1bb30:	000203f6 	.word	0x000203f6
   1bb34:	00020409 	.word	0x00020409
   1bb38:	2007c788 	.word	0x2007c788

0001bb3c <_vsniprintf_r>:
_vsniprintf_r():
   1bb3c:	b530      	push	{r4, r5, lr}
   1bb3e:	1e14      	subs	r4, r2, #0
   1bb40:	4605      	mov	r5, r0
   1bb42:	b09b      	sub	sp, #108	; 0x6c
   1bb44:	4618      	mov	r0, r3
   1bb46:	da05      	bge.n	1bb54 <_vsniprintf_r+0x18>
   1bb48:	238b      	movs	r3, #139	; 0x8b
   1bb4a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1bb4e:	602b      	str	r3, [r5, #0]
   1bb50:	b01b      	add	sp, #108	; 0x6c
   1bb52:	bd30      	pop	{r4, r5, pc}
   1bb54:	f44f 7302 	mov.w	r3, #520	; 0x208
   1bb58:	f8ad 300c 	strh.w	r3, [sp, #12]
   1bb5c:	bf0c      	ite	eq
   1bb5e:	4623      	moveq	r3, r4
   1bb60:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1bb64:	9302      	str	r3, [sp, #8]
   1bb66:	9305      	str	r3, [sp, #20]
   1bb68:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1bb6c:	9100      	str	r1, [sp, #0]
   1bb6e:	9104      	str	r1, [sp, #16]
   1bb70:	f8ad 300e 	strh.w	r3, [sp, #14]
   1bb74:	4602      	mov	r2, r0
   1bb76:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1bb78:	4669      	mov	r1, sp
   1bb7a:	4628      	mov	r0, r5
   1bb7c:	f001 ffa6 	bl	1dacc <_svfiprintf_r>
   1bb80:	1c43      	adds	r3, r0, #1
   1bb82:	bfbc      	itt	lt
   1bb84:	238b      	movlt	r3, #139	; 0x8b
   1bb86:	602b      	strlt	r3, [r5, #0]
   1bb88:	2c00      	cmp	r4, #0
   1bb8a:	d0e1      	beq.n	1bb50 <_vsniprintf_r+0x14>
   1bb8c:	2200      	movs	r2, #0
   1bb8e:	9b00      	ldr	r3, [sp, #0]
   1bb90:	701a      	strb	r2, [r3, #0]
   1bb92:	e7dd      	b.n	1bb50 <_vsniprintf_r+0x14>

0001bb94 <vsniprintf>:
vsniprintf():
   1bb94:	b507      	push	{r0, r1, r2, lr}
   1bb96:	9300      	str	r3, [sp, #0]
   1bb98:	4613      	mov	r3, r2
   1bb9a:	460a      	mov	r2, r1
   1bb9c:	4601      	mov	r1, r0
   1bb9e:	4803      	ldr	r0, [pc, #12]	; (1bbac <vsniprintf+0x18>)
   1bba0:	6800      	ldr	r0, [r0, #0]
   1bba2:	f7ff ffcb 	bl	1bb3c <_vsniprintf_r>
   1bba6:	b003      	add	sp, #12
   1bba8:	f85d fb04 	ldr.w	pc, [sp], #4
   1bbac:	2007c0e0 	.word	0x2007c0e0

0001bbb0 <__swbuf_r>:
__swbuf_r():
   1bbb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1bbb2:	460e      	mov	r6, r1
   1bbb4:	4614      	mov	r4, r2
   1bbb6:	4605      	mov	r5, r0
   1bbb8:	b118      	cbz	r0, 1bbc2 <__swbuf_r+0x12>
   1bbba:	6983      	ldr	r3, [r0, #24]
   1bbbc:	b90b      	cbnz	r3, 1bbc2 <__swbuf_r+0x12>
   1bbbe:	f7fd f801 	bl	18bc4 <__sinit>
   1bbc2:	4b21      	ldr	r3, [pc, #132]	; (1bc48 <__swbuf_r+0x98>)
   1bbc4:	429c      	cmp	r4, r3
   1bbc6:	d12a      	bne.n	1bc1e <__swbuf_r+0x6e>
   1bbc8:	686c      	ldr	r4, [r5, #4]
   1bbca:	69a3      	ldr	r3, [r4, #24]
   1bbcc:	60a3      	str	r3, [r4, #8]
   1bbce:	89a3      	ldrh	r3, [r4, #12]
   1bbd0:	071a      	lsls	r2, r3, #28
   1bbd2:	d52e      	bpl.n	1bc32 <__swbuf_r+0x82>
   1bbd4:	6923      	ldr	r3, [r4, #16]
   1bbd6:	b363      	cbz	r3, 1bc32 <__swbuf_r+0x82>
   1bbd8:	6923      	ldr	r3, [r4, #16]
   1bbda:	6820      	ldr	r0, [r4, #0]
   1bbdc:	b2f6      	uxtb	r6, r6
   1bbde:	1ac0      	subs	r0, r0, r3
   1bbe0:	6963      	ldr	r3, [r4, #20]
   1bbe2:	4637      	mov	r7, r6
   1bbe4:	4298      	cmp	r0, r3
   1bbe6:	db04      	blt.n	1bbf2 <__swbuf_r+0x42>
   1bbe8:	4621      	mov	r1, r4
   1bbea:	4628      	mov	r0, r5
   1bbec:	f7fc ff6e 	bl	18acc <_fflush_r>
   1bbf0:	bb28      	cbnz	r0, 1bc3e <__swbuf_r+0x8e>
   1bbf2:	68a3      	ldr	r3, [r4, #8]
   1bbf4:	3001      	adds	r0, #1
   1bbf6:	3b01      	subs	r3, #1
   1bbf8:	60a3      	str	r3, [r4, #8]
   1bbfa:	6823      	ldr	r3, [r4, #0]
   1bbfc:	1c5a      	adds	r2, r3, #1
   1bbfe:	6022      	str	r2, [r4, #0]
   1bc00:	701e      	strb	r6, [r3, #0]
   1bc02:	6963      	ldr	r3, [r4, #20]
   1bc04:	4298      	cmp	r0, r3
   1bc06:	d004      	beq.n	1bc12 <__swbuf_r+0x62>
   1bc08:	89a3      	ldrh	r3, [r4, #12]
   1bc0a:	07db      	lsls	r3, r3, #31
   1bc0c:	d519      	bpl.n	1bc42 <__swbuf_r+0x92>
   1bc0e:	2e0a      	cmp	r6, #10
   1bc10:	d117      	bne.n	1bc42 <__swbuf_r+0x92>
   1bc12:	4621      	mov	r1, r4
   1bc14:	4628      	mov	r0, r5
   1bc16:	f7fc ff59 	bl	18acc <_fflush_r>
   1bc1a:	b190      	cbz	r0, 1bc42 <__swbuf_r+0x92>
   1bc1c:	e00f      	b.n	1bc3e <__swbuf_r+0x8e>
   1bc1e:	4b0b      	ldr	r3, [pc, #44]	; (1bc4c <__swbuf_r+0x9c>)
   1bc20:	429c      	cmp	r4, r3
   1bc22:	d101      	bne.n	1bc28 <__swbuf_r+0x78>
   1bc24:	68ac      	ldr	r4, [r5, #8]
   1bc26:	e7d0      	b.n	1bbca <__swbuf_r+0x1a>
   1bc28:	4b09      	ldr	r3, [pc, #36]	; (1bc50 <__swbuf_r+0xa0>)
   1bc2a:	429c      	cmp	r4, r3
   1bc2c:	bf08      	it	eq
   1bc2e:	68ec      	ldreq	r4, [r5, #12]
   1bc30:	e7cb      	b.n	1bbca <__swbuf_r+0x1a>
   1bc32:	4621      	mov	r1, r4
   1bc34:	4628      	mov	r0, r5
   1bc36:	f000 f82d 	bl	1bc94 <__swsetup_r>
   1bc3a:	2800      	cmp	r0, #0
   1bc3c:	d0cc      	beq.n	1bbd8 <__swbuf_r+0x28>
   1bc3e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1bc42:	4638      	mov	r0, r7
   1bc44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bc46:	bf00      	nop
   1bc48:	0002024c 	.word	0x0002024c
   1bc4c:	0002026c 	.word	0x0002026c
   1bc50:	0002022c 	.word	0x0002022c

0001bc54 <__ascii_wctomb>:
__ascii_wctomb():
   1bc54:	b149      	cbz	r1, 1bc6a <__ascii_wctomb+0x16>
   1bc56:	2aff      	cmp	r2, #255	; 0xff
   1bc58:	bf8b      	itete	hi
   1bc5a:	238a      	movhi	r3, #138	; 0x8a
   1bc5c:	700a      	strbls	r2, [r1, #0]
   1bc5e:	6003      	strhi	r3, [r0, #0]
   1bc60:	2001      	movls	r0, #1
   1bc62:	bf88      	it	hi
   1bc64:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   1bc68:	4770      	bx	lr
   1bc6a:	4608      	mov	r0, r1
   1bc6c:	4770      	bx	lr
   1bc6e:	Address 0x000000000001bc6e is out of bounds.


0001bc70 <_write_r>:
_write_r():
   1bc70:	b538      	push	{r3, r4, r5, lr}
   1bc72:	4605      	mov	r5, r0
   1bc74:	4608      	mov	r0, r1
   1bc76:	4611      	mov	r1, r2
   1bc78:	2200      	movs	r2, #0
   1bc7a:	4c05      	ldr	r4, [pc, #20]	; (1bc90 <_write_r+0x20>)
   1bc7c:	6022      	str	r2, [r4, #0]
   1bc7e:	461a      	mov	r2, r3
   1bc80:	f7f9 f912 	bl	14ea8 <_write>
   1bc84:	1c43      	adds	r3, r0, #1
   1bc86:	d102      	bne.n	1bc8e <_write_r+0x1e>
   1bc88:	6823      	ldr	r3, [r4, #0]
   1bc8a:	b103      	cbz	r3, 1bc8e <_write_r+0x1e>
   1bc8c:	602b      	str	r3, [r5, #0]
   1bc8e:	bd38      	pop	{r3, r4, r5, pc}
   1bc90:	2007c7b0 	.word	0x2007c7b0

0001bc94 <__swsetup_r>:
__swsetup_r():
   1bc94:	4b32      	ldr	r3, [pc, #200]	; (1bd60 <__swsetup_r+0xcc>)
   1bc96:	b570      	push	{r4, r5, r6, lr}
   1bc98:	681d      	ldr	r5, [r3, #0]
   1bc9a:	4606      	mov	r6, r0
   1bc9c:	460c      	mov	r4, r1
   1bc9e:	b125      	cbz	r5, 1bcaa <__swsetup_r+0x16>
   1bca0:	69ab      	ldr	r3, [r5, #24]
   1bca2:	b913      	cbnz	r3, 1bcaa <__swsetup_r+0x16>
   1bca4:	4628      	mov	r0, r5
   1bca6:	f7fc ff8d 	bl	18bc4 <__sinit>
   1bcaa:	4b2e      	ldr	r3, [pc, #184]	; (1bd64 <__swsetup_r+0xd0>)
   1bcac:	429c      	cmp	r4, r3
   1bcae:	d10f      	bne.n	1bcd0 <__swsetup_r+0x3c>
   1bcb0:	686c      	ldr	r4, [r5, #4]
   1bcb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1bcb6:	b29a      	uxth	r2, r3
   1bcb8:	0715      	lsls	r5, r2, #28
   1bcba:	d42c      	bmi.n	1bd16 <__swsetup_r+0x82>
   1bcbc:	06d0      	lsls	r0, r2, #27
   1bcbe:	d411      	bmi.n	1bce4 <__swsetup_r+0x50>
   1bcc0:	2209      	movs	r2, #9
   1bcc2:	6032      	str	r2, [r6, #0]
   1bcc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1bcc8:	81a3      	strh	r3, [r4, #12]
   1bcca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1bcce:	bd70      	pop	{r4, r5, r6, pc}
   1bcd0:	4b25      	ldr	r3, [pc, #148]	; (1bd68 <__swsetup_r+0xd4>)
   1bcd2:	429c      	cmp	r4, r3
   1bcd4:	d101      	bne.n	1bcda <__swsetup_r+0x46>
   1bcd6:	68ac      	ldr	r4, [r5, #8]
   1bcd8:	e7eb      	b.n	1bcb2 <__swsetup_r+0x1e>
   1bcda:	4b24      	ldr	r3, [pc, #144]	; (1bd6c <__swsetup_r+0xd8>)
   1bcdc:	429c      	cmp	r4, r3
   1bcde:	bf08      	it	eq
   1bce0:	68ec      	ldreq	r4, [r5, #12]
   1bce2:	e7e6      	b.n	1bcb2 <__swsetup_r+0x1e>
   1bce4:	0751      	lsls	r1, r2, #29
   1bce6:	d512      	bpl.n	1bd0e <__swsetup_r+0x7a>
   1bce8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1bcea:	b141      	cbz	r1, 1bcfe <__swsetup_r+0x6a>
   1bcec:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1bcf0:	4299      	cmp	r1, r3
   1bcf2:	d002      	beq.n	1bcfa <__swsetup_r+0x66>
   1bcf4:	4630      	mov	r0, r6
   1bcf6:	f7fd fb85 	bl	19404 <_free_r>
   1bcfa:	2300      	movs	r3, #0
   1bcfc:	6363      	str	r3, [r4, #52]	; 0x34
   1bcfe:	89a3      	ldrh	r3, [r4, #12]
   1bd00:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   1bd04:	81a3      	strh	r3, [r4, #12]
   1bd06:	2300      	movs	r3, #0
   1bd08:	6063      	str	r3, [r4, #4]
   1bd0a:	6923      	ldr	r3, [r4, #16]
   1bd0c:	6023      	str	r3, [r4, #0]
   1bd0e:	89a3      	ldrh	r3, [r4, #12]
   1bd10:	f043 0308 	orr.w	r3, r3, #8
   1bd14:	81a3      	strh	r3, [r4, #12]
   1bd16:	6923      	ldr	r3, [r4, #16]
   1bd18:	b94b      	cbnz	r3, 1bd2e <__swsetup_r+0x9a>
   1bd1a:	89a3      	ldrh	r3, [r4, #12]
   1bd1c:	f403 7320 	and.w	r3, r3, #640	; 0x280
   1bd20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   1bd24:	d003      	beq.n	1bd2e <__swsetup_r+0x9a>
   1bd26:	4621      	mov	r1, r4
   1bd28:	4630      	mov	r0, r6
   1bd2a:	f7fd f84b 	bl	18dc4 <__smakebuf_r>
   1bd2e:	89a2      	ldrh	r2, [r4, #12]
   1bd30:	f012 0301 	ands.w	r3, r2, #1
   1bd34:	d00c      	beq.n	1bd50 <__swsetup_r+0xbc>
   1bd36:	2300      	movs	r3, #0
   1bd38:	60a3      	str	r3, [r4, #8]
   1bd3a:	6963      	ldr	r3, [r4, #20]
   1bd3c:	425b      	negs	r3, r3
   1bd3e:	61a3      	str	r3, [r4, #24]
   1bd40:	6923      	ldr	r3, [r4, #16]
   1bd42:	b953      	cbnz	r3, 1bd5a <__swsetup_r+0xc6>
   1bd44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1bd48:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   1bd4c:	d1ba      	bne.n	1bcc4 <__swsetup_r+0x30>
   1bd4e:	bd70      	pop	{r4, r5, r6, pc}
   1bd50:	0792      	lsls	r2, r2, #30
   1bd52:	bf58      	it	pl
   1bd54:	6963      	ldrpl	r3, [r4, #20]
   1bd56:	60a3      	str	r3, [r4, #8]
   1bd58:	e7f2      	b.n	1bd40 <__swsetup_r+0xac>
   1bd5a:	2000      	movs	r0, #0
   1bd5c:	e7f7      	b.n	1bd4e <__swsetup_r+0xba>
   1bd5e:	bf00      	nop
   1bd60:	2007c0e0 	.word	0x2007c0e0
   1bd64:	0002024c 	.word	0x0002024c
   1bd68:	0002026c 	.word	0x0002026c
   1bd6c:	0002022c 	.word	0x0002022c

0001bd70 <_close_r>:
_close_r():
   1bd70:	b538      	push	{r3, r4, r5, lr}
   1bd72:	2300      	movs	r3, #0
   1bd74:	4c05      	ldr	r4, [pc, #20]	; (1bd8c <_close_r+0x1c>)
   1bd76:	4605      	mov	r5, r0
   1bd78:	4608      	mov	r0, r1
   1bd7a:	6023      	str	r3, [r4, #0]
   1bd7c:	f7f9 f8e6 	bl	14f4c <_close>
   1bd80:	1c43      	adds	r3, r0, #1
   1bd82:	d102      	bne.n	1bd8a <_close_r+0x1a>
   1bd84:	6823      	ldr	r3, [r4, #0]
   1bd86:	b103      	cbz	r3, 1bd8a <_close_r+0x1a>
   1bd88:	602b      	str	r3, [r5, #0]
   1bd8a:	bd38      	pop	{r3, r4, r5, pc}
   1bd8c:	2007c7b0 	.word	0x2007c7b0

0001bd90 <div>:
div():
   1bd90:	b510      	push	{r4, lr}
   1bd92:	fb91 f4f2 	sdiv	r4, r1, r2
   1bd96:	2900      	cmp	r1, #0
   1bd98:	fb02 1314 	mls	r3, r2, r4, r1
   1bd9c:	db06      	blt.n	1bdac <div+0x1c>
   1bd9e:	2b00      	cmp	r3, #0
   1bda0:	da01      	bge.n	1bda6 <div+0x16>
   1bda2:	3401      	adds	r4, #1
   1bda4:	1a9b      	subs	r3, r3, r2
   1bda6:	6004      	str	r4, [r0, #0]
   1bda8:	6043      	str	r3, [r0, #4]
   1bdaa:	bd10      	pop	{r4, pc}
   1bdac:	2b00      	cmp	r3, #0
   1bdae:	bfc4      	itt	gt
   1bdb0:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   1bdb4:	189b      	addgt	r3, r3, r2
   1bdb6:	e7f6      	b.n	1bda6 <div+0x16>

0001bdb8 <quorem>:
quorem():
   1bdb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bdbc:	6903      	ldr	r3, [r0, #16]
   1bdbe:	690c      	ldr	r4, [r1, #16]
   1bdc0:	4680      	mov	r8, r0
   1bdc2:	429c      	cmp	r4, r3
   1bdc4:	f300 8082 	bgt.w	1becc <quorem+0x114>
   1bdc8:	3c01      	subs	r4, #1
   1bdca:	f101 0714 	add.w	r7, r1, #20
   1bdce:	f100 0614 	add.w	r6, r0, #20
   1bdd2:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   1bdd6:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   1bdda:	3501      	adds	r5, #1
   1bddc:	fbb0 f5f5 	udiv	r5, r0, r5
   1bde0:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   1bde4:	eb06 030e 	add.w	r3, r6, lr
   1bde8:	eb07 090e 	add.w	r9, r7, lr
   1bdec:	9301      	str	r3, [sp, #4]
   1bdee:	b38d      	cbz	r5, 1be54 <quorem+0x9c>
   1bdf0:	f04f 0a00 	mov.w	sl, #0
   1bdf4:	4638      	mov	r0, r7
   1bdf6:	46b4      	mov	ip, r6
   1bdf8:	46d3      	mov	fp, sl
   1bdfa:	f850 2b04 	ldr.w	r2, [r0], #4
   1bdfe:	b293      	uxth	r3, r2
   1be00:	fb05 a303 	mla	r3, r5, r3, sl
   1be04:	0c12      	lsrs	r2, r2, #16
   1be06:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1be0a:	fb05 a202 	mla	r2, r5, r2, sl
   1be0e:	b29b      	uxth	r3, r3
   1be10:	ebab 0303 	sub.w	r3, fp, r3
   1be14:	f8bc b000 	ldrh.w	fp, [ip]
   1be18:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   1be1c:	445b      	add	r3, fp
   1be1e:	fa1f fb82 	uxth.w	fp, r2
   1be22:	f8dc 2000 	ldr.w	r2, [ip]
   1be26:	4581      	cmp	r9, r0
   1be28:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   1be2c:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1be30:	b29b      	uxth	r3, r3
   1be32:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1be36:	ea4f 4b22 	mov.w	fp, r2, asr #16
   1be3a:	f84c 3b04 	str.w	r3, [ip], #4
   1be3e:	d2dc      	bcs.n	1bdfa <quorem+0x42>
   1be40:	f856 300e 	ldr.w	r3, [r6, lr]
   1be44:	b933      	cbnz	r3, 1be54 <quorem+0x9c>
   1be46:	9b01      	ldr	r3, [sp, #4]
   1be48:	3b04      	subs	r3, #4
   1be4a:	429e      	cmp	r6, r3
   1be4c:	461a      	mov	r2, r3
   1be4e:	d331      	bcc.n	1beb4 <quorem+0xfc>
   1be50:	f8c8 4010 	str.w	r4, [r8, #16]
   1be54:	4640      	mov	r0, r8
   1be56:	f001 fc16 	bl	1d686 <__mcmp>
   1be5a:	2800      	cmp	r0, #0
   1be5c:	db26      	blt.n	1beac <quorem+0xf4>
   1be5e:	4630      	mov	r0, r6
   1be60:	f04f 0e00 	mov.w	lr, #0
   1be64:	3501      	adds	r5, #1
   1be66:	f857 1b04 	ldr.w	r1, [r7], #4
   1be6a:	f8d0 c000 	ldr.w	ip, [r0]
   1be6e:	b28b      	uxth	r3, r1
   1be70:	ebae 0303 	sub.w	r3, lr, r3
   1be74:	fa1f f28c 	uxth.w	r2, ip
   1be78:	4413      	add	r3, r2
   1be7a:	0c0a      	lsrs	r2, r1, #16
   1be7c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   1be80:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1be84:	b29b      	uxth	r3, r3
   1be86:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1be8a:	45b9      	cmp	r9, r7
   1be8c:	ea4f 4e22 	mov.w	lr, r2, asr #16
   1be90:	f840 3b04 	str.w	r3, [r0], #4
   1be94:	d2e7      	bcs.n	1be66 <quorem+0xae>
   1be96:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1be9a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   1be9e:	b92a      	cbnz	r2, 1beac <quorem+0xf4>
   1bea0:	3b04      	subs	r3, #4
   1bea2:	429e      	cmp	r6, r3
   1bea4:	461a      	mov	r2, r3
   1bea6:	d30b      	bcc.n	1bec0 <quorem+0x108>
   1bea8:	f8c8 4010 	str.w	r4, [r8, #16]
   1beac:	4628      	mov	r0, r5
   1beae:	b003      	add	sp, #12
   1beb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1beb4:	6812      	ldr	r2, [r2, #0]
   1beb6:	3b04      	subs	r3, #4
   1beb8:	2a00      	cmp	r2, #0
   1beba:	d1c9      	bne.n	1be50 <quorem+0x98>
   1bebc:	3c01      	subs	r4, #1
   1bebe:	e7c4      	b.n	1be4a <quorem+0x92>
   1bec0:	6812      	ldr	r2, [r2, #0]
   1bec2:	3b04      	subs	r3, #4
   1bec4:	2a00      	cmp	r2, #0
   1bec6:	d1ef      	bne.n	1bea8 <quorem+0xf0>
   1bec8:	3c01      	subs	r4, #1
   1beca:	e7ea      	b.n	1bea2 <quorem+0xea>
   1becc:	2000      	movs	r0, #0
   1bece:	e7ee      	b.n	1beae <quorem+0xf6>

0001bed0 <_dtoa_r>:
_dtoa_r():
   1bed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bed4:	6a46      	ldr	r6, [r0, #36]	; 0x24
   1bed6:	b095      	sub	sp, #84	; 0x54
   1bed8:	4604      	mov	r4, r0
   1beda:	9d21      	ldr	r5, [sp, #132]	; 0x84
   1bedc:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1bee0:	b93e      	cbnz	r6, 1bef2 <_dtoa_r+0x22>
   1bee2:	2010      	movs	r0, #16
   1bee4:	f7fc ffae 	bl	18e44 <malloc>
   1bee8:	6260      	str	r0, [r4, #36]	; 0x24
   1beea:	6046      	str	r6, [r0, #4]
   1beec:	6086      	str	r6, [r0, #8]
   1beee:	6006      	str	r6, [r0, #0]
   1bef0:	60c6      	str	r6, [r0, #12]
   1bef2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1bef4:	6819      	ldr	r1, [r3, #0]
   1bef6:	b151      	cbz	r1, 1bf0e <_dtoa_r+0x3e>
   1bef8:	685a      	ldr	r2, [r3, #4]
   1befa:	2301      	movs	r3, #1
   1befc:	4093      	lsls	r3, r2
   1befe:	604a      	str	r2, [r1, #4]
   1bf00:	608b      	str	r3, [r1, #8]
   1bf02:	4620      	mov	r0, r4
   1bf04:	f001 f9ac 	bl	1d260 <_Bfree>
   1bf08:	2200      	movs	r2, #0
   1bf0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1bf0c:	601a      	str	r2, [r3, #0]
   1bf0e:	9b03      	ldr	r3, [sp, #12]
   1bf10:	2b00      	cmp	r3, #0
   1bf12:	bfb7      	itett	lt
   1bf14:	2301      	movlt	r3, #1
   1bf16:	2300      	movge	r3, #0
   1bf18:	602b      	strlt	r3, [r5, #0]
   1bf1a:	9b03      	ldrlt	r3, [sp, #12]
   1bf1c:	bfae      	itee	ge
   1bf1e:	602b      	strge	r3, [r5, #0]
   1bf20:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   1bf24:	9303      	strlt	r3, [sp, #12]
   1bf26:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1bf2a:	4bab      	ldr	r3, [pc, #684]	; (1c1d8 <_dtoa_r+0x308>)
   1bf2c:	ea33 0309 	bics.w	r3, r3, r9
   1bf30:	d11b      	bne.n	1bf6a <_dtoa_r+0x9a>
   1bf32:	f242 730f 	movw	r3, #9999	; 0x270f
   1bf36:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1bf38:	6013      	str	r3, [r2, #0]
   1bf3a:	9b02      	ldr	r3, [sp, #8]
   1bf3c:	b923      	cbnz	r3, 1bf48 <_dtoa_r+0x78>
   1bf3e:	f3c9 0013 	ubfx	r0, r9, #0, #20
   1bf42:	2800      	cmp	r0, #0
   1bf44:	f000 8583 	beq.w	1ca4e <_dtoa_r+0xb7e>
   1bf48:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1bf4a:	b953      	cbnz	r3, 1bf62 <_dtoa_r+0x92>
   1bf4c:	4ba3      	ldr	r3, [pc, #652]	; (1c1dc <_dtoa_r+0x30c>)
   1bf4e:	e021      	b.n	1bf94 <_dtoa_r+0xc4>
   1bf50:	4ba3      	ldr	r3, [pc, #652]	; (1c1e0 <_dtoa_r+0x310>)
   1bf52:	9306      	str	r3, [sp, #24]
   1bf54:	3308      	adds	r3, #8
   1bf56:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1bf58:	6013      	str	r3, [r2, #0]
   1bf5a:	9806      	ldr	r0, [sp, #24]
   1bf5c:	b015      	add	sp, #84	; 0x54
   1bf5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf62:	4b9e      	ldr	r3, [pc, #632]	; (1c1dc <_dtoa_r+0x30c>)
   1bf64:	9306      	str	r3, [sp, #24]
   1bf66:	3303      	adds	r3, #3
   1bf68:	e7f5      	b.n	1bf56 <_dtoa_r+0x86>
   1bf6a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1bf6e:	2200      	movs	r2, #0
   1bf70:	2300      	movs	r3, #0
   1bf72:	4630      	mov	r0, r6
   1bf74:	4639      	mov	r1, r7
   1bf76:	f003 f865 	bl	1f044 <__aeabi_dcmpeq>
   1bf7a:	4680      	mov	r8, r0
   1bf7c:	b160      	cbz	r0, 1bf98 <_dtoa_r+0xc8>
   1bf7e:	2301      	movs	r3, #1
   1bf80:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1bf82:	6013      	str	r3, [r2, #0]
   1bf84:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1bf86:	2b00      	cmp	r3, #0
   1bf88:	f000 855e 	beq.w	1ca48 <_dtoa_r+0xb78>
   1bf8c:	4b95      	ldr	r3, [pc, #596]	; (1c1e4 <_dtoa_r+0x314>)
   1bf8e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1bf90:	6013      	str	r3, [r2, #0]
   1bf92:	3b01      	subs	r3, #1
   1bf94:	9306      	str	r3, [sp, #24]
   1bf96:	e7e0      	b.n	1bf5a <_dtoa_r+0x8a>
   1bf98:	ab12      	add	r3, sp, #72	; 0x48
   1bf9a:	9301      	str	r3, [sp, #4]
   1bf9c:	ab13      	add	r3, sp, #76	; 0x4c
   1bf9e:	9300      	str	r3, [sp, #0]
   1bfa0:	4632      	mov	r2, r6
   1bfa2:	463b      	mov	r3, r7
   1bfa4:	4620      	mov	r0, r4
   1bfa6:	f001 fc5d 	bl	1d864 <__d2b>
   1bfaa:	f3c9 550a 	ubfx	r5, r9, #20, #11
   1bfae:	4682      	mov	sl, r0
   1bfb0:	2d00      	cmp	r5, #0
   1bfb2:	d07d      	beq.n	1c0b0 <_dtoa_r+0x1e0>
   1bfb4:	4630      	mov	r0, r6
   1bfb6:	f3c7 0313 	ubfx	r3, r7, #0, #20
   1bfba:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   1bfbe:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   1bfc2:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   1bfc6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   1bfca:	2200      	movs	r2, #0
   1bfcc:	4b86      	ldr	r3, [pc, #536]	; (1c1e8 <_dtoa_r+0x318>)
   1bfce:	f7fb feb9 	bl	17d44 <__aeabi_dsub>
   1bfd2:	a37b      	add	r3, pc, #492	; (adr r3, 1c1c0 <_dtoa_r+0x2f0>)
   1bfd4:	e9d3 2300 	ldrd	r2, r3, [r3]
   1bfd8:	f002 fdcc 	bl	1eb74 <__aeabi_dmul>
   1bfdc:	a37a      	add	r3, pc, #488	; (adr r3, 1c1c8 <_dtoa_r+0x2f8>)
   1bfde:	e9d3 2300 	ldrd	r2, r3, [r3]
   1bfe2:	f7fb feb1 	bl	17d48 <__adddf3>
   1bfe6:	4606      	mov	r6, r0
   1bfe8:	4628      	mov	r0, r5
   1bfea:	460f      	mov	r7, r1
   1bfec:	f7fb fff8 	bl	17fe0 <__aeabi_i2d>
   1bff0:	a377      	add	r3, pc, #476	; (adr r3, 1c1d0 <_dtoa_r+0x300>)
   1bff2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1bff6:	f002 fdbd 	bl	1eb74 <__aeabi_dmul>
   1bffa:	4602      	mov	r2, r0
   1bffc:	460b      	mov	r3, r1
   1bffe:	4630      	mov	r0, r6
   1c000:	4639      	mov	r1, r7
   1c002:	f7fb fea1 	bl	17d48 <__adddf3>
   1c006:	4606      	mov	r6, r0
   1c008:	460f      	mov	r7, r1
   1c00a:	f003 f863 	bl	1f0d4 <__aeabi_d2iz>
   1c00e:	2200      	movs	r2, #0
   1c010:	4683      	mov	fp, r0
   1c012:	2300      	movs	r3, #0
   1c014:	4630      	mov	r0, r6
   1c016:	4639      	mov	r1, r7
   1c018:	f003 f81e 	bl	1f058 <__aeabi_dcmplt>
   1c01c:	b158      	cbz	r0, 1c036 <_dtoa_r+0x166>
   1c01e:	4658      	mov	r0, fp
   1c020:	f7fb ffde 	bl	17fe0 <__aeabi_i2d>
   1c024:	4602      	mov	r2, r0
   1c026:	460b      	mov	r3, r1
   1c028:	4630      	mov	r0, r6
   1c02a:	4639      	mov	r1, r7
   1c02c:	f003 f80a 	bl	1f044 <__aeabi_dcmpeq>
   1c030:	b908      	cbnz	r0, 1c036 <_dtoa_r+0x166>
   1c032:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c036:	f1bb 0f16 	cmp.w	fp, #22
   1c03a:	d858      	bhi.n	1c0ee <_dtoa_r+0x21e>
   1c03c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c040:	496a      	ldr	r1, [pc, #424]	; (1c1ec <_dtoa_r+0x31c>)
   1c042:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   1c046:	e9d1 0100 	ldrd	r0, r1, [r1]
   1c04a:	f003 f823 	bl	1f094 <__aeabi_dcmpgt>
   1c04e:	2800      	cmp	r0, #0
   1c050:	d04f      	beq.n	1c0f2 <_dtoa_r+0x222>
   1c052:	2300      	movs	r3, #0
   1c054:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c058:	930d      	str	r3, [sp, #52]	; 0x34
   1c05a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1c05c:	1b5d      	subs	r5, r3, r5
   1c05e:	1e6b      	subs	r3, r5, #1
   1c060:	9307      	str	r3, [sp, #28]
   1c062:	bf43      	ittte	mi
   1c064:	2300      	movmi	r3, #0
   1c066:	f1c5 0801 	rsbmi	r8, r5, #1
   1c06a:	9307      	strmi	r3, [sp, #28]
   1c06c:	f04f 0800 	movpl.w	r8, #0
   1c070:	f1bb 0f00 	cmp.w	fp, #0
   1c074:	db3f      	blt.n	1c0f6 <_dtoa_r+0x226>
   1c076:	9b07      	ldr	r3, [sp, #28]
   1c078:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   1c07c:	445b      	add	r3, fp
   1c07e:	9307      	str	r3, [sp, #28]
   1c080:	2300      	movs	r3, #0
   1c082:	9308      	str	r3, [sp, #32]
   1c084:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c086:	2b09      	cmp	r3, #9
   1c088:	f200 80b4 	bhi.w	1c1f4 <_dtoa_r+0x324>
   1c08c:	2b05      	cmp	r3, #5
   1c08e:	bfc4      	itt	gt
   1c090:	3b04      	subgt	r3, #4
   1c092:	931e      	strgt	r3, [sp, #120]	; 0x78
   1c094:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c096:	bfc8      	it	gt
   1c098:	2600      	movgt	r6, #0
   1c09a:	f1a3 0302 	sub.w	r3, r3, #2
   1c09e:	bfd8      	it	le
   1c0a0:	2601      	movle	r6, #1
   1c0a2:	2b03      	cmp	r3, #3
   1c0a4:	f200 80b2 	bhi.w	1c20c <_dtoa_r+0x33c>
   1c0a8:	e8df f003 	tbb	[pc, r3]
   1c0ac:	782d8684 	.word	0x782d8684
   1c0b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1c0b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
   1c0b4:	441d      	add	r5, r3
   1c0b6:	f205 4332 	addw	r3, r5, #1074	; 0x432
   1c0ba:	2b20      	cmp	r3, #32
   1c0bc:	dd11      	ble.n	1c0e2 <_dtoa_r+0x212>
   1c0be:	9a02      	ldr	r2, [sp, #8]
   1c0c0:	f205 4012 	addw	r0, r5, #1042	; 0x412
   1c0c4:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   1c0c8:	fa22 f000 	lsr.w	r0, r2, r0
   1c0cc:	fa09 f303 	lsl.w	r3, r9, r3
   1c0d0:	4318      	orrs	r0, r3
   1c0d2:	f7fb ff75 	bl	17fc0 <__aeabi_ui2d>
   1c0d6:	2301      	movs	r3, #1
   1c0d8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   1c0dc:	3d01      	subs	r5, #1
   1c0de:	9310      	str	r3, [sp, #64]	; 0x40
   1c0e0:	e773      	b.n	1bfca <_dtoa_r+0xfa>
   1c0e2:	f1c3 0020 	rsb	r0, r3, #32
   1c0e6:	9b02      	ldr	r3, [sp, #8]
   1c0e8:	fa03 f000 	lsl.w	r0, r3, r0
   1c0ec:	e7f1      	b.n	1c0d2 <_dtoa_r+0x202>
   1c0ee:	2301      	movs	r3, #1
   1c0f0:	e7b2      	b.n	1c058 <_dtoa_r+0x188>
   1c0f2:	900d      	str	r0, [sp, #52]	; 0x34
   1c0f4:	e7b1      	b.n	1c05a <_dtoa_r+0x18a>
   1c0f6:	f1cb 0300 	rsb	r3, fp, #0
   1c0fa:	9308      	str	r3, [sp, #32]
   1c0fc:	2300      	movs	r3, #0
   1c0fe:	eba8 080b 	sub.w	r8, r8, fp
   1c102:	930c      	str	r3, [sp, #48]	; 0x30
   1c104:	e7be      	b.n	1c084 <_dtoa_r+0x1b4>
   1c106:	2301      	movs	r3, #1
   1c108:	9309      	str	r3, [sp, #36]	; 0x24
   1c10a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c10c:	2b00      	cmp	r3, #0
   1c10e:	f340 8080 	ble.w	1c212 <_dtoa_r+0x342>
   1c112:	4699      	mov	r9, r3
   1c114:	9304      	str	r3, [sp, #16]
   1c116:	2200      	movs	r2, #0
   1c118:	2104      	movs	r1, #4
   1c11a:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1c11c:	606a      	str	r2, [r5, #4]
   1c11e:	f101 0214 	add.w	r2, r1, #20
   1c122:	429a      	cmp	r2, r3
   1c124:	d97a      	bls.n	1c21c <_dtoa_r+0x34c>
   1c126:	6869      	ldr	r1, [r5, #4]
   1c128:	4620      	mov	r0, r4
   1c12a:	f001 f865 	bl	1d1f8 <_Balloc>
   1c12e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1c130:	6028      	str	r0, [r5, #0]
   1c132:	681b      	ldr	r3, [r3, #0]
   1c134:	f1b9 0f0e 	cmp.w	r9, #14
   1c138:	9306      	str	r3, [sp, #24]
   1c13a:	f200 80f0 	bhi.w	1c31e <_dtoa_r+0x44e>
   1c13e:	2e00      	cmp	r6, #0
   1c140:	f000 80ed 	beq.w	1c31e <_dtoa_r+0x44e>
   1c144:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c148:	f1bb 0f00 	cmp.w	fp, #0
   1c14c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   1c150:	dd79      	ble.n	1c246 <_dtoa_r+0x376>
   1c152:	4a26      	ldr	r2, [pc, #152]	; (1c1ec <_dtoa_r+0x31c>)
   1c154:	f00b 030f 	and.w	r3, fp, #15
   1c158:	ea4f 162b 	mov.w	r6, fp, asr #4
   1c15c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1c160:	06f0      	lsls	r0, r6, #27
   1c162:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c166:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1c16a:	d55c      	bpl.n	1c226 <_dtoa_r+0x356>
   1c16c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1c170:	4b1f      	ldr	r3, [pc, #124]	; (1c1f0 <_dtoa_r+0x320>)
   1c172:	2503      	movs	r5, #3
   1c174:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1c178:	f002 fe26 	bl	1edc8 <__aeabi_ddiv>
   1c17c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c180:	f006 060f 	and.w	r6, r6, #15
   1c184:	4f1a      	ldr	r7, [pc, #104]	; (1c1f0 <_dtoa_r+0x320>)
   1c186:	2e00      	cmp	r6, #0
   1c188:	d14f      	bne.n	1c22a <_dtoa_r+0x35a>
   1c18a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c18e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c192:	f002 fe19 	bl	1edc8 <__aeabi_ddiv>
   1c196:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c19a:	e06e      	b.n	1c27a <_dtoa_r+0x3aa>
   1c19c:	2301      	movs	r3, #1
   1c19e:	9309      	str	r3, [sp, #36]	; 0x24
   1c1a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c1a2:	445b      	add	r3, fp
   1c1a4:	f103 0901 	add.w	r9, r3, #1
   1c1a8:	9304      	str	r3, [sp, #16]
   1c1aa:	464b      	mov	r3, r9
   1c1ac:	2b01      	cmp	r3, #1
   1c1ae:	bfb8      	it	lt
   1c1b0:	2301      	movlt	r3, #1
   1c1b2:	e7b0      	b.n	1c116 <_dtoa_r+0x246>
   1c1b4:	2300      	movs	r3, #0
   1c1b6:	e7a7      	b.n	1c108 <_dtoa_r+0x238>
   1c1b8:	2300      	movs	r3, #0
   1c1ba:	e7f0      	b.n	1c19e <_dtoa_r+0x2ce>
   1c1bc:	f3af 8000 	nop.w
   1c1c0:	636f4361 	.word	0x636f4361
   1c1c4:	3fd287a7 	.word	0x3fd287a7
   1c1c8:	8b60c8b3 	.word	0x8b60c8b3
   1c1cc:	3fc68a28 	.word	0x3fc68a28
   1c1d0:	509f79fb 	.word	0x509f79fb
   1c1d4:	3fd34413 	.word	0x3fd34413
   1c1d8:	7ff00000 	.word	0x7ff00000
   1c1dc:	00020526 	.word	0x00020526
   1c1e0:	0002051d 	.word	0x0002051d
   1c1e4:	0001f3d7 	.word	0x0001f3d7
   1c1e8:	3ff80000 	.word	0x3ff80000
   1c1ec:	00020558 	.word	0x00020558
   1c1f0:	00020530 	.word	0x00020530
   1c1f4:	2601      	movs	r6, #1
   1c1f6:	2300      	movs	r3, #0
   1c1f8:	9609      	str	r6, [sp, #36]	; 0x24
   1c1fa:	931e      	str	r3, [sp, #120]	; 0x78
   1c1fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1c200:	2200      	movs	r2, #0
   1c202:	9304      	str	r3, [sp, #16]
   1c204:	4699      	mov	r9, r3
   1c206:	2312      	movs	r3, #18
   1c208:	921f      	str	r2, [sp, #124]	; 0x7c
   1c20a:	e784      	b.n	1c116 <_dtoa_r+0x246>
   1c20c:	2301      	movs	r3, #1
   1c20e:	9309      	str	r3, [sp, #36]	; 0x24
   1c210:	e7f4      	b.n	1c1fc <_dtoa_r+0x32c>
   1c212:	2301      	movs	r3, #1
   1c214:	9304      	str	r3, [sp, #16]
   1c216:	4699      	mov	r9, r3
   1c218:	461a      	mov	r2, r3
   1c21a:	e7f5      	b.n	1c208 <_dtoa_r+0x338>
   1c21c:	686a      	ldr	r2, [r5, #4]
   1c21e:	0049      	lsls	r1, r1, #1
   1c220:	3201      	adds	r2, #1
   1c222:	606a      	str	r2, [r5, #4]
   1c224:	e77b      	b.n	1c11e <_dtoa_r+0x24e>
   1c226:	2502      	movs	r5, #2
   1c228:	e7ac      	b.n	1c184 <_dtoa_r+0x2b4>
   1c22a:	07f1      	lsls	r1, r6, #31
   1c22c:	d508      	bpl.n	1c240 <_dtoa_r+0x370>
   1c22e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c232:	e9d7 2300 	ldrd	r2, r3, [r7]
   1c236:	f002 fc9d 	bl	1eb74 <__aeabi_dmul>
   1c23a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c23e:	3501      	adds	r5, #1
   1c240:	1076      	asrs	r6, r6, #1
   1c242:	3708      	adds	r7, #8
   1c244:	e79f      	b.n	1c186 <_dtoa_r+0x2b6>
   1c246:	f000 80a5 	beq.w	1c394 <_dtoa_r+0x4c4>
   1c24a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1c24e:	f1cb 0600 	rsb	r6, fp, #0
   1c252:	4ba2      	ldr	r3, [pc, #648]	; (1c4dc <_dtoa_r+0x60c>)
   1c254:	f006 020f 	and.w	r2, r6, #15
   1c258:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1c25c:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c260:	f002 fc88 	bl	1eb74 <__aeabi_dmul>
   1c264:	2502      	movs	r5, #2
   1c266:	2300      	movs	r3, #0
   1c268:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c26c:	4f9c      	ldr	r7, [pc, #624]	; (1c4e0 <_dtoa_r+0x610>)
   1c26e:	1136      	asrs	r6, r6, #4
   1c270:	2e00      	cmp	r6, #0
   1c272:	f040 8084 	bne.w	1c37e <_dtoa_r+0x4ae>
   1c276:	2b00      	cmp	r3, #0
   1c278:	d18d      	bne.n	1c196 <_dtoa_r+0x2c6>
   1c27a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c27c:	2b00      	cmp	r3, #0
   1c27e:	f000 808b 	beq.w	1c398 <_dtoa_r+0x4c8>
   1c282:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c286:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1c28a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c28e:	2200      	movs	r2, #0
   1c290:	4b94      	ldr	r3, [pc, #592]	; (1c4e4 <_dtoa_r+0x614>)
   1c292:	f002 fee1 	bl	1f058 <__aeabi_dcmplt>
   1c296:	2800      	cmp	r0, #0
   1c298:	d07e      	beq.n	1c398 <_dtoa_r+0x4c8>
   1c29a:	f1b9 0f00 	cmp.w	r9, #0
   1c29e:	d07b      	beq.n	1c398 <_dtoa_r+0x4c8>
   1c2a0:	9b04      	ldr	r3, [sp, #16]
   1c2a2:	2b00      	cmp	r3, #0
   1c2a4:	dd37      	ble.n	1c316 <_dtoa_r+0x446>
   1c2a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c2aa:	2200      	movs	r2, #0
   1c2ac:	4b8e      	ldr	r3, [pc, #568]	; (1c4e8 <_dtoa_r+0x618>)
   1c2ae:	f002 fc61 	bl	1eb74 <__aeabi_dmul>
   1c2b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c2b6:	9e04      	ldr	r6, [sp, #16]
   1c2b8:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   1c2bc:	3501      	adds	r5, #1
   1c2be:	4628      	mov	r0, r5
   1c2c0:	f7fb fe8e 	bl	17fe0 <__aeabi_i2d>
   1c2c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c2c8:	f002 fc54 	bl	1eb74 <__aeabi_dmul>
   1c2cc:	4b87      	ldr	r3, [pc, #540]	; (1c4ec <_dtoa_r+0x61c>)
   1c2ce:	2200      	movs	r2, #0
   1c2d0:	f7fb fd3a 	bl	17d48 <__adddf3>
   1c2d4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c2d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c2da:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   1c2de:	950b      	str	r5, [sp, #44]	; 0x2c
   1c2e0:	2e00      	cmp	r6, #0
   1c2e2:	d15c      	bne.n	1c39e <_dtoa_r+0x4ce>
   1c2e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c2e8:	2200      	movs	r2, #0
   1c2ea:	4b81      	ldr	r3, [pc, #516]	; (1c4f0 <_dtoa_r+0x620>)
   1c2ec:	f7fb fd2a 	bl	17d44 <__aeabi_dsub>
   1c2f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1c2f2:	462b      	mov	r3, r5
   1c2f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c2f8:	f002 fecc 	bl	1f094 <__aeabi_dcmpgt>
   1c2fc:	2800      	cmp	r0, #0
   1c2fe:	f040 82f7 	bne.w	1c8f0 <_dtoa_r+0xa20>
   1c302:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c306:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1c308:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1c30c:	f002 fea4 	bl	1f058 <__aeabi_dcmplt>
   1c310:	2800      	cmp	r0, #0
   1c312:	f040 82eb 	bne.w	1c8ec <_dtoa_r+0xa1c>
   1c316:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   1c31a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1c31e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1c320:	2b00      	cmp	r3, #0
   1c322:	f2c0 8150 	blt.w	1c5c6 <_dtoa_r+0x6f6>
   1c326:	f1bb 0f0e 	cmp.w	fp, #14
   1c32a:	f300 814c 	bgt.w	1c5c6 <_dtoa_r+0x6f6>
   1c32e:	4b6b      	ldr	r3, [pc, #428]	; (1c4dc <_dtoa_r+0x60c>)
   1c330:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   1c334:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c338:	e9cd 2304 	strd	r2, r3, [sp, #16]
   1c33c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c33e:	2b00      	cmp	r3, #0
   1c340:	f280 80da 	bge.w	1c4f8 <_dtoa_r+0x628>
   1c344:	f1b9 0f00 	cmp.w	r9, #0
   1c348:	f300 80d6 	bgt.w	1c4f8 <_dtoa_r+0x628>
   1c34c:	f040 82cd 	bne.w	1c8ea <_dtoa_r+0xa1a>
   1c350:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c354:	2200      	movs	r2, #0
   1c356:	4b66      	ldr	r3, [pc, #408]	; (1c4f0 <_dtoa_r+0x620>)
   1c358:	f002 fc0c 	bl	1eb74 <__aeabi_dmul>
   1c35c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c360:	f002 fe8e 	bl	1f080 <__aeabi_dcmpge>
   1c364:	464e      	mov	r6, r9
   1c366:	464f      	mov	r7, r9
   1c368:	2800      	cmp	r0, #0
   1c36a:	f040 82a4 	bne.w	1c8b6 <_dtoa_r+0x9e6>
   1c36e:	9b06      	ldr	r3, [sp, #24]
   1c370:	9a06      	ldr	r2, [sp, #24]
   1c372:	1c5d      	adds	r5, r3, #1
   1c374:	2331      	movs	r3, #49	; 0x31
   1c376:	f10b 0b01 	add.w	fp, fp, #1
   1c37a:	7013      	strb	r3, [r2, #0]
   1c37c:	e29f      	b.n	1c8be <_dtoa_r+0x9ee>
   1c37e:	07f2      	lsls	r2, r6, #31
   1c380:	d505      	bpl.n	1c38e <_dtoa_r+0x4be>
   1c382:	e9d7 2300 	ldrd	r2, r3, [r7]
   1c386:	f002 fbf5 	bl	1eb74 <__aeabi_dmul>
   1c38a:	2301      	movs	r3, #1
   1c38c:	3501      	adds	r5, #1
   1c38e:	1076      	asrs	r6, r6, #1
   1c390:	3708      	adds	r7, #8
   1c392:	e76d      	b.n	1c270 <_dtoa_r+0x3a0>
   1c394:	2502      	movs	r5, #2
   1c396:	e770      	b.n	1c27a <_dtoa_r+0x3aa>
   1c398:	465f      	mov	r7, fp
   1c39a:	464e      	mov	r6, r9
   1c39c:	e78f      	b.n	1c2be <_dtoa_r+0x3ee>
   1c39e:	9a06      	ldr	r2, [sp, #24]
   1c3a0:	4b4e      	ldr	r3, [pc, #312]	; (1c4dc <_dtoa_r+0x60c>)
   1c3a2:	4432      	add	r2, r6
   1c3a4:	9211      	str	r2, [sp, #68]	; 0x44
   1c3a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1c3a8:	1e71      	subs	r1, r6, #1
   1c3aa:	2a00      	cmp	r2, #0
   1c3ac:	d048      	beq.n	1c440 <_dtoa_r+0x570>
   1c3ae:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   1c3b2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c3b6:	2000      	movs	r0, #0
   1c3b8:	494e      	ldr	r1, [pc, #312]	; (1c4f4 <_dtoa_r+0x624>)
   1c3ba:	f002 fd05 	bl	1edc8 <__aeabi_ddiv>
   1c3be:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c3c2:	f7fb fcbf 	bl	17d44 <__aeabi_dsub>
   1c3c6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c3ca:	9d06      	ldr	r5, [sp, #24]
   1c3cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c3d0:	f002 fe80 	bl	1f0d4 <__aeabi_d2iz>
   1c3d4:	4606      	mov	r6, r0
   1c3d6:	f7fb fe03 	bl	17fe0 <__aeabi_i2d>
   1c3da:	4602      	mov	r2, r0
   1c3dc:	460b      	mov	r3, r1
   1c3de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c3e2:	f7fb fcaf 	bl	17d44 <__aeabi_dsub>
   1c3e6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c3ea:	3630      	adds	r6, #48	; 0x30
   1c3ec:	f805 6b01 	strb.w	r6, [r5], #1
   1c3f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c3f4:	f002 fe30 	bl	1f058 <__aeabi_dcmplt>
   1c3f8:	2800      	cmp	r0, #0
   1c3fa:	d164      	bne.n	1c4c6 <_dtoa_r+0x5f6>
   1c3fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c400:	2000      	movs	r0, #0
   1c402:	4938      	ldr	r1, [pc, #224]	; (1c4e4 <_dtoa_r+0x614>)
   1c404:	f7fb fc9e 	bl	17d44 <__aeabi_dsub>
   1c408:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c40c:	f002 fe24 	bl	1f058 <__aeabi_dcmplt>
   1c410:	2800      	cmp	r0, #0
   1c412:	f040 80b9 	bne.w	1c588 <_dtoa_r+0x6b8>
   1c416:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1c418:	429d      	cmp	r5, r3
   1c41a:	f43f af7c 	beq.w	1c316 <_dtoa_r+0x446>
   1c41e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c422:	2200      	movs	r2, #0
   1c424:	4b30      	ldr	r3, [pc, #192]	; (1c4e8 <_dtoa_r+0x618>)
   1c426:	f002 fba5 	bl	1eb74 <__aeabi_dmul>
   1c42a:	2200      	movs	r2, #0
   1c42c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c430:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c434:	4b2c      	ldr	r3, [pc, #176]	; (1c4e8 <_dtoa_r+0x618>)
   1c436:	f002 fb9d 	bl	1eb74 <__aeabi_dmul>
   1c43a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c43e:	e7c5      	b.n	1c3cc <_dtoa_r+0x4fc>
   1c440:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   1c444:	e9d1 0100 	ldrd	r0, r1, [r1]
   1c448:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c44c:	f002 fb92 	bl	1eb74 <__aeabi_dmul>
   1c450:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c454:	9d06      	ldr	r5, [sp, #24]
   1c456:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c45a:	f002 fe3b 	bl	1f0d4 <__aeabi_d2iz>
   1c45e:	4606      	mov	r6, r0
   1c460:	f7fb fdbe 	bl	17fe0 <__aeabi_i2d>
   1c464:	4602      	mov	r2, r0
   1c466:	460b      	mov	r3, r1
   1c468:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c46c:	f7fb fc6a 	bl	17d44 <__aeabi_dsub>
   1c470:	3630      	adds	r6, #48	; 0x30
   1c472:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1c474:	f805 6b01 	strb.w	r6, [r5], #1
   1c478:	42ab      	cmp	r3, r5
   1c47a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c47e:	f04f 0200 	mov.w	r2, #0
   1c482:	d124      	bne.n	1c4ce <_dtoa_r+0x5fe>
   1c484:	4b1b      	ldr	r3, [pc, #108]	; (1c4f4 <_dtoa_r+0x624>)
   1c486:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c48a:	f7fb fc5d 	bl	17d48 <__adddf3>
   1c48e:	4602      	mov	r2, r0
   1c490:	460b      	mov	r3, r1
   1c492:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c496:	f002 fdfd 	bl	1f094 <__aeabi_dcmpgt>
   1c49a:	2800      	cmp	r0, #0
   1c49c:	d174      	bne.n	1c588 <_dtoa_r+0x6b8>
   1c49e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c4a2:	2000      	movs	r0, #0
   1c4a4:	4913      	ldr	r1, [pc, #76]	; (1c4f4 <_dtoa_r+0x624>)
   1c4a6:	f7fb fc4d 	bl	17d44 <__aeabi_dsub>
   1c4aa:	4602      	mov	r2, r0
   1c4ac:	460b      	mov	r3, r1
   1c4ae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c4b2:	f002 fdd1 	bl	1f058 <__aeabi_dcmplt>
   1c4b6:	2800      	cmp	r0, #0
   1c4b8:	f43f af2d 	beq.w	1c316 <_dtoa_r+0x446>
   1c4bc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1c4c0:	1e6a      	subs	r2, r5, #1
   1c4c2:	2b30      	cmp	r3, #48	; 0x30
   1c4c4:	d001      	beq.n	1c4ca <_dtoa_r+0x5fa>
   1c4c6:	46bb      	mov	fp, r7
   1c4c8:	e04d      	b.n	1c566 <_dtoa_r+0x696>
   1c4ca:	4615      	mov	r5, r2
   1c4cc:	e7f6      	b.n	1c4bc <_dtoa_r+0x5ec>
   1c4ce:	4b06      	ldr	r3, [pc, #24]	; (1c4e8 <_dtoa_r+0x618>)
   1c4d0:	f002 fb50 	bl	1eb74 <__aeabi_dmul>
   1c4d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c4d8:	e7bd      	b.n	1c456 <_dtoa_r+0x586>
   1c4da:	bf00      	nop
   1c4dc:	00020558 	.word	0x00020558
   1c4e0:	00020530 	.word	0x00020530
   1c4e4:	3ff00000 	.word	0x3ff00000
   1c4e8:	40240000 	.word	0x40240000
   1c4ec:	401c0000 	.word	0x401c0000
   1c4f0:	40140000 	.word	0x40140000
   1c4f4:	3fe00000 	.word	0x3fe00000
   1c4f8:	9d06      	ldr	r5, [sp, #24]
   1c4fa:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1c4fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1c502:	4630      	mov	r0, r6
   1c504:	4639      	mov	r1, r7
   1c506:	f002 fc5f 	bl	1edc8 <__aeabi_ddiv>
   1c50a:	f002 fde3 	bl	1f0d4 <__aeabi_d2iz>
   1c50e:	4680      	mov	r8, r0
   1c510:	f7fb fd66 	bl	17fe0 <__aeabi_i2d>
   1c514:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1c518:	f002 fb2c 	bl	1eb74 <__aeabi_dmul>
   1c51c:	4602      	mov	r2, r0
   1c51e:	460b      	mov	r3, r1
   1c520:	4630      	mov	r0, r6
   1c522:	4639      	mov	r1, r7
   1c524:	f7fb fc0e 	bl	17d44 <__aeabi_dsub>
   1c528:	f108 0630 	add.w	r6, r8, #48	; 0x30
   1c52c:	f805 6b01 	strb.w	r6, [r5], #1
   1c530:	9e06      	ldr	r6, [sp, #24]
   1c532:	4602      	mov	r2, r0
   1c534:	1bae      	subs	r6, r5, r6
   1c536:	45b1      	cmp	r9, r6
   1c538:	460b      	mov	r3, r1
   1c53a:	d137      	bne.n	1c5ac <_dtoa_r+0x6dc>
   1c53c:	f7fb fc04 	bl	17d48 <__adddf3>
   1c540:	4606      	mov	r6, r0
   1c542:	460f      	mov	r7, r1
   1c544:	4602      	mov	r2, r0
   1c546:	460b      	mov	r3, r1
   1c548:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c54c:	f002 fd84 	bl	1f058 <__aeabi_dcmplt>
   1c550:	b9c8      	cbnz	r0, 1c586 <_dtoa_r+0x6b6>
   1c552:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c556:	4632      	mov	r2, r6
   1c558:	463b      	mov	r3, r7
   1c55a:	f002 fd73 	bl	1f044 <__aeabi_dcmpeq>
   1c55e:	b110      	cbz	r0, 1c566 <_dtoa_r+0x696>
   1c560:	f018 0f01 	tst.w	r8, #1
   1c564:	d10f      	bne.n	1c586 <_dtoa_r+0x6b6>
   1c566:	4651      	mov	r1, sl
   1c568:	4620      	mov	r0, r4
   1c56a:	f000 fe79 	bl	1d260 <_Bfree>
   1c56e:	2300      	movs	r3, #0
   1c570:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1c572:	702b      	strb	r3, [r5, #0]
   1c574:	f10b 0301 	add.w	r3, fp, #1
   1c578:	6013      	str	r3, [r2, #0]
   1c57a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1c57c:	2b00      	cmp	r3, #0
   1c57e:	f43f acec 	beq.w	1bf5a <_dtoa_r+0x8a>
   1c582:	601d      	str	r5, [r3, #0]
   1c584:	e4e9      	b.n	1bf5a <_dtoa_r+0x8a>
   1c586:	465f      	mov	r7, fp
   1c588:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   1c58c:	1e6b      	subs	r3, r5, #1
   1c58e:	2a39      	cmp	r2, #57	; 0x39
   1c590:	d106      	bne.n	1c5a0 <_dtoa_r+0x6d0>
   1c592:	9a06      	ldr	r2, [sp, #24]
   1c594:	429a      	cmp	r2, r3
   1c596:	d107      	bne.n	1c5a8 <_dtoa_r+0x6d8>
   1c598:	2330      	movs	r3, #48	; 0x30
   1c59a:	7013      	strb	r3, [r2, #0]
   1c59c:	4613      	mov	r3, r2
   1c59e:	3701      	adds	r7, #1
   1c5a0:	781a      	ldrb	r2, [r3, #0]
   1c5a2:	3201      	adds	r2, #1
   1c5a4:	701a      	strb	r2, [r3, #0]
   1c5a6:	e78e      	b.n	1c4c6 <_dtoa_r+0x5f6>
   1c5a8:	461d      	mov	r5, r3
   1c5aa:	e7ed      	b.n	1c588 <_dtoa_r+0x6b8>
   1c5ac:	2200      	movs	r2, #0
   1c5ae:	4bb5      	ldr	r3, [pc, #724]	; (1c884 <_dtoa_r+0x9b4>)
   1c5b0:	f002 fae0 	bl	1eb74 <__aeabi_dmul>
   1c5b4:	2200      	movs	r2, #0
   1c5b6:	2300      	movs	r3, #0
   1c5b8:	4606      	mov	r6, r0
   1c5ba:	460f      	mov	r7, r1
   1c5bc:	f002 fd42 	bl	1f044 <__aeabi_dcmpeq>
   1c5c0:	2800      	cmp	r0, #0
   1c5c2:	d09c      	beq.n	1c4fe <_dtoa_r+0x62e>
   1c5c4:	e7cf      	b.n	1c566 <_dtoa_r+0x696>
   1c5c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1c5c8:	2a00      	cmp	r2, #0
   1c5ca:	f000 8129 	beq.w	1c820 <_dtoa_r+0x950>
   1c5ce:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1c5d0:	2a01      	cmp	r2, #1
   1c5d2:	f300 810e 	bgt.w	1c7f2 <_dtoa_r+0x922>
   1c5d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1c5d8:	2a00      	cmp	r2, #0
   1c5da:	f000 8106 	beq.w	1c7ea <_dtoa_r+0x91a>
   1c5de:	f203 4333 	addw	r3, r3, #1075	; 0x433
   1c5e2:	4645      	mov	r5, r8
   1c5e4:	9e08      	ldr	r6, [sp, #32]
   1c5e6:	9a07      	ldr	r2, [sp, #28]
   1c5e8:	2101      	movs	r1, #1
   1c5ea:	441a      	add	r2, r3
   1c5ec:	4620      	mov	r0, r4
   1c5ee:	4498      	add	r8, r3
   1c5f0:	9207      	str	r2, [sp, #28]
   1c5f2:	f000 ff13 	bl	1d41c <__i2b>
   1c5f6:	4607      	mov	r7, r0
   1c5f8:	2d00      	cmp	r5, #0
   1c5fa:	dd0b      	ble.n	1c614 <_dtoa_r+0x744>
   1c5fc:	9b07      	ldr	r3, [sp, #28]
   1c5fe:	2b00      	cmp	r3, #0
   1c600:	dd08      	ble.n	1c614 <_dtoa_r+0x744>
   1c602:	42ab      	cmp	r3, r5
   1c604:	bfa8      	it	ge
   1c606:	462b      	movge	r3, r5
   1c608:	9a07      	ldr	r2, [sp, #28]
   1c60a:	eba8 0803 	sub.w	r8, r8, r3
   1c60e:	1aed      	subs	r5, r5, r3
   1c610:	1ad3      	subs	r3, r2, r3
   1c612:	9307      	str	r3, [sp, #28]
   1c614:	9b08      	ldr	r3, [sp, #32]
   1c616:	b1fb      	cbz	r3, 1c658 <_dtoa_r+0x788>
   1c618:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c61a:	2b00      	cmp	r3, #0
   1c61c:	f000 8104 	beq.w	1c828 <_dtoa_r+0x958>
   1c620:	2e00      	cmp	r6, #0
   1c622:	dd11      	ble.n	1c648 <_dtoa_r+0x778>
   1c624:	4639      	mov	r1, r7
   1c626:	4632      	mov	r2, r6
   1c628:	4620      	mov	r0, r4
   1c62a:	f000 ff8d 	bl	1d548 <__pow5mult>
   1c62e:	4652      	mov	r2, sl
   1c630:	4601      	mov	r1, r0
   1c632:	4607      	mov	r7, r0
   1c634:	4620      	mov	r0, r4
   1c636:	f000 fefa 	bl	1d42e <__multiply>
   1c63a:	4651      	mov	r1, sl
   1c63c:	900a      	str	r0, [sp, #40]	; 0x28
   1c63e:	4620      	mov	r0, r4
   1c640:	f000 fe0e 	bl	1d260 <_Bfree>
   1c644:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c646:	469a      	mov	sl, r3
   1c648:	9b08      	ldr	r3, [sp, #32]
   1c64a:	1b9a      	subs	r2, r3, r6
   1c64c:	d004      	beq.n	1c658 <_dtoa_r+0x788>
   1c64e:	4651      	mov	r1, sl
   1c650:	4620      	mov	r0, r4
   1c652:	f000 ff79 	bl	1d548 <__pow5mult>
   1c656:	4682      	mov	sl, r0
   1c658:	2101      	movs	r1, #1
   1c65a:	4620      	mov	r0, r4
   1c65c:	f000 fede 	bl	1d41c <__i2b>
   1c660:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1c662:	4606      	mov	r6, r0
   1c664:	2b00      	cmp	r3, #0
   1c666:	f340 80e1 	ble.w	1c82c <_dtoa_r+0x95c>
   1c66a:	461a      	mov	r2, r3
   1c66c:	4601      	mov	r1, r0
   1c66e:	4620      	mov	r0, r4
   1c670:	f000 ff6a 	bl	1d548 <__pow5mult>
   1c674:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c676:	4606      	mov	r6, r0
   1c678:	2b01      	cmp	r3, #1
   1c67a:	f340 80da 	ble.w	1c832 <_dtoa_r+0x962>
   1c67e:	2300      	movs	r3, #0
   1c680:	9308      	str	r3, [sp, #32]
   1c682:	6933      	ldr	r3, [r6, #16]
   1c684:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   1c688:	6918      	ldr	r0, [r3, #16]
   1c68a:	f000 fe79 	bl	1d380 <__hi0bits>
   1c68e:	f1c0 0020 	rsb	r0, r0, #32
   1c692:	9b07      	ldr	r3, [sp, #28]
   1c694:	4418      	add	r0, r3
   1c696:	f010 001f 	ands.w	r0, r0, #31
   1c69a:	f000 80f0 	beq.w	1c87e <_dtoa_r+0x9ae>
   1c69e:	f1c0 0320 	rsb	r3, r0, #32
   1c6a2:	2b04      	cmp	r3, #4
   1c6a4:	f340 80e2 	ble.w	1c86c <_dtoa_r+0x99c>
   1c6a8:	9b07      	ldr	r3, [sp, #28]
   1c6aa:	f1c0 001c 	rsb	r0, r0, #28
   1c6ae:	4480      	add	r8, r0
   1c6b0:	4405      	add	r5, r0
   1c6b2:	4403      	add	r3, r0
   1c6b4:	9307      	str	r3, [sp, #28]
   1c6b6:	f1b8 0f00 	cmp.w	r8, #0
   1c6ba:	dd05      	ble.n	1c6c8 <_dtoa_r+0x7f8>
   1c6bc:	4651      	mov	r1, sl
   1c6be:	4642      	mov	r2, r8
   1c6c0:	4620      	mov	r0, r4
   1c6c2:	f000 ff8f 	bl	1d5e4 <__lshift>
   1c6c6:	4682      	mov	sl, r0
   1c6c8:	9b07      	ldr	r3, [sp, #28]
   1c6ca:	2b00      	cmp	r3, #0
   1c6cc:	dd05      	ble.n	1c6da <_dtoa_r+0x80a>
   1c6ce:	4631      	mov	r1, r6
   1c6d0:	461a      	mov	r2, r3
   1c6d2:	4620      	mov	r0, r4
   1c6d4:	f000 ff86 	bl	1d5e4 <__lshift>
   1c6d8:	4606      	mov	r6, r0
   1c6da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c6dc:	2b00      	cmp	r3, #0
   1c6de:	f000 80d3 	beq.w	1c888 <_dtoa_r+0x9b8>
   1c6e2:	4631      	mov	r1, r6
   1c6e4:	4650      	mov	r0, sl
   1c6e6:	f000 ffce 	bl	1d686 <__mcmp>
   1c6ea:	2800      	cmp	r0, #0
   1c6ec:	f280 80cc 	bge.w	1c888 <_dtoa_r+0x9b8>
   1c6f0:	2300      	movs	r3, #0
   1c6f2:	4651      	mov	r1, sl
   1c6f4:	220a      	movs	r2, #10
   1c6f6:	4620      	mov	r0, r4
   1c6f8:	f000 fdc9 	bl	1d28e <__multadd>
   1c6fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c6fe:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c702:	4682      	mov	sl, r0
   1c704:	2b00      	cmp	r3, #0
   1c706:	f000 81a9 	beq.w	1ca5c <_dtoa_r+0xb8c>
   1c70a:	2300      	movs	r3, #0
   1c70c:	4639      	mov	r1, r7
   1c70e:	220a      	movs	r2, #10
   1c710:	4620      	mov	r0, r4
   1c712:	f000 fdbc 	bl	1d28e <__multadd>
   1c716:	9b04      	ldr	r3, [sp, #16]
   1c718:	4607      	mov	r7, r0
   1c71a:	2b00      	cmp	r3, #0
   1c71c:	dc03      	bgt.n	1c726 <_dtoa_r+0x856>
   1c71e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c720:	2b02      	cmp	r3, #2
   1c722:	f300 80b9 	bgt.w	1c898 <_dtoa_r+0x9c8>
   1c726:	2d00      	cmp	r5, #0
   1c728:	dd05      	ble.n	1c736 <_dtoa_r+0x866>
   1c72a:	4639      	mov	r1, r7
   1c72c:	462a      	mov	r2, r5
   1c72e:	4620      	mov	r0, r4
   1c730:	f000 ff58 	bl	1d5e4 <__lshift>
   1c734:	4607      	mov	r7, r0
   1c736:	9b08      	ldr	r3, [sp, #32]
   1c738:	2b00      	cmp	r3, #0
   1c73a:	f000 8110 	beq.w	1c95e <_dtoa_r+0xa8e>
   1c73e:	6879      	ldr	r1, [r7, #4]
   1c740:	4620      	mov	r0, r4
   1c742:	f000 fd59 	bl	1d1f8 <_Balloc>
   1c746:	4605      	mov	r5, r0
   1c748:	693a      	ldr	r2, [r7, #16]
   1c74a:	f107 010c 	add.w	r1, r7, #12
   1c74e:	3202      	adds	r2, #2
   1c750:	0092      	lsls	r2, r2, #2
   1c752:	300c      	adds	r0, #12
   1c754:	f7fc fbb5 	bl	18ec2 <memcpy>
   1c758:	2201      	movs	r2, #1
   1c75a:	4629      	mov	r1, r5
   1c75c:	4620      	mov	r0, r4
   1c75e:	f000 ff41 	bl	1d5e4 <__lshift>
   1c762:	9707      	str	r7, [sp, #28]
   1c764:	4607      	mov	r7, r0
   1c766:	9b02      	ldr	r3, [sp, #8]
   1c768:	f8dd 8018 	ldr.w	r8, [sp, #24]
   1c76c:	f003 0301 	and.w	r3, r3, #1
   1c770:	9308      	str	r3, [sp, #32]
   1c772:	4631      	mov	r1, r6
   1c774:	4650      	mov	r0, sl
   1c776:	f7ff fb1f 	bl	1bdb8 <quorem>
   1c77a:	9907      	ldr	r1, [sp, #28]
   1c77c:	4605      	mov	r5, r0
   1c77e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1c782:	4650      	mov	r0, sl
   1c784:	f000 ff7f 	bl	1d686 <__mcmp>
   1c788:	463a      	mov	r2, r7
   1c78a:	9002      	str	r0, [sp, #8]
   1c78c:	4631      	mov	r1, r6
   1c78e:	4620      	mov	r0, r4
   1c790:	f000 ff93 	bl	1d6ba <__mdiff>
   1c794:	68c3      	ldr	r3, [r0, #12]
   1c796:	4602      	mov	r2, r0
   1c798:	2b00      	cmp	r3, #0
   1c79a:	f040 80e2 	bne.w	1c962 <_dtoa_r+0xa92>
   1c79e:	4601      	mov	r1, r0
   1c7a0:	9009      	str	r0, [sp, #36]	; 0x24
   1c7a2:	4650      	mov	r0, sl
   1c7a4:	f000 ff6f 	bl	1d686 <__mcmp>
   1c7a8:	4603      	mov	r3, r0
   1c7aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1c7ac:	4611      	mov	r1, r2
   1c7ae:	4620      	mov	r0, r4
   1c7b0:	9309      	str	r3, [sp, #36]	; 0x24
   1c7b2:	f000 fd55 	bl	1d260 <_Bfree>
   1c7b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c7b8:	2b00      	cmp	r3, #0
   1c7ba:	f040 80d4 	bne.w	1c966 <_dtoa_r+0xa96>
   1c7be:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1c7c0:	2a00      	cmp	r2, #0
   1c7c2:	f040 80d0 	bne.w	1c966 <_dtoa_r+0xa96>
   1c7c6:	9a08      	ldr	r2, [sp, #32]
   1c7c8:	2a00      	cmp	r2, #0
   1c7ca:	f040 80cc 	bne.w	1c966 <_dtoa_r+0xa96>
   1c7ce:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1c7d2:	f000 80e8 	beq.w	1c9a6 <_dtoa_r+0xad6>
   1c7d6:	9b02      	ldr	r3, [sp, #8]
   1c7d8:	2b00      	cmp	r3, #0
   1c7da:	dd01      	ble.n	1c7e0 <_dtoa_r+0x910>
   1c7dc:	f105 0931 	add.w	r9, r5, #49	; 0x31
   1c7e0:	f108 0501 	add.w	r5, r8, #1
   1c7e4:	f888 9000 	strb.w	r9, [r8]
   1c7e8:	e06b      	b.n	1c8c2 <_dtoa_r+0x9f2>
   1c7ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1c7ec:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   1c7f0:	e6f7      	b.n	1c5e2 <_dtoa_r+0x712>
   1c7f2:	9b08      	ldr	r3, [sp, #32]
   1c7f4:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   1c7f8:	42b3      	cmp	r3, r6
   1c7fa:	bfb7      	itett	lt
   1c7fc:	9b08      	ldrlt	r3, [sp, #32]
   1c7fe:	1b9e      	subge	r6, r3, r6
   1c800:	1af2      	sublt	r2, r6, r3
   1c802:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   1c804:	bfbf      	itttt	lt
   1c806:	9608      	strlt	r6, [sp, #32]
   1c808:	189b      	addlt	r3, r3, r2
   1c80a:	930c      	strlt	r3, [sp, #48]	; 0x30
   1c80c:	2600      	movlt	r6, #0
   1c80e:	f1b9 0f00 	cmp.w	r9, #0
   1c812:	bfb9      	ittee	lt
   1c814:	eba8 0509 	sublt.w	r5, r8, r9
   1c818:	2300      	movlt	r3, #0
   1c81a:	4645      	movge	r5, r8
   1c81c:	464b      	movge	r3, r9
   1c81e:	e6e2      	b.n	1c5e6 <_dtoa_r+0x716>
   1c820:	9e08      	ldr	r6, [sp, #32]
   1c822:	4645      	mov	r5, r8
   1c824:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1c826:	e6e7      	b.n	1c5f8 <_dtoa_r+0x728>
   1c828:	9a08      	ldr	r2, [sp, #32]
   1c82a:	e710      	b.n	1c64e <_dtoa_r+0x77e>
   1c82c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c82e:	2b01      	cmp	r3, #1
   1c830:	dc18      	bgt.n	1c864 <_dtoa_r+0x994>
   1c832:	9b02      	ldr	r3, [sp, #8]
   1c834:	b9b3      	cbnz	r3, 1c864 <_dtoa_r+0x994>
   1c836:	9b03      	ldr	r3, [sp, #12]
   1c838:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1c83c:	b9a3      	cbnz	r3, 1c868 <_dtoa_r+0x998>
   1c83e:	9b03      	ldr	r3, [sp, #12]
   1c840:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   1c844:	0d1b      	lsrs	r3, r3, #20
   1c846:	051b      	lsls	r3, r3, #20
   1c848:	b12b      	cbz	r3, 1c856 <_dtoa_r+0x986>
   1c84a:	9b07      	ldr	r3, [sp, #28]
   1c84c:	f108 0801 	add.w	r8, r8, #1
   1c850:	3301      	adds	r3, #1
   1c852:	9307      	str	r3, [sp, #28]
   1c854:	2301      	movs	r3, #1
   1c856:	9308      	str	r3, [sp, #32]
   1c858:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1c85a:	2b00      	cmp	r3, #0
   1c85c:	f47f af11 	bne.w	1c682 <_dtoa_r+0x7b2>
   1c860:	2001      	movs	r0, #1
   1c862:	e716      	b.n	1c692 <_dtoa_r+0x7c2>
   1c864:	2300      	movs	r3, #0
   1c866:	e7f6      	b.n	1c856 <_dtoa_r+0x986>
   1c868:	9b02      	ldr	r3, [sp, #8]
   1c86a:	e7f4      	b.n	1c856 <_dtoa_r+0x986>
   1c86c:	f43f af23 	beq.w	1c6b6 <_dtoa_r+0x7e6>
   1c870:	9a07      	ldr	r2, [sp, #28]
   1c872:	331c      	adds	r3, #28
   1c874:	441a      	add	r2, r3
   1c876:	4498      	add	r8, r3
   1c878:	441d      	add	r5, r3
   1c87a:	4613      	mov	r3, r2
   1c87c:	e71a      	b.n	1c6b4 <_dtoa_r+0x7e4>
   1c87e:	4603      	mov	r3, r0
   1c880:	e7f6      	b.n	1c870 <_dtoa_r+0x9a0>
   1c882:	bf00      	nop
   1c884:	40240000 	.word	0x40240000
   1c888:	f1b9 0f00 	cmp.w	r9, #0
   1c88c:	dc33      	bgt.n	1c8f6 <_dtoa_r+0xa26>
   1c88e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c890:	2b02      	cmp	r3, #2
   1c892:	dd30      	ble.n	1c8f6 <_dtoa_r+0xa26>
   1c894:	f8cd 9010 	str.w	r9, [sp, #16]
   1c898:	9b04      	ldr	r3, [sp, #16]
   1c89a:	b963      	cbnz	r3, 1c8b6 <_dtoa_r+0x9e6>
   1c89c:	4631      	mov	r1, r6
   1c89e:	2205      	movs	r2, #5
   1c8a0:	4620      	mov	r0, r4
   1c8a2:	f000 fcf4 	bl	1d28e <__multadd>
   1c8a6:	4601      	mov	r1, r0
   1c8a8:	4606      	mov	r6, r0
   1c8aa:	4650      	mov	r0, sl
   1c8ac:	f000 feeb 	bl	1d686 <__mcmp>
   1c8b0:	2800      	cmp	r0, #0
   1c8b2:	f73f ad5c 	bgt.w	1c36e <_dtoa_r+0x49e>
   1c8b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c8b8:	9d06      	ldr	r5, [sp, #24]
   1c8ba:	ea6f 0b03 	mvn.w	fp, r3
   1c8be:	2300      	movs	r3, #0
   1c8c0:	9307      	str	r3, [sp, #28]
   1c8c2:	4631      	mov	r1, r6
   1c8c4:	4620      	mov	r0, r4
   1c8c6:	f000 fccb 	bl	1d260 <_Bfree>
   1c8ca:	2f00      	cmp	r7, #0
   1c8cc:	f43f ae4b 	beq.w	1c566 <_dtoa_r+0x696>
   1c8d0:	9b07      	ldr	r3, [sp, #28]
   1c8d2:	b12b      	cbz	r3, 1c8e0 <_dtoa_r+0xa10>
   1c8d4:	42bb      	cmp	r3, r7
   1c8d6:	d003      	beq.n	1c8e0 <_dtoa_r+0xa10>
   1c8d8:	4619      	mov	r1, r3
   1c8da:	4620      	mov	r0, r4
   1c8dc:	f000 fcc0 	bl	1d260 <_Bfree>
   1c8e0:	4639      	mov	r1, r7
   1c8e2:	4620      	mov	r0, r4
   1c8e4:	f000 fcbc 	bl	1d260 <_Bfree>
   1c8e8:	e63d      	b.n	1c566 <_dtoa_r+0x696>
   1c8ea:	2600      	movs	r6, #0
   1c8ec:	4637      	mov	r7, r6
   1c8ee:	e7e2      	b.n	1c8b6 <_dtoa_r+0x9e6>
   1c8f0:	46bb      	mov	fp, r7
   1c8f2:	4637      	mov	r7, r6
   1c8f4:	e53b      	b.n	1c36e <_dtoa_r+0x49e>
   1c8f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c8f8:	f8cd 9010 	str.w	r9, [sp, #16]
   1c8fc:	2b00      	cmp	r3, #0
   1c8fe:	f47f af12 	bne.w	1c726 <_dtoa_r+0x856>
   1c902:	9d06      	ldr	r5, [sp, #24]
   1c904:	4631      	mov	r1, r6
   1c906:	4650      	mov	r0, sl
   1c908:	f7ff fa56 	bl	1bdb8 <quorem>
   1c90c:	9b06      	ldr	r3, [sp, #24]
   1c90e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1c912:	f805 9b01 	strb.w	r9, [r5], #1
   1c916:	9a04      	ldr	r2, [sp, #16]
   1c918:	1aeb      	subs	r3, r5, r3
   1c91a:	429a      	cmp	r2, r3
   1c91c:	f300 8081 	bgt.w	1ca22 <_dtoa_r+0xb52>
   1c920:	9b06      	ldr	r3, [sp, #24]
   1c922:	2a01      	cmp	r2, #1
   1c924:	bfac      	ite	ge
   1c926:	189b      	addge	r3, r3, r2
   1c928:	3301      	addlt	r3, #1
   1c92a:	4698      	mov	r8, r3
   1c92c:	2300      	movs	r3, #0
   1c92e:	9307      	str	r3, [sp, #28]
   1c930:	4651      	mov	r1, sl
   1c932:	2201      	movs	r2, #1
   1c934:	4620      	mov	r0, r4
   1c936:	f000 fe55 	bl	1d5e4 <__lshift>
   1c93a:	4631      	mov	r1, r6
   1c93c:	4682      	mov	sl, r0
   1c93e:	f000 fea2 	bl	1d686 <__mcmp>
   1c942:	2800      	cmp	r0, #0
   1c944:	dc34      	bgt.n	1c9b0 <_dtoa_r+0xae0>
   1c946:	d102      	bne.n	1c94e <_dtoa_r+0xa7e>
   1c948:	f019 0f01 	tst.w	r9, #1
   1c94c:	d130      	bne.n	1c9b0 <_dtoa_r+0xae0>
   1c94e:	4645      	mov	r5, r8
   1c950:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1c954:	1e6a      	subs	r2, r5, #1
   1c956:	2b30      	cmp	r3, #48	; 0x30
   1c958:	d1b3      	bne.n	1c8c2 <_dtoa_r+0x9f2>
   1c95a:	4615      	mov	r5, r2
   1c95c:	e7f8      	b.n	1c950 <_dtoa_r+0xa80>
   1c95e:	4638      	mov	r0, r7
   1c960:	e6ff      	b.n	1c762 <_dtoa_r+0x892>
   1c962:	2301      	movs	r3, #1
   1c964:	e722      	b.n	1c7ac <_dtoa_r+0x8dc>
   1c966:	9a02      	ldr	r2, [sp, #8]
   1c968:	2a00      	cmp	r2, #0
   1c96a:	db04      	blt.n	1c976 <_dtoa_r+0xaa6>
   1c96c:	d128      	bne.n	1c9c0 <_dtoa_r+0xaf0>
   1c96e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1c970:	bb32      	cbnz	r2, 1c9c0 <_dtoa_r+0xaf0>
   1c972:	9a08      	ldr	r2, [sp, #32]
   1c974:	bb22      	cbnz	r2, 1c9c0 <_dtoa_r+0xaf0>
   1c976:	2b00      	cmp	r3, #0
   1c978:	f77f af32 	ble.w	1c7e0 <_dtoa_r+0x910>
   1c97c:	4651      	mov	r1, sl
   1c97e:	2201      	movs	r2, #1
   1c980:	4620      	mov	r0, r4
   1c982:	f000 fe2f 	bl	1d5e4 <__lshift>
   1c986:	4631      	mov	r1, r6
   1c988:	4682      	mov	sl, r0
   1c98a:	f000 fe7c 	bl	1d686 <__mcmp>
   1c98e:	2800      	cmp	r0, #0
   1c990:	dc05      	bgt.n	1c99e <_dtoa_r+0xace>
   1c992:	f47f af25 	bne.w	1c7e0 <_dtoa_r+0x910>
   1c996:	f019 0f01 	tst.w	r9, #1
   1c99a:	f43f af21 	beq.w	1c7e0 <_dtoa_r+0x910>
   1c99e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1c9a2:	f47f af1b 	bne.w	1c7dc <_dtoa_r+0x90c>
   1c9a6:	2339      	movs	r3, #57	; 0x39
   1c9a8:	f108 0801 	add.w	r8, r8, #1
   1c9ac:	f808 3c01 	strb.w	r3, [r8, #-1]
   1c9b0:	4645      	mov	r5, r8
   1c9b2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1c9b6:	1e6a      	subs	r2, r5, #1
   1c9b8:	2b39      	cmp	r3, #57	; 0x39
   1c9ba:	d03a      	beq.n	1ca32 <_dtoa_r+0xb62>
   1c9bc:	3301      	adds	r3, #1
   1c9be:	e03f      	b.n	1ca40 <_dtoa_r+0xb70>
   1c9c0:	2b00      	cmp	r3, #0
   1c9c2:	f108 0501 	add.w	r5, r8, #1
   1c9c6:	dd05      	ble.n	1c9d4 <_dtoa_r+0xb04>
   1c9c8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1c9cc:	d0eb      	beq.n	1c9a6 <_dtoa_r+0xad6>
   1c9ce:	f109 0901 	add.w	r9, r9, #1
   1c9d2:	e707      	b.n	1c7e4 <_dtoa_r+0x914>
   1c9d4:	9b06      	ldr	r3, [sp, #24]
   1c9d6:	9a04      	ldr	r2, [sp, #16]
   1c9d8:	1aeb      	subs	r3, r5, r3
   1c9da:	4293      	cmp	r3, r2
   1c9dc:	46a8      	mov	r8, r5
   1c9de:	f805 9c01 	strb.w	r9, [r5, #-1]
   1c9e2:	d0a5      	beq.n	1c930 <_dtoa_r+0xa60>
   1c9e4:	4651      	mov	r1, sl
   1c9e6:	2300      	movs	r3, #0
   1c9e8:	220a      	movs	r2, #10
   1c9ea:	4620      	mov	r0, r4
   1c9ec:	f000 fc4f 	bl	1d28e <__multadd>
   1c9f0:	9b07      	ldr	r3, [sp, #28]
   1c9f2:	4682      	mov	sl, r0
   1c9f4:	42bb      	cmp	r3, r7
   1c9f6:	f04f 020a 	mov.w	r2, #10
   1c9fa:	f04f 0300 	mov.w	r3, #0
   1c9fe:	9907      	ldr	r1, [sp, #28]
   1ca00:	4620      	mov	r0, r4
   1ca02:	d104      	bne.n	1ca0e <_dtoa_r+0xb3e>
   1ca04:	f000 fc43 	bl	1d28e <__multadd>
   1ca08:	9007      	str	r0, [sp, #28]
   1ca0a:	4607      	mov	r7, r0
   1ca0c:	e6b1      	b.n	1c772 <_dtoa_r+0x8a2>
   1ca0e:	f000 fc3e 	bl	1d28e <__multadd>
   1ca12:	2300      	movs	r3, #0
   1ca14:	9007      	str	r0, [sp, #28]
   1ca16:	220a      	movs	r2, #10
   1ca18:	4639      	mov	r1, r7
   1ca1a:	4620      	mov	r0, r4
   1ca1c:	f000 fc37 	bl	1d28e <__multadd>
   1ca20:	e7f3      	b.n	1ca0a <_dtoa_r+0xb3a>
   1ca22:	4651      	mov	r1, sl
   1ca24:	2300      	movs	r3, #0
   1ca26:	220a      	movs	r2, #10
   1ca28:	4620      	mov	r0, r4
   1ca2a:	f000 fc30 	bl	1d28e <__multadd>
   1ca2e:	4682      	mov	sl, r0
   1ca30:	e768      	b.n	1c904 <_dtoa_r+0xa34>
   1ca32:	9b06      	ldr	r3, [sp, #24]
   1ca34:	4293      	cmp	r3, r2
   1ca36:	d105      	bne.n	1ca44 <_dtoa_r+0xb74>
   1ca38:	2331      	movs	r3, #49	; 0x31
   1ca3a:	9a06      	ldr	r2, [sp, #24]
   1ca3c:	f10b 0b01 	add.w	fp, fp, #1
   1ca40:	7013      	strb	r3, [r2, #0]
   1ca42:	e73e      	b.n	1c8c2 <_dtoa_r+0x9f2>
   1ca44:	4615      	mov	r5, r2
   1ca46:	e7b4      	b.n	1c9b2 <_dtoa_r+0xae2>
   1ca48:	4b09      	ldr	r3, [pc, #36]	; (1ca70 <_dtoa_r+0xba0>)
   1ca4a:	f7ff baa3 	b.w	1bf94 <_dtoa_r+0xc4>
   1ca4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1ca50:	2b00      	cmp	r3, #0
   1ca52:	f47f aa7d 	bne.w	1bf50 <_dtoa_r+0x80>
   1ca56:	4b07      	ldr	r3, [pc, #28]	; (1ca74 <_dtoa_r+0xba4>)
   1ca58:	f7ff ba9c 	b.w	1bf94 <_dtoa_r+0xc4>
   1ca5c:	9b04      	ldr	r3, [sp, #16]
   1ca5e:	2b00      	cmp	r3, #0
   1ca60:	f73f af4f 	bgt.w	1c902 <_dtoa_r+0xa32>
   1ca64:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1ca66:	2b02      	cmp	r3, #2
   1ca68:	f77f af4b 	ble.w	1c902 <_dtoa_r+0xa32>
   1ca6c:	e714      	b.n	1c898 <_dtoa_r+0x9c8>
   1ca6e:	bf00      	nop
   1ca70:	0001f3d6 	.word	0x0001f3d6
   1ca74:	0002051d 	.word	0x0002051d

0001ca78 <_fstat_r>:
_fstat_r():
   1ca78:	b538      	push	{r3, r4, r5, lr}
   1ca7a:	2300      	movs	r3, #0
   1ca7c:	4c06      	ldr	r4, [pc, #24]	; (1ca98 <_fstat_r+0x20>)
   1ca7e:	4605      	mov	r5, r0
   1ca80:	4608      	mov	r0, r1
   1ca82:	4611      	mov	r1, r2
   1ca84:	6023      	str	r3, [r4, #0]
   1ca86:	f7f8 fa8b 	bl	14fa0 <_fstat>
   1ca8a:	1c43      	adds	r3, r0, #1
   1ca8c:	d102      	bne.n	1ca94 <_fstat_r+0x1c>
   1ca8e:	6823      	ldr	r3, [r4, #0]
   1ca90:	b103      	cbz	r3, 1ca94 <_fstat_r+0x1c>
   1ca92:	602b      	str	r3, [r5, #0]
   1ca94:	bd38      	pop	{r3, r4, r5, pc}
   1ca96:	bf00      	nop
   1ca98:	2007c7b0 	.word	0x2007c7b0

0001ca9c <rshift>:
rshift():
   1ca9c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1ca9e:	6906      	ldr	r6, [r0, #16]
   1caa0:	114b      	asrs	r3, r1, #5
   1caa2:	42b3      	cmp	r3, r6
   1caa4:	f100 0514 	add.w	r5, r0, #20
   1caa8:	da2b      	bge.n	1cb02 <rshift+0x66>
   1caaa:	f011 011f 	ands.w	r1, r1, #31
   1caae:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   1cab2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   1cab6:	d108      	bne.n	1caca <rshift+0x2e>
   1cab8:	4629      	mov	r1, r5
   1caba:	42b2      	cmp	r2, r6
   1cabc:	460b      	mov	r3, r1
   1cabe:	d210      	bcs.n	1cae2 <rshift+0x46>
   1cac0:	f852 3b04 	ldr.w	r3, [r2], #4
   1cac4:	f841 3b04 	str.w	r3, [r1], #4
   1cac8:	e7f7      	b.n	1caba <rshift+0x1e>
   1caca:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   1cace:	462b      	mov	r3, r5
   1cad0:	f1c1 0e20 	rsb	lr, r1, #32
   1cad4:	3204      	adds	r2, #4
   1cad6:	40cc      	lsrs	r4, r1
   1cad8:	42b2      	cmp	r2, r6
   1cada:	d308      	bcc.n	1caee <rshift+0x52>
   1cadc:	601c      	str	r4, [r3, #0]
   1cade:	b104      	cbz	r4, 1cae2 <rshift+0x46>
   1cae0:	3304      	adds	r3, #4
   1cae2:	1b5b      	subs	r3, r3, r5
   1cae4:	109b      	asrs	r3, r3, #2
   1cae6:	6103      	str	r3, [r0, #16]
   1cae8:	b903      	cbnz	r3, 1caec <rshift+0x50>
   1caea:	6143      	str	r3, [r0, #20]
   1caec:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1caee:	6817      	ldr	r7, [r2, #0]
   1caf0:	fa07 f70e 	lsl.w	r7, r7, lr
   1caf4:	433c      	orrs	r4, r7
   1caf6:	f843 4b04 	str.w	r4, [r3], #4
   1cafa:	f852 4b04 	ldr.w	r4, [r2], #4
   1cafe:	40cc      	lsrs	r4, r1
   1cb00:	e7ea      	b.n	1cad8 <rshift+0x3c>
   1cb02:	462b      	mov	r3, r5
   1cb04:	e7ed      	b.n	1cae2 <rshift+0x46>

0001cb06 <__hexdig_fun>:
__hexdig_fun():
   1cb06:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   1cb0a:	2b09      	cmp	r3, #9
   1cb0c:	d802      	bhi.n	1cb14 <__hexdig_fun+0xe>
   1cb0e:	3820      	subs	r0, #32
   1cb10:	b2c0      	uxtb	r0, r0
   1cb12:	4770      	bx	lr
   1cb14:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   1cb18:	2b05      	cmp	r3, #5
   1cb1a:	d801      	bhi.n	1cb20 <__hexdig_fun+0x1a>
   1cb1c:	3847      	subs	r0, #71	; 0x47
   1cb1e:	e7f7      	b.n	1cb10 <__hexdig_fun+0xa>
   1cb20:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   1cb24:	2b05      	cmp	r3, #5
   1cb26:	d801      	bhi.n	1cb2c <__hexdig_fun+0x26>
   1cb28:	3827      	subs	r0, #39	; 0x27
   1cb2a:	e7f1      	b.n	1cb10 <__hexdig_fun+0xa>
   1cb2c:	2000      	movs	r0, #0
   1cb2e:	4770      	bx	lr

0001cb30 <__gethex>:
__gethex():
   1cb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb34:	b08b      	sub	sp, #44	; 0x2c
   1cb36:	9002      	str	r0, [sp, #8]
   1cb38:	9816      	ldr	r0, [sp, #88]	; 0x58
   1cb3a:	468a      	mov	sl, r1
   1cb3c:	4690      	mov	r8, r2
   1cb3e:	9306      	str	r3, [sp, #24]
   1cb40:	f000 fb38 	bl	1d1b4 <__localeconv_l>
   1cb44:	6803      	ldr	r3, [r0, #0]
   1cb46:	f04f 0b00 	mov.w	fp, #0
   1cb4a:	4618      	mov	r0, r3
   1cb4c:	9303      	str	r3, [sp, #12]
   1cb4e:	f7fd feae 	bl	1a8ae <strlen>
   1cb52:	9b03      	ldr	r3, [sp, #12]
   1cb54:	9001      	str	r0, [sp, #4]
   1cb56:	4403      	add	r3, r0
   1cb58:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   1cb5c:	9307      	str	r3, [sp, #28]
   1cb5e:	f8da 3000 	ldr.w	r3, [sl]
   1cb62:	3302      	adds	r3, #2
   1cb64:	461f      	mov	r7, r3
   1cb66:	f813 0b01 	ldrb.w	r0, [r3], #1
   1cb6a:	2830      	cmp	r0, #48	; 0x30
   1cb6c:	d06c      	beq.n	1cc48 <__gethex+0x118>
   1cb6e:	f7ff ffca 	bl	1cb06 <__hexdig_fun>
   1cb72:	4604      	mov	r4, r0
   1cb74:	2800      	cmp	r0, #0
   1cb76:	d16a      	bne.n	1cc4e <__gethex+0x11e>
   1cb78:	9a01      	ldr	r2, [sp, #4]
   1cb7a:	9903      	ldr	r1, [sp, #12]
   1cb7c:	4638      	mov	r0, r7
   1cb7e:	f7fd fe9e 	bl	1a8be <strncmp>
   1cb82:	2800      	cmp	r0, #0
   1cb84:	d166      	bne.n	1cc54 <__gethex+0x124>
   1cb86:	9b01      	ldr	r3, [sp, #4]
   1cb88:	5cf8      	ldrb	r0, [r7, r3]
   1cb8a:	18fe      	adds	r6, r7, r3
   1cb8c:	f7ff ffbb 	bl	1cb06 <__hexdig_fun>
   1cb90:	2800      	cmp	r0, #0
   1cb92:	d062      	beq.n	1cc5a <__gethex+0x12a>
   1cb94:	4633      	mov	r3, r6
   1cb96:	7818      	ldrb	r0, [r3, #0]
   1cb98:	461f      	mov	r7, r3
   1cb9a:	2830      	cmp	r0, #48	; 0x30
   1cb9c:	f103 0301 	add.w	r3, r3, #1
   1cba0:	d0f9      	beq.n	1cb96 <__gethex+0x66>
   1cba2:	f7ff ffb0 	bl	1cb06 <__hexdig_fun>
   1cba6:	fab0 f580 	clz	r5, r0
   1cbaa:	4634      	mov	r4, r6
   1cbac:	f04f 0b01 	mov.w	fp, #1
   1cbb0:	096d      	lsrs	r5, r5, #5
   1cbb2:	463a      	mov	r2, r7
   1cbb4:	4616      	mov	r6, r2
   1cbb6:	7830      	ldrb	r0, [r6, #0]
   1cbb8:	3201      	adds	r2, #1
   1cbba:	f7ff ffa4 	bl	1cb06 <__hexdig_fun>
   1cbbe:	2800      	cmp	r0, #0
   1cbc0:	d1f8      	bne.n	1cbb4 <__gethex+0x84>
   1cbc2:	9a01      	ldr	r2, [sp, #4]
   1cbc4:	9903      	ldr	r1, [sp, #12]
   1cbc6:	4630      	mov	r0, r6
   1cbc8:	f7fd fe79 	bl	1a8be <strncmp>
   1cbcc:	b950      	cbnz	r0, 1cbe4 <__gethex+0xb4>
   1cbce:	b954      	cbnz	r4, 1cbe6 <__gethex+0xb6>
   1cbd0:	9b01      	ldr	r3, [sp, #4]
   1cbd2:	18f4      	adds	r4, r6, r3
   1cbd4:	4622      	mov	r2, r4
   1cbd6:	4616      	mov	r6, r2
   1cbd8:	7830      	ldrb	r0, [r6, #0]
   1cbda:	3201      	adds	r2, #1
   1cbdc:	f7ff ff93 	bl	1cb06 <__hexdig_fun>
   1cbe0:	2800      	cmp	r0, #0
   1cbe2:	d1f8      	bne.n	1cbd6 <__gethex+0xa6>
   1cbe4:	b10c      	cbz	r4, 1cbea <__gethex+0xba>
   1cbe6:	1ba4      	subs	r4, r4, r6
   1cbe8:	00a4      	lsls	r4, r4, #2
   1cbea:	7833      	ldrb	r3, [r6, #0]
   1cbec:	2b50      	cmp	r3, #80	; 0x50
   1cbee:	d001      	beq.n	1cbf4 <__gethex+0xc4>
   1cbf0:	2b70      	cmp	r3, #112	; 0x70
   1cbf2:	d140      	bne.n	1cc76 <__gethex+0x146>
   1cbf4:	7873      	ldrb	r3, [r6, #1]
   1cbf6:	2b2b      	cmp	r3, #43	; 0x2b
   1cbf8:	d035      	beq.n	1cc66 <__gethex+0x136>
   1cbfa:	2b2d      	cmp	r3, #45	; 0x2d
   1cbfc:	d02f      	beq.n	1cc5e <__gethex+0x12e>
   1cbfe:	f04f 0900 	mov.w	r9, #0
   1cc02:	1c71      	adds	r1, r6, #1
   1cc04:	7808      	ldrb	r0, [r1, #0]
   1cc06:	f7ff ff7e 	bl	1cb06 <__hexdig_fun>
   1cc0a:	1e43      	subs	r3, r0, #1
   1cc0c:	b2db      	uxtb	r3, r3
   1cc0e:	2b18      	cmp	r3, #24
   1cc10:	d831      	bhi.n	1cc76 <__gethex+0x146>
   1cc12:	f1a0 0210 	sub.w	r2, r0, #16
   1cc16:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   1cc1a:	f7ff ff74 	bl	1cb06 <__hexdig_fun>
   1cc1e:	1e43      	subs	r3, r0, #1
   1cc20:	b2db      	uxtb	r3, r3
   1cc22:	2b18      	cmp	r3, #24
   1cc24:	d922      	bls.n	1cc6c <__gethex+0x13c>
   1cc26:	f1b9 0f00 	cmp.w	r9, #0
   1cc2a:	d000      	beq.n	1cc2e <__gethex+0xfe>
   1cc2c:	4252      	negs	r2, r2
   1cc2e:	4414      	add	r4, r2
   1cc30:	f8ca 1000 	str.w	r1, [sl]
   1cc34:	b30d      	cbz	r5, 1cc7a <__gethex+0x14a>
   1cc36:	f1bb 0f00 	cmp.w	fp, #0
   1cc3a:	bf14      	ite	ne
   1cc3c:	2700      	movne	r7, #0
   1cc3e:	2706      	moveq	r7, #6
   1cc40:	4638      	mov	r0, r7
   1cc42:	b00b      	add	sp, #44	; 0x2c
   1cc44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc48:	f10b 0b01 	add.w	fp, fp, #1
   1cc4c:	e78a      	b.n	1cb64 <__gethex+0x34>
   1cc4e:	2500      	movs	r5, #0
   1cc50:	462c      	mov	r4, r5
   1cc52:	e7ae      	b.n	1cbb2 <__gethex+0x82>
   1cc54:	463e      	mov	r6, r7
   1cc56:	2501      	movs	r5, #1
   1cc58:	e7c7      	b.n	1cbea <__gethex+0xba>
   1cc5a:	4604      	mov	r4, r0
   1cc5c:	e7fb      	b.n	1cc56 <__gethex+0x126>
   1cc5e:	f04f 0901 	mov.w	r9, #1
   1cc62:	1cb1      	adds	r1, r6, #2
   1cc64:	e7ce      	b.n	1cc04 <__gethex+0xd4>
   1cc66:	f04f 0900 	mov.w	r9, #0
   1cc6a:	e7fa      	b.n	1cc62 <__gethex+0x132>
   1cc6c:	230a      	movs	r3, #10
   1cc6e:	fb03 0202 	mla	r2, r3, r2, r0
   1cc72:	3a10      	subs	r2, #16
   1cc74:	e7cf      	b.n	1cc16 <__gethex+0xe6>
   1cc76:	4631      	mov	r1, r6
   1cc78:	e7da      	b.n	1cc30 <__gethex+0x100>
   1cc7a:	4629      	mov	r1, r5
   1cc7c:	1bf3      	subs	r3, r6, r7
   1cc7e:	3b01      	subs	r3, #1
   1cc80:	2b07      	cmp	r3, #7
   1cc82:	dc49      	bgt.n	1cd18 <__gethex+0x1e8>
   1cc84:	9802      	ldr	r0, [sp, #8]
   1cc86:	f000 fab7 	bl	1d1f8 <_Balloc>
   1cc8a:	f04f 0b00 	mov.w	fp, #0
   1cc8e:	4605      	mov	r5, r0
   1cc90:	46da      	mov	sl, fp
   1cc92:	9b01      	ldr	r3, [sp, #4]
   1cc94:	f100 0914 	add.w	r9, r0, #20
   1cc98:	f1c3 0301 	rsb	r3, r3, #1
   1cc9c:	f8cd 9010 	str.w	r9, [sp, #16]
   1cca0:	9308      	str	r3, [sp, #32]
   1cca2:	42b7      	cmp	r7, r6
   1cca4:	d33b      	bcc.n	1cd1e <__gethex+0x1ee>
   1cca6:	9804      	ldr	r0, [sp, #16]
   1cca8:	f840 ab04 	str.w	sl, [r0], #4
   1ccac:	eba0 0009 	sub.w	r0, r0, r9
   1ccb0:	1080      	asrs	r0, r0, #2
   1ccb2:	6128      	str	r0, [r5, #16]
   1ccb4:	0147      	lsls	r7, r0, #5
   1ccb6:	4650      	mov	r0, sl
   1ccb8:	f000 fb62 	bl	1d380 <__hi0bits>
   1ccbc:	f8d8 6000 	ldr.w	r6, [r8]
   1ccc0:	1a3f      	subs	r7, r7, r0
   1ccc2:	42b7      	cmp	r7, r6
   1ccc4:	dd64      	ble.n	1cd90 <__gethex+0x260>
   1ccc6:	1bbf      	subs	r7, r7, r6
   1ccc8:	4639      	mov	r1, r7
   1ccca:	4628      	mov	r0, r5
   1cccc:	f000 fe5b 	bl	1d986 <__any_on>
   1ccd0:	4682      	mov	sl, r0
   1ccd2:	b178      	cbz	r0, 1ccf4 <__gethex+0x1c4>
   1ccd4:	f04f 0a01 	mov.w	sl, #1
   1ccd8:	1e7b      	subs	r3, r7, #1
   1ccda:	1159      	asrs	r1, r3, #5
   1ccdc:	f003 021f 	and.w	r2, r3, #31
   1cce0:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   1cce4:	fa0a f202 	lsl.w	r2, sl, r2
   1cce8:	420a      	tst	r2, r1
   1ccea:	d003      	beq.n	1ccf4 <__gethex+0x1c4>
   1ccec:	4553      	cmp	r3, sl
   1ccee:	dc46      	bgt.n	1cd7e <__gethex+0x24e>
   1ccf0:	f04f 0a02 	mov.w	sl, #2
   1ccf4:	4639      	mov	r1, r7
   1ccf6:	4628      	mov	r0, r5
   1ccf8:	f7ff fed0 	bl	1ca9c <rshift>
   1ccfc:	443c      	add	r4, r7
   1ccfe:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1cd02:	429c      	cmp	r4, r3
   1cd04:	dd52      	ble.n	1cdac <__gethex+0x27c>
   1cd06:	4629      	mov	r1, r5
   1cd08:	9802      	ldr	r0, [sp, #8]
   1cd0a:	f000 faa9 	bl	1d260 <_Bfree>
   1cd0e:	2300      	movs	r3, #0
   1cd10:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1cd12:	27a3      	movs	r7, #163	; 0xa3
   1cd14:	6013      	str	r3, [r2, #0]
   1cd16:	e793      	b.n	1cc40 <__gethex+0x110>
   1cd18:	3101      	adds	r1, #1
   1cd1a:	105b      	asrs	r3, r3, #1
   1cd1c:	e7b0      	b.n	1cc80 <__gethex+0x150>
   1cd1e:	1e73      	subs	r3, r6, #1
   1cd20:	9305      	str	r3, [sp, #20]
   1cd22:	9a07      	ldr	r2, [sp, #28]
   1cd24:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1cd28:	4293      	cmp	r3, r2
   1cd2a:	d018      	beq.n	1cd5e <__gethex+0x22e>
   1cd2c:	f1bb 0f20 	cmp.w	fp, #32
   1cd30:	d107      	bne.n	1cd42 <__gethex+0x212>
   1cd32:	9b04      	ldr	r3, [sp, #16]
   1cd34:	f8c3 a000 	str.w	sl, [r3]
   1cd38:	f04f 0a00 	mov.w	sl, #0
   1cd3c:	46d3      	mov	fp, sl
   1cd3e:	3304      	adds	r3, #4
   1cd40:	9304      	str	r3, [sp, #16]
   1cd42:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   1cd46:	f7ff fede 	bl	1cb06 <__hexdig_fun>
   1cd4a:	f000 000f 	and.w	r0, r0, #15
   1cd4e:	fa00 f00b 	lsl.w	r0, r0, fp
   1cd52:	ea4a 0a00 	orr.w	sl, sl, r0
   1cd56:	f10b 0b04 	add.w	fp, fp, #4
   1cd5a:	9b05      	ldr	r3, [sp, #20]
   1cd5c:	e00d      	b.n	1cd7a <__gethex+0x24a>
   1cd5e:	9b05      	ldr	r3, [sp, #20]
   1cd60:	9a08      	ldr	r2, [sp, #32]
   1cd62:	4413      	add	r3, r2
   1cd64:	429f      	cmp	r7, r3
   1cd66:	d8e1      	bhi.n	1cd2c <__gethex+0x1fc>
   1cd68:	4618      	mov	r0, r3
   1cd6a:	9a01      	ldr	r2, [sp, #4]
   1cd6c:	9903      	ldr	r1, [sp, #12]
   1cd6e:	9309      	str	r3, [sp, #36]	; 0x24
   1cd70:	f7fd fda5 	bl	1a8be <strncmp>
   1cd74:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1cd76:	2800      	cmp	r0, #0
   1cd78:	d1d8      	bne.n	1cd2c <__gethex+0x1fc>
   1cd7a:	461e      	mov	r6, r3
   1cd7c:	e791      	b.n	1cca2 <__gethex+0x172>
   1cd7e:	1eb9      	subs	r1, r7, #2
   1cd80:	4628      	mov	r0, r5
   1cd82:	f000 fe00 	bl	1d986 <__any_on>
   1cd86:	2800      	cmp	r0, #0
   1cd88:	d0b2      	beq.n	1ccf0 <__gethex+0x1c0>
   1cd8a:	f04f 0a03 	mov.w	sl, #3
   1cd8e:	e7b1      	b.n	1ccf4 <__gethex+0x1c4>
   1cd90:	da09      	bge.n	1cda6 <__gethex+0x276>
   1cd92:	1bf7      	subs	r7, r6, r7
   1cd94:	4629      	mov	r1, r5
   1cd96:	463a      	mov	r2, r7
   1cd98:	9802      	ldr	r0, [sp, #8]
   1cd9a:	f000 fc23 	bl	1d5e4 <__lshift>
   1cd9e:	4605      	mov	r5, r0
   1cda0:	1be4      	subs	r4, r4, r7
   1cda2:	f100 0914 	add.w	r9, r0, #20
   1cda6:	f04f 0a00 	mov.w	sl, #0
   1cdaa:	e7a8      	b.n	1ccfe <__gethex+0x1ce>
   1cdac:	f8d8 0004 	ldr.w	r0, [r8, #4]
   1cdb0:	4284      	cmp	r4, r0
   1cdb2:	da6b      	bge.n	1ce8c <__gethex+0x35c>
   1cdb4:	1b04      	subs	r4, r0, r4
   1cdb6:	42a6      	cmp	r6, r4
   1cdb8:	dc2e      	bgt.n	1ce18 <__gethex+0x2e8>
   1cdba:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1cdbe:	2b02      	cmp	r3, #2
   1cdc0:	d022      	beq.n	1ce08 <__gethex+0x2d8>
   1cdc2:	2b03      	cmp	r3, #3
   1cdc4:	d024      	beq.n	1ce10 <__gethex+0x2e0>
   1cdc6:	2b01      	cmp	r3, #1
   1cdc8:	d115      	bne.n	1cdf6 <__gethex+0x2c6>
   1cdca:	42a6      	cmp	r6, r4
   1cdcc:	d113      	bne.n	1cdf6 <__gethex+0x2c6>
   1cdce:	2e01      	cmp	r6, #1
   1cdd0:	dc0b      	bgt.n	1cdea <__gethex+0x2ba>
   1cdd2:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1cdd6:	9a06      	ldr	r2, [sp, #24]
   1cdd8:	2762      	movs	r7, #98	; 0x62
   1cdda:	6013      	str	r3, [r2, #0]
   1cddc:	2301      	movs	r3, #1
   1cdde:	612b      	str	r3, [r5, #16]
   1cde0:	f8c9 3000 	str.w	r3, [r9]
   1cde4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1cde6:	601d      	str	r5, [r3, #0]
   1cde8:	e72a      	b.n	1cc40 <__gethex+0x110>
   1cdea:	1e71      	subs	r1, r6, #1
   1cdec:	4628      	mov	r0, r5
   1cdee:	f000 fdca 	bl	1d986 <__any_on>
   1cdf2:	2800      	cmp	r0, #0
   1cdf4:	d1ed      	bne.n	1cdd2 <__gethex+0x2a2>
   1cdf6:	4629      	mov	r1, r5
   1cdf8:	9802      	ldr	r0, [sp, #8]
   1cdfa:	f000 fa31 	bl	1d260 <_Bfree>
   1cdfe:	2300      	movs	r3, #0
   1ce00:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1ce02:	2750      	movs	r7, #80	; 0x50
   1ce04:	6013      	str	r3, [r2, #0]
   1ce06:	e71b      	b.n	1cc40 <__gethex+0x110>
   1ce08:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ce0a:	2b00      	cmp	r3, #0
   1ce0c:	d0e1      	beq.n	1cdd2 <__gethex+0x2a2>
   1ce0e:	e7f2      	b.n	1cdf6 <__gethex+0x2c6>
   1ce10:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ce12:	2b00      	cmp	r3, #0
   1ce14:	d1dd      	bne.n	1cdd2 <__gethex+0x2a2>
   1ce16:	e7ee      	b.n	1cdf6 <__gethex+0x2c6>
   1ce18:	1e67      	subs	r7, r4, #1
   1ce1a:	f1ba 0f00 	cmp.w	sl, #0
   1ce1e:	d132      	bne.n	1ce86 <__gethex+0x356>
   1ce20:	b127      	cbz	r7, 1ce2c <__gethex+0x2fc>
   1ce22:	4639      	mov	r1, r7
   1ce24:	4628      	mov	r0, r5
   1ce26:	f000 fdae 	bl	1d986 <__any_on>
   1ce2a:	4682      	mov	sl, r0
   1ce2c:	2301      	movs	r3, #1
   1ce2e:	117a      	asrs	r2, r7, #5
   1ce30:	f007 071f 	and.w	r7, r7, #31
   1ce34:	fa03 f707 	lsl.w	r7, r3, r7
   1ce38:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   1ce3c:	4621      	mov	r1, r4
   1ce3e:	421f      	tst	r7, r3
   1ce40:	f04f 0702 	mov.w	r7, #2
   1ce44:	4628      	mov	r0, r5
   1ce46:	bf18      	it	ne
   1ce48:	f04a 0a02 	orrne.w	sl, sl, #2
   1ce4c:	1b36      	subs	r6, r6, r4
   1ce4e:	f7ff fe25 	bl	1ca9c <rshift>
   1ce52:	f8d8 4004 	ldr.w	r4, [r8, #4]
   1ce56:	f1ba 0f00 	cmp.w	sl, #0
   1ce5a:	d045      	beq.n	1cee8 <__gethex+0x3b8>
   1ce5c:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1ce60:	2b02      	cmp	r3, #2
   1ce62:	d015      	beq.n	1ce90 <__gethex+0x360>
   1ce64:	2b03      	cmp	r3, #3
   1ce66:	d017      	beq.n	1ce98 <__gethex+0x368>
   1ce68:	2b01      	cmp	r3, #1
   1ce6a:	d109      	bne.n	1ce80 <__gethex+0x350>
   1ce6c:	f01a 0f02 	tst.w	sl, #2
   1ce70:	d006      	beq.n	1ce80 <__gethex+0x350>
   1ce72:	f8d9 3000 	ldr.w	r3, [r9]
   1ce76:	ea4a 0a03 	orr.w	sl, sl, r3
   1ce7a:	f01a 0f01 	tst.w	sl, #1
   1ce7e:	d10e      	bne.n	1ce9e <__gethex+0x36e>
   1ce80:	f047 0710 	orr.w	r7, r7, #16
   1ce84:	e030      	b.n	1cee8 <__gethex+0x3b8>
   1ce86:	f04f 0a01 	mov.w	sl, #1
   1ce8a:	e7cf      	b.n	1ce2c <__gethex+0x2fc>
   1ce8c:	2701      	movs	r7, #1
   1ce8e:	e7e2      	b.n	1ce56 <__gethex+0x326>
   1ce90:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ce92:	f1c3 0301 	rsb	r3, r3, #1
   1ce96:	9315      	str	r3, [sp, #84]	; 0x54
   1ce98:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1ce9a:	2b00      	cmp	r3, #0
   1ce9c:	d0f0      	beq.n	1ce80 <__gethex+0x350>
   1ce9e:	2000      	movs	r0, #0
   1cea0:	f8d5 9010 	ldr.w	r9, [r5, #16]
   1cea4:	f105 0314 	add.w	r3, r5, #20
   1cea8:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   1ceac:	eb03 010a 	add.w	r1, r3, sl
   1ceb0:	681a      	ldr	r2, [r3, #0]
   1ceb2:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   1ceb6:	d01c      	beq.n	1cef2 <__gethex+0x3c2>
   1ceb8:	3201      	adds	r2, #1
   1ceba:	601a      	str	r2, [r3, #0]
   1cebc:	2f02      	cmp	r7, #2
   1cebe:	f105 0314 	add.w	r3, r5, #20
   1cec2:	d138      	bne.n	1cf36 <__gethex+0x406>
   1cec4:	f8d8 2000 	ldr.w	r2, [r8]
   1cec8:	3a01      	subs	r2, #1
   1ceca:	4296      	cmp	r6, r2
   1cecc:	d10a      	bne.n	1cee4 <__gethex+0x3b4>
   1cece:	2201      	movs	r2, #1
   1ced0:	1171      	asrs	r1, r6, #5
   1ced2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1ced6:	f006 061f 	and.w	r6, r6, #31
   1ceda:	fa02 f606 	lsl.w	r6, r2, r6
   1cede:	421e      	tst	r6, r3
   1cee0:	bf18      	it	ne
   1cee2:	4617      	movne	r7, r2
   1cee4:	f047 0720 	orr.w	r7, r7, #32
   1cee8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1ceea:	601d      	str	r5, [r3, #0]
   1ceec:	9b06      	ldr	r3, [sp, #24]
   1ceee:	601c      	str	r4, [r3, #0]
   1cef0:	e6a6      	b.n	1cc40 <__gethex+0x110>
   1cef2:	f843 0b04 	str.w	r0, [r3], #4
   1cef6:	4299      	cmp	r1, r3
   1cef8:	d8da      	bhi.n	1ceb0 <__gethex+0x380>
   1cefa:	68ab      	ldr	r3, [r5, #8]
   1cefc:	4599      	cmp	r9, r3
   1cefe:	db12      	blt.n	1cf26 <__gethex+0x3f6>
   1cf00:	6869      	ldr	r1, [r5, #4]
   1cf02:	9802      	ldr	r0, [sp, #8]
   1cf04:	3101      	adds	r1, #1
   1cf06:	f000 f977 	bl	1d1f8 <_Balloc>
   1cf0a:	4683      	mov	fp, r0
   1cf0c:	692a      	ldr	r2, [r5, #16]
   1cf0e:	f105 010c 	add.w	r1, r5, #12
   1cf12:	3202      	adds	r2, #2
   1cf14:	0092      	lsls	r2, r2, #2
   1cf16:	300c      	adds	r0, #12
   1cf18:	f7fb ffd3 	bl	18ec2 <memcpy>
   1cf1c:	4629      	mov	r1, r5
   1cf1e:	9802      	ldr	r0, [sp, #8]
   1cf20:	f000 f99e 	bl	1d260 <_Bfree>
   1cf24:	465d      	mov	r5, fp
   1cf26:	692b      	ldr	r3, [r5, #16]
   1cf28:	1c5a      	adds	r2, r3, #1
   1cf2a:	612a      	str	r2, [r5, #16]
   1cf2c:	2201      	movs	r2, #1
   1cf2e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   1cf32:	615a      	str	r2, [r3, #20]
   1cf34:	e7c2      	b.n	1cebc <__gethex+0x38c>
   1cf36:	692a      	ldr	r2, [r5, #16]
   1cf38:	4591      	cmp	r9, r2
   1cf3a:	da0b      	bge.n	1cf54 <__gethex+0x424>
   1cf3c:	2101      	movs	r1, #1
   1cf3e:	4628      	mov	r0, r5
   1cf40:	f7ff fdac 	bl	1ca9c <rshift>
   1cf44:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1cf48:	3401      	adds	r4, #1
   1cf4a:	429c      	cmp	r4, r3
   1cf4c:	f73f aedb 	bgt.w	1cd06 <__gethex+0x1d6>
   1cf50:	2701      	movs	r7, #1
   1cf52:	e7c7      	b.n	1cee4 <__gethex+0x3b4>
   1cf54:	f016 061f 	ands.w	r6, r6, #31
   1cf58:	d0fa      	beq.n	1cf50 <__gethex+0x420>
   1cf5a:	449a      	add	sl, r3
   1cf5c:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   1cf60:	f000 fa0e 	bl	1d380 <__hi0bits>
   1cf64:	f1c6 0620 	rsb	r6, r6, #32
   1cf68:	42b0      	cmp	r0, r6
   1cf6a:	dbe7      	blt.n	1cf3c <__gethex+0x40c>
   1cf6c:	e7f0      	b.n	1cf50 <__gethex+0x420>

0001cf6e <L_shift>:
L_shift():
   1cf6e:	f1c2 0208 	rsb	r2, r2, #8
   1cf72:	0092      	lsls	r2, r2, #2
   1cf74:	b570      	push	{r4, r5, r6, lr}
   1cf76:	f1c2 0620 	rsb	r6, r2, #32
   1cf7a:	6843      	ldr	r3, [r0, #4]
   1cf7c:	6804      	ldr	r4, [r0, #0]
   1cf7e:	fa03 f506 	lsl.w	r5, r3, r6
   1cf82:	432c      	orrs	r4, r5
   1cf84:	40d3      	lsrs	r3, r2
   1cf86:	6004      	str	r4, [r0, #0]
   1cf88:	f840 3f04 	str.w	r3, [r0, #4]!
   1cf8c:	4288      	cmp	r0, r1
   1cf8e:	d3f4      	bcc.n	1cf7a <L_shift+0xc>
   1cf90:	bd70      	pop	{r4, r5, r6, pc}

0001cf92 <__match>:
__match():
   1cf92:	b530      	push	{r4, r5, lr}
   1cf94:	6803      	ldr	r3, [r0, #0]
   1cf96:	f811 4b01 	ldrb.w	r4, [r1], #1
   1cf9a:	3301      	adds	r3, #1
   1cf9c:	b914      	cbnz	r4, 1cfa4 <__match+0x12>
   1cf9e:	6003      	str	r3, [r0, #0]
   1cfa0:	2001      	movs	r0, #1
   1cfa2:	bd30      	pop	{r4, r5, pc}
   1cfa4:	781a      	ldrb	r2, [r3, #0]
   1cfa6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   1cfaa:	2d19      	cmp	r5, #25
   1cfac:	bf98      	it	ls
   1cfae:	3220      	addls	r2, #32
   1cfb0:	42a2      	cmp	r2, r4
   1cfb2:	d0f0      	beq.n	1cf96 <__match+0x4>
   1cfb4:	2000      	movs	r0, #0
   1cfb6:	bd30      	pop	{r4, r5, pc}

0001cfb8 <__hexnan>:
__hexnan():
   1cfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfbc:	2500      	movs	r5, #0
   1cfbe:	680b      	ldr	r3, [r1, #0]
   1cfc0:	4682      	mov	sl, r0
   1cfc2:	115f      	asrs	r7, r3, #5
   1cfc4:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   1cfc8:	f013 031f 	ands.w	r3, r3, #31
   1cfcc:	bf18      	it	ne
   1cfce:	3704      	addne	r7, #4
   1cfd0:	1f3e      	subs	r6, r7, #4
   1cfd2:	4690      	mov	r8, r2
   1cfd4:	46b1      	mov	r9, r6
   1cfd6:	4634      	mov	r4, r6
   1cfd8:	46ab      	mov	fp, r5
   1cfda:	b087      	sub	sp, #28
   1cfdc:	6801      	ldr	r1, [r0, #0]
   1cfde:	9302      	str	r3, [sp, #8]
   1cfe0:	f847 5c04 	str.w	r5, [r7, #-4]
   1cfe4:	9501      	str	r5, [sp, #4]
   1cfe6:	784a      	ldrb	r2, [r1, #1]
   1cfe8:	1c4b      	adds	r3, r1, #1
   1cfea:	9303      	str	r3, [sp, #12]
   1cfec:	b342      	cbz	r2, 1d040 <__hexnan+0x88>
   1cfee:	4610      	mov	r0, r2
   1cff0:	9105      	str	r1, [sp, #20]
   1cff2:	9204      	str	r2, [sp, #16]
   1cff4:	f7ff fd87 	bl	1cb06 <__hexdig_fun>
   1cff8:	2800      	cmp	r0, #0
   1cffa:	d143      	bne.n	1d084 <__hexnan+0xcc>
   1cffc:	9a04      	ldr	r2, [sp, #16]
   1cffe:	9905      	ldr	r1, [sp, #20]
   1d000:	2a20      	cmp	r2, #32
   1d002:	d818      	bhi.n	1d036 <__hexnan+0x7e>
   1d004:	9b01      	ldr	r3, [sp, #4]
   1d006:	459b      	cmp	fp, r3
   1d008:	dd13      	ble.n	1d032 <__hexnan+0x7a>
   1d00a:	454c      	cmp	r4, r9
   1d00c:	d206      	bcs.n	1d01c <__hexnan+0x64>
   1d00e:	2d07      	cmp	r5, #7
   1d010:	dc04      	bgt.n	1d01c <__hexnan+0x64>
   1d012:	462a      	mov	r2, r5
   1d014:	4649      	mov	r1, r9
   1d016:	4620      	mov	r0, r4
   1d018:	f7ff ffa9 	bl	1cf6e <L_shift>
   1d01c:	4544      	cmp	r4, r8
   1d01e:	d944      	bls.n	1d0aa <__hexnan+0xf2>
   1d020:	2300      	movs	r3, #0
   1d022:	f1a4 0904 	sub.w	r9, r4, #4
   1d026:	f844 3c04 	str.w	r3, [r4, #-4]
   1d02a:	461d      	mov	r5, r3
   1d02c:	464c      	mov	r4, r9
   1d02e:	f8cd b004 	str.w	fp, [sp, #4]
   1d032:	9903      	ldr	r1, [sp, #12]
   1d034:	e7d7      	b.n	1cfe6 <__hexnan+0x2e>
   1d036:	2a29      	cmp	r2, #41	; 0x29
   1d038:	d14a      	bne.n	1d0d0 <__hexnan+0x118>
   1d03a:	3102      	adds	r1, #2
   1d03c:	f8ca 1000 	str.w	r1, [sl]
   1d040:	f1bb 0f00 	cmp.w	fp, #0
   1d044:	d044      	beq.n	1d0d0 <__hexnan+0x118>
   1d046:	454c      	cmp	r4, r9
   1d048:	d206      	bcs.n	1d058 <__hexnan+0xa0>
   1d04a:	2d07      	cmp	r5, #7
   1d04c:	dc04      	bgt.n	1d058 <__hexnan+0xa0>
   1d04e:	462a      	mov	r2, r5
   1d050:	4649      	mov	r1, r9
   1d052:	4620      	mov	r0, r4
   1d054:	f7ff ff8b 	bl	1cf6e <L_shift>
   1d058:	4544      	cmp	r4, r8
   1d05a:	d928      	bls.n	1d0ae <__hexnan+0xf6>
   1d05c:	4643      	mov	r3, r8
   1d05e:	f854 2b04 	ldr.w	r2, [r4], #4
   1d062:	42a6      	cmp	r6, r4
   1d064:	f843 2b04 	str.w	r2, [r3], #4
   1d068:	d2f9      	bcs.n	1d05e <__hexnan+0xa6>
   1d06a:	2200      	movs	r2, #0
   1d06c:	f843 2b04 	str.w	r2, [r3], #4
   1d070:	429e      	cmp	r6, r3
   1d072:	d2fb      	bcs.n	1d06c <__hexnan+0xb4>
   1d074:	6833      	ldr	r3, [r6, #0]
   1d076:	b91b      	cbnz	r3, 1d080 <__hexnan+0xc8>
   1d078:	4546      	cmp	r6, r8
   1d07a:	d127      	bne.n	1d0cc <__hexnan+0x114>
   1d07c:	2301      	movs	r3, #1
   1d07e:	6033      	str	r3, [r6, #0]
   1d080:	2005      	movs	r0, #5
   1d082:	e026      	b.n	1d0d2 <__hexnan+0x11a>
   1d084:	3501      	adds	r5, #1
   1d086:	2d08      	cmp	r5, #8
   1d088:	f10b 0b01 	add.w	fp, fp, #1
   1d08c:	dd06      	ble.n	1d09c <__hexnan+0xe4>
   1d08e:	4544      	cmp	r4, r8
   1d090:	d9cf      	bls.n	1d032 <__hexnan+0x7a>
   1d092:	2300      	movs	r3, #0
   1d094:	2501      	movs	r5, #1
   1d096:	f844 3c04 	str.w	r3, [r4, #-4]
   1d09a:	3c04      	subs	r4, #4
   1d09c:	6822      	ldr	r2, [r4, #0]
   1d09e:	f000 000f 	and.w	r0, r0, #15
   1d0a2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   1d0a6:	6020      	str	r0, [r4, #0]
   1d0a8:	e7c3      	b.n	1d032 <__hexnan+0x7a>
   1d0aa:	2508      	movs	r5, #8
   1d0ac:	e7c1      	b.n	1d032 <__hexnan+0x7a>
   1d0ae:	9b02      	ldr	r3, [sp, #8]
   1d0b0:	2b00      	cmp	r3, #0
   1d0b2:	d0df      	beq.n	1d074 <__hexnan+0xbc>
   1d0b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1d0b8:	f1c3 0320 	rsb	r3, r3, #32
   1d0bc:	fa22 f303 	lsr.w	r3, r2, r3
   1d0c0:	f857 2c04 	ldr.w	r2, [r7, #-4]
   1d0c4:	401a      	ands	r2, r3
   1d0c6:	f847 2c04 	str.w	r2, [r7, #-4]
   1d0ca:	e7d3      	b.n	1d074 <__hexnan+0xbc>
   1d0cc:	3e04      	subs	r6, #4
   1d0ce:	e7d1      	b.n	1d074 <__hexnan+0xbc>
   1d0d0:	2004      	movs	r0, #4
   1d0d2:	b007      	add	sp, #28
   1d0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d0d8 <_findenv_r>:
_findenv_r():
   1d0d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d0dc:	4606      	mov	r6, r0
   1d0de:	468a      	mov	sl, r1
   1d0e0:	4617      	mov	r7, r2
   1d0e2:	f001 fd3b 	bl	1eb5c <__env_lock>
   1d0e6:	4b1b      	ldr	r3, [pc, #108]	; (1d154 <_findenv_r+0x7c>)
   1d0e8:	f8d3 8000 	ldr.w	r8, [r3]
   1d0ec:	4699      	mov	r9, r3
   1d0ee:	f1b8 0f00 	cmp.w	r8, #0
   1d0f2:	d007      	beq.n	1d104 <_findenv_r+0x2c>
   1d0f4:	4654      	mov	r4, sl
   1d0f6:	4623      	mov	r3, r4
   1d0f8:	f813 2b01 	ldrb.w	r2, [r3], #1
   1d0fc:	b332      	cbz	r2, 1d14c <_findenv_r+0x74>
   1d0fe:	2a3d      	cmp	r2, #61	; 0x3d
   1d100:	461c      	mov	r4, r3
   1d102:	d1f8      	bne.n	1d0f6 <_findenv_r+0x1e>
   1d104:	4630      	mov	r0, r6
   1d106:	f001 fd2a 	bl	1eb5e <__env_unlock>
   1d10a:	2000      	movs	r0, #0
   1d10c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d110:	f108 0804 	add.w	r8, r8, #4
   1d114:	f8d8 0000 	ldr.w	r0, [r8]
   1d118:	2800      	cmp	r0, #0
   1d11a:	d0f3      	beq.n	1d104 <_findenv_r+0x2c>
   1d11c:	4622      	mov	r2, r4
   1d11e:	4651      	mov	r1, sl
   1d120:	f7fd fbcd 	bl	1a8be <strncmp>
   1d124:	2800      	cmp	r0, #0
   1d126:	d1f3      	bne.n	1d110 <_findenv_r+0x38>
   1d128:	f8d8 3000 	ldr.w	r3, [r8]
   1d12c:	191d      	adds	r5, r3, r4
   1d12e:	5d1b      	ldrb	r3, [r3, r4]
   1d130:	2b3d      	cmp	r3, #61	; 0x3d
   1d132:	d1ed      	bne.n	1d110 <_findenv_r+0x38>
   1d134:	f8d9 3000 	ldr.w	r3, [r9]
   1d138:	4630      	mov	r0, r6
   1d13a:	eba8 0303 	sub.w	r3, r8, r3
   1d13e:	109b      	asrs	r3, r3, #2
   1d140:	603b      	str	r3, [r7, #0]
   1d142:	f001 fd0c 	bl	1eb5e <__env_unlock>
   1d146:	1c68      	adds	r0, r5, #1
   1d148:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d14c:	eba4 040a 	sub.w	r4, r4, sl
   1d150:	e7e0      	b.n	1d114 <_findenv_r+0x3c>
   1d152:	bf00      	nop
   1d154:	2007c2f8 	.word	0x2007c2f8

0001d158 <_getenv_r>:
_getenv_r():
   1d158:	b507      	push	{r0, r1, r2, lr}
   1d15a:	aa01      	add	r2, sp, #4
   1d15c:	f7ff ffbc 	bl	1d0d8 <_findenv_r>
   1d160:	b003      	add	sp, #12
   1d162:	f85d fb04 	ldr.w	pc, [sp], #4
   1d166:	Address 0x000000000001d166 is out of bounds.


0001d168 <_gettimeofday_r>:
_gettimeofday_r():
   1d168:	b538      	push	{r3, r4, r5, lr}
   1d16a:	2300      	movs	r3, #0
   1d16c:	4c06      	ldr	r4, [pc, #24]	; (1d188 <_gettimeofday_r+0x20>)
   1d16e:	4605      	mov	r5, r0
   1d170:	4608      	mov	r0, r1
   1d172:	4611      	mov	r1, r2
   1d174:	6023      	str	r3, [r4, #0]
   1d176:	f7f7 fd3d 	bl	14bf4 <_gettimeofday>
   1d17a:	1c43      	adds	r3, r0, #1
   1d17c:	d102      	bne.n	1d184 <_gettimeofday_r+0x1c>
   1d17e:	6823      	ldr	r3, [r4, #0]
   1d180:	b103      	cbz	r3, 1d184 <_gettimeofday_r+0x1c>
   1d182:	602b      	str	r3, [r5, #0]
   1d184:	bd38      	pop	{r3, r4, r5, pc}
   1d186:	bf00      	nop
   1d188:	2007c7b0 	.word	0x2007c7b0

0001d18c <__gettzinfo>:
__gettzinfo():
   1d18c:	4800      	ldr	r0, [pc, #0]	; (1d190 <__gettzinfo+0x4>)
   1d18e:	4770      	bx	lr
   1d190:	2007c2b8 	.word	0x2007c2b8

0001d194 <_isatty_r>:
_isatty_r():
   1d194:	b538      	push	{r3, r4, r5, lr}
   1d196:	2300      	movs	r3, #0
   1d198:	4c05      	ldr	r4, [pc, #20]	; (1d1b0 <_isatty_r+0x1c>)
   1d19a:	4605      	mov	r5, r0
   1d19c:	4608      	mov	r0, r1
   1d19e:	6023      	str	r3, [r4, #0]
   1d1a0:	f7f7 ff06 	bl	14fb0 <_isatty>
   1d1a4:	1c43      	adds	r3, r0, #1
   1d1a6:	d102      	bne.n	1d1ae <_isatty_r+0x1a>
   1d1a8:	6823      	ldr	r3, [r4, #0]
   1d1aa:	b103      	cbz	r3, 1d1ae <_isatty_r+0x1a>
   1d1ac:	602b      	str	r3, [r5, #0]
   1d1ae:	bd38      	pop	{r3, r4, r5, pc}
   1d1b0:	2007c7b0 	.word	0x2007c7b0

0001d1b4 <__localeconv_l>:
__localeconv_l():
   1d1b4:	30f0      	adds	r0, #240	; 0xf0
   1d1b6:	4770      	bx	lr

0001d1b8 <_localeconv_r>:
_localeconv_r():
   1d1b8:	4b04      	ldr	r3, [pc, #16]	; (1d1cc <_localeconv_r+0x14>)
   1d1ba:	681b      	ldr	r3, [r3, #0]
   1d1bc:	6a18      	ldr	r0, [r3, #32]
   1d1be:	4b04      	ldr	r3, [pc, #16]	; (1d1d0 <_localeconv_r+0x18>)
   1d1c0:	2800      	cmp	r0, #0
   1d1c2:	bf08      	it	eq
   1d1c4:	4618      	moveq	r0, r3
   1d1c6:	30f0      	adds	r0, #240	; 0xf0
   1d1c8:	4770      	bx	lr
   1d1ca:	bf00      	nop
   1d1cc:	2007c0e0 	.word	0x2007c0e0
   1d1d0:	2007c144 	.word	0x2007c144

0001d1d4 <_lseek_r>:
_lseek_r():
   1d1d4:	b538      	push	{r3, r4, r5, lr}
   1d1d6:	4605      	mov	r5, r0
   1d1d8:	4608      	mov	r0, r1
   1d1da:	4611      	mov	r1, r2
   1d1dc:	2200      	movs	r2, #0
   1d1de:	4c05      	ldr	r4, [pc, #20]	; (1d1f4 <_lseek_r+0x20>)
   1d1e0:	6022      	str	r2, [r4, #0]
   1d1e2:	461a      	mov	r2, r3
   1d1e4:	f7f7 fe30 	bl	14e48 <_lseek>
   1d1e8:	1c43      	adds	r3, r0, #1
   1d1ea:	d102      	bne.n	1d1f2 <_lseek_r+0x1e>
   1d1ec:	6823      	ldr	r3, [r4, #0]
   1d1ee:	b103      	cbz	r3, 1d1f2 <_lseek_r+0x1e>
   1d1f0:	602b      	str	r3, [r5, #0]
   1d1f2:	bd38      	pop	{r3, r4, r5, pc}
   1d1f4:	2007c7b0 	.word	0x2007c7b0

0001d1f8 <_Balloc>:
_Balloc():
   1d1f8:	b570      	push	{r4, r5, r6, lr}
   1d1fa:	6a45      	ldr	r5, [r0, #36]	; 0x24
   1d1fc:	4604      	mov	r4, r0
   1d1fe:	460e      	mov	r6, r1
   1d200:	b93d      	cbnz	r5, 1d212 <_Balloc+0x1a>
   1d202:	2010      	movs	r0, #16
   1d204:	f7fb fe1e 	bl	18e44 <malloc>
   1d208:	6260      	str	r0, [r4, #36]	; 0x24
   1d20a:	6045      	str	r5, [r0, #4]
   1d20c:	6085      	str	r5, [r0, #8]
   1d20e:	6005      	str	r5, [r0, #0]
   1d210:	60c5      	str	r5, [r0, #12]
   1d212:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1d214:	68eb      	ldr	r3, [r5, #12]
   1d216:	b183      	cbz	r3, 1d23a <_Balloc+0x42>
   1d218:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1d21a:	68db      	ldr	r3, [r3, #12]
   1d21c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   1d220:	b9b8      	cbnz	r0, 1d252 <_Balloc+0x5a>
   1d222:	2101      	movs	r1, #1
   1d224:	fa01 f506 	lsl.w	r5, r1, r6
   1d228:	1d6a      	adds	r2, r5, #5
   1d22a:	0092      	lsls	r2, r2, #2
   1d22c:	4620      	mov	r0, r4
   1d22e:	f7fc f8db 	bl	193e8 <_calloc_r>
   1d232:	b160      	cbz	r0, 1d24e <_Balloc+0x56>
   1d234:	6046      	str	r6, [r0, #4]
   1d236:	6085      	str	r5, [r0, #8]
   1d238:	e00e      	b.n	1d258 <_Balloc+0x60>
   1d23a:	2221      	movs	r2, #33	; 0x21
   1d23c:	2104      	movs	r1, #4
   1d23e:	4620      	mov	r0, r4
   1d240:	f7fc f8d2 	bl	193e8 <_calloc_r>
   1d244:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1d246:	60e8      	str	r0, [r5, #12]
   1d248:	68db      	ldr	r3, [r3, #12]
   1d24a:	2b00      	cmp	r3, #0
   1d24c:	d1e4      	bne.n	1d218 <_Balloc+0x20>
   1d24e:	2000      	movs	r0, #0
   1d250:	bd70      	pop	{r4, r5, r6, pc}
   1d252:	6802      	ldr	r2, [r0, #0]
   1d254:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   1d258:	2300      	movs	r3, #0
   1d25a:	6103      	str	r3, [r0, #16]
   1d25c:	60c3      	str	r3, [r0, #12]
   1d25e:	bd70      	pop	{r4, r5, r6, pc}

0001d260 <_Bfree>:
_Bfree():
   1d260:	b570      	push	{r4, r5, r6, lr}
   1d262:	6a44      	ldr	r4, [r0, #36]	; 0x24
   1d264:	4606      	mov	r6, r0
   1d266:	460d      	mov	r5, r1
   1d268:	b93c      	cbnz	r4, 1d27a <_Bfree+0x1a>
   1d26a:	2010      	movs	r0, #16
   1d26c:	f7fb fdea 	bl	18e44 <malloc>
   1d270:	6270      	str	r0, [r6, #36]	; 0x24
   1d272:	6044      	str	r4, [r0, #4]
   1d274:	6084      	str	r4, [r0, #8]
   1d276:	6004      	str	r4, [r0, #0]
   1d278:	60c4      	str	r4, [r0, #12]
   1d27a:	b13d      	cbz	r5, 1d28c <_Bfree+0x2c>
   1d27c:	6a73      	ldr	r3, [r6, #36]	; 0x24
   1d27e:	686a      	ldr	r2, [r5, #4]
   1d280:	68db      	ldr	r3, [r3, #12]
   1d282:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   1d286:	6029      	str	r1, [r5, #0]
   1d288:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   1d28c:	bd70      	pop	{r4, r5, r6, pc}

0001d28e <__multadd>:
__multadd():
   1d28e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d292:	461f      	mov	r7, r3
   1d294:	4606      	mov	r6, r0
   1d296:	460c      	mov	r4, r1
   1d298:	2300      	movs	r3, #0
   1d29a:	690d      	ldr	r5, [r1, #16]
   1d29c:	f101 0e14 	add.w	lr, r1, #20
   1d2a0:	f8de 0000 	ldr.w	r0, [lr]
   1d2a4:	3301      	adds	r3, #1
   1d2a6:	b281      	uxth	r1, r0
   1d2a8:	fb02 7101 	mla	r1, r2, r1, r7
   1d2ac:	0c00      	lsrs	r0, r0, #16
   1d2ae:	0c0f      	lsrs	r7, r1, #16
   1d2b0:	fb02 7000 	mla	r0, r2, r0, r7
   1d2b4:	b289      	uxth	r1, r1
   1d2b6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   1d2ba:	429d      	cmp	r5, r3
   1d2bc:	ea4f 4710 	mov.w	r7, r0, lsr #16
   1d2c0:	f84e 1b04 	str.w	r1, [lr], #4
   1d2c4:	dcec      	bgt.n	1d2a0 <__multadd+0x12>
   1d2c6:	b1d7      	cbz	r7, 1d2fe <__multadd+0x70>
   1d2c8:	68a3      	ldr	r3, [r4, #8]
   1d2ca:	429d      	cmp	r5, r3
   1d2cc:	db12      	blt.n	1d2f4 <__multadd+0x66>
   1d2ce:	6861      	ldr	r1, [r4, #4]
   1d2d0:	4630      	mov	r0, r6
   1d2d2:	3101      	adds	r1, #1
   1d2d4:	f7ff ff90 	bl	1d1f8 <_Balloc>
   1d2d8:	4680      	mov	r8, r0
   1d2da:	6922      	ldr	r2, [r4, #16]
   1d2dc:	f104 010c 	add.w	r1, r4, #12
   1d2e0:	3202      	adds	r2, #2
   1d2e2:	0092      	lsls	r2, r2, #2
   1d2e4:	300c      	adds	r0, #12
   1d2e6:	f7fb fdec 	bl	18ec2 <memcpy>
   1d2ea:	4621      	mov	r1, r4
   1d2ec:	4630      	mov	r0, r6
   1d2ee:	f7ff ffb7 	bl	1d260 <_Bfree>
   1d2f2:	4644      	mov	r4, r8
   1d2f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   1d2f8:	3501      	adds	r5, #1
   1d2fa:	615f      	str	r7, [r3, #20]
   1d2fc:	6125      	str	r5, [r4, #16]
   1d2fe:	4620      	mov	r0, r4
   1d300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d304 <__s2b>:
__s2b():
   1d304:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d308:	4615      	mov	r5, r2
   1d30a:	2209      	movs	r2, #9
   1d30c:	461f      	mov	r7, r3
   1d30e:	3308      	adds	r3, #8
   1d310:	460c      	mov	r4, r1
   1d312:	fb93 f3f2 	sdiv	r3, r3, r2
   1d316:	4606      	mov	r6, r0
   1d318:	2201      	movs	r2, #1
   1d31a:	2100      	movs	r1, #0
   1d31c:	429a      	cmp	r2, r3
   1d31e:	db20      	blt.n	1d362 <__s2b+0x5e>
   1d320:	4630      	mov	r0, r6
   1d322:	f7ff ff69 	bl	1d1f8 <_Balloc>
   1d326:	9b08      	ldr	r3, [sp, #32]
   1d328:	2d09      	cmp	r5, #9
   1d32a:	6143      	str	r3, [r0, #20]
   1d32c:	f04f 0301 	mov.w	r3, #1
   1d330:	6103      	str	r3, [r0, #16]
   1d332:	dd19      	ble.n	1d368 <__s2b+0x64>
   1d334:	f104 0909 	add.w	r9, r4, #9
   1d338:	46c8      	mov	r8, r9
   1d33a:	442c      	add	r4, r5
   1d33c:	f818 3b01 	ldrb.w	r3, [r8], #1
   1d340:	4601      	mov	r1, r0
   1d342:	3b30      	subs	r3, #48	; 0x30
   1d344:	220a      	movs	r2, #10
   1d346:	4630      	mov	r0, r6
   1d348:	f7ff ffa1 	bl	1d28e <__multadd>
   1d34c:	45a0      	cmp	r8, r4
   1d34e:	d1f5      	bne.n	1d33c <__s2b+0x38>
   1d350:	f1a5 0408 	sub.w	r4, r5, #8
   1d354:	444c      	add	r4, r9
   1d356:	1b2d      	subs	r5, r5, r4
   1d358:	1963      	adds	r3, r4, r5
   1d35a:	42bb      	cmp	r3, r7
   1d35c:	db07      	blt.n	1d36e <__s2b+0x6a>
   1d35e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d362:	0052      	lsls	r2, r2, #1
   1d364:	3101      	adds	r1, #1
   1d366:	e7d9      	b.n	1d31c <__s2b+0x18>
   1d368:	340a      	adds	r4, #10
   1d36a:	2509      	movs	r5, #9
   1d36c:	e7f3      	b.n	1d356 <__s2b+0x52>
   1d36e:	f814 3b01 	ldrb.w	r3, [r4], #1
   1d372:	4601      	mov	r1, r0
   1d374:	3b30      	subs	r3, #48	; 0x30
   1d376:	220a      	movs	r2, #10
   1d378:	4630      	mov	r0, r6
   1d37a:	f7ff ff88 	bl	1d28e <__multadd>
   1d37e:	e7eb      	b.n	1d358 <__s2b+0x54>

0001d380 <__hi0bits>:
__hi0bits():
   1d380:	0c02      	lsrs	r2, r0, #16
   1d382:	0412      	lsls	r2, r2, #16
   1d384:	4603      	mov	r3, r0
   1d386:	b9b2      	cbnz	r2, 1d3b6 <__hi0bits+0x36>
   1d388:	0403      	lsls	r3, r0, #16
   1d38a:	2010      	movs	r0, #16
   1d38c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   1d390:	bf04      	itt	eq
   1d392:	021b      	lsleq	r3, r3, #8
   1d394:	3008      	addeq	r0, #8
   1d396:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   1d39a:	bf04      	itt	eq
   1d39c:	011b      	lsleq	r3, r3, #4
   1d39e:	3004      	addeq	r0, #4
   1d3a0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   1d3a4:	bf04      	itt	eq
   1d3a6:	009b      	lsleq	r3, r3, #2
   1d3a8:	3002      	addeq	r0, #2
   1d3aa:	2b00      	cmp	r3, #0
   1d3ac:	db06      	blt.n	1d3bc <__hi0bits+0x3c>
   1d3ae:	005b      	lsls	r3, r3, #1
   1d3b0:	d503      	bpl.n	1d3ba <__hi0bits+0x3a>
   1d3b2:	3001      	adds	r0, #1
   1d3b4:	4770      	bx	lr
   1d3b6:	2000      	movs	r0, #0
   1d3b8:	e7e8      	b.n	1d38c <__hi0bits+0xc>
   1d3ba:	2020      	movs	r0, #32
   1d3bc:	4770      	bx	lr

0001d3be <__lo0bits>:
__lo0bits():
   1d3be:	6803      	ldr	r3, [r0, #0]
   1d3c0:	4601      	mov	r1, r0
   1d3c2:	f013 0207 	ands.w	r2, r3, #7
   1d3c6:	d00b      	beq.n	1d3e0 <__lo0bits+0x22>
   1d3c8:	07da      	lsls	r2, r3, #31
   1d3ca:	d423      	bmi.n	1d414 <__lo0bits+0x56>
   1d3cc:	0798      	lsls	r0, r3, #30
   1d3ce:	bf49      	itett	mi
   1d3d0:	085b      	lsrmi	r3, r3, #1
   1d3d2:	089b      	lsrpl	r3, r3, #2
   1d3d4:	2001      	movmi	r0, #1
   1d3d6:	600b      	strmi	r3, [r1, #0]
   1d3d8:	bf5c      	itt	pl
   1d3da:	600b      	strpl	r3, [r1, #0]
   1d3dc:	2002      	movpl	r0, #2
   1d3de:	4770      	bx	lr
   1d3e0:	b298      	uxth	r0, r3
   1d3e2:	b9a8      	cbnz	r0, 1d410 <__lo0bits+0x52>
   1d3e4:	2010      	movs	r0, #16
   1d3e6:	0c1b      	lsrs	r3, r3, #16
   1d3e8:	f013 0fff 	tst.w	r3, #255	; 0xff
   1d3ec:	bf04      	itt	eq
   1d3ee:	0a1b      	lsreq	r3, r3, #8
   1d3f0:	3008      	addeq	r0, #8
   1d3f2:	071a      	lsls	r2, r3, #28
   1d3f4:	bf04      	itt	eq
   1d3f6:	091b      	lsreq	r3, r3, #4
   1d3f8:	3004      	addeq	r0, #4
   1d3fa:	079a      	lsls	r2, r3, #30
   1d3fc:	bf04      	itt	eq
   1d3fe:	089b      	lsreq	r3, r3, #2
   1d400:	3002      	addeq	r0, #2
   1d402:	07da      	lsls	r2, r3, #31
   1d404:	d402      	bmi.n	1d40c <__lo0bits+0x4e>
   1d406:	085b      	lsrs	r3, r3, #1
   1d408:	d006      	beq.n	1d418 <__lo0bits+0x5a>
   1d40a:	3001      	adds	r0, #1
   1d40c:	600b      	str	r3, [r1, #0]
   1d40e:	4770      	bx	lr
   1d410:	4610      	mov	r0, r2
   1d412:	e7e9      	b.n	1d3e8 <__lo0bits+0x2a>
   1d414:	2000      	movs	r0, #0
   1d416:	4770      	bx	lr
   1d418:	2020      	movs	r0, #32
   1d41a:	4770      	bx	lr

0001d41c <__i2b>:
__i2b():
   1d41c:	b510      	push	{r4, lr}
   1d41e:	460c      	mov	r4, r1
   1d420:	2101      	movs	r1, #1
   1d422:	f7ff fee9 	bl	1d1f8 <_Balloc>
   1d426:	2201      	movs	r2, #1
   1d428:	6144      	str	r4, [r0, #20]
   1d42a:	6102      	str	r2, [r0, #16]
   1d42c:	bd10      	pop	{r4, pc}

0001d42e <__multiply>:
__multiply():
   1d42e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d432:	4614      	mov	r4, r2
   1d434:	690a      	ldr	r2, [r1, #16]
   1d436:	6923      	ldr	r3, [r4, #16]
   1d438:	4689      	mov	r9, r1
   1d43a:	429a      	cmp	r2, r3
   1d43c:	bfbe      	ittt	lt
   1d43e:	460b      	movlt	r3, r1
   1d440:	46a1      	movlt	r9, r4
   1d442:	461c      	movlt	r4, r3
   1d444:	f8d9 7010 	ldr.w	r7, [r9, #16]
   1d448:	f8d4 a010 	ldr.w	sl, [r4, #16]
   1d44c:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1d450:	f8d9 1004 	ldr.w	r1, [r9, #4]
   1d454:	eb07 060a 	add.w	r6, r7, sl
   1d458:	429e      	cmp	r6, r3
   1d45a:	bfc8      	it	gt
   1d45c:	3101      	addgt	r1, #1
   1d45e:	f7ff fecb 	bl	1d1f8 <_Balloc>
   1d462:	f100 0514 	add.w	r5, r0, #20
   1d466:	462b      	mov	r3, r5
   1d468:	2200      	movs	r2, #0
   1d46a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   1d46e:	4543      	cmp	r3, r8
   1d470:	d316      	bcc.n	1d4a0 <__multiply+0x72>
   1d472:	f104 0214 	add.w	r2, r4, #20
   1d476:	f109 0114 	add.w	r1, r9, #20
   1d47a:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   1d47e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   1d482:	9301      	str	r3, [sp, #4]
   1d484:	9c01      	ldr	r4, [sp, #4]
   1d486:	4613      	mov	r3, r2
   1d488:	4294      	cmp	r4, r2
   1d48a:	d80c      	bhi.n	1d4a6 <__multiply+0x78>
   1d48c:	2e00      	cmp	r6, #0
   1d48e:	dd03      	ble.n	1d498 <__multiply+0x6a>
   1d490:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   1d494:	2b00      	cmp	r3, #0
   1d496:	d054      	beq.n	1d542 <__multiply+0x114>
   1d498:	6106      	str	r6, [r0, #16]
   1d49a:	b003      	add	sp, #12
   1d49c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4a0:	f843 2b04 	str.w	r2, [r3], #4
   1d4a4:	e7e3      	b.n	1d46e <__multiply+0x40>
   1d4a6:	f8b3 a000 	ldrh.w	sl, [r3]
   1d4aa:	3204      	adds	r2, #4
   1d4ac:	f1ba 0f00 	cmp.w	sl, #0
   1d4b0:	d020      	beq.n	1d4f4 <__multiply+0xc6>
   1d4b2:	46ae      	mov	lr, r5
   1d4b4:	4689      	mov	r9, r1
   1d4b6:	f04f 0c00 	mov.w	ip, #0
   1d4ba:	f859 4b04 	ldr.w	r4, [r9], #4
   1d4be:	f8be b000 	ldrh.w	fp, [lr]
   1d4c2:	b2a3      	uxth	r3, r4
   1d4c4:	fb0a b303 	mla	r3, sl, r3, fp
   1d4c8:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   1d4cc:	f8de 4000 	ldr.w	r4, [lr]
   1d4d0:	4463      	add	r3, ip
   1d4d2:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1d4d6:	fb0a c40b 	mla	r4, sl, fp, ip
   1d4da:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   1d4de:	b29b      	uxth	r3, r3
   1d4e0:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1d4e4:	454f      	cmp	r7, r9
   1d4e6:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1d4ea:	f84e 3b04 	str.w	r3, [lr], #4
   1d4ee:	d8e4      	bhi.n	1d4ba <__multiply+0x8c>
   1d4f0:	f8ce c000 	str.w	ip, [lr]
   1d4f4:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   1d4f8:	f1b9 0f00 	cmp.w	r9, #0
   1d4fc:	d01f      	beq.n	1d53e <__multiply+0x110>
   1d4fe:	46ae      	mov	lr, r5
   1d500:	468c      	mov	ip, r1
   1d502:	f04f 0a00 	mov.w	sl, #0
   1d506:	682b      	ldr	r3, [r5, #0]
   1d508:	f8bc 4000 	ldrh.w	r4, [ip]
   1d50c:	f8be b002 	ldrh.w	fp, [lr, #2]
   1d510:	b29b      	uxth	r3, r3
   1d512:	fb09 b404 	mla	r4, r9, r4, fp
   1d516:	44a2      	add	sl, r4
   1d518:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   1d51c:	f84e 3b04 	str.w	r3, [lr], #4
   1d520:	f85c 3b04 	ldr.w	r3, [ip], #4
   1d524:	f8be 4000 	ldrh.w	r4, [lr]
   1d528:	0c1b      	lsrs	r3, r3, #16
   1d52a:	fb09 4303 	mla	r3, r9, r3, r4
   1d52e:	4567      	cmp	r7, ip
   1d530:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   1d534:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1d538:	d8e6      	bhi.n	1d508 <__multiply+0xda>
   1d53a:	f8ce 3000 	str.w	r3, [lr]
   1d53e:	3504      	adds	r5, #4
   1d540:	e7a0      	b.n	1d484 <__multiply+0x56>
   1d542:	3e01      	subs	r6, #1
   1d544:	e7a2      	b.n	1d48c <__multiply+0x5e>
   1d546:	Address 0x000000000001d546 is out of bounds.


0001d548 <__pow5mult>:
__pow5mult():
   1d548:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d54c:	4615      	mov	r5, r2
   1d54e:	f012 0203 	ands.w	r2, r2, #3
   1d552:	4606      	mov	r6, r0
   1d554:	460f      	mov	r7, r1
   1d556:	d007      	beq.n	1d568 <__pow5mult+0x20>
   1d558:	4c21      	ldr	r4, [pc, #132]	; (1d5e0 <__pow5mult+0x98>)
   1d55a:	3a01      	subs	r2, #1
   1d55c:	2300      	movs	r3, #0
   1d55e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   1d562:	f7ff fe94 	bl	1d28e <__multadd>
   1d566:	4607      	mov	r7, r0
   1d568:	10ad      	asrs	r5, r5, #2
   1d56a:	d035      	beq.n	1d5d8 <__pow5mult+0x90>
   1d56c:	6a74      	ldr	r4, [r6, #36]	; 0x24
   1d56e:	b93c      	cbnz	r4, 1d580 <__pow5mult+0x38>
   1d570:	2010      	movs	r0, #16
   1d572:	f7fb fc67 	bl	18e44 <malloc>
   1d576:	6270      	str	r0, [r6, #36]	; 0x24
   1d578:	6044      	str	r4, [r0, #4]
   1d57a:	6084      	str	r4, [r0, #8]
   1d57c:	6004      	str	r4, [r0, #0]
   1d57e:	60c4      	str	r4, [r0, #12]
   1d580:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   1d584:	f8d8 4008 	ldr.w	r4, [r8, #8]
   1d588:	b94c      	cbnz	r4, 1d59e <__pow5mult+0x56>
   1d58a:	f240 2171 	movw	r1, #625	; 0x271
   1d58e:	4630      	mov	r0, r6
   1d590:	f7ff ff44 	bl	1d41c <__i2b>
   1d594:	2300      	movs	r3, #0
   1d596:	4604      	mov	r4, r0
   1d598:	f8c8 0008 	str.w	r0, [r8, #8]
   1d59c:	6003      	str	r3, [r0, #0]
   1d59e:	f04f 0800 	mov.w	r8, #0
   1d5a2:	07eb      	lsls	r3, r5, #31
   1d5a4:	d50a      	bpl.n	1d5bc <__pow5mult+0x74>
   1d5a6:	4639      	mov	r1, r7
   1d5a8:	4622      	mov	r2, r4
   1d5aa:	4630      	mov	r0, r6
   1d5ac:	f7ff ff3f 	bl	1d42e <__multiply>
   1d5b0:	4681      	mov	r9, r0
   1d5b2:	4639      	mov	r1, r7
   1d5b4:	4630      	mov	r0, r6
   1d5b6:	f7ff fe53 	bl	1d260 <_Bfree>
   1d5ba:	464f      	mov	r7, r9
   1d5bc:	106d      	asrs	r5, r5, #1
   1d5be:	d00b      	beq.n	1d5d8 <__pow5mult+0x90>
   1d5c0:	6820      	ldr	r0, [r4, #0]
   1d5c2:	b938      	cbnz	r0, 1d5d4 <__pow5mult+0x8c>
   1d5c4:	4622      	mov	r2, r4
   1d5c6:	4621      	mov	r1, r4
   1d5c8:	4630      	mov	r0, r6
   1d5ca:	f7ff ff30 	bl	1d42e <__multiply>
   1d5ce:	6020      	str	r0, [r4, #0]
   1d5d0:	f8c0 8000 	str.w	r8, [r0]
   1d5d4:	4604      	mov	r4, r0
   1d5d6:	e7e4      	b.n	1d5a2 <__pow5mult+0x5a>
   1d5d8:	4638      	mov	r0, r7
   1d5da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d5de:	bf00      	nop
   1d5e0:	00020620 	.word	0x00020620

0001d5e4 <__lshift>:
__lshift():
   1d5e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d5e8:	460c      	mov	r4, r1
   1d5ea:	4607      	mov	r7, r0
   1d5ec:	4616      	mov	r6, r2
   1d5ee:	6923      	ldr	r3, [r4, #16]
   1d5f0:	ea4f 1a62 	mov.w	sl, r2, asr #5
   1d5f4:	eb0a 0903 	add.w	r9, sl, r3
   1d5f8:	6849      	ldr	r1, [r1, #4]
   1d5fa:	68a3      	ldr	r3, [r4, #8]
   1d5fc:	f109 0501 	add.w	r5, r9, #1
   1d600:	42ab      	cmp	r3, r5
   1d602:	db31      	blt.n	1d668 <__lshift+0x84>
   1d604:	4638      	mov	r0, r7
   1d606:	f7ff fdf7 	bl	1d1f8 <_Balloc>
   1d60a:	2200      	movs	r2, #0
   1d60c:	4680      	mov	r8, r0
   1d60e:	4611      	mov	r1, r2
   1d610:	f100 0314 	add.w	r3, r0, #20
   1d614:	4552      	cmp	r2, sl
   1d616:	db2a      	blt.n	1d66e <__lshift+0x8a>
   1d618:	6920      	ldr	r0, [r4, #16]
   1d61a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   1d61e:	f104 0114 	add.w	r1, r4, #20
   1d622:	f016 021f 	ands.w	r2, r6, #31
   1d626:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   1d62a:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   1d62e:	d022      	beq.n	1d676 <__lshift+0x92>
   1d630:	2000      	movs	r0, #0
   1d632:	f1c2 0c20 	rsb	ip, r2, #32
   1d636:	680e      	ldr	r6, [r1, #0]
   1d638:	4096      	lsls	r6, r2
   1d63a:	4330      	orrs	r0, r6
   1d63c:	f843 0b04 	str.w	r0, [r3], #4
   1d640:	f851 0b04 	ldr.w	r0, [r1], #4
   1d644:	458e      	cmp	lr, r1
   1d646:	fa20 f00c 	lsr.w	r0, r0, ip
   1d64a:	d8f4      	bhi.n	1d636 <__lshift+0x52>
   1d64c:	6018      	str	r0, [r3, #0]
   1d64e:	b108      	cbz	r0, 1d654 <__lshift+0x70>
   1d650:	f109 0502 	add.w	r5, r9, #2
   1d654:	3d01      	subs	r5, #1
   1d656:	4638      	mov	r0, r7
   1d658:	f8c8 5010 	str.w	r5, [r8, #16]
   1d65c:	4621      	mov	r1, r4
   1d65e:	f7ff fdff 	bl	1d260 <_Bfree>
   1d662:	4640      	mov	r0, r8
   1d664:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d668:	3101      	adds	r1, #1
   1d66a:	005b      	lsls	r3, r3, #1
   1d66c:	e7c8      	b.n	1d600 <__lshift+0x1c>
   1d66e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   1d672:	3201      	adds	r2, #1
   1d674:	e7ce      	b.n	1d614 <__lshift+0x30>
   1d676:	3b04      	subs	r3, #4
   1d678:	f851 2b04 	ldr.w	r2, [r1], #4
   1d67c:	458e      	cmp	lr, r1
   1d67e:	f843 2f04 	str.w	r2, [r3, #4]!
   1d682:	d8f9      	bhi.n	1d678 <__lshift+0x94>
   1d684:	e7e6      	b.n	1d654 <__lshift+0x70>

0001d686 <__mcmp>:
__mcmp():
   1d686:	6903      	ldr	r3, [r0, #16]
   1d688:	690a      	ldr	r2, [r1, #16]
   1d68a:	b530      	push	{r4, r5, lr}
   1d68c:	1a9b      	subs	r3, r3, r2
   1d68e:	d10c      	bne.n	1d6aa <__mcmp+0x24>
   1d690:	0092      	lsls	r2, r2, #2
   1d692:	3014      	adds	r0, #20
   1d694:	3114      	adds	r1, #20
   1d696:	1884      	adds	r4, r0, r2
   1d698:	4411      	add	r1, r2
   1d69a:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   1d69e:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   1d6a2:	4295      	cmp	r5, r2
   1d6a4:	d003      	beq.n	1d6ae <__mcmp+0x28>
   1d6a6:	d305      	bcc.n	1d6b4 <__mcmp+0x2e>
   1d6a8:	2301      	movs	r3, #1
   1d6aa:	4618      	mov	r0, r3
   1d6ac:	bd30      	pop	{r4, r5, pc}
   1d6ae:	42a0      	cmp	r0, r4
   1d6b0:	d3f3      	bcc.n	1d69a <__mcmp+0x14>
   1d6b2:	e7fa      	b.n	1d6aa <__mcmp+0x24>
   1d6b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d6b8:	e7f7      	b.n	1d6aa <__mcmp+0x24>

0001d6ba <__mdiff>:
__mdiff():
   1d6ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d6be:	460d      	mov	r5, r1
   1d6c0:	4607      	mov	r7, r0
   1d6c2:	4611      	mov	r1, r2
   1d6c4:	4628      	mov	r0, r5
   1d6c6:	4614      	mov	r4, r2
   1d6c8:	f7ff ffdd 	bl	1d686 <__mcmp>
   1d6cc:	1e06      	subs	r6, r0, #0
   1d6ce:	d108      	bne.n	1d6e2 <__mdiff+0x28>
   1d6d0:	4631      	mov	r1, r6
   1d6d2:	4638      	mov	r0, r7
   1d6d4:	f7ff fd90 	bl	1d1f8 <_Balloc>
   1d6d8:	2301      	movs	r3, #1
   1d6da:	6146      	str	r6, [r0, #20]
   1d6dc:	6103      	str	r3, [r0, #16]
   1d6de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d6e2:	bfa4      	itt	ge
   1d6e4:	4623      	movge	r3, r4
   1d6e6:	462c      	movge	r4, r5
   1d6e8:	4638      	mov	r0, r7
   1d6ea:	6861      	ldr	r1, [r4, #4]
   1d6ec:	bfa6      	itte	ge
   1d6ee:	461d      	movge	r5, r3
   1d6f0:	2600      	movge	r6, #0
   1d6f2:	2601      	movlt	r6, #1
   1d6f4:	f7ff fd80 	bl	1d1f8 <_Balloc>
   1d6f8:	f04f 0c00 	mov.w	ip, #0
   1d6fc:	60c6      	str	r6, [r0, #12]
   1d6fe:	692b      	ldr	r3, [r5, #16]
   1d700:	6926      	ldr	r6, [r4, #16]
   1d702:	f104 0214 	add.w	r2, r4, #20
   1d706:	f105 0914 	add.w	r9, r5, #20
   1d70a:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   1d70e:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   1d712:	f100 0114 	add.w	r1, r0, #20
   1d716:	f852 ab04 	ldr.w	sl, [r2], #4
   1d71a:	f859 5b04 	ldr.w	r5, [r9], #4
   1d71e:	fa1f f38a 	uxth.w	r3, sl
   1d722:	4463      	add	r3, ip
   1d724:	b2ac      	uxth	r4, r5
   1d726:	1b1b      	subs	r3, r3, r4
   1d728:	0c2c      	lsrs	r4, r5, #16
   1d72a:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   1d72e:	eb04 4423 	add.w	r4, r4, r3, asr #16
   1d732:	b29b      	uxth	r3, r3
   1d734:	ea4f 4c24 	mov.w	ip, r4, asr #16
   1d738:	45c8      	cmp	r8, r9
   1d73a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   1d73e:	4696      	mov	lr, r2
   1d740:	f841 4b04 	str.w	r4, [r1], #4
   1d744:	d8e7      	bhi.n	1d716 <__mdiff+0x5c>
   1d746:	45be      	cmp	lr, r7
   1d748:	d305      	bcc.n	1d756 <__mdiff+0x9c>
   1d74a:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   1d74e:	b18b      	cbz	r3, 1d774 <__mdiff+0xba>
   1d750:	6106      	str	r6, [r0, #16]
   1d752:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d756:	f85e 4b04 	ldr.w	r4, [lr], #4
   1d75a:	b2a2      	uxth	r2, r4
   1d75c:	4462      	add	r2, ip
   1d75e:	1413      	asrs	r3, r2, #16
   1d760:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   1d764:	b292      	uxth	r2, r2
   1d766:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   1d76a:	ea4f 4c23 	mov.w	ip, r3, asr #16
   1d76e:	f841 2b04 	str.w	r2, [r1], #4
   1d772:	e7e8      	b.n	1d746 <__mdiff+0x8c>
   1d774:	3e01      	subs	r6, #1
   1d776:	e7e8      	b.n	1d74a <__mdiff+0x90>

0001d778 <__ulp>:
__ulp():
   1d778:	4b10      	ldr	r3, [pc, #64]	; (1d7bc <__ulp+0x44>)
   1d77a:	400b      	ands	r3, r1
   1d77c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   1d780:	2b00      	cmp	r3, #0
   1d782:	dd02      	ble.n	1d78a <__ulp+0x12>
   1d784:	2000      	movs	r0, #0
   1d786:	4619      	mov	r1, r3
   1d788:	4770      	bx	lr
   1d78a:	425b      	negs	r3, r3
   1d78c:	151b      	asrs	r3, r3, #20
   1d78e:	2b13      	cmp	r3, #19
   1d790:	f04f 0000 	mov.w	r0, #0
   1d794:	f04f 0100 	mov.w	r1, #0
   1d798:	dc04      	bgt.n	1d7a4 <__ulp+0x2c>
   1d79a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   1d79e:	fa42 f103 	asr.w	r1, r2, r3
   1d7a2:	4770      	bx	lr
   1d7a4:	2201      	movs	r2, #1
   1d7a6:	3b14      	subs	r3, #20
   1d7a8:	2b1e      	cmp	r3, #30
   1d7aa:	bfce      	itee	gt
   1d7ac:	4613      	movgt	r3, r2
   1d7ae:	f1c3 031f 	rsble	r3, r3, #31
   1d7b2:	fa02 f303 	lslle.w	r3, r2, r3
   1d7b6:	4618      	mov	r0, r3
   1d7b8:	4770      	bx	lr
   1d7ba:	bf00      	nop
   1d7bc:	7ff00000 	.word	0x7ff00000

0001d7c0 <__b2d>:
__b2d():
   1d7c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d7c4:	6907      	ldr	r7, [r0, #16]
   1d7c6:	f100 0914 	add.w	r9, r0, #20
   1d7ca:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   1d7ce:	f857 6c04 	ldr.w	r6, [r7, #-4]
   1d7d2:	f1a7 0804 	sub.w	r8, r7, #4
   1d7d6:	4630      	mov	r0, r6
   1d7d8:	f7ff fdd2 	bl	1d380 <__hi0bits>
   1d7dc:	f1c0 0320 	rsb	r3, r0, #32
   1d7e0:	280a      	cmp	r0, #10
   1d7e2:	600b      	str	r3, [r1, #0]
   1d7e4:	491e      	ldr	r1, [pc, #120]	; (1d860 <__b2d+0xa0>)
   1d7e6:	dc17      	bgt.n	1d818 <__b2d+0x58>
   1d7e8:	45c1      	cmp	r9, r8
   1d7ea:	bf28      	it	cs
   1d7ec:	2200      	movcs	r2, #0
   1d7ee:	f1c0 0e0b 	rsb	lr, r0, #11
   1d7f2:	fa26 f30e 	lsr.w	r3, r6, lr
   1d7f6:	bf38      	it	cc
   1d7f8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1d7fc:	ea43 0501 	orr.w	r5, r3, r1
   1d800:	f100 0315 	add.w	r3, r0, #21
   1d804:	fa06 f303 	lsl.w	r3, r6, r3
   1d808:	fa22 f20e 	lsr.w	r2, r2, lr
   1d80c:	ea43 0402 	orr.w	r4, r3, r2
   1d810:	4620      	mov	r0, r4
   1d812:	4629      	mov	r1, r5
   1d814:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d818:	45c1      	cmp	r9, r8
   1d81a:	bf3a      	itte	cc
   1d81c:	f1a7 0808 	subcc.w	r8, r7, #8
   1d820:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1d824:	2200      	movcs	r2, #0
   1d826:	f1b0 030b 	subs.w	r3, r0, #11
   1d82a:	d015      	beq.n	1d858 <__b2d+0x98>
   1d82c:	409e      	lsls	r6, r3
   1d82e:	f1c3 0720 	rsb	r7, r3, #32
   1d832:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   1d836:	fa22 f107 	lsr.w	r1, r2, r7
   1d83a:	45c8      	cmp	r8, r9
   1d83c:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   1d840:	ea46 0501 	orr.w	r5, r6, r1
   1d844:	bf94      	ite	ls
   1d846:	2100      	movls	r1, #0
   1d848:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   1d84c:	fa02 f003 	lsl.w	r0, r2, r3
   1d850:	40f9      	lsrs	r1, r7
   1d852:	ea40 0401 	orr.w	r4, r0, r1
   1d856:	e7db      	b.n	1d810 <__b2d+0x50>
   1d858:	ea46 0501 	orr.w	r5, r6, r1
   1d85c:	4614      	mov	r4, r2
   1d85e:	e7d7      	b.n	1d810 <__b2d+0x50>
   1d860:	3ff00000 	.word	0x3ff00000

0001d864 <__d2b>:
__d2b():
   1d864:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1d868:	461c      	mov	r4, r3
   1d86a:	2101      	movs	r1, #1
   1d86c:	4690      	mov	r8, r2
   1d86e:	9e08      	ldr	r6, [sp, #32]
   1d870:	9d09      	ldr	r5, [sp, #36]	; 0x24
   1d872:	f7ff fcc1 	bl	1d1f8 <_Balloc>
   1d876:	f3c4 0213 	ubfx	r2, r4, #0, #20
   1d87a:	f3c4 540a 	ubfx	r4, r4, #20, #11
   1d87e:	4607      	mov	r7, r0
   1d880:	bb34      	cbnz	r4, 1d8d0 <__d2b+0x6c>
   1d882:	9201      	str	r2, [sp, #4]
   1d884:	f1b8 0f00 	cmp.w	r8, #0
   1d888:	d027      	beq.n	1d8da <__d2b+0x76>
   1d88a:	a802      	add	r0, sp, #8
   1d88c:	f840 8d08 	str.w	r8, [r0, #-8]!
   1d890:	f7ff fd95 	bl	1d3be <__lo0bits>
   1d894:	9900      	ldr	r1, [sp, #0]
   1d896:	b1f0      	cbz	r0, 1d8d6 <__d2b+0x72>
   1d898:	9a01      	ldr	r2, [sp, #4]
   1d89a:	f1c0 0320 	rsb	r3, r0, #32
   1d89e:	fa02 f303 	lsl.w	r3, r2, r3
   1d8a2:	430b      	orrs	r3, r1
   1d8a4:	40c2      	lsrs	r2, r0
   1d8a6:	617b      	str	r3, [r7, #20]
   1d8a8:	9201      	str	r2, [sp, #4]
   1d8aa:	9b01      	ldr	r3, [sp, #4]
   1d8ac:	2b00      	cmp	r3, #0
   1d8ae:	bf14      	ite	ne
   1d8b0:	2102      	movne	r1, #2
   1d8b2:	2101      	moveq	r1, #1
   1d8b4:	61bb      	str	r3, [r7, #24]
   1d8b6:	6139      	str	r1, [r7, #16]
   1d8b8:	b1c4      	cbz	r4, 1d8ec <__d2b+0x88>
   1d8ba:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   1d8be:	4404      	add	r4, r0
   1d8c0:	6034      	str	r4, [r6, #0]
   1d8c2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   1d8c6:	6028      	str	r0, [r5, #0]
   1d8c8:	4638      	mov	r0, r7
   1d8ca:	b002      	add	sp, #8
   1d8cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d8d0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   1d8d4:	e7d5      	b.n	1d882 <__d2b+0x1e>
   1d8d6:	6179      	str	r1, [r7, #20]
   1d8d8:	e7e7      	b.n	1d8aa <__d2b+0x46>
   1d8da:	a801      	add	r0, sp, #4
   1d8dc:	f7ff fd6f 	bl	1d3be <__lo0bits>
   1d8e0:	2101      	movs	r1, #1
   1d8e2:	9b01      	ldr	r3, [sp, #4]
   1d8e4:	6139      	str	r1, [r7, #16]
   1d8e6:	617b      	str	r3, [r7, #20]
   1d8e8:	3020      	adds	r0, #32
   1d8ea:	e7e5      	b.n	1d8b8 <__d2b+0x54>
   1d8ec:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   1d8f0:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   1d8f4:	6030      	str	r0, [r6, #0]
   1d8f6:	6918      	ldr	r0, [r3, #16]
   1d8f8:	f7ff fd42 	bl	1d380 <__hi0bits>
   1d8fc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   1d900:	e7e1      	b.n	1d8c6 <__d2b+0x62>

0001d902 <__ratio>:
__ratio():
   1d902:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   1d906:	4688      	mov	r8, r1
   1d908:	4669      	mov	r1, sp
   1d90a:	4681      	mov	r9, r0
   1d90c:	f7ff ff58 	bl	1d7c0 <__b2d>
   1d910:	460d      	mov	r5, r1
   1d912:	4604      	mov	r4, r0
   1d914:	a901      	add	r1, sp, #4
   1d916:	4640      	mov	r0, r8
   1d918:	f7ff ff52 	bl	1d7c0 <__b2d>
   1d91c:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1d920:	f8d8 2010 	ldr.w	r2, [r8, #16]
   1d924:	9e00      	ldr	r6, [sp, #0]
   1d926:	1a9a      	subs	r2, r3, r2
   1d928:	9b01      	ldr	r3, [sp, #4]
   1d92a:	1af3      	subs	r3, r6, r3
   1d92c:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1d930:	2b00      	cmp	r3, #0
   1d932:	bfd6      	itet	le
   1d934:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   1d938:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   1d93c:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   1d940:	4602      	mov	r2, r0
   1d942:	460b      	mov	r3, r1
   1d944:	4620      	mov	r0, r4
   1d946:	4629      	mov	r1, r5
   1d948:	f001 fa3e 	bl	1edc8 <__aeabi_ddiv>
   1d94c:	b002      	add	sp, #8
   1d94e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001d952 <__copybits>:
__copybits():
   1d952:	3901      	subs	r1, #1
   1d954:	b510      	push	{r4, lr}
   1d956:	1149      	asrs	r1, r1, #5
   1d958:	6914      	ldr	r4, [r2, #16]
   1d95a:	3101      	adds	r1, #1
   1d95c:	f102 0314 	add.w	r3, r2, #20
   1d960:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   1d964:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   1d968:	42a3      	cmp	r3, r4
   1d96a:	4602      	mov	r2, r0
   1d96c:	d303      	bcc.n	1d976 <__copybits+0x24>
   1d96e:	2300      	movs	r3, #0
   1d970:	428a      	cmp	r2, r1
   1d972:	d305      	bcc.n	1d980 <__copybits+0x2e>
   1d974:	bd10      	pop	{r4, pc}
   1d976:	f853 2b04 	ldr.w	r2, [r3], #4
   1d97a:	f840 2b04 	str.w	r2, [r0], #4
   1d97e:	e7f3      	b.n	1d968 <__copybits+0x16>
   1d980:	f842 3b04 	str.w	r3, [r2], #4
   1d984:	e7f4      	b.n	1d970 <__copybits+0x1e>

0001d986 <__any_on>:
__any_on():
   1d986:	f100 0214 	add.w	r2, r0, #20
   1d98a:	6900      	ldr	r0, [r0, #16]
   1d98c:	114b      	asrs	r3, r1, #5
   1d98e:	4298      	cmp	r0, r3
   1d990:	b510      	push	{r4, lr}
   1d992:	db11      	blt.n	1d9b8 <__any_on+0x32>
   1d994:	dd0a      	ble.n	1d9ac <__any_on+0x26>
   1d996:	f011 011f 	ands.w	r1, r1, #31
   1d99a:	d007      	beq.n	1d9ac <__any_on+0x26>
   1d99c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   1d9a0:	fa24 f001 	lsr.w	r0, r4, r1
   1d9a4:	fa00 f101 	lsl.w	r1, r0, r1
   1d9a8:	428c      	cmp	r4, r1
   1d9aa:	d10b      	bne.n	1d9c4 <__any_on+0x3e>
   1d9ac:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   1d9b0:	4293      	cmp	r3, r2
   1d9b2:	d803      	bhi.n	1d9bc <__any_on+0x36>
   1d9b4:	2000      	movs	r0, #0
   1d9b6:	bd10      	pop	{r4, pc}
   1d9b8:	4603      	mov	r3, r0
   1d9ba:	e7f7      	b.n	1d9ac <__any_on+0x26>
   1d9bc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   1d9c0:	2900      	cmp	r1, #0
   1d9c2:	d0f5      	beq.n	1d9b0 <__any_on+0x2a>
   1d9c4:	2001      	movs	r0, #1
   1d9c6:	bd10      	pop	{r4, pc}

0001d9c8 <_realloc_r>:
_realloc_r():
   1d9c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1d9ca:	4607      	mov	r7, r0
   1d9cc:	4614      	mov	r4, r2
   1d9ce:	460e      	mov	r6, r1
   1d9d0:	b921      	cbnz	r1, 1d9dc <_realloc_r+0x14>
   1d9d2:	4611      	mov	r1, r2
   1d9d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1d9d8:	f7fb bd92 	b.w	19500 <_malloc_r>
   1d9dc:	b922      	cbnz	r2, 1d9e8 <_realloc_r+0x20>
   1d9de:	f7fb fd11 	bl	19404 <_free_r>
   1d9e2:	4625      	mov	r5, r4
   1d9e4:	4628      	mov	r0, r5
   1d9e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1d9e8:	f001 f8ba 	bl	1eb60 <_malloc_usable_size_r>
   1d9ec:	4284      	cmp	r4, r0
   1d9ee:	d90f      	bls.n	1da10 <_realloc_r+0x48>
   1d9f0:	4621      	mov	r1, r4
   1d9f2:	4638      	mov	r0, r7
   1d9f4:	f7fb fd84 	bl	19500 <_malloc_r>
   1d9f8:	4605      	mov	r5, r0
   1d9fa:	2800      	cmp	r0, #0
   1d9fc:	d0f2      	beq.n	1d9e4 <_realloc_r+0x1c>
   1d9fe:	4631      	mov	r1, r6
   1da00:	4622      	mov	r2, r4
   1da02:	f7fb fa5e 	bl	18ec2 <memcpy>
   1da06:	4631      	mov	r1, r6
   1da08:	4638      	mov	r0, r7
   1da0a:	f7fb fcfb 	bl	19404 <_free_r>
   1da0e:	e7e9      	b.n	1d9e4 <_realloc_r+0x1c>
   1da10:	4635      	mov	r5, r6
   1da12:	e7e7      	b.n	1d9e4 <_realloc_r+0x1c>

0001da14 <__ssputs_r>:
__ssputs_r():
   1da14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1da18:	688e      	ldr	r6, [r1, #8]
   1da1a:	4682      	mov	sl, r0
   1da1c:	429e      	cmp	r6, r3
   1da1e:	460c      	mov	r4, r1
   1da20:	4691      	mov	r9, r2
   1da22:	4698      	mov	r8, r3
   1da24:	d835      	bhi.n	1da92 <__ssputs_r+0x7e>
   1da26:	898a      	ldrh	r2, [r1, #12]
   1da28:	f412 6f90 	tst.w	r2, #1152	; 0x480
   1da2c:	d031      	beq.n	1da92 <__ssputs_r+0x7e>
   1da2e:	2302      	movs	r3, #2
   1da30:	6825      	ldr	r5, [r4, #0]
   1da32:	6909      	ldr	r1, [r1, #16]
   1da34:	1a6f      	subs	r7, r5, r1
   1da36:	6965      	ldr	r5, [r4, #20]
   1da38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   1da3c:	fb95 f5f3 	sdiv	r5, r5, r3
   1da40:	f108 0301 	add.w	r3, r8, #1
   1da44:	443b      	add	r3, r7
   1da46:	429d      	cmp	r5, r3
   1da48:	bf38      	it	cc
   1da4a:	461d      	movcc	r5, r3
   1da4c:	0553      	lsls	r3, r2, #21
   1da4e:	d531      	bpl.n	1dab4 <__ssputs_r+0xa0>
   1da50:	4629      	mov	r1, r5
   1da52:	f7fb fd55 	bl	19500 <_malloc_r>
   1da56:	4606      	mov	r6, r0
   1da58:	b950      	cbnz	r0, 1da70 <__ssputs_r+0x5c>
   1da5a:	230c      	movs	r3, #12
   1da5c:	f8ca 3000 	str.w	r3, [sl]
   1da60:	89a3      	ldrh	r3, [r4, #12]
   1da62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1da66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1da6a:	81a3      	strh	r3, [r4, #12]
   1da6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1da70:	463a      	mov	r2, r7
   1da72:	6921      	ldr	r1, [r4, #16]
   1da74:	f7fb fa25 	bl	18ec2 <memcpy>
   1da78:	89a3      	ldrh	r3, [r4, #12]
   1da7a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1da7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1da82:	81a3      	strh	r3, [r4, #12]
   1da84:	6126      	str	r6, [r4, #16]
   1da86:	443e      	add	r6, r7
   1da88:	6026      	str	r6, [r4, #0]
   1da8a:	4646      	mov	r6, r8
   1da8c:	6165      	str	r5, [r4, #20]
   1da8e:	1bed      	subs	r5, r5, r7
   1da90:	60a5      	str	r5, [r4, #8]
   1da92:	4546      	cmp	r6, r8
   1da94:	bf28      	it	cs
   1da96:	4646      	movcs	r6, r8
   1da98:	4649      	mov	r1, r9
   1da9a:	4632      	mov	r2, r6
   1da9c:	6820      	ldr	r0, [r4, #0]
   1da9e:	f7fb fa1b 	bl	18ed8 <memmove>
   1daa2:	68a3      	ldr	r3, [r4, #8]
   1daa4:	2000      	movs	r0, #0
   1daa6:	1b9b      	subs	r3, r3, r6
   1daa8:	60a3      	str	r3, [r4, #8]
   1daaa:	6823      	ldr	r3, [r4, #0]
   1daac:	441e      	add	r6, r3
   1daae:	6026      	str	r6, [r4, #0]
   1dab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1dab4:	462a      	mov	r2, r5
   1dab6:	f7ff ff87 	bl	1d9c8 <_realloc_r>
   1daba:	4606      	mov	r6, r0
   1dabc:	2800      	cmp	r0, #0
   1dabe:	d1e1      	bne.n	1da84 <__ssputs_r+0x70>
   1dac0:	6921      	ldr	r1, [r4, #16]
   1dac2:	4650      	mov	r0, sl
   1dac4:	f7fb fc9e 	bl	19404 <_free_r>
   1dac8:	e7c7      	b.n	1da5a <__ssputs_r+0x46>
   1daca:	Address 0x000000000001daca is out of bounds.


0001dacc <_svfiprintf_r>:
_svfiprintf_r():
   1dacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dad0:	b09d      	sub	sp, #116	; 0x74
   1dad2:	9303      	str	r3, [sp, #12]
   1dad4:	898b      	ldrh	r3, [r1, #12]
   1dad6:	4680      	mov	r8, r0
   1dad8:	061c      	lsls	r4, r3, #24
   1dada:	460d      	mov	r5, r1
   1dadc:	4616      	mov	r6, r2
   1dade:	d50f      	bpl.n	1db00 <_svfiprintf_r+0x34>
   1dae0:	690b      	ldr	r3, [r1, #16]
   1dae2:	b96b      	cbnz	r3, 1db00 <_svfiprintf_r+0x34>
   1dae4:	2140      	movs	r1, #64	; 0x40
   1dae6:	f7fb fd0b 	bl	19500 <_malloc_r>
   1daea:	6028      	str	r0, [r5, #0]
   1daec:	6128      	str	r0, [r5, #16]
   1daee:	b928      	cbnz	r0, 1dafc <_svfiprintf_r+0x30>
   1daf0:	230c      	movs	r3, #12
   1daf2:	f8c8 3000 	str.w	r3, [r8]
   1daf6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dafa:	e0c4      	b.n	1dc86 <_svfiprintf_r+0x1ba>
   1dafc:	2340      	movs	r3, #64	; 0x40
   1dafe:	616b      	str	r3, [r5, #20]
   1db00:	2300      	movs	r3, #0
   1db02:	9309      	str	r3, [sp, #36]	; 0x24
   1db04:	2320      	movs	r3, #32
   1db06:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1db0a:	2330      	movs	r3, #48	; 0x30
   1db0c:	f04f 0b01 	mov.w	fp, #1
   1db10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1db14:	4637      	mov	r7, r6
   1db16:	463c      	mov	r4, r7
   1db18:	f814 3b01 	ldrb.w	r3, [r4], #1
   1db1c:	2b00      	cmp	r3, #0
   1db1e:	d13c      	bne.n	1db9a <_svfiprintf_r+0xce>
   1db20:	ebb7 0a06 	subs.w	sl, r7, r6
   1db24:	d00b      	beq.n	1db3e <_svfiprintf_r+0x72>
   1db26:	4653      	mov	r3, sl
   1db28:	4632      	mov	r2, r6
   1db2a:	4629      	mov	r1, r5
   1db2c:	4640      	mov	r0, r8
   1db2e:	f7ff ff71 	bl	1da14 <__ssputs_r>
   1db32:	3001      	adds	r0, #1
   1db34:	f000 80a2 	beq.w	1dc7c <_svfiprintf_r+0x1b0>
   1db38:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1db3a:	4453      	add	r3, sl
   1db3c:	9309      	str	r3, [sp, #36]	; 0x24
   1db3e:	783b      	ldrb	r3, [r7, #0]
   1db40:	2b00      	cmp	r3, #0
   1db42:	f000 809b 	beq.w	1dc7c <_svfiprintf_r+0x1b0>
   1db46:	2300      	movs	r3, #0
   1db48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1db4c:	9304      	str	r3, [sp, #16]
   1db4e:	9307      	str	r3, [sp, #28]
   1db50:	9205      	str	r2, [sp, #20]
   1db52:	9306      	str	r3, [sp, #24]
   1db54:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1db58:	931a      	str	r3, [sp, #104]	; 0x68
   1db5a:	2205      	movs	r2, #5
   1db5c:	7821      	ldrb	r1, [r4, #0]
   1db5e:	4850      	ldr	r0, [pc, #320]	; (1dca0 <_svfiprintf_r+0x1d4>)
   1db60:	f7fb f992 	bl	18e88 <memchr>
   1db64:	1c67      	adds	r7, r4, #1
   1db66:	9b04      	ldr	r3, [sp, #16]
   1db68:	b9d8      	cbnz	r0, 1dba2 <_svfiprintf_r+0xd6>
   1db6a:	06d9      	lsls	r1, r3, #27
   1db6c:	bf44      	itt	mi
   1db6e:	2220      	movmi	r2, #32
   1db70:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1db74:	071a      	lsls	r2, r3, #28
   1db76:	bf44      	itt	mi
   1db78:	222b      	movmi	r2, #43	; 0x2b
   1db7a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1db7e:	7822      	ldrb	r2, [r4, #0]
   1db80:	2a2a      	cmp	r2, #42	; 0x2a
   1db82:	d016      	beq.n	1dbb2 <_svfiprintf_r+0xe6>
   1db84:	2100      	movs	r1, #0
   1db86:	200a      	movs	r0, #10
   1db88:	9a07      	ldr	r2, [sp, #28]
   1db8a:	4627      	mov	r7, r4
   1db8c:	783b      	ldrb	r3, [r7, #0]
   1db8e:	3401      	adds	r4, #1
   1db90:	3b30      	subs	r3, #48	; 0x30
   1db92:	2b09      	cmp	r3, #9
   1db94:	d950      	bls.n	1dc38 <_svfiprintf_r+0x16c>
   1db96:	b1c9      	cbz	r1, 1dbcc <_svfiprintf_r+0x100>
   1db98:	e011      	b.n	1dbbe <_svfiprintf_r+0xf2>
   1db9a:	2b25      	cmp	r3, #37	; 0x25
   1db9c:	d0c0      	beq.n	1db20 <_svfiprintf_r+0x54>
   1db9e:	4627      	mov	r7, r4
   1dba0:	e7b9      	b.n	1db16 <_svfiprintf_r+0x4a>
   1dba2:	4a3f      	ldr	r2, [pc, #252]	; (1dca0 <_svfiprintf_r+0x1d4>)
   1dba4:	463c      	mov	r4, r7
   1dba6:	1a80      	subs	r0, r0, r2
   1dba8:	fa0b f000 	lsl.w	r0, fp, r0
   1dbac:	4318      	orrs	r0, r3
   1dbae:	9004      	str	r0, [sp, #16]
   1dbb0:	e7d3      	b.n	1db5a <_svfiprintf_r+0x8e>
   1dbb2:	9a03      	ldr	r2, [sp, #12]
   1dbb4:	1d11      	adds	r1, r2, #4
   1dbb6:	6812      	ldr	r2, [r2, #0]
   1dbb8:	9103      	str	r1, [sp, #12]
   1dbba:	2a00      	cmp	r2, #0
   1dbbc:	db01      	blt.n	1dbc2 <_svfiprintf_r+0xf6>
   1dbbe:	9207      	str	r2, [sp, #28]
   1dbc0:	e004      	b.n	1dbcc <_svfiprintf_r+0x100>
   1dbc2:	4252      	negs	r2, r2
   1dbc4:	f043 0302 	orr.w	r3, r3, #2
   1dbc8:	9207      	str	r2, [sp, #28]
   1dbca:	9304      	str	r3, [sp, #16]
   1dbcc:	783b      	ldrb	r3, [r7, #0]
   1dbce:	2b2e      	cmp	r3, #46	; 0x2e
   1dbd0:	d10d      	bne.n	1dbee <_svfiprintf_r+0x122>
   1dbd2:	787b      	ldrb	r3, [r7, #1]
   1dbd4:	1c79      	adds	r1, r7, #1
   1dbd6:	2b2a      	cmp	r3, #42	; 0x2a
   1dbd8:	d132      	bne.n	1dc40 <_svfiprintf_r+0x174>
   1dbda:	9b03      	ldr	r3, [sp, #12]
   1dbdc:	3702      	adds	r7, #2
   1dbde:	1d1a      	adds	r2, r3, #4
   1dbe0:	681b      	ldr	r3, [r3, #0]
   1dbe2:	9203      	str	r2, [sp, #12]
   1dbe4:	2b00      	cmp	r3, #0
   1dbe6:	bfb8      	it	lt
   1dbe8:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1dbec:	9305      	str	r3, [sp, #20]
   1dbee:	4c2d      	ldr	r4, [pc, #180]	; (1dca4 <_svfiprintf_r+0x1d8>)
   1dbf0:	2203      	movs	r2, #3
   1dbf2:	7839      	ldrb	r1, [r7, #0]
   1dbf4:	4620      	mov	r0, r4
   1dbf6:	f7fb f947 	bl	18e88 <memchr>
   1dbfa:	b138      	cbz	r0, 1dc0c <_svfiprintf_r+0x140>
   1dbfc:	2340      	movs	r3, #64	; 0x40
   1dbfe:	1b00      	subs	r0, r0, r4
   1dc00:	fa03 f000 	lsl.w	r0, r3, r0
   1dc04:	9b04      	ldr	r3, [sp, #16]
   1dc06:	3701      	adds	r7, #1
   1dc08:	4303      	orrs	r3, r0
   1dc0a:	9304      	str	r3, [sp, #16]
   1dc0c:	7839      	ldrb	r1, [r7, #0]
   1dc0e:	2206      	movs	r2, #6
   1dc10:	4825      	ldr	r0, [pc, #148]	; (1dca8 <_svfiprintf_r+0x1dc>)
   1dc12:	1c7e      	adds	r6, r7, #1
   1dc14:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1dc18:	f7fb f936 	bl	18e88 <memchr>
   1dc1c:	2800      	cmp	r0, #0
   1dc1e:	d035      	beq.n	1dc8c <_svfiprintf_r+0x1c0>
   1dc20:	4b22      	ldr	r3, [pc, #136]	; (1dcac <_svfiprintf_r+0x1e0>)
   1dc22:	b9fb      	cbnz	r3, 1dc64 <_svfiprintf_r+0x198>
   1dc24:	9b03      	ldr	r3, [sp, #12]
   1dc26:	3307      	adds	r3, #7
   1dc28:	f023 0307 	bic.w	r3, r3, #7
   1dc2c:	3308      	adds	r3, #8
   1dc2e:	9303      	str	r3, [sp, #12]
   1dc30:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1dc32:	444b      	add	r3, r9
   1dc34:	9309      	str	r3, [sp, #36]	; 0x24
   1dc36:	e76d      	b.n	1db14 <_svfiprintf_r+0x48>
   1dc38:	fb00 3202 	mla	r2, r0, r2, r3
   1dc3c:	2101      	movs	r1, #1
   1dc3e:	e7a4      	b.n	1db8a <_svfiprintf_r+0xbe>
   1dc40:	2300      	movs	r3, #0
   1dc42:	240a      	movs	r4, #10
   1dc44:	4618      	mov	r0, r3
   1dc46:	9305      	str	r3, [sp, #20]
   1dc48:	460f      	mov	r7, r1
   1dc4a:	783a      	ldrb	r2, [r7, #0]
   1dc4c:	3101      	adds	r1, #1
   1dc4e:	3a30      	subs	r2, #48	; 0x30
   1dc50:	2a09      	cmp	r2, #9
   1dc52:	d903      	bls.n	1dc5c <_svfiprintf_r+0x190>
   1dc54:	2b00      	cmp	r3, #0
   1dc56:	d0ca      	beq.n	1dbee <_svfiprintf_r+0x122>
   1dc58:	9005      	str	r0, [sp, #20]
   1dc5a:	e7c8      	b.n	1dbee <_svfiprintf_r+0x122>
   1dc5c:	fb04 2000 	mla	r0, r4, r0, r2
   1dc60:	2301      	movs	r3, #1
   1dc62:	e7f1      	b.n	1dc48 <_svfiprintf_r+0x17c>
   1dc64:	ab03      	add	r3, sp, #12
   1dc66:	9300      	str	r3, [sp, #0]
   1dc68:	462a      	mov	r2, r5
   1dc6a:	4b11      	ldr	r3, [pc, #68]	; (1dcb0 <_svfiprintf_r+0x1e4>)
   1dc6c:	a904      	add	r1, sp, #16
   1dc6e:	4640      	mov	r0, r8
   1dc70:	f7fb fd36 	bl	196e0 <_printf_float>
   1dc74:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1dc78:	4681      	mov	r9, r0
   1dc7a:	d1d9      	bne.n	1dc30 <_svfiprintf_r+0x164>
   1dc7c:	89ab      	ldrh	r3, [r5, #12]
   1dc7e:	065b      	lsls	r3, r3, #25
   1dc80:	f53f af39 	bmi.w	1daf6 <_svfiprintf_r+0x2a>
   1dc84:	9809      	ldr	r0, [sp, #36]	; 0x24
   1dc86:	b01d      	add	sp, #116	; 0x74
   1dc88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc8c:	ab03      	add	r3, sp, #12
   1dc8e:	9300      	str	r3, [sp, #0]
   1dc90:	462a      	mov	r2, r5
   1dc92:	4b07      	ldr	r3, [pc, #28]	; (1dcb0 <_svfiprintf_r+0x1e4>)
   1dc94:	a904      	add	r1, sp, #16
   1dc96:	4640      	mov	r0, r8
   1dc98:	f7fb ffd2 	bl	19c40 <_printf_i>
   1dc9c:	e7ea      	b.n	1dc74 <_svfiprintf_r+0x1a8>
   1dc9e:	bf00      	nop
   1dca0:	0002062c 	.word	0x0002062c
   1dca4:	00020632 	.word	0x00020632
   1dca8:	00020636 	.word	0x00020636
   1dcac:	000196e1 	.word	0x000196e1
   1dcb0:	0001da15 	.word	0x0001da15

0001dcb4 <_sungetc_r>:
_sungetc_r():
   1dcb4:	b538      	push	{r3, r4, r5, lr}
   1dcb6:	1c4b      	adds	r3, r1, #1
   1dcb8:	4614      	mov	r4, r2
   1dcba:	d103      	bne.n	1dcc4 <_sungetc_r+0x10>
   1dcbc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1dcc0:	4628      	mov	r0, r5
   1dcc2:	bd38      	pop	{r3, r4, r5, pc}
   1dcc4:	8993      	ldrh	r3, [r2, #12]
   1dcc6:	b2cd      	uxtb	r5, r1
   1dcc8:	f023 0320 	bic.w	r3, r3, #32
   1dccc:	8193      	strh	r3, [r2, #12]
   1dcce:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1dcd0:	6852      	ldr	r2, [r2, #4]
   1dcd2:	b18b      	cbz	r3, 1dcf8 <_sungetc_r+0x44>
   1dcd4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1dcd6:	429a      	cmp	r2, r3
   1dcd8:	da08      	bge.n	1dcec <_sungetc_r+0x38>
   1dcda:	6823      	ldr	r3, [r4, #0]
   1dcdc:	1e5a      	subs	r2, r3, #1
   1dcde:	6022      	str	r2, [r4, #0]
   1dce0:	f803 5c01 	strb.w	r5, [r3, #-1]
   1dce4:	6863      	ldr	r3, [r4, #4]
   1dce6:	3301      	adds	r3, #1
   1dce8:	6063      	str	r3, [r4, #4]
   1dcea:	e7e9      	b.n	1dcc0 <_sungetc_r+0xc>
   1dcec:	4621      	mov	r1, r4
   1dcee:	f000 fe89 	bl	1ea04 <__submore>
   1dcf2:	2800      	cmp	r0, #0
   1dcf4:	d0f1      	beq.n	1dcda <_sungetc_r+0x26>
   1dcf6:	e7e1      	b.n	1dcbc <_sungetc_r+0x8>
   1dcf8:	6921      	ldr	r1, [r4, #16]
   1dcfa:	6823      	ldr	r3, [r4, #0]
   1dcfc:	b151      	cbz	r1, 1dd14 <_sungetc_r+0x60>
   1dcfe:	4299      	cmp	r1, r3
   1dd00:	d208      	bcs.n	1dd14 <_sungetc_r+0x60>
   1dd02:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1dd06:	428d      	cmp	r5, r1
   1dd08:	d104      	bne.n	1dd14 <_sungetc_r+0x60>
   1dd0a:	3b01      	subs	r3, #1
   1dd0c:	3201      	adds	r2, #1
   1dd0e:	6023      	str	r3, [r4, #0]
   1dd10:	6062      	str	r2, [r4, #4]
   1dd12:	e7d5      	b.n	1dcc0 <_sungetc_r+0xc>
   1dd14:	63e3      	str	r3, [r4, #60]	; 0x3c
   1dd16:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1dd1a:	6363      	str	r3, [r4, #52]	; 0x34
   1dd1c:	2303      	movs	r3, #3
   1dd1e:	63a3      	str	r3, [r4, #56]	; 0x38
   1dd20:	4623      	mov	r3, r4
   1dd22:	6422      	str	r2, [r4, #64]	; 0x40
   1dd24:	f803 5f46 	strb.w	r5, [r3, #70]!
   1dd28:	6023      	str	r3, [r4, #0]
   1dd2a:	2301      	movs	r3, #1
   1dd2c:	e7dc      	b.n	1dce8 <_sungetc_r+0x34>

0001dd2e <__ssrefill_r>:
__ssrefill_r():
   1dd2e:	b510      	push	{r4, lr}
   1dd30:	460c      	mov	r4, r1
   1dd32:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1dd34:	b169      	cbz	r1, 1dd52 <__ssrefill_r+0x24>
   1dd36:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1dd3a:	4299      	cmp	r1, r3
   1dd3c:	d001      	beq.n	1dd42 <__ssrefill_r+0x14>
   1dd3e:	f7fb fb61 	bl	19404 <_free_r>
   1dd42:	2000      	movs	r0, #0
   1dd44:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1dd46:	6360      	str	r0, [r4, #52]	; 0x34
   1dd48:	6063      	str	r3, [r4, #4]
   1dd4a:	b113      	cbz	r3, 1dd52 <__ssrefill_r+0x24>
   1dd4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1dd4e:	6023      	str	r3, [r4, #0]
   1dd50:	bd10      	pop	{r4, pc}
   1dd52:	6923      	ldr	r3, [r4, #16]
   1dd54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dd58:	6023      	str	r3, [r4, #0]
   1dd5a:	2300      	movs	r3, #0
   1dd5c:	6063      	str	r3, [r4, #4]
   1dd5e:	89a3      	ldrh	r3, [r4, #12]
   1dd60:	f043 0320 	orr.w	r3, r3, #32
   1dd64:	81a3      	strh	r3, [r4, #12]
   1dd66:	bd10      	pop	{r4, pc}

0001dd68 <__ssvfiscanf_r>:
__ssvfiscanf_r():
   1dd68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd6c:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1dd70:	9301      	str	r3, [sp, #4]
   1dd72:	2300      	movs	r3, #0
   1dd74:	4606      	mov	r6, r0
   1dd76:	460c      	mov	r4, r1
   1dd78:	4692      	mov	sl, r2
   1dd7a:	270a      	movs	r7, #10
   1dd7c:	9346      	str	r3, [sp, #280]	; 0x118
   1dd7e:	9347      	str	r3, [sp, #284]	; 0x11c
   1dd80:	4b9f      	ldr	r3, [pc, #636]	; (1e000 <__ssvfiscanf_r+0x298>)
   1dd82:	f10d 080c 	add.w	r8, sp, #12
   1dd86:	93a2      	str	r3, [sp, #648]	; 0x288
   1dd88:	4b9e      	ldr	r3, [pc, #632]	; (1e004 <__ssvfiscanf_r+0x29c>)
   1dd8a:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1e008 <__ssvfiscanf_r+0x2a0>
   1dd8e:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1dd92:	93a3      	str	r3, [sp, #652]	; 0x28c
   1dd94:	f89a 3000 	ldrb.w	r3, [sl]
   1dd98:	2b00      	cmp	r3, #0
   1dd9a:	f000 812f 	beq.w	1dffc <__ssvfiscanf_r+0x294>
   1dd9e:	f7fa ffdf 	bl	18d60 <__locale_ctype_ptr>
   1dda2:	f89a b000 	ldrb.w	fp, [sl]
   1dda6:	4458      	add	r0, fp
   1dda8:	7843      	ldrb	r3, [r0, #1]
   1ddaa:	f013 0308 	ands.w	r3, r3, #8
   1ddae:	d143      	bne.n	1de38 <__ssvfiscanf_r+0xd0>
   1ddb0:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1ddb4:	f10a 0501 	add.w	r5, sl, #1
   1ddb8:	f040 8099 	bne.w	1deee <__ssvfiscanf_r+0x186>
   1ddbc:	9345      	str	r3, [sp, #276]	; 0x114
   1ddbe:	9343      	str	r3, [sp, #268]	; 0x10c
   1ddc0:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1ddc4:	2b2a      	cmp	r3, #42	; 0x2a
   1ddc6:	d103      	bne.n	1ddd0 <__ssvfiscanf_r+0x68>
   1ddc8:	2310      	movs	r3, #16
   1ddca:	f10a 0502 	add.w	r5, sl, #2
   1ddce:	9343      	str	r3, [sp, #268]	; 0x10c
   1ddd0:	7829      	ldrb	r1, [r5, #0]
   1ddd2:	46aa      	mov	sl, r5
   1ddd4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1ddd8:	2a09      	cmp	r2, #9
   1ddda:	f105 0501 	add.w	r5, r5, #1
   1ddde:	d941      	bls.n	1de64 <__ssvfiscanf_r+0xfc>
   1dde0:	2203      	movs	r2, #3
   1dde2:	4889      	ldr	r0, [pc, #548]	; (1e008 <__ssvfiscanf_r+0x2a0>)
   1dde4:	f7fb f850 	bl	18e88 <memchr>
   1dde8:	b138      	cbz	r0, 1ddfa <__ssvfiscanf_r+0x92>
   1ddea:	eba0 0309 	sub.w	r3, r0, r9
   1ddee:	2001      	movs	r0, #1
   1ddf0:	46aa      	mov	sl, r5
   1ddf2:	4098      	lsls	r0, r3
   1ddf4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ddf6:	4318      	orrs	r0, r3
   1ddf8:	9043      	str	r0, [sp, #268]	; 0x10c
   1ddfa:	f89a 3000 	ldrb.w	r3, [sl]
   1ddfe:	f10a 0501 	add.w	r5, sl, #1
   1de02:	2b67      	cmp	r3, #103	; 0x67
   1de04:	d84a      	bhi.n	1de9c <__ssvfiscanf_r+0x134>
   1de06:	2b65      	cmp	r3, #101	; 0x65
   1de08:	f080 80b7 	bcs.w	1df7a <__ssvfiscanf_r+0x212>
   1de0c:	2b47      	cmp	r3, #71	; 0x47
   1de0e:	d82f      	bhi.n	1de70 <__ssvfiscanf_r+0x108>
   1de10:	2b45      	cmp	r3, #69	; 0x45
   1de12:	f080 80b2 	bcs.w	1df7a <__ssvfiscanf_r+0x212>
   1de16:	2b00      	cmp	r3, #0
   1de18:	f000 8082 	beq.w	1df20 <__ssvfiscanf_r+0x1b8>
   1de1c:	2b25      	cmp	r3, #37	; 0x25
   1de1e:	d066      	beq.n	1deee <__ssvfiscanf_r+0x186>
   1de20:	2303      	movs	r3, #3
   1de22:	9744      	str	r7, [sp, #272]	; 0x110
   1de24:	9349      	str	r3, [sp, #292]	; 0x124
   1de26:	e045      	b.n	1deb4 <__ssvfiscanf_r+0x14c>
   1de28:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1de2a:	3301      	adds	r3, #1
   1de2c:	3101      	adds	r1, #1
   1de2e:	9147      	str	r1, [sp, #284]	; 0x11c
   1de30:	6861      	ldr	r1, [r4, #4]
   1de32:	6023      	str	r3, [r4, #0]
   1de34:	3901      	subs	r1, #1
   1de36:	6061      	str	r1, [r4, #4]
   1de38:	6863      	ldr	r3, [r4, #4]
   1de3a:	2b00      	cmp	r3, #0
   1de3c:	dd0b      	ble.n	1de56 <__ssvfiscanf_r+0xee>
   1de3e:	f7fa ff8f 	bl	18d60 <__locale_ctype_ptr>
   1de42:	6823      	ldr	r3, [r4, #0]
   1de44:	7819      	ldrb	r1, [r3, #0]
   1de46:	4408      	add	r0, r1
   1de48:	7841      	ldrb	r1, [r0, #1]
   1de4a:	070d      	lsls	r5, r1, #28
   1de4c:	d4ec      	bmi.n	1de28 <__ssvfiscanf_r+0xc0>
   1de4e:	f10a 0501 	add.w	r5, sl, #1
   1de52:	46aa      	mov	sl, r5
   1de54:	e79e      	b.n	1dd94 <__ssvfiscanf_r+0x2c>
   1de56:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1de58:	4621      	mov	r1, r4
   1de5a:	4630      	mov	r0, r6
   1de5c:	4798      	blx	r3
   1de5e:	2800      	cmp	r0, #0
   1de60:	d0ed      	beq.n	1de3e <__ssvfiscanf_r+0xd6>
   1de62:	e7f4      	b.n	1de4e <__ssvfiscanf_r+0xe6>
   1de64:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1de66:	fb07 1303 	mla	r3, r7, r3, r1
   1de6a:	3b30      	subs	r3, #48	; 0x30
   1de6c:	9345      	str	r3, [sp, #276]	; 0x114
   1de6e:	e7af      	b.n	1ddd0 <__ssvfiscanf_r+0x68>
   1de70:	2b5b      	cmp	r3, #91	; 0x5b
   1de72:	d061      	beq.n	1df38 <__ssvfiscanf_r+0x1d0>
   1de74:	d80c      	bhi.n	1de90 <__ssvfiscanf_r+0x128>
   1de76:	2b58      	cmp	r3, #88	; 0x58
   1de78:	d1d2      	bne.n	1de20 <__ssvfiscanf_r+0xb8>
   1de7a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1de7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1de80:	9243      	str	r2, [sp, #268]	; 0x10c
   1de82:	2210      	movs	r2, #16
   1de84:	9244      	str	r2, [sp, #272]	; 0x110
   1de86:	2b6f      	cmp	r3, #111	; 0x6f
   1de88:	bfb4      	ite	lt
   1de8a:	2303      	movlt	r3, #3
   1de8c:	2304      	movge	r3, #4
   1de8e:	e010      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1de90:	2b63      	cmp	r3, #99	; 0x63
   1de92:	d05c      	beq.n	1df4e <__ssvfiscanf_r+0x1e6>
   1de94:	2b64      	cmp	r3, #100	; 0x64
   1de96:	d1c3      	bne.n	1de20 <__ssvfiscanf_r+0xb8>
   1de98:	9744      	str	r7, [sp, #272]	; 0x110
   1de9a:	e7f4      	b.n	1de86 <__ssvfiscanf_r+0x11e>
   1de9c:	2b70      	cmp	r3, #112	; 0x70
   1de9e:	d042      	beq.n	1df26 <__ssvfiscanf_r+0x1be>
   1dea0:	d81d      	bhi.n	1dede <__ssvfiscanf_r+0x176>
   1dea2:	2b6e      	cmp	r3, #110	; 0x6e
   1dea4:	d059      	beq.n	1df5a <__ssvfiscanf_r+0x1f2>
   1dea6:	d843      	bhi.n	1df30 <__ssvfiscanf_r+0x1c8>
   1dea8:	2b69      	cmp	r3, #105	; 0x69
   1deaa:	d1b9      	bne.n	1de20 <__ssvfiscanf_r+0xb8>
   1deac:	2300      	movs	r3, #0
   1deae:	9344      	str	r3, [sp, #272]	; 0x110
   1deb0:	2303      	movs	r3, #3
   1deb2:	9349      	str	r3, [sp, #292]	; 0x124
   1deb4:	6863      	ldr	r3, [r4, #4]
   1deb6:	2b00      	cmp	r3, #0
   1deb8:	dd61      	ble.n	1df7e <__ssvfiscanf_r+0x216>
   1deba:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1debc:	0659      	lsls	r1, r3, #25
   1debe:	d56f      	bpl.n	1dfa0 <__ssvfiscanf_r+0x238>
   1dec0:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1dec2:	2b02      	cmp	r3, #2
   1dec4:	dc7c      	bgt.n	1dfc0 <__ssvfiscanf_r+0x258>
   1dec6:	ab01      	add	r3, sp, #4
   1dec8:	4622      	mov	r2, r4
   1deca:	a943      	add	r1, sp, #268	; 0x10c
   1decc:	4630      	mov	r0, r6
   1dece:	f000 fb59 	bl	1e584 <_scanf_chars>
   1ded2:	2801      	cmp	r0, #1
   1ded4:	f000 8092 	beq.w	1dffc <__ssvfiscanf_r+0x294>
   1ded8:	2802      	cmp	r0, #2
   1deda:	d1ba      	bne.n	1de52 <__ssvfiscanf_r+0xea>
   1dedc:	e01d      	b.n	1df1a <__ssvfiscanf_r+0x1b2>
   1dede:	2b75      	cmp	r3, #117	; 0x75
   1dee0:	d0da      	beq.n	1de98 <__ssvfiscanf_r+0x130>
   1dee2:	2b78      	cmp	r3, #120	; 0x78
   1dee4:	d0c9      	beq.n	1de7a <__ssvfiscanf_r+0x112>
   1dee6:	2b73      	cmp	r3, #115	; 0x73
   1dee8:	d19a      	bne.n	1de20 <__ssvfiscanf_r+0xb8>
   1deea:	2302      	movs	r3, #2
   1deec:	e7e1      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1deee:	6863      	ldr	r3, [r4, #4]
   1def0:	2b00      	cmp	r3, #0
   1def2:	dd0c      	ble.n	1df0e <__ssvfiscanf_r+0x1a6>
   1def4:	6823      	ldr	r3, [r4, #0]
   1def6:	781a      	ldrb	r2, [r3, #0]
   1def8:	4593      	cmp	fp, r2
   1defa:	d17f      	bne.n	1dffc <__ssvfiscanf_r+0x294>
   1defc:	3301      	adds	r3, #1
   1defe:	6862      	ldr	r2, [r4, #4]
   1df00:	6023      	str	r3, [r4, #0]
   1df02:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1df04:	3a01      	subs	r2, #1
   1df06:	3301      	adds	r3, #1
   1df08:	6062      	str	r2, [r4, #4]
   1df0a:	9347      	str	r3, [sp, #284]	; 0x11c
   1df0c:	e7a1      	b.n	1de52 <__ssvfiscanf_r+0xea>
   1df0e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1df10:	4621      	mov	r1, r4
   1df12:	4630      	mov	r0, r6
   1df14:	4798      	blx	r3
   1df16:	2800      	cmp	r0, #0
   1df18:	d0ec      	beq.n	1def4 <__ssvfiscanf_r+0x18c>
   1df1a:	9846      	ldr	r0, [sp, #280]	; 0x118
   1df1c:	2800      	cmp	r0, #0
   1df1e:	d163      	bne.n	1dfe8 <__ssvfiscanf_r+0x280>
   1df20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1df24:	e066      	b.n	1dff4 <__ssvfiscanf_r+0x28c>
   1df26:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1df28:	f042 0220 	orr.w	r2, r2, #32
   1df2c:	9243      	str	r2, [sp, #268]	; 0x10c
   1df2e:	e7a4      	b.n	1de7a <__ssvfiscanf_r+0x112>
   1df30:	2308      	movs	r3, #8
   1df32:	9344      	str	r3, [sp, #272]	; 0x110
   1df34:	2304      	movs	r3, #4
   1df36:	e7bc      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1df38:	4629      	mov	r1, r5
   1df3a:	4640      	mov	r0, r8
   1df3c:	f000 fc8e 	bl	1e85c <__sccl>
   1df40:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1df42:	4605      	mov	r5, r0
   1df44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1df48:	9343      	str	r3, [sp, #268]	; 0x10c
   1df4a:	2301      	movs	r3, #1
   1df4c:	e7b1      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1df4e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1df50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1df54:	9343      	str	r3, [sp, #268]	; 0x10c
   1df56:	2300      	movs	r3, #0
   1df58:	e7ab      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1df5a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1df5c:	06d0      	lsls	r0, r2, #27
   1df5e:	f53f af78 	bmi.w	1de52 <__ssvfiscanf_r+0xea>
   1df62:	f012 0f01 	tst.w	r2, #1
   1df66:	9a01      	ldr	r2, [sp, #4]
   1df68:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1df6a:	f102 0104 	add.w	r1, r2, #4
   1df6e:	9101      	str	r1, [sp, #4]
   1df70:	6812      	ldr	r2, [r2, #0]
   1df72:	bf14      	ite	ne
   1df74:	8013      	strhne	r3, [r2, #0]
   1df76:	6013      	streq	r3, [r2, #0]
   1df78:	e76b      	b.n	1de52 <__ssvfiscanf_r+0xea>
   1df7a:	2305      	movs	r3, #5
   1df7c:	e799      	b.n	1deb2 <__ssvfiscanf_r+0x14a>
   1df7e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1df80:	4621      	mov	r1, r4
   1df82:	4630      	mov	r0, r6
   1df84:	4798      	blx	r3
   1df86:	2800      	cmp	r0, #0
   1df88:	d097      	beq.n	1deba <__ssvfiscanf_r+0x152>
   1df8a:	e7c6      	b.n	1df1a <__ssvfiscanf_r+0x1b2>
   1df8c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1df8e:	3201      	adds	r2, #1
   1df90:	9247      	str	r2, [sp, #284]	; 0x11c
   1df92:	6862      	ldr	r2, [r4, #4]
   1df94:	3a01      	subs	r2, #1
   1df96:	2a00      	cmp	r2, #0
   1df98:	6062      	str	r2, [r4, #4]
   1df9a:	dd0a      	ble.n	1dfb2 <__ssvfiscanf_r+0x24a>
   1df9c:	3301      	adds	r3, #1
   1df9e:	6023      	str	r3, [r4, #0]
   1dfa0:	f7fa fede 	bl	18d60 <__locale_ctype_ptr>
   1dfa4:	6823      	ldr	r3, [r4, #0]
   1dfa6:	781a      	ldrb	r2, [r3, #0]
   1dfa8:	4410      	add	r0, r2
   1dfaa:	7842      	ldrb	r2, [r0, #1]
   1dfac:	0712      	lsls	r2, r2, #28
   1dfae:	d4ed      	bmi.n	1df8c <__ssvfiscanf_r+0x224>
   1dfb0:	e786      	b.n	1dec0 <__ssvfiscanf_r+0x158>
   1dfb2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1dfb4:	4621      	mov	r1, r4
   1dfb6:	4630      	mov	r0, r6
   1dfb8:	4798      	blx	r3
   1dfba:	2800      	cmp	r0, #0
   1dfbc:	d0f0      	beq.n	1dfa0 <__ssvfiscanf_r+0x238>
   1dfbe:	e7ac      	b.n	1df1a <__ssvfiscanf_r+0x1b2>
   1dfc0:	2b04      	cmp	r3, #4
   1dfc2:	dc06      	bgt.n	1dfd2 <__ssvfiscanf_r+0x26a>
   1dfc4:	ab01      	add	r3, sp, #4
   1dfc6:	4622      	mov	r2, r4
   1dfc8:	a943      	add	r1, sp, #268	; 0x10c
   1dfca:	4630      	mov	r0, r6
   1dfcc:	f000 fb3e 	bl	1e64c <_scanf_i>
   1dfd0:	e77f      	b.n	1ded2 <__ssvfiscanf_r+0x16a>
   1dfd2:	4b0e      	ldr	r3, [pc, #56]	; (1e00c <__ssvfiscanf_r+0x2a4>)
   1dfd4:	2b00      	cmp	r3, #0
   1dfd6:	f43f af3c 	beq.w	1de52 <__ssvfiscanf_r+0xea>
   1dfda:	ab01      	add	r3, sp, #4
   1dfdc:	4622      	mov	r2, r4
   1dfde:	a943      	add	r1, sp, #268	; 0x10c
   1dfe0:	4630      	mov	r0, r6
   1dfe2:	f7fb ff4d 	bl	19e80 <_scanf_float>
   1dfe6:	e774      	b.n	1ded2 <__ssvfiscanf_r+0x16a>
   1dfe8:	89a3      	ldrh	r3, [r4, #12]
   1dfea:	f013 0f40 	tst.w	r3, #64	; 0x40
   1dfee:	bf18      	it	ne
   1dff0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1dff4:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1dff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dffc:	9846      	ldr	r0, [sp, #280]	; 0x118
   1dffe:	e7f9      	b.n	1dff4 <__ssvfiscanf_r+0x28c>
   1e000:	0001dcb5 	.word	0x0001dcb5
   1e004:	0001dd2f 	.word	0x0001dd2f
   1e008:	00020632 	.word	0x00020632
   1e00c:	00019e81 	.word	0x00019e81

0001e010 <__sfputc_r>:
__sfputc_r():
   1e010:	6893      	ldr	r3, [r2, #8]
   1e012:	b410      	push	{r4}
   1e014:	3b01      	subs	r3, #1
   1e016:	2b00      	cmp	r3, #0
   1e018:	6093      	str	r3, [r2, #8]
   1e01a:	da08      	bge.n	1e02e <__sfputc_r+0x1e>
   1e01c:	6994      	ldr	r4, [r2, #24]
   1e01e:	42a3      	cmp	r3, r4
   1e020:	db02      	blt.n	1e028 <__sfputc_r+0x18>
   1e022:	b2cb      	uxtb	r3, r1
   1e024:	2b0a      	cmp	r3, #10
   1e026:	d102      	bne.n	1e02e <__sfputc_r+0x1e>
   1e028:	bc10      	pop	{r4}
   1e02a:	f7fd bdc1 	b.w	1bbb0 <__swbuf_r>
   1e02e:	6813      	ldr	r3, [r2, #0]
   1e030:	1c58      	adds	r0, r3, #1
   1e032:	6010      	str	r0, [r2, #0]
   1e034:	7019      	strb	r1, [r3, #0]
   1e036:	b2c8      	uxtb	r0, r1
   1e038:	bc10      	pop	{r4}
   1e03a:	4770      	bx	lr

0001e03c <__sfputs_r>:
__sfputs_r():
   1e03c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e03e:	4606      	mov	r6, r0
   1e040:	460f      	mov	r7, r1
   1e042:	4614      	mov	r4, r2
   1e044:	18d5      	adds	r5, r2, r3
   1e046:	42ac      	cmp	r4, r5
   1e048:	d101      	bne.n	1e04e <__sfputs_r+0x12>
   1e04a:	2000      	movs	r0, #0
   1e04c:	e007      	b.n	1e05e <__sfputs_r+0x22>
   1e04e:	463a      	mov	r2, r7
   1e050:	f814 1b01 	ldrb.w	r1, [r4], #1
   1e054:	4630      	mov	r0, r6
   1e056:	f7ff ffdb 	bl	1e010 <__sfputc_r>
   1e05a:	1c43      	adds	r3, r0, #1
   1e05c:	d1f3      	bne.n	1e046 <__sfputs_r+0xa>
   1e05e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001e060 <_vfiprintf_r>:
_vfprintf_r():
   1e060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e064:	b09d      	sub	sp, #116	; 0x74
   1e066:	460c      	mov	r4, r1
   1e068:	4617      	mov	r7, r2
   1e06a:	9303      	str	r3, [sp, #12]
   1e06c:	4606      	mov	r6, r0
   1e06e:	b118      	cbz	r0, 1e078 <_vfiprintf_r+0x18>
   1e070:	6983      	ldr	r3, [r0, #24]
   1e072:	b90b      	cbnz	r3, 1e078 <_vfiprintf_r+0x18>
   1e074:	f7fa fda6 	bl	18bc4 <__sinit>
   1e078:	4b7c      	ldr	r3, [pc, #496]	; (1e26c <_vfiprintf_r+0x20c>)
   1e07a:	429c      	cmp	r4, r3
   1e07c:	d157      	bne.n	1e12e <_vfiprintf_r+0xce>
   1e07e:	6874      	ldr	r4, [r6, #4]
   1e080:	89a3      	ldrh	r3, [r4, #12]
   1e082:	0718      	lsls	r0, r3, #28
   1e084:	d55d      	bpl.n	1e142 <_vfiprintf_r+0xe2>
   1e086:	6923      	ldr	r3, [r4, #16]
   1e088:	2b00      	cmp	r3, #0
   1e08a:	d05a      	beq.n	1e142 <_vfiprintf_r+0xe2>
   1e08c:	2300      	movs	r3, #0
   1e08e:	9309      	str	r3, [sp, #36]	; 0x24
   1e090:	2320      	movs	r3, #32
   1e092:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1e096:	2330      	movs	r3, #48	; 0x30
   1e098:	f04f 0b01 	mov.w	fp, #1
   1e09c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1e0a0:	46b8      	mov	r8, r7
   1e0a2:	4645      	mov	r5, r8
   1e0a4:	f815 3b01 	ldrb.w	r3, [r5], #1
   1e0a8:	2b00      	cmp	r3, #0
   1e0aa:	d155      	bne.n	1e158 <_vfiprintf_r+0xf8>
   1e0ac:	ebb8 0a07 	subs.w	sl, r8, r7
   1e0b0:	d00b      	beq.n	1e0ca <_vfiprintf_r+0x6a>
   1e0b2:	4653      	mov	r3, sl
   1e0b4:	463a      	mov	r2, r7
   1e0b6:	4621      	mov	r1, r4
   1e0b8:	4630      	mov	r0, r6
   1e0ba:	f7ff ffbf 	bl	1e03c <__sfputs_r>
   1e0be:	3001      	adds	r0, #1
   1e0c0:	f000 80c4 	beq.w	1e24c <_vfiprintf_r+0x1ec>
   1e0c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e0c6:	4453      	add	r3, sl
   1e0c8:	9309      	str	r3, [sp, #36]	; 0x24
   1e0ca:	f898 3000 	ldrb.w	r3, [r8]
   1e0ce:	2b00      	cmp	r3, #0
   1e0d0:	f000 80bc 	beq.w	1e24c <_vfiprintf_r+0x1ec>
   1e0d4:	2300      	movs	r3, #0
   1e0d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1e0da:	9304      	str	r3, [sp, #16]
   1e0dc:	9307      	str	r3, [sp, #28]
   1e0de:	9205      	str	r2, [sp, #20]
   1e0e0:	9306      	str	r3, [sp, #24]
   1e0e2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1e0e6:	931a      	str	r3, [sp, #104]	; 0x68
   1e0e8:	2205      	movs	r2, #5
   1e0ea:	7829      	ldrb	r1, [r5, #0]
   1e0ec:	4860      	ldr	r0, [pc, #384]	; (1e270 <_vfiprintf_r+0x210>)
   1e0ee:	f7fa fecb 	bl	18e88 <memchr>
   1e0f2:	f105 0801 	add.w	r8, r5, #1
   1e0f6:	9b04      	ldr	r3, [sp, #16]
   1e0f8:	2800      	cmp	r0, #0
   1e0fa:	d131      	bne.n	1e160 <_vfiprintf_r+0x100>
   1e0fc:	06d9      	lsls	r1, r3, #27
   1e0fe:	bf44      	itt	mi
   1e100:	2220      	movmi	r2, #32
   1e102:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e106:	071a      	lsls	r2, r3, #28
   1e108:	bf44      	itt	mi
   1e10a:	222b      	movmi	r2, #43	; 0x2b
   1e10c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e110:	782a      	ldrb	r2, [r5, #0]
   1e112:	2a2a      	cmp	r2, #42	; 0x2a
   1e114:	d02c      	beq.n	1e170 <_vfiprintf_r+0x110>
   1e116:	2100      	movs	r1, #0
   1e118:	200a      	movs	r0, #10
   1e11a:	9a07      	ldr	r2, [sp, #28]
   1e11c:	46a8      	mov	r8, r5
   1e11e:	f898 3000 	ldrb.w	r3, [r8]
   1e122:	3501      	adds	r5, #1
   1e124:	3b30      	subs	r3, #48	; 0x30
   1e126:	2b09      	cmp	r3, #9
   1e128:	d96d      	bls.n	1e206 <_vfiprintf_r+0x1a6>
   1e12a:	b371      	cbz	r1, 1e18a <_vfiprintf_r+0x12a>
   1e12c:	e026      	b.n	1e17c <_vfiprintf_r+0x11c>
   1e12e:	4b51      	ldr	r3, [pc, #324]	; (1e274 <_vfiprintf_r+0x214>)
   1e130:	429c      	cmp	r4, r3
   1e132:	d101      	bne.n	1e138 <_vfiprintf_r+0xd8>
   1e134:	68b4      	ldr	r4, [r6, #8]
   1e136:	e7a3      	b.n	1e080 <_vfiprintf_r+0x20>
   1e138:	4b4f      	ldr	r3, [pc, #316]	; (1e278 <_vfiprintf_r+0x218>)
   1e13a:	429c      	cmp	r4, r3
   1e13c:	bf08      	it	eq
   1e13e:	68f4      	ldreq	r4, [r6, #12]
   1e140:	e79e      	b.n	1e080 <_vfiprintf_r+0x20>
   1e142:	4621      	mov	r1, r4
   1e144:	4630      	mov	r0, r6
   1e146:	f7fd fda5 	bl	1bc94 <__swsetup_r>
   1e14a:	2800      	cmp	r0, #0
   1e14c:	d09e      	beq.n	1e08c <_vfiprintf_r+0x2c>
   1e14e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e152:	b01d      	add	sp, #116	; 0x74
   1e154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e158:	2b25      	cmp	r3, #37	; 0x25
   1e15a:	d0a7      	beq.n	1e0ac <_vfiprintf_r+0x4c>
   1e15c:	46a8      	mov	r8, r5
   1e15e:	e7a0      	b.n	1e0a2 <_vfiprintf_r+0x42>
   1e160:	4a43      	ldr	r2, [pc, #268]	; (1e270 <_vfiprintf_r+0x210>)
   1e162:	4645      	mov	r5, r8
   1e164:	1a80      	subs	r0, r0, r2
   1e166:	fa0b f000 	lsl.w	r0, fp, r0
   1e16a:	4318      	orrs	r0, r3
   1e16c:	9004      	str	r0, [sp, #16]
   1e16e:	e7bb      	b.n	1e0e8 <_vfiprintf_r+0x88>
   1e170:	9a03      	ldr	r2, [sp, #12]
   1e172:	1d11      	adds	r1, r2, #4
   1e174:	6812      	ldr	r2, [r2, #0]
   1e176:	9103      	str	r1, [sp, #12]
   1e178:	2a00      	cmp	r2, #0
   1e17a:	db01      	blt.n	1e180 <_vfiprintf_r+0x120>
   1e17c:	9207      	str	r2, [sp, #28]
   1e17e:	e004      	b.n	1e18a <_vfiprintf_r+0x12a>
   1e180:	4252      	negs	r2, r2
   1e182:	f043 0302 	orr.w	r3, r3, #2
   1e186:	9207      	str	r2, [sp, #28]
   1e188:	9304      	str	r3, [sp, #16]
   1e18a:	f898 3000 	ldrb.w	r3, [r8]
   1e18e:	2b2e      	cmp	r3, #46	; 0x2e
   1e190:	d110      	bne.n	1e1b4 <_vfiprintf_r+0x154>
   1e192:	f898 3001 	ldrb.w	r3, [r8, #1]
   1e196:	f108 0101 	add.w	r1, r8, #1
   1e19a:	2b2a      	cmp	r3, #42	; 0x2a
   1e19c:	d137      	bne.n	1e20e <_vfiprintf_r+0x1ae>
   1e19e:	9b03      	ldr	r3, [sp, #12]
   1e1a0:	f108 0802 	add.w	r8, r8, #2
   1e1a4:	1d1a      	adds	r2, r3, #4
   1e1a6:	681b      	ldr	r3, [r3, #0]
   1e1a8:	9203      	str	r2, [sp, #12]
   1e1aa:	2b00      	cmp	r3, #0
   1e1ac:	bfb8      	it	lt
   1e1ae:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1e1b2:	9305      	str	r3, [sp, #20]
   1e1b4:	4d31      	ldr	r5, [pc, #196]	; (1e27c <_vfiprintf_r+0x21c>)
   1e1b6:	2203      	movs	r2, #3
   1e1b8:	f898 1000 	ldrb.w	r1, [r8]
   1e1bc:	4628      	mov	r0, r5
   1e1be:	f7fa fe63 	bl	18e88 <memchr>
   1e1c2:	b140      	cbz	r0, 1e1d6 <_vfiprintf_r+0x176>
   1e1c4:	2340      	movs	r3, #64	; 0x40
   1e1c6:	1b40      	subs	r0, r0, r5
   1e1c8:	fa03 f000 	lsl.w	r0, r3, r0
   1e1cc:	9b04      	ldr	r3, [sp, #16]
   1e1ce:	f108 0801 	add.w	r8, r8, #1
   1e1d2:	4303      	orrs	r3, r0
   1e1d4:	9304      	str	r3, [sp, #16]
   1e1d6:	f898 1000 	ldrb.w	r1, [r8]
   1e1da:	2206      	movs	r2, #6
   1e1dc:	4828      	ldr	r0, [pc, #160]	; (1e280 <_vfiprintf_r+0x220>)
   1e1de:	f108 0701 	add.w	r7, r8, #1
   1e1e2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1e1e6:	f7fa fe4f 	bl	18e88 <memchr>
   1e1ea:	2800      	cmp	r0, #0
   1e1ec:	d034      	beq.n	1e258 <_vfiprintf_r+0x1f8>
   1e1ee:	4b25      	ldr	r3, [pc, #148]	; (1e284 <_vfiprintf_r+0x224>)
   1e1f0:	bb03      	cbnz	r3, 1e234 <_vfiprintf_r+0x1d4>
   1e1f2:	9b03      	ldr	r3, [sp, #12]
   1e1f4:	3307      	adds	r3, #7
   1e1f6:	f023 0307 	bic.w	r3, r3, #7
   1e1fa:	3308      	adds	r3, #8
   1e1fc:	9303      	str	r3, [sp, #12]
   1e1fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e200:	444b      	add	r3, r9
   1e202:	9309      	str	r3, [sp, #36]	; 0x24
   1e204:	e74c      	b.n	1e0a0 <_vfiprintf_r+0x40>
   1e206:	fb00 3202 	mla	r2, r0, r2, r3
   1e20a:	2101      	movs	r1, #1
   1e20c:	e786      	b.n	1e11c <_vfiprintf_r+0xbc>
   1e20e:	2300      	movs	r3, #0
   1e210:	250a      	movs	r5, #10
   1e212:	4618      	mov	r0, r3
   1e214:	9305      	str	r3, [sp, #20]
   1e216:	4688      	mov	r8, r1
   1e218:	f898 2000 	ldrb.w	r2, [r8]
   1e21c:	3101      	adds	r1, #1
   1e21e:	3a30      	subs	r2, #48	; 0x30
   1e220:	2a09      	cmp	r2, #9
   1e222:	d903      	bls.n	1e22c <_vfiprintf_r+0x1cc>
   1e224:	2b00      	cmp	r3, #0
   1e226:	d0c5      	beq.n	1e1b4 <_vfiprintf_r+0x154>
   1e228:	9005      	str	r0, [sp, #20]
   1e22a:	e7c3      	b.n	1e1b4 <_vfiprintf_r+0x154>
   1e22c:	fb05 2000 	mla	r0, r5, r0, r2
   1e230:	2301      	movs	r3, #1
   1e232:	e7f0      	b.n	1e216 <_vfiprintf_r+0x1b6>
   1e234:	ab03      	add	r3, sp, #12
   1e236:	9300      	str	r3, [sp, #0]
   1e238:	4622      	mov	r2, r4
   1e23a:	4b13      	ldr	r3, [pc, #76]	; (1e288 <_vfiprintf_r+0x228>)
   1e23c:	a904      	add	r1, sp, #16
   1e23e:	4630      	mov	r0, r6
   1e240:	f7fb fa4e 	bl	196e0 <_printf_float>
   1e244:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1e248:	4681      	mov	r9, r0
   1e24a:	d1d8      	bne.n	1e1fe <_vfiprintf_r+0x19e>
   1e24c:	89a3      	ldrh	r3, [r4, #12]
   1e24e:	065b      	lsls	r3, r3, #25
   1e250:	f53f af7d 	bmi.w	1e14e <_vfiprintf_r+0xee>
   1e254:	9809      	ldr	r0, [sp, #36]	; 0x24
   1e256:	e77c      	b.n	1e152 <_vfiprintf_r+0xf2>
   1e258:	ab03      	add	r3, sp, #12
   1e25a:	9300      	str	r3, [sp, #0]
   1e25c:	4622      	mov	r2, r4
   1e25e:	4b0a      	ldr	r3, [pc, #40]	; (1e288 <_vfiprintf_r+0x228>)
   1e260:	a904      	add	r1, sp, #16
   1e262:	4630      	mov	r0, r6
   1e264:	f7fb fcec 	bl	19c40 <_printf_i>
   1e268:	e7ec      	b.n	1e244 <_vfiprintf_r+0x1e4>
   1e26a:	bf00      	nop
   1e26c:	0002024c 	.word	0x0002024c
   1e270:	0002062c 	.word	0x0002062c
   1e274:	0002026c 	.word	0x0002026c
   1e278:	0002022c 	.word	0x0002022c
   1e27c:	00020632 	.word	0x00020632
   1e280:	00020636 	.word	0x00020636
   1e284:	000196e1 	.word	0x000196e1
   1e288:	0001e03d 	.word	0x0001e03d

0001e28c <__svfiscanf_r>:
__svfscanf_r():
   1e28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e290:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1e294:	9301      	str	r3, [sp, #4]
   1e296:	2300      	movs	r3, #0
   1e298:	4606      	mov	r6, r0
   1e29a:	460c      	mov	r4, r1
   1e29c:	4692      	mov	sl, r2
   1e29e:	270a      	movs	r7, #10
   1e2a0:	9346      	str	r3, [sp, #280]	; 0x118
   1e2a2:	9347      	str	r3, [sp, #284]	; 0x11c
   1e2a4:	4b9f      	ldr	r3, [pc, #636]	; (1e524 <__svfiscanf_r+0x298>)
   1e2a6:	f10d 080c 	add.w	r8, sp, #12
   1e2aa:	93a2      	str	r3, [sp, #648]	; 0x288
   1e2ac:	4b9e      	ldr	r3, [pc, #632]	; (1e528 <__svfiscanf_r+0x29c>)
   1e2ae:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1e52c <__svfiscanf_r+0x2a0>
   1e2b2:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1e2b6:	93a3      	str	r3, [sp, #652]	; 0x28c
   1e2b8:	f89a 3000 	ldrb.w	r3, [sl]
   1e2bc:	2b00      	cmp	r3, #0
   1e2be:	f000 812f 	beq.w	1e520 <__svfiscanf_r+0x294>
   1e2c2:	f7fa fd4d 	bl	18d60 <__locale_ctype_ptr>
   1e2c6:	f89a b000 	ldrb.w	fp, [sl]
   1e2ca:	4458      	add	r0, fp
   1e2cc:	7843      	ldrb	r3, [r0, #1]
   1e2ce:	f013 0308 	ands.w	r3, r3, #8
   1e2d2:	d143      	bne.n	1e35c <__svfiscanf_r+0xd0>
   1e2d4:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1e2d8:	f10a 0501 	add.w	r5, sl, #1
   1e2dc:	f040 8099 	bne.w	1e412 <__svfiscanf_r+0x186>
   1e2e0:	9345      	str	r3, [sp, #276]	; 0x114
   1e2e2:	9343      	str	r3, [sp, #268]	; 0x10c
   1e2e4:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1e2e8:	2b2a      	cmp	r3, #42	; 0x2a
   1e2ea:	d103      	bne.n	1e2f4 <__svfiscanf_r+0x68>
   1e2ec:	2310      	movs	r3, #16
   1e2ee:	f10a 0502 	add.w	r5, sl, #2
   1e2f2:	9343      	str	r3, [sp, #268]	; 0x10c
   1e2f4:	7829      	ldrb	r1, [r5, #0]
   1e2f6:	46aa      	mov	sl, r5
   1e2f8:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1e2fc:	2a09      	cmp	r2, #9
   1e2fe:	f105 0501 	add.w	r5, r5, #1
   1e302:	d941      	bls.n	1e388 <__svfiscanf_r+0xfc>
   1e304:	2203      	movs	r2, #3
   1e306:	4889      	ldr	r0, [pc, #548]	; (1e52c <__svfiscanf_r+0x2a0>)
   1e308:	f7fa fdbe 	bl	18e88 <memchr>
   1e30c:	b138      	cbz	r0, 1e31e <__svfiscanf_r+0x92>
   1e30e:	eba0 0309 	sub.w	r3, r0, r9
   1e312:	2001      	movs	r0, #1
   1e314:	46aa      	mov	sl, r5
   1e316:	4098      	lsls	r0, r3
   1e318:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e31a:	4318      	orrs	r0, r3
   1e31c:	9043      	str	r0, [sp, #268]	; 0x10c
   1e31e:	f89a 3000 	ldrb.w	r3, [sl]
   1e322:	f10a 0501 	add.w	r5, sl, #1
   1e326:	2b67      	cmp	r3, #103	; 0x67
   1e328:	d84a      	bhi.n	1e3c0 <__svfiscanf_r+0x134>
   1e32a:	2b65      	cmp	r3, #101	; 0x65
   1e32c:	f080 80b7 	bcs.w	1e49e <__svfiscanf_r+0x212>
   1e330:	2b47      	cmp	r3, #71	; 0x47
   1e332:	d82f      	bhi.n	1e394 <__svfiscanf_r+0x108>
   1e334:	2b45      	cmp	r3, #69	; 0x45
   1e336:	f080 80b2 	bcs.w	1e49e <__svfiscanf_r+0x212>
   1e33a:	2b00      	cmp	r3, #0
   1e33c:	f000 8082 	beq.w	1e444 <__svfiscanf_r+0x1b8>
   1e340:	2b25      	cmp	r3, #37	; 0x25
   1e342:	d066      	beq.n	1e412 <__svfiscanf_r+0x186>
   1e344:	2303      	movs	r3, #3
   1e346:	9744      	str	r7, [sp, #272]	; 0x110
   1e348:	9349      	str	r3, [sp, #292]	; 0x124
   1e34a:	e045      	b.n	1e3d8 <__svfiscanf_r+0x14c>
   1e34c:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1e34e:	3301      	adds	r3, #1
   1e350:	3101      	adds	r1, #1
   1e352:	9147      	str	r1, [sp, #284]	; 0x11c
   1e354:	6861      	ldr	r1, [r4, #4]
   1e356:	6023      	str	r3, [r4, #0]
   1e358:	3901      	subs	r1, #1
   1e35a:	6061      	str	r1, [r4, #4]
   1e35c:	6863      	ldr	r3, [r4, #4]
   1e35e:	2b00      	cmp	r3, #0
   1e360:	dd0b      	ble.n	1e37a <__svfiscanf_r+0xee>
   1e362:	f7fa fcfd 	bl	18d60 <__locale_ctype_ptr>
   1e366:	6823      	ldr	r3, [r4, #0]
   1e368:	7819      	ldrb	r1, [r3, #0]
   1e36a:	4408      	add	r0, r1
   1e36c:	7841      	ldrb	r1, [r0, #1]
   1e36e:	070d      	lsls	r5, r1, #28
   1e370:	d4ec      	bmi.n	1e34c <__svfiscanf_r+0xc0>
   1e372:	f10a 0501 	add.w	r5, sl, #1
   1e376:	46aa      	mov	sl, r5
   1e378:	e79e      	b.n	1e2b8 <__svfiscanf_r+0x2c>
   1e37a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e37c:	4621      	mov	r1, r4
   1e37e:	4630      	mov	r0, r6
   1e380:	4798      	blx	r3
   1e382:	2800      	cmp	r0, #0
   1e384:	d0ed      	beq.n	1e362 <__svfiscanf_r+0xd6>
   1e386:	e7f4      	b.n	1e372 <__svfiscanf_r+0xe6>
   1e388:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1e38a:	fb07 1303 	mla	r3, r7, r3, r1
   1e38e:	3b30      	subs	r3, #48	; 0x30
   1e390:	9345      	str	r3, [sp, #276]	; 0x114
   1e392:	e7af      	b.n	1e2f4 <__svfiscanf_r+0x68>
   1e394:	2b5b      	cmp	r3, #91	; 0x5b
   1e396:	d061      	beq.n	1e45c <__svfiscanf_r+0x1d0>
   1e398:	d80c      	bhi.n	1e3b4 <__svfiscanf_r+0x128>
   1e39a:	2b58      	cmp	r3, #88	; 0x58
   1e39c:	d1d2      	bne.n	1e344 <__svfiscanf_r+0xb8>
   1e39e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e3a0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1e3a4:	9243      	str	r2, [sp, #268]	; 0x10c
   1e3a6:	2210      	movs	r2, #16
   1e3a8:	9244      	str	r2, [sp, #272]	; 0x110
   1e3aa:	2b6f      	cmp	r3, #111	; 0x6f
   1e3ac:	bfb4      	ite	lt
   1e3ae:	2303      	movlt	r3, #3
   1e3b0:	2304      	movge	r3, #4
   1e3b2:	e010      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e3b4:	2b63      	cmp	r3, #99	; 0x63
   1e3b6:	d05c      	beq.n	1e472 <__svfiscanf_r+0x1e6>
   1e3b8:	2b64      	cmp	r3, #100	; 0x64
   1e3ba:	d1c3      	bne.n	1e344 <__svfiscanf_r+0xb8>
   1e3bc:	9744      	str	r7, [sp, #272]	; 0x110
   1e3be:	e7f4      	b.n	1e3aa <__svfiscanf_r+0x11e>
   1e3c0:	2b70      	cmp	r3, #112	; 0x70
   1e3c2:	d042      	beq.n	1e44a <__svfiscanf_r+0x1be>
   1e3c4:	d81d      	bhi.n	1e402 <__svfiscanf_r+0x176>
   1e3c6:	2b6e      	cmp	r3, #110	; 0x6e
   1e3c8:	d059      	beq.n	1e47e <__svfiscanf_r+0x1f2>
   1e3ca:	d843      	bhi.n	1e454 <__svfiscanf_r+0x1c8>
   1e3cc:	2b69      	cmp	r3, #105	; 0x69
   1e3ce:	d1b9      	bne.n	1e344 <__svfiscanf_r+0xb8>
   1e3d0:	2300      	movs	r3, #0
   1e3d2:	9344      	str	r3, [sp, #272]	; 0x110
   1e3d4:	2303      	movs	r3, #3
   1e3d6:	9349      	str	r3, [sp, #292]	; 0x124
   1e3d8:	6863      	ldr	r3, [r4, #4]
   1e3da:	2b00      	cmp	r3, #0
   1e3dc:	dd61      	ble.n	1e4a2 <__svfiscanf_r+0x216>
   1e3de:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e3e0:	0659      	lsls	r1, r3, #25
   1e3e2:	d56f      	bpl.n	1e4c4 <__svfiscanf_r+0x238>
   1e3e4:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1e3e6:	2b02      	cmp	r3, #2
   1e3e8:	dc7c      	bgt.n	1e4e4 <__svfiscanf_r+0x258>
   1e3ea:	ab01      	add	r3, sp, #4
   1e3ec:	4622      	mov	r2, r4
   1e3ee:	a943      	add	r1, sp, #268	; 0x10c
   1e3f0:	4630      	mov	r0, r6
   1e3f2:	f000 f8c7 	bl	1e584 <_scanf_chars>
   1e3f6:	2801      	cmp	r0, #1
   1e3f8:	f000 8092 	beq.w	1e520 <__svfiscanf_r+0x294>
   1e3fc:	2802      	cmp	r0, #2
   1e3fe:	d1ba      	bne.n	1e376 <__svfiscanf_r+0xea>
   1e400:	e01d      	b.n	1e43e <__svfiscanf_r+0x1b2>
   1e402:	2b75      	cmp	r3, #117	; 0x75
   1e404:	d0da      	beq.n	1e3bc <__svfiscanf_r+0x130>
   1e406:	2b78      	cmp	r3, #120	; 0x78
   1e408:	d0c9      	beq.n	1e39e <__svfiscanf_r+0x112>
   1e40a:	2b73      	cmp	r3, #115	; 0x73
   1e40c:	d19a      	bne.n	1e344 <__svfiscanf_r+0xb8>
   1e40e:	2302      	movs	r3, #2
   1e410:	e7e1      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e412:	6863      	ldr	r3, [r4, #4]
   1e414:	2b00      	cmp	r3, #0
   1e416:	dd0c      	ble.n	1e432 <__svfiscanf_r+0x1a6>
   1e418:	6823      	ldr	r3, [r4, #0]
   1e41a:	781a      	ldrb	r2, [r3, #0]
   1e41c:	4593      	cmp	fp, r2
   1e41e:	d17f      	bne.n	1e520 <__svfiscanf_r+0x294>
   1e420:	3301      	adds	r3, #1
   1e422:	6862      	ldr	r2, [r4, #4]
   1e424:	6023      	str	r3, [r4, #0]
   1e426:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e428:	3a01      	subs	r2, #1
   1e42a:	3301      	adds	r3, #1
   1e42c:	6062      	str	r2, [r4, #4]
   1e42e:	9347      	str	r3, [sp, #284]	; 0x11c
   1e430:	e7a1      	b.n	1e376 <__svfiscanf_r+0xea>
   1e432:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e434:	4621      	mov	r1, r4
   1e436:	4630      	mov	r0, r6
   1e438:	4798      	blx	r3
   1e43a:	2800      	cmp	r0, #0
   1e43c:	d0ec      	beq.n	1e418 <__svfiscanf_r+0x18c>
   1e43e:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e440:	2800      	cmp	r0, #0
   1e442:	d163      	bne.n	1e50c <__svfiscanf_r+0x280>
   1e444:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e448:	e066      	b.n	1e518 <__svfiscanf_r+0x28c>
   1e44a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e44c:	f042 0220 	orr.w	r2, r2, #32
   1e450:	9243      	str	r2, [sp, #268]	; 0x10c
   1e452:	e7a4      	b.n	1e39e <__svfiscanf_r+0x112>
   1e454:	2308      	movs	r3, #8
   1e456:	9344      	str	r3, [sp, #272]	; 0x110
   1e458:	2304      	movs	r3, #4
   1e45a:	e7bc      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e45c:	4629      	mov	r1, r5
   1e45e:	4640      	mov	r0, r8
   1e460:	f000 f9fc 	bl	1e85c <__sccl>
   1e464:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e466:	4605      	mov	r5, r0
   1e468:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e46c:	9343      	str	r3, [sp, #268]	; 0x10c
   1e46e:	2301      	movs	r3, #1
   1e470:	e7b1      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e472:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e474:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e478:	9343      	str	r3, [sp, #268]	; 0x10c
   1e47a:	2300      	movs	r3, #0
   1e47c:	e7ab      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e47e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e480:	06d0      	lsls	r0, r2, #27
   1e482:	f53f af78 	bmi.w	1e376 <__svfiscanf_r+0xea>
   1e486:	f012 0f01 	tst.w	r2, #1
   1e48a:	9a01      	ldr	r2, [sp, #4]
   1e48c:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e48e:	f102 0104 	add.w	r1, r2, #4
   1e492:	9101      	str	r1, [sp, #4]
   1e494:	6812      	ldr	r2, [r2, #0]
   1e496:	bf14      	ite	ne
   1e498:	8013      	strhne	r3, [r2, #0]
   1e49a:	6013      	streq	r3, [r2, #0]
   1e49c:	e76b      	b.n	1e376 <__svfiscanf_r+0xea>
   1e49e:	2305      	movs	r3, #5
   1e4a0:	e799      	b.n	1e3d6 <__svfiscanf_r+0x14a>
   1e4a2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e4a4:	4621      	mov	r1, r4
   1e4a6:	4630      	mov	r0, r6
   1e4a8:	4798      	blx	r3
   1e4aa:	2800      	cmp	r0, #0
   1e4ac:	d097      	beq.n	1e3de <__svfiscanf_r+0x152>
   1e4ae:	e7c6      	b.n	1e43e <__svfiscanf_r+0x1b2>
   1e4b0:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1e4b2:	3201      	adds	r2, #1
   1e4b4:	9247      	str	r2, [sp, #284]	; 0x11c
   1e4b6:	6862      	ldr	r2, [r4, #4]
   1e4b8:	3a01      	subs	r2, #1
   1e4ba:	2a00      	cmp	r2, #0
   1e4bc:	6062      	str	r2, [r4, #4]
   1e4be:	dd0a      	ble.n	1e4d6 <__svfiscanf_r+0x24a>
   1e4c0:	3301      	adds	r3, #1
   1e4c2:	6023      	str	r3, [r4, #0]
   1e4c4:	f7fa fc4c 	bl	18d60 <__locale_ctype_ptr>
   1e4c8:	6823      	ldr	r3, [r4, #0]
   1e4ca:	781a      	ldrb	r2, [r3, #0]
   1e4cc:	4410      	add	r0, r2
   1e4ce:	7842      	ldrb	r2, [r0, #1]
   1e4d0:	0712      	lsls	r2, r2, #28
   1e4d2:	d4ed      	bmi.n	1e4b0 <__svfiscanf_r+0x224>
   1e4d4:	e786      	b.n	1e3e4 <__svfiscanf_r+0x158>
   1e4d6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e4d8:	4621      	mov	r1, r4
   1e4da:	4630      	mov	r0, r6
   1e4dc:	4798      	blx	r3
   1e4de:	2800      	cmp	r0, #0
   1e4e0:	d0f0      	beq.n	1e4c4 <__svfiscanf_r+0x238>
   1e4e2:	e7ac      	b.n	1e43e <__svfiscanf_r+0x1b2>
   1e4e4:	2b04      	cmp	r3, #4
   1e4e6:	dc06      	bgt.n	1e4f6 <__svfiscanf_r+0x26a>
   1e4e8:	ab01      	add	r3, sp, #4
   1e4ea:	4622      	mov	r2, r4
   1e4ec:	a943      	add	r1, sp, #268	; 0x10c
   1e4ee:	4630      	mov	r0, r6
   1e4f0:	f000 f8ac 	bl	1e64c <_scanf_i>
   1e4f4:	e77f      	b.n	1e3f6 <__svfiscanf_r+0x16a>
   1e4f6:	4b0e      	ldr	r3, [pc, #56]	; (1e530 <__svfiscanf_r+0x2a4>)
   1e4f8:	2b00      	cmp	r3, #0
   1e4fa:	f43f af3c 	beq.w	1e376 <__svfiscanf_r+0xea>
   1e4fe:	ab01      	add	r3, sp, #4
   1e500:	4622      	mov	r2, r4
   1e502:	a943      	add	r1, sp, #268	; 0x10c
   1e504:	4630      	mov	r0, r6
   1e506:	f7fb fcbb 	bl	19e80 <_scanf_float>
   1e50a:	e774      	b.n	1e3f6 <__svfiscanf_r+0x16a>
   1e50c:	89a3      	ldrh	r3, [r4, #12]
   1e50e:	f013 0f40 	tst.w	r3, #64	; 0x40
   1e512:	bf18      	it	ne
   1e514:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1e518:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1e51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e520:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e522:	e7f9      	b.n	1e518 <__svfiscanf_r+0x28c>
   1e524:	0001ea79 	.word	0x0001ea79
   1e528:	0001a411 	.word	0x0001a411
   1e52c:	00020632 	.word	0x00020632
   1e530:	00019e81 	.word	0x00019e81

0001e534 <_vfiscanf_r>:
_vfscanf_r():
   1e534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e538:	460c      	mov	r4, r1
   1e53a:	4616      	mov	r6, r2
   1e53c:	461f      	mov	r7, r3
   1e53e:	4605      	mov	r5, r0
   1e540:	b118      	cbz	r0, 1e54a <_vfiscanf_r+0x16>
   1e542:	6983      	ldr	r3, [r0, #24]
   1e544:	b90b      	cbnz	r3, 1e54a <_vfiscanf_r+0x16>
   1e546:	f7fa fb3d 	bl	18bc4 <__sinit>
   1e54a:	4b0b      	ldr	r3, [pc, #44]	; (1e578 <_vfiscanf_r+0x44>)
   1e54c:	429c      	cmp	r4, r3
   1e54e:	d108      	bne.n	1e562 <_vfiscanf_r+0x2e>
   1e550:	686c      	ldr	r4, [r5, #4]
   1e552:	463b      	mov	r3, r7
   1e554:	4632      	mov	r2, r6
   1e556:	4621      	mov	r1, r4
   1e558:	4628      	mov	r0, r5
   1e55a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1e55e:	f7ff be95 	b.w	1e28c <__svfiscanf_r>
   1e562:	4b06      	ldr	r3, [pc, #24]	; (1e57c <_vfiscanf_r+0x48>)
   1e564:	429c      	cmp	r4, r3
   1e566:	d101      	bne.n	1e56c <_vfiscanf_r+0x38>
   1e568:	68ac      	ldr	r4, [r5, #8]
   1e56a:	e7f2      	b.n	1e552 <_vfiscanf_r+0x1e>
   1e56c:	4b04      	ldr	r3, [pc, #16]	; (1e580 <_vfiscanf_r+0x4c>)
   1e56e:	429c      	cmp	r4, r3
   1e570:	bf08      	it	eq
   1e572:	68ec      	ldreq	r4, [r5, #12]
   1e574:	e7ed      	b.n	1e552 <_vfiscanf_r+0x1e>
   1e576:	bf00      	nop
   1e578:	0002024c 	.word	0x0002024c
   1e57c:	0002026c 	.word	0x0002026c
   1e580:	0002022c 	.word	0x0002022c

0001e584 <_scanf_chars>:
_scanf_chars():
   1e584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e588:	4615      	mov	r5, r2
   1e58a:	688a      	ldr	r2, [r1, #8]
   1e58c:	4680      	mov	r8, r0
   1e58e:	460c      	mov	r4, r1
   1e590:	b932      	cbnz	r2, 1e5a0 <_scanf_chars+0x1c>
   1e592:	698a      	ldr	r2, [r1, #24]
   1e594:	2a00      	cmp	r2, #0
   1e596:	bf0c      	ite	eq
   1e598:	2201      	moveq	r2, #1
   1e59a:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   1e59e:	608a      	str	r2, [r1, #8]
   1e5a0:	2600      	movs	r6, #0
   1e5a2:	6822      	ldr	r2, [r4, #0]
   1e5a4:	06d1      	lsls	r1, r2, #27
   1e5a6:	bf5f      	itttt	pl
   1e5a8:	681a      	ldrpl	r2, [r3, #0]
   1e5aa:	1d11      	addpl	r1, r2, #4
   1e5ac:	6019      	strpl	r1, [r3, #0]
   1e5ae:	6817      	ldrpl	r7, [r2, #0]
   1e5b0:	69a3      	ldr	r3, [r4, #24]
   1e5b2:	b1db      	cbz	r3, 1e5ec <_scanf_chars+0x68>
   1e5b4:	2b01      	cmp	r3, #1
   1e5b6:	d107      	bne.n	1e5c8 <_scanf_chars+0x44>
   1e5b8:	682b      	ldr	r3, [r5, #0]
   1e5ba:	6962      	ldr	r2, [r4, #20]
   1e5bc:	781b      	ldrb	r3, [r3, #0]
   1e5be:	5cd3      	ldrb	r3, [r2, r3]
   1e5c0:	b9a3      	cbnz	r3, 1e5ec <_scanf_chars+0x68>
   1e5c2:	2e00      	cmp	r6, #0
   1e5c4:	d131      	bne.n	1e62a <_scanf_chars+0xa6>
   1e5c6:	e006      	b.n	1e5d6 <_scanf_chars+0x52>
   1e5c8:	2b02      	cmp	r3, #2
   1e5ca:	d007      	beq.n	1e5dc <_scanf_chars+0x58>
   1e5cc:	2e00      	cmp	r6, #0
   1e5ce:	d12c      	bne.n	1e62a <_scanf_chars+0xa6>
   1e5d0:	69a3      	ldr	r3, [r4, #24]
   1e5d2:	2b01      	cmp	r3, #1
   1e5d4:	d129      	bne.n	1e62a <_scanf_chars+0xa6>
   1e5d6:	2001      	movs	r0, #1
   1e5d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e5dc:	f7fa fbc0 	bl	18d60 <__locale_ctype_ptr>
   1e5e0:	682b      	ldr	r3, [r5, #0]
   1e5e2:	781b      	ldrb	r3, [r3, #0]
   1e5e4:	4418      	add	r0, r3
   1e5e6:	7843      	ldrb	r3, [r0, #1]
   1e5e8:	071b      	lsls	r3, r3, #28
   1e5ea:	d4ef      	bmi.n	1e5cc <_scanf_chars+0x48>
   1e5ec:	6823      	ldr	r3, [r4, #0]
   1e5ee:	3601      	adds	r6, #1
   1e5f0:	06da      	lsls	r2, r3, #27
   1e5f2:	bf5e      	ittt	pl
   1e5f4:	682b      	ldrpl	r3, [r5, #0]
   1e5f6:	781b      	ldrbpl	r3, [r3, #0]
   1e5f8:	703b      	strbpl	r3, [r7, #0]
   1e5fa:	682a      	ldr	r2, [r5, #0]
   1e5fc:	686b      	ldr	r3, [r5, #4]
   1e5fe:	f102 0201 	add.w	r2, r2, #1
   1e602:	602a      	str	r2, [r5, #0]
   1e604:	68a2      	ldr	r2, [r4, #8]
   1e606:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1e60a:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   1e60e:	606b      	str	r3, [r5, #4]
   1e610:	bf58      	it	pl
   1e612:	3701      	addpl	r7, #1
   1e614:	60a2      	str	r2, [r4, #8]
   1e616:	b142      	cbz	r2, 1e62a <_scanf_chars+0xa6>
   1e618:	2b00      	cmp	r3, #0
   1e61a:	dcc9      	bgt.n	1e5b0 <_scanf_chars+0x2c>
   1e61c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e620:	4629      	mov	r1, r5
   1e622:	4640      	mov	r0, r8
   1e624:	4798      	blx	r3
   1e626:	2800      	cmp	r0, #0
   1e628:	d0c2      	beq.n	1e5b0 <_scanf_chars+0x2c>
   1e62a:	6823      	ldr	r3, [r4, #0]
   1e62c:	f013 0310 	ands.w	r3, r3, #16
   1e630:	d105      	bne.n	1e63e <_scanf_chars+0xba>
   1e632:	68e2      	ldr	r2, [r4, #12]
   1e634:	3201      	adds	r2, #1
   1e636:	60e2      	str	r2, [r4, #12]
   1e638:	69a2      	ldr	r2, [r4, #24]
   1e63a:	b102      	cbz	r2, 1e63e <_scanf_chars+0xba>
   1e63c:	703b      	strb	r3, [r7, #0]
   1e63e:	6923      	ldr	r3, [r4, #16]
   1e640:	2000      	movs	r0, #0
   1e642:	441e      	add	r6, r3
   1e644:	6126      	str	r6, [r4, #16]
   1e646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e64a:	Address 0x000000000001e64a is out of bounds.


0001e64c <_scanf_i>:
_scanf_i():
   1e64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e650:	460c      	mov	r4, r1
   1e652:	469a      	mov	sl, r3
   1e654:	4b74      	ldr	r3, [pc, #464]	; (1e828 <_scanf_i+0x1dc>)
   1e656:	b087      	sub	sp, #28
   1e658:	4683      	mov	fp, r0
   1e65a:	4616      	mov	r6, r2
   1e65c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1e660:	ab03      	add	r3, sp, #12
   1e662:	68a7      	ldr	r7, [r4, #8]
   1e664:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   1e668:	4b70      	ldr	r3, [pc, #448]	; (1e82c <_scanf_i+0x1e0>)
   1e66a:	69a1      	ldr	r1, [r4, #24]
   1e66c:	4a70      	ldr	r2, [pc, #448]	; (1e830 <_scanf_i+0x1e4>)
   1e66e:	f104 091c 	add.w	r9, r4, #28
   1e672:	2903      	cmp	r1, #3
   1e674:	bf18      	it	ne
   1e676:	461a      	movne	r2, r3
   1e678:	1e7b      	subs	r3, r7, #1
   1e67a:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   1e67e:	bf84      	itt	hi
   1e680:	f240 135d 	movwhi	r3, #349	; 0x15d
   1e684:	60a3      	strhi	r3, [r4, #8]
   1e686:	6823      	ldr	r3, [r4, #0]
   1e688:	bf88      	it	hi
   1e68a:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   1e68e:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   1e692:	6023      	str	r3, [r4, #0]
   1e694:	bf98      	it	ls
   1e696:	2700      	movls	r7, #0
   1e698:	464b      	mov	r3, r9
   1e69a:	f04f 0800 	mov.w	r8, #0
   1e69e:	9200      	str	r2, [sp, #0]
   1e6a0:	bf88      	it	hi
   1e6a2:	197f      	addhi	r7, r7, r5
   1e6a4:	6831      	ldr	r1, [r6, #0]
   1e6a6:	9301      	str	r3, [sp, #4]
   1e6a8:	ab03      	add	r3, sp, #12
   1e6aa:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   1e6ae:	2202      	movs	r2, #2
   1e6b0:	7809      	ldrb	r1, [r1, #0]
   1e6b2:	f7fa fbe9 	bl	18e88 <memchr>
   1e6b6:	9b01      	ldr	r3, [sp, #4]
   1e6b8:	b328      	cbz	r0, 1e706 <_scanf_i+0xba>
   1e6ba:	f1b8 0f01 	cmp.w	r8, #1
   1e6be:	d156      	bne.n	1e76e <_scanf_i+0x122>
   1e6c0:	6862      	ldr	r2, [r4, #4]
   1e6c2:	b92a      	cbnz	r2, 1e6d0 <_scanf_i+0x84>
   1e6c4:	2208      	movs	r2, #8
   1e6c6:	6062      	str	r2, [r4, #4]
   1e6c8:	6822      	ldr	r2, [r4, #0]
   1e6ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1e6ce:	6022      	str	r2, [r4, #0]
   1e6d0:	6822      	ldr	r2, [r4, #0]
   1e6d2:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   1e6d6:	6022      	str	r2, [r4, #0]
   1e6d8:	68a2      	ldr	r2, [r4, #8]
   1e6da:	1e51      	subs	r1, r2, #1
   1e6dc:	60a1      	str	r1, [r4, #8]
   1e6de:	b192      	cbz	r2, 1e706 <_scanf_i+0xba>
   1e6e0:	6832      	ldr	r2, [r6, #0]
   1e6e2:	1c5d      	adds	r5, r3, #1
   1e6e4:	1c51      	adds	r1, r2, #1
   1e6e6:	6031      	str	r1, [r6, #0]
   1e6e8:	7812      	ldrb	r2, [r2, #0]
   1e6ea:	701a      	strb	r2, [r3, #0]
   1e6ec:	6873      	ldr	r3, [r6, #4]
   1e6ee:	3b01      	subs	r3, #1
   1e6f0:	2b00      	cmp	r3, #0
   1e6f2:	6073      	str	r3, [r6, #4]
   1e6f4:	dc06      	bgt.n	1e704 <_scanf_i+0xb8>
   1e6f6:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e6fa:	4631      	mov	r1, r6
   1e6fc:	4658      	mov	r0, fp
   1e6fe:	4798      	blx	r3
   1e700:	2800      	cmp	r0, #0
   1e702:	d177      	bne.n	1e7f4 <_scanf_i+0x1a8>
   1e704:	462b      	mov	r3, r5
   1e706:	f108 0801 	add.w	r8, r8, #1
   1e70a:	f1b8 0f03 	cmp.w	r8, #3
   1e70e:	d1c9      	bne.n	1e6a4 <_scanf_i+0x58>
   1e710:	6862      	ldr	r2, [r4, #4]
   1e712:	b90a      	cbnz	r2, 1e718 <_scanf_i+0xcc>
   1e714:	220a      	movs	r2, #10
   1e716:	6062      	str	r2, [r4, #4]
   1e718:	6862      	ldr	r2, [r4, #4]
   1e71a:	4946      	ldr	r1, [pc, #280]	; (1e834 <_scanf_i+0x1e8>)
   1e71c:	6960      	ldr	r0, [r4, #20]
   1e71e:	1a89      	subs	r1, r1, r2
   1e720:	9301      	str	r3, [sp, #4]
   1e722:	f000 f89b 	bl	1e85c <__sccl>
   1e726:	9b01      	ldr	r3, [sp, #4]
   1e728:	f04f 0800 	mov.w	r8, #0
   1e72c:	461d      	mov	r5, r3
   1e72e:	68a3      	ldr	r3, [r4, #8]
   1e730:	2b00      	cmp	r3, #0
   1e732:	d039      	beq.n	1e7a8 <_scanf_i+0x15c>
   1e734:	6831      	ldr	r1, [r6, #0]
   1e736:	6960      	ldr	r0, [r4, #20]
   1e738:	780a      	ldrb	r2, [r1, #0]
   1e73a:	5c80      	ldrb	r0, [r0, r2]
   1e73c:	2800      	cmp	r0, #0
   1e73e:	d033      	beq.n	1e7a8 <_scanf_i+0x15c>
   1e740:	2a30      	cmp	r2, #48	; 0x30
   1e742:	6822      	ldr	r2, [r4, #0]
   1e744:	d121      	bne.n	1e78a <_scanf_i+0x13e>
   1e746:	0510      	lsls	r0, r2, #20
   1e748:	d51f      	bpl.n	1e78a <_scanf_i+0x13e>
   1e74a:	f108 0801 	add.w	r8, r8, #1
   1e74e:	b117      	cbz	r7, 1e756 <_scanf_i+0x10a>
   1e750:	3301      	adds	r3, #1
   1e752:	3f01      	subs	r7, #1
   1e754:	60a3      	str	r3, [r4, #8]
   1e756:	6873      	ldr	r3, [r6, #4]
   1e758:	3b01      	subs	r3, #1
   1e75a:	2b00      	cmp	r3, #0
   1e75c:	6073      	str	r3, [r6, #4]
   1e75e:	dd1c      	ble.n	1e79a <_scanf_i+0x14e>
   1e760:	6833      	ldr	r3, [r6, #0]
   1e762:	3301      	adds	r3, #1
   1e764:	6033      	str	r3, [r6, #0]
   1e766:	68a3      	ldr	r3, [r4, #8]
   1e768:	3b01      	subs	r3, #1
   1e76a:	60a3      	str	r3, [r4, #8]
   1e76c:	e7df      	b.n	1e72e <_scanf_i+0xe2>
   1e76e:	f1b8 0f02 	cmp.w	r8, #2
   1e772:	d1b1      	bne.n	1e6d8 <_scanf_i+0x8c>
   1e774:	6822      	ldr	r2, [r4, #0]
   1e776:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   1e77a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   1e77e:	d1c2      	bne.n	1e706 <_scanf_i+0xba>
   1e780:	2110      	movs	r1, #16
   1e782:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   1e786:	6061      	str	r1, [r4, #4]
   1e788:	e7a5      	b.n	1e6d6 <_scanf_i+0x8a>
   1e78a:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   1e78e:	6022      	str	r2, [r4, #0]
   1e790:	780b      	ldrb	r3, [r1, #0]
   1e792:	3501      	adds	r5, #1
   1e794:	f805 3c01 	strb.w	r3, [r5, #-1]
   1e798:	e7dd      	b.n	1e756 <_scanf_i+0x10a>
   1e79a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e79e:	4631      	mov	r1, r6
   1e7a0:	4658      	mov	r0, fp
   1e7a2:	4798      	blx	r3
   1e7a4:	2800      	cmp	r0, #0
   1e7a6:	d0de      	beq.n	1e766 <_scanf_i+0x11a>
   1e7a8:	6823      	ldr	r3, [r4, #0]
   1e7aa:	05d9      	lsls	r1, r3, #23
   1e7ac:	d50c      	bpl.n	1e7c8 <_scanf_i+0x17c>
   1e7ae:	454d      	cmp	r5, r9
   1e7b0:	d908      	bls.n	1e7c4 <_scanf_i+0x178>
   1e7b2:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1e7b6:	1e6f      	subs	r7, r5, #1
   1e7b8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e7bc:	4632      	mov	r2, r6
   1e7be:	4658      	mov	r0, fp
   1e7c0:	4798      	blx	r3
   1e7c2:	463d      	mov	r5, r7
   1e7c4:	454d      	cmp	r5, r9
   1e7c6:	d02c      	beq.n	1e822 <_scanf_i+0x1d6>
   1e7c8:	6822      	ldr	r2, [r4, #0]
   1e7ca:	f012 0210 	ands.w	r2, r2, #16
   1e7ce:	d11e      	bne.n	1e80e <_scanf_i+0x1c2>
   1e7d0:	702a      	strb	r2, [r5, #0]
   1e7d2:	6863      	ldr	r3, [r4, #4]
   1e7d4:	4649      	mov	r1, r9
   1e7d6:	4658      	mov	r0, fp
   1e7d8:	9e00      	ldr	r6, [sp, #0]
   1e7da:	47b0      	blx	r6
   1e7dc:	6822      	ldr	r2, [r4, #0]
   1e7de:	f8da 3000 	ldr.w	r3, [sl]
   1e7e2:	f012 0f20 	tst.w	r2, #32
   1e7e6:	d008      	beq.n	1e7fa <_scanf_i+0x1ae>
   1e7e8:	1d1a      	adds	r2, r3, #4
   1e7ea:	f8ca 2000 	str.w	r2, [sl]
   1e7ee:	681b      	ldr	r3, [r3, #0]
   1e7f0:	6018      	str	r0, [r3, #0]
   1e7f2:	e009      	b.n	1e808 <_scanf_i+0x1bc>
   1e7f4:	f04f 0800 	mov.w	r8, #0
   1e7f8:	e7d6      	b.n	1e7a8 <_scanf_i+0x15c>
   1e7fa:	07d2      	lsls	r2, r2, #31
   1e7fc:	d5f4      	bpl.n	1e7e8 <_scanf_i+0x19c>
   1e7fe:	1d1a      	adds	r2, r3, #4
   1e800:	f8ca 2000 	str.w	r2, [sl]
   1e804:	681b      	ldr	r3, [r3, #0]
   1e806:	8018      	strh	r0, [r3, #0]
   1e808:	68e3      	ldr	r3, [r4, #12]
   1e80a:	3301      	adds	r3, #1
   1e80c:	60e3      	str	r3, [r4, #12]
   1e80e:	2000      	movs	r0, #0
   1e810:	eba5 0509 	sub.w	r5, r5, r9
   1e814:	44a8      	add	r8, r5
   1e816:	6925      	ldr	r5, [r4, #16]
   1e818:	4445      	add	r5, r8
   1e81a:	6125      	str	r5, [r4, #16]
   1e81c:	b007      	add	sp, #28
   1e81e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e822:	2001      	movs	r0, #1
   1e824:	e7fa      	b.n	1e81c <_scanf_i+0x1d0>
   1e826:	bf00      	nop
   1e828:	00020640 	.word	0x00020640
   1e82c:	0001e9b5 	.word	0x0001e9b5
   1e830:	0001b661 	.word	0x0001b661
   1e834:	0002065c 	.word	0x0002065c

0001e838 <_read_r>:
_read_r():
   1e838:	b538      	push	{r3, r4, r5, lr}
   1e83a:	4605      	mov	r5, r0
   1e83c:	4608      	mov	r0, r1
   1e83e:	4611      	mov	r1, r2
   1e840:	2200      	movs	r2, #0
   1e842:	4c05      	ldr	r4, [pc, #20]	; (1e858 <_read_r+0x20>)
   1e844:	6022      	str	r2, [r4, #0]
   1e846:	461a      	mov	r2, r3
   1e848:	f7f6 fab0 	bl	14dac <_read>
   1e84c:	1c43      	adds	r3, r0, #1
   1e84e:	d102      	bne.n	1e856 <_read_r+0x1e>
   1e850:	6823      	ldr	r3, [r4, #0]
   1e852:	b103      	cbz	r3, 1e856 <_read_r+0x1e>
   1e854:	602b      	str	r3, [r5, #0]
   1e856:	bd38      	pop	{r3, r4, r5, pc}
   1e858:	2007c7b0 	.word	0x2007c7b0

0001e85c <__sccl>:
__sccl():
   1e85c:	b570      	push	{r4, r5, r6, lr}
   1e85e:	780b      	ldrb	r3, [r1, #0]
   1e860:	1e44      	subs	r4, r0, #1
   1e862:	2b5e      	cmp	r3, #94	; 0x5e
   1e864:	bf13      	iteet	ne
   1e866:	1c4a      	addne	r2, r1, #1
   1e868:	1c8a      	addeq	r2, r1, #2
   1e86a:	784b      	ldrbeq	r3, [r1, #1]
   1e86c:	2100      	movne	r1, #0
   1e86e:	bf08      	it	eq
   1e870:	2101      	moveq	r1, #1
   1e872:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   1e876:	f804 1f01 	strb.w	r1, [r4, #1]!
   1e87a:	42a5      	cmp	r5, r4
   1e87c:	d1fb      	bne.n	1e876 <__sccl+0x1a>
   1e87e:	b913      	cbnz	r3, 1e886 <__sccl+0x2a>
   1e880:	3a01      	subs	r2, #1
   1e882:	4610      	mov	r0, r2
   1e884:	bd70      	pop	{r4, r5, r6, pc}
   1e886:	f081 0401 	eor.w	r4, r1, #1
   1e88a:	4611      	mov	r1, r2
   1e88c:	54c4      	strb	r4, [r0, r3]
   1e88e:	780d      	ldrb	r5, [r1, #0]
   1e890:	1c4a      	adds	r2, r1, #1
   1e892:	2d2d      	cmp	r5, #45	; 0x2d
   1e894:	d006      	beq.n	1e8a4 <__sccl+0x48>
   1e896:	2d5d      	cmp	r5, #93	; 0x5d
   1e898:	d0f3      	beq.n	1e882 <__sccl+0x26>
   1e89a:	b90d      	cbnz	r5, 1e8a0 <__sccl+0x44>
   1e89c:	460a      	mov	r2, r1
   1e89e:	e7f0      	b.n	1e882 <__sccl+0x26>
   1e8a0:	462b      	mov	r3, r5
   1e8a2:	e7f2      	b.n	1e88a <__sccl+0x2e>
   1e8a4:	784e      	ldrb	r6, [r1, #1]
   1e8a6:	2e5d      	cmp	r6, #93	; 0x5d
   1e8a8:	d0fa      	beq.n	1e8a0 <__sccl+0x44>
   1e8aa:	42b3      	cmp	r3, r6
   1e8ac:	dcf8      	bgt.n	1e8a0 <__sccl+0x44>
   1e8ae:	3102      	adds	r1, #2
   1e8b0:	3301      	adds	r3, #1
   1e8b2:	429e      	cmp	r6, r3
   1e8b4:	54c4      	strb	r4, [r0, r3]
   1e8b6:	dcfb      	bgt.n	1e8b0 <__sccl+0x54>
   1e8b8:	e7e9      	b.n	1e88e <__sccl+0x32>

0001e8ba <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   1e8ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e8be:	4680      	mov	r8, r0
   1e8c0:	4689      	mov	r9, r1
   1e8c2:	4692      	mov	sl, r2
   1e8c4:	461e      	mov	r6, r3
   1e8c6:	460f      	mov	r7, r1
   1e8c8:	463d      	mov	r5, r7
   1e8ca:	9808      	ldr	r0, [sp, #32]
   1e8cc:	f815 4b01 	ldrb.w	r4, [r5], #1
   1e8d0:	f7fa fa42 	bl	18d58 <__locale_ctype_ptr_l>
   1e8d4:	4420      	add	r0, r4
   1e8d6:	7843      	ldrb	r3, [r0, #1]
   1e8d8:	f013 0308 	ands.w	r3, r3, #8
   1e8dc:	d10a      	bne.n	1e8f4 <_strtoul_l.isra.0+0x3a>
   1e8de:	2c2d      	cmp	r4, #45	; 0x2d
   1e8e0:	d10a      	bne.n	1e8f8 <_strtoul_l.isra.0+0x3e>
   1e8e2:	2301      	movs	r3, #1
   1e8e4:	782c      	ldrb	r4, [r5, #0]
   1e8e6:	1cbd      	adds	r5, r7, #2
   1e8e8:	b15e      	cbz	r6, 1e902 <_strtoul_l.isra.0+0x48>
   1e8ea:	2e10      	cmp	r6, #16
   1e8ec:	d113      	bne.n	1e916 <_strtoul_l.isra.0+0x5c>
   1e8ee:	2c30      	cmp	r4, #48	; 0x30
   1e8f0:	d009      	beq.n	1e906 <_strtoul_l.isra.0+0x4c>
   1e8f2:	e010      	b.n	1e916 <_strtoul_l.isra.0+0x5c>
   1e8f4:	462f      	mov	r7, r5
   1e8f6:	e7e7      	b.n	1e8c8 <_strtoul_l.isra.0+0xe>
   1e8f8:	2c2b      	cmp	r4, #43	; 0x2b
   1e8fa:	bf04      	itt	eq
   1e8fc:	782c      	ldrbeq	r4, [r5, #0]
   1e8fe:	1cbd      	addeq	r5, r7, #2
   1e900:	e7f2      	b.n	1e8e8 <_strtoul_l.isra.0+0x2e>
   1e902:	2c30      	cmp	r4, #48	; 0x30
   1e904:	d125      	bne.n	1e952 <_strtoul_l.isra.0+0x98>
   1e906:	782a      	ldrb	r2, [r5, #0]
   1e908:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   1e90c:	2a58      	cmp	r2, #88	; 0x58
   1e90e:	d14a      	bne.n	1e9a6 <_strtoul_l.isra.0+0xec>
   1e910:	2610      	movs	r6, #16
   1e912:	786c      	ldrb	r4, [r5, #1]
   1e914:	3502      	adds	r5, #2
   1e916:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1e91a:	fbb1 f1f6 	udiv	r1, r1, r6
   1e91e:	2700      	movs	r7, #0
   1e920:	fb06 fe01 	mul.w	lr, r6, r1
   1e924:	4638      	mov	r0, r7
   1e926:	ea6f 0e0e 	mvn.w	lr, lr
   1e92a:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   1e92e:	2a09      	cmp	r2, #9
   1e930:	d811      	bhi.n	1e956 <_strtoul_l.isra.0+0x9c>
   1e932:	4614      	mov	r4, r2
   1e934:	42a6      	cmp	r6, r4
   1e936:	dd1d      	ble.n	1e974 <_strtoul_l.isra.0+0xba>
   1e938:	2f00      	cmp	r7, #0
   1e93a:	db18      	blt.n	1e96e <_strtoul_l.isra.0+0xb4>
   1e93c:	4281      	cmp	r1, r0
   1e93e:	d316      	bcc.n	1e96e <_strtoul_l.isra.0+0xb4>
   1e940:	d101      	bne.n	1e946 <_strtoul_l.isra.0+0x8c>
   1e942:	45a6      	cmp	lr, r4
   1e944:	db13      	blt.n	1e96e <_strtoul_l.isra.0+0xb4>
   1e946:	2701      	movs	r7, #1
   1e948:	fb00 4006 	mla	r0, r0, r6, r4
   1e94c:	f815 4b01 	ldrb.w	r4, [r5], #1
   1e950:	e7eb      	b.n	1e92a <_strtoul_l.isra.0+0x70>
   1e952:	260a      	movs	r6, #10
   1e954:	e7df      	b.n	1e916 <_strtoul_l.isra.0+0x5c>
   1e956:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   1e95a:	2a19      	cmp	r2, #25
   1e95c:	d801      	bhi.n	1e962 <_strtoul_l.isra.0+0xa8>
   1e95e:	3c37      	subs	r4, #55	; 0x37
   1e960:	e7e8      	b.n	1e934 <_strtoul_l.isra.0+0x7a>
   1e962:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   1e966:	2a19      	cmp	r2, #25
   1e968:	d804      	bhi.n	1e974 <_strtoul_l.isra.0+0xba>
   1e96a:	3c57      	subs	r4, #87	; 0x57
   1e96c:	e7e2      	b.n	1e934 <_strtoul_l.isra.0+0x7a>
   1e96e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1e972:	e7eb      	b.n	1e94c <_strtoul_l.isra.0+0x92>
   1e974:	2f00      	cmp	r7, #0
   1e976:	da09      	bge.n	1e98c <_strtoul_l.isra.0+0xd2>
   1e978:	2322      	movs	r3, #34	; 0x22
   1e97a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e97e:	f8c8 3000 	str.w	r3, [r8]
   1e982:	f1ba 0f00 	cmp.w	sl, #0
   1e986:	d107      	bne.n	1e998 <_strtoul_l.isra.0+0xde>
   1e988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e98c:	b103      	cbz	r3, 1e990 <_strtoul_l.isra.0+0xd6>
   1e98e:	4240      	negs	r0, r0
   1e990:	f1ba 0f00 	cmp.w	sl, #0
   1e994:	d00c      	beq.n	1e9b0 <_strtoul_l.isra.0+0xf6>
   1e996:	b127      	cbz	r7, 1e9a2 <_strtoul_l.isra.0+0xe8>
   1e998:	3d01      	subs	r5, #1
   1e99a:	f8ca 5000 	str.w	r5, [sl]
   1e99e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e9a2:	464d      	mov	r5, r9
   1e9a4:	e7f9      	b.n	1e99a <_strtoul_l.isra.0+0xe0>
   1e9a6:	2430      	movs	r4, #48	; 0x30
   1e9a8:	2e00      	cmp	r6, #0
   1e9aa:	d1b4      	bne.n	1e916 <_strtoul_l.isra.0+0x5c>
   1e9ac:	2608      	movs	r6, #8
   1e9ae:	e7b2      	b.n	1e916 <_strtoul_l.isra.0+0x5c>
   1e9b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001e9b4 <_strtoul_r>:
_strtoul_r():
   1e9b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1e9b6:	4c06      	ldr	r4, [pc, #24]	; (1e9d0 <_strtoul_r+0x1c>)
   1e9b8:	4d06      	ldr	r5, [pc, #24]	; (1e9d4 <_strtoul_r+0x20>)
   1e9ba:	6824      	ldr	r4, [r4, #0]
   1e9bc:	6a24      	ldr	r4, [r4, #32]
   1e9be:	2c00      	cmp	r4, #0
   1e9c0:	bf08      	it	eq
   1e9c2:	462c      	moveq	r4, r5
   1e9c4:	9400      	str	r4, [sp, #0]
   1e9c6:	f7ff ff78 	bl	1e8ba <_strtoul_l.isra.0>
   1e9ca:	b003      	add	sp, #12
   1e9cc:	bd30      	pop	{r4, r5, pc}
   1e9ce:	bf00      	nop
   1e9d0:	2007c0e0 	.word	0x2007c0e0
   1e9d4:	2007c144 	.word	0x2007c144

0001e9d8 <strtoul>:
strtoul():
   1e9d8:	4b08      	ldr	r3, [pc, #32]	; (1e9fc <strtoul+0x24>)
   1e9da:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1e9dc:	681c      	ldr	r4, [r3, #0]
   1e9de:	4d08      	ldr	r5, [pc, #32]	; (1ea00 <strtoul+0x28>)
   1e9e0:	6a23      	ldr	r3, [r4, #32]
   1e9e2:	2b00      	cmp	r3, #0
   1e9e4:	bf08      	it	eq
   1e9e6:	462b      	moveq	r3, r5
   1e9e8:	9300      	str	r3, [sp, #0]
   1e9ea:	4613      	mov	r3, r2
   1e9ec:	460a      	mov	r2, r1
   1e9ee:	4601      	mov	r1, r0
   1e9f0:	4620      	mov	r0, r4
   1e9f2:	f7ff ff62 	bl	1e8ba <_strtoul_l.isra.0>
   1e9f6:	b003      	add	sp, #12
   1e9f8:	bd30      	pop	{r4, r5, pc}
   1e9fa:	bf00      	nop
   1e9fc:	2007c0e0 	.word	0x2007c0e0
   1ea00:	2007c144 	.word	0x2007c144

0001ea04 <__submore>:
__submore():
   1ea04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ea08:	460c      	mov	r4, r1
   1ea0a:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1ea0c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ea10:	4299      	cmp	r1, r3
   1ea12:	d11c      	bne.n	1ea4e <__submore+0x4a>
   1ea14:	f44f 6180 	mov.w	r1, #1024	; 0x400
   1ea18:	f7fa fd72 	bl	19500 <_malloc_r>
   1ea1c:	b918      	cbnz	r0, 1ea26 <__submore+0x22>
   1ea1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ea22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ea26:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1ea2a:	63a3      	str	r3, [r4, #56]	; 0x38
   1ea2c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   1ea30:	6360      	str	r0, [r4, #52]	; 0x34
   1ea32:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   1ea36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   1ea3a:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   1ea3e:	7043      	strb	r3, [r0, #1]
   1ea40:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1ea44:	7003      	strb	r3, [r0, #0]
   1ea46:	6020      	str	r0, [r4, #0]
   1ea48:	2000      	movs	r0, #0
   1ea4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ea4e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   1ea50:	0077      	lsls	r7, r6, #1
   1ea52:	463a      	mov	r2, r7
   1ea54:	f7fe ffb8 	bl	1d9c8 <_realloc_r>
   1ea58:	4605      	mov	r5, r0
   1ea5a:	2800      	cmp	r0, #0
   1ea5c:	d0df      	beq.n	1ea1e <__submore+0x1a>
   1ea5e:	eb00 0806 	add.w	r8, r0, r6
   1ea62:	4601      	mov	r1, r0
   1ea64:	4632      	mov	r2, r6
   1ea66:	4640      	mov	r0, r8
   1ea68:	f7fa fa2b 	bl	18ec2 <memcpy>
   1ea6c:	f8c4 8000 	str.w	r8, [r4]
   1ea70:	6365      	str	r5, [r4, #52]	; 0x34
   1ea72:	63a7      	str	r7, [r4, #56]	; 0x38
   1ea74:	e7e8      	b.n	1ea48 <__submore+0x44>
   1ea76:	Address 0x000000000001ea76 is out of bounds.


0001ea78 <_ungetc_r>:
_ungetc_r():
   1ea78:	1c4b      	adds	r3, r1, #1
   1ea7a:	b570      	push	{r4, r5, r6, lr}
   1ea7c:	4606      	mov	r6, r0
   1ea7e:	460d      	mov	r5, r1
   1ea80:	4614      	mov	r4, r2
   1ea82:	d103      	bne.n	1ea8c <_ungetc_r+0x14>
   1ea84:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1ea88:	4628      	mov	r0, r5
   1ea8a:	bd70      	pop	{r4, r5, r6, pc}
   1ea8c:	b118      	cbz	r0, 1ea96 <_ungetc_r+0x1e>
   1ea8e:	6983      	ldr	r3, [r0, #24]
   1ea90:	b90b      	cbnz	r3, 1ea96 <_ungetc_r+0x1e>
   1ea92:	f7fa f897 	bl	18bc4 <__sinit>
   1ea96:	4b2e      	ldr	r3, [pc, #184]	; (1eb50 <_ungetc_r+0xd8>)
   1ea98:	429c      	cmp	r4, r3
   1ea9a:	d12c      	bne.n	1eaf6 <_ungetc_r+0x7e>
   1ea9c:	6874      	ldr	r4, [r6, #4]
   1ea9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1eaa2:	f023 0320 	bic.w	r3, r3, #32
   1eaa6:	81a3      	strh	r3, [r4, #12]
   1eaa8:	b29b      	uxth	r3, r3
   1eaaa:	0759      	lsls	r1, r3, #29
   1eaac:	d413      	bmi.n	1ead6 <_ungetc_r+0x5e>
   1eaae:	06da      	lsls	r2, r3, #27
   1eab0:	d5e8      	bpl.n	1ea84 <_ungetc_r+0xc>
   1eab2:	071b      	lsls	r3, r3, #28
   1eab4:	d50b      	bpl.n	1eace <_ungetc_r+0x56>
   1eab6:	4621      	mov	r1, r4
   1eab8:	4630      	mov	r0, r6
   1eaba:	f7fa f807 	bl	18acc <_fflush_r>
   1eabe:	2800      	cmp	r0, #0
   1eac0:	d1e0      	bne.n	1ea84 <_ungetc_r+0xc>
   1eac2:	89a3      	ldrh	r3, [r4, #12]
   1eac4:	60a0      	str	r0, [r4, #8]
   1eac6:	f023 0308 	bic.w	r3, r3, #8
   1eaca:	81a3      	strh	r3, [r4, #12]
   1eacc:	61a0      	str	r0, [r4, #24]
   1eace:	89a3      	ldrh	r3, [r4, #12]
   1ead0:	f043 0304 	orr.w	r3, r3, #4
   1ead4:	81a3      	strh	r3, [r4, #12]
   1ead6:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1ead8:	b2ed      	uxtb	r5, r5
   1eada:	6862      	ldr	r2, [r4, #4]
   1eadc:	b1e3      	cbz	r3, 1eb18 <_ungetc_r+0xa0>
   1eade:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1eae0:	429a      	cmp	r2, r3
   1eae2:	da12      	bge.n	1eb0a <_ungetc_r+0x92>
   1eae4:	6823      	ldr	r3, [r4, #0]
   1eae6:	1e5a      	subs	r2, r3, #1
   1eae8:	6022      	str	r2, [r4, #0]
   1eaea:	f803 5c01 	strb.w	r5, [r3, #-1]
   1eaee:	6863      	ldr	r3, [r4, #4]
   1eaf0:	3301      	adds	r3, #1
   1eaf2:	6063      	str	r3, [r4, #4]
   1eaf4:	e7c8      	b.n	1ea88 <_ungetc_r+0x10>
   1eaf6:	4b17      	ldr	r3, [pc, #92]	; (1eb54 <_ungetc_r+0xdc>)
   1eaf8:	429c      	cmp	r4, r3
   1eafa:	d101      	bne.n	1eb00 <_ungetc_r+0x88>
   1eafc:	68b4      	ldr	r4, [r6, #8]
   1eafe:	e7ce      	b.n	1ea9e <_ungetc_r+0x26>
   1eb00:	4b15      	ldr	r3, [pc, #84]	; (1eb58 <_ungetc_r+0xe0>)
   1eb02:	429c      	cmp	r4, r3
   1eb04:	bf08      	it	eq
   1eb06:	68f4      	ldreq	r4, [r6, #12]
   1eb08:	e7c9      	b.n	1ea9e <_ungetc_r+0x26>
   1eb0a:	4621      	mov	r1, r4
   1eb0c:	4630      	mov	r0, r6
   1eb0e:	f7ff ff79 	bl	1ea04 <__submore>
   1eb12:	2800      	cmp	r0, #0
   1eb14:	d0e6      	beq.n	1eae4 <_ungetc_r+0x6c>
   1eb16:	e7b5      	b.n	1ea84 <_ungetc_r+0xc>
   1eb18:	6921      	ldr	r1, [r4, #16]
   1eb1a:	6823      	ldr	r3, [r4, #0]
   1eb1c:	b151      	cbz	r1, 1eb34 <_ungetc_r+0xbc>
   1eb1e:	4299      	cmp	r1, r3
   1eb20:	d208      	bcs.n	1eb34 <_ungetc_r+0xbc>
   1eb22:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1eb26:	428d      	cmp	r5, r1
   1eb28:	d104      	bne.n	1eb34 <_ungetc_r+0xbc>
   1eb2a:	3b01      	subs	r3, #1
   1eb2c:	3201      	adds	r2, #1
   1eb2e:	6023      	str	r3, [r4, #0]
   1eb30:	6062      	str	r2, [r4, #4]
   1eb32:	e7a9      	b.n	1ea88 <_ungetc_r+0x10>
   1eb34:	63e3      	str	r3, [r4, #60]	; 0x3c
   1eb36:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1eb3a:	6363      	str	r3, [r4, #52]	; 0x34
   1eb3c:	2303      	movs	r3, #3
   1eb3e:	63a3      	str	r3, [r4, #56]	; 0x38
   1eb40:	4623      	mov	r3, r4
   1eb42:	6422      	str	r2, [r4, #64]	; 0x40
   1eb44:	f803 5f46 	strb.w	r5, [r3, #70]!
   1eb48:	6023      	str	r3, [r4, #0]
   1eb4a:	2301      	movs	r3, #1
   1eb4c:	e7d1      	b.n	1eaf2 <_ungetc_r+0x7a>
   1eb4e:	bf00      	nop
   1eb50:	0002024c 	.word	0x0002024c
   1eb54:	0002026c 	.word	0x0002026c
   1eb58:	0002022c 	.word	0x0002022c

0001eb5c <__env_lock>:
__env_lock():
   1eb5c:	4770      	bx	lr

0001eb5e <__env_unlock>:
__env_unlock():
   1eb5e:	4770      	bx	lr

0001eb60 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   1eb60:	f851 0c04 	ldr.w	r0, [r1, #-4]
   1eb64:	2800      	cmp	r0, #0
   1eb66:	f1a0 0004 	sub.w	r0, r0, #4
   1eb6a:	bfbc      	itt	lt
   1eb6c:	580b      	ldrlt	r3, [r1, r0]
   1eb6e:	18c0      	addlt	r0, r0, r3
   1eb70:	4770      	bx	lr
   1eb72:	Address 0x000000000001eb72 is out of bounds.


0001eb74 <__aeabi_dmul>:
__muldf3():
   1eb74:	b570      	push	{r4, r5, r6, lr}
   1eb76:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1eb7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1eb7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1eb82:	bf1d      	ittte	ne
   1eb84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1eb88:	ea94 0f0c 	teqne	r4, ip
   1eb8c:	ea95 0f0c 	teqne	r5, ip
   1eb90:	f000 f8de 	bleq	1ed50 <__aeabi_dmul+0x1dc>
   1eb94:	442c      	add	r4, r5
   1eb96:	ea81 0603 	eor.w	r6, r1, r3
   1eb9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1eb9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1eba2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1eba6:	bf18      	it	ne
   1eba8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1ebac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ebb0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1ebb4:	d038      	beq.n	1ec28 <__aeabi_dmul+0xb4>
   1ebb6:	fba0 ce02 	umull	ip, lr, r0, r2
   1ebba:	f04f 0500 	mov.w	r5, #0
   1ebbe:	fbe1 e502 	umlal	lr, r5, r1, r2
   1ebc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1ebc6:	fbe0 e503 	umlal	lr, r5, r0, r3
   1ebca:	f04f 0600 	mov.w	r6, #0
   1ebce:	fbe1 5603 	umlal	r5, r6, r1, r3
   1ebd2:	f09c 0f00 	teq	ip, #0
   1ebd6:	bf18      	it	ne
   1ebd8:	f04e 0e01 	orrne.w	lr, lr, #1
   1ebdc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1ebe0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1ebe4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1ebe8:	d204      	bcs.n	1ebf4 <__aeabi_dmul+0x80>
   1ebea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1ebee:	416d      	adcs	r5, r5
   1ebf0:	eb46 0606 	adc.w	r6, r6, r6
   1ebf4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1ebf8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1ebfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1ec00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1ec04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1ec08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1ec0c:	bf88      	it	hi
   1ec0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1ec12:	d81e      	bhi.n	1ec52 <__aeabi_dmul+0xde>
   1ec14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1ec18:	bf08      	it	eq
   1ec1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1ec1e:	f150 0000 	adcs.w	r0, r0, #0
   1ec22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1ec26:	bd70      	pop	{r4, r5, r6, pc}
   1ec28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1ec2c:	ea46 0101 	orr.w	r1, r6, r1
   1ec30:	ea40 0002 	orr.w	r0, r0, r2
   1ec34:	ea81 0103 	eor.w	r1, r1, r3
   1ec38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1ec3c:	bfc2      	ittt	gt
   1ec3e:	ebd4 050c 	rsbsgt	r5, r4, ip
   1ec42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1ec46:	bd70      	popgt	{r4, r5, r6, pc}
   1ec48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ec4c:	f04f 0e00 	mov.w	lr, #0
   1ec50:	3c01      	subs	r4, #1
   1ec52:	f300 80ab 	bgt.w	1edac <__aeabi_dmul+0x238>
   1ec56:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1ec5a:	bfde      	ittt	le
   1ec5c:	2000      	movle	r0, #0
   1ec5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1ec62:	bd70      	pople	{r4, r5, r6, pc}
   1ec64:	f1c4 0400 	rsb	r4, r4, #0
   1ec68:	3c20      	subs	r4, #32
   1ec6a:	da35      	bge.n	1ecd8 <__aeabi_dmul+0x164>
   1ec6c:	340c      	adds	r4, #12
   1ec6e:	dc1b      	bgt.n	1eca8 <__aeabi_dmul+0x134>
   1ec70:	f104 0414 	add.w	r4, r4, #20
   1ec74:	f1c4 0520 	rsb	r5, r4, #32
   1ec78:	fa00 f305 	lsl.w	r3, r0, r5
   1ec7c:	fa20 f004 	lsr.w	r0, r0, r4
   1ec80:	fa01 f205 	lsl.w	r2, r1, r5
   1ec84:	ea40 0002 	orr.w	r0, r0, r2
   1ec88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1ec8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1ec90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1ec94:	fa21 f604 	lsr.w	r6, r1, r4
   1ec98:	eb42 0106 	adc.w	r1, r2, r6
   1ec9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1eca0:	bf08      	it	eq
   1eca2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1eca6:	bd70      	pop	{r4, r5, r6, pc}
   1eca8:	f1c4 040c 	rsb	r4, r4, #12
   1ecac:	f1c4 0520 	rsb	r5, r4, #32
   1ecb0:	fa00 f304 	lsl.w	r3, r0, r4
   1ecb4:	fa20 f005 	lsr.w	r0, r0, r5
   1ecb8:	fa01 f204 	lsl.w	r2, r1, r4
   1ecbc:	ea40 0002 	orr.w	r0, r0, r2
   1ecc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1ecc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1ecc8:	f141 0100 	adc.w	r1, r1, #0
   1eccc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1ecd0:	bf08      	it	eq
   1ecd2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1ecd6:	bd70      	pop	{r4, r5, r6, pc}
   1ecd8:	f1c4 0520 	rsb	r5, r4, #32
   1ecdc:	fa00 f205 	lsl.w	r2, r0, r5
   1ece0:	ea4e 0e02 	orr.w	lr, lr, r2
   1ece4:	fa20 f304 	lsr.w	r3, r0, r4
   1ece8:	fa01 f205 	lsl.w	r2, r1, r5
   1ecec:	ea43 0302 	orr.w	r3, r3, r2
   1ecf0:	fa21 f004 	lsr.w	r0, r1, r4
   1ecf4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1ecf8:	fa21 f204 	lsr.w	r2, r1, r4
   1ecfc:	ea20 0002 	bic.w	r0, r0, r2
   1ed00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1ed04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1ed08:	bf08      	it	eq
   1ed0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1ed0e:	bd70      	pop	{r4, r5, r6, pc}
   1ed10:	f094 0f00 	teq	r4, #0
   1ed14:	d10f      	bne.n	1ed36 <__aeabi_dmul+0x1c2>
   1ed16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1ed1a:	0040      	lsls	r0, r0, #1
   1ed1c:	eb41 0101 	adc.w	r1, r1, r1
   1ed20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1ed24:	bf08      	it	eq
   1ed26:	3c01      	subeq	r4, #1
   1ed28:	d0f7      	beq.n	1ed1a <__aeabi_dmul+0x1a6>
   1ed2a:	ea41 0106 	orr.w	r1, r1, r6
   1ed2e:	f095 0f00 	teq	r5, #0
   1ed32:	bf18      	it	ne
   1ed34:	4770      	bxne	lr
   1ed36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1ed3a:	0052      	lsls	r2, r2, #1
   1ed3c:	eb43 0303 	adc.w	r3, r3, r3
   1ed40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1ed44:	bf08      	it	eq
   1ed46:	3d01      	subeq	r5, #1
   1ed48:	d0f7      	beq.n	1ed3a <__aeabi_dmul+0x1c6>
   1ed4a:	ea43 0306 	orr.w	r3, r3, r6
   1ed4e:	4770      	bx	lr
   1ed50:	ea94 0f0c 	teq	r4, ip
   1ed54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1ed58:	bf18      	it	ne
   1ed5a:	ea95 0f0c 	teqne	r5, ip
   1ed5e:	d00c      	beq.n	1ed7a <__aeabi_dmul+0x206>
   1ed60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1ed64:	bf18      	it	ne
   1ed66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1ed6a:	d1d1      	bne.n	1ed10 <__aeabi_dmul+0x19c>
   1ed6c:	ea81 0103 	eor.w	r1, r1, r3
   1ed70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1ed74:	f04f 0000 	mov.w	r0, #0
   1ed78:	bd70      	pop	{r4, r5, r6, pc}
   1ed7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1ed7e:	bf06      	itte	eq
   1ed80:	4610      	moveq	r0, r2
   1ed82:	4619      	moveq	r1, r3
   1ed84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1ed88:	d019      	beq.n	1edbe <__aeabi_dmul+0x24a>
   1ed8a:	ea94 0f0c 	teq	r4, ip
   1ed8e:	d102      	bne.n	1ed96 <__aeabi_dmul+0x222>
   1ed90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1ed94:	d113      	bne.n	1edbe <__aeabi_dmul+0x24a>
   1ed96:	ea95 0f0c 	teq	r5, ip
   1ed9a:	d105      	bne.n	1eda8 <__aeabi_dmul+0x234>
   1ed9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1eda0:	bf1c      	itt	ne
   1eda2:	4610      	movne	r0, r2
   1eda4:	4619      	movne	r1, r3
   1eda6:	d10a      	bne.n	1edbe <__aeabi_dmul+0x24a>
   1eda8:	ea81 0103 	eor.w	r1, r1, r3
   1edac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1edb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1edb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1edb8:	f04f 0000 	mov.w	r0, #0
   1edbc:	bd70      	pop	{r4, r5, r6, pc}
   1edbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1edc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1edc6:	bd70      	pop	{r4, r5, r6, pc}

0001edc8 <__aeabi_ddiv>:
__divdf3():
   1edc8:	b570      	push	{r4, r5, r6, lr}
   1edca:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1edce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1edd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1edd6:	bf1d      	ittte	ne
   1edd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1eddc:	ea94 0f0c 	teqne	r4, ip
   1ede0:	ea95 0f0c 	teqne	r5, ip
   1ede4:	f000 f8a7 	bleq	1ef36 <__aeabi_ddiv+0x16e>
   1ede8:	eba4 0405 	sub.w	r4, r4, r5
   1edec:	ea81 0e03 	eor.w	lr, r1, r3
   1edf0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1edf4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1edf8:	f000 8088 	beq.w	1ef0c <__aeabi_ddiv+0x144>
   1edfc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1ee00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1ee04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1ee08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1ee0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1ee10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1ee14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1ee18:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1ee1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1ee20:	429d      	cmp	r5, r3
   1ee22:	bf08      	it	eq
   1ee24:	4296      	cmpeq	r6, r2
   1ee26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1ee2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1ee2e:	d202      	bcs.n	1ee36 <__aeabi_ddiv+0x6e>
   1ee30:	085b      	lsrs	r3, r3, #1
   1ee32:	ea4f 0232 	mov.w	r2, r2, rrx
   1ee36:	1ab6      	subs	r6, r6, r2
   1ee38:	eb65 0503 	sbc.w	r5, r5, r3
   1ee3c:	085b      	lsrs	r3, r3, #1
   1ee3e:	ea4f 0232 	mov.w	r2, r2, rrx
   1ee42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1ee46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1ee4a:	ebb6 0e02 	subs.w	lr, r6, r2
   1ee4e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1ee52:	bf22      	ittt	cs
   1ee54:	1ab6      	subcs	r6, r6, r2
   1ee56:	4675      	movcs	r5, lr
   1ee58:	ea40 000c 	orrcs.w	r0, r0, ip
   1ee5c:	085b      	lsrs	r3, r3, #1
   1ee5e:	ea4f 0232 	mov.w	r2, r2, rrx
   1ee62:	ebb6 0e02 	subs.w	lr, r6, r2
   1ee66:	eb75 0e03 	sbcs.w	lr, r5, r3
   1ee6a:	bf22      	ittt	cs
   1ee6c:	1ab6      	subcs	r6, r6, r2
   1ee6e:	4675      	movcs	r5, lr
   1ee70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1ee74:	085b      	lsrs	r3, r3, #1
   1ee76:	ea4f 0232 	mov.w	r2, r2, rrx
   1ee7a:	ebb6 0e02 	subs.w	lr, r6, r2
   1ee7e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1ee82:	bf22      	ittt	cs
   1ee84:	1ab6      	subcs	r6, r6, r2
   1ee86:	4675      	movcs	r5, lr
   1ee88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1ee8c:	085b      	lsrs	r3, r3, #1
   1ee8e:	ea4f 0232 	mov.w	r2, r2, rrx
   1ee92:	ebb6 0e02 	subs.w	lr, r6, r2
   1ee96:	eb75 0e03 	sbcs.w	lr, r5, r3
   1ee9a:	bf22      	ittt	cs
   1ee9c:	1ab6      	subcs	r6, r6, r2
   1ee9e:	4675      	movcs	r5, lr
   1eea0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1eea4:	ea55 0e06 	orrs.w	lr, r5, r6
   1eea8:	d018      	beq.n	1eedc <__aeabi_ddiv+0x114>
   1eeaa:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1eeae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1eeb2:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1eeb6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1eeba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1eebe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1eec2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1eec6:	d1c0      	bne.n	1ee4a <__aeabi_ddiv+0x82>
   1eec8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1eecc:	d10b      	bne.n	1eee6 <__aeabi_ddiv+0x11e>
   1eece:	ea41 0100 	orr.w	r1, r1, r0
   1eed2:	f04f 0000 	mov.w	r0, #0
   1eed6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1eeda:	e7b6      	b.n	1ee4a <__aeabi_ddiv+0x82>
   1eedc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1eee0:	bf04      	itt	eq
   1eee2:	4301      	orreq	r1, r0
   1eee4:	2000      	moveq	r0, #0
   1eee6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1eeea:	bf88      	it	hi
   1eeec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1eef0:	f63f aeaf 	bhi.w	1ec52 <__aeabi_dmul+0xde>
   1eef4:	ebb5 0c03 	subs.w	ip, r5, r3
   1eef8:	bf04      	itt	eq
   1eefa:	ebb6 0c02 	subseq.w	ip, r6, r2
   1eefe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1ef02:	f150 0000 	adcs.w	r0, r0, #0
   1ef06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1ef0a:	bd70      	pop	{r4, r5, r6, pc}
   1ef0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1ef10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1ef14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1ef18:	bfc2      	ittt	gt
   1ef1a:	ebd4 050c 	rsbsgt	r5, r4, ip
   1ef1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1ef22:	bd70      	popgt	{r4, r5, r6, pc}
   1ef24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ef28:	f04f 0e00 	mov.w	lr, #0
   1ef2c:	3c01      	subs	r4, #1
   1ef2e:	e690      	b.n	1ec52 <__aeabi_dmul+0xde>
   1ef30:	ea45 0e06 	orr.w	lr, r5, r6
   1ef34:	e68d      	b.n	1ec52 <__aeabi_dmul+0xde>
   1ef36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1ef3a:	ea94 0f0c 	teq	r4, ip
   1ef3e:	bf08      	it	eq
   1ef40:	ea95 0f0c 	teqeq	r5, ip
   1ef44:	f43f af3b 	beq.w	1edbe <__aeabi_dmul+0x24a>
   1ef48:	ea94 0f0c 	teq	r4, ip
   1ef4c:	d10a      	bne.n	1ef64 <__aeabi_ddiv+0x19c>
   1ef4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1ef52:	f47f af34 	bne.w	1edbe <__aeabi_dmul+0x24a>
   1ef56:	ea95 0f0c 	teq	r5, ip
   1ef5a:	f47f af25 	bne.w	1eda8 <__aeabi_dmul+0x234>
   1ef5e:	4610      	mov	r0, r2
   1ef60:	4619      	mov	r1, r3
   1ef62:	e72c      	b.n	1edbe <__aeabi_dmul+0x24a>
   1ef64:	ea95 0f0c 	teq	r5, ip
   1ef68:	d106      	bne.n	1ef78 <__aeabi_ddiv+0x1b0>
   1ef6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1ef6e:	f43f aefd 	beq.w	1ed6c <__aeabi_dmul+0x1f8>
   1ef72:	4610      	mov	r0, r2
   1ef74:	4619      	mov	r1, r3
   1ef76:	e722      	b.n	1edbe <__aeabi_dmul+0x24a>
   1ef78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1ef7c:	bf18      	it	ne
   1ef7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1ef82:	f47f aec5 	bne.w	1ed10 <__aeabi_dmul+0x19c>
   1ef86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1ef8a:	f47f af0d 	bne.w	1eda8 <__aeabi_dmul+0x234>
   1ef8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1ef92:	f47f aeeb 	bne.w	1ed6c <__aeabi_dmul+0x1f8>
   1ef96:	e712      	b.n	1edbe <__aeabi_dmul+0x24a>

0001ef98 <__gedf2>:
__gedf2():
   1ef98:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   1ef9c:	e006      	b.n	1efac <__cmpdf2+0x4>
   1ef9e:	bf00      	nop

0001efa0 <__ledf2>:
__ledf2():
   1efa0:	f04f 0c01 	mov.w	ip, #1
   1efa4:	e002      	b.n	1efac <__cmpdf2+0x4>
   1efa6:	bf00      	nop

0001efa8 <__cmpdf2>:
__nedf2():
   1efa8:	f04f 0c01 	mov.w	ip, #1
   1efac:	f84d cd04 	str.w	ip, [sp, #-4]!
   1efb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1efb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1efb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1efbc:	bf18      	it	ne
   1efbe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   1efc2:	d01b      	beq.n	1effc <__cmpdf2+0x54>
   1efc4:	b001      	add	sp, #4
   1efc6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   1efca:	bf0c      	ite	eq
   1efcc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   1efd0:	ea91 0f03 	teqne	r1, r3
   1efd4:	bf02      	ittt	eq
   1efd6:	ea90 0f02 	teqeq	r0, r2
   1efda:	2000      	moveq	r0, #0
   1efdc:	4770      	bxeq	lr
   1efde:	f110 0f00 	cmn.w	r0, #0
   1efe2:	ea91 0f03 	teq	r1, r3
   1efe6:	bf58      	it	pl
   1efe8:	4299      	cmppl	r1, r3
   1efea:	bf08      	it	eq
   1efec:	4290      	cmpeq	r0, r2
   1efee:	bf2c      	ite	cs
   1eff0:	17d8      	asrcs	r0, r3, #31
   1eff2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   1eff6:	f040 0001 	orr.w	r0, r0, #1
   1effa:	4770      	bx	lr
   1effc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1f000:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f004:	d102      	bne.n	1f00c <__cmpdf2+0x64>
   1f006:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1f00a:	d107      	bne.n	1f01c <__cmpdf2+0x74>
   1f00c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1f010:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f014:	d1d6      	bne.n	1efc4 <__cmpdf2+0x1c>
   1f016:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1f01a:	d0d3      	beq.n	1efc4 <__cmpdf2+0x1c>
   1f01c:	f85d 0b04 	ldr.w	r0, [sp], #4
   1f020:	4770      	bx	lr
   1f022:	bf00      	nop

0001f024 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   1f024:	4684      	mov	ip, r0
   1f026:	4610      	mov	r0, r2
   1f028:	4662      	mov	r2, ip
   1f02a:	468c      	mov	ip, r1
   1f02c:	4619      	mov	r1, r3
   1f02e:	4663      	mov	r3, ip
   1f030:	e000      	b.n	1f034 <__aeabi_cdcmpeq>
   1f032:	bf00      	nop

0001f034 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   1f034:	b501      	push	{r0, lr}
   1f036:	f7ff ffb7 	bl	1efa8 <__cmpdf2>
   1f03a:	2800      	cmp	r0, #0
   1f03c:	bf48      	it	mi
   1f03e:	f110 0f00 	cmnmi.w	r0, #0
   1f042:	bd01      	pop	{r0, pc}

0001f044 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   1f044:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f048:	f7ff fff4 	bl	1f034 <__aeabi_cdcmpeq>
   1f04c:	bf0c      	ite	eq
   1f04e:	2001      	moveq	r0, #1
   1f050:	2000      	movne	r0, #0
   1f052:	f85d fb08 	ldr.w	pc, [sp], #8
   1f056:	bf00      	nop

0001f058 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   1f058:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f05c:	f7ff ffea 	bl	1f034 <__aeabi_cdcmpeq>
   1f060:	bf34      	ite	cc
   1f062:	2001      	movcc	r0, #1
   1f064:	2000      	movcs	r0, #0
   1f066:	f85d fb08 	ldr.w	pc, [sp], #8
   1f06a:	bf00      	nop

0001f06c <__aeabi_dcmple>:
__aeabi_dcmple():
   1f06c:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f070:	f7ff ffe0 	bl	1f034 <__aeabi_cdcmpeq>
   1f074:	bf94      	ite	ls
   1f076:	2001      	movls	r0, #1
   1f078:	2000      	movhi	r0, #0
   1f07a:	f85d fb08 	ldr.w	pc, [sp], #8
   1f07e:	bf00      	nop

0001f080 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   1f080:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f084:	f7ff ffce 	bl	1f024 <__aeabi_cdrcmple>
   1f088:	bf94      	ite	ls
   1f08a:	2001      	movls	r0, #1
   1f08c:	2000      	movhi	r0, #0
   1f08e:	f85d fb08 	ldr.w	pc, [sp], #8
   1f092:	bf00      	nop

0001f094 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   1f094:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f098:	f7ff ffc4 	bl	1f024 <__aeabi_cdrcmple>
   1f09c:	bf34      	ite	cc
   1f09e:	2001      	movcc	r0, #1
   1f0a0:	2000      	movcs	r0, #0
   1f0a2:	f85d fb08 	ldr.w	pc, [sp], #8
   1f0a6:	bf00      	nop

0001f0a8 <__aeabi_dcmpun>:
__unorddf2():
   1f0a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1f0ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f0b0:	d102      	bne.n	1f0b8 <__aeabi_dcmpun+0x10>
   1f0b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1f0b6:	d10a      	bne.n	1f0ce <__aeabi_dcmpun+0x26>
   1f0b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1f0bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f0c0:	d102      	bne.n	1f0c8 <__aeabi_dcmpun+0x20>
   1f0c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1f0c6:	d102      	bne.n	1f0ce <__aeabi_dcmpun+0x26>
   1f0c8:	f04f 0000 	mov.w	r0, #0
   1f0cc:	4770      	bx	lr
   1f0ce:	f04f 0001 	mov.w	r0, #1
   1f0d2:	4770      	bx	lr

0001f0d4 <__aeabi_d2iz>:
__aeabi_d2iz():
   1f0d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1f0d8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1f0dc:	d215      	bcs.n	1f10a <__aeabi_d2iz+0x36>
   1f0de:	d511      	bpl.n	1f104 <__aeabi_d2iz+0x30>
   1f0e0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1f0e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1f0e8:	d912      	bls.n	1f110 <__aeabi_d2iz+0x3c>
   1f0ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1f0ee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1f0f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1f0f6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1f0fa:	fa23 f002 	lsr.w	r0, r3, r2
   1f0fe:	bf18      	it	ne
   1f100:	4240      	negne	r0, r0
   1f102:	4770      	bx	lr
   1f104:	f04f 0000 	mov.w	r0, #0
   1f108:	4770      	bx	lr
   1f10a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1f10e:	d105      	bne.n	1f11c <__aeabi_d2iz+0x48>
   1f110:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   1f114:	bf08      	it	eq
   1f116:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1f11a:	4770      	bx	lr
   1f11c:	f04f 0000 	mov.w	r0, #0
   1f120:	4770      	bx	lr
   1f122:	bf00      	nop
   1f124:	74737953 	.word	0x74737953
   1f128:	50206d65 	.word	0x50206d65
   1f12c:	7265776f 	.word	0x7265776f
   1f130:	3a6e6f2d 	.word	0x3a6e6f2d
   1f134:	6f6f4220 	.word	0x6f6f4220
   1f138:	676e6974 	.word	0x676e6974
   1f13c:	2e2e2e20 	.word	0x2e2e2e20
   1f140:	73795300 	.word	0x73795300
   1f144:	206d6574 	.word	0x206d6574
   1f148:	73617243 	.word	0x73617243
   1f14c:	52203a68 	.word	0x52203a68
   1f150:	6f622d65 	.word	0x6f622d65
   1f154:	6e69746f 	.word	0x6e69746f
   1f158:	2e2e2067 	.word	0x2e2e2067
   1f15c:	6157002e 	.word	0x6157002e
   1f160:	64686374 	.word	0x64686374
   1f164:	5320676f 	.word	0x5320676f
   1f168:	65747379 	.word	0x65747379
   1f16c:	6552206d 	.word	0x6552206d
   1f170:	3a746573 	.word	0x3a746573
   1f174:	6f6f4220 	.word	0x6f6f4220
   1f178:	676e6974 	.word	0x676e6974
   1f17c:	2e2e2e20 	.word	0x2e2e2e20
   1f180:	00          	.byte	0x00
   1f181:	55          	.byte	0x55
   1f182:	656e      	.short	0x656e
   1f184:	63657078 	.word	0x63657078
   1f188:	20646574 	.word	0x20646574
   1f18c:	20525349 	.word	0x20525349
   1f190:	6c6c6163 	.word	0x6c6c6163
   1f194:	20746120 	.word	0x20746120
   1f198:	5f63706c 	.word	0x5f63706c
   1f19c:	2e737973 	.word	0x2e737973
   1f1a0:	0063      	.short	0x0063
   1f1a2:	654d      	.short	0x654d
   1f1a4:	79726f6d 	.word	0x79726f6d
   1f1a8:	666e4920 	.word	0x666e4920
   1f1ac:	616d726f 	.word	0x616d726f
   1f1b0:	6e6f6974 	.word	0x6e6f6974
   1f1b4:	6c470a3a 	.word	0x6c470a3a
   1f1b8:	6c61626f 	.word	0x6c61626f
   1f1bc:	65735520 	.word	0x65735520
   1f1c0:	20202064 	.word	0x20202064
   1f1c4:	3525203a 	.word	0x3525203a
   1f1c8:	616d0a64 	.word	0x616d0a64
   1f1cc:	636f6c6c 	.word	0x636f6c6c
   1f1d0:	65735520 	.word	0x65735520
   1f1d4:	20202064 	.word	0x20202064
   1f1d8:	3525203a 	.word	0x3525203a
   1f1dc:	616d0a64 	.word	0x616d0a64
   1f1e0:	636f6c6c 	.word	0x636f6c6c
   1f1e4:	61764120 	.word	0x61764120
   1f1e8:	202e6c69 	.word	0x202e6c69
   1f1ec:	3525203a 	.word	0x3525203a
   1f1f0:	79530a64 	.word	0x79530a64
   1f1f4:	6d657473 	.word	0x6d657473
   1f1f8:	61764120 	.word	0x61764120
   1f1fc:	202e6c69 	.word	0x202e6c69
   1f200:	3525203a 	.word	0x3525203a
   1f204:	654e0a64 	.word	0x654e0a64
   1f208:	48207478 	.word	0x48207478
   1f20c:	20706165 	.word	0x20706165
   1f210:	20727470 	.word	0x20727470
   1f214:	3a202020 	.word	0x3a202020
   1f218:	25783020 	.word	0x25783020
   1f21c:	0a583830 	.word	0x0a583830
   1f220:	7473614c 	.word	0x7473614c
   1f224:	72627320 	.word	0x72627320
   1f228:	2029286b 	.word	0x2029286b
   1f22c:	20727470 	.word	0x20727470
   1f230:	30203a20 	.word	0x30203a20
   1f234:	38302578 	.word	0x38302578
   1f238:	614c0a58 	.word	0x614c0a58
   1f23c:	73207473 	.word	0x73207473
   1f240:	286b7262 	.word	0x286b7262
   1f244:	69732029 	.word	0x69732029
   1f248:	3a20657a 	.word	0x3a20657a
   1f24c:	0a752520 	.word	0x0a752520
   1f250:	206d754e 	.word	0x206d754e
   1f254:	72627320 	.word	0x72627320
   1f258:	2029286b 	.word	0x2029286b
   1f25c:	6c6c6163 	.word	0x6c6c6163
   1f260:	25203a73 	.word	0x25203a73
   1f264:	0a75      	.short	0x0a75
   1f266:	00          	.byte	0x00
   1f267:	25          	.byte	0x25
   1f268:	52492075 	.word	0x52492075
   1f26c:	61772051 	.word	0x61772051
   1f270:	72742073 	.word	0x72742073
   1f274:	65676769 	.word	0x65676769
   1f278:	2c646572 	.word	0x2c646572
   1f27c:	74756220 	.word	0x74756220
   1f280:	206f6e20 	.word	0x206f6e20
   1f284:	20515249 	.word	0x20515249
   1f288:	76726573 	.word	0x76726573
   1f28c:	20656369 	.word	0x20656369
   1f290:	20736177 	.word	0x20736177
   1f294:	69666564 	.word	0x69666564
   1f298:	2164656e 	.word	0x2164656e
   1f29c:	000a      	.short	0x000a
   1f29e:	4d4e      	.short	0x4d4e
   1f2a0:	61462049 	.word	0x61462049
   1f2a4:	0a746c75 	.word	0x0a746c75
   1f2a8:	6d654d00 	.word	0x6d654d00
   1f2ac:	75614620 	.word	0x75614620
   1f2b0:	000a746c 	.word	0x000a746c
   1f2b4:	20535542 	.word	0x20535542
   1f2b8:	6c756146 	.word	0x6c756146
   1f2bc:	55000a74 	.word	0x55000a74
   1f2c0:	65676173 	.word	0x65676173
   1f2c4:	75614620 	.word	0x75614620
   1f2c8:	000a746c 	.word	0x000a746c
   1f2cc:	4d474244 	.word	0x4d474244
   1f2d0:	46204e4f 	.word	0x46204e4f
   1f2d4:	746c7561 	.word	0x746c7561
   1f2d8:	5249000a 	.word	0x5249000a
   1f2dc:	6f6e2051 	.word	0x6f6e2051
   1f2e0:	65722074 	.word	0x65722074
   1f2e4:	74736967 	.word	0x74736967
   1f2e8:	64657265 	.word	0x64657265
   1f2ec:	616d0021 	.word	0x616d0021
   1f2f0:	29286e69 	.word	0x29286e69
   1f2f4:	6f687320 	.word	0x6f687320
   1f2f8:	20646c75 	.word	0x20646c75
   1f2fc:	6576656e 	.word	0x6576656e
   1f300:	78652072 	.word	0x78652072
   1f304:	6f207469 	.word	0x6f207469
   1f308:	6874206e 	.word	0x6874206e
   1f30c:	73207369 	.word	0x73207369
   1f310:	65747379 	.word	0x65747379
   1f314:	0a6d      	.short	0x0a6d
   1f316:	00          	.byte	0x00
   1f317:	e7          	.byte	0xe7
   1f318:	e7e7adde 	.word	0xe7e7adde
   1f31c:	65646f6e 	.word	0x65646f6e
   1f320:	00          	.byte	0x00
   1f321:	48          	.byte	0x48
   1f322:	4c45      	.short	0x4c45
   1f324:	000a4f4c 	.word	0x000a4f4c

0001f328 <ExCvt>:
   1f328:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   1f338:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   1f348:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   1f358:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   1f368:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   1f378:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   1f388:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   1f398:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

0001f3a8 <LfnOfs>:
   1f3a8:	07050301 12100e09 1c181614 8000ff1e              ..............

0001f3b6 <cst.6348>:
   1f3b6:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   1f3c6:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   1f3d6:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   1f3e6:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   1f3f6:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   1f406:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

0001f410 <vst.6347>:
   1f410:	02000400 00800100 00200040 00080010     ........@. .....
   1f420:	00020004 00c70000                                ......

0001f426 <Tbl>:
   1f426:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   1f436:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   1f446:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   1f456:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   1f466:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   1f476:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   1f486:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   1f496:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   1f4a6:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   1f4b6:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   1f4c6:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   1f4d6:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   1f4e6:	00df03b1 03c00393 03c303a3 03c400b5     ................
   1f4f6:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   1f506:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   1f516:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

0001f526 <tbl_lower.5775>:
   1f526:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   1f536:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   1f546:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   1f556:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   1f566:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   1f576:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   1f586:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   1f596:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   1f5a6:	01050103 01090107 010d010b 0111010f     ................
   1f5b6:	01150113 01190117 011d011b 0121011f     ..............!.
   1f5c6:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   1f5d6:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   1f5e6:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   1f5f6:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   1f606:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   1f616:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   1f626:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   1f636:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   1f646:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   1f656:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   1f666:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   1f676:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   1f686:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   1f696:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   1f6a6:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   1f6b6:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   1f6c6:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   1f6d6:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   1f6e6:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   1f6f6:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

0001f706 <tbl_upper.5776>:
   1f706:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   1f716:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   1f726:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   1f736:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   1f746:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   1f756:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   1f766:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   1f776:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   1f786:	01040102 01080106 010c010a 0110010e     ................
   1f796:	01140112 01180116 011c011a 0120011e     .............. .
   1f7a6:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   1f7b6:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   1f7c6:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   1f7d6:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   1f7e6:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   1f7f6:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   1f806:	03940393 03960395 03980397 039a0399     ................
   1f816:	039c039b 039e039d 03a0039f 03a303a1     ................
   1f826:	03a503a4 03a703a6 03a903a8 041003aa     ................
   1f836:	04120411 04140413 04160415 04180417     ................
   1f846:	041a0419 041c041b 041e041d 0420041f     .............. .
   1f856:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   1f866:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   1f876:	04030402 04050404 04070406 04090408     ................
   1f886:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   1f896:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   1f8a6:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   1f8b6:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   1f8c6:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   1f8d6:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   1f8e6:	c7ffff9f ff9a8094 0000ffff                       ..........

0001f8f0 <CSWTCH.70>:
   1f8f0:	00100000 00200000 00400000 00800000     ...... ...@.....

0001f900 <LED_DISPLAY_CHARMAP>:
	...
   1f920:	00008600 00000000 00000000 00804000     .............@..
   1f930:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   1f940:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   1f950:	6d000073 00003f00 00000000 00000000     s..m.?..........
   1f960:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   1f970:	6d000073 00003f00 00000000 00000000     s..m.?..........
   1f980:	67676f6c 45007265 524f5252 6f6c203a     logger.ERROR: lo
   1f990:	72656767 696e6920 6c616974 74617a69     gger initializat
   1f9a0:	206e6f69 6c696166 00657275 6f6c3a30     ion failure.0:lo
   1f9b0:	73632e67 61460076 64656c69 6c696620     g.csv.Failed fil
   1f9c0:	72772065 3a657469 72450020 20726f72     e write: .Error 
   1f9d0:	77207525 69746972 6c20676e 6966676f     %u writing logfi
   1f9e0:	202e656c 252f7525 72772075 65747469     le. %u/%u writte
   1f9f0:	46202e6e 3a727470 0a752520 656e5500     n. Fptr: %u..Une
   1fa00:	63657078 20646574 6c6c6163 206f7420     xpected call to 
   1fa10:	74697865 55002928 7078656e 65746365     exit().Unexpecte
   1fa20:	61632064 74206c6c 696b206f 29286c6c     d call to kill()
   1fa30:	ffffff00                                ....

0001fa34 <typeinfo for UartDev>:
   1fa34:	00020190 0001fa40 0001fa68              ....@...h...

0001fa40 <typeinfo name for UartDev>:
   1fa40:	72615537 76654474 ffffff00              7UartDev....

0001fa4c <vtable for UartDev>:
   1fa4c:	00000000 0001fa34 00015485 000153e1     ....4....T...S..
   1fa5c:	00015465 0001543d 00015451              eT..=T..QT..

0001fa68 <typeinfo for CharDev>:
   1fa68:	00020130 0001fa70                       0...p...

0001fa70 <typeinfo name for CharDev>:
   1fa70:	61684337 76654472 ffffff00              7CharDev....

0001fa7c <vtable for CharDev>:
   1fa7c:	00000000 0001fa68 0001773d 0001773d     ....h...=w..=w..
   1fa8c:	000155d9 00000000 00000000              .U..........

0001fa98 <typeinfo name for SingletonTemplate<Uart3>>:
   1fa98:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1faa8:	49657461 72615535 00453374              ateI5Uart3E.

0001fab4 <typeinfo for SingletonTemplate<Uart3>>:
   1fab4:	00020130 0001fa98                       0.......

0001fabc <typeinfo name for Uart3>:
   1fabc:	72615535 ff003374                       5Uart3..

0001fac4 <typeinfo for Uart3>:
   1fac4:	00020208 0001fabc 00000000 00000002     ................
   1fad4:	0001fa34 00000002 0001fab4 00000002     4...............

0001fae4 <vtable for Uart3>:
   1fae4:	00000000 0001fac4 00015485 000153e1     .........T...S..
   1faf4:	00015465 00015a19 00015a2d              eT...Z..-Z..

0001fb00 <typeinfo name for SingletonTemplate<Uart2>>:
   1fb00:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1fb10:	49657461 72615535 00453274              ateI5Uart2E.

0001fb1c <typeinfo for SingletonTemplate<Uart2>>:
   1fb1c:	00020130 0001fb00                       0.......

0001fb24 <typeinfo name for Uart2>:
   1fb24:	72615535 ff003274                       5Uart2..

0001fb2c <typeinfo for Uart2>:
   1fb2c:	00020208 0001fb24 00000000 00000002     ....$...........
   1fb3c:	0001fa34 00000002 0001fb1c 00000002     4...............

0001fb4c <vtable for Uart2>:
   1fb4c:	00000000 0001fb2c 00015485 000153e1     ....,....T...S..
   1fb5c:	00015465 00015a81 00015a95              eT...Z...Z..

0001fb68 <typeinfo name for SingletonTemplate<Uart0>>:
   1fb68:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1fb78:	49657461 72615535 00453074              ateI5Uart0E.

0001fb84 <typeinfo for SingletonTemplate<Uart0>>:
   1fb84:	00020130 0001fb68                       0...h...

0001fb8c <typeinfo name for Uart0>:
   1fb8c:	72615535 ff003074                       5Uart0..

0001fb94 <typeinfo for Uart0>:
   1fb94:	00020208 0001fb8c 00000000 00000002     ................
   1fba4:	0001fa34 00000002 0001fb84 00000002     4...............

0001fbb4 <vtable for Uart0>:
   1fbb4:	00000000 0001fb94 00015485 000153e1     .........T...S..
   1fbc4:	00015465 00015ae9 00015afd 40004000     eT...Z...Z...@.@
   1fbd4:	40008000 40090000 40094000 544c4148     ...@...@.@.@HALT
   1fbe4:	20474e49 54535953 203a4d45 72756f59     ING SYSTEM: Your
   1fbf4:	73797320 206d6574 206e6172 2074756f      system ran out 
   1fc04:	6d20666f 726f6d65 52282079 21294d41     of memory (RAM)!
   1fc14:	4148000a 4e49544c 59532047 4d455453     ..HALTING SYSTEM
   1fc24:	7453203a 206b6361 7265766f 776f6c66     : Stack overflow
   1fc34:	20796220 6b736174 0a00203a 20797254      by task: ..Try 
   1fc44:	72636e69 69736165 7320676e 6b636174     increasing stack
   1fc54:	6d656d20 2079726f 7420666f 20736968      memory of this 
   1fc64:	6b736174 44000a2e 00656e6f 6f727245     task...Done.Erro
   1fc74:	6f440072 0021656e 4c494146 45004445     r.Done!.FAILED.E
   1fc84:	524f5252 6f50203a 62697373 7320656c     RROR: Possible s
   1fc94:	74726f68 206e6f20 20414453 5320726f     hort on SDA or S
   1fca4:	77204c43 20657269 43324928 00212932     CL wire (I2C2)!.
   1fcb4:	4f525245 46203a52 656c6961 6f742064     ERROR: Failed to
   1fcc4:	696e6920 6c616974 20657a69 65726977      initialize wire
   1fcd4:	7373656c 73696400 6564006b 00677562     less.disk.debug.
   1fce4:	74737953 42206d65 20746f6f 2e252040     System Boot @ %.
   1fcf4:	4d206633 000a7a68 74737953 72206d65     3f Mhz..System r
   1fd04:	6f6f6265 20646574 65746661 72632072     ebooted after cr
   1fd14:	2e687361 65522020 6176656c 6920746e     ash.  Relevant i
   1fd24:	3a6f666e 3a43500a 25783020 2e583830     nfo:.PC: 0x%08X.
   1fd34:	524c2020 7830203a 58383025 5020202e       LR: 0x%08X.  P
   1fd44:	203a5253 30257830 500a5838 6973736f     SR: 0x%08X.Possi
   1fd54:	20656c62 7473616c 6e757220 676e696e     ble last running
   1fd64:	20534f20 6b736154 2527203a 000a2773      OS Task: '%s'..
   1fd74:	616c4620 00206873 73617245 20676e69      Flash .Erasing 
   1fd84:	20646e61 6d726f66 69747461 5320676e     and formatting S
   1fd94:	66204950 6873616c 6874202c 63207369     PI flash, this c
   1fda4:	74206e61 20656b61 68772061 20656c69     an take a while 
   1fdb4:	202e2e2e 49505300 414c4620 69204853     ... .SPI FLASH i
   1fdc4:	6f702073 62697373 6420796c 67616d61     s possibly damag
   1fdd4:	00216465 65676150 7a697320 25203a65     ed!.Page size: %
   1fde4:	4d000a75 20206d65 657a6973 7525203a     u..Mem  size: %u
   1fdf4:	61722820 79622077 29736574 4453000a      (raw bytes)..SD
   1fe04:	72614320 52450064 3a524f52 63634120      Card.ERROR: Acc
   1fe14:	72656c65 6f697461 6553206e 726f736e     eleration Sensor
   1fe24:	52524500 203a524f 706d6554 74617265     .ERROR: Temperat
   1fe34:	20657275 736e6553 4500726f 524f5252     ure Sensor.ERROR
   1fe44:	2d37203a 6d676553 20746e65 70736944     : 7-Segment Disp
   1fe54:	0079616c 6464616e 65530072 69772074     lay.naddr.Set wi
   1fe64:	656c6572 6e207373 2065646f 72646461     reless node addr
   1fe74:	20737365 25206f74 72662069 27206d6f     ess to %i from '
   1fe84:	20277325 656c6966 7325203a 7325000a     %s' file: %s..%s
   1fe94:	616f4200 49206472 73692044 2527203a     .Board ID is: '%
   1fea4:	28202773 30257830 0a295832 746e4500     s' (0x%02X)..Ent
   1feb4:	61207265 616f6220 49206472 36282044     er a board ID (6
   1fec4:	68632034 20737261 2978616d 2500203a     4 chars max): .%
   1fed4:	00733436 72616f42 44492064 206f7420     64s.Board ID to 
   1fee4:	676f7270 3a6d6172 73252720 45000a27     program: '%s'..E
   1fef4:	7265746e 27592720 206f7420 666e6f63     nter 'Y' to conf
   1ff04:	2e6d7269 4f422020 20445241 43204449     irm.  BOARD ID C
   1ff14:	4f4e4e41 45422054 41484320 4445474e     ANNOT BE CHANGED
   1ff24:	444e4120 20534920 4d524550 4e454e41      AND IS PERMANEN
   1ff34:	33250054 6f420073 20647261 6e204449     T.%3s.Board ID n
   1ff44:	7020746f 72676f72 656d6d61 6f590064     ot programmed.Yo
   1ff54:	61632075 7270206e 6172676f 2061206d     u can program a 
   1ff64:	4d524550 4e454e41 44492054 20666f20     PERMANENT ID of 
   1ff74:	72756f79 616f6220 002e6472 64206f54     your board..To d
   1ff84:	6874206f 202c7369 646c6f68 31575320     o this, hold SW1
   1ff94:	646e6120 34575320 646e6120 73657220      and SW4 and res
   1ffa4:	74207465 62206568 6472616f 5043002e     et the board..CP
   1ffb4:	6c662055 20687361 65746c61 2f646572     U flash altered/
   1ffc4:	676f7270 6d6d6172 63206465 746e756f     programmed count
   1ffd4:	25203a73 75252f75 5043000a 72702055     s: %u/%u..CPU pr
   1ffe4:	6172676f 64656d6d 616c6620 28206873     ogrammed flash (
   1fff4:	2f6e696d 2978616d 7525203a 2d20624b     min/max): %uKb -
   20004:	4b752520 4c000a62 20747361 676f7270      %uKb..Last prog
   20014:	6d6d6172 20676e69 6b6f6f74 20752520     ramming took %u 
   20024:	000a736d 6c6c6143 20676e69 72756f79     ms..Calling your
   20034:	69616d20 0029286e 2d2d2d2d 2d2d2d2d      main().--------
   20044:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20054:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20064:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20074:	4b002d2d 424d0042 73655900 006f4e00     --.KB.MB.Yes.No.
   20084:	203a7325 2d204b4f 6143202d 69636170     %s: OK -- Capaci
   20094:	25207974 2564352d 41202c73 6c696176     ty %-5d%s, Avail
   200a4:	656c6261 2d25203a 73257535 7325000a     able: %-5u%s..%s
   200b4:	7245203a 20726f72 6e20726f 7020746f     : Error or not p
   200c4:	65736572 202e746e 72724520 2320726f     resent.  Error #
   200d4:	202c6925 6e756f4d 3a646574 0a732520     %i, Mounted: %s.
   200e4:	6c654800 57206f6c 646c726f 25783020     .Hello World 0x%
   200f4:	ff000a58                                X...

000200f8 <typeinfo for __cxxabiv1::__class_type_info>:
   200f8:	00020190 00020104 000201b4              ............

00020104 <typeinfo name for __cxxabiv1::__class_type_info>:
   20104:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   20114:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   20124:	ffff0045                                E...

00020128 <vtable for __cxxabiv1::__class_type_info>:
   20128:	00000000 000200f8 00017679 0001768d     ........yv...v..
   20138:	0001784d 0001784d 000176b9 00017639     Mx..Mx...v..9v..
   20148:	000176a1 000176e3 0001766d              .v...v..mv..

00020154 <typeinfo for __cxxabiv1::__si_class_type_info>:
   20154:	00020190 00020160 000200f8              ....`.......

00020160 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   20160:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   20170:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   20180:	456f666e ffffff00                       nfoE....

00020188 <vtable for __cxxabiv1::__si_class_type_info>:
   20188:	00000000 00020154 00017745 00017759     ....T...Ew..Yw..
   20198:	0001784d 0001784d 000176b9 00017639     Mx..Mx...v..9v..
   201a8:	00017821 000177a5 0001776d              !x...w..mw..

000201b4 <typeinfo for std::type_info>:
   201b4:	00020130 000201bc                       0.......

000201bc <typeinfo name for std::type_info>:
   201bc:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

000201cc <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   201cc:	00020190 000201d8 000200f8              ............

000201d8 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   201d8:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   201e8:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   201f8:	6f666e69 ffff0045                       infoE...

00020200 <vtable for __cxxabiv1::__vmi_class_type_info>:
   20200:	00000000 000201cc 0001787d 00017891     ........}x...x..
   20210:	0001784d 0001784d 000176b9 00017639     Mx..Mx...v..9v..
   20220:	00017bd5 00017943 000178a5              .{..Cy...x..

0002022c <__sf_fake_stderr>:
	...

0002024c <__sf_fake_stdin>:
	...

0002026c <__sf_fake_stdout>:
	...

0002028c <_global_impure_ptr>:
   2028c:	2007c0e4 4f500043 00584953              ... C.POSIX.

00020298 <DAYS_IN_MONTH>:
   20298:	0000001f 0000001c 0000001f 0000001e     ................
   202a8:	0000001f 0000001e 0000001f 0000001f     ................
   202b8:	0000001e 0000001f 0000001e 0000001f     ................

000202c8 <_DAYS_BEFORE_MONTH>:
   202c8:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   202d8:	00000078 00000097 000000b5 000000d4     x...............
   202e8:	000000f3 00000111 00000130 0000014e     ........0...N...

000202f8 <__month_lengths>:
   202f8:	0000001f 0000001c 0000001f 0000001e     ................
   20308:	0000001f 0000001e 0000001f 0000001f     ................
   20318:	0000001e 0000001f 0000001e 0000001f     ................
   20328:	0000001f 0000001d 0000001f 0000001e     ................
   20338:	0000001f 0000001e 0000001f 0000001f     ................
   20348:	0000001e 0000001f 0000001e 0000001f     ................
   20358:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   20368:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   20378:	32313000 36353433 61393837 65646362     .0123456789abcde
   20388:	25650066 ff00646c                       f.e%ld..

00020390 <fpi.6129>:
   20390:	00000035 fffffbce 000003cb 00000001     5...............
   203a0:	00000000                                ....

000203a4 <fpinan.6165>:
   203a4:	00000034 fffffbce 000003cb 00000001     4...............
   203b4:	00000000                                ....

000203b8 <tinytens>:
   203b8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   203c8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   203d8:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   203e8:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   203f8:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   20408:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   20418:	006e2575                                u%n.

0002041c <_ctype_>:
   2041c:	20202000 20202020 28282020 20282828     .         ((((( 
   2042c:	20202020 20202020 20202020 20202020                     
   2043c:	10108820 10101010 10101010 10101010      ...............
   2044c:	04040410 04040404 10040404 10101010     ................
   2045c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   2046c:	01010101 01010101 01010101 10101010     ................
   2047c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   2048c:	02020202 02020202 02020202 10101010     ................
   2049c:	00000020 00000000 00000000 00000000      ...............
	...
   2051c:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   2052c:	ffffffff                                ....

00020530 <__mprec_bigtens>:
   20530:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   20540:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   20550:	7f73bf3c 75154fdd                       <.s..O.u

00020558 <__mprec_tens>:
   20558:	00000000 3ff00000 00000000 40240000     .......?......$@
   20568:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   20578:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   20588:	00000000 412e8480 00000000 416312d0     .......A......cA
   20598:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   205a8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   205b8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   205c8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   205d8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   205e8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   205f8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   20608:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   20618:	79d99db4 44ea7843                       ...yCx.D

00020620 <p05.6047>:
   20620:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   20630:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   20640:	0002065e 00020661 00020664 61462d41     ^...a...d...A-Fa
   20650:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   20660:	00303000 ff005878                       .00.xX..

00020668 <APP_SYM_TABLE>:
__preinit_array_start():
   20668:	31303030 38653835 41205420 495f4344     000158e8 T ADC_I
   20678:	61485152 656c646e 30300a72 65353130     RQHandler.00015e
   20688:	54206338 4e414320 5152495f 646e6148     8c T CAN_IRQHand
   20698:	0a72656c 31303030 34313835 45205420     ler.00015814 T E
   206a8:	33544e49 5152495f 646e6148 0a72656c     INT3_IRQHandler.
   206b8:	31303030 63386435 49205420 5f324332     00015d8c T I2C2_
   206c8:	48515249 6c646e61 300a7265 35313030     IRQHandler.00015
   206d8:	20343136 49522054 52495f54 6e614851     614 T RIT_IRQHan
   206e8:	72656c64 3030300a 63393431 20542063     dler.000149cc T 
   206f8:	5f435452 48515249 6c646e61 300a7265     RTC_IRQHandler.0
   20708:	30313030 20343035 49542054 3152454d     0010504 T TIMER1
   20718:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   20728:	63326235 55205420 30545241 5152495f     5b2c T UART0_IRQ
   20738:	646e6148 0a72656c 31303030 34636135     Handler.00015ac4
   20748:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   20758:	0a72656c 31303030 63356135 55205420     ler.00015a5c T U
   20768:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   20778:	31303030 63303230 6c205420 6c5f776f     0001020c T low_l
   20788:	6c657665 696e695f 0a292874 31303030     evel_init().0001
   20798:	34333037 68205420 5f686769 6576656c     7034 T high_leve
   207a8:	6e695f6c 29287469 3030300a 65363031     l_init().000106e
   207b8:	20542030 5f737973 636f6c63 6f635f6b     0 T sys_clock_co
   207c8:	6769666e 28657275 30300a29 31303130     nfigure().000101
   207d8:	54203038 73736220 696e695f 6e752874     80 T bss_init(un
   207e8:	6e676973 69206465 202c746e 69736e75     signed int, unsi
   207f8:	64656e67 746e6920 30300a29 31303130     gned int).000101
   20808:	54206136 74616420 6e695f61 75287469     6a T data_init(u
   20818:	6769736e 2064656e 2c746e69 736e7520     nsigned int, uns
   20828:	656e6769 6e692064 75202c74 6769736e     igned int, unsig
   20838:	2064656e 29746e69 3030300a 37333431     ned int).0001437
   20848:	20542030 5f44454c 70736944 3a79616c     0 T LED_Display:
   20858:	7465733a 7466654c 69676944 68632874     :setLeftDigit(ch
   20868:	0a297261 31303030 38383334 4c205420     ar).00014388 T L
   20878:	445f4445 6c707369 3a3a7961 52746573     ED_Display::setR
   20888:	74686769 69676944 68632874 0a297261     ightDigit(char).
   20898:	31303030 30613334 4c205420 445f4445     000143a0 T LED_D
   208a8:	6c707369 3a3a7961 74696e69 300a2928     isplay::init().0
   208b8:	34313030 20386433 454c2054 69445f44     00143d8 T LED_Di
   208c8:	616c7073 733a3a79 754e7465 7265626d     splay::setNumber
   208d8:	61686328 300a2972 34313030 20346334     (char).000144c4 
   208e8:	694c2054 5f746867 736e6553 3a3a726f     T Light_Sensor::
   208f8:	52746567 61567761 2865756c 30300a29     getRawValue().00
   20908:	34343130 54203063 67694c20 535f7468     0144c0 T Light_S
   20918:	6f736e65 693a3a72 2874696e 30300a29     ensor::init().00
   20928:	32343130 54206339 63634120 72656c65     01429c T Acceler
   20938:	6f697461 65535f6e 726f736e 6e693a3a     ation_Sensor::in
   20948:	29287469 3030300a 36343431 20542038     it().00014468 T 
   20958:	3a44454c 286e6f3a 69736e75 64656e67     LED::on(unsigned
   20968:	61686320 300a2972 34313030 20653834      char).0001448e 
   20978:	454c2054 6f3a3a44 75286666 6769736e     T LED::off(unsig
   20988:	2064656e 72616863 30300a29 34343130     ned char).000144
   20998:	54203662 44454c20 65733a3a 6e752874     b6 T LED::set(un
   209a8:	6e676973 63206465 2c726168 6f6f6220     signed char, boo
   209b8:	300a296c 34313030 20323134 454c2054     l).00014412 T LE
   209c8:	693a3a44 2874696e 30300a29 34343130     D::init().000144
   209d8:	54203831 44454c20 65733a3a 6c6c4174     18 T LED::setAll
   209e8:	736e7528 656e6769 68632064 0a297261     (unsigned char).
   209f8:	31303030 63306435 49205420 3a324332     00015d0c T I2C2:
   20a08:	696e693a 6e752874 6e676973 69206465     :init(unsigned i
   20a18:	0a29746e 31303030 38376435 49205420     nt).00015d78 T I
   20a28:	3a324332 4332493a 0a292832 31303030     2C2::I2C2().0001
   20a38:	38376435 49205420 3a324332 4332493a     5d78 T I2C2::I2C
   20a48:	0a292832 31303030 30316235 55205420     2().00015b10 T U
   20a58:	30747261 61553a3a 28307472 30300a29     art0::Uart0().00
   20a68:	62353130 54203031 72615520 3a3a3074     015b10 T Uart0::
   20a78:	74726155 0a292830 31303030 38616135     Uart0().00015aa8
   20a88:	55205420 32747261 61553a3a 28327472      T Uart2::Uart2(
   20a98:	30300a29 61353130 54203861 72615520     ).00015aa8 T Uar
   20aa8:	3a3a3274 74726155 0a292832 31303030     t2::Uart2().0001
   20ab8:	30346135 55205420 33747261 61553a3a     5a40 T Uart3::Ua
   20ac8:	28337472 30300a29 61353130 54203034     rt3().00015a40 T
   20ad8:	72615520 3a3a3374 74726155 0a292833      Uart3::Uart3().
   20ae8:	31303030 63643535 43205420 44726168     000155dc T CharD
   20af8:	3a3a7665 72616843 28766544 30300a29     ev::CharDev().00
   20b08:	35353130 54206364 61684320 76654472     0155dc T CharDev
   20b18:	68433a3a 65447261 0a292876 31303030     ::CharDev().0001
   20b28:	63663535 43205420 44726168 3a3a7665     55fc T CharDev::
   20b38:	6168437e 76654472 300a2928 35313030     ~CharDev().00015
   20b48:	20636635 68432054 65447261 7e3a3a76     5fc T CharDev::~
   20b58:	72616843 28766544 30300a29 32343130     CharDev().000142
   20b68:	54203232 6f745320 65676172 65723a3a     22 T Storage::re
   20b78:	63286461 20726168 736e6f63 202c2a74     ad(char const*, 
   20b88:	64696f76 75202c2a 6769736e 2064656e     void*, unsigned 
   20b98:	2c746e69 736e7520 656e6769 6e692064     int, unsigned in
   20ba8:	300a2974 35313030 20306634 61552054     t).000154f0 T Ua
   20bb8:	65447472 683a3a76 6c646e61 746e4965     rtDev::handleInt
   20bc8:	75727265 29287470 3030300a 36343531     errupt().0001546
   20bd8:	20542034 74726155 3a766544 756c663a     4 T UartDev::flu
   20be8:	29286873 3030300a 38343531 20542034     sh().00015484 T 
   20bf8:	74726155 3a766544 7465673a 72616843     UartDev::getChar
   20c08:	61686328 202c2a72 69736e75 64656e67     (char*, unsigned
   20c18:	746e6920 30300a29 33353130 54203065      int).000153e0 T
   20c28:	72615520 76654474 75703a3a 61684374      UartDev::putCha
   20c38:	68632872 202c7261 69736e75 64656e67     r(char, unsigned
   20c48:	746e6920 30300a29 35353130 54203062      int).000155b0 T
   20c58:	72615520 76654474 61553a3a 65447472      UartDev::UartDe
   20c68:	6e752876 6e676973 69206465 292a746e     v(unsigned int*)
   20c78:	3030300a 62353531 20542030 74726155     .000155b0 T Uart
   20c88:	3a766544 7261553a 76654474 736e7528     Dev::UartDev(uns
   20c98:	656e6769 6e692064 0a292a74 31303030     igned int*).0001
   20ca8:	36353135 49205420 425f4332 3a657361     5156 T I2C_Base:
   20cb8:	6165723a 67655264 65747369 75287372     :readRegisters(u
   20cc8:	6769736e 2064656e 72616863 6e75202c     nsigned char, un
   20cd8:	6e676973 63206465 2a726168 6e75202c     signed char*, un
   20ce8:	6e676973 6c206465 29676e6f 3030300a     signed long).000
   20cf8:	31313531 20542030 5f433249 65736142     15110 T I2C_Base
   20d08:	65723a3a 65526461 74736967 28737265     ::readRegisters(
   20d18:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   20d28:	6769736e 2064656e 72616863 6e75202c     nsigned char, un
   20d38:	6e676973 63206465 2a726168 6e75202c     signed char*, un
   20d48:	6e676973 6c206465 29676e6f 3030300a     signed long).000
   20d58:	32313531 20542061 5f433249 65736142     1512a T I2C_Base
   20d68:	72773a3a 52657469 73696765 73726574     ::writeRegisters
   20d78:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   20d88:	69736e75 64656e67 61686320 202c2a72     unsigned char*, 
   20d98:	69736e75 64656e67 6e6f6c20 300a2967     unsigned long).0
   20da8:	35313030 20386133 32492054 61425f43     00153a8 T I2C_Ba
   20db8:	3a3a6573 646e6168 6e49656c 72726574     se::handleInterr
   20dc8:	28747075 30300a29 31353130 54206536     upt().0001516e T
   20dd8:	43324920 7361425f 633a3a65 6b636568      I2C_Base::check
   20de8:	69766544 65526563 6e6f7073 75286573     DeviceResponse(u
   20df8:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   20e08:	30353130 54206364 43324920 7361425f     0150dc T I2C_Bas
   20e18:	773a3a65 65746972 69676552 72657473     e::writeRegister
   20e28:	6e656854 64616552 736e7528 656e6769     ThenRead(unsigne
   20e38:	68632064 202c7261 69736e75 64656e67     d char, unsigned
   20e48:	61686320 202c2a72 69736e75 64656e67      char*, unsigned
   20e58:	6e6f6c20 75202c67 6769736e 2064656e      long, unsigned 
   20e68:	72616863 75202c2a 6769736e 2064656e     char*, unsigned 
   20e78:	676e6f6c 30300a29 31353130 54203065     long).000151e0 T
   20e88:	43324920 7361425f 693a3a65 2874696e      I2C_Base::init(
   20e98:	69736e75 64656e67 6e6f6c20 75202c67     unsigned long, u
   20ea8:	6769736e 2064656e 676e6f6c 30300a29     nsigned long).00
   20eb8:	30353130 54203865 43324920 7361425f     0150e8 T I2C_Bas
   20ec8:	723a3a65 52646165 75286765 6769736e     e::readReg(unsig
   20ed8:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   20ee8:	63206465 29726168 3030300a 64663431     ed char).00014fd
   20ef8:	20542034 5f433249 65736142 72743a3a     4 T I2C_Base::tr
   20f08:	66736e61 75287265 6769736e 2064656e     ansfer(unsigned 
   20f18:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   20f28:	2a726168 6e75202c 6e676973 6c206465     har*, unsigned l
   20f38:	2c676e6f 736e7520 656e6769 68632064     ong, unsigned ch
   20f48:	2c2a7261 736e7520 656e6769 6f6c2064     ar*, unsigned lo
   20f58:	0a29676e 31303030 65333135 49205420     ng).0001513e T I
   20f68:	425f4332 3a657361 6972773a 65526574     2C_Base::writeRe
   20f78:	6e752867 6e676973 63206465 2c726168     g(unsigned char,
   20f88:	736e7520 656e6769 68632064 202c7261      unsigned char, 
   20f98:	69736e75 64656e67 61686320 300a2972     unsigned char).0
   20fa8:	35313030 20343831 32492054 61425f43     0015184 T I2C_Ba
   20fb8:	3a3a6573 5f433249 65736142 43504c28     se::I2C_Base(LPC
   20fc8:	4332495f 7079545f 66654465 300a292a     _I2C_TypeDef*).0
   20fd8:	35313030 20343831 32492054 61425f43     0015184 T I2C_Ba
   20fe8:	3a3a6573 5f433249 65736142 43504c28     se::I2C_Base(LPC
   20ff8:	4332495f 7079545f 66654465 300a292a     _I2C_TypeDef*).0
   21008:	34313030 20613035 32492054 65545f43     001450a T I2C_Te
   21018:	3a3a706d 43746567 69736c65 29287375     mp::getCelsius()
   21028:	3030300a 33353431 20542063 5f433249     .0001453c T I2C_
   21038:	706d6554 65673a3a 72614674 65686e65     Temp::getFarenhe
   21048:	29287469 3030300a 65343431 20542038     it().000144e8 T 
   21058:	5f433249 706d6554 6e693a3a 29287469     I2C_Temp::init()
   21068:	3030300a 64343431 20542030 74697753     .000144d0 T Swit
   21078:	73656863 65673a3a 69775374 56686374     ches::getSwitchV
   21088:	65756c61 0a292873 31303030 61633434     alues().000144ca
   21098:	53205420 63746977 3a736568 696e693a      T Switches::ini
   210a8:	0a292874 31303030 63623234 49205420     t().000142bc T I
   210b8:	65535f52 726f736e 74733a3a 4965726f     R_Sensor::storeI
   210c8:	646f4372 6e752865 6e676973 6c206465     rCode(unsigned l
   210d8:	29676e6f 3030300a 64323431 20542038     ong).000142d8 T 
   210e8:	535f5249 6f736e65 643a3a72 646f6365     IR_Sensor::decod
   210f8:	43724965 2865646f 30300a29 33343130     eIrCode().000143
   21108:	54206333 5f524920 736e6553 3a3a726f     3c T IR_Sensor::
   21118:	74696e69 300a2928 37313030 20633438     init().0001784c 
   21128:	74732054 743a3a64 5f657079 6f666e69     T std::type_info
   21138:	5f5f3a3a 705f7369 746e696f 705f7265     ::__is_pointer_p
   21148:	63202928 74736e6f 3030300a 34383731     () const.0001784
   21158:	20542063 3a647473 7079743a 6e695f65     c T std::type_in
   21168:	3a3a6f66 73695f5f 6e75665f 6f697463     fo::__is_functio
   21178:	28705f6e 6f632029 0a74736e 31303030     n_p() const.0001
   21188:	30353837 73205420 3a3a6474 65707974     7850 T std::type
   21198:	666e695f 6f3a3a6f 61726570 3d726f74     _info::operator=
   211a8:	7473283d 743a3a64 5f657079 6f666e69     =(std::type_info
   211b8:	6e6f6320 29267473 6e6f6320 300a7473      const&) const.0
   211c8:	37313030 20613438 74732054 743a3a64     001784a T std::t
   211d8:	5f657079 6f666e69 747e3a3a 5f657079     ype_info::~type_
   211e8:	6f666e69 300a2928 37313030 20613438     info().0001784a 
   211f8:	74732054 743a3a64 5f657079 6f666e69     T std::type_info
   21208:	747e3a3a 5f657079 6f666e69 300a2928     ::~type_info().0
   21218:	37313030 20383064 74732054 673a3a64     0017d08 T std::g
   21228:	745f7465 696d7265 6574616e 300a2928     et_terminate().0
   21238:	37313030 20383164 74732054 743a3a64     0017d18 T std::t
   21248:	696d7265 6574616e 300a2928 38313030     erminate().00018
   21258:	20383939 62612054 0a74726f 31303030     998 T abort.0001
   21268:	34613935 61205420 5f306364 5f746567     59a4 T adc0_get_
   21278:	64616572 0a676e69 31303030 30333935     reading.00015930
   21288:	61205420 5f306364 74696e69 3030300a      T adc0_init.000
   21298:	61393831 20542036 696f7461 3030300a     189a6 T atoi.000
   212a8:	30363431 20542030 696c5f63 635f7473     14600 T c_list_c
   212b8:	74616572 30300a65 36343130 54206334     reate.0001464c T
   212c8:	6c5f6320 5f747369 646e6966 6d6c655f      c_list_find_elm
   212d8:	3030300a 37363431 20542038 696c5f63     .00014678 T c_li
   212e8:	665f7473 655f726f 5f686361 0a6d6c65     st_for_each_elm.
   212f8:	31303030 34313634 63205420 73696c5f     00014614 T c_lis
   21308:	6e695f74 74726573 6d6c655f 646e655f     t_insert_elm_end
   21318:	3030300a 33653131 20542030 73756c63     .00011e30 T clus
   21328:	65733274 300a7463 34313030 20326161     t2sect.00014aa2 
   21338:	65642054 5f79616c 300a736d 34313030     T delay_ms.00014
   21348:	20383761 65642054 5f79616c 300a7375     a78 T delay_us.0
   21358:	33313030 20303463 69642054 695f6b73     0013c40 T disk_i
   21368:	6974696e 7a696c61 30300a65 63333130     nitialize.00013c
   21378:	54203665 73696420 6f695f6b 0a6c7463     e6 T disk_ioctl.
   21388:	31303030 36376333 64205420 5f6b7369     00013c76 T disk_
   21398:	64616572 3030300a 36633331 20542036     read.00013c66 T 
   213a8:	6b736964 6174735f 0a737574 31303030     disk_status.0001
   213b8:	65616333 64205420 5f6b7369 74697277     3cae T disk_writ
   213c8:	30300a65 64623130 54203039 76696420     e.0001bd90 T div
   213d8:	3030300a 39383531 20542034 746e6965     .00015894 T eint
   213e8:	6e655f33 656c6261 726f705f 300a3074     3_enable_port0.0
   213f8:	32313030 20633364 5f662054 736f6c63     0012d3c T f_clos
   21408:	30300a65 65323130 54206561 675f6620     e.00012eae T f_g
   21418:	72667465 300a6565 32313030 20303664     etfree.00012d60 
   21428:	5f662054 6565736c 30300a6b 66323130     T f_lseek.00012f
   21438:	54203837 6d5f6620 0a73666b 31303030     78 T f_mkfs.0001
   21448:	63653732 66205420 756f6d5f 300a746e     27ec T f_mount.0
   21458:	32313030 20383638 5f662054 6e65706f     0012868 T f_open
   21468:	3030300a 39393231 20542036 65725f66     .00012996 T f_re
   21478:	300a6461 32313030 20326263 5f662054     ad.00012cb2 T f_
   21488:	636e7973 3030300a 30623231 20542036     sync.00012b06 T 
   21498:	72775f66 0a657469 31303030 38633433     f_write.000134c8
   214a8:	66205420 6f635f66 7265766e 30300a74      T ff_convert.00
   214b8:	34333130 54206336 5f666620 5f657263     01346c T ff_cre_
   214c8:	636e7973 0a6a626f 31303030 30383433     syncobj.00013480
   214d8:	66205420 65645f66 79735f6c 626f636e      T ff_del_syncob
   214e8:	30300a6a 34333130 54206161 5f666620     j.000134aa T ff_
   214f8:	5f6c6572 6e617267 30300a74 34333130     rel_grant.000134
   21508:	54203438 5f666620 5f716572 6e617267     84 T ff_req_gran
   21518:	30300a74 35333130 54203430 5f666620     t.00013504 T ff_
   21528:	756f7477 72657070 3030300a 32623831     wtoupper.00018b2
   21538:	20542030 756c6666 300a6873 34313030     0 T fflush.00014
   21548:	20346131 6c662054 5f687361 70696863     1a4 T flash_chip
   21558:	6172655f 300a6573 34313030 20636430     _erase.000140dc 
   21568:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   21578:	756f635f 300a746e 34313030 20636630     _count.000140fc 
   21588:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   21598:	7a69735f 30300a65 66333130 54203430     _size.00013f04 T
   215a8:	616c6620 695f6873 6974696e 7a696c61      flash_initializ
   215b8:	30300a65 30343130 54203833 616c6620     e.00014038 T fla
   215c8:	695f6873 6c74636f 3030300a 62303431     sh_ioctl.000140b
   215d8:	20542034 73616c66 65725f68 705f6461     4 T flash_read_p
   215e8:	616d7265 746e656e 0a64695f 31303030     ermanent_id.0001
   215f8:	63396633 66205420 6873616c 6165725f     3f9c T flash_rea
   21608:	65735f64 726f7463 30300a73 31343130     d_sectors.000141
   21618:	54203830 616c6620 735f6873 6f707075     08 T flash_suppo
   21628:	5f737472 6174656d 61746164 3030300a     rts_metadata.000
   21638:	37303431 20542030 73616c66 72775f68     14070 T flash_wr
   21648:	5f657469 6d726570 6e656e61 64695f74     ite_permanent_id
   21658:	3030300a 65663331 20542063 73616c66     .00013fec T flas
   21668:	72775f68 5f657469 74636573 0a73726f     h_write_sectors.
   21678:	31303030 34356538 66205420 0a656572     00018e54 T free.
   21688:	31303030 30303030 67205420 6e66705f     00010000 T g_pfn
   21698:	74636556 0a73726f 31303030 36346531     Vectors.00011e46
   216a8:	67205420 665f7465 300a7461 34313030      T get_fat.00014
   216b8:	20306431 65672054 61665f74 6d697474     1d0 T get_fattim
   216c8:	30300a65 32613130 54203034 72706920     e.0001a240 T ipr
   216d8:	66746e69 3030300a 39613431 20542034     intf.00014a94 T 
   216e8:	665f7369 72656572 5f736f74 6e6e7572     is_freertos_runn
   216f8:	0a676e69 31303030 38343561 69205420     ing.0001a548 T i
   21708:	6e616373 30300a66 31303130 54203834     scanf.00010148 T
   21718:	72736920 6665645f 746c7561 6e61685f      isr_default_han
   21728:	72656c64 3030300a 66353031 20542063     dler.000105fc T 
   21738:	5f727369 64726168 7561665f 685f746c     isr_hard_fault_h
   21748:	6c646e61 300a7265 30313030 20343931     andler.00010194 
   21758:	73692054 65725f72 0a746573 31303030     T isr_reset.0001
   21768:	38323834 6c205420 6567676f 6e695f72     4828 T logger_in
   21778:	300a7469 30313030 20633239 706c2054     it.0001092c T lp
   21788:	63705f63 300a6b6c 30313030 20386638     c_pclk.000108f8 
   21798:	706c2054 63705f63 0a706e6f 31303030     T lpc_pconp.0001
   217a8:	34333430 6c205420 735f6370 735f7379     0434 T lpc_sys_s
   217b8:	70757465 7379735f 5f6d6574 656d6974     etup_system_time
   217c8:	30300a72 63353130 54203061 63706c20     r.00015ca0 T lpc
   217d8:	6d69745f 655f7265 6c62616e 30300a65     _timer_enable.00
   217e8:	35373130 54203439 69616d20 30300a6e     017594 T main.00
   217f8:	33393130 54203464 6c616d20 666e696c     0193d4 T mallinf
   21808:	30300a6f 65383130 54203434 6c616d20     o.00018e44 T mal
   21818:	0a636f6c 31303030 38386538 6d205420     loc.00018e88 T m
   21828:	68636d65 30300a72 65383130 54203461     emchr.00018ea4 T
   21838:	6d656d20 0a706d63 31303030 32636538      memcmp.00018ec2
   21848:	6d205420 70636d65 30300a79 65383130      T memcpy.00018e
   21858:	54203864 6d656d20 65766f6d 3030300a     d8 T memmove.000
   21868:	30663831 20542063 736d656d 300a7465     18f0c T memset.0
   21878:	31313030 20343134 656d2054 665f6873     0011414 T mesh_f
   21888:	5f6d726f 0a746b70 31303030 38303431     orm_pkt.00011408
   21898:	6d205420 5f687365 5f746567 65646f6e      T mesh_get_node
   218a8:	6464615f 73736572 3030300a 62363131     _address.000116b
   218b8:	20542063 6873656d 7465675f 6d756e5f     c T mesh_get_num
   218c8:	756f725f 676e6974 746e655f 73656972     _routing_entries
   218d8:	3030300a 61393131 20542038 6873656d     .000119a8 T mesh
   218e8:	7465675f 646e705f 746b705f 756f635f     _get_pnd_pkt_cou
   218f8:	300a746e 31313030 20343635 656d2054     nt.00011564 T me
   21908:	695f6873 0a74696e 31303030 34363631     sh_init.00011664
   21918:	6d205420 5f687365 646e6573 3030300a      T mesh_send.000
   21928:	30353131 20542063 6873656d 6e65735f     1150c T mesh_sen
   21938:	6f665f64 64656d72 746b705f 3030300a     d_formed_pkt.000
   21948:	64363131 20542038 6873656d 7265735f     116d8 T mesh_ser
   21958:	65636976 3030300a 66333131 20542030     vice.000113f0 T 
   21968:	6873656d 7465735f 646f6e5f 64615f65     mesh_set_node_ad
   21978:	73657264 30300a73 30393130 54206364     dress.000190dc T
   21988:	746b6d20 0a656d69 31303030 34643661      mktime.0001a6d4
   21998:	6e205420 0a666e61 31303030 38616130      T nanf.00010aa8
   219a8:	6e205420 6964726f 6c635f63 5f726165      T nordic_clear_
   219b8:	5f6c6c61 72746e69 616c665f 300a7367     all_intr_flags.0
   219c8:	30313030 20383762 6f6e2054 63696472     0010b78 T nordic
   219d8:	656c635f 705f7261 656b6361 76615f74     _clear_packet_av
   219e8:	616c6961 5f656c62 67616c66 3030300a     ailable_flag.000
   219f8:	30623031 20542038 64726f6e 635f6369     10b08 T nordic_c
   21a08:	7261656c 6361705f 5f74656b 746e6573     lear_packet_sent
   21a18:	616c665f 30300a67 62303130 54203439     _flag.00010b94 T
   21a28:	726f6e20 5f636964 73756c66 78725f68      nordic_flush_rx
   21a38:	6669665f 30300a6f 62303130 54203031     _fifo.00010b10 T
   21a48:	726f6e20 5f636964 73756c66 78745f68      nordic_flush_tx
   21a58:	6669665f 30300a6f 64303130 54203832     _fifo.00010d28 T
   21a68:	726f6e20 5f636964 74696e69 3030300a      nordic_init.000
   21a78:	36623031 20542038 64726f6e 695f6369     10b68 T nordic_i
   21a88:	61705f73 74656b63 6176615f 62616c69     s_packet_availab
   21a98:	300a656c 30313030 20613961 6f6e2054     le.00010a9a T no
   21aa8:	63696472 5f73695f 665f7874 5f6f6669     rdic_is_tx_fifo_
   21ab8:	74706d65 30300a79 62303130 54206331     empty.00010b1c T
   21ac8:	726f6e20 5f636964 65646f6d 65735f31      nordic_mode1_se
   21ad8:	735f646e 6c676e69 61705f65 74656b63     nd_single_packet
   21ae8:	3030300a 32633031 20542065 64726f6e     .00010c2e T nord
   21af8:	705f6369 7265776f 776f645f 30300a6e     ic_power_down.00
   21b08:	63303130 54203631 726f6e20 5f636964     010c16 T nordic_
   21b18:	65776f70 70755f72 3030300a 62613031     power_up.00010ab
   21b28:	20542030 64726f6e 715f6369 65756575     0 T nordic_queue
   21b38:	5f78745f 6f666966 3030300a 38623031     _tx_fifo.00010b8
   21b48:	20542030 64726f6e 725f6369 5f646165     0 T nordic_read_
   21b58:	665f7872 0a6f6669 31303030 34646130     rx_fifo.00010ad4
   21b68:	6e205420 6964726f 78725f63 5f6f745f      T nordic_rx_to_
   21b78:	6e617453 0a317962 31303030 38666330     Stanby1.00010cf8
   21b88:	6e205420 6964726f 65735f63 64615f74      T nordic_set_ad
   21b98:	775f7264 68746469 3030300a 36633031     dr_width.00010c6
   21ba8:	20542038 64726f6e 735f6369 615f7465     8 T nordic_set_a
   21bb8:	645f7269 5f617461 65746172 3030300a     ir_data_rate.000
   21bc8:	62633031 20542038 64726f6e 735f6369     10cb8 T nordic_s
   21bd8:	615f7465 5f6f7475 6e617274 74696d73     et_auto_transmit
   21be8:	74706f5f 736e6f69 3030300a 34633031     _options.00010c4
   21bf8:	20542034 64726f6e 735f6369 635f7465     4 T nordic_set_c
   21c08:	6e6e6168 300a6c65 30313030 20656462     hannel.00010bde 
   21c18:	6f6e2054 63696472 7465735f 6372635f     T nordic_set_crc
   21c28:	3030300a 61623031 20542030 64726f6e     .00010ba0 T nord
   21c38:	735f6369 695f7465 5f72746e 6e676973     ic_set_intr_sign
   21c48:	0a736c61 31303030 34656330 6e205420     als.00010ce4 T n
   21c58:	6964726f 65735f63 61705f74 616f6c79     ordic_set_payloa
   21c68:	6f665f64 69705f72 300a6570 30313030     d_for_pipe.00010
   21c78:	20343963 6f6e2054 63696472 7465735f     c94 T nordic_set
   21c88:	776f705f 6c5f7265 6c657665 3030300a     _power_level.000
   21c98:	31643031 20542061 64726f6e 735f6369     10d1a T nordic_s
   21ca8:	725f7465 69705f78 5f306570 72646461     et_rx_pipe0_addr
   21cb8:	3030300a 30643031 20542065 64726f6e     .00010d0e T nord
   21cc8:	735f6369 745f7465 64615f78 73657264     ic_set_tx_addres
   21cd8:	30300a73 61303130 54203465 726f6e20     s.00010ae4 T nor
   21ce8:	5f636964 6e617473 31796264 5f6f745f     dic_standby1_to_
   21cf8:	300a7872 30313030 20636261 6f6e2054     rx.00010abc T no
   21d08:	63696472 6174735f 7962646e 6f745f31     rdic_standby1_to
   21d18:	5f78745f 65646f6d 30300a31 35333130     _tx_mode1.000135
   21d28:	54203062 776f7020 6f5f7265 300a6666     b0 T power_off.0
   21d38:	61313030 20303432 72702054 66746e69     001a240 T printf
   21d48:	3030300a 36663131 20542063 5f747570     .00011f6c T put_
   21d58:	0a746166 31303030 38323361 70205420     fat.0001a328 T p
   21d68:	0a737475 31303030 30333036 70205420     uts.00016030 T p
   21d78:	726f5076 6c614d74 0a636f6c 31303030     vPortMalloc.0001
   21d88:	30306536 70205420 73615476 636e496b     6e00 T pvTaskInc
   21d98:	656d6572 754d746e 48786574 43646c65     rementMutexHeldC
   21da8:	746e756f 3030300a 63653531 20542038     ount.00015ec8 T 
   21db8:	6f507870 6e497472 61697469 6573696c     pxPortInitialise
   21dc8:	63617453 30300a6b 37613130 54206332     Stack.0001a72c T
   21dd8:	69617220 300a6573 61313030 20383833      raise.0001a388 
   21de8:	61722054 300a646e 33313030 20346435     T rand.000135d4 
   21df8:	63722054 645f7276 62617461 6b636f6c     T rcvr_datablock
   21e08:	3030300a 33363531 20542030 5f637472     .00015630 T rtc_
   21e18:	74746567 0a656d69 31303030 30653635     gettime.000156e0
   21e28:	72205420 695f6374 0a74696e 31303030      T rtc_init.0001
   21e38:	38373635 72205420 735f6374 69747465     5678 T rtc_setti
   21e48:	300a656d 35313030 20306366 74722054     me.00015fc0 T rt
   21e58:	6f6e5f73 75665f74 745f6c6c 65636172     s_not_full_trace
   21e68:	7465675f 3030300a 34356131 20542038     _get.0001a548 T 
   21e78:	6e616373 30300a66 37333130 54206335     scanf.0001375c T
   21e88:	5f647320 74696e69 696c6169 300a657a      sd_initialize.0
   21e98:	33313030 20343261 64732054 636f695f     0013a24 T sd_ioc
   21ea8:	300a6c74 33313030 20386438 64732054     tl.000138d8 T sd
   21eb8:	6165725f 30300a64 38333130 54203863     _read.000138c8 T
   21ec8:	5f647320 74617473 300a7375 33313030      sd_status.00013
   21ed8:	20383337 64732054 6470755f 5f657461     738 T sd_update_
   21ee8:	64726163 6174735f 0a737574 31303030     card_status.0001
   21ef8:	30373933 73205420 72775f64 0a657469     3970 T sd_write.
   21f08:	31303030 63613633 73205420 5f646e65     000136ac T send_
   21f18:	0a646d63 31303030 38373561 73205420     cmd.0001a578 T s
   21f28:	62767465 300a6675 61313030 20343637     etvbuf.0001a764 
   21f38:	69732054 6e697270 300a6674 61313030     T siprintf.0001a
   21f48:	20636137 69732054 6e616373 30300a66     7ac T siscanf.00
   21f58:	63353130 54206332 69707320 6f6c5f31     015c2c T spi1_lo
   21f68:	300a6b63 35313030 20633563 70732054     ck.00015c5c T sp
   21f78:	755f3169 636f6c6e 30300a6b 37613130     i1_unlock.0001a7
   21f88:	54203436 72707320 66746e69 3030300a     64 T sprintf.000
   21f98:	33336131 20542038 6e617273 30300a64     1a338 T srand.00
   21fa8:	37613130 54206361 63737320 0a666e61     01a7ac T sscanf.
   21fb8:	31303030 30356235 73205420 5f317073     00015b50 T ssp1_
   21fc8:	5f616d64 74696e69 3030300a 36623531     dma_init.00015b6
   21fd8:	20542063 31707373 616d645f 6172745f     c T ssp1_dma_tra
   21fe8:	6566736e 6c625f72 0a6b636f 31303030     nsfer_block.0001
   21ff8:	61383861 73205420 6d637274 30300a70     a88a T strcmp.00
   22008:	38613130 54206539 72747320 0a797063     01a89e T strcpy.
   22018:	31303030 65613861 73205420 656c7274     0001a8ae T strle
   22028:	30300a6e 38613130 54206562 72747320     n.0001a8be T str
   22038:	706d636e 3030300a 65386131 20542032     ncmp.0001a8e2 T 
   22048:	6e727473 0a797063 31303030 34383662     strncpy.0001b684
   22058:	73205420 6f747274 30300a6c 39653130      T strtol.0001e9
   22068:	54203864 72747320 6c756f74 3030300a     d8 T strtoul.000
   22078:	30323031 20542030 5f737973 5f746567     10200 T sys_get_
   22088:	746f6f62 7079745f 30300a65 37303130     boot_type.000107
   22098:	54203439 73797320 7465675f 7570635f     94 T sys_get_cpu
   220a8:	6f6c635f 300a6b63 34313030 20383362     _clock.00014b38 
   220b8:	79732054 65675f73 656d5f74 6e695f6d     T sys_get_mem_in
   220c8:	300a6f66 30313030 20346234 79732054     fo.000104b4 T sy
   220d8:	65675f73 656d5f74 6e695f6d 735f6f66     s_get_mem_info_s
   220e8:	300a7274 30313030 20383834 79732054     tr.00010488 T sy
   220f8:	65675f73 70755f74 656d6974 0a73755f     s_get_uptime_us.
   22108:	31303030 34346434 73205420 735f7379     00014d44 T sys_s
   22118:	695f7465 6168636e 75665f72 300a636e     et_inchar_func.0
   22128:	34313030 20383364 79732054 65735f73     0014d38 T sys_se
   22138:	756f5f74 61686374 75665f72 300a636e     t_outchar_func.0
   22148:	34313030 20383764 79732054 6c616373     0014d78 T syscal
   22158:	695f736c 0a74696e 31303030 30623662     ls_init.0001b6b0
   22168:	74205420 0a656d69 31303030 34393534      T time.00014594
   22178:	74205420 635f6d6c 6f706d6f 746e656e      T tlm_component
   22188:	6464615f 3030300a 37353431 20542030     _add.00014570 T 
   22198:	5f6d6c74 706d6f63 6e656e6f 65675f74     tlm_component_ge
   221a8:	79625f74 6d616e5f 30300a65 39343130     t_by_name.000149
   221b8:	54203231 5f307520 5f676264 6e697270     12 T u0_dbg_prin
   221c8:	300a6674 34313030 20346638 30752054     tf.000148f4 T u0
   221d8:	6762645f 7475705f 3030300a 39383031     _dbg_put.0001089
   221e8:	20542063 74726175 65675f30 61686374     c T uart0_getcha
   221f8:	30300a72 38303130 54206333 72617520     r.0001083c T uar
   22208:	695f3074 0a74696e 31303030 34623830     t0_init.000108b4
   22218:	75205420 30747261 7475705f 72616863      T uart0_putchar
   22228:	3030300a 63383031 20542063 74726175     .000108cc T uart
   22238:	75705f30 300a7374 36313030 20616330     0_puts.000160ca 
   22248:	78752054 7473694c 6f6d6552 300a6576     T uxListRemove.0
   22258:	36313030 20633836 78752054 75657551     001668c T uxQueu
   22268:	73654d65 65676173 69615773 676e6974     eMessagesWaiting
   22278:	3030300a 39363631 20542065 75517875     .0001669e T uxQu
   22288:	4d657565 61737365 57736567 69746961     eueMessagesWaiti
   22298:	7246676e 53496d6f 30300a52 30363130     ngFromISR.000160
   222a8:	54206330 70417620 63696c70 6f697461     0c T vApplicatio
   222b8:	6c614d6e 46636f6c 656c6961 6f6f4864     nMallocFailedHoo
   222c8:	30300a6b 66353130 54203464 70417620     k.00015fd4 T vAp
   222d8:	63696c70 6f697461 6174536e 764f6b63     plicationStackOv
   222e8:	6c667265 6f48776f 300a6b6f 36313030     erflowHook.00016
   222f8:	20383630 4c762054 49747369 6974696e     068 T vListIniti
   22308:	73696c61 30300a65 30363130 54206537     alise.0001607e T
   22318:	694c7620 6e497473 61697469 6573696c      vListInitialise
   22328:	6d657449 3030300a 39303631 20542063     Item.0001609c T 
   22338:	73694c76 736e4974 0a747265 31303030     vListInsert.0001
   22348:	34383036 76205420 7473694c 65736e49     6084 T vListInse
   22358:	6e457472 30300a64 66353130 54203431     rtEnd.00015f14 T
   22368:	6f507620 6e457472 43726574 69746972      vPortEnterCriti
   22378:	0a6c6163 31303030 34336635 76205420     cal.00015f34 T v
   22388:	74726f50 74697845 74697243 6c616369     PortExitCritical
   22398:	3030300a 34303631 20542065 726f5076     .0001604e T vPor
   223a8:	65724674 30300a65 65353130 54203066     tFree.00015ef0 T
   223b8:	6f507620 56537472 6e614843 72656c64      vPortSVCHandler
   223c8:	3030300a 31653631 20542038 6e755276     .00016e18 T vRun
   223d8:	656d6954 74617453 45727349 7972746e     TimeStatIsrEntry
   223e8:	3030300a 34653631 20542030 6e755276     .00016e40 T vRun
   223f8:	656d6954 74617453 45727349 0a746978     TimeStatIsrExit.
   22408:	31303030 38666136 76205420 6b736154     00016af8 T vTask
   22418:	616c6544 30300a79 63363130 54203464     Delay.00016cd4 T
   22428:	61547620 694d6b73 64657373 6c656959      vTaskMissedYiel
   22438:	30300a64 62363130 54203065 61547620     d.00016be0 T vTa
   22448:	6c506b73 4f656361 6576456e 694c746e     skPlaceOnEventLi
   22458:	300a7473 36313030 20303064 54762054     st.00016d00 T vT
   22468:	506b7361 726f6972 49797469 7265686e     askPriorityInher
   22478:	300a7469 36313030 20303763 54762054     it.00016c70 T vT
   22488:	536b7361 69547465 754f656d 61745374     askSetTimeOutSta
   22498:	300a6574 36313030 20386638 54762054     te.000168f8 T vT
   224a8:	536b7361 65707375 6c41646e 30300a6c     askSuspendAll.00
   224b8:	62363130 54203832 61547620 77536b73     016b28 T vTaskSw
   224c8:	68637469 746e6f43 0a747865 31303030     itchContext.0001
   224d8:	34396262 76205420 70696e73 746e6972     bb94 T vsniprint
   224e8:	30300a66 62623130 54203439 6e737620     f.0001bb94 T vsn
   224f8:	6e697270 300a6674 33313030 20303835     printf.00013580 
   22508:	61772054 725f7469 79646165 3030300a     T wait_ready.000
   22518:	38663031 20542038 65726977 7373656c     10f88 T wireless
   22528:	696e695f 30300a74 66303130 54203464     _init.00010fd4 T
   22538:	72697720 73656c65 65735f73 63697672      wireless_servic
   22548:	30300a65 66353130 54203035 6f507820     e.00015f50 T xPo
   22558:	65507472 5653646e 646e6148 0a72656c     rtPendSVHandler.
   22568:	31303030 34396635 78205420 74726f50     00015f94 T xPort
   22578:	54737953 486b6369 6c646e61 300a7265     SysTickHandler.0
   22588:	36313030 20346533 51782054 65756575     00163e4 T xQueue
   22598:	61657243 754d6574 0a786574 31303030     CreateMutex.0001
   225a8:	63613236 78205420 75657551 6e654765     62ac T xQueueGen
   225b8:	63697265 61657243 300a6574 36313030     ericCreate.00016
   225c8:	20306634 51782054 65756575 656e6547     4f0 T xQueueGene
   225d8:	52636972 69656365 300a6576 36313030     ricReceive.00016
   225e8:	20303432 51782054 65756575 656e6547     240 T xQueueGene
   225f8:	52636972 74657365 3030300a 65323631     ricReset.000162e
   22608:	20542030 65755178 65476575 6972656e     0 T xQueueGeneri
   22618:	6e655363 30300a64 34363130 54203830     cSend.00016408 T
   22628:	75517820 47657565 72656e65 65536369      xQueueGenericSe
   22638:	7246646e 53496d6f 30300a52 34363130     ndFromISR.000164
   22648:	54203838 75517820 47657565 46657669     88 T xQueueGiveF
   22658:	496d6f72 300a5253 36313030 20343236     romISR.00016624 
   22668:	51782054 65756575 65636552 46657669     T xQueueReceiveF
   22678:	496d6f72 300a5253 36313030 20383863     romISR.00016c88 
   22688:	54782054 436b7361 6b636568 54726f46     T xTaskCheckForT
   22698:	4f656d69 300a7475 36313030 20343537     imeOut.00016754 
   226a8:	54782054 436b7361 74616572 30300a65     T xTaskCreate.00
   226b8:	63363130 54203065 61547820 65476b73     016ce0 T xTaskGe
   226c8:	68635374 6c756465 74537265 0a657461     tSchedulerState.
   226d8:	31303030 38303936 78205420 6b736154     00016908 T xTask
   226e8:	54746547 436b6369 746e756f 6d6f7246     GetTickCountFrom
   226f8:	0a525349 31303030 34313936 78205420     ISR.00016914 T x
   22708:	6b736154 72636e49 6e656d65 63695474     TaskIncrementTic
   22718:	30300a6b 64363130 54203039 61547820     k.00016d90 T xTa
   22728:	72506b73 69726f69 69447974 686e6973     skPriorityDisinh
   22738:	74697265 3030300a 30633631 20542030     erit.00016c00 T 
   22748:	73615478 6d65526b 4665766f 456d6f72     xTaskRemoveFromE
   22758:	746e6576 7473694c 3030300a 32613631     ventList.00016a2
   22768:	20542030 73615478 7365526b 41656d75     0 T xTaskResumeA
   22778:	300a6c6c 33313030 20303636 6d782054     ll.00013660 T xm
   22788:	645f7469 62617461 6b636f6c 0000000a              it_datablock..
